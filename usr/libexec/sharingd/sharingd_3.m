void sub_100284808(_BYTE *a1@<X8>)
{
  uint64_t v1;
  sub_1002089E4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(const char **)(v1 + 32), a1);
}

void sub_100284824(void *a1@<X8>)
{
}

void sub_100284840()
{
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RangeAsInitiator()
{
  return &type metadata for SDAuthentication.Operation.RangeAsInitiator;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordAWDLBringUpStart()
{
  return &type metadata for SDAuthentication.Operation.RecordAWDLBringUpStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RangeAsResponder()
{
  return &type metadata for SDAuthentication.Operation.RangeAsResponder;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConfirmAKSSession()
{
  return &type metadata for SDAuthentication.Operation.ConfirmAKSSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckLockRegisteredAndArmed()
{
  return &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmed;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConsumeAKSToken()
{
  return &type metadata for SDAuthentication.Operation.ConsumeAKSToken;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeNextAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseApproveTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseApproveTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseApprovalACMTokenForIncludingFirstAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseApprovalACMTokenForIncludingFirstAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RequestUserApproval()
{
  return &type metadata for SDAuthentication.Operation.RequestUserApproval;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConfirmAKSSessionWithLTKSession()
{
  return &type metadata for SDAuthentication.Operation.ConfirmAKSSessionWithLTKSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.FinishSession()
{
  return &type metadata for SDAuthentication.Operation.FinishSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ConsumeAKSTokenWithLTKSession()
{
  return &type metadata for SDAuthentication.Operation.ConsumeAKSTokenWithLTKSession;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendTokenMessage()
{
  return &type metadata for SDAuthentication.Operation.SendTokenMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeNextAKSTokenWithLTKSessionInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenWithLTKSessionInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendResponseMessage()
{
  return &type metadata for SDAuthentication.Operation.SendResponseMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenWithLTKSessionInMessage()
{
  return &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenWithLTKSessionInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordKeyExchangeEnd()
{
  return &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordKeyExchangeStart()
{
  return &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordDiscoveryEnd()
{
  return &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordRemoteUnlockDate()
{
  return &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordSessionStart()
{
  return &type metadata for SDAuthentication.Operation.RecordSessionStart;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepPairingCreateRecordWithPasscode()
{
  return &type metadata for SDAuthentication.Operation.StepPairingCreateRecordWithPasscode;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordPairing()
{
  return &type metadata for SDAuthentication.Operation.RecordPairing;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepPairingCreateSecret()
{
  return &type metadata for SDAuthentication.Operation.StepPairingCreateSecret;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.EnableDynamicStore()
{
  return &type metadata for SDAuthentication.Operation.EnableDynamicStore;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SignAndStoreRemoteLTK()
{
  return &type metadata for SDAuthentication.Operation.SignAndStoreRemoteLTK;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.IncludeLongTermKeyAndAKSTokenInMessage()
{
  return &type metadata for SDAuthentication.Operation.IncludeLongTermKeyAndAKSTokenInMessage;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.RecordLastRegistration()
{
  return &type metadata for SDAuthentication.Operation.RecordLastRegistration;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.NotifyRegistrationSucceeded()
{
  return &type metadata for SDAuthentication.Operation.NotifyRegistrationSucceeded;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.FinalizeRegistration()
{
  return &type metadata for SDAuthentication.Operation.FinalizeRegistration;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepRegistrationCreateSecret()
{
  return &type metadata for SDAuthentication.Operation.StepRegistrationCreateSecret;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.StepRegisterResponseToken()
{
  return &type metadata for SDAuthentication.Operation.StepRegisterResponseToken;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.CheckRegistered()
{
  return &type metadata for SDAuthentication.Operation.CheckRegistered;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.HandleSucceededResult()
{
  return &type metadata for SDAuthentication.Operation.HandleSucceededResult;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.SendConfirmation()
{
  return &type metadata for SDAuthentication.Operation.SendConfirmation;
}

ValueMetadata *type metadata accessor for SDAuthentication.Operation.ProcessUnpairRequest()
{
  return &type metadata for SDAuthentication.Operation.ProcessUnpairRequest;
}

uint64_t sub_100284ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_100284B00()
{
  unint64_t result = qword_10064B2E8;
  if (!qword_10064B2E8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Data, &type metadata for Data);
    atomic_store(result, &qword_10064B2E8);
  }

  return result;
}

uint64_t sub_100284B44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  uint64_t v4 = *(void *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100284BA0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002847D0(a1);
}

void sub_100284BB4(void *a1@<X8>)
{
}

uint64_t sub_100284BCC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064B3E8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064B3E8);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100284C5C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
  if ((*(_BYTE *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8) & 1) == 0)
  {
    unint64_t v21 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
    *(_DWORD *)uint64_t v22 = 1;
    *(void *)(v22 + 8) = 0xD000000000000038LL;
    *(void *)(v22 + 16) = 0x80000001005083B0LL;
    return swift_willThrow(v19);
  }

  uint64_t v7 = v4;
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v12 = *(void *)(v7 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  v13 = *(char **)(v7 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t v14 = sub_10020948C();
  if (v15 >> 60 == 15)
  {
    _StringGuts.grow(_:)(32LL);
    *(void *)&double v16 = swift_bridgeObjectRelease((const char *)0xE000000000000000LL).n128_u64[0];
    swift_bridgeObjectRetain(v13, v16);
    v17._countAndFlagsBits = v12;
    v17._object = v13;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(v13);
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD00000000000001ELL;
    *(void *)(v20 + 16) = 0x8000000100508370LL;
    return swift_willThrow(v19);
  }

  unint64_t v44 = a2;
  uint64_t v43 = a3;
  uint64_t v45 = v14;
  unint64_t v47 = v15;
  char v24 = *(_BYTE *)(v7 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role);
  v25 = (os_unfair_lock_s *)(*(void *)(v11 + 112) + 16LL);
  os_unfair_lock_lock(v25);
  sub_1002737FC(v26, (uint64_t (*)(void))sub_100284650);
  if (v5)
  {
    os_unfair_lock_unlock(v25);
    return sub_100189B0C(v45, v47);
  }

  else
  {
    os_unfair_lock_unlock(v25);
    __chkstk_darwin(v27);
    v29 = v28 + 4;
    os_unfair_lock_lock(v28 + 4);
    sub_1002737FC(v30, sub_10020B660);
    os_unfair_lock_unlock(v29);
    uint64_t v31 = v45;
    uint64_t v32 = a1;
    uint64_t v46 = a1;
    unint64_t v33 = v44;
    if (v44 >> 60 == 15)
    {
      sub_1001A4C04(v48, v49);
      uint64_t v32 = a1;
      uint64_t v46 = v48;
      unint64_t v33 = v49;
    }

    unint64_t v34 = *(void *)(v7 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type) - 4LL;
    uint64_t v35 = v31;
    if (v34 > 7) {
      uint64_t v36 = 2LL;
    }
    else {
      uint64_t v36 = qword_1004D2460[v34];
    }
    sub_1001A4C04(v32, v44);
    sub_1001FC810(v36, v24, v48, v49, v35, v47, v46, v33, v49 >> 60 != 15);
    *(void *)uint64_t v6 = v37;
    *(_BYTE *)(v6 + 8) = 0;
    sub_10031F978(v43, a4);
    uint64_t v39 = v38;
    unint64_t v41 = v40;
    uint64_t v42 = sub_100183098(&qword_100645150);
    Optional.tryUnwrap(_:file:line:)( 0xD000000000000019LL,  0x8000000100508390LL,  0xD000000000000062LL,  0x8000000100508050LL,  83LL,  v42);
    sub_100189B0C(v39, v41);
    sub_100189B0C(v48, v49);
    sub_100189B0C(v46, v33);
    sub_100189B20(v48, v49);
    sub_100189B0C(v35, v47);
    return v48;
  }

void sub_1002850D0()
{
  char v2 = *(_BYTE *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  uint64_t v20 = *(_BYTE **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  char v21 = v2;
  uint64_t v3 = sub_100183098(&qword_10064B338);
  Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000062LL,  0x8000000100508050LL,  92LL,  v3);
  if (!v1)
  {
    uint64_t v4 = v19;
    if (qword_1006440A8 != -1) {
      swift_once(&qword_1006440A8, sub_100284BCC);
    }
    uint64_t v5 = type metadata accessor for Logger(0LL);
    uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_10064B3E8);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v18 = v19;
      v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v10 = (_BYTE *)swift_slowAlloc(32LL, -1LL);
      uint64_t v20 = v10;
      *(_DWORD *)v9 = 136315138;
      uint64_t v11 = sub_100320180();
      v13 = (const char *)v12;
      uint64_t v19 = sub_10018CDB4(v11, v12, (uint64_t *)&v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v9 + 4, v9 + 12);
      uint64_t v14 = v13;
      uint64_t v4 = v18;
      swift_bridgeObjectRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Confirm aksSession: %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1LL, -1LL);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    uint64_t v19 = 0LL;
    uint64_t v20 = 0LL;
    int v15 = aks_remote_peer_confirm(v4, &v20, &v19);
    uint64_t v16 = sub_10032028C(v15, v20, v19, 0xD000000000000021LL, (const char *)0x80000001005085F0LL);
    sub_100189B0C(v16, v17);
    sub_10028534C();
  }

void sub_10028534C()
{
  uint64_t v1 = v0;
  if (qword_1006440A8 != -1) {
    swift_once(&qword_1006440A8, sub_100284BCC);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064B3E8);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = type metadata accessor for UUID(0LL);
    uint64_t v9 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter(v8, v9);
    unint64_t v12 = (const char *)v11;
    uint64_t v13 = sub_10018CDB4(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "End AKSSession: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v0, 2LL);
  }

  sub_1002068AC();
}

void sub_100285550()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112LL)
                          + 16LL);
  os_unfair_lock_lock(v1);
  sub_1002737FC(v2, sub_100287514);
  os_unfair_lock_unlock(v1);
}

void sub_1002855CC()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v3);
  os_log_type_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role) & 1) != 0)
  {
    unint64_t v6 = sub_100187014();
    uint64_t v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v6, 0LL, 0LL);
    *(_DWORD *)uint64_t v8 = 10;
    *(void *)(v8 + 8) = 0xD00000000000002DLL;
    *(void *)(v8 + 16) = 0x80000001005083F0LL;
LABEL_5:
    swift_willThrow(v7);
    return;
  }

  unint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  uint64_t v10 = *(char **)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t v12 = sub_10020948C();
  if (v13 >> 60 == 15)
  {
    unint64_t v51 = 0LL;
    v52 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(32LL);
    *(void *)&double v14 = swift_bridgeObjectRelease(v52).n128_u64[0];
    unint64_t v51 = 0xD00000000000001ELL;
    v52 = (const char *)0x8000000100508370LL;
    swift_bridgeObjectRetain(v10, v14);
    v15._countAndFlagsBits = v11;
    v15._object = v10;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v10);
    unint64_t v16 = v51;
    unint64_t v17 = v52;
    unint64_t v18 = sub_100187014();
    uint64_t v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 10;
    *(void *)(v19 + 8) = v16;
    *(void *)(v19 + 16) = v17;
    goto LABEL_5;
  }

  uint64_t v20 = v12;
  unint64_t v21 = v13;
  __chkstk_darwin(v12);
  *(&v51 - 4) = v9;
  *(&v51 - 3) = v11;
  v23 = v22 + 4;
  *(&v51 - 2) = (unint64_t)v10;
  os_unfair_lock_lock(v22 + 4);
  sub_1002737FC(v24, (uint64_t (*)(void))sub_1002847D0);
  if (v1)
  {
    os_unfair_lock_unlock(v23);
    __break(1u);
  }

  else
  {
    os_unfair_lock_unlock(v23);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v26 = sub_10001204C(isa);

    switch(v26)
    {
      case 0LL:
        unint64_t v27 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 33;
        unint64_t v30 = 0xD00000000000001ALL;
        uint64_t v31 = "got SDAKSPeerStateNotSetUp";
        goto LABEL_21;
      case 1LL:
        unint64_t v42 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 10;
        unint64_t v30 = 0xD00000000000001ELL;
        uint64_t v31 = "got SDAKSPeerStateNotAvailable";
        goto LABEL_21;
      case 2LL:
        unint64_t v34 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 11;
        unint64_t v30 = 0xD000000000000025LL;
        uint64_t v31 = "got SDAKSPeerStateOnlyEscrowAvailable";
        goto LABEL_21;
      case 3LL:
        sub_100224DB4((uint64_t)v5);
        sub_100189B0C(v20, v21);
        return;
      case 4LL:
        unint64_t v32 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v32, 0LL, 0LL);
        int v33 = 8;
        goto LABEL_15;
      case 5LL:
        unint64_t v44 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v44, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 27;
        unint64_t v30 = 0xD00000000000002CLL;
        uint64_t v31 = "got SDAKSPeerStateNoRemoteUnlockWithinWindow";
        goto LABEL_21;
      case 6LL:
        unint64_t v45 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v45, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 27;
        unint64_t v30 = 0xD00000000000002ELL;
        uint64_t v31 = "got SDAKSPeerStateTooManyFailedPasscodeEntries";
        goto LABEL_21;
      case 7LL:
        unint64_t v43 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v43, 0LL, 0LL);
        int v33 = 5;
LABEL_15:
        *(_DWORD *)uint64_t v29 = v33;
        unint64_t v30 = 0xD00000000000002ELL;
        uint64_t v31 = "got SDAKSPeerStateNoPasscodeUnlockWithinWindow";
        goto LABEL_21;
      case 8LL:
        unint64_t v48 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v48, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 27;
        unint64_t v30 = 0xD00000000000001CLL;
        uint64_t v31 = "got SDAKSPeerStateBioLockout";
        goto LABEL_21;
      case 9LL:
        unint64_t v51 = 0LL;
        v52 = (const char *)0xE000000000000000LL;
        _StringGuts.grow(_:)(35LL);
        v35._countAndFlagsBits = 0xD000000000000021LL;
        v35._object = (void *)0x8000000100508460LL;
        String.append(_:)(v35);
        uint64_t v36 = type metadata accessor for Date(0LL);
        uint64_t v37 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
        DefaultStringInterpolation.appendInterpolation<A>(_:)(v5, v36, v37);
        unint64_t v38 = v51;
        uint64_t v39 = v52;
        unint64_t v40 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v40, 0LL, 0LL);
        *(_DWORD *)uint64_t v41 = 36;
        *(void *)(v41 + 8) = v38;
        *(void *)(v41 + 16) = v39;
        goto LABEL_23;
      case 10LL:
        unint64_t v46 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v46, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 11;
        unint64_t v30 = 0x6967657220746F4ELL;
        unint64_t v47 = 0xEE00646572657473LL;
        goto LABEL_22;
      default:
        Class v49 = Data._bridgeToObjectiveC()().super.isa;
        sub_1000122CC(v49);

        unint64_t v50 = sub_100187014();
        uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v50, 0LL, 0LL);
        *(_DWORD *)uint64_t v29 = 10;
        unint64_t v30 = 0xD000000000000034LL;
        uint64_t v31 = "got SDAKSPeerStateUnknown, see logs for more details";
LABEL_21:
        unint64_t v47 = (unint64_t)(v31 - 32) | 0x8000000000000000LL;
LABEL_22:
        *(void *)(v29 + 8) = v30;
        *(void *)(v29 + 16) = v47;
LABEL_23:
        swift_willThrow(v28);
        sub_100189B0C(v20, v21);
        sub_100224DB4((uint64_t)v5);
        break;
    }
  }

uint64_t sub_100285B9C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
  if ((*(_BYTE *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8) & 1) == 0)
  {
    unint64_t v21 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
    *(_DWORD *)uint64_t v22 = 1;
    *(void *)(v22 + 8) = 0xD000000000000038LL;
    *(void *)(v22 + 16) = 0x80000001005083B0LL;
    return swift_willThrow(v19);
  }

  uint64_t v7 = v4;
  uint64_t v11 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  uint64_t v10 = *(char **)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t result = sub_100285EE8(a1, a2, v11, v10);
  if (v5) {
    return result;
  }
  uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v14 = sub_10020948C();
  if (v15 >> 60 == 15)
  {
    _StringGuts.grow(_:)(32LL);
    *(void *)&double v16 = swift_bridgeObjectRelease((const char *)0xE000000000000000LL).n128_u64[0];
    swift_bridgeObjectRetain(v10, v16);
    v17._countAndFlagsBits = v11;
    v17._object = v10;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(v10);
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 10;
    *(void *)(v20 + 8) = 0xD00000000000001ELL;
    *(void *)(v20 + 16) = 0x8000000100508370LL;
    return swift_willThrow(v19);
  }

  unint64_t v23 = v15;
  uint64_t v36 = v14;
  char v33 = *(_BYTE *)(v7 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role);
  uint64_t v24 = (os_unfair_lock_s *)(*(void *)(v13 + 112) + 16LL);
  os_unfair_lock_lock(v24);
  sub_1002737FC(v25, (uint64_t (*)(void))sub_100284650);
  os_unfair_lock_unlock(v24);
  else {
    uint64_t v26 = 6LL;
  }
  sub_1001FC810(v26, v33, v34, v35, v36, v23, 0LL, 0xF000000000000000LL, 0);
  *(void *)uint64_t v6 = v27;
  *(_BYTE *)(v6 + 8) = 0;
  sub_10031F978(a3, a4);
  uint64_t v29 = v28;
  unint64_t v31 = v30;
  uint64_t v32 = sub_100183098(&qword_100645150);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000019LL,  0x8000000100508390LL,  0xD000000000000062LL,  0x8000000100508050LL,  182LL,  v32);
  sub_100189B0C(v29, v31);
  sub_100189B20(v34, v35);
  sub_100189B0C(v36, v23);
  return v34;
}

uint64_t sub_100285EE8(uint64_t a1, unint64_t a2, uint64_t a3, char *a4)
{
  if (a2 >> 60 == 15)
  {
    unint64_t v6 = sub_100187014();
    uint64_t v7 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v6, 0LL, 0LL);
    *(_DWORD *)uint64_t v8 = 1;
    *(void *)(v8 + 8) = 0xD000000000000011LL;
    *(void *)(v8 + 16) = 0x8000000100508640LL;
    return swift_willThrow(v7);
  }

  else
  {
    uint64_t v14 = *(void **)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
    unint64_t v15 = (os_unfair_lock_s *)(v14[14] + 16LL);
    sub_10019BA8C(a1, a2);
    os_unfair_lock_lock(v15);
    sub_1002737FC(v16, (uint64_t (*)(void))sub_100284650);
    os_unfair_lock_unlock(v15);
    if (v5)
    {
      return sub_100189B0C(a1, a2);
    }

    else
    {
      uint64_t v33 = a3;
      uint64_t v17 = sub_100206048();
      sub_100206074();
      sub_1001FE0D4(v17, v34, v35);
      uint64_t v19 = v18;
      unint64_t v21 = v20;
      uint64_t v22 = (const char *)v14[3];
      uint64_t v32 = v14[2];
      char v23 = sub_100206048();
      uint64_t v24 = &kSecAttrAccessibleAfterFirstUnlock;
      if ((v23 & 0xFE) != 0) {
        uint64_t v24 = &kSecAttrAccessibleAlways;
      }
      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v24);
      uint64_t v30 = v26;
      uint64_t v31 = v25;
      uint64_t v27 = _s9RemoteLTKCMa(0LL);
      swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
      *(void *)&double v28 = swift_bridgeObjectRetain(a4).n128_u64[0];
      swift_bridgeObjectRetain(v22, v28);
      sub_10019BA8C(v19, v21);
      uint64_t v29 = sub_100343D20(v33, a4, v32, (uint64_t)v22, v19, v21, v31, v30);
      sub_100189B20(v19, v21);
      swift_bridgeObjectRelease(a4);
      sub_1002064EC(v29);
      swift_release(v29);
      sub_100189B20(v19, v21);
      sub_100189B20(v34, v35);
      return sub_100189B0C(a1, a2);
    }
  }

_BYTE *sub_100286138(uint64_t a1, _BYTE *a2)
{
  uint64_t v4 = v2;
  char v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  unint64_t v50 = *(_BYTE **)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  LOBYTE(v51) = v7;
  uint64_t v8 = sub_100183098(&qword_10064B338);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000033LL,  0x80000001005085B0LL,  0xD000000000000062LL,  0x8000000100508050LL,  186LL,  v8);
  if (!v3)
  {
    uint64_t v9 = v49[0];
    sub_10031F978(a1, (unint64_t)a2);
    uint64_t v11 = v10;
    unint64_t v13 = v12;
    v49[0] = v10;
    v49[1] = v12;
    uint64_t v14 = sub_100183098(&qword_100645150);
    Optional.tryUnwrap(_:file:line:)( 0xD000000000000019LL,  0x8000000100508390LL,  0xD000000000000062LL,  0x8000000100508050LL,  187LL,  v14);
    sub_100189B0C(v11, v13);
    a2 = v50;
    if (qword_1006440A8 != -1) {
      swift_once(&qword_1006440A8, sub_100284BCC);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_10064B3E8);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Started createAndStoreRangingKey", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    sub_1002866E0();
    if ((unint64_t)(*(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_type)
                          - 3LL) <= 1)
    {
      unint64_t v50 = 0LL;
      v49[0] = 0LL;
      int v21 = aks_remote_peer_confirm(v9, &v50, v49);
      uint64_t v22 = sub_10032028C(v21, v50, v49[0], 0xD000000000000021LL, (const char *)0x80000001005085F0LL);
      unint64_t v24 = v23;
      if (v23 >> 60 == 15)
      {
        uint64_t v25 = (os_log_s *)Logger.logObject.getter(v22);
        os_log_type_t v26 = static os_log_type_t.error.getter(v25);
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v27 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed to generate escrow", v27, 2u);
          swift_slowDealloc(v27, -1LL, -1LL);
        }
      }

      else
      {
        uint64_t v28 = v22;
        uint64_t v29 = sub_10019BA8C(v22, v23);
        uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
        os_log_type_t v31 = static os_log_type_t.default.getter();
        int v32 = v31;
        unint64_t v48 = v30;
        if (os_log_type_enabled(v30, v31))
        {
          int v46 = v32;
          uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          unint64_t v47 = (Class *)swift_slowAlloc(8LL, -1LL);
          unint64_t v45 = v33;
          *(_DWORD *)uint64_t v33 = 138412290;
          unint64_t v44 = v33 + 4;
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          unint64_t v50 = isa;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51, v33 + 4, v33 + 12);
          *unint64_t v47 = isa;
          sub_100189B0C(v28, v24);
          _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v46, "Generated escrow: %@", v45, 0xCu);
          uint64_t v35 = sub_100183098(&qword_1006454E0);
          swift_arrayDestroy(v47, 1LL, v35);
          swift_slowDealloc(v47, -1LL, -1LL);
          swift_slowDealloc(v45, -1LL, -1LL);
        }

        else
        {
          sub_100189B0C(v28, v24);
        }

        unint64_t v48 = (os_log_s *)&v44;
        uint64_t v37 = __chkstk_darwin(v36);
        __chkstk_darwin(v37);
        uint64_t v39 = v38 + 4;
        os_unfair_lock_lock(v38 + 4);
        sub_1002737FC(v40, sub_100287550);
        os_unfair_lock_unlock(v39);
        sub_100189B0C(v28, v24);
      }
    }

    unint64_t v50 = 0LL;
    v49[0] = 0LL;
    int v41 = aks_remote_peer_confirm(v9, &v50, v49);
    uint64_t v42 = sub_10032028C(v41, v50, v49[0], 0xD000000000000021LL, (const char *)0x80000001005085F0LL);
    sub_100189B0C(v42, v43);
    sub_10028534C();
  }

  return a2;
}

uint64_t sub_1002866E0()
{
  char v2 = *(_BYTE *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  uint64_t v11 = *(_BYTE **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  char v12 = v2;
  uint64_t v3 = sub_100183098(&qword_10064B338);
  uint64_t result = Optional.tryUnwrap(_:file:line:)( 0xD000000000000033LL,  0x80000001005085B0LL,  0xD000000000000062LL,  0x8000000100508050LL,  291LL,  v3);
  if (!v1)
  {
    uint64_t v5 = v10;
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v6 = aks_remote_session_token(v5, &v11, &v10);
    uint64_t v7 = sub_1001FFA50(v6, v11, v10, 0xD00000000000001ELL, 0x8000000100508660LL);
    unint64_t v9 = v8;
    sub_100207CC8( v7,  v8,  *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID),  *(const char **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8));
    return sub_100189B20(v7, v9);
  }

  return result;
}

uint64_t sub_10028683C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v30 = a2;
  uint64_t v9 = type metadata accessor for String.Encoding(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  LOBYTE(v11) = *(_BYTE *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8);
  uint64_t v31 = *(void *)(v4 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession);
  char v32 = v11;
  uint64_t v13 = sub_100183098(&qword_10064B338);
  uint64_t result = Optional.tryUnwrap(_:file:line:)( 0xD000000000000033LL,  0x80000001005085B0LL,  0xD000000000000062LL,  0x8000000100508050LL,  209LL,  v13);
  if (!v5)
  {
    sub_10031F978(a1, v30);
    uint64_t v17 = sub_100189B0C(v15, v16);
    static String.Encoding.utf8.getter(v17);
    uint64_t v18 = String.data(using:allowLossyConversion:)(v12, 0LL, a3, a4);
    unint64_t v20 = v19;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (v20 >> 60 == 15)
    {
      unint64_t v21 = sub_100187014();
      uint64_t v22 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v21, 0LL, 0LL);
      *(_DWORD *)uint64_t v23 = 10;
      *(void *)(v23 + 8) = 0xD000000000000017LL;
      *(void *)(v23 + 16) = 0x8000000100508680LL;
      return swift_willThrow(v22);
    }

    else
    {
      sub_10019BA8C(v18, v20);
      sub_10031FDB0(v18, v20);
      sub_100189B0C(v18, v20);
      sub_10028534C();
      if (qword_1006440A8 != -1) {
        swift_once(&qword_1006440A8, sub_100284BCC);
      }
      uint64_t v24 = type metadata accessor for Logger(0LL);
      uint64_t v25 = sub_100186DE4(v24, (uint64_t)qword_10064B3E8);
      os_log_type_t v26 = (os_log_s *)Logger.logObject.getter(v25);
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Started createAndStoreRangingKey", v28, 2u);
        swift_slowDealloc(v28, -1LL, -1LL);
      }

      sub_1002866E0();
      return sub_100189B0C(v18, v20);
    }
  }

  return result;
}

uint64_t sub_100286B00(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession;
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8) & 1) == 0)
  {
    unint64_t v18 = sub_100187014();
    uint64_t v16 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 1;
    *(void *)(v19 + 8) = 0xD000000000000038LL;
    *(void *)(v19 + 16) = 0x80000001005083B0LL;
    return swift_willThrow(v16);
  }

  uint64_t v5 = v2;
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK);
  uint64_t v10 = *(void *)(v5 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID);
  uint64_t v9 = *(char **)(v5 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID + 8);
  uint64_t v11 = sub_10020948C();
  if (v12 >> 60 == 15)
  {
    _StringGuts.grow(_:)(32LL);
    *(void *)&double v13 = swift_bridgeObjectRelease((const char *)0xE000000000000000LL).n128_u64[0];
    swift_bridgeObjectRetain(v9, v13);
    v14._countAndFlagsBits = v10;
    v14._object = v9;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(v9);
    unint64_t v15 = sub_100187014();
    uint64_t v16 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v15, 0LL, 0LL);
    *(_DWORD *)uint64_t v17 = 10;
    *(void *)(v17 + 8) = 0xD00000000000001ELL;
    *(void *)(v17 + 16) = 0x8000000100508370LL;
    return swift_willThrow(v16);
  }

  unint64_t v21 = v12;
  uint64_t v33 = v11;
  char v22 = *(_BYTE *)(v5 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_role);
  uint64_t v23 = (os_unfair_lock_s *)(*(void *)(v8 + 112) + 16LL);
  os_unfair_lock_lock(v23);
  sub_1002737FC(v24, (uint64_t (*)(void))sub_100284650);
  os_unfair_lock_unlock(v23);
  if (v3) {
    return sub_100189B0C(v33, v21);
  }
  sub_1001FC810(5LL, v22, v31, v32, v33, v21, 0LL, 0xF000000000000000LL, 0);
  *(void *)uint64_t v4 = v25;
  *(_BYTE *)(v4 + 8) = 0;
  sub_10031F978(a1, a2);
  uint64_t v27 = v26;
  unint64_t v29 = v28;
  uint64_t v30 = sub_100183098(&qword_100645150);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000019LL,  0x8000000100508390LL,  0xD000000000000062LL,  0x8000000100508050LL,  240LL,  v30);
  sub_100189B0C(v27, v29);
  sub_100189B20(v31, v32);
  sub_100189B0C(v33, v21);
  return v31;
}

void *sub_100286E1C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  char v7 = v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession + 8];
  __src = *(void **)&v2[OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_aksSession];
  LOBYTE(v21) = v7;
  uint64_t v8 = sub_100183098(&qword_10064B338);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000033LL,  0x80000001005085B0LL,  0xD000000000000062LL,  0x8000000100508050LL,  244LL,  v8);
  if (!v3)
  {
    Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000062LL,  0x8000000100508050LL,  87LL,  v8);
    uint64_t v9 = LODWORD(v19[0]);
    sub_10031F978(a1, a2);
    uint64_t v11 = v10;
    unint64_t v13 = v12;
    v19[1] = v12;
    uint64_t v14 = sub_100183098(&qword_100645150);
    Optional.tryUnwrap(_:file:line:)( 0xD000000000000019LL,  0x8000000100508390LL,  0xD000000000000062LL,  0x8000000100508050LL,  245LL,  v14);
    sub_100189B0C(v11, v13);
    uint64_t v4 = __src;
    __src = 0LL;
    v19[0] = 0LL;
    int v15 = aks_remote_peer_confirm(v9, &__src, v19);
    uint64_t v16 = sub_10032028C(v15, __src, v19[0], 0xD000000000000021LL, (const char *)0x80000001005085F0LL);
    sub_100189B0C(v16, v18);
    sub_10028534C();
  }

  return v4;
}

void sub_100287078(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_100183098(&qword_10064B338);
  Optional.tryUnwrap(_:file:line:)( 0xD000000000000033LL,  0x80000001005085B0LL,  0xD000000000000062LL,  0x8000000100508050LL,  252LL,  v5);
  if (!v2)
  {
    Optional.tryUnwrap(_:file:line:)( 0xD00000000000002CLL,  0x8000000100508020LL,  0xD000000000000062LL,  0x8000000100508050LL,  87LL,  v5);
    sub_10031F978(a1, a2);
    sub_100189B0C(v6, v7);
    int v8 = aks_remote_peer_setup(v11, 0LL, 0LL, 0LL, 0LL);
    uint64_t v9 = sub_10032028C(v8, 0LL, 0LL, 0xD00000000000001FLL, (const char *)0x8000000100508620LL);
    sub_100189B0C(v9, v10);
    sub_10028534C();
  }

void sub_100287224()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112LL)
                          + 16LL);
  os_unfair_lock_lock(v1);
  sub_1002737FC(v2, sub_100287550);
  os_unfair_lock_unlock(v1);
}

void sub_1002872AC()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112LL)
                          + 16LL);
  os_unfair_lock_lock(v1);
  sub_1002737FC(v2, sub_100287550);
  os_unfair_lock_unlock(v1);
}

void sub_10028732C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(*(void *)(v0
                                                  + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK)
                                      + 112LL)
                          + 16LL);
  os_unfair_lock_lock(v1);
  sub_1002737FC(v2, sub_100287550);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1002873B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_sessionID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_remoteDeviceID
                                      + 8));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication10LTKSession_localLTK));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10028742C()
{
  return _s10LTKSessionCMa(0LL);
}

uint64_t _s10LTKSessionCMa(uint64_t a1)
{
  uint64_t result = qword_10064B428;
  if (!qword_10064B428) {
    return swift_getSingletonMetadata(a1, &_s10LTKSessionCMn);
  }
  return result;
}

uint64_t sub_100287470(uint64_t a1)
{
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[2] = &unk_1004D2400;
    v4[3] = &unk_1004D2418;
    v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = &unk_1004D2430;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100287514()
{
  return sub_1002071E0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(const char **)(v0 + 32), *(void *)(v0 + 40));
}

void sub_100287530(void *a1)
{
}

uint64_t sub_100287550()
{
  return sub_10020B660();
}

uint64_t sub_100287564(uint64_t a1)
{
  return sub_1002083C8(a1, *(void *)(v1 + 16), *(const char **)(v1 + 24));
}

void sub_10028757C(uint64_t a1)
{
}

uint64_t sub_100287594(uint64_t *a1)
{
  return sub_1002085B0(a1, *(_BYTE *)(v1 + 16), *(void *)(v1 + 24), *(const char **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1002875B4()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1002875EC()
{
  return type metadata accessor for SDAirDropContentHandleriCloudDrive(0LL);
}

uint64_t type metadata accessor for SDAirDropContentHandleriCloudDrive(uint64_t a1)
{
  uint64_t result = qword_10064B508;
  if (!qword_10064B508) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropContentHandleriCloudDrive);
  }
  return result;
}

void sub_100287630(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

uint64_t sub_10028769C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriCloudDrive(0LL);
  uint64_t v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  uint64_t v4 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropContentHandleriCloudDrive_iCloudDriveFolder;
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))( v4,  1LL,  1LL,  v5);
  *a1 = v3;
  return result;
}

uint64_t sub_10028770C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_100266ABC(a1, a2, a3);
}

uint64_t sub_10028775C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v6);
  int v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a2, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0LL, 1LL, v9);
  sub_10026664C(a1, 0LL, 0, a3);
  return sub_100187100((uint64_t)v8, (uint64_t *)&unk_1006563F0);
}

uint64_t sub_100287848()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064B5D8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064B5D8);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002878D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  unint64_t v3 = (*(void *)(*(void *)(sub_100183098((uint64_t *)&unk_100645130) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[4] = swift_task_alloc(v3);
  v2[5] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for URL(0LL);
  v2[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[7] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[8] = swift_task_alloc(v6);
  v2[9] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v2[10] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v2[13] = static AirDropActor.shared;
  return swift_task_switch(sub_1002879D8, v9, 0LL);
}

void sub_1002879D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = SFAirDropReceive.AskRequest.type.getter(a1);
  char v6 = SFAirDrop.TransferType.isLinks.getter(v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    uint64_t v14 = 0LL;
LABEL_5:
    uint64_t v16 = *(void *)(v1 + 64);
    uint64_t v15 = *(void *)(v1 + 72);
    uint64_t v18 = *(void *)(v1 + 32);
    uint64_t v17 = *(void *)(v1 + 40);
    swift_task_dealloc(*(void *)(v1 + 96));
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    (*(void (**)(uint64_t))(v1 + 8))(v14);
    return;
  }

  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 40);
  unsigned int v11 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v7);
  sub_10028CA78((uint64_t)v11, v10);
  __n128 v12 = swift_bridgeObjectRelease(v11);
  unint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v9 + 48);
  if (v13(v10, 1LL, v8, v12) == 1)
  {
    sub_100187100(*(void *)(v1 + 40), (uint64_t *)&unk_100645130);
    goto LABEL_4;
  }

  uint64_t v19 = *(void *)(v1 + 24);
  v53 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 + 56) + 32LL);
  v53(*(void *)(v1 + 72), *(void *)(v1 + 40), *(void *)(v1 + 48));
  sub_100288574(v20);
  uint64_t v21 = *(void **)(v19 + 16);
  *(void *)(v19 + 16) = v22;

  if (!*(void *)(v19 + 16))
  {
    uint64_t v45 = *(void *)(v1 + 24);
    uint64_t v46 = type metadata accessor for SDAirDropContentHandlerWebLinks();
    uint64_t v47 = swift_allocObject(v46, 16LL, 7LL);
    uint64_t v48 = *(void *)(v45 + 24);
    *(void *)(v45 + 24) = v47;
    swift_release(v48);
    uint64_t v49 = *(void *)(v45 + 24);
    *(void *)(v1 + 112) = v49;
    if (v49)
    {
      uint64_t v50 = *(void *)(v1 + 104);
      swift_retain(v49);
      swift_task_switch(sub_100287DC0, v50, 0LL);
      return;
    }

    (*(void (**)(void, void))(*(void *)(v1 + 56) + 8LL))(*(void *)(v1 + 72), *(void *)(v1 + 48));
    goto LABEL_4;
  }

  uint64_t v24 = *(void *)(v1 + 56);
  uint64_t v25 = SFAirDropReceive.AskRequest.urlItems.getter(v23);
  int64_t v26 = 0LL;
  uint64_t v51 = v25 + 56;
  uint64_t v27 = -1LL;
  uint64_t v28 = -1LL << *(_BYTE *)(v25 + 32);
  if (-v28 < 64) {
    uint64_t v27 = ~(-1LL << -(char)v28);
  }
  unint64_t v29 = v27 & *(void *)(v25 + 56);
  int64_t v52 = (unint64_t)(63 - v28) >> 6;
  while (1)
  {
    if (v29)
    {
      unint64_t v30 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      unint64_t v31 = v30 | (v26 << 6);
      goto LABEL_26;
    }

    int64_t v32 = v26 + 1;
    if (__OFADD__(v26, 1LL))
    {
      __break(1u);
      goto LABEL_35;
    }

    if (v32 >= v52) {
      goto LABEL_31;
    }
    unint64_t v33 = *(void *)(v51 + 8 * v32);
    ++v26;
    if (!v33)
    {
      int64_t v26 = v32 + 1;
      if (v32 + 1 >= v52) {
        goto LABEL_31;
      }
      unint64_t v33 = *(void *)(v51 + 8 * v26);
      if (!v33)
      {
        int64_t v26 = v32 + 2;
        if (v32 + 2 >= v52) {
          goto LABEL_31;
        }
        unint64_t v33 = *(void *)(v51 + 8 * v26);
        if (!v33) {
          break;
        }
      }
    }

uint64_t sub_100287DC0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_task_dealloc(*(void *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

void sub_100287E3C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v4);
  char v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for URL(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(v2 + 40);
  if (v11)
  {
    uint64_t v12 = *(void *)(v2 + 32);
    __n128 v13 = swift_bridgeObjectRetain((const char *)*(void *)(v2 + 40));
    uint64_t v14 = SFAirDropReceive.AskRequest.urlItems.getter(v13);
    unint64_t v15 = *(void *)(v14 + 16);
    __n128 v16 = swift_bridgeObjectRelease((const char *)v14);
    uint64_t v17 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v16);
    sub_10028CA78((uint64_t)v17, (uint64_t)v6);
    __n128 v18 = swift_bridgeObjectRelease(v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1LL, v7, v18) == 1)
    {
      sub_100187100((uint64_t)v6, (uint64_t *)&unk_100645130);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      URL._bridgeToObjectiveC()(v24);
      int64_t v26 = v25;
      id v27 = [v25 iWorkDocumentName];

      if (v27)
      {
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
        unint64_t v30 = v29;

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        if (v15 == 1)
        {
          uint64_t v69 = 0x545F4E5245444F4DLL;
          unint64_t v70 = 0xEF524546534E4152LL;
          swift_bridgeObjectRetain("CONTACT_INFORMATION");
          v31._countAndFlagsBits = 95LL;
          v31._object = (void *)0xE100000000000000LL;
          String.append(_:)(v31);
          v32._countAndFlagsBits = 0xD000000000000015LL;
          v32._object = "CONTACT_INFORMATION";
          String.append(_:)(v32);
          swift_bridgeObjectRelease("CONTACT_INFORMATION");
          if ((a2 & 1) != 0)
          {
            v33._countAndFlagsBits = 0x4C4154495041435FLL;
            v33._object = (void *)0xEC00000044455A49LL;
            String.append(_:)(v33);
          }

          v34._countAndFlagsBits = 0x545845545FLL;
          v34._object = (void *)0xE500000000000000LL;
          String.append(_:)(v34);
          uint64_t v35 = (const char *)v70;
          uint64_t v36 = sub_100183098(&qword_100646EA0);
          swift_arrayDestroy(&qword_1005D0B90, 1LL, v36);
          NSString v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v35);
          id v39 = (id)SFLocalizedStringForKey(v37, v38);

          if (v39)
          {
            uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
            uint64_t v42 = v41;

            uint64_t v43 = sub_100183098(&qword_1006483E0);
            uint64_t v44 = swift_allocObject(v43, 112LL, 7LL);
            *(_OWORD *)(v44 + 16) = xmmword_1004CD530;
            *(void *)(v44 + 56) = &type metadata for String;
            unint64_t v45 = sub_10021366C();
            *(void *)(v44 + 32) = v12;
            *(void *)(v44 + 40) = v11;
            *(void *)(v44 + 96) = &type metadata for String;
            *(void *)(v44 + 104) = v45;
            *(void *)(v44 + 64) = v45;
            *(void *)(v44 + 72) = v28;
            *(void *)(v44 + 80) = v30;
            static String.localizedStringWithFormat(_:_:)(v40, v42, v44);
            *(void *)&double v46 = swift_bridgeObjectRelease(v42).n128_u64[0];
            swift_bridgeObjectRelease((const char *)v44, v46);
            return;
          }

uint64_t sub_100288458@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(v2 + 24);
  if (v8)
  {
    swift_retain(*(void *)(v2 + 24));
    sub_1001EDCC4(a1, a2);
    return swift_release(v8);
  }

  else
  {
    uint64_t v10 = *(void **)(v2 + 16);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v7, 1LL, 1LL, v11);
    id v12 = v10;
    sub_10026664C(a1, v10, 1, a2);

    return sub_100187100((uint64_t)v7, (uint64_t *)&unk_1006563F0);
  }

void sub_100288574(NSURL *a1@<X8>)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(a1);
  uint64_t v4 = v3;
  unsigned int v5 = [v3 isiWorkURL];

  if (v5)
  {
    URL._bridgeToObjectiveC()(v6);
    uint64_t v8 = v7;
    id v9 = [v7 iWorkApplicationName];

    if (!v9)
    {
      __break(1u);
      return;
    }

    static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    uint64_t v11 = v10;

    unint64_t v12 = sub_1001CCE8C();
    uint64_t v13 = StringProtocol.capitalized.getter(&type metadata for String, v12);
    unint64_t v15 = v14;
    swift_bridgeObjectRelease(v11);
    if (v13 == 0x7365676150LL && v15 == (const char *)0xE500000000000000LL
      || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, 0x7365676150LL, 0xE500000000000000LL, 0LL) & 1) != 0)
    {
      id v16 = objc_allocWithZone(&OBJC_CLASS___LSApplicationRecord);
      uint64_t v17 = 0x6C7070612E6D6F63LL;
      unint64_t v18 = 0xEF73656761502E65LL;
    }

    else
    {
      if (v13 == 0x737265626D754ELL && v15 == (const char *)0xE700000000000000LL
        || (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, 0x737265626D754ELL, 0xE700000000000000LL, 0LL) & 1) != 0)
      {
        id v19 = objc_allocWithZone(&OBJC_CLASS___LSApplicationRecord);
        uint64_t v20 = "com.apple.Numbers";
      }

      else
      {
        if ((v13 != 0x65746F6E79654BLL || v15 != (const char *)0xE700000000000000LL)
          && (_stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, 0x65746F6E79654BLL, 0xE700000000000000LL, 0LL) & 1) == 0)
        {
LABEL_16:
          unint64_t v30 = *(const char **)(v2 + 40);
          *(void *)(v2 + 32) = v13;
          *(void *)(v2 + 40) = v15;
          swift_bridgeObjectRelease(v30);
          return;
        }

        id v31 = objc_allocWithZone(&OBJC_CLASS___LSApplicationRecord);
        uint64_t v20 = "com.apple.Keynote";
      }

      unint64_t v18 = (unint64_t)(v20 - 32) | 0x8000000000000000LL;
      uint64_t v17 = 0xD000000000000011LL;
    }

    id v21 = sub_10043C098(v17, v18, 1);
    if (v21)
    {
      id v22 = v21;
      id v23 = [v22 applicationState];
      unsigned int v24 = [v23 isInstalled];

      if (v24)
      {
        id v25 = objc_msgSend(v22, "localizedName", swift_bridgeObjectRelease(v15).n128_f64[0]);
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        uint64_t v28 = v27;

        unint64_t v29 = *(const char **)(v2 + 40);
        *(void *)(v2 + 32) = v26;
        *(void *)(v2 + 40) = v28;
        swift_bridgeObjectRelease(v29);
        return;
      }
    }

    goto LABEL_16;
  }

uint64_t sub_100288A7C()
{
  swift_release(*(void *)(v0 + 24));
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropContentHandleriWorkLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropContentHandleriWorkLinks);
}

double sub_100288AD0@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandleriWorkLinks();
  uint64_t v3 = swift_allocObject(v2, 48LL, 7LL);
  double result = 0.0;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *a1 = v3;
  return result;
}

uint64_t sub_100288B08(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10064B61C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001C97A0;
  return sub_1002878D8(a1);
}

void sub_100288B58(uint64_t a1, char a2)
{
}

uint64_t sub_100288B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100288458(a1, a2);
}

uint64_t SFAirDropTransfer.init(incomingTransfer:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  uint64_t v206 = *(void *)(v2 - 8);
  uint64_t v207 = v2;
  __chkstk_darwin(v2);
  v205 = (char *)&v190 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v199 = *(void *)(v4 - 8);
  uint64_t v200 = v4;
  __chkstk_darwin(v4);
  v198 = (char *)&v190 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v192 = type metadata accessor for CodableError(0LL);
  uint64_t v191 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  v190 = (char *)&v190 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v211 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v194 = *(void *)(v211 - 8);
  uint64_t v7 = __chkstk_darwin(v211);
  v193 = (char *)&v190 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  v209 = (char *)&v190 - v9;
  uint64_t v210 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v208 = *(void *)(v210 - 8);
  uint64_t v10 = __chkstk_darwin(v210);
  unint64_t v12 = (char *)&v190 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  v195 = (char *)&v190 - v13;
  uint64_t v14 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v190 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100183098((uint64_t *)&unk_100645130);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v197 = (uint64_t)&v190 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  v196 = (char *)&v190 - v22;
  __chkstk_darwin(v21);
  unsigned int v24 = (char *)&v190 - v23;
  uint64_t v25 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v190 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100183168(0LL, &qword_10064B728, &OBJC_CLASS___SFAirDropTransferMetaData_ptr);
  uint64_t v202 = v26;
  uint64_t v203 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v28, a1, v25);
  v201 = SFAirDropTransferMetaData.init(transfer:)((uint64_t)v28);
  uint64_t v29 = type metadata accessor for URL(0LL);
  uint64_t v30 = *(void *)(v29 - 8);
  id v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 56);
  v213 = v24;
  uint64_t v214 = v29;
  uint64_t v32 = v31(v24, 1LL, 1LL);
  uint64_t v212 = a1;
  SFAirDropReceive.Transfer.state.getter(v32);
  Swift::String v33 = (uint64_t *)v17;
  uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v35 = sub_100183098(&qword_1006451B0);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8LL))(v17, v35);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v211 = 0LL;
    uint64_t v38 = 1LL;
LABEL_3:
    uint64_t v208 = v38;
LABEL_4:
    v209 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    id v39 = &v17[*(int *)(sub_100183098(&qword_10064B778) + 48)];
    uint64_t v40 = sub_100183098(&qword_10064B750);
    (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8LL))(v39, v40);
    uint64_t v41 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
LABEL_9:
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8LL))(v17, v41);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v208 = 1LL;
    v209 = (char *)_swiftEmptyArrayStorage;
    uint64_t v211 = 1LL;
    goto LABEL_19;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v41 = sub_100183098(&qword_1006451B0);
    goto LABEL_9;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.transferring(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v42 = (int *)sub_100183098(&qword_10064B770);
    uint64_t v43 = &v17[v42[12]];
    __n128 v44 = swift_bridgeObjectRelease((const char *)*(void *)&v17[v42[16] + 8]);
    unint64_t v45 = &v17[v42[20]];
    uint64_t v46 = v208;
    uint64_t v47 = v195;
    uint64_t v48 = v210;
    uint64_t v49 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v195, v17, v210, v44);
    uint64_t v50 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v49);
    Swift::String v51 = v31;
    uint64_t v52 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v51)(v50, 0LL, 1LL, v214);
    sub_1001870BC(v50, v52, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    uint64_t v53 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
    (*(void (**)(char *, uint64_t))(*(void *)(v53 - 8) + 8LL))(v45, v53);
    uint64_t v54 = type metadata accessor for SFAirDrop.Progress(0LL);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8LL))(v43, v54);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    v209 = (char *)_swiftEmptyArrayStorage;
    uint64_t v55 = 2LL;
LABEL_18:
    uint64_t v208 = v55;
    goto LABEL_19;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.analyzingFullContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v56 = sub_100183098(&qword_1006451C8);
    v209 = *(char **)&v17[*(int *)(v56 + 48)];
    uint64_t v57 = &v17[*(int *)(v56 + 80)];
    uint64_t v58 = v208;
    NSString v59 = v195;
    uint64_t v60 = v31;
    uint64_t v61 = v210;
    uint64_t v62 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v208 + 32))(v195, v33, v210);
    uint64_t v63 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v62);
    uint64_t v64 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v60)(v63, 0LL, 1LL, v214);
    sub_1001870BC(v63, v64, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v61);
    uint64_t v65 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
LABEL_17:
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v65 - 8) + 8LL))(v57, v65);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v55 = 5LL;
    goto LABEL_18;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentResponse(_:)
    || (_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentIntervention(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v66 = sub_100183098(&qword_1006451C0);
    v209 = *(char **)&v17[*(int *)(v66 + 48)];
    uint64_t v57 = &v17[*(int *)(v66 + 64)];
    uint64_t v67 = v208;
    uint64_t v68 = v195;
    uint64_t v69 = v31;
    uint64_t v70 = v210;
    uint64_t v71 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v208 + 32))(v195, v33, v210);
    uint64_t v72 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v71);
    uint64_t v73 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v69)(v72, 0LL, 1LL, v214);
    sub_1001870BC(v72, v73, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v70);
    uint64_t v65 = sub_100183098(&qword_1006451B0);
    goto LABEL_17;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.importing(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v209 = *(char **)&v17[*(int *)(sub_100183098(&qword_1006451B8) + 48)];
    v99 = v31;
    uint64_t v100 = v208;
    v101 = v195;
    uint64_t v102 = v210;
    uint64_t v103 = (*(uint64_t (**)(char *, char *, uint64_t))(v208 + 32))(v195, v17, v210);
    uint64_t v104 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v103);
    uint64_t v105 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v99)(v104, 0LL, 1LL, v214);
    sub_1001870BC(v104, v105, (uint64_t *)&unk_100645130);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v101, v102);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v55 = 6LL;
    goto LABEL_18;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v106 = (int *)sub_100183098((uint64_t *)&unk_10064B760);
    __n128 v107 = swift_bridgeObjectRelease((const char *)*(void *)&v17[v106[12]]);
    v209 = *(char **)&v17[v106[16]];
    v108 = &v17[v106[20]];
    uint64_t v109 = v208;
    v110 = v195;
    v111 = v31;
    uint64_t v112 = v210;
    uint64_t v113 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, __n128))(v208 + 32))(v195, v33, v210, v107);
    uint64_t v114 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v113);
    uint64_t v115 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v111)(v114, 0LL, 1LL, v214);
    sub_1001870BC(v114, v115, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v112);
    uint64_t v116 = sub_100183098(&qword_1006451B0);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v116 - 8) + 8LL))(v108, v116);
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v55 = 7LL;
    goto LABEL_18;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v117 = (int *)sub_100183098((uint64_t *)&unk_10064B760);
    __n128 v118 = swift_bridgeObjectRelease((const char *)*(void *)&v17[v117[12]]);
    v209 = *(char **)&v17[v117[16]];
    uint64_t v119 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v12, v17, v210, v118);
    uint64_t v120 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v119);
    uint64_t v121 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v31)(v120, 0LL, 1LL, v214);
    sub_1001870BC(v120, v121, (uint64_t *)&unk_100645130);
    NSString v122 = String._bridgeToObjectiveC()();
    id v124 = (id)SFLocalizedStringForKey(v122, v123);

    if (v124)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v124);
      uint64_t v36 = v125;
    }

    else
    {
      uint64_t v36 = 0LL;
    }

    v139 = &v17[v117[20]];
    (*(void (**)(char *, uint64_t))(v208 + 8))(v12, v210);
    uint64_t v140 = sub_100183098(&qword_1006451B0);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v140 - 8) + 8LL))(v139, v140);
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v211 = 1LL;
    uint64_t v55 = 7LL;
    goto LABEL_18;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.opening(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v126 = sub_100183098((uint64_t *)&unk_1006451A0);
    __n128 v127 = swift_bridgeObjectRelease((const char *)*(void *)&v17[*(int *)(v126 + 48)]);
    v209 = *(char **)&v17[*(int *)(v126 + 64)];
    v128 = v31;
    uint64_t v129 = v208;
    v130 = v195;
    uint64_t v131 = v210;
    uint64_t v132 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v195, v17, v210, v127);
    uint64_t v133 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v132);
    uint64_t v134 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v128)(v133, 0LL, 1LL, v214);
    sub_1001870BC(v133, v134, (uint64_t *)&unk_100645130);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v130, v131);
LABEL_38:
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    uint64_t v55 = 8LL;
    goto LABEL_18;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
  {
    uint64_t v135 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v136 = &v17[*(int *)(sub_100183098(&qword_10064B758) + 48)];
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v135, 1LL, 1LL, v214);
    v137 = &qword_1006451B0;
LABEL_41:
    uint64_t v138 = sub_100183098(v137);
    (*(void (**)(char *, uint64_t))(*(void *)(v138 - 8) + 8LL))(v136, v138);
LABEL_46:
    uint64_t v142 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v142 - 8) + 8LL))(v17, v142);
LABEL_47:
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v210 = 0LL;
    v209 = (char *)_swiftEmptyArrayStorage;
    uint64_t v55 = 8LL;
    goto LABEL_18;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.importingReceivedContact(_:))
  {
    uint64_t v141 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v141, 1LL, 1LL, v214);
    goto LABEL_46;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
  {
    uint64_t v143 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    v136 = &v17[*(int *)(sub_100183098(&qword_10064B748) + 48)];
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v143, 1LL, 1LL, v214);
    v137 = &qword_10064B750;
    goto LABEL_41;
  }

  v144 = v31;
  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:))
  {
    uint64_t v145 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    v146 = (char *)v33 + *(int *)(sub_100183098(&qword_10064B740) + 48);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v145, 1LL, 1LL, v214);
    uint64_t v147 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
    v148 = *(void (**)(char *, uint64_t))(*(void *)(v147 - 8) + 8LL);
    v148(v146, v147);
    uint64_t v34 = ((uint64_t (*)(uint64_t *, uint64_t))v148)(v33, v147);
    goto LABEL_47;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    v149 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
    v150 = (char *)v33 + v149[12];
    *(void *)&double v151 = swift_bridgeObjectRelease((const char *)*(uint64_t *)((char *)v33 + v149[16] + 8)).n128_u64[0];
    *(void *)&double v152 = swift_bridgeObjectRelease((const char *)*(uint64_t *)((char *)v33 + v149[20]), v151).n128_u64[0];
    v209 = *(char **)((char *)v33 + v149[24]);
    __n128 v153 = swift_bridgeObjectRelease((const char *)*(uint64_t *)((char *)v33 + v149[28]), v152);
    uint64_t v154 = v208;
    v155 = v195;
    uint64_t v156 = v210;
    uint64_t v157 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v208 + 32))(v195, v150, v210, v153);
    uint64_t v158 = (uint64_t)v196;
    SFAirDropReceive.ItemDestination.url.getter(v157);
    uint64_t v159 = (uint64_t)v213;
    sub_100187100((uint64_t)v213, (uint64_t *)&unk_100645130);
    uint64_t v211 = 1LL;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v144)(v158, 0LL, 1LL, v214);
    sub_1001870BC(v158, v159, (uint64_t *)&unk_100645130);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v155, v156);
    uint64_t v160 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
    uint64_t v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v160 - 8) + 8LL))(v33, v160);
    goto LABEL_38;
  }

  if ((_DWORD)v34 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 96))(v33, v14);
    uint64_t v161 = sub_100183098(&qword_100649750);
    uint64_t v162 = v194;
    v163 = v209;
    uint64_t v164 = v211;
    (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v209, (char *)v33 + *(int *)(v161 + 48), v211);
    uint64_t v165 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    uint64_t v37 = swift_allocError(v164, v165, 0LL, 0LL);
    v166 = *(void (**)(uint64_t, char *, uint64_t))(v162 + 16);
    v166(v167, v163, v164);
    uint64_t v210 = SFAirDropReceive.Failure.legacyFailureReason.getter();
    v168 = v193;
    v166((uint64_t)v193, v163, v164);
    int v169 = (*(uint64_t (**)(char *, uint64_t))(v162 + 88))(v168, v164);
    if (v169 == enum case for SFAirDropReceive.Failure.unsupportedType(_:))
    {
      uint64_t v170 = v194;
      v171 = (const char **)v193;
      uint64_t v172 = v211;
      (*(void (**)(char *, uint64_t))(v194 + 96))(v193, v211);
      swift_bridgeObjectRelease(v171[1]);
      v173 = (char *)v171 + *(int *)(sub_100183098((uint64_t *)&unk_10064B730) + 48);
      (*(void (**)(char *, uint64_t))(v170 + 8))(v209, v172);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v173, v214);
      v174 = "Unsupported type";
LABEL_57:
      uint64_t v36 = (const char *)((unint64_t)(v174 - 32) | 0x8000000000000000LL);
LABEL_58:
      uint64_t v211 = 2LL;
      uint64_t v175 = 9LL;
LABEL_74:
      uint64_t v208 = v175;
LABEL_75:
      uint64_t v188 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
      uint64_t v34 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v188 - 8) + 8LL))(v33, v188);
      goto LABEL_4;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.unexpected(_:))
    {
      uint64_t v176 = v194;
      v177 = v193;
      (*(void (**)(char *, uint64_t))(v194 + 96))(v193, v211);
      uint64_t v178 = v191;
      v179 = v190;
      uint64_t v180 = v192;
      (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v190, v177, v192);
      v216 = 0LL;
      unint64_t v217 = 0xE000000000000000LL;
      v181._countAndFlagsBits = 0x203A64656C696146LL;
      v181._object = (void *)0xE800000000000000LL;
      String.append(_:)(v181);
      uint64_t v182 = CodableError.localizedDescription.getter();
      v184 = v183;
      v215[0] = v182;
      v215[1] = v183;
      DefaultStringInterpolation.appendInterpolation<A>(_:)( v215,  &type metadata for String,  &protocol witness table for String);
      __n128 v185 = swift_bridgeObjectRelease(v184);
      uint64_t v36 = (const char *)v217;
      (*(void (**)(char *, uint64_t, __n128))(v178 + 8))(v179, v180, v185);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      uint64_t v175 = 9LL;
      goto LABEL_74;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.declined(_:)) {
      goto LABEL_69;
    }
    if (v169 == enum case for SFAirDropReceive.Failure.askDismissed(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v36 = (const char *)0xED00006465737369LL;
      uint64_t v187 = 3LL;
      goto LABEL_72;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.senderCancelled(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      uint64_t v36 = (const char *)0xEF64656C65636E61LL;
      uint64_t v175 = 3LL;
      goto LABEL_74;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.receiverCancelled(_:))
    {
LABEL_69:
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v36 = (const char *)0xE800000000000000LL;
      uint64_t v187 = 2LL;
LABEL_72:
      uint64_t v211 = v187;
LABEL_73:
      uint64_t v175 = 8LL;
      goto LABEL_74;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.mixedTypes(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v36 = (const char *)0xEB00000000736570LL;
      goto LABEL_58;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.missingDownloadDirectory(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      uint64_t v208 = 9LL;
      uint64_t v36 = (const char *)0x8000000100508810LL;
      goto LABEL_75;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.missingOwnContact(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      uint64_t v36 = (const char *)0x80000001005087F0LL;
      uint64_t v175 = 9LL;
      goto LABEL_74;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.streamError(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      uint64_t v36 = (const char *)0xEC000000726F7272LL;
      uint64_t v175 = 9LL;
      goto LABEL_74;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v36 = (const char *)0xEF64656C646E6168LL;
      goto LABEL_58;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.incompleteTransfer(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      v174 = "Incomplete Transfer";
      goto LABEL_57;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.badRequest(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      uint64_t v36 = (const char *)0xEB00000000747365LL;
      uint64_t v175 = 9LL;
      goto LABEL_74;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.moveToAppFailed(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      v189 = "Move To App Failed, Content In Default";
LABEL_98:
      uint64_t v36 = (const char *)((unint64_t)(v189 - 32) | 0x8000000000000000LL);
      goto LABEL_73;
    }

    if (v169 == enum case for SFAirDropReceive.Failure.insufficientStorage(_:))
    {
      (*(void (**)(char *, uint64_t))(v194 + 8))(v209, v211);
      uint64_t v211 = 0LL;
      v189 = "Insufficient Space";
      goto LABEL_98;
    }

uint64_t sub_10028A4C8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }

  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_10018C1B4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }

  uint64_t v10 = &v3[16 * v9 + 32];
  memcpy(v10, (const void *)(a1 + 32), 16 * v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease(a1);
    *uint64_t v1 = v3;
    return result;
  }

uint64_t sub_10028A610(uint64_t a1)
{
  return sub_10028A658( a1,  &qword_10064B780,  (unint64_t *)&unk_10064B790,  &qword_10064B788,  (uint64_t *)sub_10028BA08);
}

uint64_t sub_10028A634(uint64_t a1)
{
  return sub_10028A658(a1, &qword_10064B7C0, &qword_10064B7D0, &qword_10064B7C8, (uint64_t *)sub_10028BA60);
}

uint64_t sub_10028A658(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v24 = a1;
    }
    else {
      uint64_t v24 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v14 = v13 + v11;
    if (!__OFADD__(v13, v11)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v12 < 0) {
    uint64_t v25 = *v5;
  }
  else {
    uint64_t v25 = v12 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v5);
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  uint64_t v14 = v13 + v11;
  if (__OFADD__(v13, v11)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v12 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *int64_t v5 = v12;
  uint64_t v13 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000LL) == 0
    && (v12 & 0x4000000000000000LL) == 0)
  {
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8LL;
    if (v14 <= *(void *)((v12 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v13 = 1LL;
  }

  uint64_t v27 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  uint64_t v17 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    if (v17 <= v14) {
      uint64_t v17 = v14;
    }
    swift_bridgeObjectRetain(v12);
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)( v13,  v17,  1LL,  v12);
    swift_bridgeObjectRelease(*v5);
    *int64_t v5 = v12;
    uint64_t v16 = v12 & 0xFFFFFFFFFFFFFF8LL;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v27;
LABEL_15:
    uint64_t result = sub_10028B800( v16 + 8LL * *(void *)(v16 + 16) + 32,  (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16),  a1,  a2,  a3,  a4,  (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0) {
      uint64_t v26 = v12;
    }
    else {
      uint64_t v26 = v12 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v12);
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }

  if (v19 < 1) {
    goto LABEL_19;
  }
  uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  BOOL v21 = __OFADD__(v20, v19);
  uint64_t v22 = v20 + v19;
  if (!v21)
  {
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v22;
LABEL_19:
    uint64_t v23 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }

  __break(1u);
  return result;
}

void sub_10028A868(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10018C0B4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

void sub_10028A9AC(uint64_t a1)
{
}

void sub_10028A9C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_10018BD60(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

void sub_10028AB28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_10018BC54(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

void sub_10028AC78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = (void *)*v1;
  int64_t v4 = *(void *)(*v1 + 16LL);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  unint64_t v3 = sub_10018CB48(isUniquelyReferenced_nonNull_native, v14, 1, (uint64_t)v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

void sub_10028ADD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Data.Iterator(0LL);
  __chkstk_darwin(v3);
  __asm { BR              X10 }

uint64_t sub_10028AE54()
{
  uint64_t v7 = *v2;
  int64_t v8 = *((void *)*v2 + 2);
  int64_t v9 = v8 + BYTE6(v3);
  if (__OFADD__(v8, BYTE6(v3)))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  *uint64_t v2 = v7;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (int64_t v11 = *((void *)v7 + 3) >> 1, v11 < v9))
  {
    if (v8 <= v9) {
      int64_t v12 = v8 + BYTE6(v3);
    }
    else {
      int64_t v12 = v8;
    }
    uint64_t v7 = sub_10018C0B4(isUniquelyReferenced_nonNull_native, v12, 1, v7);
    *uint64_t v2 = v7;
    int64_t v11 = *((void *)v7 + 3) >> 1;
  }

  uint64_t v13 = *((void *)v7 + 2);
  uint64_t v14 = v11 - v13;
  uint64_t v15 = (uint64_t)&v7[v13 + 32];
  sub_10019BA8C(v4, v3);
  uint64_t v16 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))Data._copyContents(initializing:))( v1,  v15,  v14,  v4,  v3);
  sub_100189B20(v4, v3);
  sub_100189B20(v4, v3);
  if (v16 < BYTE6(v3)) {
    goto LABEL_15;
  }
  if (v16 >= 1)
  {
    uint64_t v17 = *((void *)v7 + 2);
    BOOL v18 = __OFADD__(v17, v16);
    uint64_t v19 = v17 + v16;
    if (v18)
    {
      __break(1u);
      JUMPOUT(0x10028B04CLL);
    }

    *((void *)v7 + 2) = v19;
  }

  if (v16 == v14)
  {
LABEL_16:
    int64_t v21 = *((void *)v7 + 2);
    uint64_t v22 = sub_100183F14( &qword_10064B7E8,  (uint64_t (*)(uint64_t))&type metadata accessor for Data.Iterator,  (uint64_t)&protocol conformance descriptor for Data.Iterator);
    dispatch thunk of IteratorProtocol.next()(v0, v22);
    if ((*(_BYTE *)(v6 - 81) & 1) != 0) {
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
    }
    while (1)
    {
      unint64_t v23 = *((void *)v7 + 3);
      int64_t v24 = v23 >> 1;
      uint64_t v7 = sub_10018C0B4((char *)(v23 > 1), v21 + 1, 1, v7);
      *uint64_t v2 = v7;
      char v25 = *(_BYTE *)(v6 - 81);
      int64_t v24 = *((void *)v7 + 3) >> 1;
      if ((v25 & 1) == 0) {
        goto LABEL_21;
      }
LABEL_18:
      *((void *)v7 + 2) = v21;
      if ((v25 & 1) != 0) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
      }
    }

    char v25 = 0;
    do
    {
LABEL_21:
      if (v21 >= v24) {
        break;
      }
      v7[v21++ + 32] = *(_BYTE *)(v6 - 82);
      dispatch thunk of IteratorProtocol.next()(v0, v22);
      char v25 = *(_BYTE *)(v6 - 81);
    }

    while ((v25 & 1) == 0);
    goto LABEL_18;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
}

void sub_10028B064(uint64_t a1)
{
}

void sub_10028B078(uint64_t a1)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001LL) != 0)
  {
    if (a1 >= 0) {
      a1 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    a1 = __CocoaSet.count.getter(a1);
    uint64_t v6 = a1;
  }

  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
  }

  uint64_t v7 = (uint64_t)*v4;
  if (!((unint64_t)*v4 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v9 = v8 + v6;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }

  if (v7 < 0) {
    uint64_t v23 = (uint64_t)*v4;
  }
  else {
    uint64_t v23 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v4);
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease((const char *)v7);
  uint64_t v9 = v24 + v6;
  if (__OFADD__(v24, v6)) {
    goto LABEL_30;
  }
LABEL_8:
  uint64_t v10 = (uint64_t)*v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *uint64_t v4 = (const char *)v10;
  uint64_t v12 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000LL) == 0
    && (v10 & 0x4000000000000000LL) == 0)
  {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFFF8LL;
    if (v9 <= *(void *)((v10 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v12 = 1LL;
  }

  if ((unint64_t)v10 >> 62)
  {
    if (v10 < 0) {
      uint64_t v29 = v10;
    }
    else {
      uint64_t v29 = v10 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)v10);
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v29);
    swift_bridgeObjectRelease((const char *)v10);
  }

  else
  {
    uint64_t v14 = *(void *)((v10 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if (v14 <= v9) {
    uint64_t v14 = v9;
  }
  swift_bridgeObjectRetain((const char *)v10);
  uint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v12, v14, 1LL, v10);
  swift_bridgeObjectRelease(*v4);
  *uint64_t v4 = (const char *)v15;
  uint64_t v13 = v15 & 0xFFFFFFFFFFFFFF8LL;
LABEL_18:
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v17 = (*(void *)(v13 + 24) >> 1) - v16;
  a1 = (uint64_t)sub_10028C6A0(&v56, (uint64_t **)(v13 + 8 * v16 + 32), v17, v5);
  if (a1 < v6)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }

  if (a1 >= 1)
  {
    uint64_t v18 = *(void *)(((unint64_t)*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    BOOL v19 = __OFADD__(v18, a1);
    uint64_t v20 = v18 + a1;
    if (v19)
    {
      __break(1u);
LABEL_42:
      uint64_t v30 = __CocoaSet.Iterator.next()(a1);
      if (!v30) {
        goto LABEL_86;
      }
      uint64_t v31 = v30;
      uint64_t v54 = v30;
      uint64_t v32 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      swift_unknownObjectRetain(v31);
      swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v32, 7LL);
      uint64_t v28 = v55;
      a1 = swift_unknownObjectRelease(v31);
      while (2)
      {
        if (!v28)
        {
          uint64_t v6 = v56;
LABEL_86:
          uint64_t v21 = v6;
          goto LABEL_24;
        }

        while (1)
        {
          uint64_t v33 = (unint64_t)*v4 & 0xFFFFFFFFFFFFFF8LL;
          unint64_t v34 = *(void *)(v33 + 0x18);
          if (v3 + 1 > (uint64_t)(v34 >> 1))
          {
            a1 = specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v3 + 1, 1LL);
            uint64_t v33 = (unint64_t)*v4 & 0xFFFFFFFFFFFFFF8LL;
          }

          uint64_t v35 = *(void *)(v33 + 24) >> 1;
          if (v3 < v35) {
            break;
          }
LABEL_46:
          *(void *)(v33 + 16) = v3;
        }

        uint64_t v36 = v33 + 32;
        while (1)
        {
          *(void *)(v36 + 8 * v3++) = v28;
          uint64_t v37 = v56;
          int64_t v38 = v59;
          if ((v56 & 0x8000000000000000LL) == 0) {
            break;
          }
          uint64_t v41 = __CocoaSet.Iterator.next()(a1);
          if (!v41) {
            goto LABEL_84;
          }
          uint64_t v42 = v41;
          uint64_t v54 = v41;
          uint64_t v43 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
          swift_unknownObjectRetain(v42);
          swift_dynamicCast(&v55, &v54, (char *)&type metadata for Swift.AnyObject + 8, v43, 7LL);
          uint64_t v28 = v55;
          a1 = swift_unknownObjectRelease(v42);
LABEL_58:
          if (!v28)
          {
            uint64_t v37 = v56;
LABEL_84:
            *(void *)(((unint64_t)*v4 & 0xFFFFFFFFFFFFF8LL) + 0x10) = v3;
            uint64_t v21 = v37;
            goto LABEL_24;
          }

          if (v3 >= v35)
          {
            uint64_t v33 = (unint64_t)*v4 & 0xFFFFFFFFFFFFFF8LL;
            goto LABEL_46;
          }
        }

        if (v60)
        {
          unint64_t v39 = (v60 - 1) & v60;
          unint64_t v40 = __clz(__rbit64(v60)) | (v59 << 6);
LABEL_54:
          uint64_t v28 = *(void **)(*(void *)(v56 + 48) + 8 * v40);
          a1 = v28;
LABEL_55:
          int64_t v59 = v38;
          unint64_t v60 = v39;
          goto LABEL_58;
        }

        int64_t v44 = v59 + 1;
        if (__OFADD__(v59, 1LL))
        {
          __break(1u);
LABEL_109:
          uint64_t v28 = 0LL;
          unint64_t v26 = 0LL;
          int64_t v25 = v1;
LABEL_36:
          int64_t v59 = v25;
          unint64_t v60 = v26;
          continue;
        }

        break;
      }

      int64_t v45 = (unint64_t)(v58 + 64) >> 6;
      if (v44 >= v45)
      {
        uint64_t v28 = 0LL;
        unint64_t v39 = 0LL;
        goto LABEL_55;
      }

      unint64_t v46 = *(void *)(v57 + 8 * v44);
      if (v46)
      {
LABEL_64:
        unint64_t v39 = (v46 - 1) & v46;
        unint64_t v40 = __clz(__rbit64(v46)) + (v44 << 6);
        int64_t v38 = v44;
        goto LABEL_54;
      }

      int64_t v47 = v59 + 2;
      if (v59 + 2 < v45)
      {
        unint64_t v46 = *(void *)(v57 + 8 * v47);
        if (v46)
        {
LABEL_68:
          int64_t v44 = v47;
          goto LABEL_64;
        }

        int64_t v1 = v59 + 3;
        if (v59 + 3 >= v45) {
          goto LABEL_81;
        }
        unint64_t v46 = *(void *)(v57 + 8 * v1);
        if (v46)
        {
          int64_t v44 = v59 + 3;
          goto LABEL_64;
        }

        int64_t v47 = v59 + 4;
        if (v59 + 4 >= v45)
        {
          uint64_t v28 = 0LL;
          unint64_t v39 = 0LL;
          int64_t v38 = v59 + 3;
          goto LABEL_55;
        }

        unint64_t v46 = *(void *)(v57 + 8 * v47);
        if (v46) {
          goto LABEL_68;
        }
        int64_t v44 = v59 + 5;
        if (v59 + 5 >= v45)
        {
LABEL_81:
          uint64_t v28 = 0LL;
          unint64_t v39 = 0LL;
          int64_t v38 = v47;
          goto LABEL_55;
        }

        unint64_t v46 = *(void *)(v57 + 8 * v44);
        if (v46) {
          goto LABEL_64;
        }
        int64_t v44 = v45 - 1;
        uint64_t v48 = v59 + 6;
        while (v45 != v48)
        {
          unint64_t v46 = *(void *)(v57 + 8 * v48++);
          if (v46)
          {
            int64_t v44 = v48 - 1;
            goto LABEL_64;
          }
        }
      }

      uint64_t v28 = 0LL;
      unint64_t v39 = 0LL;
      int64_t v38 = v44;
      goto LABEL_55;
    }

    *(void *)(((unint64_t)*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v20;
  }

  if (a1 != v17)
  {
    uint64_t v21 = v56;
LABEL_24:
    uint64_t v22 = sub_100187094(v21);
    specialized Array._endMutation()(v22);
    return;
  }

void sub_10028B674(uint64_t a1)
{
}

void sub_10028B688(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }

  if (swift_isUniquelyReferenced_nonNull_native(*v3)
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }

  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v11 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  unint64_t v12 = v5 + 40 * v11 + 32;
  if (a1 + 32 < v12 + 40 * v10 && v12 < a1 + 32 + 40 * v10) {
    goto LABEL_21;
  }
  sub_100183098(a3);
  swift_arrayInitWithCopy(v12);
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  uint64_t v14 = *(void *)(v5 + 16);
  BOOL v15 = __OFADD__(v14, v10);
  uint64_t v16 = v14 + v10;
  if (!v15)
  {
    *(void *)(v5 + 16) = v16;
LABEL_16:
    swift_bridgeObjectRelease((const char *)a1);
    *uint64_t v3 = v5;
    return;
  }

uint64_t sub_10028B800( unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v26 = a3;
    }
    else {
      uint64_t v26 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15) {
      return a3;
    }
  }

  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v15) {
      return a3;
    }
  }

  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
  if (v14)
  {
    if (a3 < 0) {
      uint64_t v18 = a3;
    }
    else {
      uint64_t v18 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v20 = sub_10028C9A8(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (uint64_t i = 0LL; i != v15; ++i)
        {
          uint64_t v22 = sub_100183098(a6);
          uint64_t v23 = (void (*)(_BYTE *, void))a7(v28, i, a3, v22, v20);
          uint64_t v25 = *v24;
          swift_unknownObjectRetain(*v24);
          v23(v28, 0LL);
          *(void *)(a1 + 8 * i) = v25;
        }

        swift_bridgeObjectRelease(a3);
        return a3;
      }

      goto LABEL_24;
    }

void (*sub_10028BA08(uint64_t **a1, unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10028BAE0(v6, a2, a3);
  return sub_10028BA5C;
}

void (*sub_10028BA60(uint64_t **a1, unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_10028BB54(v6, a2, a3);
  return sub_10028BA5C;
}

void sub_10028BAB4(void *a1)
{
  int64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32LL))(*a1);
  free(v1);
}

uint64_t *sub_10028BAE0(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain(*(void *)(a3 + 8 * a2 + 32));
LABEL_5:
    *uint64_t v3 = v4;
    return (uint64_t *)sub_10028BB4C;
  }

  __break(1u);
  return result;
}

uint64_t sub_10028BB4C(void *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t *sub_10028BB54(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain(*(void *)(a3 + 8 * a2 + 32));
LABEL_5:
    *uint64_t v3 = v4;
    return (uint64_t *)sub_10028CA74;
  }

  __break(1u);
  return result;
}

uint64_t sub_10028BBC0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v16 = -1LL << *(_BYTE *)(a4 + 32);
  uint64_t v35 = a1;
  uint64_t v36 = v16;
  uint64_t v17 = -v16;
  if (v17 < 64) {
    uint64_t v18 = ~(-1LL << v17);
  }
  else {
    uint64_t v18 = -1LL;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0LL;
    uint64_t v21 = 0LL;
LABEL_39:
    uint64_t v31 = v35;
    uint64_t v32 = ~v36;
    *uint64_t v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }

  if (!a3)
  {
    int64_t v20 = 0LL;
    uint64_t v21 = 0LL;
    goto LABEL_39;
  }

  if (a3 < 0) {
    goto LABEL_41;
  }
  int64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  uint64_t v37 = a4 + 56;
  int64_t v38 = (unint64_t)(63 - v36) >> 6;
  int64_t v34 = v38 - 1;
  uint64_t v39 = a3;
  uint64_t v22 = v40;
  uint64_t v23 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v25 = v24 | (v20 << 6);
  while (1)
  {
    uint64_t v29 = *(void *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(void *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v10, 0LL, 1LL, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1LL, v11) == 1)
    {
      uint64_t v15 = v37;
      goto LABEL_38;
    }

    ++v21;
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      uint64_t v21 = v39;
      uint64_t v15 = v37;
      goto LABEL_39;
    }

    a2 += v29;
    uint64_t v23 = v41;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    uint64_t v15 = v37;
    if (v26 >= v38) {
      goto LABEL_37;
    }
    unint64_t v27 = *(void *)(v37 + 8 * v26);
    if (!v27)
    {
      int64_t v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38) {
        goto LABEL_37;
      }
      unint64_t v27 = *(void *)(v37 + 8 * v28);
      if (v27) {
        goto LABEL_14;
      }
      int64_t v20 = v26 + 1;
      if (v26 + 2 >= v38) {
        goto LABEL_37;
      }
      unint64_t v27 = *(void *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2LL;
      }

      else
      {
        int64_t v20 = v26 + 2;
        if (v26 + 3 >= v38) {
          goto LABEL_37;
        }
        unint64_t v27 = *(void *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          int64_t v28 = v26 + 4;
          int64_t v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            unint64_t v27 = *(void *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                int64_t v26 = v28 + 1;
                if (__OFADD__(v28, 1LL)) {
                  goto LABEL_42;
                }
                if (v26 >= v38)
                {
                  int64_t v20 = v34;
                  goto LABEL_37;
                }

                unint64_t v27 = *(void *)(v37 + 8 * v26);
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }

void sub_10028BF10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100183098(&qword_1006453B0);
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v42 = a4;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v15 = a4 + 64;
  uint64_t v14 = v16;
  uint64_t v38 = v15;
  uint64_t v17 = -1LL << *(_BYTE *)(v15 - 32);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1LL << -(char)v17);
  }
  else {
    uint64_t v18 = -1LL;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0LL;
LABEL_38:
    uint64_t v32 = v38;
    *a1 = v42;
    a1[1] = v32;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return;
  }

  if (!a3)
  {
    int64_t v20 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0) {
    goto LABEL_40;
  }
  uint64_t v35 = -1LL << *(_BYTE *)(v15 - 32);
  uint64_t v36 = a1;
  int64_t v20 = 0LL;
  uint64_t v21 = 0LL;
  int64_t v37 = (unint64_t)(63 - v17) >> 6;
  int64_t v34 = v37 - 1;
  uint64_t v39 = a3;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v42 + 56);
    int64_t v28 = (uint64_t *)(*(void *)(v42 + 48) + 16 * v23);
    uint64_t v29 = *v28;
    uint64_t v30 = (const char *)v28[1];
    uint64_t v31 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v31 - 8) + 16LL))( &v11[*(int *)(v41 + 48)],  v27 + *(void *)(*(void *)(v31 - 8) + 72LL) * v23,  v31);
    *(void *)uint64_t v11 = v29;
    *((void *)v11 + 1) = v30;
    sub_1001870BC((uint64_t)v11, (uint64_t)v13, &qword_1006453B0);
    sub_1001870BC((uint64_t)v13, a2, &qword_1006453B0);
    if (v21 == v39)
    {
      swift_bridgeObjectRetain(v30);
LABEL_37:
      uint64_t v17 = v35;
      a1 = v36;
      goto LABEL_38;
    }

    a2 += *(void *)(v40 + 72);
    swift_bridgeObjectRetain(v30);
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v24 >= v37) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v38 + 8 * v24);
    if (!v25)
    {
      v20 += 2LL;
      if (v24 + 1 >= v37)
      {
        unint64_t v19 = 0LL;
        int64_t v20 = v24;
        goto LABEL_37;
      }

      unint64_t v25 = *(void *)(v38 + 8 * v20);
      if (v25) {
        goto LABEL_14;
      }
      int64_t v26 = v24 + 2;
      if (v24 + 2 >= v37) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v26);
      if (!v25)
      {
        int64_t v20 = v24 + 3;
        if (v24 + 3 >= v37)
        {
          unint64_t v19 = 0LL;
          int64_t v20 = v24 + 2;
          goto LABEL_37;
        }

        unint64_t v25 = *(void *)(v38 + 8 * v20);
        if (v25)
        {
LABEL_14:
          int64_t v24 = v20;
          goto LABEL_18;
        }

        int64_t v26 = v24 + 4;
        if (v24 + 4 >= v37)
        {
LABEL_33:
          unint64_t v19 = 0LL;
          goto LABEL_37;
        }

        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v24 = v26 + 1;
            if (__OFADD__(v26, 1LL)) {
              goto LABEL_41;
            }
            if (v24 >= v37)
            {
              unint64_t v19 = 0LL;
              int64_t v20 = v34;
              goto LABEL_37;
            }

            unint64_t v25 = *(void *)(v38 + 8 * v24);
            ++v26;
            if (v25) {
              goto LABEL_18;
            }
          }
        }
      }

      int64_t v24 = v26;
    }

uint64_t sub_10028C21C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v30 - v14;
  uint64_t v35 = a4;
  uint64_t v18 = *(void *)(a4 + 64);
  uint64_t v17 = a4 + 64;
  uint64_t v16 = v18;
  uint64_t v19 = -1LL << *(_BYTE *)(v17 - 32);
  if (-v19 < 64) {
    uint64_t v20 = ~(-1LL << -(char)v19);
  }
  else {
    uint64_t v20 = -1LL;
  }
  unint64_t v21 = v20 & v16;
  if (!a2)
  {
    int64_t v22 = 0LL;
    a3 = 0LL;
LABEL_38:
    *a1 = v35;
    a1[1] = v17;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }

  if (!a3)
  {
    int64_t v22 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v32 = -1LL << *(_BYTE *)(v17 - 32);
  uint64_t v33 = a1;
  int64_t v22 = 0LL;
  uint64_t v23 = 0LL;
  int64_t v34 = (unint64_t)(63 - v19) >> 6;
  int64_t v31 = v34 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_10019140C(*(void *)(v35 + 56) + v29 * v25, (uint64_t)v12);
    sub_10028CA30((uint64_t)v12, (uint64_t)v15);
    uint64_t result = sub_10028CA30((uint64_t)v15, a2);
    if (v23 == a3) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v26 >= v34) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v17 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }

  v22 += 2LL;
  if (v26 + 1 >= v34)
  {
    unint64_t v21 = 0LL;
    int64_t v22 = v26;
    goto LABEL_36;
  }

  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v34)
  {
    unint64_t v21 = 0LL;
    int64_t v22 = v26 + 2;
    goto LABEL_36;
  }

  unint64_t v27 = *(void *)(v17 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }

  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v34)
  {
LABEL_32:
    unint64_t v21 = 0LL;
LABEL_36:
    a3 = v23;
LABEL_37:
    uint64_t v19 = v32;
    a1 = v33;
    goto LABEL_38;
  }

  unint64_t v27 = *(void *)(v17 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1LL)) {
      break;
    }
    if (v26 >= v34)
    {
      unint64_t v21 = 0LL;
      int64_t v22 = v31;
      goto LABEL_36;
    }

    unint64_t v27 = *(void *)(v17 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }

uint64_t sub_10028C4A4(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1LL << *(_BYTE *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1LL << -(char)v7);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0LL;
    uint64_t v10 = 0LL;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }

  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0LL;
    goto LABEL_38;
  }

  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

  uint64_t v11 = a2;
  int64_t v12 = 0LL;
  uint64_t v13 = 0LL;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }

    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain(v21);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }

  v12 += 2LL;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0LL;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }

  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0LL;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }

  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }

  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0LL;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }

    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }

uint64_t *sub_10028C6A0(uint64_t *result, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001LL) != 0)
  {
    if (a4 < 0) {
      uint64_t v8 = a4;
    }
    else {
      uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v9 = __CocoaSet.makeIterator()(v8);
    uint64_t v10 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
    unint64_t v11 = sub_10023F574();
    uint64_t result = Set.Iterator.init(_cocoa:)(v36, v9, v10, v11);
    uint64_t v4 = v36[0];
    uint64_t v12 = v36[1];
    uint64_t v13 = v36[2];
    int64_t v14 = v36[3];
    unint64_t v15 = v36[4];
    uint64_t v32 = v7;
    if (v6) {
      goto LABEL_6;
    }
LABEL_39:
    uint64_t v16 = 0LL;
LABEL_49:
    *uint64_t v32 = v4;
    v32[1] = v12;
    v32[2] = v13;
    v32[3] = v14;
    v32[4] = v15;
    return (uint64_t *)v16;
  }

  int64_t v14 = 0LL;
  uint64_t v28 = -1LL << *(_BYTE *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v28;
  uint64_t v29 = -v28;
  if (v29 < 64) {
    uint64_t v30 = ~(-1LL << v29);
  }
  else {
    uint64_t v30 = -1LL;
  }
  unint64_t v15 = v30 & *(void *)(a4 + 56);
  uint64_t v32 = result;
  if (!a2) {
    goto LABEL_39;
  }
LABEL_6:
  if (!a3)
  {
    uint64_t v16 = 0LL;
    goto LABEL_49;
  }

  if (a3 < 0) {
    goto LABEL_51;
  }
  uint64_t v16 = 0LL;
  int64_t v33 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v31 = v13;
  while (1)
  {
    if (v4 < 0)
    {
      uint64_t v23 = v12;
      uint64_t v24 = __CocoaSet.Iterator.next()(result);
      if (!v24) {
        goto LABEL_48;
      }
      uint64_t v25 = v24;
      uint64_t v34 = v24;
      uint64_t v26 = sub_100183168(0LL, (unint64_t *)&unk_10064B7B0, &OBJC_CLASS___SFAutoUnlockDevice_ptr);
      swift_unknownObjectRetain(v25);
      swift_dynamicCast(&v35, &v34, (char *)&type metadata for Swift.AnyObject + 8, v26, 7LL);
      int64_t v19 = v35;
      uint64_t result = (uint64_t *)swift_unknownObjectRelease(v25);
      uint64_t v12 = v23;
      if (!v19) {
        goto LABEL_48;
      }
      goto LABEL_11;
    }

    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_10;
    }

    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v20 >= v33)
    {
      unint64_t v15 = 0LL;
      goto LABEL_48;
    }

    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_26;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v33)
    {
      unint64_t v15 = 0LL;
      ++v14;
      goto LABEL_48;
    }

    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v33) {
        goto LABEL_45;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_26;
      }

      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v33)
      {
        unint64_t v15 = 0LL;
        v14 += 3LL;
        goto LABEL_48;
      }

      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v33)
        {
LABEL_45:
          unint64_t v15 = 0LL;
          int64_t v14 = v22;
          goto LABEL_48;
        }

        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v27 = v14 + 6;
          while (v33 != v27)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v27++);
            if (v21)
            {
              int64_t v20 = v27 - 1;
              goto LABEL_26;
            }
          }

          unint64_t v15 = 0LL;
          int64_t v14 = v33 - 1;
          goto LABEL_48;
        }

        goto LABEL_26;
      }
    }

    int64_t v20 = v22;
LABEL_26:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_10:
    uint64_t result = (uint64_t *)*(id *)(*(void *)(v4 + 48) + 8 * v18);
    int64_t v19 = result;
    if (!result) {
      goto LABEL_48;
    }
LABEL_11:
    ++v16;
    *v6++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_48:
      uint64_t v13 = v31;
      goto LABEL_49;
    }
  }

  __break(1u);
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_10028C9A8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_100183124(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_10028C9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064B7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028CA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10028CA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10028CAA0( a1,  (uint64_t (*)(void))&type metadata accessor for URL,  (void (*)(void))sub_10028F9CC,  a2);
}

uint64_t sub_10028CA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10028CAA0(a1, type metadata accessor for SDAirDropDiscoveredEndpoint, (void (*)(void))sub_10028FA68, a2);
}

uint64_t sub_10028CAA0@<X0>( uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_10028F92C(a1);
  if ((v10 & 1) != 0) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v9)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }

  if (result == 1LL << *(_BYTE *)(a1 + 32))
  {
    uint64_t v11 = a2(0LL);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL);
    uint64_t v13 = a4;
    uint64_t v14 = 1LL;
  }

  else
  {
    a3();
    uint64_t v11 = a2(0LL);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL);
    uint64_t v13 = a4;
    uint64_t v14 = 0LL;
  }

  return v12(v13, v14, 1LL, v11);
}

uint64_t sub_10028CB50(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v3 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    unsigned __int8 v4 = a1;
    if ((a2 & 0x1000000000000000LL) != 0)
    {
      unsigned __int8 v4 = String.UTF8View._foreignSubscript(position:)(15LL, a1);
    }

    else if ((a2 & 0x2000000000000000LL) == 0)
    {
      if ((a1 & 0x1000000000000000LL) != 0) {
        unsigned __int8 v4 = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      }
      else {
        unsigned __int8 v4 = *(_BYTE *)_StringObject.sharedUTF8.getter(a1, a2);
      }
    }
  }

  else
  {
    unsigned __int8 v4 = 0;
  }

  return v4 | ((v3 == 0) << 8);
}

void sub_10028CBE0(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
}

void sub_10028CBFC(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    if (a3 < 0) {
      uint64_t v7 = a3;
    }
    else {
      uint64_t v7 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)a3);
    uint64_t v8 = __CocoaSet.makeIterator()(v7);
    unint64_t v9 = sub_100240DFC();
    uint64_t v10 = sub_100183F14( (unint64_t *)&qword_100645370,  (uint64_t (*)(uint64_t))sub_100240DFC,  (uint64_t)&protocol conformance descriptor for NSObject);
    uint64_t v11 = Set.Iterator.init(_cocoa:)(v33, v8, v9, v10);
    uint64_t v5 = v33[0];
    uint64_t v31 = v33[1];
    uint64_t v12 = v33[2];
    int64_t v13 = v33[3];
    unint64_t v14 = v33[4];
  }

  else
  {
    uint64_t v15 = -1LL << *(_BYTE *)(a3 + 32);
    uint64_t v31 = a3 + 56;
    uint64_t v16 = ~v15;
    uint64_t v17 = -v15;
    if (v17 < 64) {
      uint64_t v18 = ~(-1LL << v17);
    }
    else {
      uint64_t v18 = -1LL;
    }
    unint64_t v14 = v18 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain((const char *)a3);
    uint64_t v12 = v16;
    int64_t v13 = 0LL;
  }

  int64_t v30 = (unint64_t)(v12 + 64) >> 6;
  if ((v5 & 0x8000000000000000LL) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v19 = __CocoaSet.Iterator.next()(v11);
  if (!v19) {
    goto LABEL_39;
  }
  uint64_t v20 = v19;
  uint64_t v32 = v19;
  unint64_t v21 = sub_100240DFC();
  swift_unknownObjectRetain(v20);
  swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v21, 7LL);
  id v22 = v34;
  swift_unknownObjectRelease(v20);
  int64_t v23 = v13;
  uint64_t v24 = v14;
  if (!v22) {
    goto LABEL_39;
  }
  while (1)
  {
    id v34 = v22;
    char v28 = a1(&v34);
    if (v4)
    {

      goto LABEL_39;
    }

    if ((v28 & 1) != 0) {
      goto LABEL_39;
    }

    int64_t v13 = v23;
    unint64_t v14 = v24;
    if (v5 < 0) {
      goto LABEL_11;
    }
LABEL_14:
    if (!v14) {
      break;
    }
    uint64_t v24 = (v14 - 1) & v14;
    unint64_t v25 = __clz(__rbit64(v14)) | (v13 << 6);
    int64_t v23 = v13;
LABEL_27:
    id v22 = *(id *)(*(void *)(v5 + 48) + 8 * v25);
    if (!v22) {
      goto LABEL_39;
    }
  }

  int64_t v23 = v13 + 1;
  if (__OFADD__(v13, 1LL))
  {
    __break(1u);
    return;
  }

  if (v23 >= v30) {
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v23);
  if (v26)
  {
LABEL_26:
    uint64_t v24 = (v26 - 1) & v26;
    unint64_t v25 = __clz(__rbit64(v26)) + (v23 << 6);
    goto LABEL_27;
  }

  int64_t v27 = v13 + 2;
  if (v13 + 2 >= v30) {
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26) {
    goto LABEL_25;
  }
  int64_t v27 = v13 + 3;
  if (v13 + 3 >= v30) {
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26) {
    goto LABEL_25;
  }
  int64_t v27 = v13 + 4;
  if (v13 + 4 >= v30) {
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v27);
  if (v26)
  {
LABEL_25:
    int64_t v23 = v27;
    goto LABEL_26;
  }

  int64_t v23 = v13 + 5;
  if (v13 + 5 >= v30) {
    goto LABEL_39;
  }
  unint64_t v26 = *(void *)(v31 + 8 * v23);
  if (v26) {
    goto LABEL_26;
  }
  int64_t v29 = v13 + 6;
  while (v30 != v29)
  {
    unint64_t v26 = *(void *)(v31 + 8 * v29++);
    if (v26)
    {
      int64_t v23 = v29 - 1;
      goto LABEL_26;
    }
  }

void sub_10028CF0C( uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v27 = a3(0LL);
  uint64_t v31 = *(void *)(v27 - 8);
  uint64_t v8 = __chkstk_darwin(v27);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v29 = a2 + 56;
  uint64_t v14 = 1LL << *(_BYTE *)(a2 + 32);
  uint64_t v15 = -1LL;
  if (v14 < 64) {
    uint64_t v15 = ~(-1LL << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain((const char *)a2, v27);
  int64_t v17 = 0LL;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_1001A4B84(*(void *)(a2 + 48) + *(void *)(v31 + 72) * i, (uint64_t)v12, a3);
    sub_1001A4B40((uint64_t)v12, (uint64_t)v10, a3);
    char v23 = a1(v10);
    if (v4)
    {
      sub_1001A4BC8((uint64_t)v10, a3);
      swift_release(a2);
      return;
    }

    if ((v23 & 1) != 0)
    {
      swift_release(a2);
      uint64_t v24 = v28;
      sub_1001A4B40((uint64_t)v10, v28, a3);
      uint64_t v25 = 0LL;
      uint64_t v26 = v27;
      goto LABEL_29;
    }

    sub_1001A4BC8((uint64_t)v10, a3);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1LL)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v30) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v29 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }

      int64_t v22 = v17 + 4;
      if (v17 + 4 < v30)
      {
        unint64_t v21 = *(void *)(v29 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1LL)) {
              goto LABEL_31;
            }
            if (v17 >= v30) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v29 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }

        goto LABEL_16;
      }

uint64_t sub_10028D1B8()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064B7F0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064B7F0);
  if (qword_100643FE8 != -1) {
    swift_once(&qword_100643FE8, sub_10023A448);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10028D248(uint64_t a1, const char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1LL, 1LL, v13);
  swift_bridgeObjectRetain(a2);
  sub_100411A2C((uint64_t)v12, a1, (uint64_t)a2, (uint64_t)v16);
  sub_100187100((uint64_t)v12, &qword_10064DA60);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID,  v16,  v13);
  uint64_t v43 = v16;
  void *v9 = nw_endpoint_create_application_service("com.apple.AirDrop", v16);
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for NWEndpoint.opaque(_:), v6);
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint,  v9,  v6);
  int64_t v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID);
  *int64_t v17 = a1;
  v17[1] = (uint64_t)a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v18 = sub_10037C5B0(8LL, a1, (unint64_t)a2);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  swift_bridgeObjectRelease(a2);
  uint64_t v25 = static String._fromSubstring(_:)(v18, v20, v22, v24);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease(v24);
  uint64_t v28 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
  uint64_t *v28 = v25;
  v28[1] = v27;
  if (qword_1006440B8 != -1) {
    swift_once(&qword_1006440B8, sub_10028D1B8);
  }
  uint64_t v29 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v29, (uint64_t)qword_10064B7F0);
  uint64_t v30 = swift_retain(v3);
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    int64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    uint64_t v45 = v34;
    *(_DWORD *)int64_t v33 = 136315138;
    uint64_t v42 = v33 + 4;
    uint64_t v35 = v14;
    uint64_t v36 = v13;
    uint64_t v38 = *(void *)(v3 + 16);
    int64_t v37 = *(const char **)(v3 + 24);
    swift_bridgeObjectRetain(v37);
    uint64_t v39 = v38;
    uint64_t v13 = v36;
    uint64_t v14 = v35;
    uint64_t v44 = sub_10018CDB4(v39, (unint64_t)v37, &v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v42, v33 + 12);
    swift_release(v3);
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Creating Person %s", v33, 0xCu);
    swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  else
  {

    swift_release(v3);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v43, v13);
  return v3;
}

uint64_t sub_10028D640()
{
  uint64_t v1 = v0;
  v15[0] = 0LL;
  v15[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(48LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  uint64_t v16 = 0x286E6F73726550LL;
  unint64_t v17 = 0xE700000000000000LL;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier + 8);
  swift_bridgeObjectRetain(v3);
  v4._countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  v5._countAndFlagsBits = 0x6F6A6E6F42202D20LL;
  v5._object = (void *)0xEC000000203A7275LL;
  String.append(_:)(v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints;
  swift_beginAccess(v6, v15, 0LL, 0LL);
  v14[0] = *(void *)(*(void *)v6 + 16LL);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._object = (void *)0x8000000100508950LL;
  v9._countAndFlagsBits = 0xD000000000000016LL;
  String.append(_:)(v9);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints,  v14,  0LL,  0LL);
  v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  uint64_t v11 = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v11);
  v12._countAndFlagsBits = 41LL;
  v12._object = (void *)0xE100000000000000LL;
  String.append(_:)(v12);
  return v16;
}

uint64_t sub_10028D7E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.TXTRecord(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v10);
  Swift::String v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = sub_10028D640();
  uint64_t v14 = v13;
  uint64_t result = NWEndpoint.nw.getter(v59);
  uint64_t v62 = result;
  if (result)
  {
    uint64_t v61 = v6;
    uint64_t v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints, v70, 0LL, 0LL);
    sub_10028CAA0( *v16,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (void (*)(void))sub_10028FA68,  (uint64_t)v12);
    uint64_t v17 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48LL))(v12, 1LL, v17) == 1)
    {
      sub_100187100((uint64_t)v12, &qword_100649F58);
    }

    else
    {
      sub_10020F0E4();
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (v21)
      {
        uint64_t v22 = String.utf8CString.getter(v19, v21);
        swift_bridgeObjectRelease(v21);
        nw_endpoint_set_contact_id(v62, v22 + 32);
        swift_release(v22);
      }
    }

    (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for SFAirDrop.DeviceRelationship.contact(_:),  v2);
    SFAirDrop.TXTRecord.init(deviceRelationship:)(v5);
    SFAirDrop.TXTRecord.addToEndpoint(_:)(v62);
    uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID);
    uint64_t v24 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID + 8);
    swift_bridgeObjectRetain(v24);
    uint64_t v25 = sub_10037C5B0(8LL, v23, (unint64_t)v24);
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease(v24);
    uint64_t v32 = static String._fromSubstring(_:)(v25, v27, v29, v31);
    uint64_t v34 = v33;
    swift_bridgeObjectRelease(v31);
    uint64_t v66 = v32;
    uint64_t v67 = v34;
    v35._countAndFlagsBits = 58LL;
    v35._object = (void *)0xE100000000000000LL;
    String.append(_:)(v35);
    uint64_t v68 = v66;
    uint64_t v69 = v67;
    uint64_t v36 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints;
    swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints,  &v66,  0LL,  0LL);
    if (*(void *)(*(void *)v36 + 16LL))
    {
      v37._countAndFlagsBits = 97LL;
      v37._object = (void *)0xE100000000000000LL;
      String.append(_:)(v37);
    }

    uint64_t v38 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints;
    swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints,  v65,  0LL,  0LL);
    if (*(void *)(*(void *)v38 + 16LL))
    {
      v39._countAndFlagsBits = 98LL;
      v39._object = (void *)0xE100000000000000LL;
      String.append(_:)(v39);
    }

    uint64_t v60 = v7;
    v40._countAndFlagsBits = 99LL;
    v40._object = (void *)0xE100000000000000LL;
    String.append(_:)(v40);
    uint64_t v41 = v69;
    uint64_t v42 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier);
    uint64_t v43 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier + 8);
    *uint64_t v42 = v68;
    v42[1] = (uint64_t)v41;
    *(void *)&double v44 = swift_bridgeObjectRetain(v41).n128_u64[0];
    swift_bridgeObjectRelease(v43, v44);
    uint64_t v45 = sub_10028D640();
    int64_t v47 = v46;
    if (qword_1006440B8 != -1) {
      swift_once(&qword_1006440B8, sub_10028D1B8);
    }
    uint64_t v48 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v48, (uint64_t)qword_10064B7F0);
    uint64_t v50 = v68;
    int64_t v49 = v69;
    *(void *)&double v51 = swift_bridgeObjectRetain(v69).n128_u64[0];
    *(void *)&double v52 = swift_bridgeObjectRetain(v14, v51).n128_u64[0];
    swift_bridgeObjectRetain(v47, v52);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v57 = swift_slowAlloc(96LL, -1LL);
      uint64_t v64 = v57;
      *(_DWORD *)uint64_t v56 = 136315651;
      uint64_t v58 = v9;
      swift_bridgeObjectRetain(v49);
      uint64_t v63 = sub_10018CDB4(v50, (unint64_t)v49, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56 + 4, v56 + 12);
      swift_bridgeObjectRelease_n(v49, 3LL);
      *(_WORD *)(v56 + 12) = 2081;
      swift_bridgeObjectRetain(v14);
      uint64_t v63 = sub_10018CDB4(v59, (unint64_t)v14, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56 + 14, v56 + 22);
      swift_bridgeObjectRelease_n(v14, 3LL);
      *(_WORD *)(v56 + 22) = 2081;
      swift_bridgeObjectRetain(v47);
      uint64_t v63 = sub_10018CDB4(v45, (unint64_t)v47, &v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v56 + 24, v56 + 32);
      swift_bridgeObjectRelease_n(v47, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v54,  v55,  "DiscoveredPerson Updated %s [%{private}s] -> [%{private}s]",  (uint8_t *)v56,  0x20u);
      swift_arrayDestroy(v57, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v56, -1LL, -1LL);

      swift_unknownObjectRelease(v62);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v58, v61);
    }

    else
    {
      swift_bridgeObjectRelease_n(v49, 2LL);
      swift_bridgeObjectRelease_n(v14, 2LL);
      swift_bridgeObjectRelease_n(v47, 2LL);

      swift_unknownObjectRelease(v62);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v9, v61);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10028DD78()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint;
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_contactID + 8));
  swift_bridgeObjectRelease(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_bonjourEndpoints));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints));
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_debugIdentifier
                                      + 8));
  return v0;
}

uint64_t sub_10028DE44()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10028DE68()
{
  return type metadata accessor for SDAirDropDiscoveredPerson(0LL);
}

uint64_t type metadata accessor for SDAirDropDiscoveredPerson(uint64_t a1)
{
  uint64_t result = qword_10064B850;
  if (!qword_10064B850) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropDiscoveredPerson);
  }
  return result;
}

uint64_t sub_10028DEAC(uint64_t a1)
{
  v5[0] = &unk_1004D25B0;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for NWEndpoint(319LL);
    if (v4 <= 0x3F)
    {
      v5[2] = *(void *)(result - 8) + 64LL;
      v5[3] = &unk_1004D25B0;
      v5[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[7] = &unk_1004D25B0;
      uint64_t result = swift_updateClassMetadata2(a1, 256LL, 8LL, v5, a1 + 80);
      if (!result) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_10028DF54@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24LL);
  *a1 = *(void *)(*(void *)v1 + 16LL);
  a1[1] = v2;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_10028DF64()
{
  return sub_10028D640();
}

uint64_t sub_10028DF84@<X0>(uint64_t a1@<X8>)
{
  return sub_10028F740( &OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_displayEndpoint,  (uint64_t (*)(void))&type metadata accessor for NWEndpoint,  a1);
}

uint64_t sub_10028DF98()
{
  uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v29);
  v28[1] = (char *)v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  v28[0] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v4 = *(void *)(v32 - 8);
  uint64_t v5 = __chkstk_darwin(v32);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v28 - v9;
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)v28 - v11;
  uint64_t v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints, v34, 0LL, 0LL);
  uint64_t v14 = *v13;
  uint64_t v15 = *v13 + 56;
  uint64_t v16 = 1LL << *(_BYTE *)(*v13 + 32);
  uint64_t v17 = -1LL;
  if (v16 < 64) {
    uint64_t v17 = ~(-1LL << v16);
  }
  unint64_t v18 = v17 & *(void *)(*v13 + 56);
  int64_t v33 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain_n(v14, 2LL);
  int64_t v19 = 0LL;
  char v20 = 0;
  uint64_t v30 = v15;
  uint64_t v31 = v7;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_25;
    }

    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1LL))
    {
      __break(1u);
      goto LABEL_29;
    }

    if (v23 >= v33) {
      goto LABEL_27;
    }
    unint64_t v24 = *(void *)(v15 + 8 * v23);
    ++v19;
    if (!v24)
    {
      int64_t v19 = v23 + 1;
      if (v23 + 1 >= v33) {
        goto LABEL_27;
      }
      unint64_t v24 = *(void *)(v15 + 8 * v19);
      if (!v24)
      {
        int64_t v19 = v23 + 2;
        if (v23 + 2 >= v33) {
          goto LABEL_27;
        }
        unint64_t v24 = *(void *)(v15 + 8 * v19);
        if (!v24)
        {
          int64_t v19 = v23 + 3;
          if (v23 + 3 >= v33) {
            goto LABEL_27;
          }
          unint64_t v24 = *(void *)(v15 + 8 * v19);
          if (!v24)
          {
            int64_t v19 = v23 + 4;
            if (v23 + 4 >= v33) {
              goto LABEL_27;
            }
            unint64_t v24 = *(void *)(v15 + 8 * v19);
            if (!v24) {
              break;
            }
          }
        }
      }
    }

uint64_t sub_10028E3B8(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  v2[22] = swift_task_alloc(v3);
  v2[23] = swift_task_alloc(v3);
  v2[24] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v2[25] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[26] = v5;
  v2[27] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v6 = (*(void *)(*(void *)(sub_100183098(&qword_10064B940) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[28] = swift_task_alloc(v6);
  v2[29] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  v2[30] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[31] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[32] = swift_task_alloc(v9);
  v2[33] = swift_task_alloc(v9);
  v2[34] = swift_task_alloc(v9);
  v2[35] = swift_task_alloc(v9);
  v2[36] = swift_task_alloc(v9);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[37] = v10;
  unint64_t v11 = (*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[38] = swift_task_alloc(v11);
  v2[39] = swift_task_alloc(v11);
  v2[40] = swift_task_alloc(v11);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10028E554, static AirDropActor.shared, 0LL);
}

void sub_10028E554()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[37];
  sub_1001A4B84(v0[20], v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  unint64_t v3 = (char *)sub_10028E5DC + 4 * byte_1004D2580[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }

uint64_t sub_10028E5DC( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint8_t *buf, uint64_t a13, os_log_type_t type, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32)
{
  uint64_t v99 = v34;
  uint64_t v101 = v36;
  double v95 = v35;
  uint64_t v97 = v32;
  uint64_t v39 = *(void *)(v33 + 288);
  uint64_t v40 = *(void *)(v33 + 240);
  uint64_t v41 = *(void *)(v33 + 248);
  uint64_t v42 = *(void *)(v33 + 232);
  uint64_t v43 = *(void *)(v33 + 168);
  sub_1001A4B40( *(void *)(v33 + 320),  v39,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  double v44 = (const char **)(v43 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints);
  swift_beginAccess(v44, v33 + 88, 0LL, 0LL);
  uint64_t v103 = v44;
  uint64_t v45 = *v44;
  uint64_t v46 = swift_task_alloc(32LL);
  *(void *)(v46 + 16) = v39;
  swift_bridgeObjectRetain(v45);
  sub_10028CF0C( (uint64_t (*)(char *))sub_10028FB08,  (uint64_t)v45,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint,  v42);
  swift_bridgeObjectRelease(v45);
  swift_task_dealloc(v46);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1LL, v40) == 1)
  {
    sub_100187100(*(void *)(v33 + 232), &qword_10064B940);
  }

  else
  {
    sub_1001A4B40( *(void *)(v33 + 232),  *(void *)(v33 + 280),  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (qword_1006440B8 != -1) {
      swift_once(&qword_1006440B8, sub_10028D1B8);
    }
    uint64_t v47 = *(void *)(v33 + 272);
    uint64_t v48 = *(void *)(v33 + 280);
    uint64_t v49 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v49, (uint64_t)qword_10064B7F0);
    uint64_t v50 = sub_1001A4B84(v48, v47, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    double v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.default.getter();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = *(void *)(v33 + 272);
    if (v53)
    {
      uint64_t v55 = *(void *)(v33 + 216);
      uint64_t v87 = *(void *)(v33 + 208);
      uint64_t v56 = *(void *)(v33 + 200);
      os_log_type_t v93 = v52;
      uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v91 = swift_slowAlloc(32LL, -1LL);
      v105[0] = v91;
      uint64_t v89 = v57;
      *(_DWORD *)uint64_t v57 = 136315138;
      uint64_t v58 = v57 + 12;
      NSString v86 = v57 + 4;
      sub_10020CB28();
      uint64_t v59 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter(v56, v59);
      uint64_t v62 = v61;
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v55, v56);
      *(void *)(v33 + 152) = sub_10018CDB4(v60, (unint64_t)v62, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v101, v38, v86, v58);
      swift_bridgeObjectRelease(v62);
      sub_1001A4BC8(v54, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v51, v93, "Removing duplicate/stale endpoint %s", v89, 0xCu);
      swift_arrayDestroy(v91, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v91, -1LL, -1LL);
      swift_slowDealloc(v89, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8( *(void *)(v33 + 272),  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    }

    uint64_t v63 = *(void *)(v33 + 280);
    uint64_t v64 = *(void *)(v33 + 224);
    swift_beginAccess(v103, v37, 33LL, 0LL);
    sub_1003BE9A0(v63, v64);
    swift_endAccess(v37);
    sub_100187100(v64, &qword_10064B940);
    sub_1001A4BC8(v63, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }

  if (qword_1006440B8 != -1) {
    swift_once(&qword_1006440B8, sub_10028D1B8);
  }
  uint64_t v65 = *(void *)(v33 + 168);
  uint64_t v66 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v66, (uint64_t)qword_10064B7F0);
  uint64_t v67 = swift_retain(v65);
  uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
  os_log_type_t v69 = static os_log_type_t.debug.getter();
  BOOL v70 = os_log_type_enabled(v68, v69);
  uint64_t v71 = *(void *)(v33 + 168);
  if (v70)
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v73 = swift_slowAlloc(32LL, -1LL);
    v105[0] = v73;
    *(_DWORD *)uint64_t v72 = 136315138;
    uint64_t v74 = *(void *)(v71 + 16);
    uint64_t v75 = *(const char **)(v71 + 24);
    swift_bridgeObjectRetain(v75);
    *double v95 = sub_10018CDB4(v74, (unint64_t)v75, v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v95, v97, v72 + 4, v72 + 12);
    swift_bridgeObjectRelease(v75);
    swift_release(v71);
    _os_log_impl((void *)&_mh_execute_header, v68, v69, "Person: %s adding application service endpoint", v72, 0xCu);
    swift_arrayDestroy(v73, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1LL, -1LL);
    swift_slowDealloc(v72, -1LL, -1LL);
  }

  else
  {
    swift_release(*(void *)(v33 + 168));
  }

  uint64_t v76 = *(void *)(v33 + 288);
  uint64_t v77 = *(void *)(v33 + 256);
  uint64_t v78 = *(void *)(v33 + 264);
  sub_1001A4B84(v76, v77, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  swift_beginAccess(v103, v99, 33LL, 0LL);
  sub_1003B6D34(v78, v77);
  swift_endAccess(v99);
  sub_1001A4BC8(v78, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  sub_1001A4BC8(v76, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v79 = *(void *)(v33 + 312);
  uint64_t v80 = *(void *)(v33 + 320);
  uint64_t v81 = *(void *)(v33 + 304);
  uint64_t v82 = *(void *)(v33 + 280);
  uint64_t v83 = *(void *)(v33 + 288);
  uint64_t v88 = *(void *)(v33 + 272);
  uint64_t v90 = *(void *)(v33 + 264);
  uint64_t v92 = *(void *)(v33 + 256);
  uint64_t v94 = *(void *)(v33 + 232);
  uint64_t v96 = *(void *)(v33 + 224);
  uint64_t v98 = *(void *)(v33 + 216);
  uint64_t v100 = *(void *)(v33 + 192);
  uint64_t v102 = *(void *)(v33 + 184);
  uint64_t v84 = *(void *)(v33 + 168);
  uint64_t v104 = *(void *)(v33 + 176);
  sub_1001A4B84(*(void *)(v33 + 160), v81, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_beginAccess( v84 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints,  v33 + 16,  33LL,  0LL);
  sub_1003B52D4(v79, v81);
  swift_endAccess(v33 + 16);
  sub_1001A4BC8(v79, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_10028D7E0();
  swift_task_dealloc(v80);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v82);
  swift_task_dealloc(v88);
  swift_task_dealloc(v90);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  return (*(uint64_t (**)(void))(v33 + 8))();
}

uint64_t sub_10028EF88()
{
  uint64_t result = NWEndpoint.nw.getter();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v1);
    if (device_id)
    {
      uint64_t v3 = String.init(cString:)(device_id);
      uint64_t device_id = v4;
    }

    else
    {
      uint64_t v3 = 0LL;
    }

    uint64_t result = NWEndpoint.nw.getter();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = nw_endpoint_get_device_id();
      swift_unknownObjectRelease(v5);
      if (v6)
      {
        uint64_t v7 = String.init(cString:)(v6);
        uint64_t v9 = v8;
        if (device_id)
        {
          if (v8)
          {
            if (v3 == v7 && device_id == v8)
            {
              swift_bridgeObjectRelease(device_id);
              char v10 = 1;
            }

            else
            {
              char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, device_id, v7, v8, 0LL);
              swift_bridgeObjectRelease(device_id);
            }

            goto LABEL_18;
          }

          goto LABEL_13;
        }

        if (v8)
        {
          char v10 = 0;
          goto LABEL_18;
        }
      }

      else if (device_id)
      {
LABEL_13:
        char v10 = 0;
        uint64_t v9 = device_id;
LABEL_18:
        swift_bridgeObjectRelease(v9);
        return v10 & 1;
      }

      char v10 = 1;
      return v10 & 1;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_10028F0AC(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = sub_100183098(&qword_100649F58);
  v2[13] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_100183098(&qword_10064B938);
  v2[14] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  v2[15] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_10064B940);
  v2[16] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  v2[17] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[18] = v8;
  v2[19] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10028F1E4, static AirDropActor.shared, 0LL);
}

void sub_10028F1E4()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  sub_1001A4B84(v0[11], v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v3 = (char *)sub_10028F250 + 4 * byte_1004D2584[swift_getEnumCaseMultiPayload(v1, v2)];
  __asm { BR              X10 }

uint64_t sub_10028F250()
{
  if (qword_1006440B8 != -1) {
    swift_once(&qword_1006440B8, sub_10028D1B8);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064B7F0);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Person: Removing application service endpoint", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  uint64_t v8 = *(void *)(v1 + 128);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v9 = *(void *)(v1 + 96);

  swift_beginAccess( v9 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_applicationServiceEndpoints,  v0,  33LL,  0LL);
  sub_1003BE9A0(v7, v8);
  swift_endAccess(v0);
  sub_100187100(v8, &qword_10064B940);
  sub_1001A4BC8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v10 = *(void *)(v1 + 152);
  uint64_t v12 = *(void *)(v1 + 128);
  uint64_t v11 = *(void *)(v1 + 136);
  uint64_t v13 = *(void *)(v1 + 120);
  uint64_t v17 = *(void *)(v1 + 112);
  uint64_t v14 = *(void *)(v1 + 104);
  uint64_t v15 = *(void *)(v1 + 88);
  swift_beginAccess( *(void *)(v1 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints,  v1 + 16,  33LL,  0LL);
  sub_1003BE9C4(v15, v14);
  swift_endAccess(v1 + 16);
  sub_100187100(v14, &qword_100649F58);
  sub_10028D7E0();
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v17);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10028F6D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16LL);
  swift_bridgeObjectRetain(*(void *)(*(void *)v0 + 24LL));
  return v1;
}

uint64_t sub_10028F708()
{
  return sub_10028DF98() & 1;
}

uint64_t sub_10028F72C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028F740( &OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID,  (uint64_t (*)(void))&type metadata accessor for UUID,  a1);
}

uint64_t sub_10028F740@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = *v3 + *a1;
  uint64_t v6 = a2(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a3, v5, v6);
}

uint64_t sub_10028F784()
{
  *(void *)(v1 + 40) = v0;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10028F7EC, static AirDropActor.shared, 0LL);
}

uint64_t sub_10028F7EC()
{
  uint64_t v1 = (void *)(**(void **)(v0 + 40) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = swift_bridgeObjectRetain(*v1);
  return v4(v2);
}

uint64_t sub_10028F84C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10064B94C);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001943E8;
  return sub_10028E3B8(a1);
}

uint64_t sub_10028F89C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10064B934);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100195708;
  return sub_10028F0AC(a1);
}

uint64_t sub_10028F8EC(uint64_t a1)
{
  uint64_t result = sub_100183F14( &qword_10064B928,  type metadata accessor for SDAirDropDiscoveredPerson,  (uint64_t)&unk_1004D261C);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10028F92C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0LL;
    return __clz(__rbit64(v1)) + v2;
  }

  char v5 = *(_BYTE *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1LL << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64LL;
    return __clz(__rbit64(v1)) + v2;
  }

  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128LL;
    return __clz(__rbit64(v1)) + v2;
  }

  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3LL;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128LL;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64LL;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }

  return v3;
}

uint64_t sub_10028F9CC@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((a3 & 1) != 0) {
    goto LABEL_10;
  }
  uint64_t v5 = result;
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }

  else if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      uint64_t v7 = *(void *)(a4 + 48);
      uint64_t v8 = type metadata accessor for URL(0LL);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))( a5,  v7 + *(void *)(*(void *)(v8 - 8) + 72LL) * v5,  v8);
    }

    goto LABEL_9;
  }

  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10028FA68@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if ((a3 & 1) != 0) {
    goto LABEL_10;
  }
  uint64_t v5 = result;
  if (result < 0 || 1LL << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }

  else if (((*(void *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8LL) + 56) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      uint64_t v7 = *(void *)(a4 + 48);
      uint64_t v8 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      return sub_1001A4B84( v7 + *(void *)(*(void *)(v8 - 8) + 72LL) * v5,  a5,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    goto LABEL_9;
  }

  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10028FB08()
{
  return sub_10028EF88() & 1;
}

void sub_10028FB24()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener;
  if (!*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener])
  {
    uint64_t v2 = v0;
    if (qword_1006440C0 != -1) {
      swift_once(&qword_1006440C0, sub_10028FD5C);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_10064B950);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting AirDrop Application Service Server", v7, 2u);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    type metadata accessor for NWListener(0LL);
    uint64_t v8 = sub_100417F18(0LL);
    uint64_t v9 = NWListener.__allocating_init(applicationService:using:)(0xD00000000000001ALL, 0x80000001005089E0LL, v8);
    uint64_t v10 = *(void *)&v2[v1];
    *(void *)&v2[v1] = v9;
    swift_retain(v9);
    swift_release(v10);
    uint64_t v11 = swift_allocObject(&unk_1005D7CB0, 32LL, 7LL);
    *(void *)(v11 + 16) = v2;
    *(void *)(v11 + 24) = v9;
    swift_retain(v9);
    uint64_t v12 = v2;
    NWListener.stateUpdateHandler.setter(sub_100291474, v11);
    uint64_t v13 = swift_allocObject(&unk_1005D7CD8, 24LL, 7LL);
    *(void *)(v13 + 16) = v12;
    uint64_t v14 = v12;
    NWListener.newConnectionHandler.setter(sub_1002914A0, v13);
    NWListener.start(queue:)(*(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_queue]);
    swift_release(v9);
  }

uint64_t sub_10028FD5C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064B950);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064B950);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10028FDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWListener.State(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  uint64_t v12 = swift_allocObject(&unk_1005D7D00, 24LL, 7LL);
  swift_unknownObjectWeakInit(v12 + 16, a2);
  uint64_t v13 = swift_allocObject(&unk_1005D7D78, 24LL, 7LL);
  swift_weakInit(v13 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = (v14 + 40) & ~v14;
  unint64_t v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v17 = (char *)swift_allocObject(&unk_1005D7DA0, v16 + 8, v14 | 7);
  *((void *)v17 + 2) = 0LL;
  *((void *)v17 + 3) = 0LL;
  *((void *)v17 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v17[v15], v7, v4);
  *(void *)&v17[v16] = v13;
  uint64_t v18 = sub_1001B3808((uint64_t)v10, (uint64_t)&unk_10064B9F0, (uint64_t)v17);
  return swift_release(v18);
}

uint64_t sub_10028FF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return swift_task_switch(sub_10028FFA8, 0LL, 0LL);
}

uint64_t sub_10028FFA8()
{
  uint64_t v1 = *(void *)(v0 + 72) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    uint64_t v4 = *(void *)(v0 + 88) + 16LL;
    swift_beginAccess(v4, v0 + 40, 0LL, 0LL);
    uint64_t v5 = swift_weakLoadStrong(v4);
    *(void *)(v0 + 104) = v5;
    uint64_t v6 = (void *)swift_task_alloc(dword_10064B9FC);
    *(void *)(v0 + 112) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10023854C;
    return sub_100290074(*(void *)(v0 + 80), v5);
  }

  else
  {
    **(_BYTE **)(v0 + 64) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100290074(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for NWError(0LL);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[12] = swift_task_alloc(v6);
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  v3[15] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for NWListener.State(0LL);
  v3[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v3[19] = static AirDropActor.shared;
  return swift_task_switch(sub_10029015C, v9, 0LL);
}

uint64_t sub_10029015C()
{
  uint64_t v90 = (uint64_t *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, *(void *)(v0 + 56), v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 88);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 136) + 96LL))(v5, *(void *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_1006440C0 != -1) {
      swift_once(&qword_1006440C0, sub_10028FD5C);
    }
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v13, (uint64_t)qword_10064B950);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    uint64_t v15 = v14(v10, v9, v12);
    unint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 112);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 88);
    if (v18)
    {
      uint64_t v89 = *(void *)(v0 + 88);
      unint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v87 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)unint64_t v22 = 138412290;
      uint64_t v23 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v24 = swift_allocError(v21, v23, 0LL, 0LL);
      v14(v25, v19, v21);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *uint64_t v90 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v90, v0 + 56, v22 + 4, v22 + 12);
      *uint64_t v87 = v26;
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
      v27(v19, v21);
      _os_log_impl( (void *)&_mh_execute_header,  v16,  v17,  "AirDrop Application Service server waiting with error %@",  v22,  0xCu);
      uint64_t v28 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v87, 1LL, v28);
      swift_slowDealloc(v87, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    else
    {

      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v27(v19, v21);
    }

    v27(*(void *)(v0 + 120), *(void *)(v0 + 80));
    goto LABEL_43;
  }

  if (v4 == enum case for NWListener.State.failed(_:))
  {
    uint64_t v29 = *(void *)(v0 + 144);
    uint64_t v30 = *(void *)(v0 + 104);
    uint64_t v31 = *(void *)(v0 + 80);
    uint64_t v32 = *(void *)(v0 + 88);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 136) + 96LL))(v29, *(void *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_1006440C0 != -1) {
      swift_once(&qword_1006440C0, sub_10028FD5C);
    }
    uint64_t v33 = *(void *)(v0 + 96);
    uint64_t v34 = *(void *)(v0 + 104);
    uint64_t v35 = *(void *)(v0 + 80);
    uint64_t v36 = *(void *)(v0 + 88);
    uint64_t v37 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v37, (uint64_t)qword_10064B950);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    uint64_t v39 = v38(v33, v34, v35);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter(v40);
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v44 = *(void *)(v0 + 88);
    uint64_t v43 = *(void *)(v0 + 96);
    uint64_t v45 = *(void *)(v0 + 80);
    if (v42)
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      buf = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v46 = 138412290;
      uint64_t v47 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v48 = swift_allocError(v45, v47, 0LL, 0LL);
      v38(v49, v43, v45);
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError(v48);
      *(void *)(v0 + 40) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v90, v46 + 4, v46 + 12);
      *(void *)buf = v50;
      double v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(v43, v45);
      _os_log_impl( (void *)&_mh_execute_header,  v40,  v41,  "AirDrop Application Service server failed with error %@",  v46,  0xCu);
      uint64_t v52 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(buf, 1LL, v52);
      swift_slowDealloc(buf, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    else
    {
      double v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(*(void *)(v0 + 96), *(void *)(v0 + 80));
    }

    *(void *)(v0 + 168) = v51;
    if (*(void *)(v0 + 64)) {
      NWListener.cancel()();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( *(void *)(v0 + 72) + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate,  v59);
    *(void *)(v0 + 176) = Strong;
    if (Strong)
    {
      uint64_t v61 = (void *)swift_task_alloc(dword_1006497E4);
      *(void *)(v0 + 184) = v61;
      *uint64_t v61 = v0;
      v61[1] = sub_100290B20;
      return sub_10022C4CC(0, *(void *)(v0 + 104));
    }

    (*(void (**)(void, void))(v0 + 168))(*(void *)(v0 + 104), *(void *)(v0 + 80));
    goto LABEL_43;
  }

  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_1006440C0 != -1) {
      swift_once(&qword_1006440C0, sub_10028FD5C);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    uint64_t v54 = sub_100186DE4(v53, (uint64_t)qword_10064B950);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56)) {
      goto LABEL_37;
    }
    uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v57 = 0;
    uint64_t v58 = "AirDrop Application Service server setting up";
LABEL_36:
    _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
    swift_slowDealloc(v57, -1LL, -1LL);
LABEL_37:

    goto LABEL_43;
  }

  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_1006440C0 != -1) {
        swift_once(&qword_1006440C0, sub_10028FD5C);
      }
      uint64_t v75 = type metadata accessor for Logger(0LL);
      uint64_t v76 = sub_100186DE4(v75, (uint64_t)qword_10064B950);
      uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
      os_log_type_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Unknown AirDrop server state", v79, 2u);
        swift_slowDealloc(v79, -1LL, -1LL);
      }

      uint64_t v81 = *(void *)(v0 + 136);
      uint64_t v80 = *(void *)(v0 + 144);
      uint64_t v82 = *(void *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
      goto LABEL_43;
    }

    if (qword_1006440C0 != -1) {
      swift_once(&qword_1006440C0, sub_10028FD5C);
    }
    uint64_t v73 = type metadata accessor for Logger(0LL);
    uint64_t v74 = sub_100186DE4(v73, (uint64_t)qword_10064B950);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v74);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56)) {
      goto LABEL_37;
    }
    uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v57 = 0;
    uint64_t v58 = "AirDrop Application Service server stopped";
    goto LABEL_36;
  }

  if (qword_1006440C0 != -1) {
    swift_once(&qword_1006440C0, sub_10028FD5C);
  }
  uint64_t v63 = type metadata accessor for Logger(0LL);
  uint64_t v64 = sub_100186DE4(v63, (uint64_t)qword_10064B950);
  uint64_t v65 = (os_log_s *)Logger.logObject.getter(v64);
  os_log_type_t v66 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v67 = 0;
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "AirDrop Application Service server ready", v67, 2u);
    swift_slowDealloc(v67, -1LL, -1LL);
  }

  uint64_t v68 = *(void *)(v0 + 72);

  NSString v69 = String._bridgeToObjectiveC()();
  uint64_t v70 = getpid();
  sub_10002FA6C((uint64_t)@"ApplicationServiceAdvertise", (uint64_t)@"Start", (uint64_t)v69, v70);

  uint64_t v72 = swift_unknownObjectWeakLoadStrong( v68 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate,  v71);
  *(void *)(v0 + 160) = v72;
  if (v72) {
    return swift_task_switch(sub_100290A44, static AirDropActor.shared, 0LL);
  }
LABEL_43:
  uint64_t v83 = *(void *)(v0 + 112);
  uint64_t v84 = *(void *)(v0 + 120);
  uint64_t v86 = *(void *)(v0 + 96);
  uint64_t v85 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 144));
  swift_task_dealloc(v84);
  swift_task_dealloc(v83);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100290A44()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = (const char **)(v2
                     + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors);
  *(void *)&double v4 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropReceiveConnectionManager_applicationServiceServerErrors,  v0 + 16,  1LL,  0LL).n128_u64[0];
  uint64_t v5 = *v3;
  *uint64_t v3 = (const char *)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v5, v4);
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_100290AC0, v1, 0LL);
}

uint64_t sub_100290AC0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100290B20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 152LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 184LL));
  swift_unknownObjectRelease(v1);
  return swift_task_switch(sub_100290B80, v2, 0LL);
}

uint64_t sub_100290B80()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 144));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100290BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = swift_allocObject(&unk_1005D7D00, 24LL, 7LL);
  swift_unknownObjectWeakInit(v8 + 16, a2);
  uint64_t v9 = (void *)swift_allocObject(&unk_1005D7D28, 48LL, 7LL);
  v9[2] = 0LL;
  v9[3] = 0LL;
  v9[4] = v8;
  v9[5] = a1;
  swift_retain(a1);
  uint64_t v10 = sub_1001B3808((uint64_t)v6, (uint64_t)&unk_10064B9D0, (uint64_t)v9);
  return swift_release(v10);
}

uint64_t sub_100290CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_100290CF8, 0LL, 0LL);
}

uint64_t sub_100290CF8()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    return swift_task_switch(sub_100290DA8, static AirDropActor.shared, 0LL);
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100290DA8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_100290DE8(*(void *)(v0 + 56));

  return swift_task_switch(sub_100239408, 0LL, 0LL);
}

uint64_t sub_100290DE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  sub_1003515B0();
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections);
  swift_beginAccess(v7, v21, 33LL, 0LL);
  uint64_t v8 = swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  unint64_t v10 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v9 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v10 >= v9 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1LL);
  }
  uint64_t v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, a1);
  specialized Array._endMutation()(v11);
  swift_endAccess(v21);
  uint64_t v12 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v6, 1LL, 1LL, v12);
  uint64_t v13 = swift_allocObject(&unk_1005D7D00, 24LL, 7LL);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  uint64_t v14 = qword_100643F28;
  swift_retain(a1);
  swift_retain(v13);
  if (v14 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v15 = static AirDropActor.shared;
  uint64_t v16 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  os_log_type_t v17 = (void *)swift_allocObject(&unk_1005D7D50, 48LL, 7LL);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = v13;
  v17[5] = a1;
  swift_retain(v15);
  swift_release(v13);
  uint64_t v18 = sub_1001B3808((uint64_t)v6, (uint64_t)&unk_10064B9E0, (uint64_t)v17);
  return swift_release(v18);
}

void sub_100290FC0()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener);
  if (v2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = qword_1006440C0;
    swift_retain(v2);
    if (v4 != -1) {
      swift_once(&qword_1006440C0, sub_10028FD5C);
    }
    uint64_t v5 = type metadata accessor for Logger(0LL);
    uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_10064B950);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Stopping AirDrop Application Service Server", v9, 2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    NWListener.cancel()();
    NSString v10 = String._bridgeToObjectiveC()();
    uint64_t v11 = getpid();
    sub_10002FA6C((uint64_t)@"ApplicationServiceAdvertise", (uint64_t)@"Stop", (uint64_t)v10, v11);

    sub_1002397D0();
    swift_release(v2);
    uint64_t v12 = *(void *)(v3 + v1);
    *(void *)(v3 + v1) = 0LL;
    swift_release(v12);
  }

uint64_t sub_100291138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  uint64_t v6 = type metadata accessor for SDAirDropServerConnection(0LL);
  void v5[8] = v6;
  v5[9] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v5[10] = static AirDropActor.shared;
  return swift_task_switch(sub_1002911CC, v7, 0LL);
}

uint64_t sub_1002911CC()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong
    && (uint64_t v5 = (void *)Strong,
        uint64_t v6 = swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate,  v4),  *(void *)(v0 + 88) = v6,  v5,  v6))
  {
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v7 = *(void **)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 56);
    *uint64_t v7 = v9;
    swift_storeEnumTagMultiPayload(v7, v8, 1LL);
    uint64_t v10 = dword_1006496FC;
    swift_retain(v9);
    uint64_t v11 = (void *)swift_task_alloc(v10);
    *(void *)(v0 + 96) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1002912B8;
    return sub_100228B74(*(void *)(v0 + 72));
  }

  else
  {
    uint64_t v13 = *(void *)(v0 + 72);
    **(_BYTE **)(v0 + 40) = 1;
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002912B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 72LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 80LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 96LL));
  swift_unknownObjectRelease(v1);
  sub_10023A234(v3);
  return swift_task_switch(sub_100291328, v2, 0LL);
}

uint64_t sub_100291328()
{
  uint64_t v1 = *(void *)(v0 + 72);
  **(_BYTE **)(v0 + 40) = 0;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropApplicationServiceServer()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer);
}

uint64_t sub_100291424()
{
  return swift_retain(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener));
}

uint64_t sub_100291434()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType);
}

uint64_t sub_100291448()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100291474(uint64_t a1)
{
  return sub_10028FDEC(a1, *(void *)(v1 + 16));
}

uint64_t sub_10029147C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002914A0(uint64_t a1)
{
  return sub_100290BF0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1002914A8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002914D0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_10064B9CC);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return swift_task_switch(sub_100290CF8, 0LL, 0LL);
}

uint64_t sub_10029153C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_10064B9DC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1001943E8;
  return sub_100291138(a1, v4, v5, v7, v6);
}

uint64_t sub_1002915B4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002915D8()
{
  uint64_t v1 = type metadata accessor for NWListener.State(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100291670(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWListener.State(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_10064B9EC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100195708;
  v9[10] = v7;
  v9[11] = v8;
  v9[8] = a1;
  v9[9] = v6;
  return swift_task_switch(sub_10028FFA8, 0LL, 0LL);
}

id sub_100291710(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_listener] = 0LL;
  v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_serverType] = 0;
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_connections] = _swiftEmptyArrayStorage;
  uint64_t v15 = &v5[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_delegate];
  *((void *)v15 + 1) = 0LL;
  swift_unknownObjectWeakInit(v15, 0LL);
  uint64_t v27 = OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_queue;
  sub_100237A04();
  uint64_t v16 = v5;
  static DispatchQoS.default.getter();
  uint64_t v36 = _swiftEmptyArrayStorage;
  uint64_t v17 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v18 = sub_100183098(&qword_100650E60);
  unint64_t v19 = sub_1001830D8();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v18, v19, v9, v17);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))( v8,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v29);
  uint64_t v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000030LL,  0x8000000100508A70LL,  v14,  v11,  v8,  0LL);
  *(void *)&v5[v27] = v20;
  unint64_t v22 = v30;
  uint64_t v21 = v31;
  *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_deviceStatus] = v30;
  *(void *)&v16[OBJC_IVAR____TtC16DaemoniOSLibrary33SDAirDropApplicationServiceServer_sessionLogger] = v21;
  uint64_t v23 = v33;
  *((void *)v15 + 1) = v32;
  swift_unknownObjectWeakAssign(v15, v23);
  id v24 = v22;
  swift_retain(v21);

  v35.receiver = v16;
  v35.super_class = ObjectType;
  return objc_msgSendSuper2(&v35, "init");
}

uint64_t sub_10029197C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v38 - v9;
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v38 - v15;
  sub_10020F0E4();
  if (!v18) {
    goto LABEL_9;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  sub_10019140C(v1, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v10, v5);
  v38[2] = v11;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1001A4B40((uint64_t)v10, (uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    unint64_t v22 = (uint64_t *)&v16[*(int *)(v11 + 48)];
    uint64_t v23 = *v22;
    id v24 = (const char *)v22[1];
    swift_bridgeObjectRetain(v24);
    sub_1001A4BC8((uint64_t)v16, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    if (v24)
    {
      swift_bridgeObjectRelease(v20);
      return v23;
    }
  }

  else
  {
    sub_1001A4BC8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v25 = type metadata accessor for SDContactStore();
  uint64_t inited = swift_initStackObject(v25, v39);
  v38[0] = v4;
  v38[1] = v14;
  uint64_t v27 = v19;
  uint64_t v28 = (void *)CNContactStoreMeContactDidChangeNotification;
  id v29 = objc_allocWithZone(&OBJC_CLASS___CNContactStore);
  uint64_t v30 = CNContactStoreDidChangeNotification;
  id v31 = v28;
  id v32 = [v29 init];
  *(void *)(inited + 32) = v32;
  uint64_t v33 = (void *)sub_1003DBFB8(v27, v20);

  swift_bridgeObjectRelease(v20);
  if (!v33)
  {
LABEL_9:
    sub_10019140C(v1, (uint64_t)v8);
    uint64_t v36 = (char *)&loc_100291C28 + dword_100291D0C[swift_getEnumCaseMultiPayload(v8, v5)];
    __asm { BR              X10 }
  }

  id v34 = [objc_allocWithZone(CNContactFormatter) init];
  id v35 = [v34 stringFromContact:v33];

  if (v35)
  {
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  }

  else
  {

    return 0LL;
  }

  return v23;
}

uint64_t sub_100291D1C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064BA00);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064BA00);
  if (qword_100643FC8 != -1) {
    swift_once(&qword_100643FC8, sub_10023A3CC);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

BOOL sub_100291DAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_100291DC4()
{
  uint64_t v1 = type metadata accessor for SDTempPairingEndpoint(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v5 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  id v6 = [v5 adHocPairedDeviceIdentities];

  if (v6)
  {
    uint64_t v7 = sub_100183168(0LL, (unint64_t *)&unk_10064BB50, &OBJC_CLASS___RPIdentity_ptr);
    uint64_t v8 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);
  }

  else
  {
    uint64_t v8 = (const char *)_swiftEmptyArrayStorage;
  }

  uint64_t v9 = *(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  *(void *)&double v10 = swift_bridgeObjectRetain(v8).n128_u64[0];
  swift_bridgeObjectRetain(v9, v10);
  uint64_t v12 = (const char *)sub_100297404(v11, (uint64_t)v8);
  *(void *)&double v13 = swift_bridgeObjectRelease(v9).n128_u64[0];
  uint64_t v44 = (uint64_t)v8;
  *(void *)&double v14 = swift_bridgeObjectRelease(v8, v13).n128_u64[0];
  int64_t v15 = *((void *)v12 + 2);
  if (v15)
  {
    uint64_t v45 = _swiftEmptyArrayStorage;
    sub_10018D82C(0, v15, 0);
    uint64_t v16 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v43 = v12;
    uint64_t v17 = (uint64_t)&v12[(v16 + 32) & ~v16];
    uint64_t v18 = *(void *)(v2 + 72);
    uint64_t v19 = v45;
    do
    {
      sub_10029879C(v17, (uint64_t)v4);
      uint64_t v20 = &v4[*(int *)(v1 + 20)];
      uint64_t v21 = *(void *)v20;
      unint64_t v22 = (const char *)*((void *)v20 + 1);
      swift_bridgeObjectRetain(v22);
      sub_1002987E0((uint64_t)v4);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      {
        sub_10018D82C(0, v19[2] + 1LL, 1);
        uint64_t v19 = v45;
      }

      unint64_t v24 = v19[2];
      unint64_t v23 = v19[3];
      if (v24 >= v23 >> 1)
      {
        sub_10018D82C(v23 > 1, v24 + 1, 1);
        uint64_t v19 = v45;
      }

      uint64_t v19[2] = v24 + 1;
      uint64_t v25 = &v19[2 * v24];
      v25[4] = v21;
      v25[5] = v22;
      v17 += v18;
      --v15;
    }

    while (v15);
    unint64_t v26 = swift_bridgeObjectRelease(v43).n128_u64[0];
  }

  else
  {
    unint64_t v26 = swift_bridgeObjectRelease(v12, v14).n128_u64[0];
    uint64_t v19 = _swiftEmptyArrayStorage;
  }

  uint64_t v27 = v44;
  if (!((unint64_t)v44 >> 62))
  {
    uint64_t v28 = *(void *)((v44 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain((const char *)v44, *(double *)&v26);
    if (v28) {
      goto LABEL_15;
    }
LABEL_32:
    id v31 = (char *)_swiftEmptyArrayStorage;
LABEL_33:
    swift_bridgeObjectRelease_n(v27, 2LL);
    uint64_t v45 = v19;
    sub_10028AB28((uint64_t)v31);
    return;
  }

  if (v44 < 0) {
    unint64_t v42 = v44;
  }
  else {
    unint64_t v42 = v44 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v44, *(double *)&v26, v43);
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v28) {
    goto LABEL_32;
  }
LABEL_15:
  if (v28 >= 1)
  {
    uint64_t v29 = 0LL;
    unint64_t v30 = v27 & 0xC000000000000001LL;
    id v31 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if (v30) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v29, v27);
      }
      else {
        id v32 = *(id *)(v27 + 8 * v29 + 32);
      }
      uint64_t v33 = v32;
      id v34 = objc_msgSend(v32, "name", v43);
      if (v34)
      {
        id v35 = v34;
        uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        uint64_t v38 = v37;

        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0) {
          id v31 = sub_10018BC54(0LL, *((void *)v31 + 2) + 1LL, 1, v31);
        }
        unint64_t v40 = *((void *)v31 + 2);
        unint64_t v39 = *((void *)v31 + 3);
        if (v40 >= v39 >> 1) {
          id v31 = sub_10018BC54((char *)(v39 > 1), v40 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v40 + 1;
        os_log_type_t v41 = &v31[16 * v40];
        *((void *)v41 + 4) = v36;
        *((void *)v41 + 5) = v38;
        uint64_t v27 = v44;
      }

      else
      {
      }

      ++v29;
    }

    while (v28 != v29);
    goto LABEL_33;
  }

  __break(1u);
}

void sub_100292150()
{
  id v1 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  id v2 = [v1 adHocPairedDeviceIdentities];

  if (v2)
  {
    uint64_t v3 = sub_100183168(0LL, (unint64_t *)&unk_10064BB50, &OBJC_CLASS___RPIdentity_ptr);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  }

  else
  {
    uint64_t v4 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_3:
      if (*(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_4;
      }
LABEL_11:
      swift_bridgeObjectRelease((const char *)v4);
      uint64_t v11 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState;
      goto LABEL_12;
    }
  }

  if (v4 < 0) {
    uint64_t v12 = v4;
  }
  else {
    uint64_t v12 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v4);
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease((const char *)v4);
  if (!v13) {
    goto LABEL_11;
  }
LABEL_4:
  id v5 = *(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  swift_bridgeObjectRetain(v5);
  uint64_t v7 = (const char *)sub_100297C58(v6, v4);
  *(void *)&double v8 = swift_bridgeObjectRelease(v5).n128_u64[0];
  *(void *)&double v9 = swift_bridgeObjectRelease((const char *)v4, v8).n128_u64[0];
  uint64_t v10 = *((void *)v7 + 2);
  swift_bridgeObjectRelease(v7, v9);
  uint64_t v11 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState;
  if (!v10)
  {
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 2LL;
    goto LABEL_13;
  }

id sub_1002922E4(void *a1)
{
  id v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  uint64_t v5 = type metadata accessor for NWBrowser.Descriptor(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (id *)((char *)&v28.receiver - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  double v9 = &v2[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged];
  *(void *)double v9 = 0LL;
  *((void *)v9 + 1) = 0LL;
  *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState] = 0LL;
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_bluetoothController;
  uint64_t v11 = qword_100644308;
  uint64_t v12 = v2;
  if (v11 != -1) {
    swift_once(&qword_100644308, sub_1003EA8BC);
  }
  uint64_t v13 = (void *)qword_1006698D0;
  *(void *)&v12[v10] = qword_1006698D0;
  UUID.init()(v13);
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier] = &_swiftEmptyDictionarySingleton;
  v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing] = 0;
  id v14 = [objc_allocWithZone(RPClient) init];
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_rpClient] = v14;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue] = a1;
  uint64_t v15 = type metadata accessor for NWParameters(0LL);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  id v16 = a1;
  uint64_t v17 = NWParameters.init()();
  NWParameters.includePeerToPeer.setter(1LL);
  *double v8 = 0xD000000000000011LL;
  v8[1] = 0x8000000100508C70LL;
  v8[2] = 0LL;
  v8[3] = 0LL;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))( v8,  enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:),  v5);
  uint64_t v18 = type metadata accessor for NWBrowser(0LL);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser] = NWBrowser.init(for:using:)(v8, v17);
  uint64_t v19 = type metadata accessor for SDTempPairingStatusItemController();
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_statusItemController] = swift_allocObject( v19,  16LL,  7LL);

  v28.receiver = v12;
  v28.super_class = ObjectType;
  id v20 = objc_msgSendSuper2(&v28, "init");
  uint64_t v21 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v22 = v20;
  id v23 = [v21 defaultCenter];
  [v23 addObserver:v22 selector:"handleRapportIdentitiesChanged" name:off_100643AF8 object:0];

  id v24 = [v21 defaultCenter];
  id v25 = v22;
  unint64_t v26 = @"com.apple.sharingd.DiscoverableModeChanged";
  [v24 addObserver:v25 selector:"handleDiscoverableModeChanged" name:v26 object:0];

  return v25;
}

void sub_100292604()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064BA00);
  double v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Starting to scan over bluetooth", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))( v5,  v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_scanningIdentifier,  v2);
  uint64_t v11 = swift_allocObject(&unk_1005D7E60, 24LL, 7LL);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  swift_retain(v11);
  sub_1003E9E44((uint64_t)v5, (uint64_t)sub_100298914, v11);
  swift_release(v11);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_release(v11);
  sub_100292150();
}

void sub_1002927B0(void *a1, char a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(a3 + 16, v10, 0LL, 0LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v4, v5);
    if (!Strong) {
      return;
    }
    uint64_t v7 = (void *)Strong;
    sub_10029283C(a1);
  }

  else
  {
    swift_beginAccess(a3 + 16, v10, 0LL, 0LL);
    uint64_t v9 = swift_unknownObjectWeakLoadStrong(v4, v8);
    if (!v9) {
      return;
    }
    uint64_t v7 = (void *)v9;
    sub_1002935CC(a1);
  }
}

void sub_10029283C(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 identifier];
  if (!v3) {
    return;
  }
  uint64_t v4 = v3;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  uint64_t v7 = v6;

  uint64_t v8 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier,  v111,  0LL,  0LL);
  uint64_t v103 = v5;
  uint64_t v105 = v8;
  if (*((void *)*v8 + 2))
  {
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v9, (uint64_t)qword_10064BA00);
    uint64_t v10 = a1;
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v14 = swift_slowAlloc(32LL, -1LL);
      v108 = v10;
      uint64_t v109 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = sub_100183168(0LL, &qword_10064BB78, &OBJC_CLASS___CBDevice_ptr);
      id v16 = v10;
      uint64_t v17 = String.init<A>(describing:)(&v108, v15);
      uint64_t v19 = (const char *)v18;
      v108 = (const char *)sub_10018CDB4(v17, v18, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v19);
LABEL_11:

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Found AirDrop device: %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1LL, -1LL);
      swift_slowDealloc(v13, -1LL, -1LL);
      goto LABEL_13;
    }
  }

  else
  {
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v20, (uint64_t)qword_10064BA00);
    uint64_t v10 = a1;
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v14 = swift_slowAlloc(32LL, -1LL);
      v108 = v10;
      uint64_t v109 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v21 = sub_100183168(0LL, &qword_10064BB78, &OBJC_CLASS___CBDevice_ptr);
      id v16 = v10;
      uint64_t v22 = String.init<A>(describing:)(&v108, v21);
      id v24 = (const char *)v23;
      v108 = (const char *)sub_10018CDB4(v22, v23, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v108, &v109, v13 + 4, v13 + 12);
      swift_bridgeObjectRelease(v24);
      goto LABEL_11;
    }
  }

LABEL_13:
  id v25 = [a1 airdropTempAuthTagData];
  if (v25)
  {
    unint64_t v26 = v25;
    uint64_t v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v25);
    unint64_t v29 = v28;

    id v30 = [a1 btAddressData];
    if (v30)
    {
      id v31 = v30;
      id v32 = v7;
      uint64_t v33 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v30);
      unint64_t v35 = v34;

      id v36 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      Class v38 = Data._bridgeToObjectiveC()().super.isa;
      unsigned int v39 = [v36 isTempAuthTagKnown:isa bluetoothAddressData:v38];

      if (v39)
      {
        unint64_t v104 = v35;
        uint64_t v106 = v33;
        swift_bridgeObjectRelease(v32);
        if (qword_1006440C8 != -1) {
          swift_once(&qword_1006440C8, sub_100291D1C);
        }
        uint64_t v40 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v40, (uint64_t)qword_10064BA00);
        sub_10019BA8C(v27, v29);
        uint64_t v41 = sub_10019BA8C(v27, v29);
        unint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v45 = swift_slowAlloc(32LL, -1LL);
          v108 = (const char *)v45;
          *(_DWORD *)uint64_t v44 = 136315138;
          sub_1002DDC60(v27, v29);
          uint64_t v47 = (const char *)v46;
          uint64_t v109 = v46;
          uint64_t v48 = sub_100183098((uint64_t *)&unk_10064D7D0);
          uint64_t v49 = sub_1001CD538( (unint64_t *)&qword_100649800,  (uint64_t *)&unk_10064D7D0,  (uint64_t)&protocol conformance descriptor for [A]);
          uint64_t v50 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v48, v49);
          uint64_t v52 = v51;
          swift_bridgeObjectRelease(v47);
          uint64_t v109 = v50;
          uint64_t v110 = v52;
          uint64_t v53 = String.init<A>(describing:)(&v109, &type metadata for String);
          uint64_t v55 = (const char *)v54;
          uint64_t v109 = sub_10018CDB4(v53, v54, (uint64_t *)&v108);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, &v110, v44 + 4, v44 + 12);
          swift_bridgeObjectRelease(v55);
          sub_100189B20(v27, v29);
          sub_100189B20(v27, v29);
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Recognized temp auth tag: %s", v44, 0xCu);
          swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v45, -1LL, -1LL);
          swift_slowDealloc(v44, -1LL, -1LL);
        }

        else
        {
          sub_100189B20(v27, v29);
          sub_100189B20(v27, v29);
        }

        sub_1003EA12C();
        sub_100189B20(v106, v104);
        sub_100189B20(v27, v29);
        return;
      }

      sub_100189B20(v33, v35);
      uint64_t v7 = v32;
    }

    sub_100189B20(v27, v29);
  }

  id v56 = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (!v56)
  {
    __break(1u);
    return;
  }

  uint64_t v57 = v56;
  id v58 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  char v59 = sub_100381210(v57, v58);

  if ((v59 & 1) != 0)
  {
    swift_bridgeObjectRelease(v7);
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v60 = type metadata accessor for Logger(0LL);
    uint64_t v61 = sub_100186DE4(v60, (uint64_t)qword_10064BA00);
    uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v63 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Device is already known", v64, 2u);
      swift_slowDealloc(v64, -1LL, -1LL);
    }

void sub_1002935CC(void *a1)
{
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064BA00);
  id v3 = a1;
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v13 = (uint64_t)v3;
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v8 = sub_100183168(0LL, &qword_10064BB78, &OBJC_CLASS___CBDevice_ptr);
    id v9 = v3;
    uint64_t v10 = String.init<A>(describing:)(&v13, v8);
    os_log_type_t v12 = (const char *)v11;
    uint64_t v13 = sub_10018CDB4(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Lost AirDrop device: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
  }

  sub_1002964A4(v3, 1);
}

void sub_1002937A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWBrowser.Descriptor(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v5 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_10064BA00);
  os_log_type_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "Stopping browsing over Bonjour for available endpoints",  v14,  2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))( v9,  v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_scanningIdentifier,  v6);
  sub_1003E9E7C((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser;
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser);
  swift_retain(v16);
  NWBrowser.cancel()();
  swift_release(v16);
  uint64_t v17 = type metadata accessor for NWParameters(0LL);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  uint64_t v18 = NWParameters.init()();
  NWParameters.includePeerToPeer.setter(1LL);
  *os_log_type_t v5 = 0xD000000000000011LL;
  v5[1] = 0x8000000100508C70LL;
  v5[2] = 0LL;
  v5[3] = 0LL;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))( v5,  enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:),  v2);
  uint64_t v19 = type metadata accessor for NWBrowser(0LL);
  swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  uint64_t v20 = NWBrowser.init(for:using:)(v5, v18);
  uint64_t v21 = *(void *)(v1 + v15);
  *(void *)(v1 + v15) = v20;
  swift_release(v21);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 0LL;
  uint64_t v22 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged;
  unint64_t v23 = *(void (**)(uint64_t))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v23)
  {
    uint64_t v24 = *(void *)(v22 + 8);
    uint64_t v25 = swift_retain(v24);
    v23(v25);
    sub_100224FF8((uint64_t)v23, v24);
  }

  unint64_t v26 = *(const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v26);
  sub_100292150();
  uint64_t v27 = *(void (**)(uint64_t))v22;
  if (*(void *)v22)
  {
    uint64_t v28 = *(void *)(v22 + 8);
    uint64_t v29 = swift_retain(v28);
    v27(v29);
    sub_100224FF8((uint64_t)v27, v28);
  }

  unint64_t v30 = sub_10039230C((uint64_t)_swiftEmptyArrayStorage);
  id v31 = (const char **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  *(void *)&double v32 = swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier,  v38,  1LL,  0LL).n128_u64[0];
  uint64_t v33 = *v31;
  *id v31 = (const char *)v30;
  swift_bridgeObjectRelease(v33, v32);
  unint64_t v34 = *(void (**)(uint64_t))v22;
  if (*(void *)v22)
  {
    uint64_t v35 = *(void *)(v22 + 8);
    uint64_t v36 = swift_retain(v35);
    v34(v36);
    sub_100224FF8((uint64_t)v34, v35);
  }

  *(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) = 0;
}

void sub_100293AF4(uint64_t a1, const char *a2)
{
  uint64_t v45 = a1;
  uint64_t v44 = type metadata accessor for SDTempPairingConnection.Role(0LL);
  __chkstk_darwin(v44);
  os_log_type_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v6 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  uint64_t v7 = (os_log_s *)[v6 temporarySelfIdentity];

  uint64_t v46 = v7;
  if (!v7)
  {
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_10064BA00);
    uint64_t v46 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v15 = static os_log_type_t.error.getter(v46);
    if (os_log_type_enabled(v46, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v15, "No temporary identity", v16, 2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    goto LABEL_20;
  }

  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_10064BA00);
  id v9 = v2;
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)os_log_type_t v12 = 134217984;
    uint64_t v47 = *(void *)(*(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints] + 16LL);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v12 + 4, v12 + 12);

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Pairing to %ld available endpoints", v12, 0xCu);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {
  }

  *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState] = 1LL;
  uint64_t v17 = *(void (**)(uint64_t))&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged];
  if (v17)
  {
    uint64_t v18 = *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8];
    uint64_t v19 = swift_retain(v18);
    v17(v19);
    sub_100224FF8((uint64_t)v17, v18);
  }

  uint64_t v20 = *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_availableEndpoints];
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
LABEL_20:

    return;
  }

  uint64_t v22 = &v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections];
  id v42 = *(id *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue];
  os_log_type_t v43 = v9;
  uint64_t v23 = *(void *)(type metadata accessor for SDTempPairingEndpoint(0LL) - 8);
  uint64_t v24 = v20 + ((*(unsigned __int8 *)(v23 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  uint64_t v25 = *(void *)(v23 + 72);
  uint64_t v41 = (const char *)v20;
  swift_bridgeObjectRetain((const char *)v20);
  do
  {
    unint64_t v26 = &v5[*(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48)];
    sub_10029879C(v24, (uint64_t)v5);
    uint64_t v27 = v44;
    *(void *)unint64_t v26 = v45;
    *((void *)v26 + 1) = a2;
    swift_storeEnumTagMultiPayload(v5, v27, 0LL);
    uint64_t v28 = type metadata accessor for SDTempPairingConnection(0LL);
    swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
    swift_bridgeObjectRetain(a2);
    uint64_t v29 = v46;
    id v30 = v42;
    id v31 = sub_1003241B4((uint64_t)v5, v29, v30);

    uint64_t v32 = swift_allocObject(&unk_1005D7E60, 24LL, 7LL);
    swift_unknownObjectWeakInit(v32 + 16, v43);
    uint64_t v33 = swift_allocObject(&unk_1005D7FA0, 32LL, 7LL);
    *(void *)(v33 + swift_weakDestroy(v0 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    uint64_t v34 = v31[3];
    uint64_t v35 = v31[4];
    v31[3] = sub_100298E68;
    v31[4] = v33;
    swift_retain(v31);
    sub_100224FF8(v34, v35);
    swift_beginAccess(v22, &v47, 33LL, 0LL);
    uint64_t v36 = swift_retain(v31);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
    unint64_t v38 = *(void *)((*(void *)v22 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v37 = *(void *)((*(void *)v22 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v38 >= v37 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1LL);
    }
    uint64_t v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v31);
    specialized Array._endMutation()(v39);
    swift_endAccess(&v47);
    swift_release(v31);
    v24 += v25;
    --v21;
  }

  while (v21);

  swift_bridgeObjectRelease(v41);
}

void sub_100293F9C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    sub_100294008(a1, a3);
  }

uint64_t sub_100294008(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_10064BA00);
  id v7 = a1;
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = v3;
    uint64_t v31 = (uint64_t)v7;
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    v33[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_100183168(0LL, (unint64_t *)&unk_10064BB50, &OBJC_CLASS___RPIdentity_ptr);
    id v13 = v7;
    uint64_t v14 = String.init<A>(describing:)(&v31, v12);
    uint64_t v16 = (const char *)v15;
    uint64_t v31 = sub_10018CDB4(v14, v15, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding remote identity: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v17 = v11;
    uint64_t v3 = v30;
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_rpClient);
  objc_msgSend(v18, "addOrUpdateIdentity:completion:", v7, 0, v30);
  NWConnection.cancel()();
  uint64_t v19 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections;
  swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_activeConnections, v33, 33LL, 0LL);
  swift_retain(a2);
  int64_t v20 = sub_100298A24((const char **)v19, a2);
  swift_release(a2);
  uint64_t v21 = *(void *)v19;
  if (!(*(void *)v19 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v22 >= v20) {
      goto LABEL_8;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  if (v21 < 0) {
    uint64_t v27 = *(void *)v19;
  }
  else {
    uint64_t v27 = v21 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(const char **)v19);
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease((const char *)v21);
  if (v22 < v20) {
    goto LABEL_18;
  }
LABEL_8:
  sub_1003C0F34(v20, v22);
  swift_endAccess(v33);
  uint64_t v19 = *(void *)v19;
  if (!((unint64_t)v19 >> 62))
  {
    if (*(void *)((v19 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }

void sub_100294364()
{
  uint64_t v1 = v0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 3LL;
  uint64_t v2 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    uint64_t v4 = swift_retain(v3);
    v2(v4);
    sub_100224FF8((uint64_t)v2, v3);
  }

  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = sub_100186DE4(v5, (uint64_t)qword_10064BA00);
  id v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unpairing and regenerating temporary self identity", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  id v10 = [objc_allocWithZone(RPClient) init];
  uint64_t v11 = swift_allocObject(&unk_1005D7E60, 24LL, 7LL);
  swift_unknownObjectWeakInit(v11 + 16, v1);
  uint64_t v12 = swift_allocObject(&unk_1005D7F50, 32LL, 7LL);
  *(void *)(v12 + swift_weakDestroy(v0 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  v16[4] = sub_100298E34;
  uint64_t v17 = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256LL;
  v16[2] = sub_1002270C0;
  v16[3] = &unk_1005D7F68;
  id v13 = _Block_copy(v16);
  uint64_t v14 = v17;
  id v15 = v10;
  swift_release(v14);
  sub_1000EDCB4(v15, v13);
  _Block_release(v13);
}

void sub_100294544(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v6, (uint64_t)qword_10064BA00);
    swift_errorRetain(a1);
    uint64_t v7 = swift_errorRetain(a1);
    os_log_type_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v11 = swift_slowAlloc(32LL, -1LL);
      uint64_t v26 = a1;
      v27[0] = v11;
      *(_DWORD *)id v10 = 136315138;
      swift_errorRetain(a1);
      uint64_t v12 = sub_100183098(&qword_100645710);
      uint64_t v13 = String.init<A>(describing:)(&v26, v12);
      id v15 = (const char *)v14;
      uint64_t v26 = sub_10018CDB4(v13, v14, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v10 + 4, v10 + 12);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to regenerate temporary self identity: %s", v10, 0xCu);
      swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1LL, -1LL);
      swift_slowDealloc(v10, -1LL, -1LL);

      swift_errorRelease(a1);
      goto LABEL_12;
    }

    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  else
  {
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_10064BA00);
    os_log_type_t v8 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v18, "Successfully regenerated temporary self identity", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }
  }

LABEL_12:
  [a2 invalidate];
  swift_beginAccess(v4, v27, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v4, v20);
  if (Strong)
  {
    uint64_t v22 = (void *)Strong;
    *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState) = 0LL;
    uint64_t v23 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
    if (v23)
    {
      uint64_t v24 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
      uint64_t v25 = swift_retain(v24);
      v23(v25);
      sub_100224FF8((uint64_t)v23, v24);
    }
  }

void sub_10029484C()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing;
  if ((v0[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing] & 1) != 0)
  {
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064BA00);
    oslog = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Already browsing over Bonjour for temp pairing", v5, 2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }
  }

  else
  {
    uint64_t v6 = v0;
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_10064BA00);
    os_log_type_t v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Starting to browse over Bonjour for available endpoints",  v11,  2u);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    v6[v1] = 1;
    uint64_t v12 = OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser;
    uint64_t v13 = *(void *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser];
    uint64_t v14 = swift_allocObject(&unk_1005D7ED8, 24LL, 7LL);
    *(void *)(v14 + swift_weakDestroy(v0 + 16) = v6;
    swift_retain(v13);
    id v15 = v6;
    NWBrowser.stateUpdateHandler.setter(sub_100298940, v14);
    swift_release(v13);
    uint64_t v16 = *(void *)&v6[v12];
    uint64_t v17 = swift_allocObject(&unk_1005D7E60, 24LL, 7LL);
    swift_unknownObjectWeakInit(v17 + 16, v15);
    swift_retain(v16);
    swift_retain(v17);
    NWBrowser.browseResultsChangedHandler.setter(sub_100298948, v17);
    swift_release(v17);
    swift_release(v16);
    uint64_t v18 = *(void *)&v6[v12];
    uint64_t v19 = *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue];
    swift_retain(v18);
    NWBrowser.start(queue:)(v19);
    swift_release(v18);
  }

uint64_t sub_100294ACC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NWBrowser.State(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v38 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v38 - v15;
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v17, (uint64_t)qword_10064BA00);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v43 = a1;
  uint64_t v19 = v18(v16, a1, v7);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = a2;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    id v42 = v11;
    uint64_t v25 = v24;
    uint64_t v45 = v24;
    uint64_t v40 = v6;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v39 = v23 + 4;
    v18(v14, (uint64_t)v16, v7);
    uint64_t v26 = String.init<A>(describing:)(v14, v7);
    uint64_t v28 = (const char *)v27;
    uint64_t v44 = sub_10018CDB4(v26, v27, &v45);
    uint64_t v6 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v39, v23 + 12);
    __n128 v29 = swift_bridgeObjectRelease(v28);
    uint64_t v30 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v30(v16, v7, v29);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Bonjour server state changed to %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v31 = v25;
    uint64_t v11 = v42;
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v23;
    a2 = v41;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
    uint64_t v30 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    ((void (*)(char *, uint64_t))v30)(v16, v7);
  }

  v18(v11, v43, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if ((_DWORD)result == enum case for NWBrowser.State.failed(_:))
  {
    uint64_t v34 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v6, 1LL, 1LL, v34);
    uint64_t v35 = (void *)swift_allocObject(&unk_1005D7F28, 40LL, 7LL);
    v35[2] = 0LL;
    v35[3] = 0LL;
    v35[4] = a2;
    id v36 = a2;
    uint64_t v37 = sub_1001B37E8((uint64_t)v6, (uint64_t)&unk_10064BBB0, (uint64_t)v35);
    swift_release(v37);
    return ((uint64_t (*)(char *, uint64_t))v30)(v11, v7);
  }

  if ((_DWORD)result == enum case for NWBrowser.State.waiting(_:)
    || (_DWORD)result != enum case for NWBrowser.State.setup(_:)
    && (_DWORD)result != enum case for NWBrowser.State.ready(_:)
    && (_DWORD)result != enum case for NWBrowser.State.cancelled(_:))
  {
    return ((uint64_t (*)(char *, uint64_t))v30)(v11, v7);
  }

  return result;
}

uint64_t sub_100294E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_100294E64, 0LL, 0LL);
}

uint64_t sub_100294E64()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100294EC8, static AirDropActor.shared, 0LL);
}

uint64_t sub_100294EC8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100294EF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWBrowser.Descriptor(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064BA00);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Restarting Bonjour browsing", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  *(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_hasStartedBonjourBrowsing) = 0;
  uint64_t v11 = type metadata accessor for NWParameters(0LL);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  uint64_t v12 = NWParameters.init()();
  NWParameters.includePeerToPeer.setter(1LL);
  *uint64_t v5 = 0xD000000000000011LL;
  v5[1] = 0x8000000100508C70LL;
  v5[2] = 0LL;
  v5[3] = 0LL;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))( v5,  enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:),  v2);
  uint64_t v13 = type metadata accessor for NWBrowser(0LL);
  swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  uint64_t v14 = NWBrowser.init(for:using:)(v5, v12);
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_browser) = v14;
  swift_release(v15);
  sub_10029484C();
}

uint64_t sub_1002950CC(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v5);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a3 += 16LL;
  swift_beginAccess(a3, v15, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(a3, v8);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v7, 1LL, 1LL, v11);
    uint64_t v12 = (void *)swift_allocObject(&unk_1005D7F00, 48LL, 7LL);
    v12[2] = 0LL;
    v12[3] = 0LL;
    v12[4] = v10;
    v12[5] = a1;
    swift_bridgeObjectRetain(a1);
    uint64_t v13 = sub_1001B37E8((uint64_t)v7, (uint64_t)&unk_10064BB88, (uint64_t)v12);
    return swift_release(v13);
  }

  return result;
}

uint64_t sub_1002951C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return swift_task_switch(sub_1002951D8, 0LL, 0LL);
}

uint64_t sub_1002951D8()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10029523C, static AirDropActor.shared, 0LL);
}

uint64_t sub_10029523C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10029526C(uint64_t a1)
{
  uint64_t v80 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  id v78 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for NWBrowser.Result.Metadata(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = type metadata accessor for NWTXTRecord(0LL);
  uint64_t v82 = *(void *)(v85 - 8);
  uint64_t v7 = __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v81 = (char *)&v76 - v9;
  uint64_t v10 = sub_100183098(&qword_10064BB90);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = type metadata accessor for SDTempPairingEndpoint(0LL);
  uint64_t v99 = *(void *)(v97 - 8);
  uint64_t v13 = __chkstk_darwin(v97);
  uint64_t v94 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  char v77 = (char *)&v76 - v16;
  __chkstk_darwin(v15);
  uint64_t v93 = (uint64_t)&v76 - v17;
  uint64_t v18 = type metadata accessor for NWBrowser.Result(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20);
  uint64_t v91 = (char *)&v76 - v23;
  uint64_t v103 = (const char *)_swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v86 = a1 + 56;
  uint64_t v25 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v26 = -1LL;
  if (v25 < 64) {
    uint64_t v26 = ~(-1LL << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v87 = (unint64_t)(v25 + 63) >> 6;
  int v90 = enum case for NWBrowser.Result.Metadata.bonjour(_:);
  __n128 v28 = swift_bridgeObjectRetain((const char *)a1);
  int64_t v29 = 0LL;
  uint64_t v96 = v3;
  uint64_t v89 = v4;
  uint64_t v88 = v6;
  uint64_t v95 = v12;
  uint64_t v92 = v18;
  uint64_t v98 = v19;
  uint64_t v83 = a1;
  while (1)
  {
    if (v27)
    {
      uint64_t v30 = v4;
      unint64_t v31 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      int64_t v100 = v29;
      unint64_t v32 = v31 | (v29 << 6);
      goto LABEL_22;
    }

    int64_t v33 = v29 + 1;
    if (__OFADD__(v29, 1LL))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }

    if (v33 >= v87) {
      goto LABEL_33;
    }
    unint64_t v34 = *(void *)(v86 + 8 * v33);
    int64_t v35 = v29 + 1;
    if (!v34)
    {
      int64_t v35 = v29 + 2;
      if (v29 + 2 >= v87) {
        goto LABEL_33;
      }
      unint64_t v34 = *(void *)(v86 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = v29 + 3;
        if (v29 + 3 >= v87) {
          goto LABEL_33;
        }
        unint64_t v34 = *(void *)(v86 + 8 * v35);
        if (!v34) {
          break;
        }
      }
    }

void sub_100295C10()
{
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064BA00);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Rapport identities changed, updating connection state", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  sub_100292150();
  id v5 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  id v6 = [v5 adHocPairedDeviceIdentities];

  if (v6)
  {
    uint64_t v7 = sub_100183168(0LL, (unint64_t *)&unk_10064BB50, &OBJC_CLASS___RPIdentity_ptr);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0) {
        uint64_t v10 = v8;
      }
      else {
        uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain((const char *)v8);
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v10);
      swift_bridgeObjectRelease((const char *)v8);
    }

    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    swift_bridgeObjectRelease((const char *)v8);
    if (!v9) {
      sub_1003EA140();
    }
  }

  else
  {
    __break(1u);
  }

void sub_100295DE8()
{
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064BA00);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "AirDrop discoverable mode changed", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  id v5 = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (v5)
  {
    id v6 = v5;
    id v7 = [v5 discoverableLevel];

    if (v7)
    {
      sub_100292604();
    }

    else
    {
      sub_1002937A8();
      sub_100294364();
    }
  }

  else
  {
    __break(1u);
  }

uint64_t sub_100295F48(uint64_t a1, const char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  __chkstk_darwin(v6);
  uint64_t v60 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  __chkstk_darwin(v8);
  unint64_t v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v56 = type metadata accessor for DispatchTime(0LL);
  uint64_t v54 = *(void *)(v56 - 8);
  uint64_t v14 = __chkstk_darwin(v56);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v51 - v17;
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v18 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v18, (uint64_t)qword_10064BA00);
  uint64_t v19 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v51 = v3;
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v53 = a1;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v52 = v10;
    uint64_t v25 = v24;
    aBlock[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    swift_bridgeObjectRetain(a2);
    uint64_t v65 = (const char *)sub_10018CDB4(v53, (unint64_t)a2, aBlock);
    uint64_t v3 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Ask to AirDrop device (%s) within bubble", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v26 = v25;
    uint64_t v10 = v52;
    swift_slowDealloc(v26, -1LL, -1LL);
    unint64_t v27 = v23;
    a1 = v53;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  __n128 v28 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  *(void *)&double v29 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier,  aBlock,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(a2, v29);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v28);
  uint64_t v65 = *v28;
  const char *v28 = (const char *)0x8000000000000000LL;
  sub_1003B3944(1, a1, a2, isUniquelyReferenced_nonNull_native);
  unint64_t v31 = *v28;
  const char *v28 = v65;
  *(void *)&double v32 = swift_bridgeObjectRelease(v31).n128_u64[0];
  swift_bridgeObjectRelease(a2, v32);
  swift_endAccess(aBlock);
  int64_t v33 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
  if (v33)
  {
    uint64_t v34 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
    uint64_t v35 = swift_retain(v34);
    v33(v35);
    sub_100224FF8((uint64_t)v33, v34);
  }

  uint64_t v36 = sub_1003EA374();
  uint64_t v53 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_queue);
  static DispatchTime.now()(v36);
  void *v13 = 5LL;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))( v13,  enum case for DispatchTimeInterval.seconds(_:),  v10);
  uint64_t v37 = v55;
  + infix(_:_:)(v16, v13);
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v54 + 8);
  uint64_t v39 = v56;
  v38(v16, v56);
  uint64_t v40 = swift_allocObject(&unk_1005D7E60, 24LL, 7LL);
  swift_unknownObjectWeakInit(v40 + 16, v3);
  aBlock[4] = (uint64_t)sub_100298884;
  uint64_t v64 = v40;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_1001B9FE4;
  aBlock[3] = (uint64_t)&unk_1005D7E78;
  uint64_t v41 = _Block_copy(aBlock);
  uint64_t v42 = swift_retain(v40);
  uint64_t v43 = v57;
  static DispatchQoS.unspecified.getter(v42);
  uint64_t v65 = (const char *)_swiftEmptyArrayStorage;
  uint64_t v44 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v45 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v46 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v47 = v60;
  uint64_t v48 = v45;
  uint64_t v49 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v65, v48, v46, v62, v44);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v37, v43, v47, v41);
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v49);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v59);
  v38(v37, v39);
  swift_release(v64);
  return swift_release(v40);
}

void sub_1002964A4(void *a1, char a2)
{
  uint64_t v3 = v2;
  id v6 = [a1 identifier];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v10 = v9;

    uint64_t v11 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier;
    swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier,  v16,  33LL,  0LL);
    sub_1001CA370(v8, (uint64_t)v10);
    swift_endAccess(v16);
    swift_bridgeObjectRelease(v10);
    uint64_t v12 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
    if (v12)
    {
      uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
      uint64_t v14 = swift_retain(v13);
      v12(v14);
      sub_100224FF8((uint64_t)v12, v13);
    }

    if ((a2 & 1) != 0)
    {
      id v15 = [(id)objc_opt_self(SDProximityController) sharedController];
      [v15 notifyDeviceLost:a1];
    }

    if (!*(void *)(*(void *)v11 + 16LL)) {
      sub_1003EA374();
    }
  }

uint64_t sub_1002965DC(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a1 += 16LL;
  swift_beginAccess(a1, v16, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(a1, v5);
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v4, 1LL, 1LL, v8);
    uint64_t v9 = qword_100643F28;
    id v10 = v7;
    if (v9 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v11 = static AirDropActor.shared;
    uint64_t v12 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v13 = (void *)swift_allocObject(&unk_1005D7EB0, 40LL, 7LL);
    v13[2] = v11;
    v13[3] = v12;
    v13[4] = v10;
    swift_retain(v11);
    uint64_t v14 = sub_1001B37E8((uint64_t)v4, (uint64_t)&unk_10064BB70, (uint64_t)v13);

    return swift_release(v14);
  }

  return result;
}

uint64_t sub_10029673C()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002967A0, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002967A0()
{
  if (qword_1006440C8 != -1) {
    swift_once(&qword_1006440C8, sub_100291D1C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064BA00);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Nearby device is close timer fired", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10029697C()
{
  return type metadata accessor for SDTempPairingClient(0LL);
}

uint64_t type metadata accessor for SDTempPairingClient(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_10064BAA8, (uint64_t)&nominal type descriptor for SDTempPairingClient);
}

uint64_t sub_100296998(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = &unk_1004D2708;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = (char *)&value witness table for () + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v4[8] = *(void *)(result - 8) + 64LL;
    v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = &unk_1004D2720;
    return swift_updateClassMetadata2(a1, 256LL, 13LL, v4, a1 + 80);
  }

  return result;
}

__n128 sub_100296A64()
{
  uint64_t v0 = sub_100183168(0LL, (unint64_t *)&qword_100645140, &OBJC_CLASS___NSUserDefaults_ptr);
  uint64_t v1 = (void *)static NSUserDefaults.airdrop.getter(v0);
  char v2 = SFAirDropUserDefaults.a2aRangingAssumeFar.getter();

  if ((v2 & 1) != 0)
  {
    if (qword_1006440C8 != -1) {
      swift_once(&qword_1006440C8, sub_100291D1C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_10064BA00);
    oslog = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Assuming device is not in range", v7, 2u);
      swift_slowDealloc(v7, -1LL, -1LL);
    }
  }

  else
  {
    uint64_t v9 = UUID.uuidString.getter(v3);
    uint64_t v11 = v10;
    sub_100295F48(v9, v10);
    return swift_bridgeObjectRelease(v11);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for SDNearFieldTapType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

uint64_t storeEnumTagSinglePayload for SDTempPairingDeviceRangingState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100296D18 + 4 * byte_1004D26C5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100296D4C + 4 * asc_1004D26C0[v4]))();
}

uint64_t sub_100296D4C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100296D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100296D5CLL);
  }
  return result;
}

uint64_t sub_100296D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100296D70LL);
  }
  *(_BYTE *)__n128 result = a2 + 1;
  return result;
}

uint64_t sub_100296D74(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100296D7C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100296D88(_BYTE *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingDeviceRangingState()
{
  return &type metadata for SDTempPairingDeviceRangingState;
}

uint64_t *sub_100296DA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    id v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = *(const char **)((char *)a2 + v8 + 8);
    void *v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = *(uint64_t *)((char *)a2 + v8 + 16);
    unint64_t v13 = v10[3];
    swift_bridgeObjectRetain(v11);
    sub_10019BA8C(v12, v13);
    v9[2] = v12;
    v9[3] = v13;
    uint64_t v14 = v10[4];
    unint64_t v15 = v10[5];
    sub_10019BA8C(v14, v15);
    v9[4] = v14;
    v9[5] = v15;
  }

  return a1;
}

uint64_t sub_100296E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease(*(const char **)(v5 + 8));
  sub_100189B20(*(void *)(v5 + 16), *(void *)(v5 + 24));
  return sub_100189B20(*(void *)(v5 + 32), *(void *)(v5 + 40));
}

uint64_t sub_100296EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  id v10 = *(const char **)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = *(void *)(a2 + v7 + 16);
  unint64_t v12 = *(void *)(a2 + v7 + 24);
  swift_bridgeObjectRetain(v10);
  sub_10019BA8C(v11, v12);
  v8[2] = v11;
  v8[3] = v12;
  uint64_t v13 = *(void *)(v9 + 32);
  unint64_t v14 = *(void *)(v9 + 40);
  sub_10019BA8C(v13, v14);
  v8[4] = v13;
  v8[5] = v14;
  return a1;
}

uint64_t sub_100296F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *(void *)(a2 + v7);
  id v10 = *(const char **)(a2 + v7 + 8);
  uint64_t v11 = *(const char **)(a1 + v7 + 8);
  v8[1] = v10;
  *(void *)&double v12 = swift_bridgeObjectRetain(v10).n128_u64[0];
  swift_bridgeObjectRelease(v11, v12);
  uint64_t v13 = v9[2];
  unint64_t v14 = v9[3];
  sub_10019BA8C(v13, v14);
  uint64_t v15 = v8[2];
  unint64_t v16 = v8[3];
  v8[2] = v13;
  v8[3] = v14;
  sub_100189B20(v15, v16);
  uint64_t v17 = v9[4];
  unint64_t v18 = v9[5];
  sub_10019BA8C(v17, v18);
  uint64_t v19 = v8[4];
  unint64_t v20 = v8[5];
  v8[4] = v17;
  v8[5] = v18;
  sub_100189B20(v19, v20);
  return a1;
}

uint64_t sub_100297014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  __int128 v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_100297080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(const char **)(a1 + v7 + 8);
  *uint64_t v8 = *(void *)v9;
  v8[1] = v10;
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = v8[2];
  unint64_t v13 = v8[3];
  *((_OWORD *)v8 + 1) = *(_OWORD *)(v9 + 16);
  sub_100189B20(v12, v13);
  uint64_t v14 = v8[4];
  unint64_t v15 = v8[5];
  *((_OWORD *)v8 + 2) = *(_OWORD *)(v9 + 32);
  sub_100189B20(v14, v15);
  return a1;
}

uint64_t sub_10029710C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100297118);
}

uint64_t sub_100297118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_100297198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002971A4);
}

uint64_t sub_1002971A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for NWEndpoint(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SDTempPairingEndpoint(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064BB10, (uint64_t)&nominal type descriptor for SDTempPairingEndpoint);
}

uint64_t sub_100297234(uint64_t a1)
{
  uint64_t result = type metadata accessor for NWEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "0";
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_1002972A8()
{
  unint64_t result = qword_10064BB48;
  if (!qword_10064BB48)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D27D0, &type metadata for SDTempPairingDeviceRangingState);
    atomic_store(result, (unint64_t *)&qword_10064BB48);
  }

  return result;
}

uint64_t sub_1002972EC(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0) {
      uint64_t v9 = a1;
    }
    else {
      uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    swift_bridgeObjectRelease(a1);
    uint64_t v5 = 0LL;
    if (!v4) {
      return v5;
    }
  }

  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v5 = 0LL;
    if (!v4) {
      return v5;
    }
  }

  a2 += OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
  while (1)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
    }

    else
    {
      uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
      swift_retain(v6);
    }

    char v7 = static UUID.== infix(_:_:)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier, a2);
    swift_release(v6);
    if ((v7 & 1) != 0) {
      return v5;
    }
    uint64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1LL))
    {
      __break(1u);
      goto LABEL_13;
    }

    ++v5;
    if (v8 == v4) {
      return 0LL;
    }
  }

void *sub_100297404(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for SDTempPairingEndpoint(0LL);
  uint64_t v4 = __chkstk_darwin(v45);
  uint64_t v38 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v46 = (uint64_t)&v31 - v7;
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v47 = _swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(a1 + 16);
  if (v37)
  {
    uint64_t v9 = 0LL;
    unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v39 = *(void *)(v6 + 72);
    unint64_t v33 = v10;
    uint64_t v36 = a1 + v10;
    uint64_t v11 = a2 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v34 = a2 & 0xFFFFFFFFFFFFFF8LL;
    if (a2 < 0) {
      uint64_t v11 = a2;
    }
    uint64_t v32 = v11;
    unint64_t v44 = a2 & 0xC000000000000001LL;
    uint64_t v12 = _swiftEmptyArrayStorage;
    unint64_t v35 = (unint64_t)a2 >> 62;
    uint64_t v42 = a2;
    while (1)
    {
      sub_10029879C(v36 + v39 * v9, v46);
      if (v35)
      {
        swift_bridgeObjectRetain((const char *)a2);
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v32);
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        if (v13)
        {
LABEL_8:
          uint64_t v15 = 4LL;
          uint64_t v43 = v13;
          do
          {
            if (v44) {
              id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, a2);
            }
            else {
              id v16 = *(id *)(a2 + 8 * v15);
            }
            uint64_t v17 = v16;
            uint64_t v18 = v15 - 3;
            if (__OFADD__(v15 - 4, 1LL))
            {
              __break(1u);
              JUMPOUT(0x100297BB8LL);
            }

            id v19 = [v16 edPKData];
            if (v19)
            {
              unint64_t v20 = v19;
              static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
              uint64_t v22 = v21;

              __asm { BR              X8 }
            }

            uint64_t v23 = v46 + *(int *)(v45 + 20);
            uint64_t v24 = *(void *)(v23 + 16);
            unint64_t v25 = *(void *)(v23 + 24);
            sub_10019BA8C(v24, v25);
            sub_100189B0C(0LL, 0xF000000000000000LL);
            sub_100189B0C(v24, v25);

            ++v15;
          }

          while (v18 != v13);
        }
      }

      else
      {
        uint64_t v13 = *(void *)(v34 + 16);
        *(void *)&double v14 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        if (v13) {
          goto LABEL_8;
        }
      }

      swift_bridgeObjectRelease((const char *)a2, v14);
      sub_10029881C(v46, v38);
      uint64_t v26 = v40;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v40);
      uint64_t v28 = v41;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_10018D920(0, v26[2] + 1LL, 1);
      }
      uint64_t v12 = v47;
      unint64_t v30 = v47[2];
      unint64_t v29 = v47[3];
      if (v30 >= v29 >> 1)
      {
        sub_10018D920(v29 > 1, v30 + 1, 1);
        uint64_t v12 = v47;
      }

      v12[2] = v30 + 1;
      sub_10029881C(v38, (uint64_t)v12 + v33 + v30 * v39);
      uint64_t v9 = v28 + 1;
      if (v9 == v37) {
        return v47;
      }
    }
  }

  return result;
}

void *sub_100297C58(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = type metadata accessor for SDTempPairingEndpoint(0LL);
  uint64_t v4 = __chkstk_darwin(v49);
  uint64_t v40 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - v7;
  __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v33 - v10;
  unint64_t result = _swiftEmptyArrayStorage;
  __int128 v50 = _swiftEmptyArrayStorage;
  uint64_t v39 = *(void *)(a1 + 16);
  if (v39)
  {
    uint64_t v13 = 0LL;
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v41 = *(void *)(v9 + 72);
    unint64_t v35 = v14;
    uint64_t v38 = a1 + v14;
    uint64_t v15 = a2 & 0xFFFFFFFFFFFFFF8LL;
    uint64_t v36 = a2 & 0xFFFFFFFFFFFFFF8LL;
    if (a2 < 0) {
      uint64_t v15 = a2;
    }
    uint64_t v34 = v15;
    unint64_t v48 = a2 & 0xC000000000000001LL;
    id v16 = _swiftEmptyArrayStorage;
    unint64_t v37 = (unint64_t)a2 >> 62;
    uint64_t v47 = (char *)&v33 - v10;
    unint64_t v44 = v8;
    uint64_t v45 = a2;
    while (1)
    {
      uint64_t v43 = v13;
      sub_10029879C(v38 + v41 * v13, (uint64_t)v11);
      if (v37)
      {
        swift_bridgeObjectRetain((const char *)a2);
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v34);
        uint64_t v42 = v16;
        if (v17)
        {
LABEL_8:
          uint64_t v19 = 4LL;
          uint64_t v46 = v17;
          do
          {
            if (v48) {
              id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19 - 4, a2);
            }
            else {
              id v23 = *(id *)(a2 + 8 * v19);
            }
            uint64_t v24 = v23;
            uint64_t v25 = v19 - 3;
            if (__OFADD__(v19 - 4, 1LL))
            {
              __break(1u);
              JUMPOUT(0x100298508LL);
            }

            id v26 = [v23 edPKData];
            if (v26)
            {
              unint64_t v27 = v26;
              static Data._unconditionallyBridgeFromObjectiveC(_:)(v26);
              uint64_t v29 = v28;

              __asm { BR              X8 }
            }

            unint64_t v20 = &v11[*(int *)(v49 + 20)];
            uint64_t v21 = *((void *)v20 + 2);
            unint64_t v22 = *((void *)v20 + 3);
            sub_10019BA8C(v21, v22);
            sub_100189B0C(0LL, 0xF000000000000000LL);
            sub_100189B0C(v21, v22);
            sub_10029879C((uint64_t)v11, (uint64_t)v8);
            sub_1002987E0((uint64_t)v8);

            ++v19;
          }

          while (v25 != v17);
        }
      }

      else
      {
        uint64_t v17 = *(void *)(v36 + 16);
        *(void *)&double v18 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
        uint64_t v42 = v16;
        if (v17) {
          goto LABEL_8;
        }
      }

      swift_bridgeObjectRelease((const char *)a2, v18);
      sub_10029881C((uint64_t)v11, v40);
      unint64_t v30 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0) {
        sub_10018D920(0, v30[2] + 1LL, 1);
      }
      id v16 = v50;
      unint64_t v32 = v50[2];
      unint64_t v31 = v50[3];
      if (v32 >= v31 >> 1)
      {
        sub_10018D920(v31 > 1, v32 + 1, 1);
        id v16 = v50;
      }

      v16[2] = v32 + 1;
      sub_10029881C(v40, (uint64_t)v16 + v35 + v32 * v41);
      uint64_t v11 = v47;
      uint64_t v13 = v43 + 1;
      if (v43 + 1 == v39) {
        return v50;
      }
    }
  }

  return result;
}

void sub_1002985A8()
{
  id v0 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  id v1 = [v0 adHocPairedDeviceIdentities];

  if (!v1) {
    goto LABEL_23;
  }
  uint64_t v2 = sub_100183168(0LL, (unint64_t *)&unk_10064BB50, &OBJC_CLASS___RPIdentity_ptr);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v17 = v3;
    }
    else {
      uint64_t v17 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)v3);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v17);
    if (v4) {
      goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease_n(v3, 2LL);
    return;
  }

  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain((const char *)v3);
  if (!v4) {
    goto LABEL_21;
  }
LABEL_4:
  if (v4 >= 1)
  {
    uint64_t v5 = 0LL;
    uint64_t v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v3 & 0xC000000000000001LL) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else {
        id v7 = *(id *)(v3 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 name];
      if (v9)
      {
        uint64_t v10 = v9;
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        uint64_t v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0) {
          uint64_t v6 = sub_10018BC54(0LL, *((void *)v6 + 2) + 1LL, 1, v6);
        }
        unint64_t v15 = *((void *)v6 + 2);
        unint64_t v14 = *((void *)v6 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v6 = sub_10018BC54((char *)(v14 > 1), v15 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v15 + 1;
        id v16 = &v6[16 * v15];
        *((void *)v16 + 4) = v11;
        *((void *)v16 + 5) = v13;
      }

      else
      {
      }

      ++v5;
    }

    while (v4 != v5);
    goto LABEL_21;
  }

  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t sub_10029879C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDTempPairingEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002987E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDTempPairingEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10029881C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDTempPairingEndpoint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100298860()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100298884()
{
  return sub_1002965DC(v0);
}

uint64_t sub_10029888C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10029889C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002988A8()
{
  id v1 = (void *)swift_task_alloc(dword_10064BB64);
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_1001943E8;
  return sub_10029673C();
}

void sub_100298914(void *a1, char a2)
{
}

uint64_t sub_10029891C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100298940(uint64_t a1)
{
  return sub_100294ACC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100298948(const char *a1, uint64_t a2)
{
  return sub_1002950CC(a1, a2, v2);
}

uint64_t sub_100298950()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100298984()
{
  uint64_t v2 = swift_task_alloc(dword_10064BB84);
  __int128 v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100195708;
  *(_OWORD *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  return swift_task_switch(sub_1002951D8, 0LL, 0LL);
}

uint64_t sub_1002989E4(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_10064BB90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_100298A24(const char **a1, uint64_t a2)
{
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain(*a1);
  unint64_t v7 = sub_1002972EC(v6, a2);
  unint64_t v9 = (unint64_t)v8;
  unint64_t v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
  if (!v2)
  {
    if ((v9 & 1) != 0)
    {
      uint64_t v29 = (uint64_t)*a1;
      if ((unint64_t)v29 >> 62)
      {
        if (v29 < 0) {
          uint64_t v33 = v29;
        }
        else {
          uint64_t v33 = v29 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain((const char *)v29, *(double *)&v10);
        unint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v33);
        swift_bridgeObjectRelease((const char *)v29);
      }

      else
      {
        return *(void *)((v29 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      }
    }

    else
    {
      uint64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1LL)) {
        goto LABEL_57;
      }
      unint64_t v9 = (unint64_t)*a1;
      if ((unint64_t)*a1 >> 62)
      {
LABEL_58:
        if ((v9 & 0x8000000000000000LL) != 0LL) {
          uint64_t v31 = v9;
        }
        else {
          uint64_t v31 = v9 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain((const char *)v9, *(double *)&v10);
        uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(v31);
        unint64_t v10 = swift_bridgeObjectRelease((const char *)v9).n128_u64[0];
        if (v11 != v32) {
          goto LABEL_6;
        }
      }

      else if (v11 != *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
LABEL_6:
        uint64_t v12 = &off_10064E000;
        a2 += OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
        for (unint64_t i = v7 + 5; ; ++i)
        {
          unint64_t v9 = i - 4;
          unint64_t v14 = *a1;
          if (((unint64_t)*a1 & 0xC000000000000001LL) != 0)
          {
            uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v14);
          }

          else
          {
            if ((v9 & 0x8000000000000000LL) != 0)
            {
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }

            uint64_t v15 = *(void *)&v14[8 * i];
            swift_retain(v15);
          }

          uint64_t v11 = static UUID.== infix(_:_:)((char *)v12[380] + v15, a2);
          swift_release(v15);
          if ((v11 & 1) == 0) {
            break;
          }
LABEL_32:
          uint64_t v11 = i - 3;
          if (__OFADD__(v9, 1LL)) {
            goto LABEL_49;
          }
          uint64_t v26 = (uint64_t)*a1;
          if ((unint64_t)*a1 >> 62)
          {
            if (v26 < 0) {
              uint64_t v28 = (uint64_t)*a1;
            }
            else {
              uint64_t v28 = v26 & 0xFFFFFFFFFFFFFF8LL;
            }
            swift_bridgeObjectRetain(*a1);
            uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v28);
            unint64_t v10 = swift_bridgeObjectRelease((const char *)v26).n128_u64[0];
          }

          else
          {
            uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFF8LL) + 0x10);
          }

          if (v11 == v27) {
            return v7;
          }
        }

        if (v9 == v7)
        {
LABEL_31:
          if (__OFADD__(v7++, 1LL)) {
            goto LABEL_50;
          }
          goto LABEL_32;
        }

        uint64_t v11 = (uint64_t)*a1;
        if (((unint64_t)*a1 & 0xC000000000000001LL) != 0)
        {
          uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
          uint64_t v11 = (uint64_t)*a1;
          if (((unint64_t)*a1 & 0xC000000000000001LL) == 0)
          {
LABEL_17:
            if ((v9 & 0x8000000000000000LL) != 0) {
              goto LABEL_53;
            }
            if (v9 >= *(void *)((v11 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
              goto LABEL_54;
            }
            uint64_t v17 = *(void *)(v11 + 8 * i);
            swift_retain(v17);
            goto LABEL_20;
          }
        }

        else
        {
          if ((v7 & 0x8000000000000000LL) != 0) {
            goto LABEL_51;
          }
          if (v7 >= *(void *)((v11 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
            goto LABEL_52;
          }
          uint64_t v16 = *(void *)(v11 + 8 * v7 + 32);
          swift_retain(v16);
          if ((v11 & 0xC000000000000001LL) == 0) {
            goto LABEL_17;
          }
        }

        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v11);
        uint64_t v11 = (uint64_t)*a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v11);
        *a1 = (const char *)v11;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v11 < 0 || (v11 & 0x4000000000000000LL) != 0)
        {
          uint64_t v11 = sub_1001CCF48(v11);
          *a1 = (const char *)v11;
        }

        uint64_t v19 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8LL) + 8 * v7 + 0x20);
        *(void *)((v11 & 0xFFFFFFFFFFFFFF8LL) + 8 * v7 + 0x20) = v17;
        uint64_t v20 = swift_release(v19);
        specialized Array._endMutation()(v20);
        uint64_t v11 = (uint64_t)*a1;
        int v21 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
        *a1 = (const char *)v11;
        if (!v21 || v11 < 0 || (v11 & 0x4000000000000000LL) != 0)
        {
          uint64_t v11 = sub_1001CCF48(v11);
          *a1 = (const char *)v11;
        }

        uint64_t v12 = &off_10064E000;
        if ((v9 & 0x8000000000000000LL) != 0) {
          goto LABEL_55;
        }
        uint64_t v22 = v11 & 0xFFFFFFFFFFFFFF8LL;
        if (v9 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8LL) + 0x10)) {
          goto LABEL_56;
        }
        uint64_t v23 = *(void *)(v22 + 8 * i);
        *(void *)(v22 + 8 * i) = v16;
        uint64_t v24 = swift_release(v23);
        specialized Array._endMutation()(v24);
        goto LABEL_31;
      }
    }
  }

  return v7;
}

uint64_t sub_100298D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064BB98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100298DA8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  __int128 v3 = (void *)swift_task_alloc(dword_10064BBAC);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *__int128 v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_100294E64, 0LL, 0LL);
}

uint64_t sub_100298E08()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100298E34(uint64_t a1)
{
}

uint64_t sub_100298E3C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100298E68(void *a1)
{
}

uint64_t sub_100298E78()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064BBD0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064BBD0);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

id sub_100298F08()
{
  uint64_t v1 = *(int *)(_s6UnpairV23InitialInitiatorContextVMa(0LL) + 24);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationPairingDisable) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

uint64_t sub_100298F74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100183098(&qword_1006457E0);
  uint64_t v5 = swift_allocObject(v4, 112LL, 7LL);
  *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD530;
  if (qword_1006440D8 != -1) {
    swift_once(&qword_1006440D8, LongHash.storage.getter);
  }
  *(void *)(v5 + 56) = &type metadata for SDAuthentication.Operation.BuildPairingDisableMessage;
  *(void *)(v5 + 64) = &off_10064A9B8;
  *(void *)(v5 + 96) = &type metadata for SDAuthentication.Operation.UnpairRemoteLTK;
  *(void *)(v5 + 104) = &off_10064A998;
  *a2 = v5;
  uint64_t v6 = (int *)_s6UnpairV23InitialInitiatorContextVMa(0LL);
  *(uint64_t *)((char *)a2 + v6[6]) = 0LL;
  *((_BYTE *)a2 + v6[7]) = 8;
  if (qword_1006440D0 != -1) {
    swift_once(&qword_1006440D0, sub_100298E78);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_10064BBD0);
  unint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Start Key initiated pairing disable flow", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  return sub_1001A4B40(a1, (uint64_t)a2 + v6[5], type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s6UnpairV23InitialInitiatorContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064BD68, (uint64_t)&_s6UnpairV23InitialInitiatorContextVMn);
}

uint64_t sub_10029911C(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_100298F08);
}

id sub_100299138()
{
  uint64_t v1 = *(int *)(_s6UnpairV27HandlePairingDisableContextVMa(0LL) + 28);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_1002991A4(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 112LL, 7LL);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD530;
  if (qword_1006440D8 != -1) {
    swift_once(&qword_1006440D8, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.ProcessUnpairRequest;
  *(void *)(v7 + 64) = &off_10064B258;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v7 + 104) = &off_10064B238;
  *a3 = (const char *)v7;
  uint64_t v8 = (int *)_s6UnpairV27HandlePairingDisableContextVMa(0LL);
  uint64_t v9 = v8[7];
  *(const char **)((char *)a3 + v9) = 0LL;
  *((_BYTE *)a3 + v8[8]) = 2;
  uint64_t v10 = _s6UnpairV23InitialResponderContextVMa(0LL);
  uint64_t v11 = (uint64_t)a3 + v8[5];
  sub_1001A4B84(a2 + *(int *)(v10 + 20), v11, type metadata accessor for SDAuthenticationSessionMetrics);
  if ([a1 hasPairingID]
    && (id v12 = [a1 pairingID]) != 0)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v16 = v15;

    sub_1001A4BC8(a2, _s6UnpairV23InitialResponderContextVMa);
    uint64_t v17 = (uint64_t *)((char *)a3 + v8[6]);
    *uint64_t v17 = v14;
    v17[1] = v16;
  }

  else
  {
    unint64_t v18 = sub_100187014();
    uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
    *(_DWORD *)uint64_t v20 = 1;
    *(void *)(v20 + 8) = 0xD000000000000011LL;
    *(void *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100508D30LL;
    swift_willThrow(v19);

    sub_1001A4BC8(a2, _s6UnpairV23InitialResponderContextVMa);
    swift_bridgeObjectRelease(*a3);
    sub_1001A4BC8(v11, type metadata accessor for SDAuthenticationSessionMetrics);
  }

uint64_t sub_100299398(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_100299138);
}

uint64_t sub_1002993B4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

void sub_1002993C0(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 72LL, 7LL);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  if (qword_1006440D8 != -1) {
    swift_once(&qword_1006440D8, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v7 + 64) = &off_10064B218;
  *a3 = (const char *)v7;
  if ([a1 hasSuccess])
  {
    uint64_t v8 = a2 + *(int *)(_s6UnpairV23InitialInitiatorContextVMa(0LL) + 20);
    uint64_t v9 = _s6UnpairV25HandleConfirmationContextVMa(0LL);
    sub_1001A4B84(v8, (uint64_t)a3 + *(int *)(v9 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v8) = [a1 success];

    sub_1001A4BC8(a2, _s6UnpairV23InitialInitiatorContextVMa);
    *((_BYTE *)a3 + *(int *)(v9 + swift_release(*(void *)(v0 + 24)) = v8;
  }

  else
  {
    unint64_t v10 = sub_100187014();
    uint64_t v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0LL, 0LL);
    *(_DWORD *)uint64_t v12 = 1;
    *(void *)(v12 + 8) = 0xD000000000000016LL;
    *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100504210LL;
    swift_willThrow(v11);

    sub_1001A4BC8(a2, _s6UnpairV23InitialInitiatorContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

uint64_t sub_100299554(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

void sub_100299560(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v65 = a3;
  uint64_t v60 = _s6UnpairV25HandleConfirmationContextVMa(0LL);
  __chkstk_darwin(v60);
  uint64_t v64 = (const char **)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = sub_100183098(&qword_10064BDA8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = _s6UnpairV23InitialInitiatorContextVMa(0LL);
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v62 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v63 = (uint64_t)&v59 - v11;
  uint64_t v61 = _s6UnpairV27HandlePairingDisableContextVMa(0LL);
  __chkstk_darwin(v61);
  uint64_t v13 = (const char **)((char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = sub_100183098(&qword_10064BDB0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = _s6UnpairV23InitialResponderContextVMa(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  int v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v59 - v22;
  sub_10019A6C4(a1, (uint64_t)v70);
  uint64_t v24 = sub_100183098(&qword_1006500D0);
  uint64_t v25 = sub_100183168(0LL, &qword_10064BDB8, off_1005C8850);
  if (swift_dynamicCast(&v71, v70, v24, v25, 6LL))
  {
    uint64_t v26 = v71;
    sub_10019A6C4(v69, (uint64_t)v70);
    uint64_t v27 = sub_100183098(&qword_100645A28);
    int v28 = swift_dynamicCast(v16, v70, v27, v17, 6LL);
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    if (!v28)
    {
      v29(v16, 1LL, 1LL, v17);
      sub_100187100((uint64_t)v16, &qword_10064BDB0);
      unint64_t v44 = sub_100187014();
      uint64_t v45 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v44, 0LL, 0LL);
      *(_DWORD *)uint64_t v46 = 10;
      *(void *)(v46 + 8) = 0xD00000000000004CLL;
      *(void *)(v46 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100508CE0LL;
      swift_willThrow(v45);

      return;
    }

    v29(v16, 0LL, 1LL, v17);
    sub_1001A4B40((uint64_t)v16, (uint64_t)v23, _s6UnpairV23InitialResponderContextVMa);
    sub_1001A4B84((uint64_t)v23, (uint64_t)v21, _s6UnpairV23InitialResponderContextVMa);
    id v30 = v26;
    uint64_t v31 = v68;
    sub_1002991A4(v30, (uint64_t)v21, v13);
    if (v31)
    {
      sub_1001A4BC8((uint64_t)v23, _s6UnpairV23InitialResponderContextVMa);

      return;
    }

    uint64_t v53 = v65;
    v65[3] = v61;
    v53[4] = &off_1005D8238;
    uint64_t v54 = sub_1001A4B04(v53);
    sub_1001A4B40((uint64_t)v13, (uint64_t)v54, _s6UnpairV27HandlePairingDisableContextVMa);

    uint64_t v55 = _s6UnpairV23InitialResponderContextVMa;
    uint64_t v56 = (uint64_t)v23;
  }

  else
  {
    uint64_t v32 = v69;
    sub_10019A6C4(a1, (uint64_t)v70);
    uint64_t v33 = sub_100183168(0LL, &qword_100645A20, off_1005C8838);
    if (!swift_dynamicCast(&v71, v70, v24, v33, 6LL))
    {
      unint64_t v47 = sub_100187014();
      uint64_t v48 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v47, 0LL, 0LL);
      *(_DWORD *)uint64_t v49 = 10;
      *(void *)(v49 + 8) = 0xD00000000000001FLL;
      *(void *)(v49 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100503F30LL;
      swift_willThrow(v48);
      return;
    }

    uint64_t v34 = v71;
    sub_10019A6C4(v32, (uint64_t)v70);
    uint64_t v35 = sub_100183098(&qword_100645A28);
    uint64_t v36 = v67;
    int v37 = swift_dynamicCast(v7, v70, v35, v67, 6LL);
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56);
    if (!v37)
    {
      v38(v7, 1LL, 1LL, v36);
      sub_100187100((uint64_t)v7, &qword_10064BDA8);
      unint64_t v50 = sub_100187014();
      uint64_t v51 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v50, 0LL, 0LL);
      *(_DWORD *)uint64_t v52 = 10;
      *(void *)(v52 + 8) = 0xD00000000000004CLL;
      *(void *)(v52 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100508C90LL;
      swift_willThrow(v51);

      return;
    }

    v38(v7, 0LL, 1LL, v36);
    uint64_t v39 = v63;
    sub_1001A4B40((uint64_t)v7, v63, _s6UnpairV23InitialInitiatorContextVMa);
    uint64_t v40 = v62;
    sub_1001A4B84(v39, v62, _s6UnpairV23InitialInitiatorContextVMa);
    id v41 = v34;
    uint64_t v42 = v64;
    uint64_t v43 = v68;
    sub_1002993C0(v41, v40, v64);
    if (v43)
    {
      sub_1001A4BC8(v39, _s6UnpairV23InitialInitiatorContextVMa);

      return;
    }

    unint64_t v57 = v65;
    v65[3] = v60;
    v57[4] = &off_1005D8250;
    uint64_t v58 = sub_1001A4B04(v57);
    sub_1001A4B40((uint64_t)v42, (uint64_t)v58, _s6UnpairV25HandleConfirmationContextVMa);

    uint64_t v55 = _s6UnpairV23InitialInitiatorContextVMa;
    uint64_t v56 = v39;
  }

  sub_1001A4BC8(v56, v55);
}

void sub_100299B10(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

uint64_t sub_100299B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100299B30);
}

uint64_t sub_100299B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_100299BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100299BBC);
}

uint64_t sub_100299BBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t _s6UnpairV4FlowVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064BC40, (uint64_t)&_s6UnpairV4FlowVMn);
}

uint64_t sub_100299C4C(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    void v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

const char *sub_100299CCC(const char **a1, const char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v5 = (const char *)a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
    __n128 v12 = swift_bridgeObjectRetain(v4);
    if (v11(v8, 1LL, v9, v12))
    {
      uint64_t v13 = sub_100183098(&qword_1006457E8);
      memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
    }

    uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v15 = v14[5];
    uint64_t v16 = &v7[v15];
    uint64_t v17 = &v8[v15];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
    {
      uint64_t v18 = sub_100183098(&qword_1006457E8);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
    }

    uint64_t v19 = v14[6];
    uint64_t v20 = &v7[v19];
    int v21 = &v8[v19];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
    {
      uint64_t v22 = sub_100183098(&qword_1006457E8);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
    }

    uint64_t v23 = v14[7];
    uint64_t v24 = &v7[v23];
    uint64_t v25 = &v8[v23];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
    {
      uint64_t v26 = sub_100183098(&qword_1006457E8);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
    }

    uint64_t v27 = v14[8];
    int v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
    {
      uint64_t v30 = sub_100183098(&qword_1006457E8);
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
    }

    uint64_t v31 = v14[9];
    uint64_t v32 = &v7[v31];
    uint64_t v33 = &v8[v31];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
    {
      uint64_t v34 = sub_100183098(&qword_1006457E8);
      memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
    }

    uint64_t v35 = v14[10];
    uint64_t v36 = &v7[v35];
    int v37 = &v8[v35];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
    {
      uint64_t v38 = sub_100183098(&qword_1006457E8);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
    }

    uint64_t v39 = v14[11];
    uint64_t v40 = &v7[v39];
    id v41 = &v8[v39];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
    {
      uint64_t v42 = sub_100183098(&qword_1006457E8);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
    }

    uint64_t v43 = v14[12];
    unint64_t v44 = &v7[v43];
    uint64_t v45 = &v8[v43];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
    {
      uint64_t v46 = sub_100183098(&qword_1006457E8);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
    }

    v7[v14[13]] = v8[v14[13]];
    uint64_t v47 = v14[14];
    uint64_t v48 = &v7[v47];
    uint64_t v49 = &v8[v47];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
    {
      uint64_t v50 = sub_100183098(&qword_1006457E8);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
    }

    uint64_t v51 = v14[15];
    uint64_t v52 = &v7[v51];
    uint64_t v53 = &v8[v51];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
    {
      uint64_t v54 = sub_100183098(&qword_1006457E8);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
    }

    uint64_t v55 = v14[16];
    uint64_t v56 = &v7[v55];
    unint64_t v57 = &v8[v55];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
    {
      uint64_t v58 = sub_100183098(&qword_1006457E8);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
    }

    uint64_t v59 = v14[17];
    uint64_t v60 = &v7[v59];
    uint64_t v61 = &v8[v59];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
    {
      uint64_t v62 = sub_100183098(&qword_1006457E8);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
    }

    uint64_t v63 = v14[18];
    uint64_t v64 = &v7[v63];
    uint64_t v65 = &v8[v63];
    *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
    v64[4] = v65[4];
    v7[v14[19]] = v8[v14[19]];
    uint64_t v66 = v14[20];
    uint64_t v67 = &v7[v66];
    uint64_t v68 = &v8[v66];
    uint64_t v69 = (const char *)*((void *)v68 + 1);
    *(void *)uint64_t v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v70 = v14[21];
    uint64_t v71 = &v7[v70];
    uint64_t v72 = &v8[v70];
    uint64_t v73 = (const char *)*((void *)v72 + 1);
    *(void *)uint64_t v71 = *(void *)v72;
    *((void *)v71 + 1) = v73;
    *(void *)&double v74 = swift_bridgeObjectRetain(v69).n128_u64[0];
    swift_bridgeObjectRetain(v73, v74);
  }

  return v5;
}

const char **sub_10029A380(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48);
  __n128 v11 = swift_bridgeObjectRetain(v4);
  if (v10(v7, 1LL, v8, v11))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v14], 1LL, v8))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v15, v16, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v15, 0LL, 1LL, v8);
  }

  uint64_t v18 = v13[6];
  uint64_t v19 = &v6[v18];
  uint64_t v20 = &v7[v18];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v18], 1LL, v8))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v19, v20, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0LL, 1LL, v8);
  }

  uint64_t v22 = v13[7];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v22], 1LL, v8))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v23, v24, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v23, 0LL, 1LL, v8);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v6[v26];
  int v28 = &v7[v26];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v26], 1LL, v8))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v27, v28, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v27, 0LL, 1LL, v8);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v6[v30];
  uint64_t v32 = &v7[v30];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v30], 1LL, v8))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v31, v32, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v31, 0LL, 1LL, v8);
  }

  uint64_t v34 = v13[10];
  uint64_t v35 = &v6[v34];
  uint64_t v36 = &v7[v34];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v34], 1LL, v8))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v35, v36, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v35, 0LL, 1LL, v8);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v6[v38];
  uint64_t v40 = &v7[v38];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v38], 1LL, v8))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v39, v40, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v39, 0LL, 1LL, v8);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v6[v42];
  unint64_t v44 = &v7[v42];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v42], 1LL, v8))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v43, v44, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v43, 0LL, 1LL, v8);
  }

  v6[v13[13]] = v7[v13[13]];
  uint64_t v46 = v13[14];
  uint64_t v47 = &v6[v46];
  uint64_t v48 = &v7[v46];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v46], 1LL, v8))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, v48, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v47, 0LL, 1LL, v8);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v6[v50];
  uint64_t v52 = &v7[v50];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v50], 1LL, v8))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v51, v52, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v51, 0LL, 1LL, v8);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v6[v54];
  uint64_t v56 = &v7[v54];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v54], 1LL, v8))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v55, v56, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v55, 0LL, 1LL, v8);
  }

  uint64_t v58 = v13[17];
  uint64_t v59 = &v6[v58];
  uint64_t v60 = &v7[v58];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v10)(&v7[v58], 1LL, v8))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v59, v60, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v59, 0LL, 1LL, v8);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v6[v62];
  uint64_t v64 = &v7[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v6[v13[19]] = v7[v13[19]];
  uint64_t v65 = v13[20];
  uint64_t v66 = &v6[v65];
  uint64_t v67 = &v7[v65];
  uint64_t v68 = (const char *)*((void *)v67 + 1);
  *(void *)uint64_t v66 = *(void *)v67;
  *((void *)v66 + 1) = v68;
  uint64_t v69 = v13[21];
  uint64_t v70 = &v6[v69];
  uint64_t v71 = &v7[v69];
  uint64_t v72 = (const char *)*((void *)v71 + 1);
  *(void *)uint64_t v70 = *(void *)v71;
  *((void *)v70 + 1) = v72;
  *(void *)&double v73 = swift_bridgeObjectRetain(v68).n128_u64[0];
  swift_bridgeObjectRetain(v72, v73);
  return a1;
}

const char **sub_10029AA08(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  __n128 v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  unint64_t v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  uint64_t v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  uint64_t v68 = &v10[v67];
  uint64_t v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  double v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  uint64_t v86 = &v10[v85];
  int64_t v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  uint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  uint64_t v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  unint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  __int128 v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  return a1;
}

void *sub_10029B438(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v9(v6, 1LL, v7))
  {
    uint64_t v10 = sub_100183098(&qword_1006457E8);
    memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0LL, 1LL, v7);
  }

  __n128 v11 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  if (v9(&v6[v12], 1LL, v7))
  {
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v14, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0LL, 1LL, v7);
  }

  uint64_t v16 = v11[6];
  uint64_t v17 = &v5[v16];
  uint64_t v18 = &v6[v16];
  if (v9(&v6[v16], 1LL, v7))
  {
    uint64_t v19 = sub_100183098(&qword_1006457E8);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0LL, 1LL, v7);
  }

  uint64_t v20 = v11[7];
  uint64_t v21 = &v5[v20];
  int v22 = &v6[v20];
  if (v9(&v6[v20], 1LL, v7))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v21, v22, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0LL, 1LL, v7);
  }

  uint64_t v24 = v11[8];
  uint64_t v25 = &v5[v24];
  uint64_t v26 = &v6[v24];
  if (v9(&v6[v24], 1LL, v7))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v25, v26, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0LL, 1LL, v7);
  }

  uint64_t v28 = v11[9];
  int v29 = &v5[v28];
  uint64_t v30 = &v6[v28];
  if (v9(&v6[v28], 1LL, v7))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v29, v30, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0LL, 1LL, v7);
  }

  uint64_t v32 = v11[10];
  uint64_t v33 = &v5[v32];
  int v34 = &v6[v32];
  if (v9(&v6[v32], 1LL, v7))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v34, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0LL, 1LL, v7);
  }

  uint64_t v36 = v11[11];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  if (v9(&v6[v36], 1LL, v7))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v37, v38, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0LL, 1LL, v7);
  }

  uint64_t v40 = v11[12];
  int v41 = &v5[v40];
  uint64_t v42 = &v6[v40];
  if (v9(&v6[v40], 1LL, v7))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v41, v42, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0LL, 1LL, v7);
  }

  v5[v11[13]] = v6[v11[13]];
  uint64_t v44 = v11[14];
  uint64_t v45 = &v5[v44];
  int v46 = &v6[v44];
  if (v9(&v6[v44], 1LL, v7))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v45, v46, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0LL, 1LL, v7);
  }

  uint64_t v48 = v11[15];
  uint64_t v49 = &v5[v48];
  uint64_t v50 = &v6[v48];
  if (v9(&v6[v48], 1LL, v7))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v49, v50, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0LL, 1LL, v7);
  }

  uint64_t v52 = v11[16];
  int v53 = &v5[v52];
  uint64_t v54 = &v6[v52];
  if (v9(&v6[v52], 1LL, v7))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v53, v54, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0LL, 1LL, v7);
  }

  uint64_t v56 = v11[17];
  uint64_t v57 = &v5[v56];
  int v58 = &v6[v56];
  if (v9(&v6[v56], 1LL, v7))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v58, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0LL, 1LL, v7);
  }

  uint64_t v60 = v11[18];
  uint64_t v61 = &v5[v60];
  uint64_t v62 = &v6[v60];
  *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
  v61[4] = v62[4];
  v5[v11[19]] = v6[v11[19]];
  *(_OWORD *)&v5[v11[20]] = *(_OWORD *)&v6[v11[20]];
  *(_OWORD *)&v5[v11[21]] = *(_OWORD *)&v6[v11[21]];
  return a1;
}

const char **sub_10029BA9C(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  uint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  unint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  return a1;
}

uint64_t sub_10029C4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029C4B0);
}

uint64_t sub_10029C4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029C4C0);
}

uint64_t _s6UnpairV23InitialResponderContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064BCD8, (uint64_t)&_s6UnpairV23InitialResponderContextVMn);
}

uint64_t sub_10029C4D8(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

const char *sub_10029C550(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v6 = (const char *)a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
    }

    uint64_t v20 = v15[6];
    int v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
    }

    uint64_t v24 = v15[7];
    uint64_t v25 = &v8[v24];
    int v26 = &v9[v24];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
    }

    uint64_t v28 = v15[8];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
    }

    uint64_t v32 = v15[9];
    int v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    }

    uint64_t v36 = v15[10];
    uint64_t v37 = &v8[v36];
    int v38 = &v9[v36];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
    }

    uint64_t v40 = v15[11];
    uint64_t v41 = &v8[v40];
    uint64_t v42 = &v9[v40];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
    }

    uint64_t v44 = v15[12];
    int v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
    }

    v8[v15[13]] = v9[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v8[v48];
    int v50 = &v9[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
    }

    uint64_t v52 = v15[15];
    uint64_t v53 = &v8[v52];
    uint64_t v54 = &v9[v52];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
    }

    uint64_t v56 = v15[16];
    int v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
    }

    uint64_t v60 = v15[17];
    uint64_t v61 = &v8[v60];
    int v62 = &v9[v60];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
    {
      uint64_t v63 = sub_100183098(&qword_1006457E8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
    }

    uint64_t v64 = v15[18];
    uint64_t v65 = &v8[v64];
    uint64_t v66 = &v9[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v67 = v15[20];
    int v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = (const char *)*((void *)v69 + 1);
    *(void *)int v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v8[v71];
    uint64_t v73 = &v9[v71];
    int v74 = (const char *)*((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = a3[6];
    uint64_t v76 = a3[7];
    uint64_t v77 = *(void **)((char *)a2 + v75);
    *(void *)&v6[v75] = v77;
    v6[v76] = *((_BYTE *)a2 + v76);
    *(void *)&double v78 = swift_bridgeObjectRetain(v70).n128_u64[0];
    swift_bridgeObjectRetain(v74, v78);
    id v79 = v77;
  }

  return v6;
}

void sub_10029CC2C(const char **a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v4[v8[21] + 8], v21);
}

const char **sub_10029CEF0(const char **a1, const char **a2, int *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  int v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  int v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  int v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  int v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = a3[6];
  uint64_t v75 = a3[7];
  uint64_t v76 = *(char **)((char *)a2 + v74);
  *(const char **)((char *)a1 + v74) = v76;
  *((_BYTE *)a1 + v75) = *((_BYTE *)a2 + v75);
  *(void *)&double v77 = swift_bridgeObjectRetain(v69).n128_u64[0];
  swift_bridgeObjectRetain(v73, v77);
  double v78 = v76;
  return a1;
}

const char **sub_10029D5A4(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v113 = a3;
  uint64_t v115 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  int v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  int v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  int v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  int v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  int v80 = &v10[v79];
  int v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  int v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  uint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v113, v115).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  unint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  __int128 v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  uint64_t v108 = *(int *)(v114 + 24);
  uint64_t v109 = *(void **)((char *)a1 + v108);
  uint64_t v110 = *(char **)(v116 + v108);
  *(const char **)((char *)a1 + v108) = v110;
  v111 = v110;

  *((_BYTE *)a1 + *(int *)(v114 + 28)) = *(_BYTE *)(v116 + *(int *)(v114 + 28));
  return a1;
}

void *sub_10029E008(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v6[v13];
  int v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  int v22 = &v6[v21];
  int v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  int v34 = &v6[v33];
  int v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  uint64_t v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  uint64_t v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  int v46 = &v6[v45];
  int v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  uint64_t v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  uint64_t v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  int v58 = &v6[v57];
  int v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v61 = v12[18];
  uint64_t v62 = &v6[v61];
  uint64_t v63 = &v7[v61];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  uint64_t v64 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v64) = *((_BYTE *)a2 + v64);
  return a1;
}

const char **sub_10029E694(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v108 = a3;
  uint64_t v110 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  uint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v108, v110).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  unint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = *(int *)(v109 + 24);
  __int128 v106 = *(void **)((char *)a1 + v105);
  *(const char **)((char *)a1 + v105) = *(const char **)(v111 + v105);

  *((_BYTE *)a1 + *(int *)(v109 + 28)) = *(_BYTE *)(v111 + *(int *)(v109 + 28));
  return a1;
}

uint64_t sub_10029F0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029F0D8);
}

uint64_t sub_10029F0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029F0E8);
}

uint64_t sub_10029F0EC(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = "\b";
    v4[3] = &unk_1004D28A0;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t _s6UnpairV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064BEB8, (uint64_t)&_s6UnpairV25HandleConfirmationContextVMn);
}

uint64_t _s6UnpairV27HandlePairingDisableContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064BE18, (uint64_t)&_s6UnpairV27HandlePairingDisableContextVMn);
}

const char *sub_10029F1A0(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v6 = (const char *)a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
    }

    uint64_t v20 = v15[6];
    int v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
    }

    uint64_t v24 = v15[7];
    uint64_t v25 = &v8[v24];
    int v26 = &v9[v24];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
    }

    uint64_t v28 = v15[8];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
    }

    uint64_t v32 = v15[9];
    int v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    }

    uint64_t v36 = v15[10];
    uint64_t v37 = &v8[v36];
    int v38 = &v9[v36];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
    }

    uint64_t v40 = v15[11];
    uint64_t v41 = &v8[v40];
    uint64_t v42 = &v9[v40];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
    }

    uint64_t v44 = v15[12];
    int v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
    }

    v8[v15[13]] = v9[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v8[v48];
    int v50 = &v9[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
    }

    uint64_t v52 = v15[15];
    uint64_t v53 = &v8[v52];
    uint64_t v54 = &v9[v52];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
    }

    uint64_t v56 = v15[16];
    int v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
    }

    uint64_t v60 = v15[17];
    uint64_t v61 = &v8[v60];
    int v62 = &v9[v60];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
    {
      uint64_t v63 = sub_100183098(&qword_1006457E8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
    }

    uint64_t v64 = v15[18];
    uint64_t v65 = &v8[v64];
    uint64_t v66 = &v9[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v67 = v15[20];
    int v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = (const char *)*((void *)v69 + 1);
    *(void *)int v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v8[v71];
    uint64_t v73 = &v9[v71];
    int v74 = (const char *)*((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = a3[6];
    uint64_t v76 = a3[7];
    uint64_t v77 = (char *)&v6[v75];
    uint64_t v78 = (const char **)((char *)a2 + v75);
    uint64_t v79 = (const char *)v78[1];
    *(void *)uint64_t v77 = *v78;
    *((void *)v77 + 1) = v79;
    int v80 = *(void **)((char *)a2 + v76);
    *(void *)&v6[v76] = v80;
    v6[a3[8]] = *((_BYTE *)a2 + a3[8]);
    *(void *)&double v81 = swift_bridgeObjectRetain(v70).n128_u64[0];
    *(void *)&double v82 = swift_bridgeObjectRetain(v74, v81).n128_u64[0];
    swift_bridgeObjectRetain(v79, v82);
    id v83 = v80;
  }

  return v6;
}

void sub_10029F898(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[21] + 8], v21).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)((char *)a1 + a2[6] + 8), v22);
}

const char **sub_10029FB6C(const char **a1, const char **a2, int *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  int v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  int v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  int v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  int v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = a3[6];
  uint64_t v75 = a3[7];
  uint64_t v76 = (const char **)((char *)a1 + v74);
  uint64_t v77 = (const char **)((char *)a2 + v74);
  uint64_t v78 = (const char *)v77[1];
  void *v76 = *v77;
  v76[1] = v78;
  uint64_t v79 = *(char **)((char *)a2 + v75);
  *(const char **)((char *)a1 + v75) = v79;
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *(void *)&double v80 = swift_bridgeObjectRetain(v69).n128_u64[0];
  *(void *)&double v81 = swift_bridgeObjectRetain(v73, v80).n128_u64[0];
  swift_bridgeObjectRetain(v78, v81);
  double v82 = v79;
  return a1;
}

const char **sub_1002A023C(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v120 = a3;
  NSString v122 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  int v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  int v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  int v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  int v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  double v80 = &v10[v79];
  double v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  int v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  uint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v120, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  unint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  __int128 v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  *(void *)&double v108 = swift_bridgeObjectRelease(v106, v107).n128_u64[0];
  uint64_t v109 = v121[6];
  uint64_t v110 = (const char **)((char *)a1 + v109);
  uint64_t v111 = (void *)(v123 + v109);
  void *v110 = *v111;
  uint64_t v112 = (const char *)v111[1];
  uint64_t v113 = (const char *)v110[1];
  v110[1] = v112;
  *(void *)&double v114 = swift_bridgeObjectRetain(v112, v108).n128_u64[0];
  swift_bridgeObjectRelease(v113, v114);
  uint64_t v115 = v121[7];
  uint64_t v116 = *(void **)((char *)a1 + v115);
  v117 = *(char **)(v123 + v115);
  *(const char **)((char *)a1 + v115) = v117;
  __n128 v118 = v117;

  *((_BYTE *)a1 + v121[8]) = *(_BYTE *)(v123 + v121[8]);
  return a1;
}

void *sub_1002A0CCC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v6[v13];
  int v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  int v22 = &v6[v21];
  int v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  int v34 = &v6[v33];
  int v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  uint64_t v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  uint64_t v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  int v46 = &v6[v45];
  int v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  uint64_t v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  uint64_t v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  int v58 = &v6[v57];
  int v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v61 = v12[18];
  uint64_t v62 = &v6[v61];
  uint64_t v63 = &v7[v61];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  uint64_t v64 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v64) = *(void *)((char *)a2 + v64);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

const char **sub_1002A1364(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v115 = a3;
  v117 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  uint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v115, v117).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  unint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  *(void *)&double v105 = swift_bridgeObjectRelease(v104, v98).n128_u64[0];
  uint64_t v106 = v116[6];
  double v107 = (const char **)((char *)a1 + v106);
  double v108 = (uint64_t *)(v118 + v106);
  uint64_t v110 = *v108;
  uint64_t v109 = v108[1];
  uint64_t v111 = (const char *)v107[1];
  *double v107 = v110;
  v107[1] = v109;
  swift_bridgeObjectRelease(v111, v105);
  uint64_t v112 = v116[7];
  uint64_t v113 = *(void **)((char *)a1 + v112);
  *(const char **)((char *)a1 + v112) = *(const char **)(v118 + v112);

  *((_BYTE *)a1 + v116[8]) = *(_BYTE *)(v118 + v116[8]);
  return a1;
}

uint64_t sub_1002A1DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A1DC4);
}

uint64_t sub_1002A1DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A1DD4);
}

uint64_t sub_1002A1DD8(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = &unk_1004D2970;
    v4[3] = "\b";
    void v4[4] = &unk_1004D28A0;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

ValueMetadata *_s6UnpairVMa()
{
  return &_s6UnpairVN;
}

const char *sub_1002A1E7C(const char **a1, const char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v6 = (const char *)a1;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
    }

    uint64_t v20 = v15[6];
    int v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
    }

    uint64_t v24 = v15[7];
    uint64_t v25 = &v8[v24];
    int v26 = &v9[v24];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
    }

    uint64_t v28 = v15[8];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
    }

    uint64_t v32 = v15[9];
    int v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    }

    uint64_t v36 = v15[10];
    uint64_t v37 = &v8[v36];
    int v38 = &v9[v36];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
    }

    uint64_t v40 = v15[11];
    uint64_t v41 = &v8[v40];
    uint64_t v42 = &v9[v40];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
    }

    uint64_t v44 = v15[12];
    int v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
    }

    v8[v15[13]] = v9[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v8[v48];
    int v50 = &v9[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
    }

    uint64_t v52 = v15[15];
    uint64_t v53 = &v8[v52];
    uint64_t v54 = &v9[v52];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
    }

    uint64_t v56 = v15[16];
    int v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
    }

    uint64_t v60 = v15[17];
    uint64_t v61 = &v8[v60];
    int v62 = &v9[v60];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
    {
      uint64_t v63 = sub_100183098(&qword_1006457E8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
    }

    uint64_t v64 = v15[18];
    uint64_t v65 = &v8[v64];
    uint64_t v66 = &v9[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v67 = v15[20];
    int v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = (const char *)*((void *)v69 + 1);
    *(void *)int v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v8[v71];
    uint64_t v73 = &v9[v71];
    int v74 = (const char *)*((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    v6[*(int *)(a3 + 24)] = *((_BYTE *)a2 + *(int *)(a3 + 24));
    *(void *)&double v75 = swift_bridgeObjectRetain(v70).n128_u64[0];
    swift_bridgeObjectRetain(v74, v75);
  }

  return v6;
}

__n128 sub_1002A254C(const char **a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  return swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[21] + 8], v21);
}

const char **sub_1002A27FC(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  int v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  int v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  int v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  int v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  *((_BYTE *)a1 + *(int *)(a3 + swift_release(*(void *)(v0 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  *(void *)&double v74 = swift_bridgeObjectRetain(v69).n128_u64[0];
  swift_bridgeObjectRetain(v73, v74);
  return a1;
}

const char **sub_1002A2EA4(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v109 = a3;
  uint64_t v111 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  int v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  int v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  int v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  int v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  double v74 = &v10[v73];
  double v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  int v80 = &v10[v79];
  int v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  int v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  uint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v109, v111).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  unint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  double v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  *((_BYTE *)a1 + *(int *)(v110 + swift_release(*(void *)(v0 + 24)) = *(_BYTE *)(v112 + *(int *)(v110 + 24));
  return a1;
}

void *sub_1002A38F0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v6[v13];
  int v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  int v22 = &v6[v21];
  int v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  int v34 = &v6[v33];
  int v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  uint64_t v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  uint64_t v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  int v46 = &v6[v45];
  int v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  uint64_t v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  uint64_t v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  int v58 = &v6[v57];
  int v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v61 = v12[18];
  uint64_t v62 = &v6[v61];
  uint64_t v63 = &v7[v61];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  *((_BYTE *)a1 + *(int *)(a3 + swift_release(*(void *)(v0 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

const char **sub_1002A3F74(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v106 = a3;
  double v108 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  uint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v106, v108).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  unint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  *((_BYTE *)a1 + *(int *)(v107 + swift_release(*(void *)(v0 + 24)) = *(_BYTE *)(v109 + *(int *)(v107 + 24));
  return a1;
}

uint64_t sub_1002A4998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A49A4);
}

uint64_t sub_1002A49A8(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( &a1[*(int *)(a3 + 20)],  a2,  v8);
  }

uint64_t sub_1002A4A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A4A30);
}

char *sub_1002A4A34(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( &v5[*(int *)(a4 + 20)],  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_1002A4AA8(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = &unk_1004D29B0;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1002A4B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void *)(v2 + 24);
  if (v8)
  {
    swift_retain(*(void *)(v2 + 24));
    sub_1001EDCC4(a1, a2);
    return swift_release(v8);
  }

  else
  {
    uint64_t v10 = *(void **)(v2 + 16);
    type metadata accessor for SDAirDropContentHandlerUtilities();
    uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v7, 1LL, 1LL, v11);
    id v12 = v10;
    sub_10026664C(a1, v10, 1, a2);

    return sub_100187334((uint64_t)v7);
  }

uint64_t sub_1002A4C40()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary39SDAirDropContentHandlerKeynoteLiveLinks);
}

uint64_t sub_1002A4C8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerKeynoteLiveLinks();
  uint64_t result = swift_allocObject(v2, 32LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(void *)(result + 24) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_1002A4CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A4B2C(a1, a2);
}

void sub_1002A4CE4(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v6, v26);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  uint64_t v8 = inited + 32;
  *(void *)(inited + 40) = 0x8000000100508DA0LL;
  *(void *)(inited + 48) = v5;
  *(void *)&double v9 = swift_bridgeObjectRetain((const char *)0x8000000100508DA0LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v9);
  v10._countAndFlagsBits = 95LL;
  v10._object = (void *)0xE100000000000000LL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0xD00000000000001ALL;
  v11._object = (void *)0x8000000100508DA0LL;
  String.append(_:)(v11);
  swift_bridgeObjectRelease((const char *)0x8000000100508DA0LL);
  if (v5 > 1)
  {
    v12._countAndFlagsBits = 0x4C4152554C505FLL;
    v12._object = (void *)0xE700000000000000LL;
    String.append(_:)(v12);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a3 & 1) != 0)
  {
    v13._countAndFlagsBits = 0x4C4154495041435FLL;
    v13._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v13);
  }

  v14._countAndFlagsBits = 0x545845545FLL;
  v14._object = (void *)0xE500000000000000LL;
  String.append(_:)(v14);
  swift_setDeallocating(inited);
  uint64_t v15 = *(void *)(inited + 16);
  uint64_t v16 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v8, v15, v16);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v19 = (id)SFLocalizedStringForKey(v17, v18);

  if (v19)
  {
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    uint64_t v22 = v21;

    uint64_t v23 = sub_100183098(&qword_1006483E0);
    uint64_t v24 = swift_allocObject(v23, 72LL, 7LL);
    *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v24 + 56) = &type metadata for Int;
    *(void *)(v24 + 64) = &protocol witness table for Int;
    *(void *)(v24 + 32) = v5;
    static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
    *(void *)&double v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v24, v25);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002A4F24()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064BFF8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064BFF8);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002A4FB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100183098(&qword_1006457E0);
  uint64_t v5 = swift_allocObject(v4, 352LL, 7LL);
  *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004D2AF0;
  if (qword_1006440E8 != -1) {
    swift_once(&qword_1006440E8, LongHash.storage.getter);
  }
  *(void *)(v5 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(void *)(v5 + 64) = &off_10064AC58;
  *(void *)(v5 + 96) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(void *)(v5 + 104) = &off_10064ABF8;
  *(void *)(v5 + 136) = &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
  *(void *)(v5 + 144) = &off_10064ABD8;
  *(void *)(v5 + 176) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v5 + 184) = &off_10064ABB8;
  *(void *)(v5 + 2swift_unknownObjectWeakDestroy(v0 + 16) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationInMessage;
  *(void *)(v5 + 224) = &off_10064AA38;
  *(void *)(v5 + 256) = &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
  *(void *)(v5 + 264) = &off_10064AAD8;
  *(void *)(v5 + 296) = &type metadata for SDAuthentication.Operation.IncludeFirstAKSTokenWithLTKSessionInMessage;
  *(void *)(v5 + 304) = &off_10064AA18;
  *(void *)(v5 + 336) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(void *)(v5 + 344) = &off_10064AB38;
  *a2 = v5;
  uint64_t v6 = (int *)_s15GuestModeUnlockV17InitialKeyContextVMa(0LL);
  uint64_t v7 = (char *)a2 + v6[6];
  uint64_t v8 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v7, 1LL, 1LL, v8);
  *(uint64_t *)((char *)a2 + v6[7]) = 0LL;
  *((_BYTE *)a2 + v6[8]) = 0;
  return sub_1001A4B40(a1, (uint64_t)a2 + v6[5], type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s15GuestModeUnlockV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C198, (uint64_t)&_s15GuestModeUnlockV17InitialKeyContextVMn);
}

const char *sub_1002A5144(const char **a1, const char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v15 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    double v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    Swift::String v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v17 = v16[5];
    uint64_t v18 = &v8[v17];
    id v19 = &v9[v17];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v17], 1LL, v10))
    {
      uint64_t v20 = sub_100183098(&qword_1006457E8);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
    }

    uint64_t v21 = v16[6];
    uint64_t v22 = &v8[v21];
    uint64_t v23 = &v9[v21];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v21], 1LL, v10))
    {
      uint64_t v24 = sub_100183098(&qword_1006457E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v22, v23, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0LL, 1LL, v10);
    }

    uint64_t v25 = v16[7];
    int v26 = &v8[v25];
    int v27 = &v9[v25];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v25], 1LL, v10))
    {
      uint64_t v28 = sub_100183098(&qword_1006457E8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v26, v27, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v26, 0LL, 1LL, v10);
    }

    uint64_t v29 = v16[8];
    uint64_t v30 = &v8[v29];
    uint64_t v31 = &v9[v29];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v29], 1LL, v10))
    {
      uint64_t v32 = sub_100183098(&qword_1006457E8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
    }

    uint64_t v33 = v16[9];
    uint64_t v34 = &v8[v33];
    uint64_t v35 = &v9[v33];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v33], 1LL, v10))
    {
      uint64_t v36 = sub_100183098(&qword_1006457E8);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v34, v35, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v34, 0LL, 1LL, v10);
    }

    uint64_t v37 = v16[10];
    int v38 = &v8[v37];
    int v39 = &v9[v37];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v37], 1LL, v10))
    {
      uint64_t v40 = sub_100183098(&qword_1006457E8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v38, v39, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v38, 0LL, 1LL, v10);
    }

    uint64_t v41 = v16[11];
    uint64_t v42 = &v8[v41];
    uint64_t v43 = &v9[v41];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v41], 1LL, v10))
    {
      uint64_t v44 = sub_100183098(&qword_1006457E8);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
    }

    uint64_t v45 = v16[12];
    uint64_t v46 = &v8[v45];
    uint64_t v47 = &v9[v45];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v45], 1LL, v10))
    {
      uint64_t v48 = sub_100183098(&qword_1006457E8);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v46, v47, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v46, 0LL, 1LL, v10);
    }

    v8[v16[13]] = v9[v16[13]];
    uint64_t v49 = v16[14];
    int v50 = &v8[v49];
    int v51 = &v9[v49];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v49], 1LL, v10))
    {
      uint64_t v52 = sub_100183098(&qword_1006457E8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v50, v51, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v50, 0LL, 1LL, v10);
    }

    uint64_t v53 = v16[15];
    uint64_t v54 = &v8[v53];
    uint64_t v55 = &v9[v53];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v53], 1LL, v10))
    {
      uint64_t v56 = sub_100183098(&qword_1006457E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
    }

    uint64_t v57 = v16[16];
    uint64_t v58 = &v8[v57];
    uint64_t v59 = &v9[v57];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v57], 1LL, v10))
    {
      uint64_t v60 = sub_100183098(&qword_1006457E8);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v58, v59, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v58, 0LL, 1LL, v10);
    }

    uint64_t v61 = v16[17];
    int v62 = &v8[v61];
    int v63 = &v9[v61];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v61], 1LL, v10))
    {
      uint64_t v64 = sub_100183098(&qword_1006457E8);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v62, v63, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v62, 0LL, 1LL, v10);
    }

    uint64_t v65 = v16[18];
    uint64_t v66 = &v8[v65];
    uint64_t v67 = &v9[v65];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    v8[v16[19]] = v9[v16[19]];
    uint64_t v68 = v16[20];
    int v69 = &v8[v68];
    uint64_t v70 = &v9[v68];
    uint64_t v71 = (const char *)*((void *)v70 + 1);
    *(void *)int v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = v16[21];
    uint64_t v73 = &v8[v72];
    int v74 = &v9[v72];
    int v75 = (const char *)*((void *)v74 + 1);
    *(void *)uint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = *(int *)(a3 + 24);
    uint64_t v15 = (const char *)a1;
    uint64_t v77 = (char *)a1 + v76;
    uint64_t v78 = (char *)a2 + v76;
    *(void *)&double v79 = swift_bridgeObjectRetain(v71).n128_u64[0];
    __n128 v80 = swift_bridgeObjectRetain(v75, v79);
    if (v12(v78, 1LL, v10, v80))
    {
      uint64_t v81 = sub_100183098(&qword_1006457E8);
      memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v77, v78, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v77, 0LL, 1LL, v10);
    }
  }

  return v15;
}

uint64_t sub_1002A5878(const char **a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  double v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  Swift::String v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  id v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  __n128 v22 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[21] + 8], v21);
  uint64_t v23 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v7)(v23, 1LL, v5, v22);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v23, v5);
  }
  return result;
}

const char **sub_1002A5B74(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  uint64_t v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  uint64_t v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  uint64_t v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = *(int *)(a3 + 24);
  int v75 = (char *)a1 + v74;
  uint64_t v76 = (char *)a2 + v74;
  *(void *)&double v77 = swift_bridgeObjectRetain(v69).n128_u64[0];
  __n128 v78 = swift_bridgeObjectRetain(v73, v77);
  if (v11(v76, 1LL, v9, v78))
  {
    uint64_t v79 = sub_100183098(&qword_1006457E8);
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v75, v76, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v75, 0LL, 1LL, v9);
  }

  return a1;
}

uint64_t sub_1002A6280(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  double v114 = a1;
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v116 = *(void *)(v12 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v10, v12);
LABEL_6:
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v17 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v18 = v17[5];
  uint64_t v19 = &v10[v18];
  uint64_t v20 = &v11[v18];
  int v21 = v13(&v10[v18], 1LL, v12);
  int v22 = v13(v20, 1LL, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v19, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = v17[6];
  uint64_t v25 = &v10[v24];
  uint64_t v26 = &v11[v24];
  int v27 = v13(&v10[v24], 1LL, v12);
  int v28 = v13(v26, 1LL, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v25, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v25, v12);
LABEL_18:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v25, v26, v12);
LABEL_19:
  uint64_t v30 = v17[7];
  uint64_t v31 = &v10[v30];
  uint64_t v32 = &v11[v30];
  int v33 = v13(&v10[v30], 1LL, v12);
  int v34 = v13(v32, 1LL, v12);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v31, v32, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v31, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v31, v12);
LABEL_24:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v31, v32, v12);
LABEL_25:
  uint64_t v36 = v17[8];
  uint64_t v37 = &v10[v36];
  uint64_t v38 = &v11[v36];
  int v39 = v13(&v10[v36], 1LL, v12);
  int v40 = v13(v38, 1LL, v12);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v37, v38, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v37, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v37, v12);
LABEL_30:
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v37, v38, v12);
LABEL_31:
  uint64_t v42 = v17[9];
  uint64_t v43 = &v10[v42];
  uint64_t v44 = &v11[v42];
  int v45 = v13(&v10[v42], 1LL, v12);
  int v46 = v13(v44, 1LL, v12);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v43, v44, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v43, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v43, v12);
LABEL_36:
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v43, v44, v12);
LABEL_37:
  uint64_t v48 = v17[10];
  uint64_t v49 = &v10[v48];
  uint64_t v50 = &v11[v48];
  int v51 = v13(&v10[v48], 1LL, v12);
  int v52 = v13(v50, 1LL, v12);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v49, v50, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v49, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v49, v12);
LABEL_42:
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v49, v50, v12);
LABEL_43:
  uint64_t v54 = v17[11];
  uint64_t v55 = &v10[v54];
  uint64_t v56 = &v11[v54];
  int v57 = v13(&v10[v54], 1LL, v12);
  int v58 = v13(v56, 1LL, v12);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v55, v56, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v55, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v55, v12);
LABEL_48:
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v55, v56, v12);
LABEL_49:
  uint64_t v60 = v17[12];
  uint64_t v61 = &v10[v60];
  uint64_t v62 = &v11[v60];
  int v63 = v13(&v10[v60], 1LL, v12);
  int v64 = v13(v62, 1LL, v12);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v61, v62, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v61, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v61, v12);
LABEL_54:
    uint64_t v65 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v61, v62, v12);
LABEL_55:
  v10[v17[13]] = v11[v17[13]];
  uint64_t v66 = v17[14];
  uint64_t v67 = &v10[v66];
  uint64_t v68 = &v11[v66];
  int v69 = v13(&v10[v66], 1LL, v12);
  int v70 = v13(v68, 1LL, v12);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v67, v68, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v67, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v67, v12);
LABEL_60:
    uint64_t v71 = sub_100183098(&qword_1006457E8);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v67, v68, v12);
LABEL_61:
  uint64_t v72 = v17[15];
  uint64_t v73 = &v10[v72];
  uint64_t v74 = &v11[v72];
  int v75 = v13(&v10[v72], 1LL, v12);
  int v76 = v13(v74, 1LL, v12);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v73, v74, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v73, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v73, v12);
LABEL_66:
    uint64_t v77 = sub_100183098(&qword_1006457E8);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v73, v74, v12);
LABEL_67:
  uint64_t v78 = v17[16];
  uint64_t v79 = &v10[v78];
  __n128 v80 = &v11[v78];
  int v81 = v13(&v10[v78], 1LL, v12);
  int v82 = v13(v80, 1LL, v12);
  if (v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v79, v80, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v79, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v79, v12);
LABEL_72:
    uint64_t v83 = sub_100183098(&qword_1006457E8);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v79, v80, v12);
LABEL_73:
  uint64_t v84 = v17[17];
  uint64_t v85 = &v10[v84];
  int v86 = &v11[v84];
  int v87 = v13(&v10[v84], 1LL, v12);
  int v88 = v13(v86, 1LL, v12);
  if (v87)
  {
    if (!v88)
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v85, v86, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v85, 0LL, 1LL, v12);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v88)
  {
    (*(void (**)(char *, uint64_t))(v116 + 8))(v85, v12);
LABEL_78:
    uint64_t v89 = sub_100183098(&qword_1006457E8);
    memcpy(v85, v86, *(void *)(*(void *)(v89 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v116 + 24))(v85, v86, v12);
LABEL_79:
  uint64_t v90 = v17[18];
  uint64_t v91 = &v10[v90];
  uint64_t v92 = &v11[v90];
  int v93 = *(_DWORD *)v92;
  v91[4] = v92[4];
  *(_DWORD *)uint64_t v91 = v93;
  v10[v17[19]] = v11[v17[19]];
  uint64_t v94 = v17[20];
  uint64_t v95 = &v10[v94];
  uint64_t v96 = &v11[v94];
  *(void *)uint64_t v95 = *(void *)v96;
  uint64_t v97 = (const char *)*((void *)v96 + 1);
  double v98 = (const char *)*((void *)v95 + 1);
  *((void *)v95 + 1) = v97;
  *(void *)&double v99 = swift_bridgeObjectRetain(v97, v114).n128_u64[0];
  *(void *)&double v100 = swift_bridgeObjectRelease(v98, v99).n128_u64[0];
  uint64_t v101 = v17[21];
  uint64_t v102 = &v10[v101];
  uint64_t v103 = &v11[v101];
  *(void *)uint64_t v102 = *(void *)v103;
  unint64_t v104 = (const char *)*((void *)v103 + 1);
  double v105 = (const char *)*((void *)v102 + 1);
  *((void *)v102 + 1) = v104;
  *(void *)&double v106 = swift_bridgeObjectRetain(v104, v100).n128_u64[0];
  __n128 v107 = swift_bridgeObjectRelease(v105, v106);
  uint64_t v108 = *(int *)(a3 + 24);
  uint64_t v109 = (void *)(v115 + v108);
  uint64_t v110 = (char *)a2 + v108;
  LODWORD(v105) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v13)(v115 + v108, 1LL, v12, v107);
  int v111 = v13(v110, 1LL, v12);
  if (!(_DWORD)v105)
  {
    if (!v111)
    {
      (*(void (**)(void *, char *, uint64_t))(v116 + 24))(v109, v110, v12);
      return v115;
    }

    (*(void (**)(void *, uint64_t))(v116 + 8))(v109, v12);
    goto LABEL_84;
  }

  if (v111)
  {
LABEL_84:
    uint64_t v112 = sub_100183098(&qword_1006457E8);
    memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64LL));
    return v115;
  }

  (*(void (**)(void *, char *, uint64_t))(v116 + 16))(v109, v110, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v116 + 56))(v109, 0LL, 1LL, v12);
  return v115;
}

void *sub_1002A6E20(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  int v14 = &v6[v13];
  int v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  int v22 = &v6[v21];
  uint64_t v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  int v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  int v34 = &v6[v33];
  uint64_t v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  int v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  uint64_t v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  int v46 = &v6[v45];
  uint64_t v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  int v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  uint64_t v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  int v58 = &v6[v57];
  uint64_t v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v61 = v12[18];
  uint64_t v62 = &v6[v61];
  int v63 = &v7[v61];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  uint64_t v64 = *(int *)(a3 + 24);
  uint64_t v65 = (char *)a1 + v64;
  uint64_t v66 = (char *)a2 + v64;
  if (v10(v66, 1LL, v8))
  {
    uint64_t v67 = sub_100183098(&qword_1006457E8);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v65, v66, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v65, 0LL, 1LL, v8);
  }

  return a1;
}

uint64_t sub_1002A7508(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v112 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v114 = *(void *)(v10 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v114 + 48);
  int v12 = v11(v8, 1LL, v10);
  int v13 = v11(v9, 1LL, v10);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v8, v9, v10);
LABEL_7:
  int v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  int v19 = v11(&v8[v16], 1LL, v10);
  int v20 = v11(v18, 1LL, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v17, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = v15[6];
  uint64_t v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  int v25 = v11(&v8[v22], 1LL, v10);
  int v26 = v11(v24, 1LL, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v23, v24, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v23, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v23, v10);
LABEL_18:
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v23, v24, v10);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  int v31 = v11(&v8[v28], 1LL, v10);
  int v32 = v11(v30, 1LL, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v29, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v29, v10);
LABEL_24:
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v29, v30, v10);
LABEL_25:
  uint64_t v34 = v15[8];
  uint64_t v35 = &v8[v34];
  uint64_t v36 = &v9[v34];
  int v37 = v11(&v8[v34], 1LL, v10);
  int v38 = v11(v36, 1LL, v10);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v35, v36, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v35, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v35, v10);
LABEL_30:
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v35, v36, v10);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v9[v40];
  int v43 = v11(&v8[v40], 1LL, v10);
  int v44 = v11(v42, 1LL, v10);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v41, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v41, v10);
LABEL_36:
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v41, v42, v10);
LABEL_37:
  uint64_t v46 = v15[10];
  uint64_t v47 = &v8[v46];
  uint64_t v48 = &v9[v46];
  int v49 = v11(&v8[v46], 1LL, v10);
  int v50 = v11(v48, 1LL, v10);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v47, v48, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v47, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v47, v10);
LABEL_42:
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v47, v48, v10);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  int v55 = v11(&v8[v52], 1LL, v10);
  int v56 = v11(v54, 1LL, v10);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v53, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v53, v10);
LABEL_48:
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v53, v54, v10);
LABEL_49:
  uint64_t v58 = v15[12];
  uint64_t v59 = &v8[v58];
  uint64_t v60 = &v9[v58];
  int v61 = v11(&v8[v58], 1LL, v10);
  int v62 = v11(v60, 1LL, v10);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v59, v60, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v59, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v59, v10);
LABEL_54:
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v59, v60, v10);
LABEL_55:
  v8[v15[13]] = v9[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  int v67 = v11(&v8[v64], 1LL, v10);
  int v68 = v11(v66, 1LL, v10);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v65, v66, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v65, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v65, v10);
LABEL_60:
    uint64_t v69 = sub_100183098(&qword_1006457E8);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v65, v66, v10);
LABEL_61:
  uint64_t v70 = v15[15];
  uint64_t v71 = &v8[v70];
  uint64_t v72 = &v9[v70];
  int v73 = v11(&v8[v70], 1LL, v10);
  int v74 = v11(v72, 1LL, v10);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v71, v72, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v71, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v71, v10);
LABEL_66:
    uint64_t v75 = sub_100183098(&qword_1006457E8);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v71, v72, v10);
LABEL_67:
  uint64_t v76 = v15[16];
  uint64_t v77 = &v8[v76];
  uint64_t v78 = &v9[v76];
  int v79 = v11(&v8[v76], 1LL, v10);
  int v80 = v11(v78, 1LL, v10);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v77, v78, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v77, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v77, v10);
LABEL_72:
    uint64_t v81 = sub_100183098(&qword_1006457E8);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v77, v78, v10);
LABEL_73:
  uint64_t v82 = v15[17];
  uint64_t v83 = &v8[v82];
  uint64_t v84 = &v9[v82];
  int v85 = v11(&v8[v82], 1LL, v10);
  int v86 = v11(v84, 1LL, v10);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v83, v84, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v83, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v114 + 8))(v83, v10);
LABEL_78:
    uint64_t v87 = sub_100183098(&qword_1006457E8);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v114 + 40))(v83, v84, v10);
LABEL_79:
  uint64_t v88 = v15[18];
  uint64_t v89 = &v8[v88];
  uint64_t v90 = &v9[v88];
  *(_DWORD *)uint64_t v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v8[v15[19]] = v9[v15[19]];
  uint64_t v91 = v15[20];
  uint64_t v92 = &v8[v91];
  int v93 = &v9[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  uint64_t v96 = (const char *)*((void *)v92 + 1);
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  *(void *)&double v97 = swift_bridgeObjectRelease(v96, v112).n128_u64[0];
  uint64_t v98 = v15[21];
  double v99 = &v8[v98];
  double v100 = &v9[v98];
  uint64_t v102 = *(void *)v100;
  uint64_t v101 = *((void *)v100 + 1);
  uint64_t v103 = (const char *)*((void *)v99 + 1);
  *(void *)double v99 = v102;
  *((void *)v99 + 1) = v101;
  __n128 v104 = swift_bridgeObjectRelease(v103, v97);
  uint64_t v105 = *(int *)(a3 + 24);
  double v106 = (void *)(v113 + v105);
  __n128 v107 = (char *)a2 + v105;
  int v108 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v113 + v105, 1LL, v10, v104);
  int v109 = v11(v107, 1LL, v10);
  if (!v108)
  {
    if (!v109)
    {
      (*(void (**)(void *, char *, uint64_t))(v114 + 40))(v106, v107, v10);
      return v113;
    }

    (*(void (**)(void *, uint64_t))(v114 + 8))(v106, v10);
    goto LABEL_84;
  }

  if (v109)
  {
LABEL_84:
    uint64_t v110 = sub_100183098(&qword_1006457E8);
    memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64LL));
    return v113;
  }

  (*(void (**)(void *, char *, uint64_t))(v114 + 32))(v106, v107, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v106, 0LL, 1LL, v10);
  return v113;
}

uint64_t sub_1002A8080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A808C);
}

uint64_t sub_1002A8090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A809C);
}

uint64_t _s15GuestModeUnlockV18InitialLockContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C068, (uint64_t)&_s15GuestModeUnlockV18InitialLockContextVMn);
}

void sub_1002A80B4(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 3LL, v6, a1 + 16);
    }
  }

uint64_t sub_1002A8148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002A8154);
}

uint64_t sub_1002A8154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_1002A81D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002A81E0);
}

uint64_t sub_1002A81E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t _s15GuestModeUnlockV4FlowVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C100, (uint64_t)&_s15GuestModeUnlockV4FlowVMn);
}

uint64_t sub_1002A8270(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    void v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

const char *sub_1002A82F0(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = (const char *)a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    __n128 v14 = swift_bridgeObjectRetain(v4);
    uint64_t v87 = a2;
    if (v13(v10, 1LL, v11, v14))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
    }

    uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v17 = v16[5];
    uint64_t v18 = &v9[v17];
    int v19 = &v10[v17];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v17], 1LL, v11))
    {
      uint64_t v20 = sub_100183098(&qword_1006457E8);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0LL, 1LL, v11);
    }

    uint64_t v21 = v16[6];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v21], 1LL, v11))
    {
      uint64_t v24 = sub_100183098(&qword_1006457E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0LL, 1LL, v11);
    }

    uint64_t v25 = v16[7];
    int v26 = &v9[v25];
    uint64_t v27 = &v10[v25];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v25], 1LL, v11))
    {
      uint64_t v28 = sub_100183098(&qword_1006457E8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0LL, 1LL, v11);
    }

    uint64_t v29 = v16[8];
    uint64_t v30 = &v9[v29];
    int v31 = &v10[v29];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v29], 1LL, v11))
    {
      uint64_t v32 = sub_100183098(&qword_1006457E8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0LL, 1LL, v11);
    }

    uint64_t v33 = v16[9];
    uint64_t v34 = &v9[v33];
    uint64_t v35 = &v10[v33];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v33], 1LL, v11))
    {
      uint64_t v36 = sub_100183098(&qword_1006457E8);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v35, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0LL, 1LL, v11);
    }

    uint64_t v37 = v16[10];
    int v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v37], 1LL, v11))
    {
      uint64_t v40 = sub_100183098(&qword_1006457E8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v38, v39, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v38, 0LL, 1LL, v11);
    }

    uint64_t v41 = v16[11];
    uint64_t v42 = &v9[v41];
    int v43 = &v10[v41];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v41], 1LL, v11))
    {
      uint64_t v44 = sub_100183098(&qword_1006457E8);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v42, v43, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v42, 0LL, 1LL, v11);
    }

    uint64_t v45 = v16[12];
    uint64_t v46 = &v9[v45];
    uint64_t v47 = &v10[v45];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v45], 1LL, v11))
    {
      uint64_t v48 = sub_100183098(&qword_1006457E8);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v46, v47, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v46, 0LL, 1LL, v11);
    }

    v9[v16[13]] = v10[v16[13]];
    uint64_t v49 = v16[14];
    int v50 = &v9[v49];
    uint64_t v51 = &v10[v49];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v49], 1LL, v11))
    {
      uint64_t v52 = sub_100183098(&qword_1006457E8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v50, v51, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v50, 0LL, 1LL, v11);
    }

    uint64_t v53 = v16[15];
    uint64_t v54 = &v9[v53];
    int v55 = &v10[v53];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v53], 1LL, v11))
    {
      uint64_t v56 = sub_100183098(&qword_1006457E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v54, v55, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v54, 0LL, 1LL, v11);
    }

    uint64_t v57 = v16[16];
    uint64_t v58 = &v9[v57];
    uint64_t v59 = &v10[v57];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v57], 1LL, v11))
    {
      uint64_t v60 = sub_100183098(&qword_1006457E8);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v58, v59, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v58, 0LL, 1LL, v11);
    }

    uint64_t v61 = v16[17];
    int v62 = &v9[v61];
    uint64_t v63 = &v10[v61];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v61], 1LL, v11))
    {
      uint64_t v64 = sub_100183098(&qword_1006457E8);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v62, v63, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v62, 0LL, 1LL, v11);
    }

    uint64_t v65 = v16[18];
    uint64_t v66 = &v9[v65];
    int v67 = &v10[v65];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    v9[v16[19]] = v10[v16[19]];
    uint64_t v68 = v16[20];
    uint64_t v69 = &v9[v68];
    uint64_t v70 = &v10[v68];
    uint64_t v71 = (const char *)*((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = v16[21];
    int v73 = &v9[v72];
    int v74 = &v10[v72];
    uint64_t v75 = (const char *)*((void *)v74 + 1);
    *(void *)int v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = a3[6];
    uint64_t v77 = (char *)&v7[v76];
    uint64_t v78 = (char *)v87 + v76;
    *(void *)&double v79 = swift_bridgeObjectRetain(v71).n128_u64[0];
    __n128 v80 = swift_bridgeObjectRetain(v75, v79);
    if (v13(v78, 1LL, v11, v80))
    {
      uint64_t v81 = sub_100183098(&qword_1006457E8);
      memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v77, v78, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v77, 0LL, 1LL, v11);
    }

    uint64_t v82 = a3[7];
    uint64_t v83 = a3[8];
    uint64_t v84 = *(void **)((char *)v87 + v82);
    *(void *)&v7[v82] = v84;
    v7[v83] = *((_BYTE *)v87 + v83);
    id v85 = v84;
  }

  return v7;
}

void sub_1002A8A40(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  int v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  __n128 v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  int v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  __n128 v22 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[21] + 8], v21);
  uint64_t v23 = (char *)a1 + a2[6];
}

const char **sub_1002A8D30(const char **a1, const char **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  __n128 v13 = swift_bridgeObjectRetain(v6);
  int v86 = a3;
  if (v12(v9, 1LL, v10, v13))
  {
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
  {
    uint64_t v19 = sub_100183098(&qword_1006457E8);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
  }

  uint64_t v20 = v15[6];
  double v21 = &v8[v20];
  __n128 v22 = &v9[v20];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
  }

  uint64_t v24 = v15[7];
  uint64_t v25 = &v8[v24];
  int v26 = &v9[v24];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
  }

  uint64_t v28 = v15[8];
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
  }

  uint64_t v32 = v15[9];
  uint64_t v33 = &v8[v32];
  uint64_t v34 = &v9[v32];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
  }

  uint64_t v36 = v15[10];
  uint64_t v37 = &v8[v36];
  int v38 = &v9[v36];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
  }

  uint64_t v40 = v15[11];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v9[v40];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
  }

  uint64_t v44 = v15[12];
  uint64_t v45 = &v8[v44];
  uint64_t v46 = &v9[v44];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
  }

  v8[v15[13]] = v9[v15[13]];
  uint64_t v48 = v15[14];
  uint64_t v49 = &v8[v48];
  int v50 = &v9[v48];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
  }

  uint64_t v52 = v15[15];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
  }

  uint64_t v56 = v15[16];
  uint64_t v57 = &v8[v56];
  uint64_t v58 = &v9[v56];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
  }

  uint64_t v60 = v15[17];
  uint64_t v61 = &v8[v60];
  int v62 = &v9[v60];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
  {
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
  }

  uint64_t v64 = v15[18];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  v8[v15[19]] = v9[v15[19]];
  uint64_t v67 = v15[20];
  uint64_t v68 = &v8[v67];
  uint64_t v69 = &v9[v67];
  uint64_t v70 = (const char *)*((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = v15[21];
  uint64_t v72 = &v8[v71];
  int v73 = &v9[v71];
  int v74 = (const char *)*((void *)v73 + 1);
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v86[6];
  uint64_t v76 = (char *)a1 + v75;
  uint64_t v77 = (char *)a2 + v75;
  *(void *)&double v78 = swift_bridgeObjectRetain(v70).n128_u64[0];
  __n128 v79 = swift_bridgeObjectRetain(v74, v78);
  if (v12(v77, 1LL, v10, v79))
  {
    uint64_t v80 = sub_100183098(&qword_1006457E8);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v76, v77, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v76, 0LL, 1LL, v10);
  }

  uint64_t v81 = v86[7];
  uint64_t v82 = v86[8];
  uint64_t v83 = *(char **)((char *)a2 + v81);
  *(const char **)((char *)a1 + v81) = v83;
  *((_BYTE *)a1 + v82) = *((_BYTE *)a2 + v82);
  uint64_t v84 = v83;
  return a1;
}

const char **sub_1002A9458(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  uint64_t v120 = a3;
  NSString v122 = a2;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  int v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  int v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  int v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  uint64_t v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  int v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  uint64_t v68 = &v10[v67];
  uint64_t v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  int v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  uint64_t v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  int v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  double v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  uint64_t v98 = (const char *)*((void *)v97 + 1);
  double v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v120, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  __n128 v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  double v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  __n128 v108 = swift_bridgeObjectRelease(v106, v107);
  uint64_t v109 = v121[6];
  uint64_t v110 = (char *)a1 + v109;
  int v111 = (char *)(v123 + v109);
  int v112 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v14)((char *)a1 + v109, 1LL, v12, v108);
  int v113 = v14(v111, 1LL, v12);
  if (!v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v110, v111, v12);
      goto LABEL_85;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v110, v12);
    goto LABEL_84;
  }

  if (v113)
  {
LABEL_84:
    uint64_t v114 = sub_100183098(&qword_1006457E8);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v110, v111, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v110, 0LL, 1LL, v12);
LABEL_85:
  uint64_t v115 = v121[7];
  uint64_t v116 = *(void **)((char *)a1 + v115);
  v117 = *(char **)(v123 + v115);
  *(const char **)((char *)a1 + v115) = v117;
  uint64_t v118 = v117;

  *((_BYTE *)a1 + v121[8]) = *(_BYTE *)(v123 + v121[8]);
  return a1;
}

void *sub_1002A9F70(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  double v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v71 = a3;
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  int v15 = &v7[v14];
  int v16 = &v8[v14];
  if (v11(&v8[v14], 1LL, v9))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0LL, 1LL, v9);
  }

  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1LL, v9))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0LL, 1LL, v9);
  }

  uint64_t v22 = v13[7];
  int v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1LL, v9))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0LL, 1LL, v9);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  int v28 = &v8[v26];
  if (v11(&v8[v26], 1LL, v9))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0LL, 1LL, v9);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1LL, v9))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0LL, 1LL, v9);
  }

  uint64_t v34 = v13[10];
  int v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1LL, v9))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0LL, 1LL, v9);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  int v40 = &v8[v38];
  if (v11(&v8[v38], 1LL, v9))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0LL, 1LL, v9);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1LL, v9))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0LL, 1LL, v9);
  }

  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  int v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1LL, v9))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0LL, 1LL, v9);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  int v52 = &v8[v50];
  if (v11(&v8[v50], 1LL, v9))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0LL, 1LL, v9);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1LL, v9))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0LL, 1LL, v9);
  }

  uint64_t v58 = v13[17];
  int v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1LL, v9))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0LL, 1LL, v9);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  int v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v71[6];
  uint64_t v66 = (char *)a1 + v65;
  uint64_t v67 = &a2[v65];
  if (v11(&a2[v65], 1LL, v9))
  {
    uint64_t v68 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0LL, 1LL, v9);
  }

  uint64_t v69 = v71[8];
  *(void *)((char *)a1 + v71[7]) = *(void *)&a2[v71[7]];
  *((_BYTE *)a1 + v69) = a2[v69];
  return a1;
}

const char **sub_1002AA670(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  double v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  uint64_t v115 = a3;
  v117 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  int v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  int v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  double v97 = (const char *)*((void *)v93 + 1);
  *(void *)int v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v115, v117).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  __n128 v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  __n128 v105 = swift_bridgeObjectRelease(v104, v98);
  uint64_t v106 = v116[6];
  double v107 = (char *)a1 + v106;
  __n128 v108 = (char *)(v118 + v106);
  int v109 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v12)((char *)a1 + v106, 1LL, v10, v105);
  int v110 = v12(v108, 1LL, v10);
  if (!v109)
  {
    if (!v110)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v107, v108, v10);
      goto LABEL_85;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v107, v10);
    goto LABEL_84;
  }

  if (v110)
  {
LABEL_84:
    uint64_t v111 = sub_100183098(&qword_1006457E8);
    memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v107, v108, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v107, 0LL, 1LL, v10);
LABEL_85:
  uint64_t v112 = v116[7];
  int v113 = *(void **)((char *)a1 + v112);
  *(const char **)((char *)a1 + v112) = *(const char **)(v118 + v112);

  *((_BYTE *)a1 + v116[8]) = *(_BYTE *)(v118 + v116[8]);
  return a1;
}

uint64_t sub_1002AB15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AB168);
}

uint64_t sub_1002AB16C(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_1002AB210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AB21C);
}

char *sub_1002AB220(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 24);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_1002AB2C0(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      void v6[3] = "\b";
      v6[4] = &unk_1004D2BB0;
      swift_initStructMetadata(a1, 256LL, 5LL, v6, a1 + 16);
    }
  }

id sub_1002AB368()
{
  return sub_1002ABC70(_s15GuestModeUnlockV17InitialKeyContextVMa, (Class *)off_1005C8870);
}

uint64_t sub_1002AB38C(uint64_t a1, uint64_t a2)
{
  return sub_1002ABF5C(a1, a2, _s15GuestModeUnlockV17InitialKeyContextVMa, (Class *)off_1005C8870);
}

uint64_t sub_1002AB3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D95A8(v2 + *(int *)(a1 + 24), a2);
}

id sub_1002AB3C0()
{
  uint64_t v1 = *(int *)(_s15GuestModeUnlockV20HandleRequestContextVMa(0LL) + 36);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_1002AB42C(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = sub_100183098(&qword_1006457E0);
  uint64_t v12 = swift_allocObject(v11, 392LL, 7LL);
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004D2B00;
  if (qword_1006440E8 != -1) {
    swift_once(&qword_1006440E8, LongHash.storage.getter);
  }
  *(void *)(v12 + 56) = &type metadata for SDAuthentication.Operation.RecordSessionStart;
  *(void *)(v12 + 64) = &off_10064B078;
  *(void *)(v12 + 96) = &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
  *(void *)(v12 + 104) = &off_10064B058;
  *(void *)(v12 + 136) = &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
  *(void *)(v12 + 144) = &off_10064B038;
  *(void *)(v12 + 176) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
  *(void *)(v12 + 184) = &off_10064B018;
  *(void *)(v12 + 2swift_unknownObjectWeakDestroy(v0 + 16) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
  *(void *)(v12 + 224) = &off_10064AFF8;
  *(void *)(v12 + 256) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v12 + 264) = &off_10064ABB8;
  *(void *)(v12 + 296) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmedWithAKSManager;
  *(void *)(v12 + 304) = &off_10064A9D8;
  *(void *)(v12 + 336) = &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenWithLTKSessionInMessage;
  *(void *)(v12 + 344) = &off_10064AFD8;
  *(void *)(v12 + 376) = &type metadata for SDAuthentication.Operation.SendResponseMessage;
  *(void *)(v12 + 384) = &off_10064AFB8;
  *a3 = (const char *)v12;
  int v13 = (int *)_s15GuestModeUnlockV20HandleRequestContextVMa(0LL);
  uint64_t v14 = (uint64_t)a3 + v13[7];
  uint64_t v53 = v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1LL, 1LL, v5);
  uint64_t v15 = v13[9];
  *(const char **)((char *)a3 + v15) = 0LL;
  *((_BYTE *)a3 + v13[10]) = 1;
  if ([a1 hasAksToken]
    && (id v16 = [a1 aksToken]) != 0)
  {
    uint64_t v17 = v16;
    uint64_t v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v19 = v18;

    uint64_t v20 = _s15GuestModeUnlockV18InitialLockContextVMa(0LL);
    uint64_t v21 = v54;
    sub_1001A4B84( v54 + *(int *)(v20 + 20),  (uint64_t)a3 + v13[5],  type metadata accessor for SDAuthenticationSessionMetrics);
    sub_100224D6C(v21 + *(int *)(v20 + 24), v14);
    id v22 = [a1 hasUnlockDate];
    if ((_DWORD)v22 && (id v22 = [a1 unlockDate], v23 != 0.0)) {
      Date.init(timeIntervalSince1970:)([a1 unlockDate]);
    }
    else {
      Date.init()(v22);
    }
    uint64_t v24 = v53;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))((char *)a3 + v13[8], v10, v5);
    uint64_t v25 = (uint64_t *)((char *)a3 + v13[6]);
    uint64_t v26 = v51;
    uint64_t *v25 = v51;
    v25[1] = v19;
    sub_10019BA8C(v26, v19);
    if (qword_1006440E0 != -1) {
      swift_once(&qword_1006440E0, sub_1002A4F24);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v27, (uint64_t)qword_10064BFF8);
    id v28 = a1;
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v53 = swift_slowAlloc(32LL, -1LL);
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v31 = 136315138;
      int v32 = v31 + 12;
      uint64_t v48 = v31 + 4;
      uint64_t v49 = v31;
      id v33 = [v28 unlockDate];
      uint64_t v34 = v52;
      Date.init(timeIntervalSince1970:)(v33);
      unint64_t v35 = sub_1002ACCD0();
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter(v5, v35);
      unint64_t v50 = v19;
      uint64_t v37 = v36;
      int v39 = v38;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v34, v5);
      uint64_t v55 = sub_10018CDB4(v37, (unint64_t)v39, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56, v48, v32);

      swift_bridgeObjectRelease(v39);
      uint64_t v40 = v49;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "got remote unlock date: %s", v49, 0xCu);
      uint64_t v41 = v53;
      swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);

      unint64_t v43 = v50;
      uint64_t v42 = v51;
    }

    else
    {

      uint64_t v42 = v51;
      unint64_t v43 = v19;
    }

    sub_100189B20(v42, v43);
    sub_1001A4BC8(v54, _s15GuestModeUnlockV18InitialLockContextVMa);
  }

  else
  {
    unint64_t v44 = sub_100187014();
    uint64_t v45 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v44, 0LL, 0LL);
    *(_DWORD *)uint64_t v46 = 1;
    *(void *)(v46 + 8) = 0xD000000000000011LL;
    *(void *)(v46 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100508DC0LL;
    swift_willThrow(v45);

    sub_1001A4BC8(v54, _s15GuestModeUnlockV18InitialLockContextVMa);
    swift_bridgeObjectRelease(*a3);
    sub_100187100(v14, &qword_1006457E8);
  }

uint64_t sub_1002AB978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

uint64_t sub_1002AB9B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D95A8(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1002AB9D0(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_1002AB3C0);
}

id sub_1002AB9EC()
{
  uint64_t v1 = *(int *)(_s15GuestModeUnlockV21HandleResponseContextVMa(0LL) + 32);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationToken) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_1002ABA58(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 112LL, 7LL);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD530;
  if (qword_1006440E8 != -1) {
    swift_once(&qword_1006440E8, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenWithLTKSessionInMessage;
  *(void *)(v7 + 64) = &off_10064AF98;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendTokenMessage;
  *(void *)(v7 + 104) = &off_10064AF78;
  *a3 = (const char *)v7;
  uint64_t v8 = (int *)_s15GuestModeUnlockV21HandleResponseContextVMa(0LL);
  *(_DWORD *)((char *)a3 + v8[6]) = 34;
  uint64_t v9 = v8[8];
  *(const char **)((char *)a3 + v9) = 0LL;
  *((_BYTE *)a3 + v8[9]) = 7;
  if ([a1 hasAksToken])
  {
    uint64_t v10 = _s15GuestModeUnlockV17InitialKeyContextVMa(0LL);
    sub_1001A4B84( a2 + *(int *)(v10 + 20),  (uint64_t)a3 + v8[5],  type metadata accessor for SDAuthenticationSessionMetrics);
    id v11 = [a1 aksToken];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      uint64_t v15 = v14;

      sub_1001A4BC8(a2, _s15GuestModeUnlockV17InitialKeyContextVMa);
      id v16 = (uint64_t *)((char *)a3 + v8[7]);
      *id v16 = v13;
      v16[1] = v15;
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 1;
    *(void *)(v19 + 8) = 0xD000000000000019LL;
    *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x80000001005041F0LL;
    swift_willThrow(v18);

    sub_1001A4BC8(a2, _s15GuestModeUnlockV17InitialKeyContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

uint64_t sub_1002ABC48(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1002ABC54(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_1002AB9EC);
}

id sub_1002ABC70(uint64_t (*a1)(void), Class *a2)
{
  uint64_t v4 = *(int *)(a1(0LL) + 28);
  id v5 = *(void **)(v2 + v4);
  if (v5)
  {
    id v6 = *(id *)(v2 + v4);
LABEL_5:
    id v8 = v5;
    return v6;
  }

  id result = [objc_allocWithZone(*a2) init];
  if (result)
  {
    *(void *)(v2 + v4) = result;
    id v6 = result;
    id v5 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_1002ABCE8(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 152LL, 7LL);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD550;
  if (qword_1006440E8 != -1) {
    swift_once(&qword_1006440E8, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.ConsumeAKSTokenWithLTKSession;
  *(void *)(v7 + 64) = &off_10064AF58;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v7 + 104) = &off_10064B238;
  *(void *)(v7 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v7 + 144) = &off_10064AF38;
  *a3 = (const char *)v7;
  id v8 = (int *)_s15GuestModeUnlockV18HandleTokenContextVMa(0LL);
  uint64_t v9 = v8[7];
  *(const char **)((char *)a3 + v9) = 0LL;
  *((_BYTE *)a3 + v8[8]) = 2;
  if ([a1 hasAksToken])
  {
    uint64_t v10 = _s15GuestModeUnlockV20HandleRequestContextVMa(0LL);
    sub_1001A4B84( a2 + *(int *)(v10 + 20),  (uint64_t)a3 + v8[5],  type metadata accessor for SDAuthenticationSessionMetrics);
    id v11 = [a1 aksToken];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      uint64_t v15 = v14;

      sub_1001A4BC8(a2, _s15GuestModeUnlockV20HandleRequestContextVMa);
      id v16 = (uint64_t *)((char *)a3 + v8[6]);
      *id v16 = v13;
      v16[1] = v15;
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 1;
    *(void *)(v19 + 8) = 0xD000000000000019LL;
    *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x80000001005041F0LL;
    swift_willThrow(v18);

    sub_1001A4BC8(a2, _s15GuestModeUnlockV20HandleRequestContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

uint64_t sub_1002ABEDC(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 24);
  uint64_t v3 = *(void *)v2;
  sub_10019BA8C(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

id sub_1002ABF14()
{
  return sub_1002ABC70(_s15GuestModeUnlockV18HandleTokenContextVMa, (Class *)off_1005C8838);
}

uint64_t sub_1002ABF38(uint64_t a1, uint64_t a2)
{
  return sub_1002ABF5C(a1, a2, _s15GuestModeUnlockV18HandleTokenContextVMa, (Class *)off_1005C8838);
}

uint64_t sub_1002ABF5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), Class *a4)
{
  id v4 = sub_1002ABC70(a3, a4);
  id v5 = [v4 data];

  if (v5)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v5);

    return v6;
  }

  else
  {
    unint64_t v8 = sub_100187014();
    uint64_t v9 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v8, 0LL, 0LL);
    *(_DWORD *)uint64_t v10 = 10;
    *(void *)(v10 + 8) = 0xD00000000000001ALL;
    *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100504230LL;
    return swift_willThrow(v9);
  }

void sub_1002AC020(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 152LL, 7LL);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD550;
  if (qword_1006440E8 != -1) {
    swift_once(&qword_1006440E8, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v7 + 64) = &off_10064B218;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.ConfirmAKSSessionWithLTKSession;
  *(void *)(v7 + 104) = &off_10064AF18;
  *(void *)(v7 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v7 + 144) = &off_10064AF38;
  *a3 = (const char *)v7;
  if ([a1 hasSuccess])
  {
    uint64_t v8 = a2 + *(int *)(_s15GuestModeUnlockV21HandleResponseContextVMa(0LL) + 20);
    uint64_t v9 = _s15GuestModeUnlockV25HandleConfirmationContextVMa(0LL);
    sub_1001A4B84(v8, (uint64_t)a3 + *(int *)(v9 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v8) = [a1 success];

    sub_1001A4BC8(a2, _s15GuestModeUnlockV21HandleResponseContextVMa);
    *((_BYTE *)a3 + *(int *)(v9 + swift_release(*(void *)(v0 + 24)) = v8;
  }

  else
  {
    unint64_t v10 = sub_100187014();
    uint64_t v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0LL, 0LL);
    *(_DWORD *)uint64_t v12 = 1;
    *(void *)(v12 + 8) = 0xD000000000000016LL;
    *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100504210LL;
    swift_willThrow(v11);

    sub_1001A4BC8(a2, _s15GuestModeUnlockV21HandleResponseContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

void sub_1002AC1DC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v118 = a3;
  uint64_t v102 = _s15GuestModeUnlockV25HandleConfirmationContextVMa(0LL);
  __chkstk_darwin(v102);
  uint64_t v106 = (const char **)((char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = sub_100183098(&qword_10064C1E0);
  __chkstk_darwin(v5);
  uint64_t v111 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = _s15GuestModeUnlockV18HandleTokenContextVMa(0LL);
  __chkstk_darwin(v103);
  int v110 = (const char **)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = sub_100183098(&qword_10064C1E8);
  __chkstk_darwin(v8);
  v117 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v112 = _s15GuestModeUnlockV21HandleResponseContextVMa(0LL);
  uint64_t v109 = *(void *)(v112 - 8);
  uint64_t v10 = __chkstk_darwin(v112);
  uint64_t v104 = (uint64_t)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v105 = (uint64_t)&v102 - v13;
  __chkstk_darwin(v12);
  uint64_t v116 = (const char **)((char *)&v102 - v14);
  uint64_t v15 = sub_100183098(&qword_10064C1F0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = _s15GuestModeUnlockV17InitialKeyContextVMa(0LL);
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v114 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v115 = (uint64_t)&v102 - v21;
  uint64_t v119 = _s15GuestModeUnlockV20HandleRequestContextVMa(0LL);
  uint64_t v113 = *(void *)(v119 - 8);
  uint64_t v22 = __chkstk_darwin(v119);
  uint64_t v107 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v108 = (uint64_t)&v102 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (const char **)((char *)&v102 - v26);
  uint64_t v28 = sub_100183098(&qword_10064C1F8);
  __chkstk_darwin(v28);
  os_log_type_t v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = _s15GuestModeUnlockV18InitialLockContextVMa(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  unint64_t v35 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v102 - v36;
  uint64_t v38 = a1;
  sub_10019A6C4(a1, (uint64_t)v124);
  uint64_t v39 = sub_100183098(&qword_1006500D0);
  uint64_t v40 = sub_100183168(0LL, &qword_100645A08, off_1005C8870);
  if (swift_dynamicCast(&v125, v124, v39, v40, 6LL))
  {
    uint64_t v41 = v125;
    sub_10019A6C4(v123, (uint64_t)v124);
    uint64_t v42 = sub_100183098(&qword_100645A28);
    int v43 = swift_dynamicCast(v30, v124, v42, v31, 6LL);
    unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if (v43)
    {
      v44(v30, 0LL, 1LL, v31);
      sub_1001A4B40((uint64_t)v30, (uint64_t)v37, _s15GuestModeUnlockV18InitialLockContextVMa);
      sub_1001A4B84((uint64_t)v37, (uint64_t)v35, _s15GuestModeUnlockV18InitialLockContextVMa);
      id v45 = v41;
      uint64_t v46 = v122;
      sub_1002AB42C(v45, (uint64_t)v35, v27);
      if (v46)
      {
        uint64_t v47 = _s15GuestModeUnlockV18InitialLockContextVMa;
        uint64_t v48 = (uint64_t)v37;
LABEL_21:
        sub_1001A4BC8(v48, v47);

        return;
      }

      int v87 = v118;
      v118[3] = v119;
      v87[4] = &off_1005D8758;
      uint64_t v88 = sub_1001A4B04(v87);
      sub_1001A4B40((uint64_t)v27, (uint64_t)v88, _s15GuestModeUnlockV20HandleRequestContextVMa);

      uint64_t v89 = _s15GuestModeUnlockV18InitialLockContextVMa;
      uint64_t v90 = (uint64_t)v37;
      goto LABEL_30;
    }

    v44(v30, 1LL, 1LL, v31);
    sub_100187100((uint64_t)v30, &qword_10064C1F8);
    unint64_t v60 = sub_100187014();
    uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v60, 0LL, 0LL);
    *(_DWORD *)uint64_t v62 = 10;
    unint64_t v63 = 0xD000000000000047LL;
    uint64_t v64 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_10:
    *(void *)(v62 + 8) = v63;
    *(void *)(v62 + swift_unknownObjectWeakDestroy(v0 + 16) = (unint64_t)(v64 - 32) | 0x8000000000000000LL;
    swift_willThrow(v61);

    return;
  }

  uint64_t v49 = v123;
  sub_10019A6C4(v38, (uint64_t)v124);
  uint64_t v50 = sub_100183168(0LL, &qword_100645A10, off_1005C8878);
  if (swift_dynamicCast(&v125, v124, v39, v50, 6LL))
  {
    uint64_t v51 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v52 = sub_100183098(&qword_100645A28);
    uint64_t v53 = v121;
    int v54 = swift_dynamicCast(v17, v124, v52, v121, 6LL);
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
    if (!v54)
    {
      v55(v17, 1LL, 1LL, v53);
      sub_100187100((uint64_t)v17, &qword_10064C1F0);
      unint64_t v75 = sub_100187014();
      uint64_t v76 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v75, 0LL, 0LL);
      *(_DWORD *)uint64_t v77 = 10;
      *(void *)(v77 + 8) = 0xD000000000000046LL;
      *(void *)(v77 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x80000001005040E0LL;
      swift_willThrow(v76);

      return;
    }

    v55(v17, 0LL, 1LL, v53);
    uint64_t v56 = v115;
    sub_1001A4B40((uint64_t)v17, v115, _s15GuestModeUnlockV17InitialKeyContextVMa);
    uint64_t v57 = v114;
    sub_1001A4B84(v56, v114, _s15GuestModeUnlockV17InitialKeyContextVMa);
    id v45 = v51;
    uint64_t v58 = v116;
    uint64_t v59 = v122;
    sub_1002ABA58(v45, v57, v116);
    if (v59)
    {
      uint64_t v47 = _s15GuestModeUnlockV17InitialKeyContextVMa;
      uint64_t v48 = v56;
      goto LABEL_21;
    }

    uint64_t v95 = v118;
    v118[3] = v112;
    v95[4] = &off_1005D8770;
    uint64_t v96 = sub_1001A4B04(v95);
    sub_1001A4B40((uint64_t)v58, (uint64_t)v96, _s15GuestModeUnlockV21HandleResponseContextVMa);

    uint64_t v89 = _s15GuestModeUnlockV17InitialKeyContextVMa;
    uint64_t v90 = v56;
    goto LABEL_30;
  }

  sub_10019A6C4(v38, (uint64_t)v124);
  uint64_t v65 = sub_100183168(0LL, &qword_100645A18, off_1005C8880);
  if (swift_dynamicCast(&v125, v124, v39, v65, 6LL))
  {
    uint64_t v41 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v66 = sub_100183098(&qword_100645A28);
    uint64_t v67 = (uint64_t)v117;
    uint64_t v68 = v119;
    int v69 = swift_dynamicCast(v117, v124, v66, v119, 6LL);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    if (!v69)
    {
      v70(v67, 1LL, 1LL, v68);
      sub_100187100(v67, &qword_10064C1E8);
      unint64_t v91 = sub_100187014();
      uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v91, 0LL, 0LL);
      *(_DWORD *)uint64_t v62 = 10;
      unint64_t v63 = 0xD000000000000049LL;
      uint64_t v64 = "Invalid previous context as HandleRequestContext, message may be replayed";
      goto LABEL_10;
    }

    v70(v67, 0LL, 1LL, v68);
    uint64_t v71 = v108;
    sub_1001A4B40(v67, v108, _s15GuestModeUnlockV20HandleRequestContextVMa);
    uint64_t v72 = v107;
    sub_1001A4B84(v71, v107, _s15GuestModeUnlockV20HandleRequestContextVMa);
    id v45 = v41;
    uint64_t v73 = v110;
    uint64_t v74 = v122;
    sub_1002ABCE8(v45, v72, v110);
    if (v74)
    {
      uint64_t v47 = _s15GuestModeUnlockV20HandleRequestContextVMa;
LABEL_20:
      uint64_t v48 = v71;
      goto LABEL_21;
    }

    double v98 = v118;
    v118[3] = v103;
    v98[4] = &off_1005D8788;
    uint64_t v99 = sub_1001A4B04(v98);
    sub_1001A4B40((uint64_t)v73, (uint64_t)v99, _s15GuestModeUnlockV18HandleTokenContextVMa);

    uint64_t v89 = _s15GuestModeUnlockV20HandleRequestContextVMa;
  }

  else
  {
    sub_10019A6C4(v38, (uint64_t)v124);
    uint64_t v78 = sub_100183168(0LL, &qword_100645A20, off_1005C8838);
    if (!swift_dynamicCast(&v125, v124, v39, v78, 6LL))
    {
      unint64_t v92 = sub_100187014();
      uint64_t v93 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v92, 0LL, 0LL);
      *(_DWORD *)uint64_t v94 = 10;
      *(void *)(v94 + 8) = 0xD00000000000001FLL;
      *(void *)(v94 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000100503F30LL;
      swift_willThrow(v93);
      return;
    }

    uint64_t v41 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v79 = sub_100183098(&qword_100645A28);
    uint64_t v81 = (uint64_t)v111;
    uint64_t v80 = v112;
    int v82 = swift_dynamicCast(v111, v124, v79, v112, 6LL);
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
    if (!v82)
    {
      v83(v81, 1LL, 1LL, v80);
      sub_100187100(v81, &qword_10064C1E0);
      unint64_t v97 = sub_100187014();
      uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v97, 0LL, 0LL);
      *(_DWORD *)uint64_t v62 = 10;
      unint64_t v63 = 0xD00000000000004ALL;
      uint64_t v64 = "Invalid previous context as HandleResponseContext, message may be replayed";
      goto LABEL_10;
    }

    v83(v81, 0LL, 1LL, v80);
    uint64_t v71 = v105;
    sub_1001A4B40(v81, v105, _s15GuestModeUnlockV21HandleResponseContextVMa);
    uint64_t v84 = v104;
    sub_1001A4B84(v71, v104, _s15GuestModeUnlockV21HandleResponseContextVMa);
    id v45 = v41;
    uint64_t v85 = v106;
    uint64_t v86 = v122;
    sub_1002AC020(v45, v84, v106);
    if (v86)
    {
      uint64_t v47 = _s15GuestModeUnlockV21HandleResponseContextVMa;
      goto LABEL_20;
    }

    double v100 = v118;
    v118[3] = v102;
    v100[4] = &off_1005D87A0;
    double v101 = sub_1001A4B04(v100);
    sub_1001A4B40((uint64_t)v85, (uint64_t)v101, _s15GuestModeUnlockV25HandleConfirmationContextVMa);

    uint64_t v89 = _s15GuestModeUnlockV21HandleResponseContextVMa;
  }

  uint64_t v90 = v71;
LABEL_30:
  sub_1001A4BC8(v90, v89);
}

void sub_1002ACC6C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

uint64_t _s15GuestModeUnlockV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C440, (uint64_t)&_s15GuestModeUnlockV25HandleConfirmationContextVMn);
}

uint64_t _s15GuestModeUnlockV18HandleTokenContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C300, (uint64_t)&_s15GuestModeUnlockV18HandleTokenContextVMn);
}

uint64_t _s15GuestModeUnlockV21HandleResponseContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C3A0, (uint64_t)&_s15GuestModeUnlockV21HandleResponseContextVMn);
}

uint64_t _s15GuestModeUnlockV20HandleRequestContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064C258, (uint64_t)&_s15GuestModeUnlockV20HandleRequestContextVMn);
}

unint64_t sub_1002ACCD0()
{
  unint64_t result = qword_100651A50;
  if (!qword_100651A50)
  {
    uint64_t v1 = type metadata accessor for Date(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_100651A50);
  }

  return result;
}

const char *sub_1002ACD18(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = (const char *)a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    __n128 v14 = swift_bridgeObjectRetain(v4);
    unint64_t v92 = a2;
    if (v13(v10, 1LL, v11, v14))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
    }

    uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v17 = v16[5];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v17], 1LL, v11))
    {
      uint64_t v20 = sub_100183098(&qword_1006457E8);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0LL, 1LL, v11);
    }

    uint64_t v21 = v16[6];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v21], 1LL, v11))
    {
      uint64_t v24 = sub_100183098(&qword_1006457E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0LL, 1LL, v11);
    }

    uint64_t v25 = v16[7];
    uint64_t v26 = &v9[v25];
    uint64_t v27 = &v10[v25];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v25], 1LL, v11))
    {
      uint64_t v28 = sub_100183098(&qword_1006457E8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0LL, 1LL, v11);
    }

    uint64_t v29 = v16[8];
    os_log_type_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v29], 1LL, v11))
    {
      uint64_t v32 = sub_100183098(&qword_1006457E8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0LL, 1LL, v11);
    }

    uint64_t v33 = v16[9];
    uint64_t v34 = &v9[v33];
    unint64_t v35 = &v10[v33];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v33], 1LL, v11))
    {
      uint64_t v36 = sub_100183098(&qword_1006457E8);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v35, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0LL, 1LL, v11);
    }

    uint64_t v37 = v16[10];
    uint64_t v38 = &v9[v37];
    uint64_t v39 = &v10[v37];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v37], 1LL, v11))
    {
      uint64_t v40 = sub_100183098(&qword_1006457E8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v38, v39, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v38, 0LL, 1LL, v11);
    }

    uint64_t v41 = v16[11];
    uint64_t v42 = &v9[v41];
    int v43 = &v10[v41];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v41], 1LL, v11))
    {
      uint64_t v44 = sub_100183098(&qword_1006457E8);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v42, v43, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v42, 0LL, 1LL, v11);
    }

    uint64_t v45 = v16[12];
    uint64_t v46 = &v9[v45];
    uint64_t v47 = &v10[v45];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v45], 1LL, v11))
    {
      uint64_t v48 = sub_100183098(&qword_1006457E8);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v46, v47, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v46, 0LL, 1LL, v11);
    }

    v9[v16[13]] = v10[v16[13]];
    uint64_t v49 = v16[14];
    uint64_t v50 = &v9[v49];
    uint64_t v51 = &v10[v49];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v49], 1LL, v11))
    {
      uint64_t v52 = sub_100183098(&qword_1006457E8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v50, v51, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v50, 0LL, 1LL, v11);
    }

    uint64_t v53 = v16[15];
    int v54 = &v9[v53];
    uint64_t v55 = &v10[v53];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v53], 1LL, v11))
    {
      uint64_t v56 = sub_100183098(&qword_1006457E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v54, v55, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v54, 0LL, 1LL, v11);
    }

    uint64_t v57 = v16[16];
    uint64_t v58 = &v9[v57];
    uint64_t v59 = &v10[v57];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v57], 1LL, v11))
    {
      uint64_t v60 = sub_100183098(&qword_1006457E8);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v58, v59, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v58, 0LL, 1LL, v11);
    }

    uint64_t v61 = v16[17];
    uint64_t v62 = &v9[v61];
    unint64_t v63 = &v10[v61];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v61], 1LL, v11))
    {
      uint64_t v64 = sub_100183098(&qword_1006457E8);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v62, v63, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v62, 0LL, 1LL, v11);
    }

    uint64_t v65 = v16[18];
    uint64_t v66 = &v9[v65];
    uint64_t v67 = &v10[v65];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    v9[v16[19]] = v10[v16[19]];
    uint64_t v68 = v16[20];
    int v69 = &v9[v68];
    uint64_t v70 = &v10[v68];
    uint64_t v71 = (const char *)*((void *)v70 + 1);
    *(void *)int v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = v16[21];
    uint64_t v73 = &v9[v72];
    uint64_t v74 = &v10[v72];
    unint64_t v75 = (const char *)*((void *)v74 + 1);
    *(void *)uint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = a3[6];
    uint64_t v77 = (uint64_t *)&v7[v76];
    uint64_t v78 = (uint64_t *)((char *)v92 + v76);
    uint64_t v79 = *v78;
    unint64_t v80 = v78[1];
    *(void *)&double v81 = swift_bridgeObjectRetain(v71).n128_u64[0];
    swift_bridgeObjectRetain(v75, v81);
    sub_10019BA8C(v79, v80);
    uint64_t *v77 = v79;
    v77[1] = v80;
    uint64_t v82 = a3[7];
    uint64_t v83 = (char *)&v7[v82];
    uint64_t v84 = (char *)v92 + v82;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)v92 + v82, 1LL, v11))
    {
      uint64_t v85 = sub_100183098(&qword_1006457E8);
      memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64LL));
      (*(void (**)(const char *, char *, uint64_t))(v12 + 16))(&v7[a3[8]], (char *)v92 + a3[8], v11);
    }

    else
    {
      uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      v86(v83, v84, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v83, 0LL, 1LL, v11);
      v86((char *)&v7[a3[8]], (char *)v92 + a3[8], v11);
    }

    uint64_t v87 = a3[9];
    uint64_t v88 = a3[10];
    uint64_t v89 = *(void **)((char *)v92 + v87);
    *(void *)&v7[v87] = v89;
    v7[v88] = *((_BYTE *)v92 + v88);
    id v90 = v89;
  }

  return v7;
}

void sub_1002AD4A0(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  uint64_t v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  __n128 v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v4[v8[21] + 8], v21);
  sub_100189B20(*(uint64_t *)((char *)a1 + a2[6]), *(unint64_t *)((char *)a1 + a2[6] + 8));
  uint64_t v22 = (char *)a1 + a2[7];
  unsigned int v23 = v7(v22, 1LL, v5);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  if (!v23) {
    v24(v22, v5);
  }
  v24((char *)a1 + a2[8], v5);
}

const char **sub_1002AD7B0(const char **a1, const char **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  __n128 v13 = swift_bridgeObjectRetain(v6);
  unint64_t v91 = a3;
  if (v12(v9, 1LL, v10, v13))
  {
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
  {
    uint64_t v19 = sub_100183098(&qword_1006457E8);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
  }

  uint64_t v20 = v15[6];
  double v21 = &v8[v20];
  uint64_t v22 = &v9[v20];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
  }

  uint64_t v24 = v15[7];
  uint64_t v25 = &v8[v24];
  uint64_t v26 = &v9[v24];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
  }

  uint64_t v28 = v15[8];
  uint64_t v29 = &v8[v28];
  os_log_type_t v30 = &v9[v28];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
  }

  uint64_t v32 = v15[9];
  uint64_t v33 = &v8[v32];
  uint64_t v34 = &v9[v32];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
  }

  uint64_t v36 = v15[10];
  uint64_t v37 = &v8[v36];
  uint64_t v38 = &v9[v36];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
  }

  uint64_t v40 = v15[11];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v9[v40];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
  }

  uint64_t v44 = v15[12];
  uint64_t v45 = &v8[v44];
  uint64_t v46 = &v9[v44];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
  }

  v8[v15[13]] = v9[v15[13]];
  uint64_t v48 = v15[14];
  uint64_t v49 = &v8[v48];
  uint64_t v50 = &v9[v48];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
  }

  uint64_t v52 = v15[15];
  uint64_t v53 = &v8[v52];
  int v54 = &v9[v52];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
  }

  uint64_t v56 = v15[16];
  uint64_t v57 = &v8[v56];
  uint64_t v58 = &v9[v56];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
  }

  uint64_t v60 = v15[17];
  uint64_t v61 = &v8[v60];
  uint64_t v62 = &v9[v60];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
  {
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
  }

  uint64_t v64 = v15[18];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  v8[v15[19]] = v9[v15[19]];
  uint64_t v67 = v15[20];
  uint64_t v68 = &v8[v67];
  int v69 = &v9[v67];
  uint64_t v70 = (const char *)*((void *)v69 + 1);
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = v70;
  uint64_t v71 = v15[21];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  uint64_t v74 = (const char *)*((void *)v73 + 1);
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v91[6];
  uint64_t v76 = (uint64_t *)((char *)a1 + v75);
  uint64_t v77 = (uint64_t *)((char *)a2 + v75);
  uint64_t v78 = *v77;
  unint64_t v79 = v77[1];
  *(void *)&double v80 = swift_bridgeObjectRetain(v70).n128_u64[0];
  swift_bridgeObjectRetain(v74, v80);
  sub_10019BA8C(v78, v79);
  uint64_t *v76 = v78;
  v76[1] = v79;
  uint64_t v81 = v91[7];
  uint64_t v82 = (char *)a1 + v81;
  uint64_t v83 = (char *)a2 + v81;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)((char *)a2 + v81, 1LL, v10))
  {
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64LL));
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)a1 + v91[8], (char *)a2 + v91[8], v10);
  }

  else
  {
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    v85(v82, v83, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v82, 0LL, 1LL, v10);
    v85((char *)a1 + v91[8], (char *)a2 + v91[8], v10);
  }

  uint64_t v86 = v91[9];
  uint64_t v87 = v91[10];
  uint64_t v88 = *(char **)((char *)a2 + v86);
  *(const char **)((char *)a1 + v86) = v88;
  *((_BYTE *)a1 + v87) = *((_BYTE *)a2 + v87);
  uint64_t v89 = v88;
  return a1;
}

const char **sub_1002ADF10(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  uint64_t v125 = a3;
  __n128 v127 = a2;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  uint64_t v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  uint64_t v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  double v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  uint64_t v86 = &v10[v85];
  uint64_t v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  unint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)unint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  unint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v125, v127).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  uint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  uint64_t v108 = v126[6];
  uint64_t v109 = (uint64_t *)((char *)a1 + v108);
  int v110 = (uint64_t *)(v128 + v108);
  uint64_t v111 = *v110;
  unint64_t v112 = v110[1];
  sub_10019BA8C(*v110, v112);
  uint64_t v113 = *v109;
  unint64_t v114 = v109[1];
  *uint64_t v109 = v111;
  v109[1] = v112;
  sub_100189B20(v113, v114);
  uint64_t v115 = v126[7];
  uint64_t v116 = (char *)a1 + v115;
  v117 = (char *)(v128 + v115);
  LODWORD(v109) = v14((char *)a1 + v115, 1LL, v12);
  int v118 = v14(v117, 1LL, v12);
  if (!(_DWORD)v109)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v116, v117, v12);
      goto LABEL_85;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v116, v12);
    goto LABEL_84;
  }

  if (v118)
  {
LABEL_84:
    uint64_t v119 = sub_100183098(&qword_1006457E8);
    memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v116, v117, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v116, 0LL, 1LL, v12);
LABEL_85:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 24))((char *)a1 + v126[8], v128 + v126[8], v12);
  uint64_t v120 = v126[9];
  uint64_t v121 = *(void **)((char *)a1 + v120);
  uint64_t v122 = *(char **)(v128 + v120);
  *(const char **)((char *)a1 + v120) = v122;
  uint64_t v123 = v122;

  *((_BYTE *)a1 + v126[10]) = *(_BYTE *)(v128 + v126[10]);
  return a1;
}

char *sub_1002AEA68(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  double v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v72 = a3;
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  int v15 = &v7[v14];
  int v16 = &v8[v14];
  if (v11(&v8[v14], 1LL, v9))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0LL, 1LL, v9);
  }

  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1LL, v9))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0LL, 1LL, v9);
  }

  uint64_t v22 = v13[7];
  int v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1LL, v9))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0LL, 1LL, v9);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  int v28 = &v8[v26];
  if (v11(&v8[v26], 1LL, v9))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0LL, 1LL, v9);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1LL, v9))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0LL, 1LL, v9);
  }

  uint64_t v34 = v13[10];
  int v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1LL, v9))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0LL, 1LL, v9);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  int v40 = &v8[v38];
  if (v11(&v8[v38], 1LL, v9))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0LL, 1LL, v9);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1LL, v9))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0LL, 1LL, v9);
  }

  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  int v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1LL, v9))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0LL, 1LL, v9);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  int v52 = &v8[v50];
  if (v11(&v8[v50], 1LL, v9))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0LL, 1LL, v9);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1LL, v9))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0LL, 1LL, v9);
  }

  uint64_t v58 = v13[17];
  int v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1LL, v9))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0LL, 1LL, v9);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  int v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v72[7];
  *(_OWORD *)&a1[v72[6]] = *(_OWORD *)&a2[v72[6]];
  uint64_t v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  if (v11(&a2[v65], 1LL, v9))
  {
    uint64_t v68 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a1[v72[8]], &a2[v72[8]], v9);
  }

  else
  {
    int v69 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v69(v66, v67, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0LL, 1LL, v9);
    v69(&a1[v72[8]], &a2[v72[8]], v9);
  }

  uint64_t v70 = v72[10];
  *(void *)&a1[v72[9]] = *(void *)&a2[v72[9]];
  a1[v70] = a2[v70];
  return a1;
}

const char **sub_1002AF188(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  double v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  uint64_t v117 = a3;
  uint64_t v119 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  int v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  unint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v117, v119).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  uint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = v118[6];
  uint64_t v106 = *(uint64_t *)((char *)a1 + v105);
  unint64_t v107 = *(unint64_t *)((char *)a1 + v105 + 8);
  *(_OWORD *)((char *)a1 + v105) = *(_OWORD *)(v120 + v105);
  sub_100189B20(v106, v107);
  uint64_t v108 = v118[7];
  uint64_t v109 = (char *)a1 + v108;
  int v110 = (char *)(v120 + v108);
  int v111 = v12((char *)a1 + v108, 1LL, v10);
  int v112 = v12(v110, 1LL, v10);
  if (!v111)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v109, v110, v10);
      goto LABEL_85;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v109, v10);
    goto LABEL_84;
  }

  if (v112)
  {
LABEL_84:
    uint64_t v113 = sub_100183098(&qword_1006457E8);
    memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v109, v110, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v109, 0LL, 1LL, v10);
LABEL_85:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 40))((char *)a1 + v118[8], v120 + v118[8], v10);
  uint64_t v114 = v118[9];
  uint64_t v115 = *(void **)((char *)a1 + v114);
  *(const char **)((char *)a1 + v114) = *(const char **)(v120 + v114);

  *((_BYTE *)a1 + v118[10]) = *(_BYTE *)(v120 + v118[10]);
  return a1;
}

uint64_t sub_1002AFCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AFCB0);
}

uint64_t sub_1002AFCB0(char *a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }

    else
    {
      uint64_t v12 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[7];
      }

      else
      {
        uint64_t v10 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a3[8];
      }
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_1002AFD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AFD84);
}

char *sub_1002AFD84(char *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)unint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }

    else
    {
      uint64_t v12 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[7];
      }

      else
      {
        uint64_t v10 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a4[8];
      }
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_1002AFE48(uint64_t a1)
{
  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v8[1] = *(void *)(v2 - 8) + 64LL;
    v8[2] = &unk_1004D2CA8;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      v8[3] = *(void *)(v4 - 8) + 64LL;
      uint64_t v6 = type metadata accessor for Date(319LL);
      if (v7 <= 0x3F)
      {
        v8[4] = *(void *)(v6 - 8) + 64LL;
        v8[5] = "\b";
        v8[6] = &unk_1004D2BB0;
        swift_initStructMetadata(a1, 256LL, 7LL, v8, a1 + 16);
      }
    }
  }

const char *sub_1002AFF14(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v6 = (const char *)a1;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
    }

    uint64_t v20 = v15[6];
    int v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
    }

    uint64_t v24 = v15[7];
    uint64_t v25 = &v8[v24];
    int v26 = &v9[v24];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
    }

    uint64_t v28 = v15[8];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
    }

    uint64_t v32 = v15[9];
    int v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    }

    uint64_t v36 = v15[10];
    uint64_t v37 = &v8[v36];
    int v38 = &v9[v36];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
    }

    uint64_t v40 = v15[11];
    uint64_t v41 = &v8[v40];
    uint64_t v42 = &v9[v40];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
    }

    uint64_t v44 = v15[12];
    int v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
    }

    v8[v15[13]] = v9[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v8[v48];
    int v50 = &v9[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
    }

    uint64_t v52 = v15[15];
    uint64_t v53 = &v8[v52];
    uint64_t v54 = &v9[v52];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
    }

    uint64_t v56 = v15[16];
    int v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
    }

    uint64_t v60 = v15[17];
    uint64_t v61 = &v8[v60];
    int v62 = &v9[v60];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
    {
      uint64_t v63 = sub_100183098(&qword_1006457E8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
    }

    uint64_t v64 = v15[18];
    uint64_t v65 = &v8[v64];
    uint64_t v66 = &v9[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v67 = v15[20];
    int v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = (const char *)*((void *)v69 + 1);
    *(void *)int v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v8[v71];
    uint64_t v73 = &v9[v71];
    int v74 = (const char *)*((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = a3[6];
    uint64_t v76 = (uint64_t *)&v6[v75];
    uint64_t v77 = (uint64_t *)((char *)a2 + v75);
    uint64_t v78 = *v77;
    unint64_t v79 = v77[1];
    *(void *)&double v80 = swift_bridgeObjectRetain(v70).n128_u64[0];
    swift_bridgeObjectRetain(v74, v80);
    sub_10019BA8C(v78, v79);
    uint64_t *v76 = v78;
    v76[1] = v79;
    uint64_t v81 = a3[7];
    uint64_t v82 = a3[8];
    uint64_t v83 = *(void **)((char *)a2 + v81);
    *(void *)&v6[v81] = v83;
    v6[v82] = *((_BYTE *)a2 + v82);
    id v84 = v83;
  }

  return v6;
}

void sub_1002B0610(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v4[v8[21] + 8], v21);
  sub_100189B20(*(uint64_t *)((char *)a1 + a2[6]), *(unint64_t *)((char *)a1 + a2[6] + 8));
}

const char **sub_1002B08E4(const char **a1, const char **a2, int *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  int v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  int v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  int v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  int v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = a3[6];
  uint64_t v75 = (uint64_t *)((char *)a1 + v74);
  uint64_t v76 = (uint64_t *)((char *)a2 + v74);
  uint64_t v77 = *v76;
  unint64_t v78 = v76[1];
  *(void *)&double v79 = swift_bridgeObjectRetain(v69).n128_u64[0];
  swift_bridgeObjectRetain(v73, v79);
  sub_10019BA8C(v77, v78);
  *uint64_t v75 = v77;
  v75[1] = v78;
  uint64_t v80 = a3[7];
  uint64_t v81 = a3[8];
  uint64_t v82 = *(char **)((char *)a2 + v80);
  *(const char **)((char *)a1 + v80) = v82;
  *((_BYTE *)a1 + v81) = *((_BYTE *)a2 + v81);
  uint64_t v83 = v82;
  return a1;
}

const char **sub_1002B0FB8(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v120 = a3;
  uint64_t v122 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  int v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  int v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  int v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  int v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  int v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  unint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v120, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  uint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  uint64_t v108 = v121[6];
  uint64_t v109 = (uint64_t *)((char *)a1 + v108);
  int v110 = (uint64_t *)(v123 + v108);
  uint64_t v111 = *v110;
  unint64_t v112 = v110[1];
  sub_10019BA8C(*v110, v112);
  uint64_t v113 = *v109;
  unint64_t v114 = v109[1];
  *uint64_t v109 = v111;
  v109[1] = v112;
  sub_100189B20(v113, v114);
  uint64_t v115 = v121[7];
  uint64_t v116 = *(void **)((char *)a1 + v115);
  uint64_t v117 = *(char **)(v123 + v115);
  *(const char **)((char *)a1 + v115) = v117;
  int v118 = v117;

  *((_BYTE *)a1 + v121[8]) = *(_BYTE *)(v123 + v121[8]);
  return a1;
}

const char **sub_1002B1A44(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v111 = a3;
  uint64_t v113 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  double v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  int v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  unint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v111, v113).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  uint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = v112[6];
  uint64_t v106 = *(uint64_t *)((char *)a1 + v105);
  unint64_t v107 = *(unint64_t *)((char *)a1 + v105 + 8);
  *(_OWORD *)((char *)a1 + v105) = *(_OWORD *)(v114 + v105);
  sub_100189B20(v106, v107);
  uint64_t v108 = v112[7];
  uint64_t v109 = *(void **)((char *)a1 + v108);
  *(const char **)((char *)a1 + v108) = *(const char **)(v114 + v108);

  *((_BYTE *)a1 + v112[8]) = *(_BYTE *)(v114 + v112[8]);
  return a1;
}

uint64_t sub_1002B2494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B24A0);
}

uint64_t sub_1002B24A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B24B0);
}

uint64_t sub_1002B24B4(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = &unk_1004D2CA8;
    void v4[3] = "\b";
    void v4[4] = &unk_1004D2BB0;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

ValueMetadata *_s15GuestModeUnlockVMa()
{
  return &_s15GuestModeUnlockVN;
}

const char *sub_1002B2558(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v6 = (const char *)a1;
    uint64_t v7 = a3[5];
    double v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date(0LL);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
    __n128 v13 = swift_bridgeObjectRetain(v4);
    if (v12(v9, 1LL, v10, v13))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
    }

    uint64_t v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v16 = v15[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v16], 1LL, v10))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0LL, 1LL, v10);
    }

    uint64_t v20 = v15[6];
    int v21 = &v8[v20];
    uint64_t v22 = &v9[v20];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v20], 1LL, v10))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0LL, 1LL, v10);
    }

    uint64_t v24 = v15[7];
    uint64_t v25 = &v8[v24];
    int v26 = &v9[v24];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v24], 1LL, v10))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v25, v26, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0LL, 1LL, v10);
    }

    uint64_t v28 = v15[8];
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v28], 1LL, v10))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v29, 0LL, 1LL, v10);
    }

    uint64_t v32 = v15[9];
    int v33 = &v8[v32];
    uint64_t v34 = &v9[v32];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v32], 1LL, v10))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v33, v34, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v33, 0LL, 1LL, v10);
    }

    uint64_t v36 = v15[10];
    uint64_t v37 = &v8[v36];
    int v38 = &v9[v36];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v36], 1LL, v10))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v37, 0LL, 1LL, v10);
    }

    uint64_t v40 = v15[11];
    uint64_t v41 = &v8[v40];
    uint64_t v42 = &v9[v40];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v40], 1LL, v10))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0LL, 1LL, v10);
    }

    uint64_t v44 = v15[12];
    int v45 = &v8[v44];
    uint64_t v46 = &v9[v44];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v44], 1LL, v10))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v45, v46, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v45, 0LL, 1LL, v10);
    }

    v8[v15[13]] = v9[v15[13]];
    uint64_t v48 = v15[14];
    uint64_t v49 = &v8[v48];
    int v50 = &v9[v48];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v48], 1LL, v10))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v50, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v49, 0LL, 1LL, v10);
    }

    uint64_t v52 = v15[15];
    uint64_t v53 = &v8[v52];
    uint64_t v54 = &v9[v52];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v52], 1LL, v10))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v53, 0LL, 1LL, v10);
    }

    uint64_t v56 = v15[16];
    int v57 = &v8[v56];
    uint64_t v58 = &v9[v56];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v56], 1LL, v10))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v57, v58, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v57, 0LL, 1LL, v10);
    }

    uint64_t v60 = v15[17];
    uint64_t v61 = &v8[v60];
    int v62 = &v9[v60];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v12)(&v9[v60], 1LL, v10))
    {
      uint64_t v63 = sub_100183098(&qword_1006457E8);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v61, v62, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v61, 0LL, 1LL, v10);
    }

    uint64_t v64 = v15[18];
    uint64_t v65 = &v8[v64];
    uint64_t v66 = &v9[v64];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v66[4];
    v8[v15[19]] = v9[v15[19]];
    uint64_t v67 = v15[20];
    int v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = (const char *)*((void *)v69 + 1);
    *(void *)int v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v15[21];
    uint64_t v72 = &v8[v71];
    uint64_t v73 = &v9[v71];
    int v74 = (const char *)*((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = a3[7];
    *(_DWORD *)&v6[a3[6]] = *(_DWORD *)((char *)a2 + a3[6]);
    uint64_t v76 = (uint64_t *)&v6[v75];
    uint64_t v77 = *(uint64_t *)((char *)a2 + v75);
    unint64_t v78 = *(unint64_t *)((char *)a2 + v75 + 8);
    *(void *)&double v79 = swift_bridgeObjectRetain(v70).n128_u64[0];
    swift_bridgeObjectRetain(v74, v79);
    sub_10019BA8C(v77, v78);
    uint64_t *v76 = v77;
    v76[1] = v78;
    uint64_t v80 = a3[8];
    uint64_t v81 = a3[9];
    uint64_t v82 = *(void **)((char *)a2 + v80);
    *(void *)&v6[v80] = v82;
    v6[v81] = *((_BYTE *)a2 + v81);
    id v83 = v82;
  }

  return v6;
}

void sub_1002B2C5C(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  double v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  __n128 v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  uint64_t v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  uint64_t v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  uint64_t v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v4[v8[21] + 8], v21);
  sub_100189B20(*(uint64_t *)((char *)a1 + a2[7]), *(unint64_t *)((char *)a1 + a2[7] + 8));
}

const char **sub_1002B2F30(const char **a1, const char **a2, int *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  double v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  uint64_t v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  uint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  uint64_t v32 = &v7[v31];
  int v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  uint64_t v44 = &v7[v43];
  int v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  uint64_t v56 = &v7[v55];
  int v57 = &v8[v55];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  uint64_t v59 = v14[17];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v59], 1LL, v9))
  {
    uint64_t v62 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v60, v61, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v60, 0LL, 1LL, v9);
  }

  uint64_t v63 = v14[18];
  uint64_t v64 = &v7[v63];
  uint64_t v65 = &v8[v63];
  *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
  v64[4] = v65[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v66 = v14[20];
  uint64_t v67 = &v7[v66];
  int v68 = &v8[v66];
  int v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  uint64_t v70 = v14[21];
  uint64_t v71 = &v7[v70];
  uint64_t v72 = &v8[v70];
  uint64_t v73 = (const char *)*((void *)v72 + 1);
  *(void *)uint64_t v71 = *(void *)v72;
  *((void *)v71 + 1) = v73;
  uint64_t v74 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v75 = (uint64_t *)((char *)a1 + v74);
  uint64_t v76 = *(uint64_t *)((char *)a2 + v74);
  unint64_t v77 = *(unint64_t *)((char *)a2 + v74 + 8);
  *(void *)&double v78 = swift_bridgeObjectRetain(v69).n128_u64[0];
  swift_bridgeObjectRetain(v73, v78);
  sub_10019BA8C(v76, v77);
  *uint64_t v75 = v76;
  v75[1] = v77;
  uint64_t v79 = a3[8];
  uint64_t v80 = a3[9];
  uint64_t v81 = *(char **)((char *)a2 + v79);
  *(const char **)((char *)a1 + v79) = v81;
  *((_BYTE *)a1 + v80) = *((_BYTE *)a2 + v80);
  uint64_t v82 = v81;
  return a1;
}

const char **sub_1002B360C(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v120 = a3;
  uint64_t v122 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v10[v31];
  int v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v10[v43];
  int v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v10[v55];
  int v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  int v68 = &v10[v67];
  int v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  int v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (!v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
    goto LABEL_78;
  }

  if (v89)
  {
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  uint64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)uint64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  uint64_t v96 = &v10[v95];
  unint64_t v97 = &v11[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  double v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v120, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  uint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  *(_DWORD *)((char *)a1 + v121[6]) = *(_DWORD *)(v123 + v121[6]);
  uint64_t v108 = v121[7];
  uint64_t v109 = (uint64_t *)((char *)a1 + v108);
  int v110 = (uint64_t *)(v123 + v108);
  uint64_t v111 = *v110;
  unint64_t v112 = v110[1];
  sub_10019BA8C(*v110, v112);
  uint64_t v113 = *v109;
  unint64_t v114 = v109[1];
  *uint64_t v109 = v111;
  v109[1] = v112;
  sub_100189B20(v113, v114);
  uint64_t v115 = v121[8];
  uint64_t v116 = *(void **)((char *)a1 + v115);
  uint64_t v117 = *(char **)(v123 + v115);
  *(const char **)((char *)a1 + v115) = v117;
  int v118 = v117;

  *((_BYTE *)a1 + v121[9]) = *(_BYTE *)(v123 + v121[9]);
  return a1;
}

void *sub_1002B40A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v5 = a3[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v6[v13];
  int v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  int v22 = &v6[v21];
  int v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  uint64_t v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  int v34 = &v6[v33];
  int v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  uint64_t v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  uint64_t v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  int v46 = &v6[v45];
  int v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  uint64_t v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  uint64_t v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  int v58 = &v6[v57];
  int v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v61 = v12[18];
  uint64_t v62 = &v6[v61];
  uint64_t v63 = &v7[v61];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  uint64_t v64 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v64) = *(_OWORD *)((char *)a2 + v64);
  uint64_t v65 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((_BYTE *)a1 + v65) = *((_BYTE *)a2 + v65);
  return a1;
}

const char **sub_1002B4744(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v111 = a3;
  uint64_t v113 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  unint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v111, v113).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  uint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = v112[7];
  *(_DWORD *)((char *)a1 + v112[6]) = *(_DWORD *)(v114 + v112[6]);
  uint64_t v106 = *(uint64_t *)((char *)a1 + v105);
  unint64_t v107 = *(unint64_t *)((char *)a1 + v105 + 8);
  *(_OWORD *)((char *)a1 + v105) = *(_OWORD *)(v114 + v105);
  sub_100189B20(v106, v107);
  uint64_t v108 = v112[8];
  uint64_t v109 = *(void **)((char *)a1 + v108);
  *(const char **)((char *)a1 + v108) = *(const char **)(v114 + v108);

  *((_BYTE *)a1 + v112[9]) = *(_BYTE *)(v114 + v112[9]);
  return a1;
}

uint64_t sub_1002B519C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B51A8);
}

uint64_t sub_1002B51AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B51B8);
}

uint64_t sub_1002B51BC(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
    void v4[3] = &unk_1004D2CA8;
    void v4[4] = "\b";
    void v4[5] = &unk_1004D2BB0;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1002B5260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B526C);
}

uint64_t sub_1002B5270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B527C);
}

uint64_t sub_1002B5280(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = &unk_1004D2D20;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1002B5304()
{
  uint64_t v1 = type metadata accessor for SFPlatform(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SFPlatform.visionOS.getter(v3);
  char v6 = static SFPlatform.isPlatform(_:)(v5);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  uint64_t v8 = v7(v5, v1);
  if ((v6 & 1) != 0) {
    return 1LL;
  }
  static SFPlatform.macOS.getter(v8);
  char v10 = static SFPlatform.isPlatform(_:)(v5);
  v7(v5, v1);
  if ((v10 & 1) != 0) {
    return 0LL;
  }
  else {
    return *(unsigned __int8 *)(v0 + 24);
  }
}

uint64_t sub_1002B53C8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002B5458, static AirDropActor.shared, 0LL);
}

void sub_1002B5458(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  uint64_t v7 = *(void *)(v6 + 16);
  __n128 v8 = swift_bridgeObjectRelease((const char *)v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v2, v5, v4, v8);
  uint64_t v11 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v12 = *(void *)(v1 + 32);
  if (!v7)
  {
    (*(void (**)(void, void))(v11 + 8))(*(void *)(v1 + 48), *(void *)(v1 + 32));
    goto LABEL_14;
  }

  uint64_t v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
  uint64_t v14 = *(void *)(v13 + 16);
  __n128 v15 = swift_bridgeObjectRelease((const char *)v13);
  (*(void (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v15);
  if (v14)
  {
LABEL_14:
    uint64_t v20 = 0LL;
    goto LABEL_15;
  }

  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = sub_10026BDFC();
  uint64_t v18 = *(const char **)(v16 + 16);
  *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
  *(void *)&double v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
  uint64_t v20 = *(void *)(v16 + 16);
  if (!v20)
  {
LABEL_15:
    swift_task_dealloc(*(void *)(v1 + 48));
    (*(void (**)(uint64_t))(v1 + 8))(v20);
    return;
  }

  uint64_t v21 = v20 & 0xFFFFFFFFFFFFFF8LL;
  if (!((unint64_t)v20 >> 62))
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v23 = swift_bridgeObjectRetain((const char *)*(void *)(v16 + 16), v19).n128_u64[0];
    if (v22 == 1) {
      goto LABEL_6;
    }
LABEL_23:
    unint64_t v27 = swift_bridgeObjectRelease((const char *)v20, *(double *)&v23).n128_u64[0];
LABEL_24:
    uint64_t v20 = *(void *)(v16 + 16);
    if (v20)
    {
      if ((unint64_t)v20 >> 62)
      {
        if (v20 >= 0) {
          uint64_t v39 = v20 & 0xFFFFFFFFFFFFFF8LL;
        }
        else {
          uint64_t v39 = *(void *)(v16 + 16);
        }
        swift_bridgeObjectRetain(*(const char **)(v16 + 16), *(double *)&v27);
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter(v39);
        swift_bridgeObjectRelease((const char *)v20);
      }

      else
      {
        uint64_t v38 = *(void *)((v20 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      }

      uint64_t v20 = v38 != 0;
    }

    goto LABEL_15;
  }

  if (v20 >= 0) {
    uint64_t v35 = v20 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    uint64_t v35 = *(void *)(v16 + 16);
  }
  swift_bridgeObjectRetain_n(*(void *)(v16 + 16), 2LL);
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  unint64_t v23 = swift_bridgeObjectRelease((const char *)v20).n128_u64[0];
  if (v36 != 1) {
    goto LABEL_23;
  }
  uint64_t v21 = v20 & 0xFFFFFFFFFFFFFF8LL;
  swift_bridgeObjectRetain((const char *)v20, *(double *)&v23);
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter(v35);
  unint64_t v23 = swift_bridgeObjectRelease((const char *)v20).n128_u64[0];
  if (!v37) {
    goto LABEL_23;
  }
LABEL_6:
  if ((v20 & 0xC000000000000001LL) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v20);
LABEL_9:
    uint64_t v25 = v24;
    id v26 = objc_msgSend(v24, "bundleIdentifier", swift_bridgeObjectRelease((const char *)v20).n128_f64[0]);

    if (v26)
    {
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      uint64_t v30 = v29;

      v31._countAndFlagsBits = 0x6C7070612E6D6F63LL;
      v31._object = (void *)0xEA00000000002E65LL;
      Swift::Bool v32 = String.hasPrefix(_:)(v31);
      if (v28 == 0xD000000000000014LL && v30 == (const char *)0x8000000100508E60LL)
      {
        unint64_t v27 = swift_bridgeObjectRelease((const char *)0x8000000100508E60LL).n128_u64[0];
        char v33 = 0;
      }

      else
      {
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, 0xD000000000000014LL, 0x8000000100508E60LL, 0LL);
        unint64_t v27 = swift_bridgeObjectRelease(v30).n128_u64[0];
        char v33 = v32 & (v34 ^ 1);
      }

      *(_BYTE *)(*(void *)(v1 + 24) + 24LL) = v33 & 1;
    }

    goto LABEL_24;
  }

  if (*(void *)(v21 + 16))
  {
    id v24 = *(id *)(v20 + 32);
    goto LABEL_9;
  }

  __break(1u);
}

uint64_t sub_1002B5708@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for SFPlatform(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = swift_retain(v4);
  static SFPlatform.visionOS.getter(v12);
  char v13 = static SFPlatform.isPlatform(_:)(v11);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v15 = v14(v11, v8);
  if ((v13 & 1) == 0)
  {
    static SFPlatform.macOS.getter(v15);
    static SFPlatform.isPlatform(_:)(v11);
    v14(v11, v8);
  }

  swift_release(v4);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_100266ABC(a1, a2, a3);
}

void sub_1002B582C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v6 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFPlatform(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(v3 + 16);
  if (!v14)
  {
    uint64_t v15 = 0LL;
    goto LABEL_10;
  }

  if ((unint64_t)v14 >> 62)
  {
    if (v14 >= 0) {
      uint64_t v26 = v14 & 0xFFFFFFFFFFFFFF8LL;
    }
    else {
      uint64_t v26 = *(void *)(v3 + 16);
    }
    swift_bridgeObjectRetain(*(const char **)(v3 + 16));
    uint64_t v15 = (void *)_CocoaArrayWrapper.endIndex.getter(v26);
    if (v15) {
      goto LABEL_4;
    }
  }

  else
  {
    uint64_t v15 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    *(void *)&double v16 = swift_bridgeObjectRetain((const char *)*(void *)(v3 + 16)).n128_u64[0];
    if (v15)
    {
LABEL_4:
      if ((v14 & 0xC000000000000001LL) != 0)
      {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v14);
      }

      else
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
        {
          __break(1u);
          return;
        }

        id v17 = *(id *)(v14 + 32);
      }

      uint64_t v15 = v17;
    }
  }

  swift_bridgeObjectRelease((const char *)v14, v16);
LABEL_10:
  static SFPlatform.visionOS.getter(v11);
  char v18 = static SFPlatform.isPlatform(_:)(v13);
  double v19 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v20 = v19(v13, v9);
  if ((v18 & 1) != 0)
  {
    int v21 = 1;
  }

  else
  {
    static SFPlatform.macOS.getter(v20);
    char v22 = static SFPlatform.isPlatform(_:)(v13);
    v19(v13, v9);
    if ((v22 & 1) != 0) {
      int v21 = 0;
    }
    else {
      int v21 = *(unsigned __int8 *)(v3 + 24);
    }
  }

  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v23 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v8, a2, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v8, 0LL, 1LL, v23);
  id v25 = v15;
  sub_10026664C(v28, v15, v21, a3);

  sub_100187334((uint64_t)v8);
}

uint64_t sub_1002B5A4C()
{
  return swift_deallocClassInstance(v0, 25LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerGenericFiles()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary35SDAirDropContentHandlerGenericFiles);
}

BOOL sub_1002B5A90()
{
  uint64_t v0 = type metadata accessor for SFPlatform(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static SFPlatform.macOS.getter(v2);
  char v5 = static SFPlatform.isPlatform(_:)(v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return (v5 & 1) == 0;
}

uint64_t sub_1002B5B18()
{
  return sub_1002B5304() & 1;
}

uint64_t sub_1002B5B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  uint64_t result = swift_allocObject(v2, 25LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(result + 24) = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1002B5B74(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10064C4AC);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001C97A0;
  return sub_1002B53C8(a1);
}

uint64_t sub_1002B5BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_1002B5708(a1, a2, a3);
}

void sub_1002B5BE4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

BOOL sub_1002B5C04(uint64_t a1)
{
  return *(void *)(a1 + 16) > 1uLL;
}

uint64_t sub_1002B5C14(uint64_t a1)
{
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 24) = static AirDropActor.shared;
  return swift_task_switch(sub_1002B5C80, v2, 0LL);
}

uint64_t sub_1002B5C80()
{
  v0[4] = [objc_allocWithZone((Class)type metadata accessor for SDAirDropMoveToAppShareSheet()) init];
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_100655B50 + dword_100655B50);
  uint64_t v1 = (void *)swift_task_alloc(unk_100655B54);
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002B5CFC;
  return v3(v0[2]);
}

uint64_t sub_1002B5CFC(char a1)
{
  uint64_t v4 = *(void *)(*v2 + 40);
  uint64_t v5 = *v2;
  *(void *)(v5 + 48) = v1;
  swift_task_dealloc(v4);
  if (v1) {
    return swift_task_switch(sub_1002B5D84, *(void *)(v5 + 24), 0LL);
  }

  return (*(uint64_t (**)(void))(v5 + 8))(a1 & 1);
}

uint64_t sub_1002B5D84()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerNotes()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary28SDAirDropContentHandlerNotes);
}

uint64_t sub_1002B5DDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerNotes();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_1002B5E14(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 1163153230LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xE400000000000000LL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xE400000000000000LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 1163153230LL;
  v10._object = (void *)0xE400000000000000LL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE400000000000000LL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    int v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002B6048(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (a2) {
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, (char *)&type metadata for Any + 8);
  }
  else {
    uint64_t v6 = 0LL;
  }
  swift_retain(v4);
  id v7 = a3;
  v5(v6, a3);
  swift_release(v4);

  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1002B60CC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064C698);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064C698);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_1002B615C(int a1, uint64_t a2, uint64_t a3, dispatch_group_t group)
{
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1006440F0 != -1) {
      swift_once(&qword_1006440F0, sub_1002B60CC);
    }
    id v7 = (uint64_t *)(a3 + 16);
    uint64_t v8 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v8, (uint64_t)qword_10064C698);
    swift_errorRetain(a2);
    uint64_t v9 = swift_errorRetain(a2);
    Swift::String v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      Swift::String v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      Swift::String v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)Swift::String v12 = 138412290;
      swift_errorRetain(a2);
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(a2);
      uint64_t v17 = v14;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v12 + 4, v12 + 12);
      uint64_t *v13 = v14;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "MAEIssueDCRT failed with %@", v12, 0xCu);
      uint64_t v15 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v13, 1LL, v15);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    swift_beginAccess(v7, &v17, 1LL, 0LL);
    uint64_t v16 = *v7;
    *id v7 = a2;
    swift_errorRelease(v16);
  }

  dispatch_group_leave(group);
}

uint64_t sub_1002B6344(uint64_t a1)
{
  uint64_t v2 = (void *)((uint64_t (*)(void))_convertErrorToNSError(_:))();
  uint64_t v3 = MobileActivationErrorDomain;
  char HasDomainAndErrorCode = mobileactivationErrorHasDomainAndErrorCode(v2, MobileActivationErrorDomain, -17LL);

  if ((HasDomainAndErrorCode & 1) != 0) {
    return 1LL;
  }
  uint64_t v5 = (void *)_convertErrorToNSError(_:)(a1);
  char v6 = mobileactivationErrorHasDomainAndErrorCode(v5, v3, -18LL);

  if ((v6 & 1) != 0) {
    return 1LL;
  }
  id v7 = (void *)_convertErrorToNSError(_:)(a1);
  char v8 = mobileactivationErrorHasDomainAndErrorCode(v7, v3, -19LL);

  if ((v8 & 1) != 0) {
    return 1LL;
  }
  uint64_t v9 = (void *)_convertErrorToNSError(_:)(a1);
  char v10 = mobileactivationErrorHasDomainAndErrorCode(v9, v3, -20LL);

  if ((v10 & 1) != 0) {
    return 1LL;
  }
  Swift::String v13 = (void *)_convertErrorToNSError(_:)(a1);
  uint64_t v11 = mobileactivationErrorHasDomainAndErrorCode(v13, v3, -21LL);

  return v11;
}

char *sub_1002B644C()
{
  uint64_t v0 = type metadata accessor for DispatchTime(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  char v6 = (char *)&v46 - v5;
  uint64_t v7 = swift_allocObject(&unk_1005D89A0, 24LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  char v8 = (uint64_t *)(v7 + 16);
  uint64_t v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  uint64_t v10 = swift_allocObject(&unk_1005D89C8, 32LL, 7LL);
  *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_1002B6C8C;
  uint64_t v54 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1002B6048;
  aBlock[3] = &unk_1005D89E0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain(v7);
  Swift::String v12 = v9;
  swift_retain(v10);
  MAEIssueDCRTWithCompletion(0LL, 0LL, v11);
  _Block_release(v11);
  uint64_t v13 = v54;
  swift_release(v10);
  uint64_t v14 = swift_release(v13);
  static DispatchTime.now()(v14);
  + infix(_:_:)(v4, 15.0);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15(v4, v0);
  uint64_t v16 = OS_dispatch_group.wait(timeout:)(v6) & 1;
  v15(v6, v0);
  if ((static DispatchTimeoutResult.== infix(_:_:)(v16, 1LL) & 1) == 0)
  {
    swift_beginAccess(v8, aBlock, 0LL, 0LL);
    if (*v8) {
      goto LABEL_19;
    }
    id v51 = 0LL;
    id v22 = (id)MAECopyDCRTWithOptions(0LL, &v51);
    if (v22)
    {
      uint64_t v23 = v22;
      char v6 = (char *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
      unint64_t v25 = v24;

      uint64_t v19 = v51;
      if (!v51) {
        goto LABEL_17;
      }
    }

    else
    {
      char v6 = 0LL;
      unint64_t v25 = 0xF000000000000000LL;
      uint64_t v19 = v51;
      if (!v51) {
        goto LABEL_17;
      }
    }

    uint64_t v26 = qword_1006440F0;
    id v27 = v19;
    if (v26 != -1) {
      swift_once(&qword_1006440F0, sub_1002B60CC);
    }
    uint64_t v28 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v28, (uint64_t)qword_10064C698);
    id v29 = v27;
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.error.getter(v30);
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc(12LL, -1LL);
      int v48 = v32;
      char v34 = (uint8_t *)v33;
      uint64_t v47 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v49 = v30;
      int v50 = v34;
      *(_DWORD *)char v34 = 138412290;
      id v51 = v29;
      uint64_t v46 = &v52;
      id v29 = v29;
      uint64_t v35 = v49;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, v46, v34 + 4, v34 + 12);
      uint64_t v36 = v47;
      *uint64_t v47 = v19;

      _os_log_impl( (void *)&_mh_execute_header,  v35,  (os_log_type_t)v48,  "Failed to MAECopyDCRT after MAEIssueDCRT, error: %@",  v50,  0xCu);
      uint64_t v37 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v36, 1LL, v37);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v50, -1LL, -1LL);
    }

    else
    {

      uint64_t v35 = (os_log_s *)v29;
    }

LABEL_17:
    if (v25 >> 60 != 15)
    {
      swift_release(v7);

      return v6;
    }

    goto LABEL_18;
  }

  if (qword_1006440F0 != -1) {
    swift_once(&qword_1006440F0, sub_1002B60CC);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_10064C698);
  uint64_t v19 = (void *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.error.getter(v19);
  if (os_log_type_enabled((os_log_t)v19, v20))
  {
    int v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v19, v20, "Timing out for _MAEIssueDCRT", v21, 2u);
    swift_slowDealloc(v21, -1LL, -1LL);
  }

char *sub_1002B69D0()
{
  id v16 = 0LL;
  id v0 = (id)MAECopyDCRTWithOptions(0LL, &v16);
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = (char *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v0);
    unint64_t v4 = v3;

    uint64_t v5 = v16;
    if (!v16) {
      goto LABEL_11;
    }
  }

  else
  {
    uint64_t v2 = 0LL;
    unint64_t v4 = 0xF000000000000000LL;
    uint64_t v5 = v16;
    if (!v16) {
      goto LABEL_11;
    }
  }

  uint64_t v6 = qword_1006440F0;
  id v7 = v5;
  if (v6 != -1) {
    swift_once(&qword_1006440F0, sub_1002B60CC);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v8, (uint64_t)qword_10064C698);
  id v9 = v7;
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.error.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    Swift::String v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)Swift::String v12 = 138412290;
    id v16 = v9;
    id v9 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v12 + 4, v12 + 12);
    *uint64_t v15 = v5;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to MAECopyDCRT, error: %@", v12, 0xCu);
    uint64_t v13 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v15, 1LL, v13);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {

    uint64_t v10 = (os_log_s *)v9;
  }

LABEL_11:
  if (v4 >> 60 == 15) {
    uint64_t v2 = sub_1002B644C();
  }

  return v2;
}

uint64_t sub_1002B6C3C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002B6C60()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1002B6C8C(int a1, uint64_t a2)
{
}

uint64_t sub_1002B6C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002B6CA4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002B6CAC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain(a3);
  int64_t v12 = 0LL;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_19;
    }

    if (__OFADD__(v12++, 1LL)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    if (!v16)
    {
      int64_t v17 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_27;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = v12 + 2;
        if (v12 + 2 >= v10) {
          goto LABEL_27;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v12 + 3;
          if (v12 + 3 >= v10) {
            goto LABEL_27;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v12 + 4;
            if (v12 + 4 >= v10)
            {
LABEL_27:
              swift_release(a3);
              char v18 = 0;
              return v18 & 1;
            }

            unint64_t v16 = *(void *)(v6 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1LL)) {
                  goto LABEL_30;
                }
                if (v12 >= v10) {
                  goto LABEL_27;
                }
                unint64_t v16 = *(void *)(v6 + 8 * v12);
                ++v17;
                if (v16) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
      }

      int64_t v12 = v17;
    }

void sub_1002B6E4C(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    if (a3 < 0) {
      uint64_t v7 = a3;
    }
    else {
      uint64_t v7 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)a3);
    uint64_t v8 = __CocoaSet.makeIterator()(v7);
    uint64_t v9 = type metadata accessor for SDAirDropSendConnection(0LL);
    uint64_t v10 = sub_100183F14( &qword_10064A138,  type metadata accessor for SDAirDropSendConnection,  (uint64_t)&protocol conformance descriptor for NSObject);
    os_log_type_t v11 = Set.Iterator.init(_cocoa:)(v33, v8, v9, v10);
    uint64_t v5 = v33[0];
    uint64_t v31 = v33[1];
    uint64_t v12 = v33[2];
    int64_t v13 = v33[3];
    unint64_t v14 = v33[4];
  }

  else
  {
    uint64_t v15 = -1LL << *(_BYTE *)(a3 + 32);
    uint64_t v31 = a3 + 56;
    uint64_t v16 = ~v15;
    uint64_t v17 = -v15;
    if (v17 < 64) {
      uint64_t v18 = ~(-1LL << v17);
    }
    else {
      uint64_t v18 = -1LL;
    }
    unint64_t v14 = v18 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain((const char *)a3);
    uint64_t v12 = v16;
    int64_t v13 = 0LL;
  }

  int64_t v30 = (unint64_t)(v12 + 64) >> 6;
  if ((v5 & 0x8000000000000000LL) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  uint64_t v19 = __CocoaSet.Iterator.next()(v11);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v32 = v19;
    uint64_t v21 = type metadata accessor for SDAirDropSendConnection(0LL);
    swift_unknownObjectRetain(v20);
    swift_dynamicCast(&v34, &v32, (char *)&type metadata for Swift.AnyObject + 8, v21, 7LL);
    id v22 = v34;
    swift_unknownObjectRelease(v20);
    int64_t v23 = v13;
    uint64_t v24 = v14;
    while (v22)
    {
      id v34 = v22;
      char v28 = a1(&v34);

      if (v4 || (v28 & 1) != 0) {
        break;
      }
      int64_t v13 = v23;
      unint64_t v14 = v24;
      if (v5 < 0) {
        goto LABEL_11;
      }
LABEL_14:
      if (v14)
      {
        uint64_t v24 = (v14 - 1) & v14;
        unint64_t v25 = __clz(__rbit64(v14)) | (v13 << 6);
        int64_t v23 = v13;
      }

      else
      {
        int64_t v23 = v13 + 1;
        if (__OFADD__(v13, 1LL))
        {
          __break(1u);
          return;
        }

        if (v23 >= v30) {
          break;
        }
        unint64_t v26 = *(void *)(v31 + 8 * v23);
        if (!v26)
        {
          int64_t v27 = v13 + 2;
          if (v13 + 2 >= v30) {
            break;
          }
          unint64_t v26 = *(void *)(v31 + 8 * v27);
          if (v26) {
            goto LABEL_25;
          }
          int64_t v27 = v13 + 3;
          if (v13 + 3 >= v30) {
            break;
          }
          unint64_t v26 = *(void *)(v31 + 8 * v27);
          if (v26) {
            goto LABEL_25;
          }
          int64_t v27 = v13 + 4;
          if (v13 + 4 >= v30) {
            break;
          }
          unint64_t v26 = *(void *)(v31 + 8 * v27);
          if (v26)
          {
LABEL_25:
            int64_t v23 = v27;
          }

          else
          {
            int64_t v23 = v13 + 5;
            if (v13 + 5 >= v30) {
              break;
            }
            unint64_t v26 = *(void *)(v31 + 8 * v23);
            if (!v26)
            {
              int64_t v29 = v13 + 6;
              while (v30 != v29)
              {
                unint64_t v26 = *(void *)(v31 + 8 * v29++);
                if (v26)
                {
                  int64_t v23 = v29 - 1;
                  goto LABEL_26;
                }
              }

              break;
            }
          }
        }

uint64_t sub_1002B715C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064C6B0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064C6B0);
  if (qword_100643FC8 != -1) {
    swift_once(&qword_100643FC8, sub_10023A3CC);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002B71EC()
{
  uint64_t v54 = sub_100183098(&qword_10064C8B8);
  __chkstk_darwin(v54);
  id v51 = (char *)&v40 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v1 = sub_100183098(&qword_10064C8C0);
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1);
  int v50 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = type metadata accessor for SFTempPairingSenderStateUpdate(0LL);
  __chkstk_darwin(v49);
  int v48 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = sub_100183098(&qword_10064C8C8);
  __chkstk_darwin(v47);
  uint64_t v43 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = sub_100183098(&qword_10064C8D0);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  unint64_t v42 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = type metadata accessor for SFTempPairingStateUpdate(0LL);
  __chkstk_darwin(v41);
  uint64_t v40 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v11);
  int64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v17 = sub_100237A04();
  static DispatchQoS.userInitiated.getter(v17);
  uint64_t v55 = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v19 = sub_100183098(&qword_100650E60);
  uint64_t v20 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v55, v19, v20, v11, v18);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v7);
  uint64_t v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD00000000000001ELL,  0x8000000100508FD0LL,  v16,  v13,  v10,  0LL);
  uint64_t v22 = v45;
  *(void *)(v45 + swift_unknownObjectWeakDestroy(v0 + 16) = v21;
  *(void *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server) = 0LL;
  *(void *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client) = 0LL;
  int64_t v23 = v40;
  SFTempPairingStateUpdate.init()(v21);
  uint64_t v24 = sub_100183098(&qword_10064C8D8);
  swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  uint64_t v25 = CurrentValueSubject.init(_:)(v23);
  *(void *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdateSequence) = v25;
  uint64_t v55 = (void *)v25;
  uint64_t v26 = sub_1001CD538( &qword_10064C8E0,  &qword_10064C8D8,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  int64_t v27 = v43;
  Publisher<>.values.getter(v24, v26);
  uint64_t v28 = sub_1001CD538( &qword_10064C8E8,  &qword_10064C8C8,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  int64_t v29 = v42;
  SFNoThrowAsyncSequence.init<A>(_:)(v27, v41, v47, v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))( v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdates,  v29,  v46);
  uint64_t v31 = v48;
  SFTempPairingSenderStateUpdate.init()(v30);
  uint64_t v32 = sub_100183098(&qword_10064C8F0);
  swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
  uint64_t v33 = CurrentValueSubject.init(_:)(v31);
  *(void *)(v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence) = v33;
  uint64_t v55 = (void *)v33;
  uint64_t v34 = sub_1001CD538( &qword_10064C8F8,  &qword_10064C8F0,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  uint64_t v35 = v51;
  Publisher<>.values.getter(v32, v34);
  uint64_t v36 = sub_1001CD538( &qword_10064C900,  &qword_10064C8B8,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  uint64_t v37 = v50;
  SFNoThrowAsyncSequence.init<A>(_:)(v35, v49, v54, v36);
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))( v22 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates,  v37,  v53);
  id v38 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  [v38 addObserver:v22 selector:"handleRapportIdentitiesChanged" name:off_100643AF8 object:0];

  return v22;
}

void sub_1002B7730(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for SFAirDropUserDefaults(0LL, a2);
  uint64_t v4 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v5 = SFAirDropUserDefaults.askToAirDropEnabled.getter();

  if ((v5 & 1) != 0)
  {
    uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client;
    if (!*(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client))
    {
      uint64_t v14 = *(void **)(v3 + 16);
      id v15 = objc_allocWithZone((Class)type metadata accessor for SDTempPairingClient(0LL));
      id v16 = sub_1002922E4(v14);
      unint64_t v17 = *(void **)(v3 + v6);
      *(void *)(v3 + v6) = v16;
      oslog = (os_log_s *)v16;

      uint64_t v18 = swift_allocObject(&unk_1005D8A18, 24LL, 7LL);
      swift_weakInit(v18 + 16);
      uint64_t v19 = swift_allocObject(&unk_1005D8A40, 24LL, 7LL);
      swift_unknownObjectWeakInit(v19 + 16, oslog);
      uint64_t v20 = swift_allocObject(&unk_1005D8A68, 32LL, 7LL);
      *(void *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = v18;
      *(void *)(v20 + 24) = v19;
      uint64_t v21 = (void (**)())((char *)oslog + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      uint64_t v23 = *(void *)((char *)oslog + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged);
      uint64_t v22 = *(void *)((char *)oslog + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_objectChanged + 8);
      *uint64_t v21 = sub_1002B8AEC;
      v21[1] = (void (*)())v20;
      sub_100224FF8(v23, v22);
      sub_100292604();
      sub_1002B82B4((uint64_t)oslog);
      goto LABEL_13;
    }

    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_10064C6B0);
    oslog = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      uint64_t v11 = "Attempted to start browsing but already browsing";
LABEL_11:
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, v11, v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }
  }

  else
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_10064C6B0);
    oslog = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      uint64_t v11 = "Ask to AirDrop not enabled";
      goto LABEL_11;
    }
  }

void sub_1002B7998(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = a2 + 16;
    swift_beginAccess(v6, &v10, 0LL, 0LL);
    uint64_t v8 = swift_unknownObjectWeakLoadStrong(v6, v7);
    if (v8)
    {
      os_log_type_t v9 = (void *)v8;
      sub_1002B82B4(v8);
      swift_release(v5);
    }

    else
    {
      swift_release(v5);
    }
  }

void sub_1002B7A28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  type metadata accessor for SFAirDropUserDefaults(0LL, a2);
  uint64_t v4 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v5 = SFAirDropUserDefaults.askToAirDropEnabled.getter();

  if ((v5 & 1) == 0)
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_10064C6B0);
    oslog = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v9)) {
      goto LABEL_12;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    uint64_t v11 = "Ask to AirDrop not enabled";
    goto LABEL_11;
  }

  uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server;
  if (*(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server))
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_10064C6B0);
    oslog = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(oslog, v9)) {
      goto LABEL_12;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    uint64_t v11 = "Attempted to start advertising but already advertising";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, oslog, v9, v11, v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
LABEL_12:

    return;
  }

  uint64_t v14 = (const char *)sub_1002B88A0();
  id v16 = v15;
  unint64_t v17 = *(void **)(v3 + 16);
  uint64_t v18 = type metadata accessor for SDTempPairingServer();
  swift_allocObject(v18, 80LL, 7LL);
  uint64_t v19 = sub_1003CEDA8(v14, v16, v17);
  uint64_t v20 = *(void *)(v3 + v6);
  *(void *)(v3 + v6) = v19;
  swift_release(v20);
  uint64_t v21 = *(void *)(v3 + v6);
  if (v21)
  {
    uint64_t v22 = swift_allocObject(&unk_1005D8A18, 24LL, 7LL);
    swift_weakInit(v22 + 16);
    uint64_t v23 = *(void *)(v21 + 24);
    uint64_t v24 = *(void *)(v21 + 32);
    *(void *)(v21 + 24) = sub_1002B8AF4;
    *(void *)(v21 + 32) = v22;
    sub_100224FF8(v23, v24);
    uint64_t v25 = *(void *)(v3 + v6);
    if (v25)
    {
      swift_retain(*(void *)(v3 + v6));
      sub_1003CE910();
      swift_release(v25);
    }
  }

uint64_t sub_1002B7E4C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v1);
  if (result)
  {
    uint64_t v3 = result;
    sub_1002B8098();
    return swift_release(v3);
  }

  return result;
}

void sub_1002B7EA0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_1002B88A0();
    char v5 = v4;
    sub_100293AF4((uint64_t)v3, v4);

    swift_bridgeObjectRelease(v5);
  }

  else
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064C6B0);
    oslog = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      os_log_type_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Attempting to connect while not browsing.", v9, 2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }
  }

void sub_1002B7FA8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    oslog = v1;
    sub_100294364();
  }

  else
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064C6B0);
    oslog = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      char v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Attempting to disconnect while not browsing.", v5, 2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }
  }
}

uint64_t sub_1002B8098()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_10064C8B8);
  __chkstk_darwin(v2);
  os_log_type_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_10064C8C0);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFTempPairingSenderStateUpdate(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence);
  LOBYTE(v26[0]) = 1;
  swift_retain(v12);
  CurrentValueSubject.send(completion:)(v26);
  swift_release(v12);
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server) = 0LL;
  uint64_t v14 = swift_release(v13);
  SFTempPairingSenderStateUpdate.init()(v14);
  uint64_t v15 = sub_100183098(&qword_10064C8F0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  uint64_t v16 = CurrentValueSubject.init(_:)(v10);
  uint64_t v17 = *(void *)(v1 + v11);
  *(void *)(v1 + v11) = v16;
  swift_release(v17);
  v26[0] = *(void *)(v1 + v11);
  uint64_t v18 = sub_1001CD538( &qword_10064C8F8,  &qword_10064C8F0,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v15, v18);
  uint64_t v19 = sub_1001CD538( &qword_10064C900,  &qword_10064C8B8,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  SFNoThrowAsyncSequence.init<A>(_:)(v4, v8, v2, v19);
  uint64_t v20 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  __n128 v21 = swift_beginAccess(v20, v26, 33LL, 0LL);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v24 + 40))(v20, v7, v25, v21);
  return swift_endAccess(v26);
}

uint64_t sub_1002B82B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFTempPairingStateUpdate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v34 - v13;
  SFTempPairingStateUpdate.init()(v12);
  sub_100291DC4();
  SFTempPairingStateUpdate.nearbyDeviceNames.setter();
  sub_1002985A8();
  SFTempPairingStateUpdate.connectedDeviceNames.setter();
  SFTempPairingStateUpdate.connectionState.setter(*(void *)(a1
                                                            + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_connectionState));
  uint64_t v15 = (const char **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier);
  *(void *)&double v16 = swift_beginAccess( a1 + OBJC_IVAR____TtC16DaemoniOSLibrary19SDTempPairingClient_nearbyDevicesByIdentifier,  v43,  0LL,  0LL).n128_u64[0];
  uint64_t v17 = *v15;
  LOBYTE(v42[0]) = 1;
  unint64_t v39 = v42;
  swift_bridgeObjectRetain(v17, v16);
  LOBYTE(a1) = sub_1002B6CAC((uint64_t (*)(char *))sub_1002B8884, (uint64_t)v38, (uint64_t)v17);
  __n128 v18 = swift_bridgeObjectRelease(v17);
  SFTempPairingStateUpdate.isNearbyDeviceClose.setter(a1 & 1, v18);
  id v19 = sub_1002B88A0();
  SFTempPairingStateUpdate.sharingName.setter(v19);
  if (qword_1006440F8 != -1) {
    swift_once(&qword_1006440F8, sub_1002B715C);
  }
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = sub_100186DE4(v20, (uint64_t)qword_10064C6B0);
  uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v37 = v2;
    uint64_t v24 = v5;
    uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v36 = swift_slowAlloc(32LL, -1LL);
    v42[0] = v36;
    *(_DWORD *)uint64_t v25 = 136315138;
    uint64_t v35 = v25 + 4;
    __n128 v26 = swift_beginAccess(v14, v41, 0LL, 0LL);
    int64_t v27 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
    v27(v11, v14, v4, v26);
    ((void (*)(char *, char *, uint64_t))v27)(v8, v11, v4);
    uint64_t v28 = String.init<A>(describing:)(v8, v4);
    unint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v4);
    uint64_t v40 = sub_10018CDB4(v28, v30, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v41, v35, v25 + 12);
    uint64_t v31 = (const char *)v30;
    uint64_t v5 = v24;
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Updating pairing state: %s", v25, 0xCu);
    uint64_t v32 = v36;
    swift_arrayDestroy(v36, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  swift_beginAccess(v14, v42, 0LL, 0LL);
  CurrentValueSubject.send(_:)(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

uint64_t sub_1002B8650()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdates;
  uint64_t v2 = sub_100183098(&qword_10064C8D0);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  uint64_t v4 = sub_100183098(&qword_10064C8C0);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_receiverStateUpdateSequence));
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdateSequence));
  swift_release(*(id *)((char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server));

  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_1002B8718()
{
  return type metadata accessor for SDTempPairingService(0LL);
}

uint64_t type metadata accessor for SDTempPairingService(uint64_t a1)
{
  uint64_t result = qword_10064C720;
  if (!qword_10064C720) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDTempPairingService);
  }
  return result;
}

void sub_1002B875C(uint64_t a1)
{
  v6[0] = (char *)&value witness table for () + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_1002B8838( 319LL,  &qword_10064C730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate);
  if (v3 <= 0x3F)
  {
    v6[2] = *(void *)(v2 - 8) + 64LL;
    sub_1002B8838( 319LL,  (unint64_t *)&unk_10064C738,  (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate);
    if (v5 <= 0x3F)
    {
      void v6[3] = *(void *)(v4 - 8) + 64LL;
      v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
      void v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      v6[6] = "\b";
      v6[7] = "\b";
      swift_updateClassMetadata2(a1, 256LL, 8LL, v6, a1 + 80);
    }
  }

void sub_1002B8838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = a3(255LL);
    unint64_t v6 = type metadata accessor for SFNoThrowAsyncSequence(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

BOOL sub_1002B8884(unsigned __int8 *a1)
{
  return ((*a1 ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

id sub_1002B88A0()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___SDStatusMonitor);
  id result = [v0 sharedMonitor];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result meCard];

    if (v3)
    {
      id v4 = [(id)objc_opt_self(CNContactFormatter) stringFromContact:v3 style:0];
      if (v4)
      {
        uint64_t v5 = v4;
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

        return (id)v6;
      }
    }

    id result = [v0 sharedMonitor];
    if (result)
    {
      uint64_t v7 = result;
      id v8 = [result computerName];

      if (v8)
      {
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      }

      else
      {
        if (qword_1006440F8 != -1) {
          swift_once(&qword_1006440F8, sub_1002B715C);
        }
        uint64_t v9 = type metadata accessor for Logger(0LL);
        uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064C6B0);
        uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
        os_log_type_t v12 = static os_log_type_t.error.getter(v11);
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Could not find local sharing name.", v13, 2u);
          swift_slowDealloc(v13, -1LL, -1LL);
        }

        return 0LL;
      }

      return (id)v6;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_1002B8A78()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002B8A9C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002B8AC0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1002B8AEC()
{
}

uint64_t sub_1002B8AF4()
{
  return sub_1002B7E4C(v0);
}

uint64_t type metadata accessor for SDAirDropPlatformHapticsManagerUnsupported()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary42SDAirDropPlatformHapticsManagerUnsupported);
}

uint64_t type metadata accessor for SDAirDropPlatformHapticsManagerFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary38SDAirDropPlatformHapticsManagerFactory);
}

void _sSo11SFUserAlertC16DaemoniOSLibraryE015credentialShareB09isPasskeyABSb_tFZ_0(char a1)
{
  id v2 = [objc_allocWithZone(SFUserAlert) init];
  NSString v3 = String._bridgeToObjectiveC()();
  id v5 = (id)SFLocalizedStringForKey(v3, v4);

  if (v5)
  {
    [v2 setTitle:v5];

    if ((a1 & 1) != 0)
    {
      NSString v6 = String._bridgeToObjectiveC()();
      NSString v7 = String._bridgeToObjectiveC()();
      NSString v8 = (id)SFLocalizedStringForKeyInStringsFileNamed(v6, v7);

      if (!v8) {
        goto LABEL_7;
      }
    }

    else
    {
      NSString v9 = String._bridgeToObjectiveC()();
      NSString v8 = (id)SFLocalizedStringForKey(v9, v10);

      if (!v8)
      {
LABEL_7:
        [v2 setMessage:v8];

        [v2 setHasDefaultButton:1];
        return;
      }
    }

    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    uint64_t v12 = v11;

    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    goto LABEL_7;
  }

  __break(1u);
}

void _sSo11SFUserAlertC16DaemoniOSLibraryE07carPlayB0AByFZ_0()
{
  id v0 = [objc_allocWithZone(SFUserAlert) init];
  NSString v1 = String._bridgeToObjectiveC()();
  id v3 = (id)SFLocalizedStringForKey(v1, v2);

  if (v3)
  {
    [v0 setTitle:v3];

    NSString v4 = String._bridgeToObjectiveC()();
    id v6 = (id)SFLocalizedStringForKey(v4, v5);

    [v0 setMessage:v6];
    [v0 setHasDefaultButton:1];
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002B8DC8()
{
  uint64_t v1 = type metadata accessor for KeyDataFormatStyle(0LL);
  uint64_t v36 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for IDSIdentifierFormatStyle(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = 0LL;
  unint64_t v47 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(126LL);
  uint64_t v38 = v46;
  unint64_t v39 = v47;
  v8._countAndFlagsBits = 0xD000000000000016LL;
  v8._object = (void *)0x8000000100509170LL;
  String.append(_:)(v8);
  sub_1001870BC((uint64_t)(v0 + 2), (uint64_t)&v46, &qword_1006462D8);
  sub_1001870BC((uint64_t)&v46, (uint64_t)v45, &qword_1006462D8);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v45,  &type metadata for String,  &protocol witness table for String);
  v9._countAndFlagsBits = 0x20644D202C22LL;
  v9._object = (void *)0xE600000000000000LL;
  String.append(_:)(v9);
  sub_1001870BC((uint64_t)(v0 + 6), (uint64_t)v45, &qword_1006462D8);
  sub_1001870BC((uint64_t)v45, (uint64_t)&v43, &qword_1006462D8);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v43,  &type metadata for String,  &protocol witness table for String);
  v10._countAndFlagsBits = 0x2720534449202CLL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  uint64_t v12 = v0[12];
  unint64_t v11 = v0[13];
  if (v11)
  {
    uint64_t v41 = v0[12];
    unint64_t v42 = v11;
    uint64_t v13 = swift_bridgeObjectRetain(v11);
    static FormatStyle<>.idsID.getter(v13);
    uint64_t v14 = sub_100183F14( &qword_10064CA58,  (uint64_t (*)(uint64_t))&type metadata accessor for IDSIdentifierFormatStyle,  (uint64_t)&protocol conformance descriptor for IDSIdentifierFormatStyle);
    Sequence.formatted<A>(_:)(&v43, v7, &type metadata for String, v4, &protocol witness table for String, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease(v42);
    uint64_t v12 = v43;
    uint64_t v15 = v44;
  }

  else
  {
    uint64_t v15 = 0LL;
  }

  uint64_t v43 = v12;
  uint64_t v44 = v15;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v43,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v15);
  v16._countAndFlagsBits = 0x204B5249202C27LL;
  v16._object = (void *)0xE700000000000000LL;
  String.append(_:)(v16);
  unint64_t v17 = v0[9];
  if (v17 >> 60 == 15)
  {
    uint64_t v18 = 0LL;
    uint64_t v19 = 0LL;
  }

  else
  {
    uint64_t v41 = v0[8];
    unint64_t v42 = v17;
    uint64_t v20 = sub_10019BA8C(v41, v17);
    static FormatStyle<>.irk.getter(v20);
    unint64_t v21 = sub_100284B00();
    uint64_t v22 = sub_100183F14( &qword_10064CA50,  (uint64_t (*)(uint64_t))&type metadata accessor for KeyDataFormatStyle,  (uint64_t)&protocol conformance descriptor for KeyDataFormatStyle);
    Sequence.formatted<A>(_:)(&v43, v3, &type metadata for Data, v1, v21, v22);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v1);
    sub_100189B20(v41, v42);
    uint64_t v18 = v43;
    uint64_t v19 = v44;
  }

  uint64_t v43 = v18;
  uint64_t v44 = v19;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v43,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v19);
  v23._countAndFlagsBits = 0x204B50202CLL;
  v23._object = (void *)0xE500000000000000LL;
  String.append(_:)(v23);
  unint64_t v24 = v0[11];
  if (v24 >> 60 == 15)
  {
    uint64_t v25 = 0LL;
    uint64_t v26 = 0LL;
  }

  else
  {
    uint64_t v41 = v0[10];
    unint64_t v42 = v24;
    uint64_t v27 = sub_10019BA8C(v41, v24);
    static FormatStyle<>.publicKey.getter(v27);
    unint64_t v28 = sub_100284B00();
    uint64_t v29 = sub_100183F14( &qword_10064CA50,  (uint64_t (*)(uint64_t))&type metadata accessor for KeyDataFormatStyle,  (uint64_t)&protocol conformance descriptor for KeyDataFormatStyle);
    Sequence.formatted<A>(_:)(&v43, v3, &type metadata for Data, v1, v28, v29);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v1);
    sub_100189B20(v41, v42);
    uint64_t v25 = v43;
    uint64_t v26 = v44;
  }

  uint64_t v43 = v25;
  uint64_t v44 = v26;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v43,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v26);
  v30._object = (void *)0x8000000100509190LL;
  v30._countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v30);
  sub_1001870BC((uint64_t)v0, (uint64_t)&v43, &qword_100645150);
  sub_1001870BC((uint64_t)&v43, (uint64_t)&v41, &qword_100645150);
  unint64_t v31 = sub_10021AAEC();
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v41, &type metadata for Data, v31);
  v32._countAndFlagsBits = 0xD000000000000017LL;
  v32._object = (void *)0x80000001005091B0LL;
  String.append(_:)(v32);
  sub_1001870BC((uint64_t)(v0 + 4), (uint64_t)&v41, &qword_100645150);
  sub_1001870BC((uint64_t)&v41, (uint64_t)v40, &qword_100645150);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v40, &type metadata for Data, v31);
  v33._object = (void *)0x80000001005091D0LL;
  v33._countAndFlagsBits = 0xD000000000000014LL;
  String.append(_:)(v33);
  sub_1001870BC((uint64_t)(v0 + 16), (uint64_t)v40, &qword_1006462D8);
  sub_1001870BC((uint64_t)v40, (uint64_t)v37, &qword_1006462D8);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v37,  &type metadata for String,  &protocol witness table for String);
  return v38;
}

Swift::Int sub_1002B92CC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002B9320(uint64_t a1)
{
  return String.hash(into:)(a1, 0xD000000000000010LL, 0x8000000100502DA0LL);
}

Swift::Int sub_1002B933C()
{
  return Hasher._finalize()();
}

uint64_t sub_1002B938C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v3._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v3._object = v4;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D15A0, v3);
  uint64_t result = swift_bridgeObjectRelease(v4);
  *a2 = v5 != 0;
  return result;
}

void sub_1002B93DC(void *a1@<X8>)
{
  *a1 = 0xD000000000000010LL;
  a1[1] = 0x8000000100502DA0LL;
}

unint64_t sub_1002B93FC()
{
  return 0xD000000000000010LL;
}

uint64_t sub_1002B9418@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D15D8, v3);
  uint64_t result = swift_bridgeObjectRelease(object);
  *a2 = v5 != 0;
  return result;
}

void sub_1002B946C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1002B9478(uint64_t a1)
{
  unint64_t v2 = sub_1002BA750();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002B94A0(uint64_t a1)
{
  unint64_t v2 = sub_1002BA750();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002B94C8(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0LL;
  unint64_t v9 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(39LL);
  v4._object = (void *)0x8000000100509140LL;
  v4._countAndFlagsBits = 0xD000000000000025LL;
  String.append(_:)(v4);
  v7[0] = a1;
  v7[1] = a2;
  unint64_t v5 = sub_10021AAEC();
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v7, &type metadata for Data, v5);
  return v8;
}

__n128 _s14descr1005D8CD9C16DiscoverResponseVwxx(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >> 60 != 15) {
    sub_100189B20(*(void *)a1, v2);
  }
  swift_bridgeObjectRelease(*(const char **)(a1 + 24));
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >> 60 != 15) {
    sub_100189B20(*(void *)(a1 + 32), v3);
  }
  swift_bridgeObjectRelease(*(const char **)(a1 + 56));
  unint64_t v4 = *(void *)(a1 + 72);
  if (v4 >> 60 != 15) {
    sub_100189B20(*(void *)(a1 + 64), v4);
  }
  unint64_t v5 = *(void *)(a1 + 88);
  if (v5 >> 60 != 15) {
    sub_100189B20(*(void *)(a1 + 80), v5);
  }
  *(void *)&double v6 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + 104)).n128_u64[0];
  return swift_bridgeObjectRelease((const char *)*(void *)(a1 + 136), v6);
}

uint64_t _s14descr1005D8CD9C16DiscoverResponseVwcp(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }

  else
  {
    uint64_t v5 = *a2;
    sub_10019BA8C(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }

  double v6 = (const char *)a2[3];
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[2];
  *(void *)(a1 + 24) = v6;
  NSString v7 = a2 + 4;
  unint64_t v8 = a2[5];
  swift_bridgeObjectRetain(v6);
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }

  else
  {
    uint64_t v9 = *(void *)v7;
    sub_10019BA8C(v9, v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v8;
  }

  Swift::String v10 = (const char *)a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v10;
  unint64_t v11 = a2 + 8;
  unint64_t v12 = a2[9];
  swift_bridgeObjectRetain(v10);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *v11;
  }

  else
  {
    uint64_t v13 = *(void *)v11;
    sub_10019BA8C(v13, v12);
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v12;
  }

  uint64_t v14 = a2 + 10;
  unint64_t v15 = a2[11];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v14;
  }

  else
  {
    uint64_t v16 = *v14;
    sub_10019BA8C(*v14, a2[11]);
    *(void *)(a1 + 80) = v16;
    *(void *)(a1 + 88) = v15;
  }

  unint64_t v17 = (const char *)a2[13];
  *(void *)(a1 + 96) = a2[12];
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = a2[14];
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  uint64_t v18 = a2[16];
  uint64_t v19 = (const char *)a2[17];
  *(void *)(a1 + 128) = v18;
  *(void *)(a1 + 136) = v19;
  *(void *)&double v20 = swift_bridgeObjectRetain(v17).n128_u64[0];
  swift_bridgeObjectRetain(v19, v20);
  return a1;
}

uint64_t _s14descr1005D8CD9C16DiscoverResponseVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15LL)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v5 = *(void *)a2;
      sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
      goto LABEL_8;
    }

    goto LABEL_6;
  }

  if (v4 >> 60 == 15)
  {
    sub_10019DC8C(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }

  uint64_t v6 = *(void *)a2;
  sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v4;
  sub_100189B20(v7, v8);
LABEL_8:
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v9 = *(const char **)(a2 + 24);
  Swift::String v10 = *(const char **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  *(void *)&double v11 = swift_bridgeObjectRetain(v9).n128_u64[0];
  swift_bridgeObjectRelease(v10, v11);
  unint64_t v12 = (uint64_t *)(a2 + 32);
  unint64_t v13 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 == 15LL)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      sub_10019BA8C(*v12, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v13;
      goto LABEL_15;
    }

    goto LABEL_13;
  }

  if (v13 >> 60 == 15)
  {
    sub_10019DC8C(a1 + 32);
LABEL_13:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    goto LABEL_15;
  }

  uint64_t v15 = *v12;
  sub_10019BA8C(*v12, *(void *)(a2 + 40));
  uint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v13;
  sub_100189B20(v16, v17);
LABEL_15:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v18 = *(const char **)(a2 + 56);
  uint64_t v19 = *(const char **)(a1 + 56);
  *(void *)(a1 + 56) = v18;
  *(void *)&double v20 = swift_bridgeObjectRetain(v18).n128_u64[0];
  swift_bridgeObjectRelease(v19, v20);
  unint64_t v21 = (uint64_t *)(a2 + 64);
  unint64_t v22 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >> 60 == 15LL)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v21;
      sub_10019BA8C(*v21, *(void *)(a2 + 72));
      *(void *)(a1 + 64) = v23;
      *(void *)(a1 + 72) = v22;
      goto LABEL_22;
    }

    goto LABEL_20;
  }

  if (v22 >> 60 == 15)
  {
    sub_10019DC8C(a1 + 64);
LABEL_20:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v21;
    goto LABEL_22;
  }

  uint64_t v24 = *v21;
  sub_10019BA8C(*v21, *(void *)(a2 + 72));
  uint64_t v25 = *(void *)(a1 + 64);
  unint64_t v26 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v24;
  *(void *)(a1 + 72) = v22;
  sub_100189B20(v25, v26);
LABEL_22:
  uint64_t v27 = (uint64_t *)(a2 + 80);
  unint64_t v28 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) >> 60 != 15LL)
  {
    if (v28 >> 60 != 15)
    {
      uint64_t v30 = *v27;
      sub_10019BA8C(*v27, *(void *)(a2 + 88));
      uint64_t v31 = *(void *)(a1 + 80);
      unint64_t v32 = *(void *)(a1 + 88);
      *(void *)(a1 + 80) = v30;
      *(void *)(a1 + 88) = v28;
      sub_100189B20(v31, v32);
      goto LABEL_29;
    }

    sub_10019DC8C(a1 + 80);
    goto LABEL_27;
  }

  if (v28 >> 60 == 15)
  {
LABEL_27:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v27;
    goto LABEL_29;
  }

  uint64_t v29 = *v27;
  sub_10019BA8C(*v27, *(void *)(a2 + 88));
  *(void *)(a1 + 80) = v29;
  *(void *)(a1 + 88) = v28;
LABEL_29:
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  Swift::String v33 = *(const char **)(a2 + 104);
  uint64_t v34 = *(const char **)(a1 + 104);
  *(void *)(a1 + 104) = v33;
  *(void *)&double v35 = swift_bridgeObjectRetain(v33).n128_u64[0];
  *(void *)&double v36 = swift_bridgeObjectRelease(v34, v35).n128_u64[0];
  uint64_t v37 = *(void *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(void *)(a1 + 112) = v37;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v38 = *(const char **)(a2 + 136);
  unint64_t v39 = *(const char **)(a1 + 136);
  *(void *)(a1 + 136) = v38;
  *(void *)&double v40 = swift_bridgeObjectRetain(v38, v36).n128_u64[0];
  swift_bridgeObjectRelease(v39, v40);
  return a1;
}

__n128 _s14descr1005D8CD9C16DiscoverResponseVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __int128 v2 = *(_OWORD *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  __int128 v6 = *(_OWORD *)(a2 + 96);
  __int128 v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s14descr1005D8CD9C16DiscoverResponseVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_10019DC8C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }

  uint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_100189B20(v6, v4);
LABEL_6:
  uint64_t v7 = *(void *)(a2 + 24);
  unint64_t v8 = *(const char **)(a1 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = (_OWORD *)(a2 + 32);
  unint64_t v10 = *(void *)(a1 + 40);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v9;
    goto LABEL_11;
  }

  unint64_t v11 = *(void *)(a2 + 40);
  if (v11 >> 60 == 15)
  {
    sub_10019DC8C(a1 + 32);
    goto LABEL_9;
  }

  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v9;
  *(void *)(a1 + 40) = v11;
  sub_100189B20(v12, v10);
LABEL_11:
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v14 = *(const char **)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v13;
  swift_bridgeObjectRelease(v14);
  uint64_t v15 = (_OWORD *)(a2 + 64);
  unint64_t v16 = *(void *)(a1 + 72);
  if (v16 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *v15;
    goto LABEL_16;
  }

  unint64_t v17 = *(void *)(a2 + 72);
  if (v17 >> 60 == 15)
  {
    sub_10019DC8C(a1 + 64);
    goto LABEL_14;
  }

  uint64_t v18 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)v15;
  *(void *)(a1 + 72) = v17;
  sub_100189B20(v18, v16);
LABEL_16:
  uint64_t v19 = (void *)(a2 + 80);
  unint64_t v20 = *(void *)(a1 + 88);
  if (v20 >> 60 != 15)
  {
    unint64_t v21 = *(void *)(a2 + 88);
    if (v21 >> 60 != 15)
    {
      uint64_t v22 = *(void *)(a1 + 80);
      *(void *)(a1 + 80) = *v19;
      *(void *)(a1 + 88) = v21;
      sub_100189B20(v22, v20);
      goto LABEL_21;
    }

    sub_10019DC8C(a1 + 80);
  }

  *(_OWORD *)(a1 + 80) = *(_OWORD *)v19;
LABEL_21:
  uint64_t v23 = *(void *)(a2 + 104);
  uint64_t v24 = *(const char **)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v23;
  *(void *)&double v25 = swift_bridgeObjectRelease(v24).n128_u64[0];
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  uint64_t v26 = *(void *)(a2 + 136);
  uint64_t v27 = *(const char **)(a1 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v26;
  swift_bridgeObjectRelease(v27, v25);
  return a1;
}

uint64_t _s14descr1005D8CD9C16DiscoverResponseVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr1005D8CD9C16DiscoverResponseVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 136) = 0LL;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 144) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 144) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }

  return result;
}

ValueMetadata *_s14descr1005D8CD9C16DiscoverResponseVMa()
{
  return &_s14descr1005D8CD9C16DiscoverResponseVN;
}

uint64_t sub_1002B9C9C(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }

  else
  {
    uint64_t v4 = *a2;
    sub_10019BA8C(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }

  return a1;
}

uint64_t *_s14descr1005D8CD9C15DiscoverRequestVwca(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_100189B20(v7, v8);
      return a1;
    }

    sub_10019DC8C((uint64_t)a1);
    goto LABEL_6;
  }

  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  uint64_t v5 = *(void *)a2;
  sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *_s14descr1005D8CD9C15DiscoverRequestVwta(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_100189B20(v6, v4);
      return a1;
    }

    sub_10019DC8C((uint64_t)a1);
  }

  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s14descr1005D8CD9C15DiscoverRequestVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr1005D8CD9C15DiscoverRequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = a2 - 12;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xC) {
      *(_BYTE *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0xC) {
      *(_BYTE *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0LL;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }

  return result;
}

ValueMetadata *_s14descr1005D8CD9C15DiscoverRequestVMa()
{
  return &_s14descr1005D8CD9C15DiscoverRequestVN;
}

uint64_t sub_1002B9EB4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_10064CA70);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_10019A708(a1, v10);
  unint64_t v12 = sub_1002BA750();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON,  &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON,  v12,  v10,  v11);
  v16[0] = a2;
  v16[1] = a3;
  unint64_t v13 = sub_10020C2A8();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v16, v14, v6, &type metadata for Data, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void *sub_1002B9FB8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __n128 result = sub_1002BA794(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }

  return result;
}

uint64_t sub_1002B9FE0(void *a1)
{
  return sub_1002B9EB4(a1, *v1, v1[1]);
}

uint64_t sub_1002B9FF8()
{
  return sub_1002B94C8(*v0, v0[1]);
}

uint64_t sub_1002BA000(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002BA03C + 4 * byte_1004D30A0[a1]))( 0xD000000000000014LL,  0x8000000100502E40LL);
}

uint64_t sub_1002BA03C()
{
  return v0 + 8;
}

uint64_t sub_1002BA0CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1002BA108 + 4 * byte_1004D30A9[a1]))( 0xD000000000000014LL,  0x8000000100502E40LL);
}

uint64_t sub_1002BA108()
{
  return v0 + 8;
}

void sub_1002BA198(char *a1)
{
}

Swift::Int sub_1002BA1A4()
{
  char v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_1003F00F0((uint64_t)v3, v1);
  return Hasher._finalize()();
}

void sub_1002BA1E8(uint64_t a1)
{
}

Swift::Int sub_1002BA1F0()
{
  char v1 = *v0;
  Hasher.init(_seed:)(v3);
  sub_1003F00F0((uint64_t)v3, v1);
  return Hasher._finalize()();
}

unint64_t sub_1002BA230@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1002BA8B8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002BA25C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002BA000(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002BA284()
{
  return sub_1002BA0CC(*v0);
}

unint64_t sub_1002BA28C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1002BA8B8(a1);
  *a2 = result;
  return result;
}

void sub_1002BA2B0(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1002BA2BC(uint64_t a1)
{
  unint64_t v2 = sub_1002BA70C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002BA2E4(uint64_t a1)
{
  unint64_t v2 = sub_1002BA70C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002BA30C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064CA60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_1002BA70C();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON,  &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON,  v11,  v9,  v10);
  uint64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = *(void *)(v3 + 24);
  v26[0] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v12, v13, v26, v5);
  if (!v2)
  {
    sub_1001870BC(v3, (uint64_t)v30, &qword_100645150);
    sub_1001870BC((uint64_t)v30, (uint64_t)v26, &qword_100645150);
    char v25 = 1;
    unint64_t v14 = sub_10020C2A8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    sub_1001870BC(v3 + 32, (uint64_t)v29, &qword_100645150);
    sub_1001870BC((uint64_t)v29, (uint64_t)v26, &qword_100645150);
    char v25 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    uint64_t v15 = *(void *)(v3 + 48);
    uint64_t v16 = *(void *)(v3 + 56);
    v26[0] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v15, v16, v26, v5);
    sub_1001870BC(v3 + 64, (uint64_t)v28, &qword_100645150);
    sub_1001870BC((uint64_t)v28, (uint64_t)v26, &qword_100645150);
    char v25 = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    sub_1001870BC(v3 + 80, (uint64_t)v27, &qword_100645150);
    sub_1001870BC((uint64_t)v27, (uint64_t)v26, &qword_100645150);
    char v25 = 5;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v26, &v25, v5, &type metadata for Data, v14);
    uint64_t v17 = *(void *)(v3 + 96);
    uint64_t v18 = *(void *)(v3 + 104);
    v26[0] = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, v18, v26, v5);
    uint64_t v19 = *(void *)(v3 + 112);
    uint64_t v20 = *(unsigned __int8 *)(v3 + 120);
    v26[0] = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, v26, v5);
    uint64_t v21 = *(void *)(v3 + 128);
    uint64_t v22 = *(void *)(v3 + 136);
    v26[0] = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v21, v22, v26, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 sub_1002BA614@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 128) = v8[8];
    __int128 v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    __int128 v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  }

  return result;
}

uint64_t sub_1002BA66C(void *a1)
{
  return sub_1002BA30C(a1);
}

uint64_t sub_1002BA6BC()
{
  return sub_1002B8DC8();
}

unint64_t sub_1002BA70C()
{
  unint64_t result = qword_10064CA68;
  if (!qword_10064CA68)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D3420, &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CA68);
  }

  return result;
}

unint64_t sub_1002BA750()
{
  unint64_t result = qword_10064CA78;
  if (!qword_10064CA78)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D33D0, &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CA78);
  }

  return result;
}

void *sub_1002BA794(void *a1)
{
  uint64_t v3 = sub_100183098(&qword_10064CA80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  __int128 v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = sub_10019A708(a1, v7);
  unint64_t v10 = sub_1002BA750();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON,  &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON,  v10,  v7,  v8);
  if (v1)
  {
    sub_10018709C(a1);
  }

  else
  {
    unint64_t v11 = sub_10020C198();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v14,  &type metadata for Data,  v12,  v3,  &type metadata for Data,  v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v9 = v14;
    sub_10018709C(a1);
  }

  return v9;
}

unint64_t sub_1002BA8B8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D1610, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 9) {
    return 9LL;
  }
  else {
    return v3;
  }
}

uint64_t *sub_1002BA900@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v73 = sub_100183098(&qword_10064CA88);
  uint64_t v5 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v112 = 1;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_10019A708(a1, v8);
  unint64_t v10 = sub_1002BA70C();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON,  &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON,  v10,  v8,  v9);
  int v75 = a1;
  if (v2)
  {
    uint64_t v74 = v2;
    uint64_t v76 = 0LL;
    uint64_t v77 = 0LL;
    uint64_t v79 = 0LL;
    uint64_t v80 = 0LL;
    uint64_t v81 = 0LL;
    uint64_t v113 = 0LL;
    unint64_t v78 = 0xF000000000000000LL;
    sub_10018709C(v75);
    uint64_t v92 = 0LL;
    unint64_t v93 = 0xF000000000000000LL;
    uint64_t v94 = 0LL;
    uint64_t v95 = v113;
    uint64_t v96 = v81;
    unint64_t v97 = 0xF000000000000000LL;
    uint64_t v98 = 0LL;
    uint64_t v99 = v79;
    uint64_t v100 = v80;
    unint64_t v101 = 0xF000000000000000LL;
    uint64_t v102 = v77;
    unint64_t v103 = v78;
    uint64_t v104 = 0LL;
    uint64_t v105 = v76;
    uint64_t v106 = 0LL;
    char v107 = v112;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v111[3];
    *(_DWORD *)uint64_t v108 = *(_DWORD *)v111;
    uint64_t v109 = 0LL;
    int v110 = 0LL;
    return sub_100265178(&v92);
  }

  else
  {
    uint64_t v71 = a2;
    uint64_t v72 = v5;
    LOBYTE(v92) = 0;
    uint64_t v11 = v73;
    uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v73);
    uint64_t v15 = v14;
    uint64_t v70 = v12;
    LOBYTE(v82) = 1;
    unint64_t v16 = sub_10020C198();
    swift_bridgeObjectRetain(v15);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v92,  &type metadata for Data,  &v82,  v11,  &type metadata for Data,  v16);
    uint64_t v113 = v15;
    uint64_t v17 = v92;
    LOBYTE(v82) = 2;
    unint64_t v18 = v93;
    sub_1001A4C04(v92, v93);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v92,  &type metadata for Data,  &v82,  v73,  &type metadata for Data,  v16);
    unint64_t v78 = v16;
    unint64_t v68 = v18;
    uint64_t v69 = v17;
    uint64_t v19 = v92;
    unint64_t v20 = v93;
    LOBYTE(v92) = 3;
    uint64_t v21 = v19;
    sub_1001A4C04(v19, v93);
    uint64_t v22 = v73;
    uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v73);
    uint64_t v81 = v21;
    uint64_t v67 = v23;
    LOBYTE(v82) = 4;
    char v25 = v24;
    swift_bridgeObjectRetain(v24);
    uint64_t v26 = v22;
    uint64_t v27 = v22;
    unint64_t v28 = v78;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v92,  &type metadata for Data,  &v82,  v27,  &type metadata for Data,  v78);
    uint64_t v79 = v25;
    unint64_t v29 = v93;
    LOBYTE(v82) = 5;
    uint64_t v80 = v92;
    sub_1001A4C04(v92, v93);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v92,  &type metadata for Data,  &v82,  v26,  &type metadata for Data,  v28);
    unint64_t v66 = v29;
    uint64_t v30 = v80;
    uint64_t v31 = v92;
    LOBYTE(v92) = 6;
    uint64_t v77 = v31;
    unint64_t v78 = v93;
    sub_1001A4C04(v31, v93);
    uint64_t v65 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v26);
    uint64_t v32 = v77;
    LOBYTE(v92) = 7;
    uint64_t v76 = v33;
    __n128 v34 = swift_bridgeObjectRetain(v33);
    uint64_t v64 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v92, v26, v34);
    int v63 = v35 & 1;
    char v112 = v35 & 1;
    char v91 = 8;
    uint64_t v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v91, v26);
    uint64_t v74 = 0LL;
    uint64_t v37 = v36;
    unint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v72 + 8))(v7, v26);
    *(void *)&double v40 = swift_bridgeObjectRetain(v39).n128_u64[0];
    swift_bridgeObjectRelease(0LL, v40);
    *(void *)&__int128 v82 = v69;
    *((void *)&v82 + 1) = v68;
    uint64_t v41 = v39;
    *(void *)&__int128 v83 = v70;
    *((void *)&v83 + 1) = v113;
    *(void *)&__int128 v84 = v81;
    *((void *)&v84 + 1) = v20;
    unint64_t v42 = v20;
    unint64_t v44 = v78;
    uint64_t v43 = v79;
    *(void *)&__int128 v85 = v67;
    *((void *)&v85 + 1) = v79;
    *(void *)&__int128 v86 = v30;
    *((void *)&v86 + 1) = v66;
    uint64_t v45 = v32;
    unsigned __int128 v87 = __PAIR128__(v78, v32);
    uint64_t v46 = v76;
    *(void *)&__int128 v88 = v65;
    *((void *)&v88 + 1) = v76;
    *(void *)&__int128 v89 = v64;
    BYTE8(v89) = v63;
    uint64_t v61 = v41;
    uint64_t v62 = v37;
    *(void *)&__int128 v90 = v37;
    *((void *)&v90 + 1) = v41;
    unint64_t v47 = v41;
    sub_1002650C0((uint64_t *)&v82);
    *(void *)&double v48 = swift_bridgeObjectRelease(v46).n128_u64[0];
    swift_bridgeObjectRelease(v47, v48);
    sub_100189B0C(v45, v44);
    unint64_t v49 = v66;
    sub_100189B0C(v30, v66);
    int v50 = v43;
    swift_bridgeObjectRelease(v43);
    uint64_t v51 = v81;
    sub_100189B0C(v81, v42);
    uint64_t v52 = v113;
    swift_bridgeObjectRelease(v113);
    unint64_t v53 = v68;
    uint64_t v54 = v69;
    sub_100189B0C(v69, v68);
    sub_10018709C(v75);
    uint64_t v92 = v54;
    unint64_t v93 = v53;
    uint64_t v94 = v70;
    uint64_t v95 = v52;
    uint64_t v96 = v51;
    unint64_t v97 = v42;
    uint64_t v98 = v67;
    uint64_t v99 = v50;
    uint64_t v100 = v30;
    unint64_t v101 = v49;
    uint64_t v102 = v77;
    unint64_t v103 = v78;
    uint64_t v104 = v65;
    uint64_t v105 = v76;
    uint64_t v106 = v64;
    char v107 = v112;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v111[3];
    *(_DWORD *)uint64_t v108 = *(_DWORD *)v111;
    uint64_t v109 = v62;
    int v110 = v61;
    unint64_t result = sub_100265178(&v92);
    __int128 v55 = v89;
    int v56 = v71;
    v71[6] = v88;
    v56[7] = v55;
    v56[8] = v90;
    __int128 v57 = v85;
    v56[2] = v84;
    v56[3] = v57;
    unsigned __int128 v58 = v87;
    v56[4] = v86;
    v56[5] = v58;
    __int128 v59 = v83;
    _OWORD *v56 = v82;
    v56[1] = v59;
  }

  return result;
}

uint64_t _s14descr1005D8CD9C15DiscoverRequestV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_1002BB214 + 4 * byte_1004D30B2[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_1002BB234 + 4 * byte_1004D30B7[v4]))();
  }
}

_BYTE *sub_1002BB214(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_1002BB234(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1002BB23C(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_1002BB244(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_1002BB24C(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_1002BB254(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysOMa()
{
  return &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON;
}

uint64_t _s14descr1005D8CD9C16DiscoverResponseV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }

uint64_t _s14descr1005D8CD9C16DiscoverResponseV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_1002BB34C + 4 * byte_1004D30C1[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1002BB380 + 4 * byte_1004D30BC[v4]))();
}

uint64_t sub_1002BB380(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002BB388(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002BB390LL);
  }
  return result;
}

uint64_t sub_1002BB39C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002BB3A4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 8;
  return result;
}

uint64_t sub_1002BB3A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002BB3B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysOMa()
{
  return &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON;
}

unint64_t sub_1002BB3D0()
{
  unint64_t result = qword_10064CA90;
  if (!qword_10064CA90)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D32B8, &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CA90);
  }

  return result;
}

unint64_t sub_1002BB418()
{
  unint64_t result = qword_10064CA98;
  if (!qword_10064CA98)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D33A8, &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CA98);
  }

  return result;
}

unint64_t sub_1002BB460()
{
  unint64_t result = qword_10064CAA0;
  if (!qword_10064CAA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D32E0, &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CAA0);
  }

  return result;
}

unint64_t sub_1002BB4A8()
{
  unint64_t result = qword_10064CAA8;
  if (!qword_10064CAA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D3308, &_s14descr1005D8CD9C15DiscoverRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CAA8);
  }

  return result;
}

unint64_t sub_1002BB4F0()
{
  unint64_t result = qword_10064CAB0;
  if (!qword_10064CAB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D31F0, &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CAB0);
  }

  return result;
}

unint64_t sub_1002BB538()
{
  unint64_t result = qword_10064CAB8;
  if (!qword_10064CAB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D3218, &_s14descr1005D8CD9C16DiscoverResponseV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064CAB8);
  }

  return result;
}

uint64_t sub_1002BB57C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064CAC0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064CAC0);
  if (qword_100644030 != -1) {
    swift_once(&qword_100644030, sub_10023A5B8);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_1002BB6B4(uint64_t a1, const char *a2)
{
  uint64_t v5 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (qword_100644108 != -1) {
    swift_once(&qword_100644108, sub_1002BB57C);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064CAC0);
  uint64_t v11 = v2;
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    unint64_t v44 = a2;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    uint64_t v43 = a1;
    uint64_t v17 = v16;
    v50[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v41 = v5;
    uint64_t v42 = v10;
    uint64_t v19 = *(void *)&v11[OBJC_IVAR___SDDeferrableOperation_identifier];
    unint64_t v18 = *(const char **)&v11[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v18);
    uint64_t v46 = sub_10018CDB4(v19, (unint64_t)v18, v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v18);
    *(_WORD *)(v15 + 12) = 2048;
    unint64_t v20 = &v11[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess(&v11[OBJC_IVAR___SDDeferrableOperation_reasons], v45, 0LL, 0LL);
    uint64_t v46 = *(void *)(*(void *)v20 + 16LL);
    uint64_t v5 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v15 + 14, v15 + 22);

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s addReason start: %ld", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v21 = v17;
    a1 = v43;
    swift_slowDealloc(v21, -1LL, -1LL);
    uint64_t v22 = v15;
    a2 = v44;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v23 = *(void **)&v11[OBJC_IVAR___SDDeferrableOperation_queue];
  *int v8 = v23;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  id v24 = v23;
  LOBYTE(v23) = _dispatchPreconditionTest(_:)(v8);
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if ((v23 & 1) != 0)
  {
    sub_1002BEFB8();
    char v25 = (const char **)&v11[OBJC_IVAR___SDDeferrableOperation_reasons];
    *(void *)&double v26 = swift_beginAccess(&v11[OBJC_IVAR___SDDeferrableOperation_reasons], v50, 0LL, 0LL).n128_u64[0];
    uint64_t v27 = *v25;
    swift_bridgeObjectRetain(*v25, v26);
    char v28 = sub_1003A084C(a1, (uint64_t)a2, (uint64_t)v27);
    swift_bridgeObjectRelease(v27);
    if ((v28 & 1) != 0)
    {
      uint64_t v29 = swift_bridgeObjectRetain_n(a2, 2LL);
      uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
      os_log_type_t v31 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v33 = swift_slowAlloc(32LL, -1LL);
        uint64_t v46 = v33;
        *(_DWORD *)uint64_t v32 = 136315138;
        swift_bridgeObjectRetain(a2);
        uint64_t v48 = sub_10018CDB4(a1, (unint64_t)a2, &v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v32 + 4, v32 + 12);
        swift_bridgeObjectRelease_n(a2, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Exiting addReason, %s is already in set", v32, 0xCu);
        swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1LL, -1LL);
        swift_slowDealloc(v32, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a2, 2LL);
      }
    }

    else
    {
      *(void *)&double v34 = swift_beginAccess(v25, &v46, 33LL, 0LL).n128_u64[0];
      swift_bridgeObjectRetain(a2, v34);
      sub_1003B572C(&v48, a1, (uint64_t)a2);
      char v35 = v49;
      swift_endAccess(&v46);
      swift_bridgeObjectRelease(v35);
      uint64_t v36 = v11;
      uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
      os_log_type_t v38 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v37, v38))
      {
        unint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        *(_DWORD *)unint64_t v39 = 134217984;
        uint64_t v46 = *((void *)*v25 + 2);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, v47, v39 + 4, v39 + 12);

        _os_log_impl((void *)&_mh_execute_header, v37, v38, "addReason end: %ld", v39, 0xCu);
        swift_slowDealloc(v39, -1LL, -1LL);
      }

      else
      {
      }
    }
  }

  else
  {
    __break(1u);
  }

void sub_1002BBBCC(uint64_t a1, uint64_t a2)
{
  __int128 v89 = (const char *)a2;
  uint64_t v84 = sub_100183098(&qword_10064CB70);
  __chkstk_darwin(v84);
  uint64_t v88 = (uint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v82 = (uint64_t)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  __int128 v85 = (char *)&v77 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v83 = (uint64_t)&v77 - v11;
  __chkstk_darwin(v10);
  __int128 v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v77 - v12);
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void (**)(void, void, void))(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v81 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  unsigned __int128 v87 = (char *)&v77 - v17;
  uint64_t v18 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (qword_100644108 != -1) {
    swift_once(&qword_100644108, sub_1002BB57C);
  }
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v23 = sub_100186DE4(v22, (uint64_t)qword_10064CAC0);
  id v24 = v2;
  char v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.default.getter();
  BOOL v27 = os_log_type_enabled(v25, v26);
  char v91 = v24;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc(22LL, -1LL);
    uint64_t v80 = v13;
    uint64_t v29 = v28;
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v79 = v14;
    uint64_t v31 = v30;
    v96[0] = v30;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v78 = a1;
    uint64_t v32 = &v24[OBJC_IVAR___SDDeferrableOperation_identifier];
    uint64_t v86 = v23;
    uint64_t v33 = *(void *)&v24[OBJC_IVAR___SDDeferrableOperation_identifier];
    double v34 = (const char *)*((void *)v32 + 1);
    swift_bridgeObjectRetain(v34);
    uint64_t v93 = sub_10018CDB4(v33, (unint64_t)v34, v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94, v29 + 4, v29 + 12);
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v29 + 12) = 2048;
    char v35 = &v91[OBJC_IVAR___SDDeferrableOperation_reasons];
    swift_beginAccess(&v91[OBJC_IVAR___SDDeferrableOperation_reasons], v92, 0LL, 0LL);
    uint64_t v36 = *(void *)v35;
    a1 = v78;
    uint64_t v93 = *(void *)(v36 + 16);
    id v24 = v91;
    uint64_t v23 = v86;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, v94, v29 + 14, v29 + 22);

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s removeReason start: %ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v37 = v31;
    uint64_t v14 = v79;
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v38 = v29;
    uint64_t v13 = v80;
    swift_slowDealloc(v38, -1LL, -1LL);
  }

  else
  {
  }

  unint64_t v39 = *(void **)&v24[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v21 = v39;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v40 = v39;
  LOBYTE(v39) = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v41 = (uint64_t)v90;
  if ((v39 & 1) == 0)
  {
    __break(1u);
    return;
  }

  uint64_t v42 = &v24[OBJC_IVAR___SDDeferrableOperation_reasons];
  swift_beginAccess(&v24[OBJC_IVAR___SDDeferrableOperation_reasons], v96, 33LL, 0LL);
  uint64_t v43 = v89;
  sub_1003BDC14(a1, (uint64_t)v89);
  uint64_t v45 = v44;
  swift_endAccess(v96);
  swift_bridgeObjectRelease(v45);
  uint64_t v46 = &v24[OBJC_IVAR___SDDeferrableOperation_timedReasons];
  __n128 v47 = swift_beginAccess(&v24[OBJC_IVAR___SDDeferrableOperation_timedReasons], v96, 0LL, 0LL);
  uint64_t v48 = *(void *)v46;
  if (*(void *)(*(void *)v46 + 16LL))
  {
    *(void *)&double v49 = swift_bridgeObjectRetain(v43, v47.n128_f64[0]).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v48, v49);
    uint64_t v50 = sub_1003AD53C(a1, (uint64_t)v43);
    if ((v51 & 1) != 0)
    {
      (*((void (**)(uint64_t, uint64_t, uint64_t))v14 + 2))( v41,  *(void *)(v48 + 56) + *((void *)v14 + 9) * v50,  v13);
      uint64_t v52 = (void (*)(uint64_t, void, uint64_t, uint64_t))*((void *)v14 + 7);
      v52(v41, 0LL, 1LL, v13);
    }

    else
    {
      uint64_t v52 = (void (*)(uint64_t, void, uint64_t, uint64_t))*((void *)v14 + 7);
      v52(v41, 1LL, 1LL, v13);
    }

    *(void *)&double v53 = swift_bridgeObjectRelease(v43).n128_u64[0];
    __n128 v54 = swift_bridgeObjectRelease((const char *)v48, v53);
    __int128 v55 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))*((void *)v14 + 6);
    if (v55(v41, 1LL, v13, v54) == 1) {
      goto LABEL_13;
    }
    uint64_t v80 = (uint64_t)v42;
    uint64_t v86 = v23;
    uint64_t v57 = (uint64_t)v43;
    unsigned __int128 v58 = v87;
    uint64_t v79 = (void (*)(void, void, void))*((void *)v14 + 4);
    v79(v87, v41, v13);
    __int128 v59 = v91;
    __int128 v90 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v55;
    sub_1002BEFB8();
    swift_beginAccess(v46, &v93, 33LL, 0LL);
    uint64_t v60 = v83;
    sub_1001CA038(a1, v57, v83);
    sub_100187100(v60, &qword_1006457E8);
    swift_endAccess(&v93);
    uint64_t v61 = v85;
    (*((void (**)(char *, char *, uint64_t))v14 + 2))(v85, v58, v13);
    v52((uint64_t)v61, 0LL, 1LL, v13);
    uint64_t v62 = (uint64_t)&v59[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    uint64_t v63 = (uint64_t)v61;
    swift_beginAccess(v62, &v93, 0LL, 0LL);
    uint64_t v64 = v88;
    uint64_t v65 = v88 + *(int *)(v84 + 48);
    sub_1001915A4(v63, v88, &qword_1006457E8);
    unint64_t v66 = v90;
    sub_1001915A4(v62, v65, &qword_1006457E8);
    if (v66(v64, 1LL, v13) == 1)
    {
      sub_100187100(v63, &qword_1006457E8);
      int v67 = v66(v65, 1LL, v13);
      int v56 = v91;
      uint64_t v42 = (char *)v80;
      if (v67 == 1)
      {
        sub_100187100(v88, &qword_1006457E8);
LABEL_21:
        sub_1002BD804();
        sub_1002BDEB4();
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v68 = v82;
      sub_1001915A4(v88, v82, &qword_1006457E8);
      if (v66(v65, 1LL, v13) != 1)
      {
        uint64_t v69 = v81;
        v79(v81, v65, v13);
        uint64_t v70 = sub_1002C0A50(&qword_10064CB78, (uint64_t)&protocol conformance descriptor for Date);
        char v71 = dispatch thunk of static Equatable.== infix(_:_:)(v68, v69, v13, v70);
        uint64_t v72 = (void (*)(char *, uint64_t))*((void *)v14 + 1);
        v72(v69, v13);
        sub_100187100(v63, &qword_1006457E8);
        v72((char *)v68, v13);
        sub_100187100(v88, &qword_1006457E8);
        int v56 = v91;
        uint64_t v42 = (char *)v80;
        if ((v71 & 1) != 0) {
          goto LABEL_21;
        }
LABEL_22:
        (*((void (**)(char *, uint64_t))v14 + 1))(v87, v13);
        goto LABEL_23;
      }

      sub_100187100(v63, &qword_1006457E8);
      (*((void (**)(uint64_t, uint64_t))v14 + 1))(v68, v13);
      int v56 = v91;
      uint64_t v42 = (char *)v80;
    }

    sub_100187100(v88, &qword_10064CB70);
    goto LABEL_22;
  }

  (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v14 + 7))(v41, 1LL, 1LL, v13, v47);
LABEL_13:
  sub_100187100(v41, &qword_1006457E8);
  int v56 = v91;
  sub_1002BEFB8();
LABEL_23:
  uint64_t v73 = v56;
  uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
  os_log_type_t v75 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v76 = 134217984;
    uint64_t v95 = *(void *)(*(void *)v42 + 16LL);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v76 + 4, v76 + 12);

    _os_log_impl((void *)&_mh_execute_header, v74, v75, "removeReason end: %ld", v76, 0xCu);
    swift_slowDealloc(v76, -1LL, -1LL);
  }

  else
  {

    uint64_t v74 = (os_log_s *)v73;
  }

  if (!*(void *)(*(void *)v42 + 16LL) && v73[OBJC_IVAR___SDDeferrableOperation_pendingOperation] == 1) {
    sub_1002BEC1C(1);
  }
}

uint64_t sub_1002BC490(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  uint64_t v8 = v7;
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease(v8);
}

void sub_1002BC4E4(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v138 = a1;
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v127 = (uint64_t)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v124 = (uint64_t)&v121 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v130 = (char *)&v121 - v12;
  __chkstk_darwin(v11);
  uint64_t v129 = (char *)&v121 - v13;
  uint64_t v133 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v15 = (uint64_t *)((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = type metadata accessor for Date(0LL);
  uint64_t v17 = *(void **)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v125 = (char *)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v123 = (char *)&v121 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v122 = (char *)&v121 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v126 = (char *)&v121 - v25;
  __chkstk_darwin(v24);
  BOOL v27 = (char *)&v121 - v26;
  if (qword_100644108 != -1) {
    swift_once(&qword_100644108, sub_1002BB57C);
  }
  uint64_t v28 = type metadata accessor for Logger(0LL);
  uint64_t v29 = sub_100186DE4(v28, (uint64_t)qword_10064CAC0);
  uint64_t v135 = (void (*)(char *, uint64_t, uint64_t))v17[2];
  v135(v27, a3, v16);
  id v30 = v3;
  swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v31 = (char *)v30;
  uint64_t v137 = v29;
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  uint64_t v33 = a2;
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v32, v34);
  uint64_t v131 = a3;
  v136 = v17;
  if (v35)
  {
    uint64_t v36 = swift_slowAlloc(32LL, -1LL);
    uint64_t v134 = v16;
    uint64_t v37 = v36;
    uint64_t v121 = swift_slowAlloc(96LL, -1LL);
    v145[0] = v121;
    *(_DWORD *)uint64_t v37 = 136315650;
    uint64_t v39 = *(void *)&v31[OBJC_IVAR___SDDeferrableOperation_identifier];
    uint64_t v38 = *(const char **)&v31[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v38);
    uint64_t v143 = sub_10018CDB4(v39, (unint64_t)v38, v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v37 + 4, v37 + 12);

    *(void *)&double v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain(v33, v40);
    uint64_t v143 = sub_10018CDB4(v138, (unint64_t)v33, v145);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v37 + 14, v37 + 22);
    swift_bridgeObjectRelease_n(v33, 3LL);
    *(_WORD *)(v37 + 22) = 2080;
    uint64_t v41 = sub_1002C0A50((unint64_t *)&qword_100651A50, (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter(v134, v41);
    unint64_t v44 = (const char *)v43;
    uint64_t v143 = sub_10018CDB4(v42, v43, v145);
    uint64_t v17 = v136;
    a3 = v131;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v37 + 24, v37 + 32);
    __n128 v45 = swift_bridgeObjectRelease(v44);
    uint64_t v128 = (void (*)(char *, uint64_t, __n128))v17[1];
    v128(v27, v134, v45);
    _os_log_impl( (void *)&_mh_execute_header,  v32,  v34,  "%s pushPreventionDateForReason, reason: %s, date: %s",  (uint8_t *)v37,  0x20u);
    uint64_t v46 = v121;
    swift_arrayDestroy(v121, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1LL, -1LL);
    uint64_t v47 = v37;
    uint64_t v16 = v134;
    swift_slowDealloc(v47, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(v33, 2LL);

    uint64_t v128 = (void (*)(char *, uint64_t, __n128))v17[1];
    ((void (*)(char *, uint64_t))v128)(v27, v16);
  }

  uint64_t v48 = v33;
  double v49 = *(void **)&v31[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v15 = v49;
  uint64_t v50 = v132;
  uint64_t v51 = v133;
  (*(void (**)(void *, void, uint64_t))(v132 + 104))( v15,  enum case for DispatchPredicate.onQueue(_:),  v133);
  id v52 = v49;
  LOBYTE(v49) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(void *, uint64_t))(v50 + 8))(v15, v51);
  if ((v49 & 1) == 0)
  {
    __break(1u);
    return;
  }

  sub_1002BEFB8();
  double v53 = (const char **)&v31[OBJC_IVAR___SDDeferrableOperation_reasons];
  *(void *)&double v54 = swift_beginAccess(&v31[OBJC_IVAR___SDDeferrableOperation_reasons], v145, 0LL, 0LL).n128_u64[0];
  __int128 v55 = *v53;
  swift_bridgeObjectRetain(v55, v54);
  uint64_t v56 = v138;
  char v57 = sub_1003A084C(v138, (uint64_t)v48, (uint64_t)v55);
  swift_bridgeObjectRelease(v55);
  if ((v57 & 1) == 0)
  {
    uint64_t v68 = (os_log_s *)Logger.logObject.getter(v58);
    os_log_type_t v69 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v70 = 0;
      char v71 = "Cannot bump date for reason that is not in set";
LABEL_28:
      _os_log_impl((void *)&_mh_execute_header, v68, v69, v71, v70, 2u);
      swift_slowDealloc(v70, -1LL, -1LL);
    }

void sub_1002BD31C()
{
  uint64_t v1 = type metadata accessor for Date(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  __n128 v45 = (char *)&v39 - v6;
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v44 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v39 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  if (qword_100644108 != -1) {
    swift_once(&qword_100644108, sub_1002BB57C);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v15, (uint64_t)qword_10064CAC0);
  uint64_t v16 = v0;
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  uint64_t v19 = qword_10064BFF8 + 8;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v42 = v5;
    uint64_t v20 = swift_slowAlloc(18LL, -1LL);
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    v49[0] = v21;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = (uint64_t)&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v46, 0LL, 0LL);
    sub_1001915A4(v22, (uint64_t)v14, &qword_1006457E8);
    int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v14, 1LL, v1);
    uint64_t v43 = v1;
    uint64_t v41 = v2;
    if (v23)
    {
      sub_100187100((uint64_t)v14, &qword_1006457E8);
      uint64_t v24 = (const char *)0x8000000100509260LL;
      uint64_t v25 = 0xD00000000000001ALL;
    }

    else
    {
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      double v40 = v12;
      BOOL v27 = v45;
      v26(v45, v14, v1);
      uint64_t v28 = sub_100187100((uint64_t)v14, &qword_1006457E8);
      uint64_t v25 = Date.description.getter(v28);
      uint64_t v24 = v29;
      id v30 = v27;
      uint64_t v12 = v40;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v30, v1);
    }

    uint64_t v47 = sub_10018CDB4(v25, (unint64_t)v24, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v20 + 4, v20 + 12);

    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v20 + 12) = 1024;
    uint64_t v31 = *(void *)&v16[OBJC_IVAR___SDDeferrableOperation_mainTimer];

    LODWORD(v47) = v31 != 0;
    uint64_t v19 = &qword_10064BFF8[1];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, (char *)&v47 + 4, v20 + 14, v20 + 18);

    _os_log_impl((void *)&_mh_execute_header, v17, v18, "scheduleOperation:%s, %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);

    uint64_t v5 = v42;
    uint64_t v1 = v43;
    uint64_t v2 = v41;
  }

  else
  {
  }

  if (!*(void *)&v16[v19[354]])
  {
    uint64_t v32 = (uint64_t)&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v16[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v49, 0LL, 0LL);
    sub_1001915A4(v32, (uint64_t)v12, &qword_1006457E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1LL, v1) == 1)
    {
      sub_100187100((uint64_t)v12, &qword_1006457E8);
    }

    else
    {
      uint64_t v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 32))(v5, v12, v1);
      os_log_type_t v34 = v45;
      Date.init()(v33);
      char v35 = static Date.< infix(_:_:)(v5, v34);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v2 + 8);
      v36(v34, v1);
      if ((v35 & 1) != 0)
      {
        uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
        uint64_t v38 = (uint64_t)v44;
        v37(v44, 1LL, 1LL, v1);
        swift_beginAccess(v32, &v47, 33LL, 0LL);
        sub_100225008(v38, v32);
        swift_endAccess(&v47);
        sub_1002BEFB8();
      }

      else
      {
        sub_1002BDEB4();
      }

      v36(v5, v1);
    }
  }

  sub_1002BEC1C(0);
}

void sub_1002BD804()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_10064CB60);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_1006457E8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v65 = (uint64_t)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  int v67 = (char *)v63 - v12;
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void *)((char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)&v1[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  char v19 = _dispatchPreconditionTest(_:)(v16);
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v19 & 1) != 0)
  {
    uint64_t v64 = v5;
    uint64_t v66 = v3;
    uint64_t v68 = v2;
    if (qword_100644108 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644108, sub_1002BB57C);
LABEL_3:
  uint64_t v20 = type metadata accessor for Logger(0LL);
  uint64_t v21 = sub_100186DE4(v20, (uint64_t)qword_10064CAC0);
  uint64_t v22 = v1;
  int v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  uint64_t v25 = &qword_10064BFF8[1];
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v27 = swift_slowAlloc(32LL, -1LL);
    v73[0] = v27;
    v63[1] = v21;
    *(_DWORD *)uint64_t v26 = 136315138;
    v63[0] = v26 + 4;
    uint64_t v28 = (const char **)&v22[OBJC_IVAR___SDDeferrableOperation_timedReasons];
    *(void *)&double v29 = swift_beginAccess(&v22[OBJC_IVAR___SDDeferrableOperation_timedReasons], v69, 0LL, 0LL).n128_u64[0];
    id v30 = *v28;
    swift_bridgeObjectRetain(v30, v29);
    uint64_t v32 = Dictionary.description.getter(v31, &type metadata for String, v68, &protocol witness table for String);
    uint64_t v33 = v8;
    unint64_t v35 = v34;
    swift_bridgeObjectRelease(v30);
    char v71 = (void *)sub_10018CDB4(v32, v35, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, &v72, v63[0], v26 + 12);

    uint64_t v36 = (const char *)v35;
    uint64_t v8 = v33;
    uint64_t v25 = qword_10064BFF8 + 8;
    swift_bridgeObjectRelease(v36);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "recalculateDate timedReasons:%s", v26, 0xCu);
    swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v37 = (const char **)&v22[v25[351]];
  swift_beginAccess(v37, v73, 0LL, 0LL);
  uint64_t v38 = *v37;
  swift_bridgeObjectRetain_n(*v37, 2LL);
  uint64_t v39 = sub_10018D314((uint64_t)v38);
  swift_bridgeObjectRelease(v38);
  char v71 = v39;
  sub_1002BF8D8(&v71);
  uint64_t v40 = v66;
  swift_bridgeObjectRelease(v38);
  uint64_t v41 = (uint64_t)v71;
  uint64_t v42 = v71[2];
  uint64_t v43 = sub_100183098(&qword_1006453B0);
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = v68;
  if (v42)
  {
    sub_1001915A4( v41 + ((*(unsigned __int8 *)(v44 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80)),  (uint64_t)v8,  &qword_1006453B0);
    uint64_t v46 = 0LL;
  }

  else
  {
    uint64_t v46 = 1LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v8, v46, 1LL, v43);
  swift_release(v41);
  uint64_t v47 = sub_100183098(&qword_1006453B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48LL))(v8, 1LL, v47) == 1)
  {
    sub_100187100((uint64_t)v8, (uint64_t *)&unk_10064CB60);
    uint64_t v48 = 1LL;
    uint64_t v49 = (uint64_t)v67;
  }

  else
  {
    __n128 v50 = swift_bridgeObjectRelease((const char *)*((void *)v8 + 1));
    uint64_t v49 = (uint64_t)v67;
    (*(void (**)(char *, char *, uint64_t, __n128))(v40 + 32))(v67, &v8[*(int *)(v47 + 48)], v45, v50);
    uint64_t v48 = 0LL;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56))(v49, v48, 1LL, v45);
  uint64_t v51 = (uint64_t)&v22[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  swift_beginAccess(&v22[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], &v71, 33LL, 0LL);
  sub_100225008(v49, v51);
  swift_endAccess(&v71);
  id v52 = v22;
  double v53 = (os_log_s *)Logger.logObject.getter(v52);
  os_log_type_t v54 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v53, v54))
  {
    __int128 v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v56 = swift_slowAlloc(32LL, -1LL);
    char v71 = (void *)v56;
    *(_DWORD *)__int128 v55 = 136315138;
    uint64_t v57 = v65;
    sub_1001915A4(v51, v65, &qword_1006457E8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v57, 1LL, v45))
    {
      sub_100187100(v57, &qword_1006457E8);
      uint64_t v58 = (const char *)0x8000000100509260LL;
      uint64_t v59 = 0xD00000000000001ALL;
    }

    else
    {
      __n128 v60 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v64, v57, v45);
      uint64_t v61 = sub_100187100(v57, &qword_1006457E8);
      uint64_t v59 = Date.description.getter(v61);
      uint64_t v58 = v62;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v60, v45);
    }

    uint64_t v70 = sub_10018CDB4(v59, (unint64_t)v58, (uint64_t *)&v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v55 + 4, v55 + 12);

    swift_bridgeObjectRelease(v58);
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "recalculateDate, preventUntilDate changed to %s", v55, 0xCu);
    swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v56, -1LL, -1LL);
    swift_slowDealloc(v55, -1LL, -1LL);
  }

  else
  {
  }

uint64_t sub_1002BDEB4()
{
  uint64_t v122 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v120 = (char *)&v111 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v117 = (char *)&v111 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v125 = *(void *)(v126 - 8);
  uint64_t v3 = __chkstk_darwin(v126);
  uint64_t v124 = (uint64_t *)((char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v3);
  uint64_t v123 = (uint64_t)&v111 - v5;
  uint64_t v133 = type metadata accessor for OS_dispatch_source.TimerFlags(0LL);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v134 = type metadata accessor for DispatchTime(0LL);
  uint64_t v130 = *(void *)(v134 - 8);
  uint64_t v7 = __chkstk_darwin(v134);
  uint64_t v129 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  v136 = (char *)&v111 - v9;
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = type metadata accessor for Date(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v138 = (char *)&v111 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v127 = (char *)&v111 - v18;
  uint64_t v19 = sub_100183098(&qword_1006457E8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v128 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v116 = (uint64_t)&v111 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v137 = (uint64_t)&v111 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v111 - v26;
  if (qword_100644108 != -1) {
    swift_once(&qword_100644108, sub_1002BB57C);
  }
  uint64_t v28 = type metadata accessor for Logger(0LL);
  uint64_t v29 = sub_100186DE4(v28, (uint64_t)qword_10064CAC0);
  id v30 = v0;
  uint64_t v135 = v29;
  uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
  int v32 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v31, (os_log_type_t)v32))
  {
    int v114 = v32;
    uint64_t v115 = v11;
    uint64_t v112 = v10;
    uint64_t v33 = swift_slowAlloc(22LL, -1LL);
    uint64_t v113 = swift_slowAlloc(64LL, -1LL);
    aBlock[0] = v113;
    *(_DWORD *)uint64_t v33 = 136315394;
    uint64_t v34 = v15;
    uint64_t v35 = v14;
    uint64_t v36 = *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_identifier];
    uint64_t v37 = *(const char **)&v30[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v37);
    uint64_t v143 = sub_10018CDB4(v36, (unint64_t)v37, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v33 + 4, v33 + 12);
    uint64_t v38 = v37;
    uint64_t v14 = v35;
    uint64_t v15 = v34;
    swift_bridgeObjectRelease(v38);
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v39 = (uint64_t)&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], v139, 0LL, 0LL);
    sub_1001915A4(v39, (uint64_t)v27, &qword_1006457E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v27, 1LL, v14))
    {
      uint64_t v40 = 0xD00000000000001ALL;
      sub_100187100((uint64_t)v27, &qword_1006457E8);
      uint64_t v41 = (const char *)0x8000000100509260LL;
    }

    else
    {
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      uint64_t v43 = v127;
      v42(v127, v27, v14);
      uint64_t v44 = sub_100187100((uint64_t)v27, &qword_1006457E8);
      uint64_t v40 = Date.description.getter(v44);
      uint64_t v41 = v45;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v43, v14);
    }

    uint64_t v10 = v112;
    uint64_t v143 = sub_10018CDB4(v40, (unint64_t)v41, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, v144, v33 + 14, v33 + 22);

    swift_bridgeObjectRelease(v41);
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v114, "%s handleTimer %s", (uint8_t *)v33, 0x16u);
    uint64_t v46 = v113;
    swift_arrayDestroy(v113, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);

    uint64_t v11 = v115;
  }

  else
  {
  }

  uint64_t v47 = *(void **)&v30[OBJC_IVAR___SDDeferrableOperation_queue];
  void *v13 = v47;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v48 = v47;
  char v49 = _dispatchPreconditionTest(_:)(v13);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v49 & 1) != 0)
  {
    uint64_t v51 = (uint64_t)&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
    swift_beginAccess(&v30[OBJC_IVAR___SDDeferrableOperation_preventUntilDate], &v143, 0LL, 0LL);
    uint64_t v52 = v137;
    sub_1001915A4(v51, v137, &qword_1006457E8);
    double v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (v53(v52, 1LL, v14) == 1)
    {
      uint64_t result = sub_100187100(v52, &qword_1006457E8);
      uint64_t v54 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
      uint64_t v55 = *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer];
      if (v55)
      {
        swift_getObjectType(*(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer]);
        swift_unknownObjectRetain(v55);
        OS_dispatch_source.cancel()();
        uint64_t v56 = *(void *)&v30[v54];
        *(void *)&v30[v54] = 0LL;
        swift_unknownObjectRelease(v55);
        return swift_unknownObjectRelease(v56);
      }
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v138, v52, v14);
      sub_1002BEFB8();
      double v59 = Date.timeIntervalSinceNow.getter(v57);
      if (v59 <= 0.0)
      {
        uint64_t v91 = (uint64_t)v128;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v128, 1LL, 1LL, v14);
        swift_beginAccess(v51, aBlock, 33LL, 0LL);
        sub_100225008(v91, v51);
        swift_endAccess(aBlock);
        uint64_t v92 = *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer];
        *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer] = 0LL;
        uint64_t v93 = swift_unknownObjectRelease(v92);
        uint64_t v94 = (os_log_s *)Logger.logObject.getter(v93);
        os_log_type_t v95 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v96 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v96 = 0;
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "handleTimer calling try operation", v96, 2u);
          swift_slowDealloc(v96, -1LL, -1LL);
        }

        sub_1002BEC1C(1);
        return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v138, v14);
      }

      else
      {
        double v60 = v59;
        uint64_t v61 = v15;
        uint64_t v111 = v14;
        double v62 = v129;
        static DispatchTime.now()(v58);
        + infix(_:_:)(v62, v60);
        uint64_t v63 = *(void (**)(char *, uint64_t))(v130 + 8);
        uint64_t v64 = v134;
        v63(v62, v134);
        uint64_t v65 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
        uint64_t v66 = *(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer];
        if (v66)
        {
          swift_getObjectType(*(void *)&v30[OBJC_IVAR___SDDeferrableOperation_mainTimer]);
          swift_unknownObjectRetain(v66);
          OS_dispatch_source.cancel()();
          uint64_t v67 = *(void *)&v30[v65];
          *(void *)&v30[v65] = 0LL;
          swift_unknownObjectRelease(v66);
          swift_unknownObjectRelease(v67);
        }

        sub_1002BF858();
        uint64_t v68 = v131;
        static OS_dispatch_source.TimerFlags.strict.getter();
        uint64_t v69 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v68, v48);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v68, v133);
        uint64_t v70 = *(void *)&v30[v65];
        *(void *)&v30[v65] = v69;
        swift_unknownObjectRelease(v70);
        uint64_t v71 = *(void *)&v30[v65];
        if (v71)
        {
          uint64_t ObjectType = swift_getObjectType(*(void *)&v30[v65]);
          uint64_t v73 = v123;
          sub_1001DB690(v123);
          uint64_t v74 = v124;
          sub_1001DB6D4(v124);
          swift_unknownObjectRetain(v71);
          OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v136, v73, v74, ObjectType);
          swift_unknownObjectRelease(v71);
          double v75 = *(uint64_t (**)(uint64_t, uint64_t))(v125 + 8);
          uint64_t v76 = v126;
          v75((uint64_t)v74, v126);
          uint64_t v77 = v75(v73, v76);
          uint64_t v78 = *(void *)&v30[v65];
          if (v78)
          {
            uint64_t v79 = swift_getObjectType(*(void *)&v30[v65]);
            uint64_t v80 = swift_allocObject(&unk_1005D8DC0, 24LL, 7LL);
            *(void *)(v80 + swift_unknownObjectWeakDestroy(v0 + 16) = v30;
            aBlock[4] = (uint64_t)sub_1002BF8B8;
            uint64_t v141 = v80;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256LL;
            aBlock[2] = (uint64_t)sub_1001B9FE4;
            aBlock[3] = (uint64_t)&unk_1005D8DD8;
            uint64_t v81 = _Block_copy(aBlock);
            uint64_t v82 = v30;
            swift_unknownObjectRetain(v78);
            uint64_t v83 = v117;
            j___s8Dispatch0A3QoSV11unspecifiedACvgZ(v79);
            uint64_t v84 = v120;
            sub_1003D06B8();
            OS_dispatch_source.setEventHandler(qos:flags:handler:)(v83, v84, v81, v79);
            _Block_release(v81);
            swift_unknownObjectRelease(v78);
            (*(void (**)(char *, uint64_t))(v121 + 8))(v84, v122);
            (*(void (**)(char *, uint64_t))(v118 + 8))(v83, v119);
            uint64_t v77 = swift_release(v141);
            uint64_t v85 = *(void *)&v30[v65];
            if (v85)
            {
              swift_getObjectType(*(void *)&v30[v65]);
              swift_unknownObjectRetain(v85);
              OS_dispatch_source.resume()();
              uint64_t v77 = swift_unknownObjectRelease(v85);
            }
          }

          uint64_t v86 = (os_log_s *)Logger.logObject.getter(v77);
          os_log_type_t v87 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v86, v87))
          {
            uint64_t v88 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v88 = 0;
            _os_log_impl((void *)&_mh_execute_header, v86, v87, "handleTimer timer activated", v88, 2u);
            swift_slowDealloc(v88, -1LL, -1LL);
          }

          __int128 v89 = v136;
          uint64_t v90 = v64;
        }

        else
        {
          unint64_t v97 = v30;
          uint64_t v98 = (os_log_s *)Logger.logObject.getter(v97);
          os_log_type_t v99 = static os_log_type_t.error.getter(v98);
          if (os_log_type_enabled(v98, v99))
          {
            uint64_t v100 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v101 = swift_slowAlloc(32LL, -1LL);
            aBlock[0] = v101;
            *(_DWORD *)uint64_t v100 = 136315138;
            uint64_t v102 = v116;
            sub_1001915A4(v51, v116, &qword_1006457E8);
            uint64_t v103 = v111;
            if (v53(v102, 1LL, v111))
            {
              uint64_t v104 = 0xD00000000000001ALL;
              sub_100187100(v102, &qword_1006457E8);
              uint64_t v105 = (const char *)0x8000000100509260LL;
            }

            else
            {
              uint64_t v106 = v127;
              (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v127, v102, v103);
              uint64_t v107 = sub_100187100(v102, &qword_1006457E8);
              uint64_t v108 = Date.description.getter(v107);
              uint64_t v109 = v103;
              uint64_t v104 = v108;
              uint64_t v105 = v110;
              (*(void (**)(char *, uint64_t))(v61 + 8))(v106, v109);
            }

            uint64_t v142 = sub_10018CDB4(v104, (unint64_t)v105, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, &v143, v100 + 4, v100 + 12);

            swift_bridgeObjectRelease(v105);
            _os_log_impl((void *)&_mh_execute_header, v98, v99, "Error making timer %s", v100, 0xCu);
            swift_arrayDestroy(v101, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v101, -1LL, -1LL);
            swift_slowDealloc(v100, -1LL, -1LL);
          }

          else
          {
          }

          __int128 v89 = v136;
          uint64_t v90 = v134;
        }

        v63(v89, v90);
        return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v138, v111);
      }
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1002BEBBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR___SDDeferrableOperation_mainTimer);
  if (v1)
  {
    swift_getObjectType(*(void *)(a1 + OBJC_IVAR___SDDeferrableOperation_mainTimer));
    swift_unknownObjectRetain(v1);
    OS_dispatch_source.cancel()();
    a1 = swift_unknownObjectRelease(v1);
  }

  return sub_1002BDEB4(a1);
}

void sub_1002BEC1C(int a1)
{
  int v28 = a1;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (qword_100644108 != -1) {
    swift_once(&qword_100644108, sub_1002BB57C);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_10064CAC0);
  uint64_t v7 = v1;
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc(28LL, -1LL);
    uint64_t v26 = swift_slowAlloc(64LL, -1LL);
    v32[0] = v26;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v12 = *(void *)&v7[OBJC_IVAR___SDDeferrableOperation_identifier];
    uint64_t v11 = *(const char **)&v7[OBJC_IVAR___SDDeferrableOperation_identifier + 8];
    swift_bridgeObjectRetain(v11);
    uint64_t v30 = sub_10018CDB4(v12, (unint64_t)v11, v32);
    uint64_t v27 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v30) = v28 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, (char *)&v30 + 4, v10 + 14, v10 + 18);
    *(_WORD *)(v10 + 18) = 2080;
    uint64_t v13 = (const char **)&v7[OBJC_IVAR___SDDeferrableOperation_reasons];
    *(void *)&double v14 = swift_beginAccess(&v7[OBJC_IVAR___SDDeferrableOperation_reasons], &v30, 0LL, 0LL).n128_u64[0];
    uint64_t v15 = *v13;
    swift_bridgeObjectRetain(v15, v14);
    uint64_t v17 = Set.description.getter(v16, &type metadata for String, &protocol witness table for String);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease(v15);
    uint64_t v29 = sub_10018CDB4(v17, v19, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v10 + 20, v10 + 28);

    uint64_t v20 = (const char *)v19;
    uint64_t v2 = v27;
    swift_bridgeObjectRelease(v20);
    _os_log_impl( (void *)&_mh_execute_header,  v8,  v9,  "%s _scheduleOperation delayed:%{BOOL}d, reason: %s",  (uint8_t *)v10,  0x1Cu);
    uint64_t v21 = v26;
    swift_arrayDestroy(v26, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v22 = *(void **)&v7[OBJC_IVAR___SDDeferrableOperation_queue];
  *uint64_t v5 = v22;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v22 & 1) != 0)
  {
    uint64_t v24 = &v7[OBJC_IVAR___SDDeferrableOperation_reasons];
    __n128 v25 = swift_beginAccess(&v7[OBJC_IVAR___SDDeferrableOperation_reasons], v32, 0LL, 0LL);
    if (*(void *)(*(void *)v24 + 16LL))
    {
      if ((v28 & 1) == 0) {
        v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 1;
      }
    }

    else if (v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] == 1)
    {
      if ((v28 & 1) != 0)
      {
        v7[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 0;
        (*(void (**)(uint64_t, __n128))&v7[OBJC_IVAR___SDDeferrableOperation_operation])(1LL, v25);
      }
    }

    else if ((v28 & 1) == 0)
    {
      (*(void (**)(void, __n128))&v7[OBJC_IVAR___SDDeferrableOperation_operation])(0LL, v25);
    }
  }

  else
  {
    __break(1u);
  }

void sub_1002BEFB8()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v1);
  uint64_t v69 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for Date(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v74 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_10064CB60);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v61 - v9);
  uint64_t v11 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v14 = (uint64_t *)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = *(void **)(v0 + OBJC_IVAR___SDDeferrableOperation_queue);
  *double v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  char v17 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    unint64_t v18 = (const char **)(v0 + OBJC_IVAR___SDDeferrableOperation_timedReasons);
    *(void *)&double v19 = swift_beginAccess(v0 + OBJC_IVAR___SDDeferrableOperation_timedReasons, v77, 0LL, 0LL).n128_u64[0];
    uint64_t v20 = *v18;
    uint64_t v21 = *((void *)*v18 + 8);
    uint64_t v63 = (uint64_t)(*v18 + 64);
    uint64_t v22 = 1LL << v20[32];
    uint64_t v23 = -1LL;
    if (v22 < 64) {
      uint64_t v23 = ~(-1LL << v22);
    }
    unint64_t v24 = v23 & v21;
    uint64_t v67 = v0 + OBJC_IVAR___SDDeferrableOperation_reasons;
    int64_t v64 = (unint64_t)(v22 + 63) >> 6;
    int64_t v62 = v64 - 1;
    uint64_t v71 = v20;
    swift_bridgeObjectRetain(v20, v19);
    int64_t v73 = 0LL;
    __n128 v25 = v70;
    uint64_t v68 = v10;
    uint64_t v65 = v3;
    uint64_t v66 = v4;
    while (!v24)
    {
      int64_t v40 = v73 + 1;
      if (__OFADD__(v73, 1LL))
      {
        __break(1u);
        goto LABEL_37;
      }

      if (v40 < v64)
      {
        unint64_t v41 = *(void *)(v63 + 8 * v40);
        if (v41) {
          goto LABEL_14;
        }
        int64_t v42 = v73 + 2;
        ++v73;
        if (v40 + 1 < v64)
        {
          unint64_t v41 = *(void *)(v63 + 8 * v42);
          if (v41) {
            goto LABEL_17;
          }
          int64_t v73 = v40 + 1;
          if (v40 + 2 < v64)
          {
            unint64_t v41 = *(void *)(v63 + 8 * (v40 + 2));
            if (v41)
            {
              v40 += 2LL;
              goto LABEL_14;
            }

            int64_t v42 = v40 + 3;
            int64_t v73 = v40 + 2;
            if (v40 + 3 < v64)
            {
              unint64_t v41 = *(void *)(v63 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  int64_t v40 = v42 + 1;
                  if (__OFADD__(v42, 1LL)) {
                    goto LABEL_38;
                  }
                  if (v40 >= v64)
                  {
                    int64_t v73 = v62;
                    goto LABEL_28;
                  }

                  unint64_t v41 = *(void *)(v63 + 8 * v40);
                  ++v42;
                  if (v41) {
                    goto LABEL_14;
                  }
                }
              }

id sub_1002BF690()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDDeferrableOperation(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002BF75C()
{
  return type metadata accessor for SDDeferrableOperation(0LL);
}

uint64_t type metadata accessor for SDDeferrableOperation(uint64_t a1)
{
  uint64_t result = qword_10064CB40;
  if (!qword_10064CB40) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDDeferrableOperation);
  }
  return result;
}

void sub_1002BF7A0(uint64_t a1)
{
  v4[0] = &unk_1004D3498;
  sub_10019F1DC(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    void v4[2] = (char *)&value witness table for () + 64;
    void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    void v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[6] = &unk_1004D34B0;
    v4[7] = &unk_1004D34C8;
    swift_updateClassMetadata2(a1, 256LL, 8LL, v4, a1 + 80);
  }

unint64_t sub_1002BF858()
{
  unint64_t result = qword_100646C80;
  if (!qword_100646C80)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_source);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100646C80);
  }

  return result;
}

uint64_t sub_1002BF894()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002BF8B8()
{
  return sub_1002BEBBC(*(void *)(v0 + 16));
}

uint64_t sub_1002BF8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002BF8D0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_1002BF8D8(void *a1)
{
  uint64_t v2 = *(void *)(sub_100183098(&qword_1006453B0) - 8);
  unint64_t v3 = (void *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    unint64_t v3 = (void *)sub_1002FAD28(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1002BF95C(v5);
  *a1 = v3;
}

void sub_1002BF95C(void *a1)
{
  uint64_t v135 = sub_100183098(&qword_1006453B0);
  uint64_t v128 = *(void *)(v135 - 8);
  uint64_t v3 = __chkstk_darwin(v135);
  uint64_t v125 = (uint64_t)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v136 = (uint64_t)&v121 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v133 = (uint64_t)&v121 - v8;
  __chkstk_darwin(v7);
  uint64_t v132 = (uint64_t)&v121 - v9;
  Swift::Int v10 = a1[1];
  Swift::Int v11 = _minimumMergeRunLength(_:)(v10);
  if (v11 >= v10)
  {
    if (v10 < 0) {
      goto LABEL_139;
    }
    if (v10) {
      sub_1002C035C(0LL, v10, 1LL, a1);
    }
    return;
  }

  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_147;
  }
  uint64_t v134 = a1;
  Swift::Int v123 = v11;
  uint64_t v129 = v1;
  if (v10 < 2)
  {
    id v16 = (char *)_swiftEmptyArrayStorage;
    unint64_t v127 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v128 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    uint64_t v122 = (const char *)_swiftEmptyArrayStorage;
    if (v10 != 1)
    {
      unint64_t v18 = _swiftEmptyArrayStorage[2];
LABEL_105:
      uint64_t v105 = v16;
      if (v18 >= 2)
      {
        uint64_t v112 = *v134;
        do
        {
          unint64_t v113 = v18 - 2;
          if (v18 < 2) {
            goto LABEL_134;
          }
          if (!v112) {
            goto LABEL_146;
          }
          uint64_t v114 = *(void *)&v105[16 * v113 + 32];
          uint64_t v115 = *(void *)&v105[16 * v18 + 24];
          uint64_t v116 = v129;
          sub_1002C059C( v112 + *(void *)(v128 + 72) * v114,  v112 + *(void *)(v128 + 72) * *(void *)&v105[16 * v18 + 16],  v112 + *(void *)(v128 + 72) * v115,  v127);
          uint64_t v129 = v116;
          if (v116) {
            break;
          }
          if (v115 < v114) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v105) & 1) == 0) {
            uint64_t v105 = sub_1002FAD00((uint64_t)v105);
          }
          if (v113 >= *((void *)v105 + 2)) {
            goto LABEL_136;
          }
          uint64_t v117 = &v105[16 * v113 + 32];
          *(void *)uint64_t v117 = v114;
          *((void *)v117 + 1) = v115;
          unint64_t v118 = *((void *)v105 + 2);
          if (v18 > v118) {
            goto LABEL_137;
          }
          memmove(&v105[16 * v18 + 16], &v105[16 * v18 + 32], 16 * (v118 - v18));
          *((void *)v105 + 2) = v118 - 1;
          unint64_t v18 = v118 - 1;
        }

        while (v118 > 2);
      }

LABEL_116:
      *(void *)&double v119 = swift_bridgeObjectRelease(v105, v121).n128_u64[0];
      uint64_t v120 = v122;
      *((void *)v122 + 2) = 0LL;
      swift_bridgeObjectRelease(v120, v119);
      return;
    }
  }

  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = static Array._allocateBufferUninitialized(minimumCapacity:)(v12 >> 1, v135);
    *(void *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
    uint64_t v15 = *(unsigned __int8 *)(v128 + 80);
    uint64_t v122 = (const char *)v14;
    unint64_t v127 = v14 + ((v15 + 32) & ~v15);
  }

  Swift::Int v17 = 0LL;
  id v16 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v19 = v17;
    Swift::Int v20 = v17 + 1;
    if (v17 + 1 >= v10)
    {
      ++v17;
      goto LABEL_24;
    }

    uint64_t v21 = *v134;
    uint64_t v22 = *(void *)(v128 + 72);
    uint64_t v23 = v132;
    sub_1001915A4(*v134 + v22 * v20, v132, &qword_1006453B0);
    uint64_t v24 = v21 + v22 * v17;
    uint64_t v25 = v133;
    sub_1001915A4(v24, v133, &qword_1006453B0);
    LODWORD(v131) = static Date.> infix(_:_:)(v23 + *(int *)(v135 + 48), v25 + *(int *)(v135 + 48));
    sub_100187100(v25, &qword_1006453B0);
    sub_100187100(v23, &qword_1006453B0);
    Swift::Int v17 = v19 + 2;
    uint64_t v130 = v21;
    uint64_t v137 = v22;
    if (v19 + 2 >= v10) {
      goto LABEL_21;
    }
    Swift::Int v126 = v19;
    uint64_t v26 = v16;
    uint64_t v27 = v22 * v20;
    uint64_t v28 = v21;
    Swift::Int v29 = v19 + 2;
    uint64_t v30 = v22 * v29;
    do
    {
      Swift::Int v31 = v10;
      uint64_t v32 = v132;
      sub_1001915A4(v28 + v30, v132, &qword_1006453B0);
      uint64_t v33 = v133;
      sub_1001915A4(v28 + v27, v133, &qword_1006453B0);
      int v34 = static Date.> infix(_:_:)(v32 + *(int *)(v135 + 48), v33 + *(int *)(v135 + 48));
      sub_100187100(v33, &qword_1006453B0);
      sub_100187100(v32, &qword_1006453B0);
      if (((v131 ^ v34) & 1) != 0)
      {
        id v16 = v26;
        Swift::Int v17 = v29;
        Swift::Int v19 = v126;
        Swift::Int v10 = v31;
        if ((v131 & 1) != 0) {
          goto LABEL_42;
        }
        goto LABEL_24;
      }

      v28 += v137;
      ++v29;
      Swift::Int v10 = v31;
    }

    while (v31 != v29);
    id v16 = v26;
    Swift::Int v17 = v31;
    Swift::Int v19 = v126;
LABEL_21:
    if ((v131 & 1) == 0) {
      goto LABEL_24;
    }
LABEL_42:
    uint64_t v51 = v137;
    if (v17 < v19) {
      goto LABEL_140;
    }
    if (v19 < v17) {
      break;
    }
LABEL_24:
    uint64_t v35 = v134;
    if (v17 < v10) {
      goto LABEL_25;
    }
LABEL_57:
    if (v17 < v19) {
      goto LABEL_133;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
      id v16 = sub_1002FA994(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
    }
    unint64_t v61 = *((void *)v16 + 2);
    unint64_t v60 = *((void *)v16 + 3);
    unint64_t v18 = v61 + 1;
    if (v61 >= v60 >> 1) {
      id v16 = sub_1002FA994((char *)(v60 > 1), v61 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v18;
    int64_t v62 = v16 + 32;
    uint64_t v63 = &v16[16 * v61 + 32];
    *(void *)uint64_t v63 = v19;
    *((void *)v63 + 1) = v17;
    if (v61)
    {
      while (1)
      {
        unint64_t v64 = v18 - 1;
        if (v18 >= 4)
        {
          uint64_t v69 = &v62[16 * v18];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_122;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_123;
          }
          unint64_t v76 = v18 - 2;
          uint64_t v77 = &v62[16 * v18 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_125;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_128;
          }
          if (v81 >= v72)
          {
            os_log_type_t v99 = &v62[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_132;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_94;
          }
        }

        else
        {
          if (v18 != 3)
          {
            uint64_t v93 = *((void *)v16 + 4);
            uint64_t v94 = *((void *)v16 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_88;
          }

          uint64_t v66 = *((void *)v16 + 4);
          uint64_t v65 = *((void *)v16 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }

        if ((v68 & 1) != 0) {
          goto LABEL_124;
        }
        unint64_t v76 = v18 - 2;
        uint64_t v82 = &v62[16 * v18 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_127;
        }
        uint64_t v88 = &v62[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_130;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_131;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_94:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_96;
        }

  __break(1u);
LABEL_117:
  __break(1u);
LABEL_118:
  __break(1u);
}

LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
  __break(1u);
}

uint64_t sub_1002C035C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v26 = a1;
  uint64_t v30 = sub_100183098(&qword_1006453B0);
  uint64_t v7 = __chkstk_darwin(v30);
  uint64_t v31 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v27 = (uint64_t)&v24 - v10;
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v29 = a3;
  uint64_t v25 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v33 = v15 * (v29 - 1);
    uint64_t v28 = v15;
    uint64_t v32 = v15 * v29;
LABEL_5:
    uint64_t v16 = 0LL;
    uint64_t v17 = v26;
    while (1)
    {
      uint64_t v18 = *a4;
      sub_1001915A4(v32 + v16 + *a4, (uint64_t)v14, &qword_1006453B0);
      uint64_t v19 = v27;
      sub_1001915A4(v33 + v16 + v18, v27, &qword_1006453B0);
      LOBYTE(v18) = static Date.> infix(_:_:)(&v14[*(int *)(v30 + 48)], v19 + *(int *)(v30 + 48));
      sub_100187100(v19, &qword_1006453B0);
      uint64_t result = sub_100187100((uint64_t)v14, &qword_1006453B0);
      if ((v18 & 1) == 0)
      {
LABEL_4:
        v33 += v28;
        v32 += v28;
        if (++v29 == v25) {
          return result;
        }
        goto LABEL_5;
      }

      uint64_t v20 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v21 = a4;
      uint64_t v22 = v20 + v32 + v16;
      uint64_t v23 = v20 + v33 + v16;
      sub_1001870BC(v22, v31, &qword_1006453B0);
      swift_arrayInitWithTakeFrontToBack(v22, v23, 1LL, v30);
      uint64_t result = sub_1001870BC(v31, v23, &qword_1006453B0);
      v16 -= v28;
      ++v17;
      a4 = v21;
      if (v29 == v17) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_1002C059C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v45 = sub_100183098(&qword_1006453B0);
  uint64_t v8 = __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  Swift::Int v11 = (char *)&v41 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }

  if (a2 - a1 == 0x8000000000000000LL && v13 == -1) {
    goto LABEL_62;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000LL && v13 == -1) {
    goto LABEL_63;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v48 = a1;
  unint64_t v47 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000LL) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v16, v45);
      }

      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4);
      }

      unint64_t v25 = a4 + v18;
      unint64_t v46 = a4 + v18;
      unint64_t v48 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v27 = -v13;
        unint64_t v42 = a4;
        unint64_t v43 = a1;
        do
        {
          unint64_t v28 = a3 + v27;
          sub_1001915A4(v25 + v27, (uint64_t)v11, &qword_1006453B0);
          unint64_t v29 = a2 + v27;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v44;
          sub_1001915A4(a2 + v27, v44, &qword_1006453B0);
          char v33 = static Date.> infix(_:_:)(v31 + *(int *)(v45 + 48), v32 + *(int *)(v45 + 48));
          uint64_t v34 = v32;
          Swift::Int v11 = (char *)v31;
          sub_100187100(v34, &qword_1006453B0);
          sub_100187100(v31, &qword_1006453B0);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v28, a2 + v27, 1LL, v45);
              unint64_t v37 = v42;
              unint64_t v36 = v43;
            }

            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v37 = v42;
              unint64_t v36 = v43;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront(v28);
              }
            }

            v48 += v27;
          }

          else
          {
            unint64_t v38 = v46;
            unint64_t v39 = v46 + v27;
            v46 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack(v28, v39, 1LL, v45);
              unint64_t v29 = a2;
              unint64_t v37 = v42;
              unint64_t v36 = v43;
            }

            else
            {
              BOOL v35 = v30 == v38;
              unint64_t v37 = v42;
              unint64_t v36 = v43;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront(v28);
              }
              unint64_t v29 = a2;
            }
          }

          unint64_t v25 = v46;
          if (v46 <= v37) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }

        while (v29 > v36);
      }

      goto LABEL_60;
    }
  }

  else if ((v15 & 0x8000000000000000LL) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v15, v45);
    }

    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4);
    }

    unint64_t v43 = a4 + v17;
    unint64_t v46 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = v44;
      do
      {
        sub_1001915A4(a2, (uint64_t)v11, &qword_1006453B0);
        sub_1001915A4(a4, v20, &qword_1006453B0);
        char v21 = static Date.> infix(_:_:)(&v11[*(int *)(v45 + 48)], v20 + *(int *)(v45 + 48));
        sub_100187100(v20, &qword_1006453B0);
        sub_100187100((uint64_t)v11, &qword_1006453B0);
        unint64_t v22 = v48;
        if ((v21 & 1) != 0)
        {
          unint64_t v23 = a2 + v13;
          if (v48 < a2 || v48 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack(v48, a2, 1LL, v45);
          }

          else if (v48 == a2)
          {
            unint64_t v22 = a2;
          }

          else
          {
            swift_arrayInitWithTakeBackToFront(v48);
          }
        }

        else
        {
          unint64_t v24 = v47 + v13;
          if (v48 < v47 || v48 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack(v48, v47, 1LL, v45);
          }

          else if (v48 != v47)
          {
            swift_arrayInitWithTakeBackToFront(v48);
          }

          unint64_t v47 = v24;
          unint64_t v23 = a2;
        }

        unint64_t v48 = v22 + v13;
        a4 = v47;
        if (v47 >= v43) {
          break;
        }
        a2 = v23;
      }

      while (v23 < a3);
    }

uint64_t sub_1002C0A50(unint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v5 = type metadata accessor for Date(255LL);
    uint64_t result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1002C0A90()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002C0AB4(char a1)
{
  return sub_1003164A0(a1, *(void *)(v1 + 16));
}

id sub_1002C0ABC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v10 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = (uint64_t)&v5[OBJC_IVAR___SDDeferrableOperation_preventUntilDate];
  uint64_t v14 = type metadata accessor for Date(0LL);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL);
  v15(v13, 1LL, 1LL, v14);
  uint64_t v16 = OBJC_IVAR___SDDeferrableOperation_mainTimer;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_mainTimer] = 0LL;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_queue] = a3;
  uint64_t v17 = &v5[OBJC_IVAR___SDDeferrableOperation_identifier];
  *(void *)uint64_t v17 = a1;
  *((void *)v17 + 1) = a2;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_timedReasons] = &_swiftEmptyDictionarySingleton;
  *(void *)&v5[OBJC_IVAR___SDDeferrableOperation_reasons] = &_swiftEmptySetSingleton;
  v15((uint64_t)v12, 1LL, 1LL, v14);
  swift_beginAccess(v13, v26, 33LL, 0LL);
  uint64_t v18 = v5;
  id v19 = a3;
  sub_100225008((uint64_t)v12, v13);
  swift_endAccess(v26);
  uint64_t v20 = &v18[OBJC_IVAR___SDDeferrableOperation_operation];
  *(void *)uint64_t v20 = v24;
  *((void *)v20 + 1) = a5;
  v18[OBJC_IVAR___SDDeferrableOperation_pendingOperation] = 0;
  uint64_t v21 = *(void *)&v5[v16];
  *(void *)&v5[v16] = 0LL;
  swift_retain(a5);

  swift_unknownObjectRelease(v21);
  unint64_t v22 = (objc_class *)type metadata accessor for SDDeferrableOperation(0LL);
  v25.receiver = v18;
  v25.super_class = v22;
  return objc_msgSendSuper2(&v25, "init");
}

uint64_t sub_1002C0C6C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064CB80);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064CB80);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002C0CFC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  uint64_t v2 = sub_100183098(&qword_1006457B8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL);
  v3(v1, 1LL, 1LL, v2);
  v3(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation, 1LL, 1LL, v2);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingSucceeded) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = 0LL;
  uint64_t v4 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL);
  v6(v4, 1LL, 1LL, v5);
  uint64_t v7 = (int *)type metadata accessor for RangingMetrics(0LL);
  v6(v4 + v7[5], 1LL, 1LL, v5);
  v6(v4 + v7[6], 1LL, 1LL, v5);
  *(_BYTE *)(v4 + v7[7]) = 0;
  v6(v4 + v7[8], 1LL, 1LL, v5);
  v6(v4 + v7[9], 1LL, 1LL, v5);
  uint64_t v8 = OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock;
  uint64_t v9 = sub_100183098(&qword_10064EED0);
  uint64_t v10 = swift_allocObject(v9, 20LL, 7LL);
  *(_DWORD *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  *(void *)(v0 + v8) = v10;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_1002C5938();
  *(void *)(v0 + 24) = v11;
  uint64_t v12 = type metadata accessor for ResponseTimer();
  uint64_t v13 = (void *)swift_allocObject(v12, 40LL, 7LL);
  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer) = v13;
  v13[2] = v0;
  v13[3] = &off_1005D8E48;
  v13[4] = 0LL;
  swift_retain(v0);
  sub_10008AAE4(1LL);
  return v0;
}

uint64_t sub_1002C0EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[47] = a3;
  v4[48] = v3;
  v4[45] = a1;
  v4[46] = a2;
  v4[49] = *v3;
  uint64_t v5 = sub_100183098(&qword_100646560);
  v4[50] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  v4[51] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002C0F38, 0LL, 0LL);
}

uint64_t sub_1002C0F38()
{
  uint64_t v1 = *(const char **)(v0 + 360);
  *(void *)(v0 + 352) = v1;
  strcpy((char *)(v0 + 328), "AWDL_INFO_SELF");
  *(_BYTE *)(v0 + 343) = -18;
  swift_bridgeObjectRetain(v1);
  AnyHashable.init<A>(_:)((void *)(v0 + 56), v0 + 328, &type metadata for String, &protocol witness table for String);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v3 = sub_100089EF4(isa);

  int64_t v62 = (const char **)(v0 + 352);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 360);
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v3,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

    *(void *)(v0 + 152) = sub_100183098((uint64_t *)&unk_100645190);
    *(void *)(v0 + 128) = v5;
    sub_100186D8C((_OWORD *)(v0 + 128), (_OWORD *)(v0 + 192));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
    uint64_t v63 = v4;
    sub_1003B2590((_OWORD *)(v0 + 192), v0 + 56, isUniquelyReferenced_nonNull_native);
    *(void *)(v0 + 352) = v4;
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    sub_10019154C(v0 + 56);
  }

  else
  {
    sub_1001C9270(v0 + 56, (_OWORD *)(v0 + 96));
    sub_10019154C(v0 + 56);
    sub_100187100(v0 + 96, (uint64_t *)&unk_100646550);
  }

  uint64_t v7 = (void *)(v0 + 16);
  uint64_t v8 = v0 + 296;
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064CB80);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v59 = swift_slowAlloc(32LL, -1LL);
    uint64_t v63 = v59;
    *(_DWORD *)uint64_t v13 = 136315138;
    *(void *)&double v14 = swift_beginAccess(v62, v0 + 224, 0LL, 0LL).n128_u64[0];
    uint64_t v15 = *v62;
    swift_bridgeObjectRetain(*v62, v14);
    uint64_t v17 = Dictionary.description.getter( v16,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease(v15);
    *(void *)(v0 + 344) = sub_10018CDB4(v17, v19, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 344, v62, v13 + 4, v13 + 12);
    uint64_t v20 = (const char *)v19;
    uint64_t v7 = (void *)(v0 + 16);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "combinedAWDLInfo = %s", v13, 0xCu);
    uint64_t v8 = v0 + 296;
    swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v21 = *(void *)(v0 + 360);
  *(void *)(v0 + 296) = 0xD000000000000013LL;
  *(void *)(v0 + 304) = 0x8000000100509410LL;
  AnyHashable.init<A>(_:)(v7, v8, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v21 + 16) && (unint64_t v22 = sub_1003AD50C((uint64_t)v7), (v23 & 1) != 0))
  {
    sub_100187058(*(void *)(*(void *)(v0 + 360) + 56LL) + 32 * v22, v0 + 160);
  }

  else
  {
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
  }

  sub_10019154C((uint64_t)v7);
  if (!*(void *)(v0 + 184))
  {
    sub_100187100(v0 + 160, (uint64_t *)&unk_100646550);
    goto LABEL_17;
  }

  if ((swift_dynamicCast(v0 + 312, v0 + 160, (char *)&type metadata for Any + 8, &type metadata for Data, 6LL) & 1) == 0)
  {
LABEL_17:
    id v26 = 0LL;
    goto LABEL_18;
  }

  uint64_t v24 = *(void *)(v0 + 312);
  unint64_t v25 = *(void *)(v0 + 320);
  id v26 = [objc_allocWithZone((Class)SDAutoUnlockRangingPeer) init];
  if (v26)
  {
    uint64_t v28 = *(void *)(v0 + 368);
    unint64_t v27 = *(void *)(v0 + 376);
    id v29 = objc_allocWithZone((Class)&OBJC_CLASS____NIRangingPeer);
    id v30 = v26;
    sub_10019BA8C(v24, v25);
    sub_10019BA8C(v28, v27);
    Class v31 = Data._bridgeToObjectiveC()().super.isa;
    Class v32 = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B20(v28, v27);
    id v33 = [v29 initWithMacAddressAsData:v31 secureRangingKeyID:v32];
    sub_100189B20(v24, v25);

    [v30 setNiRangingPeer:v33];
    id v34 = v30;
    Class v35 = Data._bridgeToObjectiveC()().super.isa;
    [v34 setMacAddressData:v35];
    sub_100189B20(v24, v25);
  }

  else
  {
    sub_100189B20(v24, v25);
  }

uint64_t sub_1002C1784()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 464LL);
  *(void *)(*(void *)v1 + 472LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    id v3 = sub_1002C1880;
  }
  else {
    id v3 = sub_1002C17E8;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002C17E8()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void **)(v0 + 456);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v5 = *(void **)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 408);
  swift_release(*(void *)(v0 + 424));
  swift_release(v4);
  swift_release(v3);
  swift_release(v1);

  swift_bridgeObjectRelease(*(void *)(v0 + 352));
  uint64_t v8 = *(unsigned __int8 *)(v0 + 480);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
}

uint64_t sub_1002C1880()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void **)(v0 + 456);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v5 = *(void **)(v0 + 416);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v6 = *(void *)(v0 + 408);
  swift_release(*(void *)(v0 + 424));
  swift_release(v4);
  swift_release(v3);
  swift_release(v1);

  swift_bridgeObjectRelease(*(void *)(v0 + 352));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

uint64_t sub_1002C1914(uint64_t (*a1)(uint64_t))
{
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064CB80);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting wifi request", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  return a1(1LL);
}

uint64_t sub_1002C19FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100183098(&qword_10064CE00);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v40[-v9];
  uint64_t v11 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v11);
  uint64_t v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = a3 + 16;
  swift_beginAccess(a3 + 16, v43, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a3 + 16);
  if (result)
  {
    uint64_t v16 = result;
    if (qword_100644110 != -1) {
      swift_once(&qword_100644110, sub_1002C0C6C);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_10064CB80);
    unint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "AWDL started", v21, 2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    if (a2)
    {
      char v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.error.getter(v23);
      if (os_log_type_enabled(v23, v24))
      {
        unint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        *(_DWORD *)unint64_t v25 = 134217984;
        uint64_t v41 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v25 + 4, v25 + 12);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "AWDL failed to start: %ld", v25, 0xCu);
        swift_slowDealloc(v25, -1LL, -1LL);
      }

      uint64_t v26 = *(void *)(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
      swift_retain(v26);
      sub_1003F9D64();
      swift_release(v26);
      unint64_t v27 = *(os_unfair_lock_s **)(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock);
      swift_retain(v27);
      os_unfair_lock_lock(v27 + 4);
      sub_1002737FC(v28, (uint64_t (*)(void))sub_1002C5BF0);
      os_unfair_lock_unlock(v27 + 4);
      swift_release(v27);
      sub_1002C5C08((uint64_t)v10, (uint64_t)v8);
      uint64_t v29 = sub_100183098(&qword_1006457B8);
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v8, 1LL, v29) == 1)
      {
        sub_100187100((uint64_t)v10, &qword_10064CE00);
        swift_release(v16);
        return sub_100187100((uint64_t)v8, &qword_10064CE00);
      }

      else
      {
        unint64_t v37 = sub_100187014();
        uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0LL, 0LL);
        *(_DWORD *)uint64_t v39 = 10;
        *(void *)(v39 + 8) = 0xD000000000000014LL;
        *(void *)(v39 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x80000001005094A0LL;
        uint64_t v41 = v38;
        CheckedContinuation.resume(throwing:)(&v41, v29);
        swift_release(v16);
        sub_100187100((uint64_t)v10, &qword_10064CE00);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v30 + 8))(v8, v29);
      }
    }

    else
    {
      swift_beginAccess(v14, &v41, 0LL, 0LL);
      uint64_t Strong = swift_weakLoadStrong(v14);
      if (Strong)
      {
        uint64_t v32 = Strong;
        Date.init()(Strong);
        swift_release(v16);
        uint64_t v33 = type metadata accessor for Date(0LL);
        (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v13, 0LL, 1LL, v33);
        uint64_t v34 = v32 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
        swift_beginAccess( v32 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics,  v40,  33LL,  0LL);
        uint64_t v35 = type metadata accessor for RangingMetrics(0LL);
        sub_1001C9860((uint64_t)v13, v34 + *(int *)(v35 + 20), &qword_1006457E8);
        swift_endAccess(v40);
        uint64_t v36 = v32;
      }

      else
      {
        uint64_t v36 = v16;
      }

      return swift_release(v36);
    }
  }

  return result;
}

uint64_t sub_1002C1E44(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = a2 + 16;
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_10064CB80);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "peer found", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  swift_beginAccess(v7, v24, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    uint64_t v14 = Strong;
    Date.init()(Strong);
    uint64_t v15 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v6, 0LL, 1LL, v15);
    uint64_t v16 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v14 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v23, 33LL, 0LL);
    uint64_t v17 = type metadata accessor for RangingMetrics(0LL);
    sub_1001C9860((uint64_t)v6, v16 + *(int *)(v17 + 24), &qword_1006457E8);
    swift_endAccess(v23);
    swift_release(v14);
  }

  swift_beginAccess(v7, v23, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v7);
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = result + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess( result + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics,  v22,  1LL,  0LL);
    *(_BYTE *)(v20 + *(int *)(type metadata accessor for RangingMetrics(0LL) + 28)) = a1 & 1;
    return swift_release(v19);
  }

  return result;
}

uint64_t sub_1002C2060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v7);
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  a1 += 16LL;
  swift_beginAccess(a1, v19, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a1);
  if (result)
  {
    uint64_t v11 = result;
    Date.init()(result);
    uint64_t v12 = type metadata accessor for Date(0LL);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v9, 0LL, 1LL, v12);
    uint64_t v13 = v11 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v18, 33LL, 0LL);
    uint64_t v14 = type metadata accessor for RangingMetrics(0LL);
    sub_1001C9860((uint64_t)v9, v13 + *(int *)(v14 + 32), &qword_1006457E8);
    swift_endAccess(v18);
    uint64_t v15 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v6, 1LL, 1LL, v15);
    uint64_t v16 = (void *)swift_allocObject(&unk_1005D9020, 48LL, 7LL);
    void v16[2] = 0LL;
    v16[3] = 0LL;
    v16[4] = v11;
    void v16[5] = a2;
    swift_retain(v11);
    uint64_t v17 = sub_1001B37E8((uint64_t)v6, (uint64_t)&unk_10064CE28, (uint64_t)v16);
    swift_release(v17);
    return swift_release(v11);
  }

  return result;
}

uint64_t sub_1002C2210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_1002C2228, 0LL, 0LL);
}

uint64_t sub_1002C2228()
{
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064CB80);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Ranging started", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = v0[2];

  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  v0[3] = v7;
  uint64_t v8 = dword_100653FAC;
  swift_retain(v7);
  uint64_t v9 = (void *)swift_task_alloc(v8);
  v0[4] = v9;
  void *v9 = v0;
  v9[1] = sub_1002C5F10;
  return sub_1003F9F90(10LL);
}

uint64_t sub_1002C2344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = a3 + 16;
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_10064CB80);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Ranging completed", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  swift_beginAccess(v9, v23, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    uint64_t v16 = Strong;
    Date.init()(Strong);
    uint64_t v17 = type metadata accessor for Date(0LL);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v8, 0LL, 1LL, v17);
    uint64_t v18 = v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v16 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v22, 33LL, 0LL);
    uint64_t v19 = type metadata accessor for RangingMetrics(0LL);
    sub_1001C9860((uint64_t)v8, v18 + *(int *)(v19 + 36), &qword_1006457E8);
    swift_endAccess(v22);
    swift_release(v16);
  }

  swift_beginAccess(v9, v22, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v9);
  if (result)
  {
    uint64_t v21 = result;
    sub_1002C37FC(a1, a2);
    return swift_release(v21);
  }

  return result;
}

void sub_1002C2548()
{
}

uint64_t sub_1002C2554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_1002C256C, 0LL, 0LL);
}

uint64_t sub_1002C256C()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  v0[3] = v1;
  uint64_t v2 = dword_100653FAC;
  swift_retain(v1);
  uint64_t v3 = (void *)swift_task_alloc(v2);
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002C25D4;
  return sub_1003F9F90(10LL);
}

uint64_t sub_1002C25D4()
{
  uint64_t v1 = *(void *)(*v0 + 24);
  uint64_t v3 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 32));
  swift_release(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1002C2624(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                          + 16LL);
  os_unfair_lock_lock(v2);
  sub_1002737FC(v3, sub_1002C5E2C);
  os_unfair_lock_unlock(v2);
}

uint64_t sub_1002C2684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064CE00);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v15[-v8 - 8];
  uint64_t v10 = sub_100183098(&qword_1006457B8);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0LL, 1LL, v10);
  sub_1002C5CBC((uint64_t)v9, (uint64_t)v7);
  uint64_t v12 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  swift_beginAccess( a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished,  v15,  33LL,  0LL);
  sub_1001C9860((uint64_t)v7, v12, &qword_10064CE00);
  return swift_endAccess(v15);
}

uint64_t sub_1002C27A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  return swift_task_switch(sub_1002C27C4, 0LL, 0LL);
}

uint64_t sub_1002C27C4()
{
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064CB80);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Scheduling ranging request as responder", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(const char **)(v0 + 176);

  strcpy((char *)(v0 + 152), "AWDL_INFO_SELF");
  *(_BYTE *)(v0 + 167) = -18;
  *(void *)(v0 + 168) = v6;
  swift_bridgeObjectRetain(v6);
  AnyHashable.init<A>(_:)((void *)(v0 + 16), v0 + 152, &type metadata for String, &protocol witness table for String);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v8 = sub_100089EF4(isa);

  if (v8)
  {
    uint64_t v9 = *(const char **)(v0 + 176);
    uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v8,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

    *(void *)(v0 + 80) = sub_100183098((uint64_t *)&unk_100645190);
    *(void *)(v0 + 56) = v10;
    sub_100186D8C((_OWORD *)(v0 + 56), (_OWORD *)(v0 + 88));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v9);
    sub_1003B2590((_OWORD *)(v0 + 88), v0 + 16, isUniquelyReferenced_nonNull_native);
    uint64_t v12 = v9;
    *(void *)(v0 + 168) = v9;
    swift_bridgeObjectRelease((const char *)0x8000000000000000LL);
    sub_10019154C(v0 + 16);
  }

  else
  {
    sub_1001C9270(v0 + 16, (_OWORD *)(v0 + 120));
    sub_10019154C(v0 + 16);
    sub_100187100(v0 + 120, (uint64_t *)&unk_100646550);
    uint64_t v12 = *(const char **)(v0 + 168);
  }

  unint64_t v14 = *(void *)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 200);
  uint64_t v16 = *(const char **)(v0 + 176);
  uint64_t v15 = *(void *)(v0 + 184);
  uint64_t v17 = swift_allocObject(&unk_1005D8E68, 24LL, 7LL);
  swift_weakInit(v17 + 16);
  uint64_t v18 = (void *)swift_allocObject(&unk_1005D8E90, 48LL, 7LL);
  *(void *)(v0 + 208) = v18;
  v18[2] = v17;
  v18[3] = v16;
  v18[4] = v15;
  v18[5] = v14;
  objc_allocWithZone((Class)&OBJC_CLASS___SDAutoUnlockWiFiRequest);
  swift_bridgeObjectRetain(v16);
  sub_10019BA8C(v15, v14);
  swift_retain(v18);
  id v19 = sub_1002C54EC( v12,  0,  0LL,  (uint64_t)sub_1002C5CA8,  (uint64_t)v18,  sub_1002C34A8,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1002C35C4,  0LL);
  *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v19;
  [v19 setRangingTimeout:5];
  uint64_t v20 = *(void **)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  *(void *)(v13 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest) = v19;
  id v21 = v19;

  uint64_t v22 = swift_task_alloc(32LL);
  *(void *)(v0 + 224) = v22;
  *(void *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  *(void *)(v22 + 24) = v21;
  char v23 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(void *)(v0 + 232) = v23;
  void *v23 = v0;
  v23[1] = sub_1002C2B68;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 248,  0LL,  0LL,  0xD00000000000003FLL,  0x8000000100509380LL,  sub_1002C5CB4,  v22,  &type metadata for Bool);
}

uint64_t sub_1002C2B68()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 232);
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    os_log_type_t v4 = sub_1002C2C10;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 224));
    os_log_type_t v4 = sub_1002C2BD4;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002C2BD4()
{
  uint64_t v1 = *(void **)(v0 + 216);
  swift_release(*(void *)(v0 + 208));

  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 248));
}

uint64_t sub_1002C2C10()
{
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  swift_release(*(void *)(v0 + 208));

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

void sub_1002C2C58( void (*a1)(void), char *a2, uint64_t a3, void (*a4)(void), uint64_t a5, unint64_t a6)
{
  uint64_t v87 = a5;
  unint64_t v88 = a6;
  uint64_t v91 = a4;
  uint64_t v9 = sub_100183098(&qword_10064CE00);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v83 - v13;
  uint64_t v15 = sub_100183098(&qword_1006457B8);
  uint64_t v89 = *(void *)(v15 - 8);
  uint64_t v90 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v86 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  id v19 = (char *)&v83 - v18;
  uint64_t v20 = a3 + 16;
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v21 = type metadata accessor for Logger(0LL);
  uint64_t v22 = sub_100186DE4(v21, (uint64_t)qword_10064CB80);
  char v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    unint64_t v25 = a2;
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Starting wifi request", v26, 2u);
    unint64_t v27 = v26;
    a2 = v25;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  swift_beginAccess(v20, v97, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v20);
  if (!Strong) {
    goto LABEL_18;
  }
  uint64_t v29 = (char *)Strong;
  uint64_t v30 = *(void **)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (!v30)
  {
    swift_release(Strong);
LABEL_18:
    a1(0LL);
    return;
  }

  unint64_t v92 = 0xD000000000000013LL;
  unint64_t v93 = 0x8000000100509410LL;
  id v31 = v30;
  AnyHashable.init<A>(_:)(v94, &v92, &type metadata for String, &protocol witness table for String);
  uint64_t v32 = v91;
  if (*((void *)v91 + 2) && (unint64_t v33 = sub_1003AD50C((uint64_t)v94), (v34 & 1) != 0))
  {
    sub_100187058(*((void *)v32 + 7) + 32 * v33, (uint64_t)&v95);
  }

  else
  {
    __int128 v95 = 0u;
    __int128 v96 = 0u;
  }

  sub_10019154C((uint64_t)v94);
  id v85 = v31;
  if (*((void *)&v96 + 1))
  {
    if ((swift_dynamicCast(&v92, &v95, (char *)&type metadata for Any + 8, &type metadata for Data, 6LL) & 1) != 0)
    {
      uint64_t v86 = a2;
      uint64_t v91 = a1;
      uint64_t v84 = v29;
      uint64_t v35 = v92;
      unint64_t v36 = v93;
      id v83 = [objc_allocWithZone((Class)SDAutoUnlockRangingPeer) init];
      id v37 = objc_allocWithZone((Class)&OBJC_CLASS____NIRangingPeer);
      sub_10019BA8C(v35, v36);
      uint64_t v38 = v87;
      unint64_t v39 = v88;
      sub_10019BA8C(v87, v88);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      Class v41 = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v42 = v38;
      uint64_t v43 = v83;
      unint64_t v44 = v39;
      id v45 = v85;
      sub_100189B20(v42, v44);
      id v46 = [v37 initWithMacAddressAsData:isa secureRangingKeyID:v41];
      uint64_t v87 = v35;
      unint64_t v88 = v36;
      sub_100189B20(v35, v36);

      [v43 setNiRangingPeer:v46];
      id v47 = [(id)objc_opt_self(SDAutoUnlockWiFiManager) sharedManager];
      uint64_t v48 = v43;
      [v47 updateWiFiRequest:v45 setRangingPeer:v43];

      uint64_t v49 = v84;
      uint64_t v50 = (uint64_t)&v84[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation];
      swift_beginAccess( &v84[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation],  v94,  0LL,  0LL);
      sub_1002C5C08(v50, (uint64_t)v14);
      uint64_t v52 = v89;
      uint64_t v51 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v14, 1LL, v90) == 1)
      {
        uint64_t v53 = v87;
        uint64_t v54 = sub_100187100((uint64_t)v14, &qword_10064CE00);
        uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
        os_log_type_t v56 = static os_log_type_t.error.getter(v55);
        if (os_log_type_enabled(v55, v56))
        {
          uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v57 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v55,  v56,  "No continuation. ScheduleRangingRequestAsResponder is stuck. Attempting to clear current request",  v57,  2u);
          swift_slowDealloc(v57, -1LL, -1LL);
        }

        v91(0LL);
        sub_100189B20(v53, v88);
        swift_release(v49);
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v19, v14, v51);
        LOBYTE(v95) = 1;
        CheckedContinuation.resume(returning:)(&v95, v51);
        v91(1LL);
        swift_release(v49);

        sub_100189B20(v87, v88);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v19, v51);
      }

      return;
    }
  }

  else
  {
    sub_100187100((uint64_t)&v95, (uint64_t *)&unk_100646550);
  }

  uint64_t v58 = swift_bridgeObjectRetain_n(v32, 2LL);
  uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
  os_log_type_t v60 = static os_log_type_t.error.getter(v59);
  int v61 = v60;
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v62 = swift_slowAlloc(12LL, -1LL);
    LODWORD(v88) = v61;
    uint64_t v63 = (uint8_t *)v62;
    uint64_t v87 = swift_slowAlloc(32LL, -1LL);
    v94[0] = v87;
    *(_DWORD *)uint64_t v63 = 136315138;
    id v83 = v63 + 4;
    swift_bridgeObjectRetain((const char *)v32);
    uint64_t v84 = (char *)&type metadata for Any + 8;
    uint64_t v65 = a1;
    uint64_t v66 = v29;
    uint64_t v67 = Dictionary.description.getter( v64,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    uint64_t v69 = v68;
    swift_bridgeObjectRelease((const char *)v32);
    uint64_t v70 = v67;
    uint64_t v29 = v66;
    a1 = v65;
    *(void *)&__int128 v95 = sub_10018CDB4(v70, (unint64_t)v69, v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, (char *)&v95 + 8, v83, v63 + 12);
    swift_bridgeObjectRelease_n(v32, 2LL);
    swift_bridgeObjectRelease(v69);
    _os_log_impl( (void *)&_mh_execute_header,  v59,  (os_log_type_t)v88,  "Could not find peer mac address in remote AWDL info: %s",  v63,  0xCu);
    uint64_t v71 = v87;
    swift_arrayDestroy(v87, 1LL, v84);
    swift_slowDealloc(v71, -1LL, -1LL);
    swift_slowDealloc(v63, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v32, 2LL);
  }

  uint64_t v73 = v89;
  uint64_t v72 = v90;
  uint64_t v74 = (uint64_t)&v29[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation];
  swift_beginAccess( &v29[OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation],  v94,  0LL,  0LL);
  sub_1002C5C08(v74, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v12, 1LL, v72))
  {
    sub_100187100((uint64_t)v12, &qword_10064CE00);
  }

  else
  {
    BOOL v75 = v86;
    (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v86, v12, v72);
    sub_100187100((uint64_t)v12, &qword_10064CE00);
    *(void *)&__int128 v95 = 0LL;
    *((void *)&v95 + 1) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(55LL);
    v76._countAndFlagsBits = 0xD000000000000035LL;
    v76._object = (void *)0x8000000100509430LL;
    String.append(_:)(v76);
    v77._countAndFlagsBits = Dictionary.description.getter( v91,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    object = (const char *)v77._object;
    String.append(_:)(v77);
    swift_bridgeObjectRelease(object);
    __int128 v79 = v95;
    unint64_t v80 = sub_100187014();
    uint64_t v81 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v80, 0LL, 0LL);
    *(_DWORD *)uint64_t v82 = 1;
    *(_OWORD *)(v82 + 8) = v79;
    *(void *)&__int128 v95 = v81;
    CheckedContinuation.resume(throwing:)(&v95, v72);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v72);
  }

  a1(0LL);
  swift_release(v29);
}

void sub_1002C34A8(uint64_t a1, uint64_t a2)
{
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_10064CB80);
  oslog = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v6 = 134217984;
    uint64_t v8 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9, v6 + 4, v6 + 12);
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "AWDL started (error = %ld)", v6, 0xCu);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
  }

void sub_1002C35C4()
{
}

void sub_1002C35D0(const char *a1)
{
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064CB80);
  oslog = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, a1, v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }
}

void sub_1002C36A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_10064CE00);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v7);
  uint64_t v11 = &v17[-v10 - 8];
  uint64_t v12 = sub_100183098(&qword_1006457B8);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v12);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0LL, 1LL, v12);
  sub_1002C5CBC((uint64_t)v11, (uint64_t)v9);
  uint64_t v14 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingStartedContinuation;
  swift_beginAccess(v14, v17, 33LL, 0LL);
  sub_1001C9860((uint64_t)v9, v14, &qword_10064CE00);
  swift_endAccess(v17);
  id v15 = [(id)objc_opt_self(SDAutoUnlockWiFiManager) sharedManager];
  [v15 scheduleWiFiRequest:a3];
}

uint64_t sub_1002C37FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100183098(&qword_10064CE00);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = &v43[-v11];
  __chkstk_darwin(v10);
  uint64_t v14 = &v43[-v13];
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer);
  swift_retain(v15);
  sub_1003F9D64();
  swift_release(v15);
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest;
  uint64_t v17 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (v17)
  {
    uint64_t v18 = (void *)objc_opt_self(&OBJC_CLASS___SDAutoUnlockWiFiManager);
    id v19 = v17;
    id v20 = [v18 sharedManager];
    [v20 cancelWiFiRequest:v19];

    uint64_t v21 = *(void **)(v3 + v16);
    *(void *)(v3 + vswift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  }

  uint64_t v22 = (os_unfair_lock_s *)(*(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                           + 16LL);
  os_unfair_lock_lock(v22);
  sub_1002737FC(v23, (uint64_t (*)(void))sub_1002C5BF0);
  os_unfair_lock_unlock(v22);
  if (!a2 && a1)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a1);
    }

    else
    {
      if (!*(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        __break(1u);
        goto LABEL_25;
      }

      id v24 = *(id *)(a1 + 32);
    }

    unint64_t v25 = v24;
    unsigned int v26 = [v24 shouldUnlock];

    if (v26)
    {
      if (qword_100644110 == -1)
      {
LABEL_10:
        uint64_t v27 = type metadata accessor for Logger(0LL);
        uint64_t v28 = sub_100186DE4(v27, (uint64_t)qword_10064CB80);
        uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          id v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)id v31 = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "Peer in range", v31, 2u);
          swift_slowDealloc(v31, -1LL, -1LL);
        }

        sub_1002C5C08((uint64_t)v14, (uint64_t)v12);
        uint64_t v32 = sub_100183098(&qword_1006457B8);
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v33 + 48))(v12, 1LL, v32) == 1)
        {
          sub_100187100((uint64_t)v14, &qword_10064CE00);
          uint64_t v34 = (uint64_t)v12;
          return sub_100187100(v34, &qword_10064CE00);
        }

        char v44 = 1;
        CheckedContinuation.resume(returning:)(&v44, v32);
        sub_100187100((uint64_t)v14, &qword_10064CE00);
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v33 + 8))(v12, v32);
      }

uint64_t sub_1002C3C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100183098(&qword_10064CE00);
  __chkstk_darwin(v4);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_rangingOperationFinished;
  swift_beginAccess(v7, v11, 0LL, 0LL);
  sub_1002C5C08(v7, a2);
  uint64_t v8 = sub_100183098(&qword_1006457B8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v6, 1LL, 1LL, v8);
  swift_beginAccess(v7, v10, 33LL, 0LL);
  sub_1001C9860((uint64_t)v6, v7, &qword_10064CE00);
  return swift_endAccess(v10);
}

uint64_t sub_1002C3D48()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_10064CE00);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v21 - v6;
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_10064CB80);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Ranging timer fired", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock)
                           + 16LL);
  os_unfair_lock_lock(v13);
  sub_1002737FC(v14, (uint64_t (*)(void))sub_1002C5BF0);
  os_unfair_lock_unlock(v13);
  sub_1002C5C08((uint64_t)v7, (uint64_t)v5);
  uint64_t v15 = sub_100183098(&qword_1006457B8);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1LL, v15) == 1)
  {
    sub_100187100((uint64_t)v5, &qword_10064CE00);
  }

  else
  {
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 24;
    *(void *)(v19 + 8) = 0x20676E69676E6152LL;
    *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = 0xEF74756F656D6974LL;
    v21[0] = v18;
    CheckedContinuation.resume(throwing:)(v21, v15);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
  }

  sub_1002C3F90();
  return sub_100187100((uint64_t)v7, &qword_10064CE00);
}

void sub_1002C3F90()
{
  uint64_t v1 = v0;
  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064CB80);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "invalidating wifi request", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_wifiRequest);
  if (v7)
  {
    uint64_t v8 = (void *)objc_opt_self(&OBJC_CLASS___SDAutoUnlockWiFiManager);
    id v10 = v7;
    id v9 = [v8 sharedManager];
    [v9 cancelWiFiRequest:v10];

    sub_10008AAE4(0LL);
  }

uint64_t sub_1002C40E0()
{
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_responseTimer));
  sub_1002C5ED4(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics);
  swift_release(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_lock));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1002C4180()
{
  return type metadata accessor for SDAuthenticationRangingSession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationRangingSession(uint64_t a1)
{
  return sub_1001A4AD0( a1,  (uint64_t *)&unk_10064CBC8,  (uint64_t)&nominal type descriptor for SDAuthenticationRangingSession);
}

void sub_1002C419C(uint64_t a1)
{
  uint64_t v6 = &unk_1004D3530;
  sub_1002C4254(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v7 = *(void *)(v2 - 8) + 64LL;
    uint64_t v8 = v7;
    id v9 = &unk_1004D3548;
    id v10 = &unk_1004D3560;
    os_log_type_t v11 = (char *)&value witness table for Builtin.NativeObject + 64;
    uint64_t v4 = type metadata accessor for RangingMetrics(319LL);
    if (v5 <= 0x3F)
    {
      uint64_t v12 = *(void *)(v4 - 8) + 64LL;
      uint64_t v13 = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_updateClassMetadata2(a1, 256LL, 8LL, &v6, a1 + 80);
    }
  }

void sub_1002C4254(uint64_t a1)
{
  if (!qword_10064CBE8)
  {
    uint64_t v2 = sub_100183124(&qword_1006457B8);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_10064CBE8);
    }
  }

uint64_t type metadata accessor for RangingMetrics(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064CDB8, (uint64_t)&nominal type descriptor for RangingMetrics);
}

uint64_t *sub_1002C42C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    id v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1LL, v7))
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1LL, v7))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0LL, 1LL, v7);
    }

    uint64_t v16 = a3[6];
    unint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1LL, v7))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0LL, 1LL, v7);
    }

    uint64_t v20 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1LL, v7))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0LL, 1LL, v7);
    }

    uint64_t v24 = a3[9];
    unint64_t v25 = (char *)a1 + v24;
    unsigned int v26 = (char *)a2 + v24;
    if (v9((uint64_t *)v26, 1LL, v7))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t sub_1002C456C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  if (!v6(v7, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v6(v8, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[8];
  if (!v6(v9, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v10 = a1 + a2[9];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v10, 1LL, v4);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  return result;
}

char *sub_1002C4694(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1LL, v6))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
  }

  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(v24, 1LL, v6))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  }

  return a1;
}

char *sub_1002C4914(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1LL, v6);
  int v22 = v8(v20, 1LL, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  a1[a3[7]] = a2[a3[7]];
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  unsigned int v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1LL, v6);
  int v28 = v8(v26, 1LL, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[9];
  id v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1LL, v6);
  int v34 = v8(v32, 1LL, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }

  if (v34)
  {
LABEL_30:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
  return a1;
}

char *sub_1002C4CF4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  uint64_t v18 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1LL, v6))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
  }

  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(v24, 1LL, v6))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  }

  return a1;
}

char *sub_1002C4F74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1LL, v6);
  int v22 = v8(v20, 1LL, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v25 = &a1[v24];
  unsigned int v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1LL, v6);
  int v28 = v8(v26, 1LL, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[9];
  id v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1LL, v6);
  int v34 = v8(v32, 1LL, v6);
  if (!v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
    goto LABEL_30;
  }

  if (v34)
  {
LABEL_30:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
  return a1;
}

uint64_t sub_1002C5350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C535C);
}

uint64_t sub_1002C535C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2) {
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1002C53EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C53F8);
}

uint64_t sub_1002C53F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100183098(&qword_1006457E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  return result;
}

void sub_1002C5474(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    void v4[2] = v4[0];
    void v4[3] = &unk_1004D3548;
    void v4[4] = v4[0];
    void v4[5] = v4[0];
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
  }

id sub_1002C54EC( const char *a1, char a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15)
{
  v22.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  aBlock[4] = a4;
  uint64_t v41 = a5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1002C5790;
  aBlock[3] = &unk_1005D8EA8;
  uint64_t v23 = _Block_copy(aBlock);
  if (a6)
  {
    os_log_type_t v38 = a6;
    uint64_t v39 = a7;
    int v34 = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256LL;
    uint64_t v36 = sub_1002C5800;
    id v37 = &unk_1005D8F70;
    uint64_t v24 = _Block_copy(&v34);
    swift_release(v39);
    uint64_t v25 = a10;
    if (!a8) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v24 = 0LL;
  uint64_t v25 = a10;
  if (a8)
  {
LABEL_3:
    os_log_type_t v38 = a8;
    uint64_t v39 = a9;
    int v34 = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256LL;
    uint64_t v36 = sub_1002C5880;
    id v37 = &unk_1005D8F48;
    a8 = _Block_copy(&v34);
    swift_release(v39);
  }

uint64_t sub_1002C5790(uint64_t a1, void *aBlock)
{
  unint64_t v3 = *(void (**)(uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v4 = _Block_copy(aBlock);
  uint64_t v5 = swift_allocObject(&unk_1005D8FA8, 24LL, 7LL);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  swift_retain(v2);
  v3(sub_1002C0AB4, v5);
  swift_release(v2);
  return swift_release(v5);
}

uint64_t sub_1002C5800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  if (a2) {
    uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( a2,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  }
  else {
    uint64_t v6 = 0LL;
  }
  swift_retain(v4);
  v5(v6, a3);
  swift_release(v4);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1002C5880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

__n128 sub_1002C58BC(uint64_t a1, const char *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void (**)(const char *, void *))(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  if (a2)
  {
    unint64_t v7 = sub_1002C5D1C();
    uint64_t v4 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }

  swift_retain(v5);
  id v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  return swift_bridgeObjectRelease(v4);
}

id sub_1002C5938()
{
  id result = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  if (!result)
  {
    __break(1u);
    return result;
  }

  uint64_t v1 = result;
  id v2 = [result awdlInfo];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v2,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  }

  else
  {
    uint64_t v3 = 0LL;
  }

  if (qword_100644110 != -1) {
    swift_once(&qword_100644110, sub_1002C0C6C);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_10064CB80);
  uint64_t v5 = swift_bridgeObjectRetain_n(v3, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v9;
    *(_DWORD *)id v8 = 136315138;
    if (v3)
    {
      uint64_t v10 = Dictionary.description.getter( v3,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
      unint64_t v12 = v11;
    }

    else
    {
      unint64_t v12 = 0x8000000100509360LL;
      uint64_t v10 = 0xD000000000000012LL;
    }

    uint64_t v16 = sub_10018CDB4(v10, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease_n(v3, 2LL);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "AWDLInfo = %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);

    if (!v3) {
      goto LABEL_14;
    }
  }

  else
  {

    swift_bridgeObjectRelease_n(v3, 2LL);
    if (!v3)
    {
LABEL_14:
      v13.super.Class isa = 0LL;
      goto LABEL_15;
    }
  }

  v13.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v3);
LABEL_15:
  id v14 = sub_100089D90(v13.super.isa);

  if (!v14) {
    return 0LL;
  }
  uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v14);

  return (id)v15;
}

uint64_t sub_1002C5BF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C3C4C(v1, a1);
}

uint64_t sub_1002C5C08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064CE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C5C50()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002C5C74()
{
  return swift_deallocObject(v0, 48LL);
}

void sub_1002C5CA8(void (*a1)(void), char *a2)
{
}

void sub_1002C5CB4(uint64_t a1)
{
}

uint64_t sub_1002C5CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064CE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C5D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002C5D14(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_1002C5D1C()
{
  unint64_t result = qword_10064CE08;
  if (!qword_10064CE08)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS____NIRangingPeerDistance);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_10064CE08);
  }

  return result;
}

uint64_t sub_1002C5D58()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002C5D7C(uint64_t a1, uint64_t a2)
{
  return sub_1002C19FC(a1, a2, v2);
}

uint64_t sub_1002C5D84(char a1)
{
  return sub_1002C1E44(a1, v1);
}

uint64_t sub_1002C5D8C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002C5DB0()
{
  return sub_1002C2060(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002C5DB8(uint64_t a1, uint64_t a2)
{
  return sub_1002C2344(a1, a2, v2);
}

uint64_t sub_1002C5DC4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc(dword_10064CE14);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001943E8;
  v3[2] = v2;
  return swift_task_switch(sub_1002C256C, 0LL, 0LL);
}

void sub_1002C5E24(uint64_t a1)
{
}

uint64_t sub_1002C5E2C()
{
  return sub_1002C2684(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002C5E48()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1002C5E74()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc(dword_10064CE24);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_1002C2228, 0LL, 0LL);
}

uint64_t sub_1002C5ED4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RangingMetrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002C5F3C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064CE30);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064CE30);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002C5FCC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess(v3, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t SDAirDropService.transferObserverClientsBundleIDs.getter()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs,  v3,  0LL,  0LL);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_1002C607C()
{
  uint64_t v0 = sub_100183098(&qword_10064D3E8);
  uint64_t v1 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = swift_allocObject(v0, v4 + *(void *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t))(v2 + 104))( v5 + v4,  enum case for SFAirDropClient.Identifier.shareSheet(_:),  v1);
  qword_1006697D8 = v5;
  return result;
}

void sub_1002C6110()
{
  uint64_t v1 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v1);
  uint64_t v170 = (char *)&v160 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v183 = type metadata accessor for SFAirDrop.Transfers(0LL);
  uint64_t v182 = *(void *)(v183 - 8);
  uint64_t v3 = __chkstk_darwin(v183);
  uint64_t v167 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  Swift::String v181 = (char *)&v160 - v5;
  uint64_t v174 = sub_100183098(&qword_10064D2B8);
  uint64_t v173 = *(void *)(v174 - 8);
  uint64_t v6 = __chkstk_darwin(v174);
  int v169 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v168 = v7;
  __chkstk_darwin(v6);
  uint64_t v187 = (char *)&v160 - v8;
  uint64_t v180 = sub_100183098(&qword_100647910);
  uint64_t v172 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  v179 = (char *)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v178 = sub_100183098(&qword_100649D90);
  uint64_t v171 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  v177 = (char *)&v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v188 = (uint64_t *)type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v176 = (void *)*(v188 - 1);
  __chkstk_darwin(v188);
  v184 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v12);
  uint64_t v175 = (char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_deviceStatus;
  uint64_t v18 = (void *)objc_opt_self(&OBJC_CLASS___SDStatusMonitor);
  id v19 = v0;
  id v20 = [v18 sharedMonitor];
  v189 = v0;
  *(void *)&v0[v17] = v20;
  int v21 = (char *)OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearbyAgent;
  id v22 = [(id)objc_opt_self(SDNearbyAgent) sharedNearbyAgent];
  uint64_t v186 = v21;
  *(void *)&v21[(void)v19] = v22;
  uint64_t v23 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_bleController;
  if (qword_100644308 != -1) {
    swift_once(&qword_100644308, sub_1003EA8BC);
  }
  uint64_t v24 = (void *)qword_1006698D0;
  __n128 v185 = (uint64_t *)v23;
  *(void *)((char *)v19 + v23) = qword_1006698D0;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent) = 0LL;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask) = 0LL;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs) = &_swiftEmptySetSingleton;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters) = _swiftEmptyArrayStorage;
  uint64_t v25 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_queue;
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.default.getter(v24);
  *(void *)&__int128 v197 = _swiftEmptyArrayStorage;
  uint64_t v26 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v27 = sub_100183098(&qword_100650E60);
  uint64_t v28 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  id v29 = v175;
  uint64_t v30 = v26;
  uint64_t v31 = v25;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v197, v27, v28, v12, v30);
  uint64_t v32 = v184;
  ((void (*)(char *, void, uint64_t *))v176[13])( v184,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v188);
  *(void *)((char *)v19 + v25) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000021LL,  0x8000000100503200LL,  v16,  v29,  v32,  0LL);
  id v33 = v189;
  int v34 = *(void **)&v189[v17];
  if (!v34)
  {
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v35 = (char *)v17;
  uint64_t v36 = type metadata accessor for SDAirDropLegacySessionLogger(0LL);
  swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
  id v37 = sub_100396418((uint64_t)v34);
  uint64_t v38 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sessionLogger;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sessionLogger) = v37;
  id v39 = objc_allocWithZone(&OBJC_CLASS___IDSService);
  id v40 = v34;
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = [v39 initWithService:v41];

  if (!v42)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v43 = type metadata accessor for SDPseudonymNetworkPathMonitor();
  swift_allocObject(v43, 57LL, 7LL);
  uint64_t v44 = sub_10036FA0C();
  id v45 = sub_1002CEF1C((uint64_t)v42, v44, v40);
  uint64_t v46 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pseudonymService;
  uint64_t v176 = v45;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pseudonymService) = v45;
  id v47 = (uint64_t *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_airDropUISessionManager);
  uint64_t v48 = type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported();
  uint64_t v49 = swift_allocObject(v48, 32LL, 7LL);
  *(void *)(v49 + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(v49 + 24) = 0LL;
  v47[3] = v48;
  v47[4] = (uint64_t)&off_1005DBF00;
  uint64_t v188 = v47;
  *id v47 = v49;
  uint64_t v50 = *(void **)&v35[(void)v33];
  if (!v50)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  uint64_t v164 = v46;
  v184 = v35;
  uint64_t v165 = v31;
  uint64_t v51 = *(void **)&v186[(void)v19];
  if (!v51)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v52 = *(void **)((char *)v185 + (void)v19);
  uint64_t v163 = v38;
  uint64_t v53 = *(void *)((char *)v19 + v38);
  id v54 = objc_allocWithZone((Class)type metadata accessor for SDAirDropEndpointService(0LL));
  id v55 = v52;
  swift_retain(v53);
  id v56 = v50;
  id v57 = v51;
  id v58 = sub_1002E9C70(v56, v57, v55, v53);
  uint64_t v161 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService) = v58;
  sub_10019A6C4((uint64_t)v188, (uint64_t)&v197);
  uint64_t v59 = sub_1002499B4((uint64_t)&v197, (uint64_t)v198);
  uint64_t v175 = (char *)&v160;
  __chkstk_darwin(v59);
  int v61 = (uint64_t *)((char *)&v160 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v62 + 16))(v61);
  uint64_t v63 = *v61;
  uint64_t v195 = v48;
  v196 = &off_1005DBF00;
  uint64_t v194 = v63;
  uint64_t v64 = type metadata accessor for SDAirDropSendService();
  uint64_t v65 = (void *)swift_allocObject(v64, 136LL, 7LL);
  uint64_t v66 = sub_1002499B4((uint64_t)&v194, v48);
  v166 = &v160;
  uint64_t v67 = *(void *)(*(void *)(v48 - 8) + 64LL);
  __chkstk_darwin(v66);
  uint64_t v162 = *(void (**)(char *))(v68 + 16);
  v162((char *)&v160 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v69 = *(uint64_t *)((char *)&v160 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  swift_retain(v53);
  id v70 = v56;
  id v71 = v57;
  id v72 = v58;
  uint64_t v73 = (uint64_t)v176;
  swift_retain(v176);
  uint64_t v74 = sub_1002CFDB8(v70, v71, v53, v72, v73, v69, v65);
  swift_release(v53);
  sub_10018709C(&v194);
  sub_10018709C(&v197);
  uint64_t v75 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService) = v74;
  Swift::String v76 = *(void **)&v184[(void)v189];
  if (!v76)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v176 = (void *)v75;
  uint64_t v186 = *(char **)&v186[(void)v19];
  if (!v186)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  v166 = *(uint64_t **)((char *)v185 + (void)v19);
  uint64_t v77 = *(void *)((char *)v19 + v163);
  uint64_t v175 = *(char **)((char *)v19 + v161);
  uint64_t v78 = *(void *)((char *)v19 + v164);
  sub_10019A6C4((uint64_t)v188, (uint64_t)&v197);
  uint64_t v79 = sub_1002499B4((uint64_t)&v197, (uint64_t)v198);
  __n128 v185 = &v160;
  __chkstk_darwin(v79);
  uint64_t v81 = (uint64_t *)((char *)&v160 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v82 + 16))(v81);
  uint64_t v83 = *v81;
  uint64_t v195 = v48;
  v196 = &off_1005DBF00;
  uint64_t v194 = v83;
  uint64_t v84 = type metadata accessor for SDAirDropReceiveService();
  uint64_t v85 = swift_allocObject(v84, 176LL, 7LL);
  uint64_t v86 = sub_1002499B4((uint64_t)&v194, v48);
  __chkstk_darwin(v86);
  v162((char *)&v160 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v87 = *(uint64_t *)((char *)&v160 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v88 = v166;
  swift_retain(v77);
  uint64_t v89 = v175;
  swift_retain(v78);
  id v90 = v76;
  uint64_t v91 = sub_1002CEAD8(v90, v186, v88, v77, v89, v78, v87, v85);
  sub_10018709C(&v194);
  sub_10018709C(&v197);
  uint64_t v186 = (char *)OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService;
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService) = v91;
  uint64_t v92 = v165;
  unint64_t v93 = *(void **)((char *)v19 + v165);
  sub_10019A6C4((uint64_t)v188, (uint64_t)&v194);
  uint64_t v94 = *(void **)&v184[(void)v189];
  if (!v94)
  {
LABEL_19:
    __break(1u);
    return;
  }

  sub_10019A6C4((uint64_t)&v194, (uint64_t)&v197);
  uint64_t v95 = sub_1002499B4((uint64_t)&v197, (uint64_t)v198);
  __chkstk_darwin(v95);
  uint64_t v97 = (uint64_t *)((char *)&v160 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v98 + 16))(v97);
  uint64_t v99 = *v97;
  uint64_t v192 = v48;
  v193 = &off_1005DBF00;
  uint64_t v191 = v99;
  uint64_t v100 = (objc_class *)type metadata accessor for SDAirDropNearFieldService(0LL);
  uint64_t v101 = (char *)objc_allocWithZone(v100);
  uint64_t v102 = sub_1002499B4((uint64_t)&v191, v192);
  __chkstk_darwin(v102);
  unint64_t v104 = (uint64_t *)((char *)&v160 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v105 + 16))(v104);
  uint64_t v106 = *v104;
  id v107 = v93;
  id v108 = v94;
  id v109 = sub_1002D00A0(v107, v106, v108, v101);

  sub_10018709C(&v191);
  sub_10018709C(&v197);
  v198 = v100;
  uint64_t v199 = &off_1005D3340;
  *(void *)&__int128 v197 = v109;
  sub_10018709C(&v194);
  sub_1001CE0D0(&v197, (uint64_t)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService);
  uint64_t v110 = type metadata accessor for SDTempPairingService(0LL);
  swift_allocObject(v110, *(unsigned int *)(v110 + 48), *(unsigned __int16 *)(v110 + 52));
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService) = sub_1002B71EC();
  sub_100183098(&qword_10064D2C0);
  uint64_t v111 = AirDropMachServiceName.getter();
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_xpcListener) = SFXPCListener.__allocating_init(machServiceName:queue:)( v111,  v112,  *(id *)((char *)v19 + v92));
  *(void *)&__int128 v197 = *(void *)(*(void *)&v186[(void)v19] + 48LL);
  uint64_t v113 = sub_100183098(&qword_100649DA0);
  uint64_t v114 = sub_1001CD538( &qword_100649DA8,  &qword_100649DA0,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  uint64_t v115 = v177;
  Publisher<>.values.getter(v113, v114);
  *(void *)&__int128 v197 = *(void *)(*(void *)((char *)v176 + (void)v19) + 16LL);
  uint64_t v116 = sub_100183098(&qword_100647920);
  uint64_t v117 = sub_1001CD538( &qword_100647928,  &qword_100647920,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  unint64_t v118 = v179;
  Publisher<>.values.getter(v116, v117);
  uint64_t v119 = sub_1001CD538( &qword_10064D2C8,  &qword_100649D90,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  uint64_t v120 = sub_1001CD538( &qword_10064D2D0,  &qword_100647910,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  static SFAirDrop.Transfers.stream<A, B>(receiveTransferSeq:sendTransfersSeq:)(v115, v118, v178, v180, v119, v120);
  unint64_t v121 = sub_10039213C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v122 = sub_1003918BC((uint64_t)_swiftEmptyArrayStorage);
  Swift::Int v123 = v181;
  SFAirDrop.Transfers.init(receiveTransfers:sendTransfers:)(v121, v122);
  Swift::Int v124 = v167;
  (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v167, v123, v183);
  uint64_t v125 = sub_100183098(&qword_10064D2D8);
  swift_allocObject(v125, *(unsigned int *)(v125 + 48), *(unsigned __int16 *)(v125 + 52));
  *(void *)((char *)v19 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject) = CurrentValueSubject.init(_:)(v124);

  Swift::Int v126 = (objc_class *)type metadata accessor for SDAirDropService();
  v190.receiver = v19;
  v190.super_class = v126;
  unint64_t v127 = (char *)objc_msgSendSuper2(&v190, "init");
  uint64_t v128 = *(void *)&v127[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService]
       + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate;
  *(void *)(v128 + 8) = &off_1005D9048;
  swift_unknownObjectWeakAssign(v128, v127);
  uint64_t v129 = *(void *)&v127[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_sendService];
  *(void *)(v129 + 48) = &off_1005D9088;
  swift_unknownObjectWeakAssign(v129 + 40, v127);
  uint64_t v130 = *(void *)&v127[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_receiveService];
  *(void *)(v130 + 64) = &off_1005D9060;
  uint64_t v131 = swift_unknownObjectWeakAssign(v130 + 56, v127);
  uint64_t v132 = *(void *)(v130 + 32);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v131, v133);
  *(void *)(v132 + 40) = *(void *)(v130 + 64);
  swift_unknownObjectWeakAssign(v132 + 32, Strong);
  uint64_t v135 = v127;
  swift_unknownObjectRelease(Strong);
  uint64_t v136 = (uint64_t)&v135[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService];
  swift_beginAccess(&v135[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService], &v197, 33LL, 0LL);
  uint64_t v137 = *(void *)(v136 + 24);
  uint64_t v138 = *(void *)(v136 + 32);
  sub_1002499B4(v136, v137);
  v139 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v138 + 16);
  uint64_t v140 = v135;
  v139(v127, &off_1005D90A0, v137, v138);
  swift_endAccess(&v197);
  uint64_t v141 = type metadata accessor for TaskPriority(0LL);
  uint64_t v142 = (uint64_t)v170;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56LL))(v170, 1LL, 1LL, v141);
  uint64_t v143 = v173;
  v144 = v169;
  uint64_t v145 = v174;
  (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v169, v187, v174);
  uint64_t v146 = qword_100643F28;
  uint64_t v147 = v140;
  if (v146 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v148 = static AirDropActor.shared;
  uint64_t v149 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v150 = *(unsigned __int8 *)(v143 + 80);
  uint64_t v151 = (v150 + 32) & ~v150;
  unint64_t v152 = (v168 + v151 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v153 = swift_allocObject(&unk_1005D9110, v152 + 8, v150 | 7);
  *(void *)(v153 + swift_weakDestroy(v0 + 16) = v148;
  *(void *)(v153 + 24) = v149;
  (*(void (**)(uint64_t, char *, uint64_t))(v143 + 32))(v153 + v151, v144, v145);
  *(void *)(v153 + v152) = v147;
  swift_retain(v148);
  uint64_t v154 = sub_1001B37E8(v142, (uint64_t)&unk_10064D2E8, v153);
  uint64_t v155 = *(void *)&v147[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask];
  *(void *)&v147[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask] = v154;
  swift_release(v155);
  uint64_t v156 = *(void **)&v147[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_xpcListener];
  uint64_t v157 = swift_allocObject(&unk_1005D9138, 24LL, 7LL);
  swift_unknownObjectWeakInit(v157 + 16, v147);
  id v158 = v156;
  swift_retain(v157);
  SFXPCListener.didAddConnectionHandler.setter(sub_1002D068C, v157);

  swift_release(v157);
  uint64_t v159 = swift_allocObject(&unk_1005D9138, 24LL, 7LL);
  swift_unknownObjectWeakInit(v159 + 16, v147);
  swift_retain(v159);
  SFXPCListener.didRemoveConnectionHandler.setter(sub_1002D0694, v159);

  (*(void (**)(char *, uint64_t))(v182 + 8))(v181, v183);
  (*(void (**)(char *, uint64_t))(v143 + 8))(v187, v145);
  (*(void (**)(char *, uint64_t))(v172 + 8))(v179, v180);
  (*(void (**)(char *, uint64_t))(v171 + 8))(v177, v178);
  swift_release(v159);
}

uint64_t sub_1002C7214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for SFAirDrop.Transfers(0LL);
  v5[5] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[6] = v7;
  v5[7] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_10064D2F0);
  void v5[8] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_10064D2F8);
  v5[9] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[10] = v10;
  v5[11] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v11 = static AirDropActor.shared;
  v5[12] = static AirDropActor.shared;
  return swift_task_switch(sub_1002C72F8, v11, 0LL);
}

uint64_t sub_1002C72F8()
{
  uint64_t v1 = sub_100183098(&qword_10064D2B8);
  SFNoThrowAsyncSequence.makeAsyncIterator()(v1);
  uint64_t v2 = static AirDropActor.shared;
  v0[13] = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject;
  v0[14] = v2;
  v0[15] = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v3 = sub_1001CD538( &qword_10064D300,  &qword_10064D2F8,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
  v0[16] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002C73C4;
  return dispatch thunk of AsyncIteratorProtocol.next()(v0[8], v0[9], v3);
}

uint64_t sub_1002C73C4()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 128LL);
  *(void *)(*(void *)v1 + 136LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = v2[14];
    if (v4)
    {
      uint64_t v5 = v2[15];
      uint64_t ObjectType = swift_getObjectType(v4);
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      uint64_t v9 = v8;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v11 = sub_1002C75B0;
    uint64_t v10 = v7;
  }

  else
  {
    uint64_t v10 = v2[12];
    uint64_t v11 = sub_1002C745C;
    uint64_t v9 = 0LL;
  }

  return swift_task_switch(v11, v10, v9);
}

uint64_t sub_1002C745C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1LL, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 80) + 8LL))(v4, *(void *)(v0 + 72));
    swift_task_dealloc(v4);
    swift_task_dealloc(v1);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v7 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v1, v2);
    CurrentValueSubject.value.setter(v7);
    *(void *)(v0 + 112) = static AirDropActor.shared;
    *(void *)(v0 + 120) = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v8 = sub_1001CD538( &qword_10064D300,  &qword_10064D2F8,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>.AsyncIterator);
    uint64_t v9 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(void *)(v0 + 128) = v9;
    void *v9 = v0;
    v9[1] = sub_1002C73C4;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(void *)(v0 + 64), *(void *)(v0 + 72), v8);
  }

uint64_t sub_1002C75B0()
{
  *(void *)(v0 + swift_weakDestroy(v0 + 16) = *(void *)(v0 + 136);
  uint64_t v1 = sub_100183098(&qword_100645710);
  uint64_t v2 = swift_dynamicCast(v1, v0 + 16, v1, &type metadata for Never, 7LL);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

void sub_1002C7610(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_1002D069C(a1);
  }

void sub_1002C7668(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3, v4);
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    sub_1002C7BC0(a1);
  }

uint64_t sub_1002C76E0()
{
  uint64_t v1 = v0;
  if (qword_100644118 != -1) {
    swift_once(&qword_100644118, sub_1002C5F3C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064CE30);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting AirDrop Service", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  uint64_t v7 = swift_allocObject(&unk_1005D90E8, 24LL, 7LL);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v1;
  uint64_t v8 = v1;
  SFXPCListener.contextProvider.setter(sub_1002CFD8C, v7);
  SFXPCListener.resume()();
  id v9 = [objc_allocWithZone((Class)SDAirDropAgent) initWithEndpointService:*(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_endpointService]];
  uint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent];
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nwAgent] = v9;

  sub_1002014F8();
  sub_10024550C();
  uint64_t v11 = (uint64_t)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService];
  swift_beginAccess(v11, &v15, 0LL, 0LL);
  sub_10019A6C4(v11, (uint64_t)v16);
  uint64_t v12 = v17;
  uint64_t v13 = v18;
  sub_10019A708(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  return sub_10018709C(v16);
}

uint64_t sub_1002C78B0()
{
  uint64_t v1 = v0;
  if (qword_100644118 != -1) {
    swift_once(&qword_100644118, sub_1002C5F3C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064CE30);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Stopping AirDrop Service", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  SFXPCListener.invalidate()();
  SFXPCListener.contextProvider.setter(0LL, 0LL);
  if (qword_100644048 != -1) {
    swift_once(&qword_100644048, sub_10024547C);
  }
  uint64_t v7 = sub_100186DE4(v2, (uint64_t)qword_100649C30);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropReceiveService stop", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  sub_10024A0C8();
  if (qword_100643F20 != -1) {
    swift_once(&qword_100643F20, sub_100201468);
  }
  uint64_t v11 = sub_100186DE4(v2, (uint64_t)qword_100647800);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "SDAirDropSendService stop", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  uint64_t v15 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, &v22, 0LL, 0LL);
  sub_10019A6C4(v15, (uint64_t)v23);
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  sub_10019A708(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
  sub_10018709C(v23);
  uint64_t v18 = OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask;
  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask);
  if (v19)
  {
    swift_retain(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverTask));
    Task.cancel()();
    swift_release(v19);
    uint64_t v20 = *(void *)(v1 + v18);
  }

  else
  {
    uint64_t v20 = 0LL;
  }

  *(void *)(v1 + v18) = 0LL;
  return swift_release(v20);
}

uint64_t sub_1002C7BC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
  uint64_t v73 = *(const char **)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v72 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = sub_100183098(&qword_100646130);
  __chkstk_darwin(v79);
  uint64_t v82 = (uint64_t)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_10064DA60);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v81 = (uint64_t)&v69 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v69 - v12;
  __chkstk_darwin(v11);
  uint64_t v77 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v69 - v14);
  uint64_t v15 = type metadata accessor for UUID(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v75 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v80 = (char *)&v69 - v19;
  uint64_t v20 = type metadata accessor for SFClientIdentity(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644118 != -1) {
    swift_once(&qword_100644118, sub_1002C5F3C);
  }
  uint64_t v24 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v24, (uint64_t)qword_10064CE30);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v76 = a1;
  uint64_t v26 = v25(v23, a1, v20);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    LODWORD(v71) = v29;
    uint64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v70 = swift_slowAlloc(32LL, -1LL);
    v86[0] = v70;
    uint64_t v74 = v8;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v69 = v30 + 4;
    uint64_t v31 = sub_100183F14( &qword_100646150,  (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity,  (uint64_t)&protocol conformance descriptor for SFClientIdentity);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter(v20, v31);
    int v34 = (const char *)v33;
    uint64_t v84 = sub_10018CDB4(v32, v33, v86);
    uint64_t v8 = v74;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v69, v30 + 12);
    __n128 v35 = swift_bridgeObjectRelease(v34);
    (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v23, v20, v35);
    _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v71, "Removing AirDrop Client %s", v30, 0xCu);
    uint64_t v36 = v70;
    swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1LL, -1LL);
    swift_slowDealloc(v30, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }

  uint64_t v37 = v78;
  uint64_t v38 = v78 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v78 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, &v84, 0LL, 0LL);
  sub_10019A6C4(v38, (uint64_t)v86);
  uint64_t v39 = v87;
  uint64_t v40 = v88;
  sub_10019A708(v86, v87);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 136))(v76, v39, v40);
  uint64_t v41 = sub_10018709C(v86);
  uint64_t v42 = SFClientIdentity.bundleIdentifier.getter(v41);
  if (v43)
  {
    uint64_t v44 = v42;
    id v45 = v43;
    swift_beginAccess( v37 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs,  v86,  33LL,  0LL);
    sub_1003BDC14(v44, (uint64_t)v45);
    id v47 = v46;
    swift_endAccess(v86);
    *(void *)&double v48 = swift_bridgeObjectRelease(v45).n128_u64[0];
    swift_bridgeObjectRelease(v47, v48);
  }

  uint64_t v49 = (uint64_t)v77;
  SFClientIdentity.connectionID.getter(v42);
  uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v50(v49, 1LL, v15) == 1) {
    return sub_100187100(v49, &qword_10064DA60);
  }
  uint64_t v74 = *(char **)(v16 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v74)(v80, v49, v15);
  uint64_t v52 = (const char **)(v37 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  __n128 v53 = swift_beginAccess(v37 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters, v86, 0LL, 0LL);
  id v54 = *v52;
  uint64_t v78 = *((void *)*v52 + 2);
  if (!v78) {
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v80, v15, v53);
  }
  uint64_t v77 = v50;
  id v71 = v52;
  id v55 = &v54[(*((unsigned __int8 *)v73 + 80) + 32LL) & ~(unint64_t)*((unsigned __int8 *)v73 + 80)];
  uint64_t v76 = *((void *)v73 + 9);
  uint64_t v73 = v54;
  swift_bridgeObjectRetain(v54, v53.n128_f64[0]);
  unint64_t v57 = 0LL;
  while (1)
  {
    SFClientIdentity.connectionID.getter(v56);
    uint64_t v58 = (uint64_t)v13;
    uint64_t v59 = v81;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v81, v80, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v59, 0LL, 1LL, v15);
    uint64_t v60 = v82;
    uint64_t v61 = v82 + *(int *)(v79 + 48);
    sub_1001915A4(v58, v82, &qword_10064DA60);
    sub_1001915A4(v59, v61, &qword_10064DA60);
    uint64_t v62 = v60;
    uint64_t v63 = v77;
    if (v77(v62, 1LL, v15) == 1) {
      break;
    }
    sub_1001915A4(v82, (uint64_t)v8, &qword_10064DA60);
    if (v63(v61, 1LL, v15) == 1)
    {
      sub_100187100(v81, &qword_10064DA60);
      os_log_type_t v13 = (char *)v58;
      sub_100187100(v58, &qword_10064DA60);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
      goto LABEL_13;
    }

    uint64_t v64 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v74)(v75, v61, v15);
    uint64_t v65 = sub_100183F14( &qword_100646148,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    char v66 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v64, v15, v65);
    uint64_t v67 = *(void (**)(char *, uint64_t))(v16 + 8);
    v67(v64, v15);
    sub_100187100(v81, &qword_10064DA60);
    sub_100187100(v58, &qword_10064DA60);
    v67(v8, v15);
    os_log_type_t v13 = (char *)v58;
    uint64_t v56 = sub_100187100(v82, &qword_10064DA60);
    if ((v66 & 1) != 0) {
      goto LABEL_22;
    }
LABEL_14:
    ++v57;
    v55 += v76;
    if (v78 == v57)
    {
      __n128 v53 = swift_bridgeObjectRelease(v73);
      return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v80, v15, v53);
    }
  }

  sub_100187100(v59, &qword_10064DA60);
  sub_100187100(v58, &qword_10064DA60);
  os_log_type_t v13 = (char *)v58;
  if (v63(v61, 1LL, v15) != 1)
  {
LABEL_13:
    uint64_t v56 = sub_100187100(v82, &qword_100646130);
    goto LABEL_14;
  }

  sub_100187100(v82, &qword_10064DA60);
LABEL_22:
  swift_bridgeObjectRelease(v73);
  swift_beginAccess(v71, v83, 33LL, 0LL);
  uint64_t v68 = v72;
  sub_1001C838C(v57, v72);
  sub_1002CFD2C(v68);
  swift_endAccess(v83);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v80, v15, v53);
}

void sub_1002C8344(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v167 = a2;
  uint64_t v152 = a1;
  uint64_t v147 = type metadata accessor for SFClientIdentity(0LL);
  uint64_t v11 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v160 = (char *)&v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v145 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
  uint64_t v146 = *(void *)(v145 - 8);
  uint64_t v13 = __chkstk_darwin(v145);
  uint64_t v142 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v143 = (char *)&v135 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v141 = (unint64_t)&v135 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v139 = (uint64_t)&v135 - v20;
  __chkstk_darwin(v19);
  uint64_t v140 = (uint8_t *)&v135 - v21;
  uint64_t v161 = sub_100183098(&qword_100646130);
  __chkstk_darwin(v161);
  uint64_t v23 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_100183098(&qword_10064DA60);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v154 = (uint64_t)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = __chkstk_darwin(v25);
  int v29 = (char *)&v135 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v135 - v31;
  __chkstk_darwin(v30);
  int v34 = (char *)&v135 - v33;
  uint64_t v163 = type metadata accessor for UUID(0LL);
  uint64_t v155 = *(void *)(v163 - 8);
  uint64_t v35 = __chkstk_darwin(v163);
  uint64_t v149 = (char *)&v135 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v157 = (char *)&v135 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v162 = (char *)&v135 - v40;
  if (qword_100644120 != -1) {
    uint64_t v39 = swift_once(&qword_100644120, sub_1002C607C);
  }
  uint64_t v41 = (const char *)qword_1006697D8;
  uint64_t v42 = *(void *)(qword_1006697D8 + 16);
  uint64_t v150 = v6;
  uint64_t v148 = v11;
  if (v42)
  {
    uint64_t v43 = *(void *)(type metadata accessor for SFAirDropClient.Identifier(0LL) - 8);
    uint64_t v44 = &v41[(*(unsigned __int8 *)(v43 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)];
    uint64_t v45 = *(void *)(v43 + 72);
    __n128 v46 = swift_bridgeObjectRetain(v41);
    while ((static SFAirDropClient.Identifier.== infix(_:_:)(v167, v44, v46) & 1) == 0)
    {
      v44 += v45;
      if (!--v42)
      {
        swift_bridgeObjectRelease(v41);
        uint64_t v11 = v148;
        goto LABEL_8;
      }
    }

    swift_bridgeObjectRelease(v41);
    if (qword_100644118 != -1) {
      swift_once(&qword_100644118, sub_1002C5F3C);
    }
    uint64_t v81 = type metadata accessor for Logger(0LL);
    uint64_t v82 = sub_100186DE4(v81, (uint64_t)qword_10064CE30);
    __n128 v53 = (os_log_s *)Logger.logObject.getter(v82);
    os_log_type_t v83 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v53, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v83, "Unsupported client for presenter", v84, 2u);
      swift_slowDealloc(v84, -1LL, -1LL);
    }

void sub_1002C916C(uint64_t a1)
{
  uint64_t v102 = type metadata accessor for SFClientIdentity(0LL);
  uint64_t v100 = *(uint64_t (***)(os_log_t, void, uint64_t))(v102 - 8);
  __chkstk_darwin(v102);
  os_log_t v98 = (os_log_t)((char *)&v86 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v3 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
  uint64_t v97 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v89 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = sub_100183098(&qword_100646130);
  __chkstk_darwin(v101);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064DA60);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v96 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v86 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  char v103 = (uint8_t *)&v86 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v86 - v15;
  uint64_t v17 = type metadata accessor for UUID(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v90 = (char *)&v86 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v19);
  unsigned int v92 = (char *)&v86 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v86 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v28 = (char *)&v86 - v27;
  SFClientIdentity.connectionID.getter(v26);
  int v29 = *(os_log_s **)(v18 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v29)(v16, 1LL, v17) == 1)
  {
    sub_100187100((uint64_t)v16, &qword_10064DA60);
    if (qword_100644118 != -1) {
      swift_once(&qword_100644118, sub_1002C5F3C);
    }
    uint64_t v30 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v30, (uint64_t)qword_10064CE30);
    uint64_t v31 = v100;
    os_log_t v32 = v98;
    uint64_t v33 = v102;
    uint64_t v34 = v100[2](v98, a1, v102);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      v106[0] = v38;
      *(_DWORD *)uint64_t v37 = 136315138;
      char v103 = v37 + 4;
      uint64_t v39 = sub_100183F14( &qword_100646150,  (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity,  (uint64_t)&protocol conformance descriptor for SFClientIdentity);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v33, v39);
      uint64_t v42 = (const char *)v41;
      uint64_t v104 = sub_10018CDB4(v40, v41, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v103, v37 + 12);
      __n128 v43 = swift_bridgeObjectRelease(v42);
      ((void (*)(os_log_t, uint64_t, __n128))v31[1])(v32, v33, v43);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "No connectionID present - %s", v37, 0xCu);
      swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      ((void (*)(os_log_t, uint64_t))v31[1])(v32, v33);
    }

    return;
  }

  unint64_t v91 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v91(v28, v16, v17);
  if (qword_100644118 != -1) {
    swift_once(&qword_100644118, sub_1002C5F3C);
  }
  uint64_t v44 = type metadata accessor for Logger(0LL);
  uint64_t v45 = sub_100186DE4(v44, (uint64_t)qword_10064CE30);
  __n128 v46 = *(uint64_t (***)(os_log_t, void, uint64_t))(v18 + 16);
  uint64_t v102 = (uint64_t)v28;
  uint64_t v100 = v46;
  uint64_t v47 = ((uint64_t (*)(char *, char *, uint64_t))v46)(v25, v28, v17);
  uint64_t v88 = v45;
  double v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    os_log_t v98 = v48;
    uint64_t v50 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v93 = swift_slowAlloc(32LL, -1LL);
    v106[0] = v93;
    __n128 v87 = v50;
    *(_DWORD *)uint64_t v50 = 136315138;
    uint64_t v95 = (void (*)(char *, uint64_t, __n128))(v50 + 4);
    uint64_t v51 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter(v17, v51);
    os_log_type_t v54 = (const char *)v53;
    uint64_t v104 = sub_10018CDB4(v52, v53, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v104, v105, v95, v50 + 12);
    __n128 v55 = swift_bridgeObjectRelease(v54);
    uint64_t v95 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    v95(v25, v17, v55);
    double v48 = v98;
    uint64_t v56 = v87;
    _os_log_impl((void *)&_mh_execute_header, v98, v49, "Resigning presenter for connectionID %s", v87, 0xCu);
    uint64_t v57 = v93;
    swift_arrayDestroy(v93, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1LL, -1LL);
    swift_slowDealloc(v56, -1LL, -1LL);
  }

  else
  {
    uint64_t v95 = *(void (**)(char *, uint64_t, __n128))(v18 + 8);
    ((void (*)(char *, uint64_t))v95)(v25, v17);
  }

  uint64_t v58 = (uint8_t **)(v99 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  __n128 v59 = swift_beginAccess(v99 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters, v106, 0LL, 0LL);
  unint64_t v60 = *v58;
  uint64_t v99 = *((void *)*v58 + 2);
  if (!v99)
  {
LABEL_24:
    uint64_t v72 = v90;
    uint64_t v73 = v102;
    uint64_t v74 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v100)(v90, v102, v17, v59);
    uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
    os_log_type_t v76 = static os_log_type_t.error.getter(v75);
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v78 = swift_slowAlloc(32LL, -1LL);
      uint64_t v104 = v78;
      *(_DWORD *)uint64_t v77 = 136315138;
      uint64_t v79 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter(v17, v79);
      uint64_t v82 = (const char *)v81;
      uint64_t v107 = sub_10018CDB4(v80, v81, &v104);
      uint64_t v73 = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v77 + 4, v77 + 12);
      __n128 v83 = swift_bridgeObjectRelease(v82);
      uint64_t v84 = (void (*)(uint64_t, uint64_t))v95;
      v95(v72, v17, v83);
      _os_log_impl( (void *)&_mh_execute_header,  v75,  v76,  "No existing transfer presenter for connectionID %s",  v77,  0xCu);
      swift_arrayDestroy(v78, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v78, -1LL, -1LL);
      swift_slowDealloc(v77, -1LL, -1LL);
    }

    else
    {
      uint64_t v84 = (void (*)(uint64_t, uint64_t))v95;
      ((void (*)(char *, uint64_t))v95)(v72, v17);
    }

    v84(v73, v17);
    return;
  }

  uint64_t v86 = v58;
  uint64_t v61 = &v60[(*(unsigned __int8 *)(v97 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80)];
  uint64_t v97 = *(void *)(v97 + 72);
  os_log_t v98 = v29;
  __n128 v87 = v60;
  swift_bridgeObjectRetain((const char *)v60, v59.n128_f64[0]);
  unint64_t v63 = 0LL;
  uint64_t v94 = v18;
  while (1)
  {
    uint64_t v64 = (uint64_t)v103;
    SFClientIdentity.connectionID.getter(v62);
    ((void (*)(char *, uint64_t, uint64_t))v100)(v12, v102, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0LL, 1LL, v17);
    uint64_t v65 = (uint64_t)&v6[*(int *)(v101 + 48)];
    sub_1001915A4(v64, (uint64_t)v6, &qword_10064DA60);
    sub_1001915A4((uint64_t)v12, v65, &qword_10064DA60);
    os_log_t v66 = v98;
    uint64_t v67 = v96;
    sub_1001915A4((uint64_t)v6, v96, &qword_10064DA60);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66)(v65, 1LL, v17) == 1)
    {
      sub_100187100((uint64_t)v12, &qword_10064DA60);
      sub_100187100((uint64_t)v103, &qword_10064DA60);
      ((void (*)(uint64_t, uint64_t))v95)(v67, v17);
      uint64_t v18 = v94;
      goto LABEL_16;
    }

    uint64_t v68 = v92;
    v91(v92, (char *)v65, v17);
    uint64_t v69 = sub_100183F14( &qword_100646148,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    LODWORD(v93) = dispatch thunk of static Equatable.== infix(_:_:)(v67, v68, v17, v69);
    os_log_type_t v70 = v68;
    id v71 = (void (*)(uint64_t, uint64_t))v95;
    ((void (*)(char *, uint64_t))v95)(v70, v17);
    sub_100187100((uint64_t)v12, &qword_10064DA60);
    sub_100187100((uint64_t)v103, &qword_10064DA60);
    v71(v67, v17);
    uint64_t v62 = sub_100187100((uint64_t)v6, &qword_10064DA60);
    uint64_t v18 = v94;
    if ((v93 & 1) != 0) {
      goto LABEL_29;
    }
LABEL_17:
    ++v63;
    v61 += v97;
    if (v99 == v63)
    {
      __n128 v59 = swift_bridgeObjectRelease((const char *)v87);
      goto LABEL_24;
    }
  }

  sub_100187100((uint64_t)v12, &qword_10064DA60);
  sub_100187100((uint64_t)v103, &qword_10064DA60);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66)(v65, 1LL, v17) != 1)
  {
LABEL_16:
    uint64_t v62 = sub_100187100((uint64_t)v6, &qword_100646130);
    goto LABEL_17;
  }

  sub_100187100((uint64_t)v6, &qword_10064DA60);
LABEL_29:
  swift_bridgeObjectRelease((const char *)v87);
  swift_beginAccess(v86, &v104, 33LL, 0LL);
  uint64_t v85 = v89;
  sub_1001C838C(v63, v89);
  sub_1002CFD2C(v85);
  swift_endAccess(&v104);
  ((void (*)(uint64_t, uint64_t))v95)(v102, v17);
}

uint64_t sub_1002C9BA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_10064D3C0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = SFClientIdentity.bundleIdentifier.getter(v4);
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs,  v19,  33LL,  0LL);
    sub_1003B572C(v20, v9, v10);
    uint64_t v11 = (const char *)v20[1];
    swift_endAccess(v19);
    swift_bridgeObjectRelease(v11);
  }

  v19[0] = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transfersSubject);
  uint64_t v12 = sub_100183098(&qword_10064D2D8);
  uint64_t v13 = sub_1001CD538( &qword_10064D3C8,  &qword_10064D2D8,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  Publisher<>.values.getter(v12, v13);
  uint64_t v14 = sub_1001CD538( &qword_10064D3D0,  &qword_10064D3C0,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  uint64_t v15 = sub_100183F14( &qword_10064D3D8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.Transfers,  (uint64_t)&protocol conformance descriptor for SFAirDrop.Transfers);
  uint64_t v16 = sub_100183F14( &qword_10064D3E0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.Transfers,  (uint64_t)&protocol conformance descriptor for SFAirDrop.Transfers);
  AsyncSequence<>.xpc.getter(v2, v14, v15, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t SDAirDropService.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)static SFAirDropUserDefaults.shared.getter();
  uint64_t v3 = SFAirDropUserDefaults.description.getter();

  return v3;
}

id SDAirDropService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAirDropService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDAirDropService()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary16SDAirDropService);
}

uint64_t sub_1002C9F94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SFPlatform(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferPresenters);
  swift_beginAccess(v7, v20, 0LL, 0LL);
  uint64_t v9 = *v7;
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v11 = v10 - 1;
    uint64_t v12 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
    unint64_t v13 = v9
        + ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80LL))
        + *(void *)(*(void *)(v12 - 8) + 72LL) * v11
        + *(int *)(v12 + 20);
    uint64_t v14 = type metadata accessor for SFAirDropClient.Identifier(0LL);
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(a1, v13, v14);
  }

  else
  {
    static SFPlatform.iOS.getter(v8);
    char v16 = static SFPlatform.isPlatform(_:)(v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v17 = type metadata accessor for SFAirDropClient.Identifier(0LL);
    if ((v16 & 1) != 0) {
      uint64_t v18 = (unsigned int *)&enum case for SFAirDropClient.Identifier.airdropUI(_:);
    }
    else {
      uint64_t v18 = (unsigned int *)&enum case for SFAirDropClient.Identifier.daemon(_:);
    }
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104LL))(a1, *v18, v17);
  }

uint64_t SFAirDropInvocations.Send.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  void v4[5] = a4;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006463F0);
  void v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  void v4[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002CA144, 0LL, 0LL);
}

uint64_t sub_1002CA144(uint64_t a1)
{
  void v1[9] = v2;
  uint64_t v3 = (uint64_t **)swift_task_alloc(dword_100647944);
  v1[10] = (uint64_t)v3;
  *uint64_t v3 = v1;
  v3[1] = (uint64_t *)sub_1002CA1C8;
  return sub_1002016E8(v1[8], v1[3]);
}

uint64_t sub_1002CA1C8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1002CA2EC;
  }

  else
  {
    swift_bridgeObjectRelease(*(const char **)(v2 + 72));
    uint64_t v4 = sub_1002CA234;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002CA234()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = sub_100183F14( &qword_10064CE60,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  uint64_t v5 = sub_100183F14( &qword_10064CE68,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  SFProgressTask<>.xpc.getter(v3, v4, v5, v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA2EC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRelease(*(void *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA328( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D3B8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Send,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Send);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CA3F8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void v4[3] = a2;
  void v4[4] = a4;
  void v4[2] = a1;
  uint64_t v6 = sub_100183098((uint64_t *)&unk_1006463F0);
  void v4[5] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v4[6] = v7;
  uint64_t v8 = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *a3;
  v4[7] = v8;
  void v4[8] = v9;
  return swift_task_switch(sub_1002CA468, 0LL, 0LL);
}

uint64_t sub_1002CA468(uint64_t a1)
{
  void v1[9] = v2;
  uint64_t v3 = (uint64_t **)swift_task_alloc(dword_100647944);
  v1[10] = (uint64_t)v3;
  *uint64_t v3 = v1;
  v3[1] = (uint64_t *)sub_1002CA4F0;
  return sub_1002016E8(v1[7], v1[3]);
}

uint64_t sub_1002CA4F0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1002CA614;
  }

  else
  {
    swift_bridgeObjectRelease(*(const char **)(v2 + 72));
    uint64_t v4 = sub_1002CA55C;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002CA55C()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = sub_100183F14( &qword_10064CE60,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  uint64_t v5 = sub_100183F14( &qword_10064CE68,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Transfer,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Transfer);
  SFProgressTask<>.xpc.getter(v3, v4, v5, v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA614()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRelease(*(void *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDropInvocations.Cancel.invoke(with:context:client:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  return swift_task_switch(sub_1002CA670, 0LL, 0LL);
}

uint64_t sub_1002CA670()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_100647934);
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002CA6CC;
  return sub_1002035F4(*(void *)(v0 + 40));
}

uint64_t sub_1002CA6CC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56LL);
  *(void *)(*(void *)v1 + 64LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1002CA7C8;
  }
  else {
    uint64_t v3 = sub_1002CA730;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002CA730()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CA764()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72LL);
  *(void *)(*(void *)v1 + 80LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1002CA9CC;
  }
  else {
    uint64_t v3 = sub_1002D09AC;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002CA7C8()
{
  if (qword_100644118 != -1) {
    swift_once(&qword_100644118, sub_1002C5F3C);
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = type metadata accessor for Logger(0LL);
  v0[11] = sub_100186DE4(v2, (uint64_t)qword_10064CE30);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[8];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v8 = 138412290;
    swift_errorRetain(v7);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    v0[3] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v8 + 4, v8 + 12);
    uint64_t *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "Send cancel failed %@, attempting receive cancel with same transferID",  v8,  0xCu);
    uint64_t v11 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);

    swift_errorRelease(v7);
  }

  else
  {
    swift_errorRelease(v0[8]);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  uint64_t v12 = (void *)swift_task_alloc(dword_100649E0C);
  v0[9] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1002CA764;
  return sub_10024577C(v0[5]);
}

uint64_t sub_1002CA9CC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_errorRetain(v1);
  uint64_t v2 = swift_errorRetain(v1);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 80);
    BOOL v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)BOOL v6 = 138412290;
    swift_errorRetain(v5);
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError(v5);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4, v6 + 12);
    *uint64_t v7 = v8;
    swift_errorRelease(v5);
    swift_errorRelease(v5);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Receive cancel failed %@", v6, 0xCu);
    uint64_t v9 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v7, 1LL, v9);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
    uint64_t v10 = *(void *)(v0 + 80);
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }

  uint64_t v11 = *(void *)(v0 + 80);

  uint64_t v12 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v13 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v12, v13, 0LL, 0LL);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104LL))( v14,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v12);
  swift_willThrow(v15);
  swift_errorRelease(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CABB8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D3B0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Cancel,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Cancel);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CAC88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CE74);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[5] = a2;
  v7[6] = v6;
  v7[4] = a1;
  return swift_task_switch(sub_1002CA670, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.FetchUserDefaults.invoke(with:context:client:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)static SFAirDropUserDefaults.shared.getter();
  uint64_t v3 = SFAirDropUserDefaults.userDefaultDescriptions.getter();

  return v3;
}

uint64_t sub_1002CAD50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = sub_100183F14( &qword_10064D3A8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchUserDefaults,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchUserDefaults);
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  v16);
}

void sub_1002CADFC(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  os_log_type_t v4 = (void *)static SFAirDropUserDefaults.shared.getter();
  uint64_t v5 = SFAirDropUserDefaults.userDefaultDescriptions.getter();

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t SFAirDropInvocations.FetchEndpointMetadata.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch(sub_1002CAE78, 0LL, 0LL);
}

uint64_t sub_1002CAE78()
{
  uint64_t v1 = (uint64_t **)swift_task_alloc(dword_10064DBFC);
  v0[5] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = (uint64_t *)sub_1002CAED4;
  return sub_1002E9500(v0[2], v0[3]);
}

uint64_t sub_1002CAED4()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 40));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1002CAF20( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D3A0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchEndpointMetadata);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CAFF0(uint64_t a1, uint64_t a2, void *a3)
{
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *a3;
  return swift_task_switch(sub_1002CAE78, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.BecomeTransferPresenter.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  void v4[5] = a4;
  void v4[2] = a1;
  void v4[3] = a2;
  uint64_t v5 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  void v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  void v4[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002CB074, 0LL, 0LL);
}

uint64_t sub_1002CB074()
{
  uint64_t v1 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
  double v2 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter(v1);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  *((void *)v0 + 9) = v8;
  *((void *)v0 + 10) = v6;
  *((void *)v0 + 11) = v4;
  v0[12] = v2;
  return swift_task_switch(sub_1002CB110, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB110()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_1002C8344( *(void *)(v0 + 40),  v1,  *(double *)(v0 + 96),  *(double *)(v0 + 88),  *(double *)(v0 + 80),  *(double *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch(sub_1002CB180, 0LL, 0LL);
}

uint64_t sub_1002CB180()
{
  uint64_t v1 = *(void *)(v0 + 64);
  VoidResponse.init()();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB1C0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D398,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BecomeTransferPresenter);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CB290(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  void v4[3] = a2;
  void v4[4] = a4;
  void v4[2] = a1;
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  void v4[5] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v4[6] = v7;
  uint64_t v8 = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *a3;
  v4[7] = v8;
  void v4[8] = v9;
  return swift_task_switch(sub_1002CB2FC, 0LL, 0LL);
}

uint64_t sub_1002CB2FC()
{
  uint64_t v1 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
  double v2 = SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter(v1);
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  *((void *)v0 + 9) = v8;
  *((void *)v0 + 10) = v6;
  *((void *)v0 + 11) = v4;
  v0[12] = v2;
  return swift_task_switch(sub_1002CB398, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB398()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_1002C8344( *(void *)(v0 + 32),  v1,  *(double *)(v0 + 96),  *(double *)(v0 + 88),  *(double *)(v0 + 80),  *(double *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  return swift_task_switch(sub_1002CB408, 0LL, 0LL);
}

uint64_t sub_1002CB408()
{
  uint64_t v1 = *(void *)(v0 + 56);
  VoidResponse.init()();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDropInvocations.ResignTransferPresenter.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[3] = a3;
  void v4[4] = a4;
  void v4[2] = a1;
  return swift_task_switch(sub_1002CB464, 0LL, 0LL);
}

uint64_t sub_1002CB464()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CB4C8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB4C8()
{
  return swift_task_switch(sub_1002CB50C, 0LL, 0LL);
}

uint64_t sub_1002CB50C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB540( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D390,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ResignTransferPresenter,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ResignTransferPresenter);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CB610(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void v4[2] = a1;
  void v4[3] = a4;
  void v4[4] = *a3;
  return swift_task_switch(sub_1002CB630, 0LL, 0LL);
}

uint64_t sub_1002CB630()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CB694, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB694()
{
  return swift_task_switch(sub_1002D09A8, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.TransfersMonitor.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[3] = a3;
  void v4[4] = a4;
  void v4[2] = a1;
  return swift_task_switch(sub_1002CB6F4, 0LL, 0LL);
}

uint64_t sub_1002CB6F4()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CB758, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB758()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CB790( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D388,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TransfersMonitor,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TransfersMonitor);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CB860(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  void v4[2] = a1;
  void v4[3] = a4;
  void v4[4] = *a3;
  return swift_task_switch(sub_1002CB880, 0LL, 0LL);
}

uint64_t sub_1002CB880()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CB8E4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB8E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SFAirDropInvocations.StartNearbySharingDiscovery.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  void v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch(sub_1002CB938, 0LL, 0LL);
}

uint64_t sub_1002CB938()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CB99C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CB99C()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CBA04, 0LL, 0LL);
}

uint64_t sub_1002CBA04()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10019A708(v0 + 2, v1);
  v0[17] = *(void *)(v2 + 120);
  return swift_task_switch(sub_1002CBA5C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CBA5C()
{
  return swift_task_switch(sub_1002D09B0, 0LL, 0LL);
}

uint64_t sub_1002CBAA4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D380,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartNearbySharingDiscovery);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CBB74(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  uint64_t v9 = (void *)swift_task_alloc(dword_10064CEAC);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_100195708;
  v9[12] = v8;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  return swift_task_switch(sub_1002CB938, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.StopNearbySharingDiscovery.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  void v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch(sub_1002CBC08, 0LL, 0LL);
}

uint64_t sub_1002CBC08()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CBC6C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CBC6C()
{
  uint64_t v1 = *(void *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CBCD4, 0LL, 0LL);
}

uint64_t sub_1002CBCD4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10019A708(v0 + 2, v1);
  v0[17] = *(void *)(v2 + 144);
  return swift_task_switch(sub_1002CBD2C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CBD2C()
{
  return swift_task_switch(sub_1002CBD70, 0LL, 0LL);
}

uint64_t sub_1002CBD70()
{
  uint64_t v1 = sub_10018709C((void *)(v0 + 16));
  VoidResponse.init()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CBDB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D378,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopNearbySharingDiscovery);
  *uint64_t v15 = v14;
  v15[1] = sub_1002CBE80;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CBE80(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(*v3 + 16);
  uint64_t v7 = *v3;
  uint64_t v8 = swift_task_dealloc(v6);
  if (!v2)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
}

uint64_t sub_1002CBEE4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *a3;
  uint64_t v8 = (void *)swift_task_alloc(dword_10064CEBC);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1001943E8;
  v8[12] = v6;
  v8[13] = v7;
  v8[10] = a1;
  v8[11] = v5;
  return swift_task_switch(sub_1002CBC08, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.TakeNearbySharingAssertion.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  void v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  return swift_task_switch(sub_1002CBF74, 0LL, 0LL);
}

uint64_t sub_1002CBF74()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CBFD8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CBFD8()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CC040, 0LL, 0LL);
}

uint64_t sub_1002CC040()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[14] = v1;
  v0[15] = v2;
  v0[16] = sub_10019A708(v0 + 2, v1);
  v0[17] = *(void *)(v2 + 152);
  return swift_task_switch(sub_1002CC098, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CC098()
{
  return swift_task_switch(sub_1002CC0E0, 0LL, 0LL);
}

uint64_t sub_1002CC0E0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CC114( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D370,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TakeNearbySharingAssertion);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CC1E4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  uint64_t v9 = (void *)swift_task_alloc(dword_10064CEC4);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_100195708;
  v9[12] = v8;
  v9[13] = a4;
  v9[10] = a1;
  v9[11] = a2;
  return swift_task_switch(sub_1002CBF74, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.ReleaseNearbySharingAssertion.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_1002CC278, 0LL, 0LL);
}

uint64_t sub_1002CC278()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CC2DC, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CC2DC()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CC344, 0LL, 0LL);
}

uint64_t sub_1002CC344()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10019A708(v0 + 2, v1);
  v0[16] = *(void *)(v2 + 160);
  return swift_task_switch(sub_1002CC39C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CC39C()
{
  return swift_task_switch(sub_1002CBD70, 0LL, 0LL);
}

uint64_t sub_1002CC3E0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D368,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ReleaseNearbySharingAssertion);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CC4B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CECC);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_1002CC278, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.NearbySharingInteractions.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  uint64_t v4 = sub_100183098(&qword_10064CED8);
  v3[12] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[13] = v5;
  v3[14] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002CC588, 0LL, 0LL);
}

uint64_t sub_1002CC588()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CC5EC, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CC5EC()
{
  uint64_t v1 = *(void *)(v0 + 88) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CC654, 0LL, 0LL);
}

uint64_t sub_1002CC654()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[15] = v1;
  v0[16] = v2;
  v0[17] = sub_10019A708(v0 + 2, v1);
  v0[18] = *(void *)(v2 + 96);
  return swift_task_switch(sub_1002CC6AC, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CC6AC()
{
  return swift_task_switch(sub_1002CC6F0, 0LL, 0LL);
}

uint64_t sub_1002CC6F0()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = sub_1001CD538( &qword_10064CEE0,  &qword_10064CED8,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>);
  uint64_t v5 = sub_1002CEA54( &qword_10064CEE8,  &qword_10064CEF0,  (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  uint64_t v6 = sub_1002CEA54( &qword_10064CEF8,  &qword_10064CF00,  (uint64_t)&protocol conformance descriptor for SFAirDrop.NearbySharingInteraction,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  AsyncSequence<>.xpc.getter(v3, v4, v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CC7E8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D360,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.NearbySharingInteractions,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.NearbySharingInteractions);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CC8B8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = (void *)swift_task_alloc(dword_10064CED4);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100195708;
  return SFAirDropInvocations.NearbySharingInteractions.invoke(with:context:client:)(a1, v7, v5);
}

uint64_t SFAirDropInvocations.SimulateNearbySharingInteractions.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_1002CC92C, 0LL, 0LL);
}

uint64_t sub_1002CC92C()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CC990, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CC990()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CC9F8, 0LL, 0LL);
}

uint64_t sub_1002CC9F8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10019A708(v0 + 2, v1);
  v0[16] = *(void *)(v2 + 56);
  return swift_task_switch(sub_1002CCA50, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CCA50()
{
  return swift_task_switch(sub_1002D09B0, 0LL, 0LL);
}

uint64_t sub_1002CCA94( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D358,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SimulateNearbySharingInteractions);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CCB64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CF0C);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_1002CC92C, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.BoopAtADistanceBegin.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_1002CCBF4, 0LL, 0LL);
}

uint64_t sub_1002CCBF4()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CCC58, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CCC58()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CCCC0, 0LL, 0LL);
}

uint64_t sub_1002CCCC0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10019A708(v0 + 2, v1);
  uint64_t v3 = *(int **)(v2 + 64);
  uint64_t v6 = (int *)((char *)v3 + *v3);
  uint64_t v4 = (void *)swift_task_alloc(v3[1]);
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CCD40;
  return ((uint64_t (*)(void, void, uint64_t, uint64_t))v6)(v0[10], v0[11], v1, v2);
}

uint64_t sub_1002CCD40()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 112LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1002CCDA4;
  }
  else {
    uint64_t v3 = sub_1002CC0E0;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002CCDA4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CCDD8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D350,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceBegin);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CCEA8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CF14);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_1002CCBF4, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.BoopAtADistanceUpdate.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent(0LL);
  v3[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[14] = v5;
  v3[15] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0LL, v6);
  v3[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002CCFA8, 0LL, 0LL);
}

uint64_t sub_1002CCFA8()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CD00C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CD00C()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CD074, 0LL, 0LL);
}

uint64_t sub_1002CD074()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10019A708(v0 + 2, v1);
  uint64_t v3 = SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.transaction.getter();
  SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.tap.getter(v3);
  uint64_t v4 = *(int **)(v2 + 72);
  uint64_t v7 = (int *)((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc(v4[1]);
  v0[19] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002CD124;
  return ((uint64_t (*)(void, void, uint64_t, uint64_t))v7)(v0[18], v0[15], v1, v2);
}

uint64_t sub_1002CD124()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 144LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 152LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 128LL);
  uint64_t v5 = *(void *)(*(void *)v1 + 136LL);
  uint64_t v7 = *(void *)(*(void *)v1 + 112LL);
  uint64_t v6 = *(void *)(*(void *)v1 + 120LL);
  uint64_t v8 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 160LL) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0) {
    uint64_t v9 = sub_1002CD22C;
  }
  else {
    uint64_t v9 = sub_1002CD1CC;
  }
  return swift_task_switch(v9, 0LL, 0LL);
}

uint64_t sub_1002CD1CC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = sub_10018709C((void *)(v0 + 16));
  VoidResponse.init()(v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CD22C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 120);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CD278( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D348,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceUpdate);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CD348(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CF1C);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return SFAirDropInvocations.BoopAtADistanceUpdate.invoke(with:context:client:)(a1, a2, v6);
}

uint64_t SFAirDropInvocations.BoopAtADistanceEnd.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return swift_task_switch(sub_1002CD3CC, 0LL, 0LL);
}

uint64_t sub_1002CD3CC()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CD430, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CD430()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CD498, 0LL, 0LL);
}

uint64_t sub_1002CD498()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  v0[13] = v1;
  v0[14] = v2;
  v0[15] = sub_10019A708(v0 + 2, v1);
  v0[16] = *(void *)(v2 + 80);
  return swift_task_switch(sub_1002CD4F0, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CD4F0()
{
  *(void *)(v0 + 136) = 0LL;
  return swift_task_switch(sub_1002D09B0, 0LL, 0LL);
}

uint64_t sub_1002CD554()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CD588( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D340,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceEnd);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CD658(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CF24);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  v7[11] = a2;
  v7[12] = v6;
  v7[10] = a1;
  return swift_task_switch(sub_1002CD3CC, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.EndNearbySharingInteraction.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = sub_100183098(&qword_10064DA60);
  v3[13] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002CD72C, 0LL, 0LL);
}

uint64_t sub_1002CD72C()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CD790, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CD790()
{
  uint64_t v1 = *(void *)(v0 + 96) + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 16);
  return swift_task_switch(sub_1002CD7F8, 0LL, 0LL);
}

uint64_t sub_1002CD7F8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  v0[14] = v3;
  v0[15] = v4;
  v0[16] = sub_10019A708(v0 + 2, v3);
  uint64_t v5 = type metadata accessor for UUID(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v1, v2, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v1, 0LL, 1LL, v5);
  v0[17] = *(void *)(v4 + 88);
  return swift_task_switch(sub_1002CD8A4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CD8A4()
{
  uint64_t v1 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, void))(v0 + 136))(v1, *(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_100187100(v1, &qword_10064DA60);
  return swift_task_switch(sub_1002CD8FC, 0LL, 0LL);
}

uint64_t sub_1002CD8FC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = sub_10018709C((void *)(v0 + 16));
  VoidResponse.init()(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CD948( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D338,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.EndNearbySharingInteraction);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CDA18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064CF2C);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100195708;
  return SFAirDropInvocations.EndNearbySharingInteraction.invoke(with:context:client:)(a1, a2, v6);
}

uint64_t SFAirDropInvocations.StartTempPairing.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a1;
  v3[6] = a3;
  uint64_t v4 = sub_100183098(&qword_10064C8C0);
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  void v3[9] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002CDAE4, 0LL, 0LL);
}

uint64_t sub_1002CDAE4()
{
  *(void *)(v0 + 80) = *(void *)(*(void *)(v0 + 48)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CDB5C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CDB5C(uint64_t a1, uint64_t a2)
{
  return swift_task_switch(sub_1002CDB98, 0LL, 0LL);
}

uint64_t sub_1002CDB98()
{
  return swift_task_switch(sub_1002CDBB4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CDBB4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 80) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_senderStateUpdates;
  __n128 v5 = swift_beginAccess(v4, v0 + 16, 0LL, 0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v3 + 16))(v1, v4, v2, v5);
  uint64_t v6 = sub_1001CD538( &qword_10064CF40,  &qword_10064C8C0,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>);
  uint64_t v7 = sub_100183F14( &qword_10064CF48,  (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate,  (uint64_t)&protocol conformance descriptor for SFTempPairingSenderStateUpdate);
  uint64_t v8 = sub_100183F14( &qword_10064CF50,  (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingSenderStateUpdate,  (uint64_t)&protocol conformance descriptor for SFTempPairingSenderStateUpdate);
  AsyncSequence<>.xpc.getter(v2, v6, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CDCC4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D330,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartTempPairing,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartTempPairing);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CDD94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = (void *)swift_task_alloc(dword_10064CF34);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100195708;
  return SFAirDropInvocations.StartTempPairing.invoke(with:context:client:)(a1, v7, v5);
}

uint64_t SFAirDropInvocations.StopTempPairing.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return swift_task_switch(sub_1002CDE04, 0LL, 0LL);
}

uint64_t sub_1002CDE04()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CDE7C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CDE7C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server);
  if (v3)
  {
    swift_retain(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_server));
    sub_1003CEA74();
    swift_release(v3);
    uint64_t v4 = *(void *)(v1 + v2);
  }

  else
  {
    uint64_t v4 = 0LL;
  }

  *(void *)(v1 + v2) = 0LL;
  swift_release(v4);
  return swift_task_switch(sub_1002CB50C, 0LL, 0LL);
}

uint64_t sub_1002CDEF4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D328,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopTempPairing,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopTempPairing);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CDFC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v6 = (void *)swift_task_alloc(dword_10064CF5C);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100195708;
  v6[2] = a1;
  void v6[3] = v5;
  return swift_task_switch(sub_1002CDE04, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.TempPairingMonitor.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return swift_task_switch(sub_1002CE040, 0LL, 0LL);
}

uint64_t sub_1002CE040()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CE0B8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CE0B8(uint64_t a1, uint64_t a2)
{
  return swift_task_switch(sub_1002CE0F4, 0LL, 0LL);
}

uint64_t sub_1002CE0F4()
{
  return swift_task_switch(sub_1002CE110, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CE110()
{
  uint64_t v1 = sub_100183098(&qword_10064C8D0);
  uint64_t v2 = sub_1001CD538( &qword_10064CF68,  &qword_10064C8D0,  (uint64_t)&protocol conformance descriptor for SFNoThrowAsyncSequence<A>);
  uint64_t v3 = sub_100183F14( &qword_10064CF70,  (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate,  (uint64_t)&protocol conformance descriptor for SFTempPairingStateUpdate);
  uint64_t v4 = sub_100183F14( &qword_10064CF78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFTempPairingStateUpdate,  (uint64_t)&protocol conformance descriptor for SFTempPairingStateUpdate);
  AsyncSequence<>.xpc.getter(v1, v2, v3, v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002CE1E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D320,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingMonitor,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingMonitor);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CE2B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return swift_task_switch(sub_1002CE040, 0LL, 0LL);
}

id SFAirDropInvocations.SharingName.invoke(with:context:client:)()
{
  return sub_1002B88A0();
}

uint64_t sub_1002CE2F4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = sub_100183F14( &qword_10064D318,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SharingName,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SharingName);
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  v16);
}

id sub_1002CE3A0@<X0>(void *a1@<X8>)
{
  id result = sub_1002B88A0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SFAirDropInvocations.TempPairingConnect.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return swift_task_switch(sub_1002CE3E4, 0LL, 0LL);
}

uint64_t sub_1002CE3E4()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CE45C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CE45C()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_1002B88A0();
    uint64_t v5 = v4;
    sub_100293AF4((uint64_t)v3, v4);
    swift_bridgeObjectRelease(v5);
  }

  else
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064C6B0);
    uint64_t v2 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v8, "Attempting to connect while not browsing.", v9, 2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }
  }

  return swift_task_switch(sub_1002D09A8, 0LL, 0LL);
}

uint64_t sub_1002CE578( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D310,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingConnect,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingConnect);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CE648(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return swift_task_switch(sub_1002CE664, 0LL, 0LL);
}

uint64_t sub_1002CE664()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CE6DC, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CE6DC()
{
  return swift_task_switch(sub_1002CB50C, 0LL, 0LL);
}

uint64_t SFAirDropInvocations.TempPairingDisconnect.invoke(with:context:client:)( uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  return swift_task_switch(sub_1002CE730, 0LL, 0LL);
}

uint64_t sub_1002CE730()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CE7A8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CE7A8()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 32) + OBJC_IVAR____TtC16DaemoniOSLibrary20SDTempPairingService_client);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_100294364();
  }

  else
  {
    if (qword_1006440F8 != -1) {
      swift_once(&qword_1006440F8, sub_1002B715C);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_10064C6B0);
    uint64_t v2 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v5, "Attempting to disconnect while not browsing.", v6, 2u);
      swift_slowDealloc(v6, -1LL, -1LL);
    }
  }

  return swift_task_switch(sub_1002D09A8, 0LL, 0LL);
}

uint64_t sub_1002CE8B4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8;
  uint64_t v15 = (void *)swift_task_alloc(async function pointer to _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)[1]);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v16 = sub_100183F14( &qword_10064D308,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingDisconnect,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingDisconnect);
  *uint64_t v15 = v14;
  v15[1] = sub_1002D09B4;
  return _AnySFXPCAsyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlocksContainer:responseAsyncSequenceContainer:responseXPCBlocksContainer:)( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  v16);
}

uint64_t sub_1002CE984(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return swift_task_switch(sub_1002CE9A0, 0LL, 0LL);
}

uint64_t sub_1002CE9A0()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_pairingService);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002CEA18, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002CEA18()
{
  return swift_task_switch(sub_1002D09A8, 0LL, 0LL);
}

uint64_t sub_1002CEA54(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = sub_100183124(&qword_100646178);
    sub_100183F14( a2,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.NearbySharingInteraction,  a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1002CEAD8( void *a1, void *a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v54 = a4;
  uint64_t v55 = a6;
  uint64_t v50 = a5;
  id v51 = a2;
  id v52 = a3;
  os_log_type_t v49 = a1;
  uint64_t v48 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v10 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v58[3] = type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported();
  v58[4] = &off_1005DBF00;
  v58[0] = a7;
  *(void *)(a8 + 64) = 0LL;
  swift_unknownObjectWeakInit(a8 + 56, 0LL);
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  *(_OWORD *)(a8 + 128) = 0u;
  *(void *)(a8 + 144) = 0LL;
  *(_OWORD *)(a8 + 112) = 0u;
  uint64_t v53 = a8 + 112;
  static DispatchQoS.default.getter();
  v57[0] = _swiftEmptyArrayStorage;
  uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v20 = sub_100183098(&qword_100650E60);
  uint64_t v21 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v57, v20, v21, v13, v19);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))( v12,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v48);
  uint64_t v22 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000029LL,  0x8000000100509620LL,  v18,  v15,  v12,  0LL);
  *(void *)(a8 + 168) = v22;
  uint64_t v23 = v49;
  uint64_t v24 = v50;
  *(void *)(a8 + swift_weakDestroy(v0 + 16) = v49;
  *(void *)(a8 + 24) = v24;
  uint64_t v25 = v54;
  *(void *)(a8 + 152) = v54;
  *(void *)(a8 + 160) = &_swiftEmptyDictionarySingleton;
  uint64_t v26 = type metadata accessor for SDAirDropReceiveConnectionManager(0LL);
  swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  id v27 = v23;
  id v28 = v24;
  swift_retain_n(v25, 2LL);
  id v29 = v27;
  id v30 = v28;
  id v31 = v51;
  id v32 = v52;
  uint64_t v33 = v55;
  swift_retain(v55);
  id v34 = v22;
  uint64_t v35 = (void *)sub_100227FD4((uint64_t)v29, (uint64_t)v31, (uint64_t)v32, (uint64_t)v30, v25, v33, (uint64_t)v34);
  *(void *)(a8 + 32) = v35;
  uint64_t v36 = type metadata accessor for SDAirDropReceiveStateMachineAdaptor();
  swift_allocObject(v36, 64LL, 7LL);
  id v37 = v29;
  id v38 = v30;
  id v39 = v31;
  id v40 = v34;
  swift_retain(v35);
  *(void *)(a8 + 40) = sub_10024A3F8(v37, v39, v38, v35, v40);
  v57[0] = sub_10039213C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v41 = sub_100183098(&qword_100649DA0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  *(void *)(a8 + 48) = CurrentValueSubject.init(_:)(v57);
  sub_10019A6C4((uint64_t)v58, a8 + 72);
  uint64_t v42 = sub_100183168(0LL, (unint64_t *)&qword_100645140, &OBJC_CLASS___NSUserDefaults_ptr);
  __n128 v43 = (void *)static NSUserDefaults.airdrop.getter(v42);
  SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();

  uint64_t v44 = type metadata accessor for SDAirDropPlatformNotificationManagerUnsupported();
  uint64_t v45 = swift_allocObject(v44, 32LL, 7LL);
  *(void *)(v45 + 24) = 0LL;
  swift_unknownObjectWeakInit(v45 + 16, 0LL);
  v57[3] = v44;
  v57[4] = &off_1005DBEC8;

  swift_release(v54);
  swift_release(v55);
  v57[0] = v45;
  sub_10018709C(v58);
  uint64_t v46 = v53;
  swift_beginAccess(v53, v56, 33LL, 0LL);
  sub_1002D08AC((uint64_t)v57, v46);
  swift_endAccess(v56);
  return a8;
}

void *sub_1002CEF1C(uint64_t a1, uint64_t a2, void *a3)
{
  v22[3] = &type metadata for SDPseudonymPropertiesProvider;
  v22[4] = &off_1005DAF68;
  v21[3] = &type metadata for SDPseudonymStorage;
  v21[4] = &off_1005D3D68;
  uint64_t v6 = type metadata accessor for SDPseudonymNetworkPathMonitor();
  v20[3] = v6;
  v20[4] = &off_1005DCFA0;
  v20[0] = a2;
  uint64_t v7 = type metadata accessor for SDAirDropPseudonymService(0LL);
  uint64_t v8 = (void *)swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  uint64_t v9 = sub_1002499B4((uint64_t)v22, (uint64_t)&type metadata for SDPseudonymPropertiesProvider);
  __chkstk_darwin(v9);
  (*(void (**)(void))(v10 + 16))();
  uint64_t v11 = sub_1002499B4((uint64_t)v21, (uint64_t)&type metadata for SDPseudonymStorage);
  __chkstk_darwin(v11);
  (*(void (**)(void))(v12 + 16))();
  uint64_t v13 = sub_1002499B4((uint64_t)v20, v6);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_1002CF0C4(a1, *v15, a3, v8);
  sub_10018709C(v20);
  sub_10018709C(v21);
  sub_10018709C(v22);
  return v17;
}

void *sub_1002CF0C4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  v25[3] = sub_100183168(0LL, &qword_1006540B0, &OBJC_CLASS___IDSService_ptr);
  v25[4] = &off_1005DE9F0;
  v25[0] = a1;
  v24[3] = &type metadata for SDPseudonymPropertiesProvider;
  v24[4] = &off_1005DAF68;
  void v23[3] = &type metadata for SDPseudonymStorage;
  v23[4] = &off_1005D3D68;
  v22[3] = type metadata accessor for SDPseudonymNetworkPathMonitor();
  v22[4] = &off_1005DCFA0;
  v22[0] = a2;
  a4[22] = 0LL;
  a4[23] = 0LL;
  uint64_t v8 = (char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_lastProvisionAttempt;
  uint64_t v9 = type metadata accessor for Date(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  *(void *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_processStartupDelaySeconds) = 0x4014000000000000LL;
  *(void *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_provisionThrottleSeconds) = 0x402E000000000000LL;
  sub_10019A6C4((uint64_t)v25, (uint64_t)(a4 + 2));
  sub_10019A6C4((uint64_t)v24, (uint64_t)(a4 + 7));
  sub_10019A6C4((uint64_t)v23, (uint64_t)(a4 + 12));
  sub_10019A6C4((uint64_t)v22, (uint64_t)(a4 + 17));
  *(void *)((char *)a4 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropPseudonymService_deviceStatus) = a3;
  id v10 = a3;
  if ((sub_10033D56C() & 1) != 0)
  {
    uint64_t v11 = swift_allocObject(&unk_1005D9160, 24LL, 7LL);
    swift_weakInit(v11 + 16);
    swift_beginAccess(a4 + 17, v21, 33LL, 0LL);
    uint64_t v12 = a4[20];
    uint64_t v13 = a4[21];
    sub_1002499B4((uint64_t)(a4 + 17), v12);
    uint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 16);
    swift_retain(v11);
    v14(sub_1002D0918, v11, v12, v13);
    swift_endAccess(v21);
    swift_release(v11);
    sub_10040B004();
  }

  else
  {
    if (qword_100644358 != -1) {
      swift_once(&qword_100644358, sub_10040AE6C);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_100654900);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Pseudonym service is disabled", v19, 2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }
  }

  sub_10018709C(v22);
  sub_10018709C(v23);
  sub_10018709C(v24);
  sub_10018709C(v25);
  return a4;
}

uint64_t sub_1002CF378()
{
  return sub_100183F14( qword_10064CF98,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Send,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Send);
}

uint64_t sub_1002CF3A4()
{
  return sub_100183F14( (unint64_t *)&unk_10064CFB0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.Cancel,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.Cancel);
}

uint64_t sub_1002CF3D0()
{
  return sub_100183F14( (unint64_t *)&unk_10064CFC0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchUserDefaults,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchUserDefaults);
}

uint64_t sub_1002CF3FC()
{
  return sub_100183F14( qword_10064CFD0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.FetchEndpointMetadata,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.FetchEndpointMetadata);
}

uint64_t sub_1002CF428()
{
  return sub_100183F14( qword_10064CFE8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BecomeTransferPresenter,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BecomeTransferPresenter);
}

uint64_t sub_1002CF454()
{
  return sub_100183F14( qword_10064D000,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ResignTransferPresenter,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ResignTransferPresenter);
}

uint64_t sub_1002CF480()
{
  return sub_100183F14( qword_10064D018,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TransfersMonitor,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TransfersMonitor);
}

uint64_t sub_1002CF4AC()
{
  return sub_100183F14( qword_10064D030,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartNearbySharingDiscovery,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartNearbySharingDiscovery);
}

uint64_t sub_1002CF4D8()
{
  return sub_100183F14( qword_10064D048,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopNearbySharingDiscovery,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopNearbySharingDiscovery);
}

uint64_t sub_1002CF504()
{
  return sub_100183F14( qword_10064D060,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TakeNearbySharingAssertion,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TakeNearbySharingAssertion);
}

uint64_t sub_1002CF530()
{
  return sub_100183F14( qword_10064D078,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.ReleaseNearbySharingAssertion,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.ReleaseNearbySharingAssertion);
}

uint64_t sub_1002CF55C()
{
  return sub_100183F14( qword_10064D090,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.NearbySharingInteractions,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.NearbySharingInteractions);
}

uint64_t sub_1002CF588()
{
  return sub_100183F14( qword_10064D0A8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SimulateNearbySharingInteractions,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SimulateNearbySharingInteractions);
}

uint64_t sub_1002CF5B4()
{
  return sub_100183F14( qword_10064D0C0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceBegin,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceBegin);
}

uint64_t sub_1002CF5E0()
{
  return sub_100183F14( qword_10064D0D8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceUpdate,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceUpdate);
}

uint64_t sub_1002CF60C()
{
  return sub_100183F14( qword_10064D0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.BoopAtADistanceEnd,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.BoopAtADistanceEnd);
}

uint64_t sub_1002CF638()
{
  return sub_100183F14( qword_10064D108,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.EndNearbySharingInteraction,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.EndNearbySharingInteraction);
}

uint64_t sub_1002CF664()
{
  return sub_100183F14( qword_10064D120,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StartTempPairing,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StartTempPairing);
}

uint64_t sub_1002CF690()
{
  return sub_100183F14( qword_10064D138,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.StopTempPairing,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.StopTempPairing);
}

uint64_t sub_1002CF6BC()
{
  return sub_100183F14( (unint64_t *)&unk_10064D150,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingMonitor,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingMonitor);
}

uint64_t sub_1002CF6E8()
{
  return sub_100183F14( (unint64_t *)&unk_10064D160,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.SharingName,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.SharingName);
}

uint64_t sub_1002CF714()
{
  return sub_100183F14( qword_10064D170,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingConnect,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingConnect);
}

uint64_t sub_1002CF740()
{
  return sub_100183F14( (unint64_t *)&unk_10064D188,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropInvocations.TempPairingDisconnect,  (uint64_t)&protocol conformance descriptor for SFAirDropInvocations.TempPairingDisconnect);
}

uint64_t sub_1002CF76C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_transferObserverClientsBundleIDs);
  swift_beginAccess(v3, v6, 0LL, 0LL);
  uint64_t v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t *sub_1002CF7C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SFClientIdentity(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SFAirDropClient.Identifier(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (_OWORD *)((char *)a1 + v12);
    uint64_t v14 = (_OWORD *)((char *)a2 + v12);
    __int128 v15 = v14[1];
    _OWORD *v13 = *v14;
    v13[1] = v15;
  }

  return a1;
}

uint64_t sub_1002CF888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFClientIdentity(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
}

uint64_t sub_1002CF8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  __int128 v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1002CF97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  return a1;
}

uint64_t sub_1002CFA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  __int128 v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1002CFAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (_OWORD *)(a2 + v11);
  __int128 v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_1002CFB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002CFB68);
}

uint64_t sub_1002CFB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFClientIdentity(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = type metadata accessor for SFAirDropClient.Identifier(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1002CFBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002CFBE8);
}

uint64_t sub_1002CFBE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SFClientIdentity(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropClient.Identifier(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SDAirDropService.TransferPresenterClient(uint64_t a1)
{
  uint64_t result = qword_10064D278;
  if (!qword_10064D278) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropService.TransferPresenterClient);
  }
  return result;
}

uint64_t sub_1002CFCA0(uint64_t a1)
{
  uint64_t result = type metadata accessor for SFClientIdentity(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for SFAirDropClient.Identifier(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      void v5[2] = " ";
      swift_initStructMetadata(a1, 256LL, 3LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_1002CFD2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002CFD68()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_1002CFD8C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

void *sub_1002CFDB8(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v40 = a4;
  uint64_t v41 = a5;
  id v38 = a2;
  uint64_t v39 = a3;
  id v37 = a1;
  uint64_t v36 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v9 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v12);
  __int128 v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported();
  uint64_t v45 = &off_1005DBF00;
  *(void *)&__int128 v43 = a6;
  a7[6] = 0LL;
  swift_unknownObjectWeakInit(a7 + 5, 0LL);
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.default.getter();
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v19 = sub_100183098(&qword_100650E60);
  uint64_t v20 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v42, v19, v20, v12, v18);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))( v11,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v36);
  uint64_t v21 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000029LL,  0x8000000100509620LL,  v17,  v14,  v11,  0LL);
  a7[16] = v21;
  uint64_t v22 = v37;
  uint64_t v23 = v38;
  a7[3] = v37;
  a7[4] = v23;
  uint64_t v25 = v39;
  uint64_t v24 = v40;
  a7[7] = v39;
  a7[8] = &_swiftEmptyDictionarySingleton;
  a7[9] = v24;
  id v26 = v22;
  id v27 = v23;
  swift_retain(v25);
  id v28 = v24;
  uint64_t v42 = (void *)sub_1003918BC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v29 = sub_100183098(&qword_100647920);
  swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  a7[2] = CurrentValueSubject.init(_:)(&v42);
  uint64_t v30 = type metadata accessor for SDAirDropSendStateMachine();
  id v31 = (void *)swift_allocObject(v30, 80LL, 7LL);
  v31[9] = &_swiftEmptyDictionarySingleton;
  v31[2] = v21;
  v31[3] = v26;
  uint64_t v32 = v41;
  v31[4] = v28;
  v31[5] = v32;
  v31[6] = v27;
  uint64_t v33 = type metadata accessor for SDAirDropPlatformHapticsManagerUnsupported();
  v31[7] = swift_allocObject(v33, 16LL, 7LL);
  v31[8] = &off_1005D8A80;
  a7[10] = v31;
  sub_1001CE0D0(&v43, (uint64_t)(a7 + 11));
  id v34 = v21;
  return a7;
}

id sub_1002D00A0(void *a1, uint64_t a2, void *a3, char *a4)
{
  __int128 v43 = a1;
  uint64_t v44 = a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(a4);
  uint64_t v6 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v47 = v6;
  __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = sub_100183098(&qword_100646170);
  uint64_t v8 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_100645EE0);
  uint64_t v12 = __chkstk_darwin(v11);
  __int128 v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v50[3] = type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported();
  v50[4] = &off_1005DBF00;
  *(void *)&a4[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_defaultPollingType] = 0LL;
  v50[0] = a2;
  uint64_t v17 = &a4[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_delegate];
  *((void *)v17 + 1) = 0LL;
  swift_unknownObjectWeakInit(v17, 0LL);
  *(void *)&a4[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_nearFieldController] = 0LL;
  uint64_t v18 = &a4[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_processingTap];
  uint64_t v19 = type metadata accessor for SDNearFieldTap(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  uint64_t v20 = &a4[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_localExchangePayload];
  uint64_t v21 = type metadata accessor for SDAirDropNearFieldService.LocalExchangePayload(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  uint64_t v22 = &a4[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService__nearbySharingInteraction];
  uint64_t v23 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0LL);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL);
  v24(v16, 1LL, 1LL, v23);
  sub_1001915A4((uint64_t)v16, (uint64_t)v14, &qword_100645EE0);
  uint64_t v25 = a4;
  Published.init(initialValue:)(v14, v11);
  sub_100187100((uint64_t)v16, &qword_100645EE0);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v22, v10, v42);
  v24( &v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_pendingNearbySharingInteraction],  1LL,  1LL,  v23);
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_nearbySharingAssertionTimeoutWorkItem] = 0LL;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_cancelNearbySharingInteractionWorkItem] = 0LL;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_nearbySharingAirDropConnectionTimeoutWorkItem] = 0LL;
  id v26 = &v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_activeAirDropTransactionID];
  uint64_t v27 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v26, 1LL, 1LL, v27);
  uint64_t v29 = v43;
  id v28 = v44;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_queue] = v43;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_deviceStatus] = v28;
  sub_10019A6C4( (uint64_t)v50,  (uint64_t)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_airDropUISessionManager]);
  uint64_t v30 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v31 = v29;
  id v32 = v28;
  id v33 = [v30 defaultCenter];
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_notificationCenter] = v33;
  type metadata accessor for SFAirDropClient(0LL);
  id v34 = v45;
  (*(void (**)(char *, void, uint64_t))(v46 + 104))( v45,  enum case for SFAirDropClient.Identifier.boop(_:),  v47);
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_airDropClient] = SFAirDropClient.__allocating_init(identifier:)(v34);
  if ([(id)objc_opt_self(SDRPNearFieldController) isAvailable])
  {
    uint64_t v35 = sub_100183168(0LL, (unint64_t *)&qword_100645140, &OBJC_CLASS___NSUserDefaults_ptr);
    uint64_t v36 = (void *)static NSUserDefaults.airdrop.getter(v35);
    char v37 = SFAirDropUserDefaults.nearFieldControllerEnabled.getter();
  }

  else
  {
    char v37 = 0;
  }

  v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_nearFieldControllerIsAvailable] = v37 & 1;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_assertionsByNearbySharingInteractionID] = &_swiftEmptyDictionarySingleton;
  uint64_t v38 = type metadata accessor for SDAirDropAWDLSingleBandManager();
  uint64_t v39 = swift_allocObject(v38, 24LL, 7LL);
  *(void *)(v39 + swift_weakDestroy(v0 + 16) = &_swiftEmptySetSingleton;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_singleBandManager] = v39;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_nearbyDiscoveryLabelForConnectionID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropNearFieldService_nearbyDiscoveryClientForLabel] = &_swiftEmptyDictionarySingleton;

  v49.receiver = v25;
  v49.super_class = ObjectType;
  id v40 = objc_msgSendSuper2(&v49, "init");
  sub_1001B3F54();

  sub_10018709C(v50);
  return v40;
}

uint64_t sub_1002D052C()
{
  uint64_t v1 = sub_100183098(&qword_10064D2B8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject(v0, v4 + 8);
}

uint64_t sub_1002D05C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098(&qword_10064D2B8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v10 = (void *)swift_task_alloc(dword_10064D2E4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1001943E8;
  return sub_1002C7214(a1, v6, v7, v8, v9);
}

uint64_t sub_1002D0668()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1002D068C(uint64_t a1)
{
}

void sub_1002D0694(uint64_t a1)
{
}

void sub_1002D069C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFClientIdentity(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644118 != -1) {
    swift_once(&qword_100644118, sub_1002C5F3C);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_10064CE30);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_100183F14( &qword_100646150,  (uint64_t (*)(uint64_t))&type metadata accessor for SFClientIdentity,  (uint64_t)&protocol conformance descriptor for SFClientIdentity);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter(v2, v12);
    uint64_t v15 = (const char *)v14;
    uint64_t v17 = sub_10018CDB4(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v10 + 4, v10 + 12);
    __n128 v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "New AirDrop Client %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1002D08AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100649E00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D08F4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002D0918()
{
  return sub_10040AEFC(v0);
}

uint64_t sub_1002D0920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D0964(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropService.TransferPresenterClient(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D09B8(uint64_t a1, char a2)
{
  **(_BYTE **)(*(void *)(*(void *)(a1 + 32) + 64LL) + 40LL) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1002D09CC(uint64_t a1, void *a2)
{
  uint64_t v2 = (uint64_t)a2;
  uint64_t v3 = *(void *)(a1 + 32);
  if (a2)
  {
    id v4 = a2;
    uint64_t v2 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    unint64_t v6 = v5;
  }

  else
  {
    unint64_t v6 = 0xF000000000000000LL;
  }

  v8[0] = v2;
  v8[1] = v6;
  sub_10021AAA4((uint64_t)v8, *(void *)(*(void *)(v3 + 64) + 40LL));
  return swift_continuation_resume(v3);
}

uint64_t sub_1002D0A40(uint64_t a1)
{
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002D0AA8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002D0AA8()
{
  **(_BYTE **)(v0 + swift_weakDestroy(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropContentHandlerPeerPayment()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary34SDAirDropContentHandlerPeerPayment);
}

uint64_t sub_1002D0AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerPeerPayment();
  uint64_t result = swift_allocObject(v2, 16LL, 7LL);
  *a1 = result;
  return result;
}

uint64_t sub_1002D0B10(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002D0BA0, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002D0BA0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = SFAirDropReceive.AskRequest.type.getter();
  char v5 = SFAirDrop.TransferType.isPeerPayment.getter(v4);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))(v5 & 1);
}

uint64_t sub_1002D0C08()
{
  return 0x6D79615072656550LL;
}

uint64_t sub_1002D0C28()
{
  uint64_t v1 = 0x3FF0000000000000LL;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x695620796D6D7544LL,  0xEF6B736154207765LL,  &v1,  &unk_10064D4D8,  0LL,  0xD000000000000069LL,  0x8000000100509690LL,  59LL,  &type metadata for Double,  &type metadata for Bool);
}

uint64_t sub_1002D0CAC(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 144) = static AirDropActor.shared;
  return swift_task_switch(sub_1002D0D18, v2, 0LL);
}

uint64_t sub_1002D0D18()
{
  uint64_t v1 = SFAirDropReceive.AskRequest.customPayload.getter();
  unint64_t v3 = v2;
  v0[15] = v1;
  v0[16] = v2;
  uint64_t v4 = sub_100183098(&qword_100645150);
  Optional.tryUnwrap(_:file:line:)( 0x61506D6F74737563LL,  0xED000064616F6C79LL,  0xD000000000000069LL,  0x8000000100509690LL,  38LL,  v4);
  sub_100189B0C(v1, v3);
  uint64_t v5 = v0[10];
  unint64_t v6 = v0[11];
  v0[19] = v5;
  v0[20] = v6;
  id v7 = objc_allocWithZone((Class)&OBJC_CLASS___SDNearbyPeerPaymentReceiverCoordinator);
  sub_10019BA8C(v5, v6);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 initWithSenderMetadata:isa];
  v0[21] = v9;
  sub_100189B20(v5, v6);

  SFAirDropReceive.AskRequest.contactIdentifier.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }

  else
  {
    NSString v12 = 0LL;
  }

  v0[22] = v12;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1002D0F0C;
  v0[14] = swift_continuation_init(v0 + 2, 0LL);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000LL;
  v0[12] = sub_1002D09B8;
  v0[13] = &unk_1005D9298;
  [v9 nearbyReceiverRequiresConfirmationWithContactID:v12 completion:v0 + 10];
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1002D0F0C()
{
  return swift_task_switch(sub_1002D0F58, *(void *)(*(void *)v0 + 144LL), 0LL);
}

uint64_t sub_1002D0F58()
{
  uint64_t v1 = *(void **)(v0 + 168);
  unint64_t v2 = *(void **)(v0 + 176);
  sub_100189B20(*(void *)(v0 + 152), *(void *)(v0 + 160));

  LOBYTE(v1) = *(_BYTE *)(v0 + 120);
  return (*(uint64_t (**)(BOOL))(v0 + 8))((v1 & 1) == 0);
}

uint64_t sub_1002D0FA4(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v2 = static AirDropActor.shared;
  *(void *)(v1 + 144) = static AirDropActor.shared;
  return swift_task_switch(sub_1002D1010, v2, 0LL);
}

uint64_t sub_1002D1010()
{
  uint64_t v1 = SFAirDropReceive.AskRequest.customPayload.getter();
  unint64_t v3 = v2;
  v0[15] = v1;
  v0[16] = v2;
  uint64_t v4 = sub_100183098(&qword_100645150);
  Optional.tryUnwrap(_:file:line:)( 0x61506D6F74737563LL,  0xED000064616F6C79LL,  0xD000000000000069LL,  0x8000000100509690LL,  49LL,  v4);
  sub_100189B0C(v1, v3);
  uint64_t v5 = v0[10];
  unint64_t v6 = v0[11];
  v0[19] = v5;
  v0[20] = v6;
  id v7 = objc_allocWithZone((Class)&OBJC_CLASS___SDNearbyPeerPaymentReceiverCoordinator);
  sub_10019BA8C(v5, v6);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v9 = [v7 initWithSenderMetadata:isa];
  v0[21] = v9;
  sub_100189B20(v5, v6);

  SFAirDropReceive.AskRequest.contactIdentifier.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }

  else
  {
    NSString v12 = 0LL;
  }

  v0[22] = v12;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1002D1200;
  v0[14] = swift_continuation_init(v0 + 2, 0LL);
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000LL;
  v0[12] = sub_1002D09CC;
  v0[13] = &unk_1005D92B0;
  [v9 recipientMetadataWithContactID:v12 completion:v0 + 10];
  return swift_continuation_await(v0 + 2);
}

uint64_t sub_1002D1200()
{
  return swift_task_switch(sub_1002D124C, *(void *)(*(void *)v0 + 144LL), 0LL);
}

uint64_t sub_1002D124C()
{
  unint64_t v1 = *(void *)(v0 + 128);
  unint64_t v2 = *(void **)(v0 + 168);
  unint64_t v3 = *(void **)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 152);
  unint64_t v5 = *(void *)(v0 + 160);
  if (v1 >> 60 == 15)
  {

    uint64_t v6 = type metadata accessor for SFError(0LL);
    unint64_t v7 = sub_1002D138C();
    swift_allocError(v6, v7, 0LL, 0LL);
    *uint64_t v8 = 0xD000000000000023LL;
    v8[1] = 0x8000000100509720LL;
    void v8[2] = 0xD000000000000069LL;
    v8[3] = 0x8000000100509690LL;
    v8[4] = 52LL;
    uint64_t v9 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v6 - 8) + 104LL))( v8,  enum case for SFError.unexpected(_:),  v6);
    swift_willThrow(v9);

    sub_100189B20(v4, v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v11 = *(void *)(v0 + 120);
    sub_100189B20(*(void *)(v0 + 152), *(void *)(v0 + 160));

    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v11, v1);
  }

unint64_t sub_1002D138C()
{
  unint64_t result = qword_1006461A8;
  if (!qword_1006461A8)
  {
    uint64_t v1 = type metadata accessor for SFError(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SFError, v1);
    atomic_store(result, &qword_1006461A8);
  }

  return result;
}

uint64_t type metadata accessor for SDAirDropContentHandlerPlaygroundItems()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary38SDAirDropContentHandlerPlaygroundItems);
}

uint64_t sub_1002D13F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerPlaygroundItems();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_1002D142C(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x554F524759414C50LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xEA0000000000444ELL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xEA0000000000444ELL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x554F524759414C50LL;
  v10._object = (void *)0xEA0000000000444ELL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xEA0000000000444ELL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_1002D1734()
{
  if (*v0) {
    return 0x6E496E6F73726570LL;
  }
  else {
    return 0x746E756F636361LL;
  }
}

uint64_t sub_1002D1774@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_1002D23E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1002D1798(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1002D17A4(uint64_t a1)
{
  unint64_t v2 = sub_1002D21BC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D17CC(uint64_t a1)
{
  unint64_t v2 = sub_1002D21BC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D17F4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064D650);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_1002D21BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for SDAppleIDAccountInfo.CodingKeys,  &type metadata for SDAppleIDAccountInfo.CodingKeys,  v11,  v9,  v10);
  Swift::String v12 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account);
  if (v12)
  {
    Swift::String v13 = (void *)objc_opt_self(&OBJC_CLASS___NSKeyedArchiver);
    id v37 = 0LL;
    id v14 = v12;
    id v15 = [v13 archivedDataWithRootObject:v14 requiringSecureCoding:1 error:&v37];
    id v16 = v37;
    if (!v15)
    {
      uint64_t v23 = v16;
      _convertNSErrorToError(_:)(v16);

      swift_willThrow(v24);
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    uint64_t v17 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v15);
    unint64_t v19 = v18;

    id v37 = v17;
    unint64_t v38 = v19;
    HIBYTE(v36) = 0;
    unint64_t v20 = sub_10020C2A8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, (char *)&v36 + 7, v5, &type metadata for Data, v20);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      uint64_t v21 = (uint64_t)v17;
      unint64_t v22 = v19;
      return sub_100189B20(v21, v22);
    }

    sub_100189B20((uint64_t)v17, v19);
  }

  uint64_t v25 = (void *)objc_opt_self(&OBJC_CLASS___NSKeyedArchiver);
  sub_100183168(0LL, &qword_10064D638, &OBJC_CLASS___SFAppleIDPersonInfo_ptr);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  id v37 = 0LL;
  id v27 = [v25 archivedDataWithRootObject:isa requiringSecureCoding:1 error:&v37];

  id v28 = v37;
  if (v27)
  {
    uint64_t v29 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v27);
    unint64_t v31 = v30;

    id v37 = v29;
    unint64_t v38 = v31;
    HIBYTE(v36) = 1;
    unint64_t v32 = sub_10020C2A8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v37, (char *)&v36 + 7, v5, &type metadata for Data, v32);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = (uint64_t)v29;
    unint64_t v22 = v31;
    return sub_100189B20(v21, v22);
  }

  id v34 = v28;
  _convertNSErrorToError(_:)(v28);

  swift_willThrow(v35);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1002D1B04(void *a1)
{
  uint64_t v3 = v1;
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v5 = sub_100183098(&qword_10064D628);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = a1;
  uint64_t v47 = OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account;
  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_account] = 0LL;
  uint64_t v10 = a1[3];
  uint64_t v9 = a1[4];
  sub_10019A708(a1, v10);
  unint64_t v11 = sub_1002D21BC();
  uint64_t v44 = v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for SDAppleIDAccountInfo.CodingKeys,  &type metadata for SDAppleIDAccountInfo.CodingKeys,  v11,  v10,  v9);
  if (v2) {
    goto LABEL_3;
  }
  uint64_t v12 = v6;
  LOBYTE(v52) = 0;
  unint64_t v13 = sub_10020C198();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v49, &type metadata for Data, &v52, v5, &type metadata for Data, v13);
  uint64_t v14 = v5;
  id v15 = v8;
  uint64_t v17 = v49;
  unint64_t v16 = v50;
  sub_100183168(0LL, &qword_100646998, &OBJC_CLASS___NSKeyedUnarchiver_ptr);
  uint64_t v18 = sub_100183168(0LL, &qword_10064D648, &OBJC_CLASS___SFAppleIDAccount_ptr);
  uint64_t v19 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)(v18, v17, v16, v18);
  uint64_t v28 = v19;
  if (!v19)
  {
    uint64_t v34 = type metadata accessor for SFError(0LL);
    unint64_t v35 = sub_1002D138C();
    swift_allocError(v34, v35, 0LL, 0LL);
    *uint64_t v36 = 0xD00000000000001ELL;
    v36[1] = 0x8000000100509910LL;
    v36[2] = 0xD000000000000059LL;
    v36[3] = 0x80000001005098B0LL;
    v36[4] = 44LL;
    uint64_t v37 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104LL))( v36,  enum case for SFError.unexpected(_:),  v34);
    swift_willThrow(v37);
    sub_100189B20(v17, v16);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v14);
LABEL_3:
    uint64_t v25 = v44;
    uint64_t v24 = (objc_class *)ObjectType;
    goto LABEL_4;
  }

  sub_100189B20(v17, v16);
  uint64_t v29 = *(void **)&v3[v47];
  *(void *)&v3[v47] = v28;

  LOBYTE(v52) = 1;
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v49, &type metadata for Data, &v52, v14, &type metadata for Data, v13);
  uint64_t v21 = v49;
  unint64_t v20 = v50;
  sub_100183168(0LL, &qword_100646998, &OBJC_CLASS___NSKeyedUnarchiver_ptr);
  uint64_t v22 = sub_100183098(&qword_1006469A0);
  uint64_t v23 = swift_allocObject(v22, 56LL, 7LL);
  *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_1004CD550;
  *(void *)(v23 + 32) = sub_100183168(0LL, &qword_100645168, &OBJC_CLASS___NSString_ptr);
  *(void *)(v23 + 40) = sub_100183168(0LL, &qword_100645160, &OBJC_CLASS___NSDictionary_ptr);
  *(void *)(v23 + 48) = sub_100183168(0LL, &qword_10064D638, &OBJC_CLASS___SFAppleIDPersonInfo_ptr);
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)(&v49, v23, v21, v20);
  swift_bridgeObjectRelease((const char *)v23);
  __int128 v43 = v15;
  if (v51)
  {
    uint64_t v30 = sub_100183098(&qword_10064D640);
    char v31 = swift_dynamicCast(&v52, &v49, (char *)&type metadata for Any + 8, v30, 6LL);
    uint64_t v25 = v44;
    uint64_t v24 = (objc_class *)ObjectType;
    uint64_t v32 = v12;
    if ((v31 & 1) != 0)
    {
      sub_100189B20(v21, v20);
      uint64_t v33 = v52;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v43, v14);
      *(void *)&v25[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo_personInfo] = v33;

      v48.receiver = v25;
      v48.super_class = v24;
      id v26 = objc_msgSendSuper2(&v48, "init");
      sub_10018709C(v46);
      return v26;
    }
  }

  else
  {
    sub_1002D2200((uint64_t)&v49);
    uint64_t v25 = v44;
    uint64_t v24 = (objc_class *)ObjectType;
    uint64_t v32 = v12;
  }

  uint64_t v38 = type metadata accessor for SFError(0LL);
  unint64_t v39 = sub_1002D138C();
  swift_allocError(v38, v39, 0LL, 0LL);
  *id v40 = 0xD000000000000021LL;
  v40[1] = 0x8000000100509880LL;
  v40[2] = 0xD000000000000059LL;
  v40[3] = 0x80000001005098B0LL;
  v40[4] = 51LL;
  uint64_t v41 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v38 - 8) + 104LL))( v40,  enum case for SFError.unexpected(_:),  v38);
  swift_willThrow(v41);
  sub_100189B20(v21, v20);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v43, v14);
LABEL_4:
  sub_10018709C(v46);
  id v26 = *(id *)&v3[v47];

  swift_deallocPartialClassInstance(v25, v24, 24LL, 7LL);
  return v26;
}

uint64_t type metadata accessor for SDAppleIDAccountInfo()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary20SDAppleIDAccountInfo);
}

id sub_1002D20BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  id result = sub_1002D1B04(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D2108(void *a1)
{
  return sub_1002D17F4(a1);
}

id sub_1002D216C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAppleIDAccountInfoStoreFactory();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SDAppleIDAccountInfoStoreFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary32SDAppleIDAccountInfoStoreFactory);
}

unint64_t sub_1002D21BC()
{
  unint64_t result = qword_10064D630;
  if (!qword_10064D630)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D41E8, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064D630);
  }

  return result;
}

uint64_t sub_1002D2200(uint64_t a1)
{
  uint64_t v2 = sub_100183098((uint64_t *)&unk_100646550);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for SDAppleIDAccountInfo.CodingKeys( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_1002D228C + 4 * byte_1004D4085[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1002D22C0 + 4 * byte_1004D4080[v4]))();
}

uint64_t sub_1002D22C0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D22C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002D22D0LL);
  }
  return result;
}

uint64_t sub_1002D22DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002D22E4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1002D22E8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002D22F0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAppleIDAccountInfo.CodingKeys()
{
  return &type metadata for SDAppleIDAccountInfo.CodingKeys;
}

unint64_t sub_1002D2310()
{
  unint64_t result = qword_10064D658;
  if (!qword_10064D658)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D41C0, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064D658);
  }

  return result;
}

unint64_t sub_1002D2358()
{
  unint64_t result = qword_10064D660;
  if (!qword_10064D660)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4130, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064D660);
  }

  return result;
}

unint64_t sub_1002D23A0()
{
  unint64_t result = qword_10064D668;
  if (!qword_10064D668)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4158, &type metadata for SDAppleIDAccountInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064D668);
  }

  return result;
}

uint64_t sub_1002D23E4(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x746E756F636361LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v5 = 0xE700000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746E756F636361LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x6E496E6F73726570LL && a2 == 0xEA00000000006F66LL)
  {
    swift_bridgeObjectRelease(0xEA00000000006F66LL);
    return 1LL;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x6E496E6F73726570LL, 0xEA00000000006F66LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_1002D24E0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064D670);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064D670);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_1002D2570()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v42 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v39 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  char v7 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v39 - v8);
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *unint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    uint64_t v13 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
    uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
    switch(v20)
    {
      case 0LL:
        break;
      case 1LL:
      case 2LL:
      case 3LL:
      case 7LL:
      case 8LL:
      case 10LL:
      case 13LL:
      case 14LL:
        if (qword_100644128 == -1) {
          goto LABEL_4;
        }
        goto LABEL_15;
      case 5LL:
        uint64_t v20 = 34816LL;
        break;
      case 6LL:
        uint64_t v20 = 2LL;
        break;
      case 9LL:
      case 11LL:
        uint64_t v20 = 34818LL;
        break;
      default:
        if (qword_100643F68 != -1) {
          uint64_t v19 = swift_once(&qword_100643F68, sub_100220C68);
        }
        uint64_t v20 = qword_100669510;
        break;
    }

    Date.init()(v19);
    uint64_t v31 = v40;
    uint64_t v30 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v9 + *(int *)(v4 + 20), v12, v41);
    uint64_t *v9 = v20;
    uint64_t v32 = type metadata accessor for TaskPriority(0LL);
    uint64_t v33 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v42, 1LL, 1LL, v32);
    sub_100224F70((uint64_t)v9, (uint64_t)v7);
    uint64_t v34 = *(unsigned __int8 *)(v39 + 80);
    uint64_t v35 = (v34 + 40) & ~v34;
    uint64_t v36 = (void *)swift_allocObject(&unk_1005D9728, v35 + v5, v34 | 7);
    v36[2] = 0LL;
    v36[3] = 0LL;
    v36[4] = v1;
    sub_1002DACBC((uint64_t)v7, (uint64_t)v36 + v35);
    uint64_t v37 = v1;
    uint64_t v38 = sub_1001B37E8(v33, (uint64_t)&unk_10064D708, (uint64_t)v36);
    swift_release(v38);
    sub_100224FB4((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v30);
  }

  else
  {
    __break(1u);
LABEL_15:
    swift_once(&qword_100644128, sub_1002D24E0);
LABEL_4:
    uint64_t v21 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v21, (uint64_t)qword_10064D670);
    uint64_t v22 = v1;
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v26 = swift_slowAlloc(32LL, -1LL);
      uint64_t v44 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      unint64_t v27 = sub_10034F010(*(void *)&v1[v13]);
      uint64_t v29 = (const char *)v28;
      uint64_t v43 = sub_10018CDB4(v27, v28, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v25 + 4, v25 + 12);

      swift_bridgeObjectRelease(v29);
      _os_log_impl( (void *)&_mh_execute_header,  v23,  v24,  "Authentication type %s does not support this method",  v25,  0xCu);
      swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    else
    {
    }
  }

uint64_t sub_1002D29EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[32] = a4;
  v5[33] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v5[34] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[35] = v7;
  v5[36] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  v5[37] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[38] = v9;
  v5[39] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002D2A74, 0LL, 0LL);
}

uint64_t sub_1002D2A74()
{
  uint64_t v1 = v0[32] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(v1, v0 + 24, 0LL, 0LL);
  sub_1001915A4(v1, (uint64_t)(v0 + 19), &qword_100650630);
  if (v0[22])
  {
    uint64_t v2 = v0[33];
    sub_10019A6C4((uint64_t)(v0 + 19), (uint64_t)(v0 + 14));
    sub_100187100((uint64_t)(v0 + 19), &qword_100650630);
    uint64_t v3 = (void *)(*sub_10019A708(v0 + 14, v0[17])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess(v3, v0 + 27, 0LL, 0LL);
    uint64_t v4 = *sub_10019A708(v3, v3[3]);
    uint64_t v5 = swift_task_alloc(32LL);
    v0[40] = v5;
    *(void *)(v5 + swift_weakDestroy(v0 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[41] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1002D2D5C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)( v6,  0LL,  0LL,  0x6F6974616C6F6976LL,  0xEF293A726F66286ELL,  sub_1002DB090,  v5,  (char *)&type metadata for () + 8);
  }

  else
  {
    sub_100187100((uint64_t)(v0 + 19), &qword_100650630);
    uint64_t v8 = v0[39];
    uint64_t v9 = v0[36];
    uint64_t v18 = v0[38];
    uint64_t v19 = v0[37];
    uint64_t v11 = v0[34];
    uint64_t v10 = v0[35];
    uint64_t v12 = (void *)v0[32];
    uint64_t v13 = swift_allocObject(&unk_1005D9750, 24LL, 7LL);
    *(void *)(v13 + swift_weakDestroy(v0 + 16) = v12;
    v0[12] = sub_1002DAFD8;
    v0[13] = v13;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256LL;
    v0[10] = sub_1001B9FE4;
    v0[11] = &unk_1005D9768;
    uint64_t v14 = _Block_copy(v0 + 8);
    static DispatchQoS.unspecified.getter(v12);
    v0[30] = _swiftEmptyArrayStorage;
    uint64_t v15 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v16 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v17 = sub_1001D228C();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v16, v17, v11, v15);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v9, v14);
    _Block_release(v14);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v8, v19);
    swift_release(v0[13]);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return ((uint64_t (*)(void))v0[1])();
  }

uint64_t sub_1002D2D5C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 328);
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1002D2F60;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 320));
    uint64_t v4 = sub_1002D2DC8;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002D2DC8()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[36];
  uint64_t v12 = v0[38];
  uint64_t v13 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v5 = (void *)v0[32];
  uint64_t v6 = swift_allocObject(&unk_1005D9750, 24LL, 7LL);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = v5;
  v0[12] = sub_1002DAFD8;
  v0[13] = v6;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256LL;
  v0[10] = sub_1001B9FE4;
  v0[11] = &unk_1005D9768;
  uint64_t v7 = _Block_copy(v0 + 8);
  static DispatchQoS.unspecified.getter(v5);
  v0[30] = _swiftEmptyArrayStorage;
  uint64_t v8 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v10 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v9, v10, v4, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v1, v2, v7);
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  swift_release(v0[13]);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1002D2F60()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[36];
  uint64_t v21 = v0[38];
  uint64_t v23 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v20 = v0[35];
  uint64_t v5 = (void *)v0[32];
  swift_task_dealloc(v0[40]);
  sub_10018709C(v0 + 14);
  uint64_t v6 = swift_allocObject(&unk_1005D97A0, 32LL, 7LL);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  v0[6] = sub_1002DB010;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256LL;
  v0[4] = sub_1001B9FE4;
  v0[5] = &unk_1005D97B8;
  uint64_t v7 = _Block_copy(v0 + 2);
  swift_errorRetain(v1);
  static DispatchQoS.unspecified.getter(v5);
  v0[31] = _swiftEmptyArrayStorage;
  uint64_t v8 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v10 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 31, v9, v10, v4, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v2, v3, v7);
  _Block_release(v7);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v2, v23);
  swift_release(v0[7]);
  uint64_t v11 = v0[39];
  uint64_t v12 = v0[36];
  uint64_t v22 = v0[38];
  uint64_t v24 = v0[37];
  uint64_t v14 = v0[34];
  uint64_t v13 = v0[35];
  uint64_t v15 = (void *)v0[32];
  uint64_t v16 = swift_allocObject(&unk_1005D9750, 24LL, 7LL);
  *(void *)(v16 + swift_weakDestroy(v0 + 16) = v15;
  v0[8] = _NSConcreteStackBlock;
  v0[12] = sub_1002DAFD8;
  v0[13] = v16;
  v0[9] = 1107296256LL;
  v0[10] = sub_1001B9FE4;
  v0[11] = &unk_1005D9768;
  unint64_t v17 = _Block_copy(v0 + 8);
  static DispatchQoS.unspecified.getter(v15);
  v0[30] = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_100183098((uint64_t *)&unk_1006460D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v18, v10, v14, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v12, v17);
  _Block_release(v17);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v24);
  swift_release(v0[13]);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1002D323C(char *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v88 = *(uint8_t **)(v2 - 8);
  __chkstk_darwin(v2);
  __n128 v87 = (uint8_t *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = (void *)type metadata accessor for Date(0LL);
  unint64_t v4 = *(v86 - 1);
  __chkstk_darwin(v86);
  uint64_t v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = (uint8_t *)type metadata accessor for UUID(0LL);
  uint64_t v8 = *((void *)v7 - 1);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v93, 0LL, 0LL);
  uint64_t v12 = &qword_100654080;
  sub_1001915A4(v11, (uint64_t)&v94, &qword_100654080);
  sub_1001915A4((uint64_t)&v94, (uint64_t)&v91, &qword_100654080);
  if (!v92)
  {
    sub_100187100((uint64_t)&v91, &qword_100654080);
    unint64_t v37 = sub_100187014();
    uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0LL, 0LL);
    *(_DWORD *)uint64_t v39 = 10;
    strcpy((char *)(v39 + 8), "No peer device");
    *(_BYTE *)(v39 + 23) = -18;
    swift_willThrow(v38);
    sub_100187100((uint64_t)&v94, &qword_100654080);
    goto LABEL_16;
  }

  uint64_t v85 = (uint8_t *)v2;
  sub_1001CE0D0(&v91, (uint64_t)v96);
  sub_100187100((uint64_t)&v94, &qword_100654080);
  sub_10019A6C4((uint64_t)v96, (uint64_t)&v94);
  (*(void (**)(char *, char *, uint8_t *))(v8 + 16))( v10,  &a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID],  v7);
  uint64_t v13 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  uint64_t v14 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  uint64_t v15 = type metadata accessor for SDAuthenticationAKSAuthSession(0LL);
  uint64_t v12 = (uint64_t *)swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksSession) = 0LL;
  id v16 = [(id)objc_opt_self(SDAutoUnlockAKSManager) sharedManager];
  if (!v16)
  {
    __break(1u);
LABEL_41:
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3455LL,  0);
    __break(1u);
    return;
  }

  *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_aksManager) = (uint64_t)v16;
  *((_BYTE *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_role) = 1;
  sub_1001CE0D0(&v94, (uint64_t)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_peerDevice);
  (*(void (**)(uint64_t, char *, uint8_t *))(v8 + 32))( (uint64_t)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_sessionID,  v10,  v7);
  *(uint64_t *)((char *)v12 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationAKSAuthSession_type) = v14;
  uint64_t v7 = *(uint8_t **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession];
  *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession] = v12;
  swift_retain(v12);
  swift_release(v7);
  unint64_t v17 = (uint8_t *)[objc_allocWithZone((Class)SDAuthenticationRequest) init];
  if (!v17)
  {
    unint64_t v40 = sub_100187014();
    uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v40, 0LL, 0LL);
    *(_DWORD *)uint64_t v41 = 10;
    *(void *)(v41 + 8) = 0xD000000000000030LL;
    *(void *)(v41 + swift_weakDestroy(v0 + 16) = 0x8000000100509B90LL;
    swift_willThrow(v38);
    swift_release(v12);
LABEL_15:
    sub_10018709C(v96);
    uint64_t v2 = (uint64_t)v85;
    goto LABEL_16;
  }

  uint64_t v7 = v17;
  uint64_t v18 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession];
  if (!v18)
  {
    unint64_t v42 = sub_100187014();
    uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0LL, 0LL);
    *(_DWORD *)uint64_t v43 = 10;
    *(void *)(v43 + 8) = 0xD00000000000001ELL;
    *(void *)(v43 + swift_weakDestroy(v0 + 16) = 0x8000000100509BD0LL;
    swift_willThrow(v38);
    swift_release(v12);

    goto LABEL_15;
  }

  uint64_t v20 = *(void *)(v18 + 16);
  unint64_t v19 = *(void *)(v18 + 24);
  swift_retain(*(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession]);
  sub_10019BA8C(v20, v19);
  v21.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v84 = v13;
  uint64_t v22 = v7;
  Class isa = v21.super.isa;
  sub_100189B20(v20, v19);
  -[uint8_t setAwdlInfo:](v22, "setAwdlInfo:", isa);
  swift_release(v18);

  uint64_t v7 = v22;
  uint64_t v13 = v84;
LABEL_7:
  UUID.uuidString.getter(-[uint8_t setVersion:](v7, "setVersion:", 1LL));
  uint64_t v25 = v24;
  NSString v26 = String._bridgeToObjectiveC()();
  -[uint8_t setSessionID:](v7, "setSessionID:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  unint64_t v27 = &a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate];
  __n128 v28 = swift_beginAccess( &a1[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate],  v90,  0LL,  0LL);
  double v29 = 0.0;
  if (!(*(unsigned int (**)(char *, uint64_t, void *, __n128))(v4 + 48))(v27, 1LL, v86, v28))
  {
    uint64_t v30 = v13;
    uint64_t v31 = v86;
    uint64_t v32 = (*(uint64_t (**)(char *, char *, void *))(v4 + 16))(v6, v27, v86);
    double v29 = Date.timeIntervalSince1970.getter(v32);
    uint64_t v33 = v31;
    uint64_t v13 = v30;
    (*(void (**)(char *, void *))(v4 + 8))(v6, v33);
  }

  uint64_t v34 = Date.init()(-[uint8_t setUnlockDate:](v7, "setUnlockDate:", v29));
  double v35 = Date.timeIntervalSince1970.getter(v34);
  (*(void (**)(char *, void *))(v4 + 8))(v6, v86);
  -[uint8_t setSessionStartDate:](v7, "setSessionStartDate:", v35);
  uint64_t v2 = (uint64_t)v85;
  if (HIDWORD(*(void *)&a1[v13])) {
    goto LABEL_41;
  }
  -[uint8_t setType:](v7, "setType:");
  if ((unint64_t)(*(void *)&a1[v13] - 3LL) <= 0xB)
  {
    uint64_t v36 = v13;
    sub_10043E788(0LL, 0xF000000000000000LL);
    sub_10043E438(0LL, 0xF000000000000000LL);
    uint64_t v58 = v57;
    uint64_t v59 = Data.init(referencing:)(v57);
    unint64_t v61 = v60;
    unint64_t v4 = (unint64_t)v7;
    Class v62 = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B20(v59, v61);
    [(id)v4 setAksToken:v62];

    uint64_t v7 = (uint8_t *)v4;
    uint64_t v13 = v36;
  }

  id v63 = -[uint8_t data](v7, "data");
  if (v63)
  {
    uint64_t v64 = v63;
    uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v63);
    unint64_t v4 = v65;

    if (qword_100644128 == -1)
    {
LABEL_29:
      uint64_t v66 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v66, (uint64_t)qword_10064D670);
      uint64_t v67 = a1;
      uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
      os_log_type_t v69 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v84 = v13;
        os_log_type_t v70 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v86 = (void *)swift_slowAlloc(8LL, -1LL);
        id v71 = v67;
        __n128 v87 = v70;
        *(_DWORD *)os_log_type_t v70 = 138412290;
        uint64_t v72 = v70 + 12;
        uint64_t v85 = v70 + 4;
        uint64_t v88 = v7;
        uint64_t v73 = *(void **)&v71[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
        *(void *)&__int128 v94 = v73;
        id v74 = v73;
        uint64_t v13 = v84;
        uint64_t v75 = v72;
        uint64_t v67 = v71;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v94, (char *)&v94 + 8, v85, v75);
        os_log_type_t v76 = v86;
        *uint64_t v86 = v73;
        uint64_t v7 = v88;

        os_log_type_t v77 = v69;
        uint64_t v78 = v87;
        _os_log_impl((void *)&_mh_execute_header, v68, v77, "Sending authentication request on queue %@", v87, 0xCu);
        uint64_t v79 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v76, 1LL, v79);
        swift_slowDealloc(v76, -1LL, -1LL);
        swift_slowDealloc(v78, -1LL, -1LL);
      }

      else
      {

        uint64_t v68 = (os_log_s *)v67;
      }

      uint64_t v82 = (uint64_t)&v67[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&v67[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v89, 0LL, 0LL);
      sub_1001915A4(v82, (uint64_t)&v94, &qword_100650630);
      if (v95)
      {
        sub_10019A6C4((uint64_t)&v94, (uint64_t)&v91);
        sub_100187100((uint64_t)&v94, &qword_100650630);
        sub_10019A708(&v91, v92);
        sub_1004641AC(v48, v4, (uint64_t)v96, 0LL, *(void *)&a1[v13]);
        sub_10018709C(&v91);
      }

      else
      {
        sub_100187100((uint64_t)&v94, &qword_100650630);
      }

      sub_10034E05C(0LL, 1);
      sub_100189B20(v48, v4);
      swift_release(v12);

      sub_10018709C(v96);
      return;
    }

void sub_1002D3F2C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v34 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v6 = *(void *)(v33 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v33);
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  unint64_t v37 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    if (qword_100644128 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644128, sub_1002D24E0);
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_10064D670);
  id v19 = a1;
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v31 = v7;
  uint64_t v32 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = v6;
  if (v22)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    __n128 v28 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v23 = 138412290;
    uint64_t v29 = v18;
    id v38 = v19;
    id v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v23 + 4, v23 + 12);
    uint64_t v25 = v28;
    void *v28 = v19;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Received authentication request: %@", v23, 0xCu);
    uint64_t v26 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v25, 1LL, v26);
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  else
  {

    uint64_t v20 = (os_log_s *)v19;
  }

  __asm { BR              X12 }

uint64_t sub_1002D4B90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void **)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once(&qword_100644128, sub_1002D24E0);
    goto LABEL_13;
  }

  uint64_t v10 = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  uint64_t v7 = v10;
  if (v10)
  {
    uint64_t v11 = v10;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v11 setAwdlInfo:isa];

    [v11 setVersion:1];
    uint64_t v13 = v11;
    UUID.uuidString.getter(v13);
    uint64_t v15 = v14;
    NSString v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setSessionID:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);
  }

  if ((a1 & 0x100000000LL) == 0) {
    [v7 setErrorCode:a1];
  }
  if (v7)
  {
    id v17 = [v7 data];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
      unint64_t v21 = v20;

      if (qword_100644128 != -1) {
        swift_once(&qword_100644128, sub_1002D24E0);
      }
      uint64_t v22 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v22, (uint64_t)qword_10064D670);
      uint64_t v23 = v7;
      id v24 = (os_log_s *)Logger.logObject.getter(v23);
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        unint64_t v51 = v21;
        uint64_t v26 = swift_slowAlloc(12LL, -1LL);
        uint64_t v50 = v19;
        uint64_t v27 = (uint8_t *)v26;
        uint64_t v48 = (void *)swift_slowAlloc(8LL, -1LL);
        uint64_t v49 = v27;
        *(_DWORD *)uint64_t v27 = 138412290;
        uint64_t v55 = v23;
        __n128 v28 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v27 + 4, v27 + 12);
        uint64_t v29 = v48;
        *uint64_t v48 = v7;

        unint64_t v21 = v51;
        uint64_t v30 = v49;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Sending authentication response: %@", v49, 0xCu);
        uint64_t v31 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v29, 1LL, v31);
        swift_slowDealloc(v29, -1LL, -1LL);
        uint64_t v32 = v30;
        uint64_t v19 = v50;
        swift_slowDealloc(v32, -1LL, -1LL);
      }

      else
      {

        id v24 = (os_log_s *)v23;
      }

      uint64_t v40 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v54, 0LL, 0LL);
      sub_1001915A4(v40, (uint64_t)&v55, &qword_100650630);
      if (v57)
      {
        sub_10019A6C4((uint64_t)&v55, (uint64_t)v52);
        sub_100187100((uint64_t)&v55, &qword_100650630);
        sub_10019A708(v52, v53);
        sub_1004775FC(v19, v21, 1LL, *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
        sub_10018709C(v52);
        if ((a1 & 0x100000000LL) == 0)
        {
LABEL_20:
          sub_1001915A4(v40, (uint64_t)&v55, &qword_100650630);
          if (v57)
          {
            sub_10019A6C4((uint64_t)&v55, (uint64_t)v52);
            sub_100187100((uint64_t)&v55, &qword_100650630);
            uint64_t v41 = *sub_10019A708(v52, v53);
            unint64_t v42 = v2;
            sub_1002D8ECC( v42,  a1,  0LL,  0xE000000000000000LL,  v41,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

            sub_100189B20(v19, v21);
            return sub_10018709C(v52);
          }

          sub_100189B20(v19, v21);
          return sub_100187100((uint64_t)&v55, &qword_100650630);
        }
      }

      else
      {
        sub_100187100((uint64_t)&v55, &qword_100650630);
        if ((a1 & 0x100000000LL) == 0) {
          goto LABEL_20;
        }
      }

      sub_10034E05C(0LL, 1);

      return sub_100189B20(v19, v21);
    }
  }

  if (qword_100644128 != -1) {
    goto LABEL_33;
  }
LABEL_13:
  uint64_t v33 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v33, (uint64_t)qword_10064D670);
  uint64_t v34 = v7;
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v36 = static os_log_type_t.error.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    unint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v38 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)unint64_t v37 = 138412290;
    if (v7)
    {
      uint64_t v55 = v34;
      uint64_t v39 = v34;
    }

    else
    {
      uint64_t v55 = 0LL;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56, v37 + 4, v37 + 12);
    *id v38 = v7;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Could not convert response to data: %@", v37, 0xCu);
    uint64_t v44 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v38, 1LL, v44);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  else
  {

    uint64_t v35 = (os_log_s *)v34;
  }

  uint64_t v45 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v54, 0LL, 0LL);
  sub_1001915A4(v45, (uint64_t)&v55, &qword_100650630);
  if (v57)
  {
    sub_10019A6C4((uint64_t)&v55, (uint64_t)v52);
    sub_100187100((uint64_t)&v55, &qword_100650630);
    uint64_t v46 = *sub_10019A708(v52, v53);
    id v47 = v2;
    sub_1002D8ECC( v47,  10LL,  0LL,  0xE000000000000000LL,  v46,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

    return sub_10018709C(v52);
  }

  return sub_100187100((uint64_t)&v55, &qword_100650630);
}

uint64_t sub_1002D5324( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[47] = a8;
  v8[48] = v14;
  v8[45] = a6;
  v8[46] = a7;
  v8[43] = a4;
  v8[44] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v8[49] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[50] = v10;
  v8[51] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  v8[52] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[53] = v12;
  v8[54] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002D53B8, 0LL, 0LL);
}

uint64_t sub_1002D53B8()
{
  uint64_t v1 = v0[43] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(v1, v0 + 36, 0LL, 0LL);
  sub_1001915A4(v1, (uint64_t)(v0 + 20), &qword_100650630);
  if (v0[23])
  {
    uint64_t v2 = v0[44];
    sub_10019A6C4((uint64_t)(v0 + 20), (uint64_t)(v0 + 25));
    sub_100187100((uint64_t)(v0 + 20), &qword_100650630);
    uint64_t v3 = (void *)(*sub_10019A708(v0 + 25, v0[28])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess(v3, v0 + 30, 0LL, 0LL);
    uint64_t v4 = *sub_10019A708(v3, v3[3]);
    uint64_t v5 = swift_task_alloc(32LL);
    v0[55] = v5;
    *(void *)(v5 + swift_weakDestroy(v0 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[56] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1002D560C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)( v6,  0LL,  0LL,  0x6F6974616C6F6976LL,  0xEF293A726F66286ELL,  sub_100284668,  v5,  (char *)&type metadata for () + 8);
  }

  else
  {
    sub_100187100((uint64_t)(v0 + 20), &qword_100650630);
    if (qword_100644128 != -1) {
      swift_once(&qword_100644128, sub_1002D24E0);
    }
    uint64_t v8 = type metadata accessor for Logger(0LL);
    uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_10064D670);
    v0[58] = v9;
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Starting ranging", v12, 2u);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    uint64_t v13 = (void *)swift_task_alloc(dword_10064CBE4);
    v0[59] = v13;
    void *v13 = v0;
    v13[1] = sub_1002D5A94;
    return sub_1002C27A8(v0[46], v0[47], v0[48]);
  }

uint64_t sub_1002D560C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 448);
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1002D5788;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 440));
    uint64_t v4 = sub_1002D5678;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002D5678()
{
  if (qword_100644128 != -1) {
    swift_once(&qword_100644128, sub_1002D24E0);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064D670);
  v0[58] = v2;
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting ranging", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = (void *)swift_task_alloc(dword_10064CBE4);
  v0[59] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002D5A94;
  return sub_1002C27A8(v0[46], v0[47], v0[48]);
}

uint64_t sub_1002D5788()
{
  uint64_t v1 = *(void *)(v0 + 456);
  *(void *)(v0 + 336) = v1;
  swift_errorRetain(v1);
  uint64_t v2 = sub_100183098(&qword_100645710);
  char v3 = swift_dynamicCast(v0 + 264, v0 + 336, v2, &type metadata for SFAuthenticationErrorMessage, 6LL);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v27 = *(void *)(v0 + 424);
  uint64_t v28 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v7 = *(void **)(v0 + 344);
  if ((v3 & 1) != 0)
  {
    int v8 = *(_DWORD *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v11 = swift_allocObject(&unk_1005D9688, 48LL, 7LL);
    *(void *)(v0 + 56) = v11;
    uint64_t v12 = (void *)(v0 + 56);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v11 + swift_weakDestroy(v0 + 16) = v7;
    *(_DWORD *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v10;
    *(void *)(v11 + 40) = v9;
    *(void *)(v0 + 24) = 1107296256LL;
    *(void *)(v0 + 32) = sub_1001B9FE4;
    *(void *)(v0 + 40) = &unk_1005D96A0;
    *(void *)(v0 + 48) = sub_1002DAE3C;
    uint64_t v13 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v7);
    *(void *)(v0 + 312) = _swiftEmptyArrayStorage;
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v15 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v16 = sub_1001D228C();
    uint64_t v17 = v0 + 312;
    uint64_t v18 = v15;
    uint64_t v19 = v6;
    uint64_t v20 = v14;
  }

  else
  {
    uint64_t v21 = swift_allocObject(&unk_1005D9638, 24LL, 7LL);
    *(void *)(v0 + 152) = v21;
    uint64_t v12 = (void *)(v0 + 152);
    *(void *)(v0 + 112) = _NSConcreteStackBlock;
    *(void *)(v21 + swift_weakDestroy(v0 + 16) = v7;
    *(void *)(v0 + 120) = 1107296256LL;
    *(void *)(v0 + 128) = sub_1001B9FE4;
    *(void *)(v0 + 136) = &unk_1005D9650;
    *(void *)(v0 + 144) = sub_1002DAE08;
    uint64_t v13 = _Block_copy((const void *)(v0 + 112));
    static DispatchQoS.unspecified.getter(v7);
    *(void *)(v0 + 320) = _swiftEmptyArrayStorage;
    uint64_t v22 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v23 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v16 = sub_1001D228C();
    uint64_t v17 = v0 + 320;
    uint64_t v18 = v23;
    uint64_t v19 = v6;
    uint64_t v20 = v22;
  }

  dispatch thunk of SetAlgebra.init<A>(_:)(v17, v18, v16, v19, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v4, v5, v13);
  _Block_release(v13);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v28);
  swift_release(*v12);
  uint64_t v24 = *(void *)(v0 + 408);
  swift_task_dealloc(*(void *)(v0 + 432));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D5A94()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 472LL);
  *(void *)(*(void *)v1 + 480LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    char v3 = sub_1002D5CFC;
  }
  else {
    char v3 = sub_1002D5AF8;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002D5AF8(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ranging started", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v5 = v1[54];
  uint64_t v6 = v1[51];
  uint64_t v17 = v1[53];
  uint64_t v18 = v1[52];
  uint64_t v8 = v1[49];
  uint64_t v7 = v1[50];
  uint64_t v9 = (void *)v1[43];

  uint64_t v10 = swift_allocObject(&unk_1005D96D8, 24LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = v9;
  v1[12] = sub_1002DAE78;
  v1[13] = v10;
  v1[8] = _NSConcreteStackBlock;
  void v1[9] = 1107296256LL;
  v1[10] = sub_1001B9FE4;
  v1[11] = &unk_1005D96F0;
  uint64_t v11 = _Block_copy(v1 + 8);
  static DispatchQoS.unspecified.getter(v9);
  v1[41] = _swiftEmptyArrayStorage;
  uint64_t v12 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v13 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v14 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 41, v13, v14, v8, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v5, v6, v11);
  _Block_release(v11);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v18);
  swift_release(v1[13]);
  uint64_t v15 = v1[51];
  swift_task_dealloc(v1[54]);
  swift_task_dealloc(v15);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1002D5CFC()
{
  uint64_t v1 = *(void *)(v0 + 480);
  *(void *)(v0 + 336) = v1;
  swift_errorRetain(v1);
  uint64_t v2 = sub_100183098(&qword_100645710);
  char v3 = swift_dynamicCast(v0 + 264, v0 + 336, v2, &type metadata for SFAuthenticationErrorMessage, 6LL);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v27 = *(void *)(v0 + 424);
  uint64_t v28 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v26 = *(void *)(v0 + 400);
  uint64_t v7 = *(void **)(v0 + 344);
  if ((v3 & 1) != 0)
  {
    int v8 = *(_DWORD *)(v0 + 264);
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v11 = swift_allocObject(&unk_1005D9688, 48LL, 7LL);
    *(void *)(v0 + 56) = v11;
    uint64_t v12 = (void *)(v0 + 56);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v11 + swift_weakDestroy(v0 + 16) = v7;
    *(_DWORD *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v10;
    *(void *)(v11 + 40) = v9;
    *(void *)(v0 + 24) = 1107296256LL;
    *(void *)(v0 + 32) = sub_1001B9FE4;
    *(void *)(v0 + 40) = &unk_1005D96A0;
    *(void *)(v0 + 48) = sub_1002DAE3C;
    uint64_t v13 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v7);
    *(void *)(v0 + 312) = _swiftEmptyArrayStorage;
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v15 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v16 = sub_1001D228C();
    uint64_t v17 = v0 + 312;
    uint64_t v18 = v15;
    uint64_t v19 = v6;
    uint64_t v20 = v14;
  }

  else
  {
    uint64_t v21 = swift_allocObject(&unk_1005D9638, 24LL, 7LL);
    *(void *)(v0 + 152) = v21;
    uint64_t v12 = (void *)(v0 + 152);
    *(void *)(v0 + 112) = _NSConcreteStackBlock;
    *(void *)(v21 + swift_weakDestroy(v0 + 16) = v7;
    *(void *)(v0 + 120) = 1107296256LL;
    *(void *)(v0 + 128) = sub_1001B9FE4;
    *(void *)(v0 + 136) = &unk_1005D9650;
    *(void *)(v0 + 144) = sub_1002DAE08;
    uint64_t v13 = _Block_copy((const void *)(v0 + 112));
    static DispatchQoS.unspecified.getter(v7);
    *(void *)(v0 + 320) = _swiftEmptyArrayStorage;
    uint64_t v22 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v23 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v16 = sub_1001D228C();
    uint64_t v17 = v0 + 320;
    uint64_t v18 = v23;
    uint64_t v19 = v6;
    uint64_t v20 = v22;
  }

  dispatch thunk of SetAlgebra.init<A>(_:)(v17, v18, v16, v19, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v4, v5, v13);
  _Block_release(v13);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v28);
  swift_release(*v12);
  uint64_t v24 = *(void *)(v0 + 408);
  swift_task_dealloc(*(void *)(v0 + 432));
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D5FF4(char *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    uint64_t v9 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v14, 0LL, 0LL);
    sub_1001915A4(v9, (uint64_t)v15, &qword_100650630);
    if (v16)
    {
      sub_10019A6C4((uint64_t)v15, (uint64_t)v13);
      sub_100187100((uint64_t)v15, &qword_100650630);
      uint64_t v10 = *sub_10019A708(v13, v13[3]);
      uint64_t v11 = a1;
      sub_1002D8ECC( v11,  10LL,  0LL,  0xE000000000000000LL,  v10,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

      return sub_10018709C(v13);
    }

    else
    {
      return sub_100187100((uint64_t)v15, &qword_100650630);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1002D61A8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  void *v10 = v11;
  unsigned int v12 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v13 = *(void (**)(void *, void, uint64_t))(v8 + 104);
  v13(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v103 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)(v10);
  uint64_t v14 = *(void (**)(void *, uint64_t))(v8 + 8);
  v14(v10, v7);
  if ((v11 & 1) != 0)
  {
    uint64_t v100 = v6;
    if (qword_100644128 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644128, sub_1002D24E0);
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_10064D670);
  id v17 = a1;
  uint64_t v104 = v16;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v102 = v13;
  unsigned int v101 = v12;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc(12LL, -1LL);
    uint64_t v99 = v14;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v97 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v22 = 138412290;
    uint64_t v109 = (uint64_t)v17;
    id v23 = v17;
    os_log_t v98 = v2;
    id v24 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110, v22 + 4, v22 + 12);
    os_log_type_t v25 = v97;
    *uint64_t v97 = v17;

    uint64_t v2 = v98;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received authentication response: %@", v22, 0xCu);
    uint64_t v26 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v25, 1LL, v26);
    swift_slowDealloc(v25, -1LL, -1LL);
    uint64_t v27 = v22;
    uint64_t v14 = v99;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  else
  {

    uint64_t v18 = (os_log_s *)v17;
  }

  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  BOOL v30 = v29 > 0xE;
  uint64_t v31 = (1LL << v29) & 0x658E;
  if (!v30 && v31 != 0)
  {
    uint64_t v33 = v2;
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v109 = v37;
      *(_DWORD *)os_log_type_t v36 = 136315138;
      unint64_t v38 = sub_10034F010(*(void *)&v2[v28]);
      uint64_t v40 = (const char *)v39;
      uint64_t v105 = sub_10018CDB4(v38, v39, &v109);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v36 + 4, v36 + 12);

      swift_bridgeObjectRelease(v40);
      _os_log_impl( (void *)&_mh_execute_header,  v34,  v35,  "Authentication type %s does not support handling this message",  v36,  0xCu);
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);

      return;
    }

    goto LABEL_13;
  }

  sub_10034E730();
  if ([v17 hasErrorCode])
  {
    unsigned int v41 = [v17 errorCode];
    unint64_t v42 = sub_100187014();
    uint64_t v43 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0LL, 0LL);
    uint64_t v45 = v43;
    *(_DWORD *)uint64_t v44 = v41;
    unint64_t v46 = 0xD00000000000001CLL;
    id v47 = "Remote device threw an error";
LABEL_20:
    *(void *)(v44 + 8) = v46;
    *(void *)(v44 + swift_weakDestroy(v0 + 16) = (unint64_t)(v47 - 32) | 0x8000000000000000LL;
    swift_willThrow(v43);
    goto LABEL_22;
  }

  uint64_t v48 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession];
  if (!v48)
  {
    unint64_t v54 = sub_100187014();
    uint64_t v43 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v54, 0LL, 0LL);
    uint64_t v45 = v43;
    *(_DWORD *)uint64_t v44 = 10;
    unint64_t v46 = 0xD000000000000013LL;
    id v47 = "Missing aks session";
    goto LABEL_20;
  }

  swift_retain(*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_aksAuthSession]);
  id v49 = [v17 aksToken];
  if (v49)
  {
    uint64_t v50 = v49;
    id v51 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v49);
    unint64_t v53 = v52;

    sub_10019BA8C((uint64_t)v51, v53);
    uint64_t v99 = (void (*)(void *, uint64_t))v53;
    sub_10043E438((uint64_t)v51, v53);
    uint64_t v73 = v17;
    id v103 = v51;
    uint64_t v75 = v74;
    unint64_t v76 = (unint64_t)v99;
    sub_100189B20((uint64_t)v51, (unint64_t)v99);
    uint64_t v33 = v75;
    uint64_t v77 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v75);
    uint64_t v79 = v78;

    unint64_t v80 = (uint64_t *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
    uint64_t v81 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
    unint64_t v82 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8];
    *unint64_t v80 = v77;
    v80[1] = v79;
    sub_100189B0C(v81, v82);
    id v83 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
    NSString v84 = String._bridgeToObjectiveC()();
    unsigned __int8 v85 = [v83 BOOLForKey:v84];

    if ((v85 & 1) == 0 && (unint64_t)(*(void *)&v2[v28] - 1LL) < 4)
    {
      uint64_t v87 = type metadata accessor for TaskPriority(0LL);
      uint64_t v88 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56LL))(v100, 1LL, 1LL, v87);
      uint64_t v89 = (void *)swift_allocObject(&unk_1005D9548, 56LL, 7LL);
      v89[2] = 0LL;
      v89[3] = 0LL;
      v89[4] = v73;
      v89[5] = v48;
      v89[6] = v2;
      id v90 = v73;
      __int128 v91 = v2;
      swift_retain(v48);
      uint64_t v92 = sub_1001B37E8(v88, (uint64_t)&unk_10064D6E0, (uint64_t)v89);
      sub_100189B20((uint64_t)v103, v76);
      swift_release(v92);
      swift_release(v48);
LABEL_13:

      return;
    }

    uint64_t v93 = (os_log_s *)Logger.logObject.getter(v86);
    os_log_type_t v94 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v93, v94))
    {
      uint64_t v95 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v95 = 0;
      _os_log_impl((void *)&_mh_execute_header, v93, v94, "Skipping ranging", v95, 2u);
      swift_slowDealloc(v95, -1LL, -1LL);
    }

    LOBYTE(v109) = 1;
    sub_1002D6BF8(0x100000000LL);

    sub_100189B20((uint64_t)v103, v76);
    swift_release(v48);
    return;
  }

  unint64_t v55 = sub_100187014();
  uint64_t v45 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v55, 0LL, 0LL);
  *(_DWORD *)uint64_t v56 = 10;
  *(void *)(v56 + 8) = 0xD00000000000001FLL;
  *(void *)(v56 + swift_weakDestroy(v0 + 16) = 0x8000000100509AE0LL;
  swift_willThrow(v45);
  swift_release(v48);
LABEL_22:
  uint64_t v105 = v45;
  swift_errorRetain(v45);
  uint64_t v57 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(&v109, &v105, v57, &type metadata for SFAuthenticationErrorMessage, 6LL))
  {
    uint64_t v58 = v109;
    unint64_t v60 = (void *)v110[0];
    uint64_t v59 = (const char *)v110[1];
    unint64_t v61 = v102;
    id v62 = v103;
    void *v10 = v103;
    v61(v10, v101, v7);
    id v63 = v62;
    LOBYTE(v62) = _dispatchPreconditionTest(_:)(v10);
    v14(v10, v7);
    if ((v62 & 1) != 0)
    {
      uint64_t v64 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v108, 0LL, 0LL);
      sub_1001915A4(v64, (uint64_t)&v109, &qword_100650630);
      if (v111)
      {
        sub_10019A6C4((uint64_t)&v109, (uint64_t)&v105);
        sub_100187100((uint64_t)&v109, &qword_100650630);
        uint64_t v65 = *sub_10019A708(&v105, v107);
        uint64_t v66 = v2;
        sub_1002D8ECC( v66,  v58,  v60,  (uint64_t)v59,  v65,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

        sub_10018709C(&v105);
      }

      else
      {
        sub_100187100((uint64_t)&v109, &qword_100650630);
      }

      swift_errorRelease(v45);
      swift_bridgeObjectRelease(v59);
      return;
    }

    __break(1u);
LABEL_42:
    __break(1u);
    return;
  }

  uint64_t v67 = v102;
  id v68 = v103;
  void *v10 = v103;
  v67(v10, v101, v7);
  id v69 = v68;
  LOBYTE(v68) = _dispatchPreconditionTest(_:)(v10);
  v14(v10, v7);
  uint64_t v70 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v108, 0LL, 0LL);
  sub_1001915A4(v70, (uint64_t)&v109, &qword_100650630);
  if (v111)
  {
    sub_10019A6C4((uint64_t)&v109, (uint64_t)&v105);
    sub_100187100((uint64_t)&v109, &qword_100650630);
    uint64_t v71 = *sub_10019A708(&v105, v107);
    uint64_t v72 = v2;
    sub_1002D8ECC( v72,  10LL,  0LL,  0xE000000000000000LL,  v71,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

    sub_10018709C(&v105);
  }

  else
  {
    sub_100187100((uint64_t)&v109, &qword_100650630);
  }

  swift_errorRelease(v45);
}

uint64_t sub_1002D6BF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v11 = [objc_allocWithZone((Class)SDAuthenticationToken) init];
  unsigned int v12 = v11;
  if (v11)
  {
    uint64_t v29 = v5;
    [v11 setVersion:1];
    id v13 = v12;
    UUID.uuidString.getter(v13);
    uint64_t v15 = v14;
    NSString v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setSessionID:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

    unint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8];
    if (v17 >> 60 == 15)
    {
      id v18 = v13;
      Class isa = 0LL;
    }

    else
    {
      uint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken];
      id v21 = v13;
      sub_1001A4C04(v20, v17);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100189B0C(v20, v17);
    }

    [v13 setAksToken:isa];

    uint64_t v5 = v29;
  }

  if ((a1 & 0x100000000LL) == 0) {
    [v12 setErrorCode:a1];
  }
  uint64_t v22 = swift_allocObject(&unk_1005D95C0, 37LL, 7LL);
  *(void *)(v22 + swift_weakDestroy(v0 + 16) = v12;
  *(void *)(v22 + 24) = v2;
  *(_DWORD *)(v22 + 32) = a1;
  *(_BYTE *)(v22 + 36) = BYTE4(a1) & 1;
  aBlock[4] = sub_1002D8DF0;
  uint64_t v34 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005D95D8;
  id v23 = _Block_copy(aBlock);
  id v24 = v12;
  static DispatchQoS.unspecified.getter(v2);
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v25 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v26 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v27 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v32, v26, v27, v4, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v7, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return swift_release(v34);
}

uint64_t sub_1002D6EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v6[12] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[13] = v8;
  v6[14] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  v6[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[16] = v10;
  v6[17] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002D6F88, 0LL, 0LL);
}

uint64_t sub_1002D6F88()
{
  id v1 = [*(id *)(v0 + 72) awdlInfo];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
  unint64_t v5 = v4;

  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 152) = v5;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v7 = sub_100089EF4(isa);

  if (!v7)
  {
    sub_100189B20(v3, v5);
LABEL_5:
    unint64_t v11 = sub_100187014();
    uint64_t v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v11, 0LL, 0LL);
    *(_DWORD *)uint64_t v13 = 1;
    *(void *)(v13 + 8) = 0xD00000000000001FLL;
    *(void *)(v13 + swift_weakDestroy(v0 + 16) = 0x8000000100509B20LL;
    swift_willThrow(v12);
LABEL_6:
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 112);
    uint64_t v34 = *(void *)(v0 + 128);
    uint64_t v35 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v33 = *(void *)(v0 + 104);
    unint64_t v17 = *(void **)(v0 + 88);
    uint64_t v18 = swift_allocObject(&unk_1005D9570, 32LL, 7LL);
    *(void *)(v18 + swift_weakDestroy(v0 + 16) = v12;
    *(void *)(v18 + 24) = v17;
    *(void *)(v0 + 48) = sub_1002DB040;
    *(void *)(v0 + 56) = v18;
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256LL;
    *(void *)(v0 + 32) = sub_1001B9FE4;
    *(void *)(v0 + 40) = &unk_1005D9588;
    os_log_type_t v19 = _Block_copy((const void *)(v0 + 16));
    swift_errorRetain(v12);
    static DispatchQoS.unspecified.getter(v17);
    *(void *)(v0 + 64) = _swiftEmptyArrayStorage;
    uint64_t v20 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v21 = sub_100183098((uint64_t *)&unk_1006460D0);
    unint64_t v22 = sub_1001D228C();
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 64, v21, v22, v16, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v14, v15, v19);
    _Block_release(v19);
    swift_errorRelease(v12);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v14, v35);
    swift_release(*(void *)(v0 + 56));
    uint64_t v23 = *(void *)(v0 + 112);
    swift_task_dealloc(*(void *)(v0 + 136));
    swift_task_dealloc(v23);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v8 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v7,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  *(void *)(v0 + 160) = v8;

  id v9 = sub_10043E64C();
  *(void *)(v0 + 168) = v9;
  *(void *)(v0 + 176) = v10;
  uint64_t v25 = (uint64_t)v9;
  unint64_t v26 = v10;
  uint64_t v27 = *(void *)(v0 + 88);
  sub_1002D6BF8(0x100000000LL);
  uint64_t v28 = *(void *)(v27 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  *(void *)(v0 + 184) = v28;
  if (!v28)
  {
    unint64_t v31 = sub_100187014();
    uint64_t v12 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v31, 0LL, 0LL);
    *(_DWORD *)uint64_t v32 = 10;
    *(void *)(v32 + 8) = 0xD000000000000012LL;
    *(void *)(v32 + swift_weakDestroy(v0 + 16) = 0x8000000100509B40LL;
    swift_willThrow(v12);
    sub_100189B20(v3, v5);
    swift_bridgeObjectRelease(v8);
    sub_100189B20(v25, v26);
    goto LABEL_6;
  }

  uint64_t v29 = dword_10064CBE4;
  swift_retain(v28);
  uint64_t v30 = (void *)swift_task_alloc(v29);
  *(void *)(v0 + 192) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1002D7350;
  return sub_1002C27A8((uint64_t)v8, v25, v26);
}

uint64_t sub_1002D7350()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 192);
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(*(const char **)(v2 + 160));
  if (v0) {
    unint64_t v4 = sub_1002D7428;
  }
  else {
    unint64_t v4 = sub_1002D73BC;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1002D73BC()
{
  unint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  unint64_t v3 = *(void *)(v0 + 152);
  swift_release(*(void *)(v0 + 184));
  sub_100189B20(v2, v1);
  sub_100189B20(v4, v3);
  uint64_t v5 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002D7428()
{
  unint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[18];
  unint64_t v3 = v0[19];
  swift_release(v0[23]);
  sub_100189B20(v2, v1);
  sub_100189B20(v4, v3);
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[14];
  uint64_t v18 = v0[16];
  uint64_t v19 = v0[15];
  uint64_t v8 = v0[12];
  uint64_t v17 = v0[13];
  id v9 = (void *)v0[11];
  uint64_t v10 = swift_allocObject(&unk_1005D9570, 32LL, 7LL);
  *(void *)(v10 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(v10 + 24) = v9;
  v0[6] = sub_1002DB040;
  v0[7] = v10;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256LL;
  v0[4] = sub_1001B9FE4;
  v0[5] = &unk_1005D9588;
  unint64_t v11 = _Block_copy(v0 + 2);
  swift_errorRetain(v5);
  static DispatchQoS.unspecified.getter(v9);
  v0[8] = _swiftEmptyArrayStorage;
  uint64_t v12 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v13 = sub_100183098((uint64_t *)&unk_1006460D0);
  unint64_t v14 = sub_1001D228C();
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 8, v13, v14, v8, v12);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v6, v7, v11);
  _Block_release(v11);
  swift_errorRelease(v5);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v6, v19);
  swift_release(v0[7]);
  uint64_t v15 = v0[14];
  swift_task_dealloc(v0[17]);
  swift_task_dealloc(v15);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1002D7600(uint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v23[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v23[0] = a1;
  swift_errorRetain(a1);
  uint64_t v8 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(&v26, v23, v8, &type metadata for SFAuthenticationErrorMessage, 6LL) & 1) == 0)
  {
    uint64_t v17 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    *uint64_t v7 = v17;
    (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
    id v18 = v17;
    LOBYTE(v17) = _dispatchPreconditionTest(_:)(v7);
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
    if ((v17 & 1) != 0)
    {
      uint64_t v19 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v25, 0LL, 0LL);
      sub_1001915A4(v19, (uint64_t)&v26, &qword_100650630);
      if (v29)
      {
        sub_10019A6C4((uint64_t)&v26, (uint64_t)v23);
        sub_100187100((uint64_t)&v26, &qword_100650630);
        uint64_t v20 = *sub_10019A708(v23, v24);
        uint64_t v21 = a2;
        sub_1002D8ECC( v21,  10LL,  0LL,  0xE000000000000000LL,  v20,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

        sub_10018709C(v23);
      }

      else
      {
        sub_100187100((uint64_t)&v26, &qword_100650630);
      }

      return;
    }

uint64_t sub_1002D7954(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v26[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_100644128 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644128, sub_1002D24E0);
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v10, (uint64_t)qword_10064D670);
  id v11 = a1;
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v14 = 138412290;
    id v29 = v11;
    id v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v14 + 4, v14 + 12);
    *uint64_t v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Received confirmation: %@", v14, 0xCu);
    uint64_t v17 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v15, 1LL, v17);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {

    uint64_t v12 = (os_log_s *)v11;
  }

  sub_10034E730();
  if ([v11 success])
  {
    uint64_t v18 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v28, 0LL, 0LL);
    sub_1001915A4(v18, (uint64_t)&v29, &qword_100650630);
    if (v31)
    {
      sub_10019A6C4((uint64_t)&v29, (uint64_t)v26);
      sub_100187100((uint64_t)&v29, &qword_100650630);
      uint64_t v19 = (char *)*sub_10019A708(v26, v27);
      uint64_t v20 = v2;
      sub_10033ABCC(v20, v19);
LABEL_14:

      return sub_10018709C(v26);
    }
  }

  else
  {
    else {
      uint64_t v21 = 10LL;
    }
    uint64_t v22 = (uint64_t)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v28, 0LL, 0LL);
    sub_1001915A4(v22, (uint64_t)&v29, &qword_100650630);
    if (v31)
    {
      sub_10019A6C4((uint64_t)&v29, (uint64_t)v26);
      sub_100187100((uint64_t)&v29, &qword_100650630);
      uint64_t v23 = *sub_10019A708(v26, v27);
      uint64_t v20 = v2;
      sub_1002D8ECC( v20,  v21,  (void *)0xD00000000000001CLL,  0x8000000100509BF0LL,  v23,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);
      goto LABEL_14;
    }
  }

  return sub_100187100((uint64_t)&v29, &qword_100650630);
}

uint64_t sub_1002D7D48()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_100644128 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644128, sub_1002D24E0);
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_10064D670);
  uint64_t v8 = v0;
  id v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)id v11 = 136315138;
    v26[0] = v12;
    uint64_t v13 = type metadata accessor for UUID(0LL);
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    uint64_t v17 = (const char *)v16;
    uint64_t v23 = sub_10018CDB4(v15, v16, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v11 + 4, v11 + 12);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v18 = (uint64_t)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&v8[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v25, 0LL, 0LL);
  sub_1001915A4(v18, (uint64_t)v26, &qword_100650630);
  if (!v26[3]) {
    return sub_100187100((uint64_t)v26, &qword_100650630);
  }
  sub_10019A6C4((uint64_t)v26, (uint64_t)&v23);
  sub_100187100((uint64_t)v26, &qword_100650630);
  uint64_t v19 = *sub_10019A708(&v23, v24[2]);
  uint64_t v20 = v8;
  sub_1002D8ECC( v20,  12LL,  0LL,  0xE000000000000000LL,  v19,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

  return sub_10018709C(&v23);
}

uint64_t sub_1002D80A0(void *a1, char *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (uint64_t *)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  if (a1 && (id v11 = [a1 data]) != 0)
  {
    uint64_t v12 = v11;
    uint64_t v48 = v8;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
    unint64_t v50 = v13;

    if (qword_100644128 == -1) {
      goto LABEL_4;
    }
  }

  else
  {
    uint64_t v24 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
    void *v10 = v24;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
    id v25 = v24;
    char v26 = _dispatchPreconditionTest(_:)(v10);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    if ((v26 & 1) != 0)
    {
      uint64_t v27 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
      swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v51, 0LL, 0LL);
      sub_1001915A4(v27, (uint64_t)&v57, &qword_100650630);
      if (!v59) {
        return sub_100187100((uint64_t)&v57, &qword_100650630);
      }
      sub_10019A6C4((uint64_t)&v57, (uint64_t)&v55);
      sub_100187100((uint64_t)&v57, &qword_100650630);
      uint64_t v28 = *sub_10019A708(&v55, v56);
      id v29 = a2;
      sub_1002D8ECC( v29,  10LL,  (void *)0xD000000000000025LL,  0x8000000100509B60LL,  v28,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

      return sub_10018709C(&v55);
    }

    __break(1u);
  }

  swift_once(&qword_100644128, sub_1002D24E0);
LABEL_4:
  uint64_t v14 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v14, (uint64_t)qword_10064D670);
  id v15 = a1;
  unint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v49 = v7;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v20 = swift_slowAlloc(8LL, -1LL);
    id v47 = a2;
    uint64_t v45 = (void *)v20;
    uint64_t v46 = v3;
    *(_DWORD *)uint64_t v19 = 138412290;
    id v57 = v15;
    id v21 = v15;
    uint64_t v3 = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v19 + 4, v19 + 12);
    uint64_t v22 = v45;
    *uint64_t v45 = a1;

    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Sending token: %@", v19, 0xCu);
    uint64_t v23 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v22, 1LL, v23);
    a2 = v47;
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v31 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v54, 0LL, 0LL);
  sub_1001915A4(v31, (uint64_t)&v55, &qword_100654080);
  unint64_t v32 = v50;
  if (!v56)
  {
    sub_100187100((uint64_t)&v55, &qword_100654080);
    uint64_t v35 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v51, 0LL, 0LL);
    sub_1001915A4(v35, (uint64_t)&v57, &qword_100650630);
    if (v59)
    {
      sub_10019A6C4((uint64_t)&v57, (uint64_t)&v55);
      sub_100187100((uint64_t)&v57, &qword_100650630);
      sub_10019A708(&v55, v56);
      sub_1004775FC(v3, v32, 7LL, *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
      uint64_t v34 = &v55;
      goto LABEL_16;
    }

    os_log_type_t v36 = (__int128 *)&v57;
LABEL_19:
    sub_100187100((uint64_t)v36, &qword_100650630);
    goto LABEL_20;
  }

  sub_1001CE0D0(&v55, (uint64_t)&v57);
  uint64_t v33 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v52, 0LL, 0LL);
  sub_1001915A4(v33, (uint64_t)&v55, &qword_100650630);
  if (!v56)
  {
    sub_10018709C(&v57);
    os_log_type_t v36 = &v55;
    goto LABEL_19;
  }

  sub_10019A6C4((uint64_t)&v55, (uint64_t)v51);
  sub_100187100((uint64_t)&v55, &qword_100650630);
  sub_10019A708(v51, v51[3]);
  sub_1004641AC( v3,  v32,  (uint64_t)&v57,  7LL,  *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
  sub_10018709C(&v57);
  uint64_t v34 = (__int128 *)v51;
LABEL_16:
  sub_10018709C(v34);
LABEL_20:
  a2[OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_isConfirmationSent] = 1;
  if ((a3 & 0x100000000LL) != 0)
  {
LABEL_25:
    sub_10034E05C(0LL, 1);
    return sub_100189B20(v3, v32);
  }

  uint64_t v37 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  void *v10 = v37;
  uint64_t v38 = v48;
  uint64_t v39 = v49;
  (*(void (**)(void *, void, uint64_t))(v48 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v49);
  id v40 = v37;
  LOBYTE(v37) = _dispatchPreconditionTest(_:)(v10);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v38 + 8))(v10, v39);
  if ((v37 & 1) != 0)
  {
    uint64_t v41 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v53, 0LL, 0LL);
    sub_1001915A4(v41, (uint64_t)&v57, &qword_100650630);
    if (v59)
    {
      sub_10019A6C4((uint64_t)&v57, (uint64_t)&v55);
      sub_100187100((uint64_t)&v57, &qword_100650630);
      uint64_t v42 = *sub_10019A708(&v55, v56);
      uint64_t v43 = a2;
      sub_1002D8ECC( v43,  a3,  0LL,  0xE000000000000000LL,  v42,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  (uint64_t (*)(uint64_t))sub_1002DABB0,  sub_1002DB064,  sub_1002DABCC);

      sub_10018709C(&v55);
    }

    else
    {
      sub_100187100((uint64_t)&v57, &qword_100650630);
    }

    goto LABEL_25;
  }

  __break(1u);
  return result;
}

uint64_t sub_1002D8784()
{
  return sub_100189B0C( *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken),  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_authToken + 8));
}

uint64_t sub_1002D8820()
{
  return type metadata accessor for SDAuthenticationKeySession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationKeySession(uint64_t a1)
{
  uint64_t result = qword_10064D6C8;
  if (!qword_10064D6C8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationKeySession);
  }
  return result;
}

void sub_1002D8864(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\b";
    void v4[2] = &unk_1004D4298;
    void v4[3] = &unk_1004D42B0;
    swift_updateClassMetadata2(a1, 256LL, 4LL, v4, a1 + 344);
  }

uint64_t sub_1002D88EC(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary26SDAuthenticationKeySession_lastUnlockDate;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1001C9860(a1, v3, &qword_1006457E8);
  return swift_endAccess(v5);
}

void sub_1002D8950()
{
}

void sub_1002D8970(void *a1)
{
}

void sub_1002D8990(void *a1)
{
}

void sub_1002D89B0(uint64_t (*a1)(uint64_t), uint64_t a2)
{
}

void sub_1002D89D4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
}

void sub_1002D89F8( uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(void, void))
{
  id v6 = v4;
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain(v7);
    unint64_t v11 = 0LL;
    uint64_t v12 = 72LL;
    while (1)
    {
      char v13 = a1(v7 + v12 - 40);
      if (v5)
      {
LABEL_6:
        swift_bridgeObjectRelease(v7);
        return;
      }

      if ((v13 & 1) != 0) {
        break;
      }
      ++v11;
      v12 += 40LL;
      if (v8 == v11) {
        goto LABEL_6;
      }
    }

    swift_bridgeObjectRelease(v7);
    if (!__OFADD__(v11, 1LL))
    {
      unint64_t v14 = *(void *)(v7 + 16);
      if (v11 + 1 == v14) {
        return;
      }
      unint64_t v15 = v11 + 1;
      uint64_t v30 = v4;
      while (v15 < v14)
      {
        sub_10019A6C4(v7 + v12, (uint64_t)v29);
        char v16 = a1((uint64_t)v29);
        sub_10018709C(v29);
        if ((v16 & 1) == 0)
        {
          if (v15 != v11)
          {
            if ((v11 & 0x8000000000000000LL) != 0) {
              goto LABEL_30;
            }
            os_log_type_t v17 = v6;
            BOOL v18 = a4;
            uint64_t v19 = *v17;
            unint64_t v20 = *(void *)(*v17 + 16);
            if (v11 >= v20) {
              goto LABEL_31;
            }
            sub_10019A6C4(v19 + 40 * v11 + 32, (uint64_t)v29);
            if (v15 >= v20) {
              goto LABEL_32;
            }
            sub_10019A6C4(v19 + v12, (uint64_t)v28);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v19);
            *uint64_t v30 = v19;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v19 = a3(v19);
              *uint64_t v30 = v19;
            }

            a4 = v18;
            if (v11 >= *(void *)(v19 + 16)) {
              goto LABEL_33;
            }
            uint64_t v22 = (void *)(v19 + 40 * v11 + 32);
            sub_10018709C(v22);
            v18(v28, v22);
            id v6 = v30;
            uint64_t v23 = *v30;
            if (v15 >= *(void *)(*v30 + 16)) {
              goto LABEL_34;
            }
            uint64_t v24 = v23 + v12;
            sub_10018709C((void *)(v23 + v12));
            a4(v29, v24);
          }

          if (__OFADD__(v11++, 1LL)) {
            goto LABEL_29;
          }
        }

        unint64_t v26 = v15 + 1;
        if (__OFADD__(v15, 1LL)) {
          goto LABEL_28;
        }
        uint64_t v7 = *v6;
        unint64_t v14 = *(void *)(*v6 + 16);
        ++v15;
        v12 += 40LL;
        if (v26 == v14) {
          return;
        }
      }

      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
    }

    __break(1u);
  }

void sub_1002D8C48(uint64_t (*a1)(uint64_t), uint64_t a2)
{
}

void sub_1002D8C6C(uint64_t (*a1)(uint64_t), uint64_t a2)
{
}

void sub_1002D8C90(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1002D8CEC()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1002D8D28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc(dword_10064D6DC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100195708;
  return sub_1002D6EFC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002D8DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002D8DBC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002D8DC4()
{
  return swift_deallocObject(v0, 37LL, 7LL);
}

uint64_t sub_1002D8DF0()
{
  return sub_1002D80A0( *(void **)(v0 + 16),  *(char **)(v0 + 24),  *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32));
}

void sub_1002D8E14(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_1002D8E70(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_1002D8ECC( void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t), uint64_t (*a8)(uint64_t), uint64_t (*a9)(uint64_t), uint64_t (*a10)(uint64_t), uint64_t (*a11)(void), uint64_t (*a12)(void))
{
  v291 = a8;
  v293 = a7;
  id v294 = (id)a4;
  v292 = a3;
  uint64_t v16 = sub_100183098(&qword_10064DA60);
  uint64_t v17 = __chkstk_darwin(v16);
  v278 = &v273[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v17);
  v281 = &v273[-v19];
  uint64_t v20 = sub_100183098(&qword_10064D6E8);
  __chkstk_darwin(v20);
  v276 = &v273[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  v288 = (os_log_s *)type metadata accessor for Date(0LL);
  uint64_t v287 = *((void *)v288 - 1);
  __chkstk_darwin(v288);
  v286 = &v273[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v23 = type metadata accessor for UUID(0LL);
  uint64_t v297 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  v277 = &v273[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v26 = __chkstk_darwin(v24);
  v289 = &v273[-v27];
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = &v273[-v29];
  __chkstk_darwin(v28);
  unint64_t v32 = &v273[-v31];
  uint64_t v33 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  os_log_type_t v36 = &v273[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v37 = a6(0LL);
  v311 = &off_1005DC6D0;
  uint64_t v296 = a5;
  uint64_t v38 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  uint64_t v310 = v37;
  v309 = a1;
  *os_log_type_t v36 = v38;
  uint64_t v39 = *(void (**)(void *))(v34 + 104);
  unsigned int v283 = enum case for DispatchPredicate.onQueue(_:);
  v39(v36);
  id v40 = a1;
  id v282 = v38;
  uint64_t v41 = _dispatchPreconditionTest(_:)(v36);
  uint64_t v42 = *(void (**)(void *, uint64_t))(v34 + 8);
  v284 = v36;
  uint64_t v285 = v33;
  v42(v36, v33);
  if ((v41 & 1) != 0)
  {
    v280 = (void (*)(void *, void, uint64_t))v39;
    LODWORD(v295) = a2;
    uint64_t v41 = (uint64_t)sub_100487C98(a2, (uint64_t)v292, (uint64_t)v294);
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v43 = type metadata accessor for Logger(0LL);
  uint64_t v44 = sub_100186DE4(v43, (uint64_t)qword_100656748);
  sub_10019A6C4((uint64_t)&v309, (uint64_t)&v306);
  id v45 = (id)v41;
  uint64_t v290 = v44;
  uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
  os_log_type_t v47 = static os_log_type_t.error.getter(v46);
  int v48 = v47;
  BOOL v49 = os_log_type_enabled(v46, v47);
  uint64_t v50 = v296;
  id v294 = v45;
  v279 = v42;
  if (v49)
  {
    uint64_t v51 = swift_slowAlloc(22LL, -1LL);
    v275 = (void *)swift_slowAlloc(8LL, -1LL);
    v292 = (void *)swift_slowAlloc(32LL, -1LL);
    v301 = v292;
    *(_DWORD *)uint64_t v51 = 136315394;
    int v274 = v48;
    uint64_t v52 = v307;
    uint64_t v53 = v308;
    sub_10019A708(&v306, v307);
    (*(void (**)(uint64_t, uint64_t))(v53 + 32))(v52, v53);
    uint64_t v54 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter(v23, v54);
    unint64_t v57 = v56;
    (*(void (**)(_BYTE *, uint64_t))(v297 + 8))(v32, v23);
    uint64_t v299 = sub_10018CDB4(v55, v57, (uint64_t *)&v301);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v299, v300, v51 + 4, v51 + 12);
    swift_bridgeObjectRelease(v57);
    sub_10018709C(&v306);
    *(_WORD *)(v51 + 12) = 2112;
    uint64_t v299 = (uint64_t)v45;
    id v58 = v45;
    uint64_t v50 = v296;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v299, v300, v51 + 14, v51 + 22);
    uint64_t v59 = v275;
    void *v275 = v45;

    _os_log_impl( (void *)&_mh_execute_header,  v46,  (os_log_type_t)v274,  "Session %s failed with error: %@",  (uint8_t *)v51,  0x16u);
    uint64_t v60 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v59, 1LL, v60);
    swift_slowDealloc(v59, -1LL, -1LL);
    unint64_t v61 = v292;
    swift_arrayDestroy(v292, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v61, -1LL, -1LL);
    swift_slowDealloc(v51, -1LL, -1LL);
  }

  else
  {
    sub_10018709C(&v306);
  }

  uint64_t v62 = v310;
  id v63 = v311;
  sub_10019A708(&v309, v310);
  v292 = (void *)((uint64_t (*)(uint64_t, _UNKNOWN **))v63[5])(v62, v63);
  uint64_t v64 = (void *)(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions);
  uint64_t v65 = swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions,  v305,  0LL,  0LL);
  uint64_t v66 = *v64;
  uint64_t v67 = *(void *)(*v64 + 16LL);
  if (v67)
  {
    id v68 = (void *)(v66 + 32);
    swift_bridgeObjectRetain(*v64);
    uint64_t v69 = v67 - 1;
    do
    {
      uint64_t v70 = v69;
      uint64_t v72 = v68[3];
      uint64_t v71 = v68[4];
      sub_10019A708(v68, v72);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v71 + 8) + 8LL) + 32LL))(v72);
      uint64_t v73 = v310;
      id v74 = v311;
      sub_10019A708(&v309, v310);
      ((void (*)(uint64_t, _UNKNOWN **))v74[4])(v73, v74);
      char v75 = static UUID.== infix(_:_:)(v32, v30);
      unint64_t v76 = *(void (**)(_BYTE *, uint64_t))(v297 + 8);
      v76(v30, v23);
      v76(v32, v23);
      if ((v75 & 1) != 0) {
        break;
      }
      uint64_t v69 = v70 - 1;
      v68 += 5;
    }

    while (v70);
    swift_bridgeObjectRelease(v66);
    uint64_t v50 = v296;
  }

  else
  {
    char v75 = 0;
  }

  __chkstk_darwin(v65);
  *(void *)&v273[-16] = &v309;
  swift_beginAccess(v64, &v306, 33LL, 0LL);
  sub_1002D89F8( v293,  (uint64_t)&v273[-32],  (uint64_t (*)(uint64_t))sub_1001CCF34,  (void (*)(void, void))sub_1001CE0D0);
  uint64_t v78 = *(void *)(*v64 + 16LL);
  if (v78 < v77)
  {
    __break(1u);
    goto LABEL_100;
  }

  sub_1003C0D5C(v77, v78);
  uint64_t v79 = swift_endAccess(&v306);
  __chkstk_darwin(v79);
  *(void *)&v273[-16] = &v309;
  uint64_t v80 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions, &v306, 33LL, 0LL);
  sub_1002D89F8( v291,  (uint64_t)&v273[-32],  (uint64_t (*)(uint64_t))sub_1001CCF20,  (void (*)(void, void))sub_1001CE0D0);
  uint64_t v82 = *(void *)(*(void *)v80 + 16LL);
  if (v82 < v81)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }

  sub_1003C0D70(v81, v82);
  uint64_t v83 = swift_endAccess(&v306);
  __chkstk_darwin(v83);
  *(void *)&v273[-16] = &v309;
  uint64_t v84 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions,  &v306,  33LL,  0LL);
  sub_1002D89F8( a9,  (uint64_t)&v273[-32],  (uint64_t (*)(uint64_t))sub_1001CCF0C,  (void (*)(void, void))sub_1001CE0D0);
  uint64_t v86 = *(void *)(*(void *)v84 + 16LL);
  if (v86 < v85)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }

  sub_1003C0D84(v85, v86);
  uint64_t v87 = swift_endAccess(&v306);
  __chkstk_darwin(v87);
  *(void *)&v273[-16] = &v309;
  uint64_t v88 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions,  &v306,  33LL,  0LL);
  sub_1002D89F8( a10,  (uint64_t)&v273[-32],  (uint64_t (*)(uint64_t))sub_1001CCEF8,  (void (*)(void, void))sub_1001CE0D0);
  uint64_t v90 = *(void *)(*(void *)v88 + 16LL);
  if (v90 < v89)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }

  v293 = 0LL;
  sub_1003C0D98(v89, v90);
  swift_endAccess(&v306);
  uint64_t v91 = v310;
  uint64_t v92 = v311;
  sub_10019A708(&v309, v310);
  ((void (*)(uint64_t, _UNKNOWN **))v92[11])(v91, v92);
  uint64_t v93 = v294;
  os_log_type_t v94 = v292;
  if ((_DWORD)v295 != 33) {
    goto LABEL_32;
  }
  uint64_t v95 = v310;
  uint64_t v96 = v311;
  sub_10019A708(&v309, v310);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v96[8])(&v306, v95, v96);
  uint64_t v97 = v307;
  if (!v307)
  {
    uint64_t v102 = sub_100187100((uint64_t)&v306, &qword_100654080);
    goto LABEL_30;
  }

  uint64_t v98 = v308;
  sub_10019A708(&v306, v307);
  uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v97, v98);
  unsigned int v101 = v100;
  uint64_t v102 = sub_10018709C(&v306);
  if (!v101)
  {
LABEL_30:
    uint64_t v125 = (void *)Logger.logObject.getter(v102);
    os_log_type_t v126 = static os_log_type_t.error.getter(v125);
    if (!os_log_type_enabled((os_log_t)v125, v126))
    {

      if (v94 != (void *)8) {
        goto LABEL_33;
      }
LABEL_20:
      uint64_t v105 = v310;
      uint64_t v106 = v311;
      sub_10019A708(&v309, v310);
      ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v106[8])(&v306, v105, v106);
      uint64_t v107 = v307;
      if (v307)
      {
        uint64_t v108 = v308;
        sub_10019A708(&v306, v307);
        uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v107, v108);
        uint64_t v111 = v110;
        uint64_t v112 = sub_10018709C(&v306);
        if (v111)
        {
          uint64_t v113 = (os_log_s *)Logger.logObject.getter(v112);
          os_log_type_t v114 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v113, v114))
          {
            uint64_t v115 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v115 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v113,  v114,  "Registration failed, clearing registration date",  v115,  2u);
            swift_slowDealloc(v115, -1LL, -1LL);
          }

          uint64_t v116 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID;
          swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  &v301,  33LL,  0LL);
          swift_bridgeObjectRetain(v111);
          unint64_t v117 = sub_1003A448C(&v306, v109, v111);
          uint64_t v119 = v118;
          uint64_t v120 = type metadata accessor for RegistrationState(0LL);
          os_log_type_t v121 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 48LL);
          if (!v121(v119, 1LL, v120)) {
            *(_BYTE *)(v119 + *(int *)(v120 + 20)) = 0;
          }
          ((void (*)(uint64_t *, void))v117)(&v306, 0LL);
          swift_endAccess(&v301);
          uint64_t v93 = v294;
          swift_bridgeObjectRelease(v111);
          swift_beginAccess(v116, &v301, 33LL, 0LL);
          swift_bridgeObjectRetain(v111);
          unint64_t v122 = sub_1003A448C(&v306, v109, v111);
          uint64_t v124 = v123;
          if (!v121(v123, 1LL, v120))
          {
            sub_100187100(v124, &qword_1006457E8);
            (*(void (**)(uint64_t, uint64_t, uint64_t, os_log_s *))(v287 + 56))(v124, 1LL, 1LL, v288);
          }

          ((void (*)(uint64_t *, void))v122)(&v306, 0LL);
          swift_endAccess(&v301);
          swift_bridgeObjectRelease_n(v111, 2LL);
          uint64_t v50 = v296;
          goto LABEL_55;
        }
      }

      else
      {
        sub_100187100((uint64_t)&v306, &qword_100654080);
      }

      uint64_t v151 = sub_10019A6C4((uint64_t)&v309, (uint64_t)&v306);
      uint64_t v152 = (os_log_s *)Logger.logObject.getter(v151);
      os_log_type_t v153 = static os_log_type_t.error.getter(v152);
      if (os_log_type_enabled(v152, v153))
      {
        uint64_t v154 = swift_slowAlloc(12LL, -1LL);
        v292 = (void *)swift_slowAlloc(32LL, -1LL);
        v301 = v292;
        *(_DWORD *)uint64_t v154 = 136315138;
        v291 = (uint64_t (*)(uint64_t))(v154 + 4);
        uint64_t v156 = v307;
        uint64_t v155 = v308;
        sub_10019A708(&v306, v307);
        uint64_t v157 = v156;
        uint64_t v50 = v296;
        (*(void (**)(uint64_t, uint64_t))(v155 + 32))(v157, v155);
        uint64_t v158 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v159 = dispatch thunk of CustomStringConvertible.description.getter(v23, v158);
        unint64_t v161 = v160;
        (*(void (**)(_BYTE *, uint64_t))(v297 + 8))(v32, v23);
        uint64_t v299 = sub_10018CDB4(v159, v161, (uint64_t *)&v301);
        uint64_t v93 = v294;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v299, v300, v291, v154 + 12);
        swift_bridgeObjectRelease(v161);
        sub_10018709C(&v306);
        _os_log_impl( (void *)&_mh_execute_header,  v152,  v153,  "Could not find peer device for %s",  (uint8_t *)v154,  0xCu);
        uint64_t v162 = v292;
        swift_arrayDestroy(v292, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v162, -1LL, -1LL);
        swift_slowDealloc(v154, -1LL, -1LL);
      }

      else
      {
        sub_10018709C(&v306);
      }

LABEL_55:
      uint64_t v163 = v297;
      uint64_t v164 = v289;
      uint64_t v165 = (uint64_t)v281;
      uint64_t v166 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
      swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI,  v298,  0LL,  0LL);
      sub_1001915A4(v166, v165, &qword_10064DA60);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v165, 1LL, v23) == 1)
      {
        sub_100187100(v165, &qword_10064DA60);
        goto LABEL_77;
      }

      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v163 + 32))(v164, v165, v23);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v167);
      if (Strong)
      {
        int v169 = (uint64_t (*)(uint64_t))Strong;
        uint64_t v170 = v277;
        uint64_t v171 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v163 + 16))(v277, v164, v23);
        uint64_t v172 = (os_log_s *)Logger.logObject.getter(v171);
        os_log_type_t v173 = static os_log_type_t.default.getter();
        int v174 = v173;
        if (os_log_type_enabled(v172, v173))
        {
          uint64_t v175 = swift_slowAlloc(22LL, -1LL);
          v292 = (void *)swift_slowAlloc(8LL, -1LL);
          uint64_t v290 = swift_slowAlloc(32LL, -1LL);
          uint64_t v306 = v290;
          *(_DWORD *)uint64_t v175 = 138412546;
          v288 = v172;
          type metadata accessor for SFAuthenticationError(0LL);
          LODWORD(v287) = v174;
          uint64_t v177 = v176;
          uint64_t v178 = sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
          uint64_t v179 = swift_allocError(v177, v178, 0LL, 0LL);
          *uint64_t v180 = (_DWORD)v295;
          Swift::String v181 = (void *)_swift_stdlib_bridgeErrorToNSError(v179);
          v301 = v181;
          v291 = v169;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, &v302, v175 + 4, v175 + 12);
          void *v292 = v181;
          *(_WORD *)(v175 + 12) = 2080;
          uint64_t v182 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
          uint64_t v183 = dispatch thunk of CustomStringConvertible.description.getter(v23, v182);
          unint64_t v185 = v184;
          v301 = (void *)sub_10018CDB4(v183, v184, &v306);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, &v302, v175 + 14, v175 + 22);
          __n128 v186 = swift_bridgeObjectRelease(v185);
          uint64_t v187 = *(void (**)(_BYTE *, uint64_t, __n128))(v163 + 8);
          int v169 = v291;
          v187(v170, v23, v186);
          os_log_t v188 = v288;
          _os_log_impl( (void *)&_mh_execute_header,  v288,  (os_log_type_t)v287,  "Calling back to delegate with registration error %@ for sessionID %s",  (uint8_t *)v175,  0x16u);
          uint64_t v189 = sub_100183098(&qword_1006454E0);
          objc_super v190 = v292;
          swift_arrayDestroy(v292, 1LL, v189);
          swift_slowDealloc(v190, -1LL, -1LL);
          uint64_t v191 = v290;
          swift_arrayDestroy(v290, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v191, -1LL, -1LL);
          uint64_t v192 = v175;
          uint64_t v50 = v296;
          swift_slowDealloc(v192, -1LL, -1LL);
        }

        else
        {
          uint64_t v187 = *(void (**)(_BYTE *, uint64_t, __n128))(v163 + 8);
          ((void (*)(_BYTE *, uint64_t))v187)(v170, v23);
        }

        uint64_t v211 = v289;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        id v213 = sub_100487C98(v295, 0LL, 0xE000000000000000LL);
        [v169 manager:v50 didFailAuthenticationFor:isa error:v213];
        swift_unknownObjectRelease(v169);

        ((void (*)(_BYTE *, uint64_t))v187)(v211, v23);
        uint64_t v214 = (uint64_t)v278;
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v297 + 56))(v278, 1LL, 1LL, v23);
        swift_beginAccess(v166, &v306, 33LL, 0LL);
        sub_1001C9860(v214, v166, &qword_10064DA60);
        swift_endAccess(&v306);
        uint64_t v93 = v294;
        goto LABEL_77;
      }

      v205 = (os_log_s *)Logger.logObject.getter(0LL);
      os_log_type_t v206 = static os_log_type_t.error.getter(v205);
      if (os_log_type_enabled(v205, v206))
      {
        uint64_t v207 = v164;
        uint64_t v208 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v208 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v205,  v206,  "Have session that is waiting but no delegate to report it to. This is bad.",  v208,  2u);
        swift_slowDealloc(v208, -1LL, -1LL);

        v209 = *(void (**)(_BYTE *, void *))(v297 + 8);
        uint64_t v210 = v207;
      }

      else
      {

        v209 = *(void (**)(_BYTE *, void *))(v297 + 8);
        uint64_t v210 = v164;
      }

      v222 = (void *)v23;
LABEL_76:
      v209(v210, v222);
      goto LABEL_77;
    }

    unint64_t v127 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v127 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v125,  v126,  "Got notEnabled error but coudln't determine who to disable pairing with",  v127,  2u);
    swift_slowDealloc(v127, -1LL, -1LL);

LABEL_32:
    if (v94 != (void *)8) {
      goto LABEL_33;
    }
    goto LABEL_20;
  }

  uint64_t v103 = sub_10034EC60((uint64_t)v94);
  UUID.init()(v103);
  sub_100462F0C(v103, v99, v101, (uint64_t)v32);
  __n128 v104 = swift_bridgeObjectRelease(v101);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v297 + 8))(v32, v23, v104);
  if (v94 == (void *)8) {
    goto LABEL_20;
  }
LABEL_33:
  if (v94 == (void *)5)
  {
    if ((_DWORD)v295 != 10) {
      goto LABEL_77;
    }
    uint64_t v143 = v310;
    v144 = v311;
    sub_10019A708(&v309, v310);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v144[8])(&v306, v143, v144);
    uint64_t v145 = v307;
    if (v307)
    {
      uint64_t v146 = v308;
      sub_10019A708(&v306, v307);
      uint64_t v147 = (*(uint64_t (**)(uint64_t, uint64_t))(v146 + 8))(v145, v146);
      uint64_t v149 = v148;
      sub_10018709C(&v306);
      if (v149)
      {
        swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID,  &v306,  33LL,  0LL);
        uint64_t v150 = v276;
        sub_1001CA024(v147, v149, (uint64_t)v276);
        swift_endAccess(&v306);
        sub_100187100((uint64_t)v150, &qword_10064D6E8);
        swift_bridgeObjectRelease(v149);
        goto LABEL_77;
      }
    }

    else
    {
      sub_100187100((uint64_t)&v306, &qword_100654080);
    }

    uint64_t v193 = sub_10019A6C4((uint64_t)&v309, (uint64_t)&v306);
    uint64_t v194 = (os_log_s *)Logger.logObject.getter(v193);
    os_log_type_t v195 = static os_log_type_t.error.getter(v194);
    if (os_log_type_enabled(v194, v195))
    {
      v196 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      v295 = (void *)swift_slowAlloc(32LL, -1LL);
      v301 = v295;
      *(_DWORD *)v196 = 136315138;
      v292 = v196 + 4;
      uint64_t v198 = v307;
      uint64_t v197 = v308;
      sub_10019A708(&v306, v307);
      uint64_t v199 = v198;
      uint64_t v50 = v296;
      (*(void (**)(uint64_t, uint64_t))(v197 + 32))(v199, v197);
      uint64_t v200 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v201 = dispatch thunk of CustomStringConvertible.description.getter(v23, v200);
      unint64_t v203 = v202;
      (*(void (**)(_BYTE *, uint64_t))(v297 + 8))(v32, v23);
      uint64_t v299 = sub_10018CDB4(v201, v203, (uint64_t *)&v301);
      uint64_t v93 = v294;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v299, v300, v292, v196 + 12);
      swift_bridgeObjectRelease(v203);
      sub_10018709C(&v306);
      _os_log_impl((void *)&_mh_execute_header, v194, v195, "Could not find peer device for %s", v196, 0xCu);
      uint64_t v204 = v295;
      swift_arrayDestroy(v295, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v204, -1LL, -1LL);
      swift_slowDealloc(v196, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v306);
    }

LABEL_77:
    sub_10019A6C4((uint64_t)&v309, (uint64_t)&v306);
    uint64_t v223 = sub_100183098((uint64_t *)&unk_10064B7A0);
    uint64_t v224 = sub_100183098(&qword_1006452E0);
    if (swift_dynamicCast(&v301, &v306, v223, v224, 6LL))
    {
      sub_10018709C(&v301);
      uint64_t v226 = swift_unknownObjectWeakLoadStrong( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v225);
      if (!v226) {
        goto LABEL_84;
      }
      v227 = (void *)v226;
      uint64_t v228 = v310;
      v229 = v311;
      sub_10019A708(&v309, v310);
      ((void (*)(uint64_t, _UNKNOWN **))v229[4])(v228, v229);
      v230.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(_BYTE *, uint64_t))(v297 + 8))(v32, v23);
      [v227 manager:v50 didFailAuthenticationFor:v230.super.isa error:v93];
    }

    else
    {
      sub_10019A6C4((uint64_t)&v309, (uint64_t)&v306);
      uint64_t v231 = sub_100183098((uint64_t *)&unk_10064D7E0);
      if ((swift_dynamicCast(&v301, &v306, v223, v231, 6LL) & 1) == 0
        || (sub_10018709C(&v301),
            (uint64_t v233 = swift_unknownObjectWeakLoadStrong( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate,  v232)) == 0))
      {
LABEL_84:
        sub_10019A6C4((uint64_t)&v309, (uint64_t)&v306);
        if ((v75 & 1) != 0)
        {
          uint64_t v236 = v307;
          uint64_t v237 = v308;
          sub_10019A708(&v306, v307);
          unint64_t v238 = (*(uint64_t (**)(uint64_t, uint64_t))(v237 + 40))(v236, v237);
          if (v238 > 0xE || ((1LL << v238) & 0x658E) == 0)
          {
            sub_10018709C(&v306);
            sub_10019A6C4((uint64_t)&v309, (uint64_t)&v301);

            sub_10018709C(&v301);
            goto LABEL_92;
          }

          sub_10018709C(&v306);
          uint64_t v239 = *(void *)(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
          uint64_t v240 = v310;
          v241 = v311;
          sub_10019A708(&v309, v310);
          unint64_t v242 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v241[5])(v240, v241);
          LOBYTE(v240) = sub_10034E9D8(v242);
          uint64_t v243 = v310;
          v244 = v311;
          sub_10019A708(&v309, v310);
          ((void (*)(void **__return_ptr, uint64_t, _UNKNOWN **))v244[8])(&v301, v243, v244);
          sub_1003F0DB4(v240);
          uint64_t v246 = v245;
          uint64_t v248 = v247;
          uint64_t ObjectType = swift_getObjectType(v245);
          uint64_t v250 = (*(uint64_t (**)(uint64_t, uint64_t))(v248 + 56))(ObjectType, v248);
          __chkstk_darwin(v250);
          *(void *)&v273[-32] = v246;
          *(void *)&v273[-24] = v248;
          v252 = v251 + 4;
          *(void *)&v273[-16] = &v301;
          *(void *)&v273[-8] = v239;
          os_unfair_lock_lock(v251 + 4);
          sub_1002737FC(v253, a11);
          os_unfair_lock_unlock(v252);

          swift_unknownObjectRelease(v246);
          v254 = (uint64_t *)&v301;
        }

        else
        {
          sub_10018709C(&v306);
          sub_10019A6C4((uint64_t)&v309, (uint64_t)&v301);
          uint64_t v255 = v303;
          uint64_t v256 = v304;
          sub_10019A708(&v301, v303);
          unint64_t v257 = (*(uint64_t (**)(uint64_t, uint64_t))(v256 + 40))(v255, v256);
          if (v257 <= 0xE && ((1LL << v257) & 0x658E) != 0)
          {
            sub_10018709C(&v301);

            goto LABEL_92;
          }

          sub_10018709C(&v301);
          uint64_t v258 = *(void *)(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
          uint64_t v259 = v310;
          v260 = v311;
          sub_10019A708(&v309, v310);
          unint64_t v261 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v260[5])(v259, v260);
          LOBYTE(v259) = sub_10034E9D8(v261);
          uint64_t v262 = v310;
          v263 = v311;
          sub_10019A708(&v309, v310);
          ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v263[8])(&v299, v262, v263);
          sub_1003F0DB4(v259);
          uint64_t v265 = v264;
          uint64_t v267 = v266;
          uint64_t v268 = swift_getObjectType(v264);
          uint64_t v269 = (*(uint64_t (**)(uint64_t, uint64_t))(v267 + 56))(v268, v267);
          __chkstk_darwin(v269);
          *(void *)&v273[-32] = v265;
          *(void *)&v273[-24] = v267;
          v271 = v270 + 4;
          *(void *)&v273[-16] = &v299;
          *(void *)&v273[-8] = v258;
          os_unfair_lock_lock(v270 + 4);
          sub_1002737FC(v272, a12);
          os_unfair_lock_unlock(v271);

          swift_unknownObjectRelease(v265);
          v254 = &v299;
        }

        sub_100187100((uint64_t)v254, &qword_100654080);
LABEL_92:
        sub_10018709C(&v309);
        return;
      }

      v227 = (void *)v233;
      uint64_t v234 = v310;
      v235 = v311;
      sub_10019A708(&v309, v310);
      ((void (*)(uint64_t, _UNKNOWN **))v235[4])(v234, v235);
      v230.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(_BYTE *, uint64_t))(v297 + 8))(v32, v23);
      [v227 manager:v50 didFailToEnableDeviceFor:v230.super.isa error:v93];
    }

    swift_unknownObjectRelease(v227);
    goto LABEL_84;
  }

  if (v94 != (void *)4) {
    goto LABEL_77;
  }
  if ((_DWORD)v295 == 22)
  {
    uint64_t v128 = v310;
    uint64_t v129 = v311;
    sub_10019A708(&v309, v310);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v129[8])(&v306, v128, v129);
    uint64_t v130 = v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
    swift_beginAccess( v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice,  &v301,  33LL,  0LL);
    sub_1001C9860((uint64_t)&v306, v130, &qword_100654080);
    swift_endAccess(&v301);
  }

  uint64_t v131 = v310;
  char v132 = v311;
  sub_10019A708(&v309, v310);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v132[8])(&v306, v131, v132);
  uint64_t v133 = v307;
  if (!v307)
  {
    uint64_t v138 = sub_100187100((uint64_t)&v306, &qword_100654080);
    goto LABEL_74;
  }

  uint64_t v134 = v308;
  sub_10019A708(&v306, v307);
  uint64_t v135 = (*(uint64_t (**)(uint64_t, uint64_t))(v134 + 8))(v133, v134);
  uint64_t v137 = v136;
  uint64_t v138 = sub_10018709C(&v306);
  if (!v137) {
    goto LABEL_74;
  }
  if ((_DWORD)v295 != 9 && (_DWORD)v295 != 24)
  {
    uint64_t v140 = *(void *)(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator);
    uint64_t v141 = *(void *)(v140 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner);
    if (v141)
    {
      swift_beginAccess(v141 + 40, &v306, 33LL, 0LL);
      swift_retain(v140);
      swift_retain(v141);
      sub_1003BDC14(v135, v137);
      uint64_t v142 = v215;
      swift_endAccess(&v306);
      goto LABEL_71;
    }

LABEL_103:
  __break(1u);
}

uint64_t sub_1002DABB0(void *a1)
{
  return sub_10047D68C(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1002DABCC()
{
  return sub_1003F1AF8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1002DABE8()
{
  uint64_t v1 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));

  unint64_t v7 = v0 + *(int *)(v1 + 20) + v3;
  uint64_t v8 = type metadata accessor for Date(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  swift_release(*(void *)(v0 + v4));
  swift_bridgeObjectRelease(*(const char **)(v0 + v5));
  sub_100189B20(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16);
}

uint64_t sub_1002DACBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002DAD00(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AuthenticationSecurityRequest(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + v7);
  uint64_t v13 = (uint64_t)v1 + v5;
  uint64_t v14 = *(void *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8LL));
  unint64_t v15 = (void *)swift_task_alloc(dword_10064D6F4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v15;
  *unint64_t v15 = v2;
  v15[1] = sub_100195708;
  return sub_1002D5324(a1, v8, v9, v10, v13, v11, v12, v14);
}

uint64_t sub_1002DADE4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002DAE08()
{
  return sub_1002D5FF4(*(char **)(v0 + 16));
}

uint64_t sub_1002DAE10()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1002DAE3C()
{
  return sub_1002D4B90(*(unsigned int *)(v0 + 24));
}

uint64_t sub_1002DAE78()
{
  return sub_1002D4B90(0x100000000LL);
}

uint64_t sub_1002DAEB0()
{
  uint64_t v1 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));

  unint64_t v5 = v0 + *(int *)(v1 + 20) + v3;
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_1002DAF44(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AuthenticationSecurityRequest(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_10064D704);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1001943E8;
  return sub_1002D29EC(a1, v5, v6, v7, v8);
}

void sub_1002DAFD8()
{
}

uint64_t sub_1002DAFE4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1002DB010()
{
}

uint64_t sub_1002DB028(void *a1)
{
  return sub_1002DABB0(a1) & 1;
}

uint64_t sub_1002DB064()
{
  return sub_1002DABCC();
}

void sub_1002DB094(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }

uint64_t sub_1002DB0DC()
{
  if (((unint64_t)v5 - 0x1000000000000000LL) >> 61 != 7)
  {
    __break(1u);
    JUMPOUT(0x1002DB424LL);
  }

  if ((v5 & 7) == 0) {
    __asm { BR              X9 }
  }

  uint64_t v0 = sub_100183098(&qword_10064D750);
  uint64_t v1 = sub_1002DDC1C(&qword_10064D758, &qword_10064D750);
  uint64_t v2 = swift_allocError(v0, v1, 0LL, 0LL);
  swift_willThrow(v2);
  return v0;
}

void sub_1002DB44C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }

void sub_1002DB620(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v21[1] = a3;
  uint64_t v22 = sub_100183098(&qword_10064D740);
  __chkstk_darwin(v22);
  uint64_t v5 = type metadata accessor for SHA256(0LL);
  v21[4] = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for SHA256Digest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  uint64_t v24 = v7;
  __chkstk_darwin(v6);
  uint64_t v8 = type metadata accessor for String.Encoding(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static String.Encoding.utf8.getter(v10);
  void v21[2] = a1;
  v21[3] = a2;
  uint64_t v13 = String.data(using:allowLossyConversion:)(v12, 0LL, a1, a2);
  unint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v26[5] = v13;
  v26[6] = v15;
  uint64_t v16 = sub_100183098(&qword_100645150);
  Optional.unwrap(_:file:line:)( v26,  sub_1002DBB88,  0LL,  "DaemoniOSLibrary/SDAirDropHashUtilities.swift",  45LL,  2LL,  14LL,  v16);
  sub_100189B0C(v13, v15);
  uint64_t v18 = v26[0];
  unint64_t v17 = v26[1];
  uint64_t v19 = sub_100183F14( (unint64_t *)&unk_10064D7C0,  (uint64_t (*)(uint64_t))&type metadata accessor for SHA256,  (uint64_t)&protocol conformance descriptor for SHA256);
  dispatch thunk of HashFunction.init()(v5, v19);
  uint64_t v20 = (char *)&loc_1002DB814 + *((int *)qword_1002DBB78 + (v17 >> 62));
  unint64_t v25 = v17;
  v21[0] = v18;
  __asm { BR              X10 }

void sub_1002DB82C()
{
  *(void *)(v9 - 144) = v6;
  *(_WORD *)(v9 - 136) = v4;
  *(_BYTE *)(v9 - 134) = BYTE2(v4);
  *(_BYTE *)(v9 - 133) = BYTE3(v4);
  *(_BYTE *)(v9 - 132) = BYTE4(v4);
  *(_BYTE *)(v9 - 131) = BYTE5(v4);
  dispatch thunk of HashFunction.update(bufferPointer:)(v9 - 144, v9 - 144 + BYTE6(v4), v2, v5);
  sub_100189B20(v6, v4);
  uint64_t v10 = v0;
  ((void (*)(uint64_t, uint64_t))dispatch thunk of HashFunction.finalize())(v2, v5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 192) + 8LL))(v3, v2);
  uint64_t v11 = *(void *)(v9 - 176);
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v9 - 168) + 16LL);
  v12(v8, v0, v11);
  *(void *)((char *)v8 + *(int *)(*(void *)(v9 - 184) + 36LL)) = 3LL;
  uint64_t v13 = sub_1004179BC(v8);
  sub_100187100((uint64_t)v8, &qword_10064D740);
  if (*(void *)(v13 + 16) != 3LL)
  {
    __break(1u);
    JUMPOUT(0x1002DBB24LL);
  }

  int v14 = sub_1002DDADC(v13);
  swift_release(v13);
  if (v1)
  {
    ((void (*)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))swift_unexpectedError)( v1,  "DaemoniOSLibrary/SDAirDropHashUtilities.swift",  45LL,  1LL,  25LL);
    __break(1u);
    sub_100189B20((uint64_t)v12, v7);
    ((void (*)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))swift_unexpectedError)( v1,  "DaemoniOSLibrary/SDAirDropHashUtilities.swift",  45LL,  1LL,  28LL);
    __break(1u);
    JUMPOUT(0x1002DBB78LL);
  }

  *(void *)(v9 - 120) = v11;
  uint64_t v15 = sub_100183F14( &qword_10064D748,  (uint64_t (*)(uint64_t))&type metadata accessor for SHA256Digest,  (uint64_t)&protocol conformance descriptor for SHA256Digest);
  *(void *)(v9 - 112) = v15;
  uint64_t v16 = sub_1001A4B04((void *)(v9 - 144));
  v12(v16, v0, v11);
  sub_10019A708((void *)(v9 - 144), *(void *)(v9 - 120));
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)( (void *)(v9 - 104),  sub_1003BFF14,  0LL,  &type metadata for Data._Representation,  v11,  v15);
  uint64_t v17 = *(void *)(v9 - 104);
  unint64_t v18 = *(void *)(v9 - 96);
  sub_10018709C((void *)(v9 - 144));
  sub_1002DDB2C(v17, v18);
  uint64_t v23 = v19;
  uint64_t v24 = v20;
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_100189B20(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 168) + 8LL))(v10, v11);
  sub_100189B20(*(void *)(v9 - 224), *(void *)(v9 - 160));
  swift_bridgeObjectRetain(*(const char **)(v9 - 200));
  uint64_t v27 = *(void *)(v9 - 216);
  *(void *)uint64_t v27 = *(void *)(v9 - 208);
  *(void *)(v27 + 8) = v28;
  *(void *)(v27 + swift_weakDestroy(v0 + 16) = v23;
  *(void *)(v27 + 24) = v24;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v26;
  *(_BYTE *)(v27 + 50) = BYTE2(v14);
  *(_WORD *)(v27 + 48) = v14;
  *(_BYTE *)(v27 + 51) = 0;
}

unint64_t sub_1002DBB88()
{
  return 0xD00000000000001FLL;
}

void sub_1002DBBA4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }

void sub_1002DBBE8()
{
  if (BYTE6(v0) == 3LL)
  {
    sub_10019BA8C(v1, v0);
    sub_1003782CC(2LL, v1, v0);
    __asm { BR              X10 }
  }

  __break(1u);
  JUMPOUT(0x1002DBD94LL);
}

uint64_t LongHash.init<A>(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  uint64_t v11 = *(void *)(a3 + 8);
  uint64_t v12 = dispatch thunk of Collection.count.getter(a2, *(void *)(*(void *)(v11 + 8) + 8LL));
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t result = v13(v10, a2);
  if (v12 != 32)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  unint64_t v15 = sub_1002DBF24();
  unint64_t v16 = sub_1002DBF68();
  uint64_t result = sub_1001DAD8C(a1, 8LL, (uint64_t)&type metadata for UInt8, &type metadata for UInt64, a2, v15, v16, v11);
  if (v3)
  {
    v13((char *)a1, a2);
    return v4;
  }

  unint64_t v17 = *(void *)(result + 16);
  if (!v17) {
    goto LABEL_11;
  }
  if (v17 == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  if (v17 < 3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  if (v17 != 3)
  {
    uint64_t v4 = *(void *)(result + 32);
    __n128 v18 = swift_bridgeObjectRelease((const char *)result);
    ((void (*)(uint64_t, uint64_t, __n128))v13)(a1, a2, v18);
    return v4;
  }

unint64_t sub_1002DBF24()
{
  unint64_t result = qword_10064D710;
  if (!qword_10064D710)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UInt8, &type metadata for UInt8);
    atomic_store(result, (unint64_t *)&qword_10064D710);
  }

  return result;
}

unint64_t sub_1002DBF68()
{
  unint64_t result = qword_10064D718;
  if (!qword_10064D718)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UInt64, &type metadata for UInt64);
    atomic_store(result, (unint64_t *)&qword_10064D718);
  }

  return result;
}

void ShortHash.hash(into:)(int a1, Swift::UInt16 a2)
{
}

BOOL static ShortHash.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2)
{
  return a1 == a2;
}

Swift::Int ShortHash.hashValue.getter(Swift::UInt16 a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_1002DC024()
{
  Swift::UInt16 v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1002DC068()
{
}

Swift::Int sub_1002DC090()
{
  Swift::UInt16 v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_1002DC0D0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2;
}

void MediumHash.hash(into:)(int a1, unsigned int a2)
{
  unsigned int v2 = HIWORD(a2);
  Hasher._combine(_:)(a2);
  Hasher._combine(_:)(v2);
}

BOOL static MediumHash.__derived_struct_equals(_:_:)(int a1, int a2)
{
  return (a1 & 0xFFFFFF) == (a2 & 0xFFFFFF);
}

Swift::Int MediumHash.hashValue.getter(unsigned int a1)
{
  Swift::UInt16 v1 = a1;
  unsigned int v2 = HIWORD(a1);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1002DC184()
{
  Swift::UInt16 v1 = *(_WORD *)v0;
  Swift::UInt8 v2 = *(_BYTE *)(v0 + 2);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_1002DC1E0()
{
  Swift::UInt8 v1 = *(_BYTE *)(v0 + 2);
  Hasher._combine(_:)(*(_WORD *)v0);
  Hasher._combine(_:)(v1);
}

Swift::Int sub_1002DC21C()
{
  Swift::UInt16 v1 = *(_WORD *)v0;
  Swift::UInt8 v2 = *(_BYTE *)(v0 + 2);
  Hasher.init(_seed:)(v4);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_1002DC274(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return *a1 == *a2 && *((unsigned __int8 *)a1 + 2) == *((unsigned __int8 *)a2 + 2);
}

void LongHash.hash(into:)(int a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4, Swift::UInt64 a5)
{
}

Swift::Int LongHash.hashValue.getter(Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4)
{
  return Hasher._finalize()();
}

void *sub_1002DC36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  for (uint64_t i = 32LL; i != 64; i += 8LL)
  {
    uint64_t v5 = *(void *)&v25[i];
    uint64_t v6 = sub_10018C0B4(0LL, 1LL, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v8 = *((void *)v6 + 2);
    unint64_t v7 = *((void *)v6 + 3);
    unint64_t v9 = v8 + 1;
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v7 > 1), v8 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v9;
    v6[v8 + 32] = v5;
    unint64_t v10 = *((void *)v6 + 3);
    unint64_t v11 = v8 + 2;
    if (v9 >= v10 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v10 > 1), v9 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v11;
    v6[v9 + 32] = BYTE1(v5);
    unint64_t v12 = *((void *)v6 + 3);
    unint64_t v13 = v9 + 2;
    if (v11 >= v12 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v12 > 1), v11 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v13;
    v6[v11 + 32] = BYTE2(v5);
    unint64_t v14 = *((void *)v6 + 3);
    unint64_t v15 = v11 + 2;
    if (v13 >= v14 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v14 > 1), v13 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v15;
    v6[v13 + 32] = BYTE3(v5);
    unint64_t v16 = *((void *)v6 + 3);
    unint64_t v17 = v13 + 2;
    if (v15 >= v16 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v16 > 1), v15 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v17;
    v6[v15 + 32] = BYTE4(v5);
    unint64_t v18 = *((void *)v6 + 3);
    unint64_t v19 = v15 + 2;
    if (v17 >= v18 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v18 > 1), v17 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v19;
    v6[v17 + 32] = BYTE5(v5);
    unint64_t v20 = *((void *)v6 + 3);
    unint64_t v21 = v17 + 2;
    if (v19 >= v20 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v20 > 1), v19 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v21;
    v6[v19 + 32] = BYTE6(v5);
    unint64_t v22 = *((void *)v6 + 3);
    unint64_t v23 = v19 + 2;
    if (v21 >= v22 >> 1) {
      uint64_t v6 = sub_10018C0B4((char *)(v22 > 1), v21 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v23;
    v6[v21 + 32] = HIBYTE(v5);
    sub_10028A868((uint64_t)v6);
  }

  return _swiftEmptyArrayStorage;
}

Swift::Int sub_1002DC5D0()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt64 v3 = v0[2];
  Swift::UInt64 v4 = v0[3];
  Hasher.init(_seed:)(v6);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_1002DC64C()
{
  Swift::UInt64 v1 = v0[1];
  Swift::UInt64 v2 = v0[2];
  Swift::UInt64 v3 = v0[3];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1002DC6A0()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt64 v3 = v0[2];
  Swift::UInt64 v4 = v0[3];
  Hasher.init(_seed:)(v6);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_1002DC718(Swift::UInt64 *a1, Swift::UInt64 *a2)
{
  return _s16DaemoniOSLibrary8LongHashV2eeoiySbAC_ACtFZ_0(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t static SDHashStoreContact.== infix(_:_:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1 == a5 && a2 == a6
    || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0LL), uint64_t result = 0LL, (v12 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8) {
      return 1LL;
    }
    else {
      return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a7, a8, 0LL);
    }
  }

  return result;
}

uint64_t SDHashStoreContact.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return swift_bridgeObjectRelease(a5);
}

Swift::Int SDHashStoreContact.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Hasher._finalize()();
}

Swift::Int sub_1002DC8CC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  Hasher.init(_seed:)(v6);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v4, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002DC950(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v6, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_1002DC9C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  Hasher.init(_seed:)(v6);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v4, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1002DCA40(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  BOOL v11 = v4 == *a2 && v5 == v8;
  if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v8, 0LL), uint64_t result = 0LL, (v12 & 1) != 0))
  {
    if (v6 == v9 && v7 == v10) {
      return 1LL;
    }
    else {
      return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, v9, v10, 0LL);
    }
  }

  return result;
}

BOOL _s16DaemoniOSLibrary8LongHashV2eeoiySbAC_ACtFZ_0( Swift::UInt64 a1, Swift::UInt64 a2, Swift::UInt64 a3, Swift::UInt64 a4, Swift::UInt64 a5, Swift::UInt64 a6, Swift::UInt64 a7, Swift::UInt64 a8)
{
  Swift::Int v16 = Hasher._finalize()();
  Hasher.init(_seed:)(v18);
  Hasher._combine(_:)(a5);
  Hasher._combine(_:)(a6);
  Hasher._combine(_:)(a7);
  Hasher._combine(_:)(a8);
  return v16 == Hasher._finalize()();
}

unint64_t sub_1002DCBC8()
{
  unint64_t result = qword_10064D720;
  if (!qword_10064D720)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ShortHash, &type metadata for ShortHash);
    atomic_store(result, (unint64_t *)&qword_10064D720);
  }

  return result;
}

unint64_t sub_1002DCC10()
{
  unint64_t result = qword_10064D728;
  if (!qword_10064D728)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MediumHash, &type metadata for MediumHash);
    atomic_store(result, (unint64_t *)&qword_10064D728);
  }

  return result;
}

unint64_t sub_1002DCC58()
{
  unint64_t result = qword_10064D730;
  if (!qword_10064D730)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for LongHash, &type metadata for LongHash);
    atomic_store(result, (unint64_t *)&qword_10064D730);
  }

  return result;
}

unint64_t sub_1002DCCA0()
{
  unint64_t result = qword_10064D738;
  if (!qword_10064D738)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SDHashStoreContact,  &type metadata for SDHashStoreContact);
    atomic_store(result, (unint64_t *)&qword_10064D738);
  }

  return result;
}

ValueMetadata *type metadata accessor for ShortHash()
{
  return &type metadata for ShortHash;
}

uint64_t initializeBufferWithCopyOfBuffer for MediumHash(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MediumHash(unsigned __int16 *a1, int a2)
{
  if (a2)
  {
    if ((a2 + 0x1FFFFFF) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 0xFFFFFF;
      }
    }

    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
    }
  }

  return 0LL;
}

uint64_t storeEnumTagSinglePayload for MediumHash(uint64_t result, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  if (!a3) {
    int v3 = 0;
  }
  if (a2)
  {
    *(_WORD *)unint64_t result = a2 - 1;
    *(_BYTE *)(result + 2) = (a2 - 1) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 1) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(_BYTE *)(result + 3) = v4;
      }
    }
  }

  else if (v3)
  {
    if (v3 == 2) {
      *(_WORD *)(result + 3) = 0;
    }
    else {
      *(_BYTE *)(result + 3) = 0;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for MediumHash()
{
  return &type metadata for MediumHash;
}

ValueMetadata *type metadata accessor for LongHash()
{
  return &type metadata for LongHash;
}

void *initializeWithCopy for UserProfile(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

void *assignWithCopy for UserProfile(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void *assignWithTake for UserProfile(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[3];
  uint64_t v7 = a1[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserProfile(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 32) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDHashStoreContact()
{
  return &type metadata for SDHashStoreContact;
}

uint64_t destroy for UserProfile(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 24));
}

uint64_t initializeWithCopy for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  __int128 v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + swift_weakDestroy(v0 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDAirDropHashStoreEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  __int128 v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropHashStoreEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 68)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDAirDropHashStoreEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 68) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 68) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDAirDropHashStoreEntry()
{
  return &type metadata for SDAirDropHashStoreEntry;
}

void sub_1002DD198(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100183098(&qword_10064D760);
  __chkstk_darwin(v3);
  __asm { BR              X9 }

uint64_t sub_1002DD218(uint64_t a1)
{
  if (BYTE6(v2) == 2LL)
  {
    *(void *)(v6 - 120) = v1;
    *(void *)(v6 - 112) = a1;
    sub_10019BA8C(v3, v2);
    *(void *)(v6 - 72) = _swiftEmptyArrayStorage;
    sub_10018D984(0, 0LL, 0);
    uint64_t v7 = *(void *)(v6 - 72);
    if (v5)
    {
      if (v5 == 1) {
        uint64_t v8 = (int)v3;
      }
      else {
        uint64_t v8 = *(void *)(v3 + 16);
      }
      sub_10019BA8C(v3, v2);
      sub_10019BA8C(v3, v2);
    }

    else
    {
      uint64_t v8 = 0LL;
    }

    ((void (*)(uint64_t, unint64_t, uint64_t))Data.Iterator.init(_:at:))(v3, v2, v8);
    *(void *)(v6 - 104) = v3;
    *(void *)(v6 - 96) = v2;
    sub_100189B20(v3, v2);
    uint64_t v12 = type metadata accessor for Data.Iterator(0LL);
    uint64_t v13 = sub_100183F14( &qword_10064B7E8,  (uint64_t (*)(uint64_t))&type metadata accessor for Data.Iterator,  (uint64_t)&protocol conformance descriptor for Data.Iterator);
    dispatch thunk of IteratorProtocol.next()(v12, v13);
    uint64_t v14 = 0LL;
    if ((*(_BYTE *)(v6 - 81) & 1) != 0)
    {
LABEL_11:
      *(void *)(v4 + *(int *)(*(void *)(v6 - 112) + 36LL)) = v14;
      sub_100187100(v4, &qword_10064D760);
      sub_100189B20(*(void *)(v6 - 104), *(void *)(v6 - 96));
      unint64_t v15 = *(int8x16_t **)(v6 - 72);
      unint64_t v16 = v15[1].u64[0];
      if (v16)
      {
        if (v16 >= 0x10)
        {
          uint64_t v17 = v16 & 0x7FFFFFFFFFFFFFF0LL;
          unint64_t v21 = v15 + 3;
          int8x16_t v22 = 0uLL;
          uint64_t v23 = v16 & 0x7FFFFFFFFFFFFFF0LL;
          int8x16_t v24 = 0uLL;
          do
          {
            int8x16_t v22 = vorrq_s8(v21[-1], v22);
            int8x16_t v24 = vorrq_s8(*v21, v24);
            v21 += 2;
            v23 -= 16LL;
          }

          while (v23);
          int8x16_t v25 = vorrq_s8(v24, v22);
          *(int8x8_t *)v25.i8 = vorr_s8(*(int8x8_t *)v25.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v25, v25, 8uLL));
          uint64_t v9 = v25.i32[0] | v25.i32[1] | ((unint64_t)(v25.i64[0] | HIDWORD(v25.i64[0])) >> 16);
          if (v16 == v17) {
            goto LABEL_29;
          }
        }

        else
        {
          uint64_t v17 = 0LL;
          LODWORD(v9) = 0;
        }

        unint64_t v26 = v16 - v17;
        uint64_t v27 = (unsigned __int16 *)&v15[2] + v17;
        do
        {
          int v28 = *v27++;
          uint64_t v9 = v28 | v9;
          --v26;
        }

        while (v26);
      }

      else
      {
        uint64_t v9 = 0LL;
      }

void sub_1002DD518(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100183098(&qword_10064D760);
  __chkstk_darwin(v3);
  __asm { BR              X9 }

uint64_t sub_1002DD598(uint64_t a1)
{
  if (BYTE6(v3) == 8LL)
  {
    *(void *)(v6 - 104) = a1;
    sub_10019BA8C(v4, v3);
    *(void *)(v6 - 72) = _swiftEmptyArrayStorage;
    sub_10018D968(0, 0LL, 0);
    uint64_t v7 = *(void *)(v6 - 72);
    if (v1)
    {
      if (v1 == 1) {
        uint64_t v8 = (int)v4;
      }
      else {
        uint64_t v8 = *(void *)(v4 + 16);
      }
      sub_10019BA8C(v4, v3);
      sub_10019BA8C(v4, v3);
    }

    else
    {
      uint64_t v8 = 0LL;
    }

    ((void (*)(uint64_t, unint64_t, uint64_t))Data.Iterator.init(_:at:))(v4, v3, v8);
    sub_100189B20(v4, v3);
    uint64_t v12 = type metadata accessor for Data.Iterator(0LL);
    uint64_t v13 = sub_100183F14( &qword_10064B7E8,  (uint64_t (*)(uint64_t))&type metadata accessor for Data.Iterator,  (uint64_t)&protocol conformance descriptor for Data.Iterator);
    *(void *)(v6 - 96) = v12;
    dispatch thunk of IteratorProtocol.next()(v12, v13);
    uint64_t v14 = 0LL;
    if ((*(_BYTE *)(v6 - 81) & 1) == 0)
    {
      *(void *)(v6 - 128) = v4;
      *(void *)(v6 - 120) = v3;
      *(void *)(v6 - 112) = v2;
      unint64_t v15 = 0LL;
      uint64_t v16 = 0LL;
      while (v16 != 0xF000000000000000LL)
      {
        if (v15 >= 0x40) {
          unint64_t v17 = 0LL;
        }
        else {
          unint64_t v17 = (unint64_t)*(unsigned __int8 *)(v6 - 82) << (v15 & 0x38);
        }
        *(void *)(v6 - 72) = v7;
        unint64_t v19 = *(void *)(v7 + 16);
        unint64_t v18 = *(void *)(v7 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_10018D968(v18 > 1, v19 + 1, 1);
          uint64_t v7 = *(void *)(v6 - 72);
        }

        *(void *)(v7 + swift_weakDestroy(v0 + 16) = v19 + 1;
        *(void *)(v7 + 8 * v19 + 32) = v17;
        dispatch thunk of IteratorProtocol.next()(*(void *)(v6 - 96), v13);
        --v16;
        v15 += 8LL;
        if (*(_BYTE *)(v6 - 81) == 1)
        {
          uint64_t v14 = -v16;
          unint64_t v3 = *(void *)(v6 - 120);
          uint64_t v4 = *(void *)(v6 - 128);
          goto LABEL_20;
        }
      }

      __break(1u);
LABEL_32:
      __break(1u);
      JUMPOUT(0x1002DD890LL);
    }

uint64_t sub_1002DD8A8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }

  if ((unint64_t)(v6 - 0x1000000000000000LL) >> 61 != 7)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if ((v6 & 0x1FFFFFFFFFFFFFFFLL) != 2)
  {
    uint64_t v15 = sub_100183098(&qword_10064D768);
    uint64_t v16 = sub_1002DDC1C((unint64_t *)&unk_10064D770, &qword_10064D768);
    uint64_t v17 = swift_allocError(v15, v16, 0LL, 0LL);
    swift_willThrow(v17);
    return v4;
  }

  uint64_t v9 = result;
  swift_unknownObjectRetain(result);
  __n128 result = sub_10018D984(0, 0LL, 0);
  if (v5 == a3)
  {
LABEL_16:
    swift_unknownObjectRelease(v9);
    unint64_t v18 = _swiftEmptyArrayStorage[2];
    if (v18)
    {
      if (v18 >= 0x10)
      {
        uint64_t v19 = v18 & 0x7FFFFFFFFFFFFFF0LL;
        unint64_t v20 = (int8x16_t *)&_swiftEmptyArrayStorage[6];
        int8x16_t v21 = 0uLL;
        uint64_t v22 = v18 & 0x7FFFFFFFFFFFFFF0LL;
        int8x16_t v23 = 0uLL;
        do
        {
          int8x16_t v21 = vorrq_s8(v20[-1], v21);
          int8x16_t v23 = vorrq_s8(*v20, v23);
          v20 += 2;
          v22 -= 16LL;
        }

        while (v22);
        int8x16_t v24 = vorrq_s8(v23, v21);
        *(int8x8_t *)v24.i8 = vorr_s8(*(int8x8_t *)v24.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v24, v24, 8uLL));
        uint64_t v4 = v24.i32[0] | v24.i32[1] | ((unint64_t)(v24.i64[0] | HIDWORD(v24.i64[0])) >> 16);
        if (v18 == v19) {
          goto LABEL_25;
        }
      }

      else
      {
        uint64_t v19 = 0LL;
        LODWORD(v4) = 0;
      }

      unint64_t v25 = v18 - v19;
      int8x16_t v26 = (unsigned __int16 *)&_swiftEmptyArrayStorage[4] + v19;
      do
      {
        int v27 = *v26++;
        uint64_t v4 = v27 | v4;
        --v25;
      }

      while (v25);
LABEL_25:
      swift_release(_swiftEmptyArrayStorage);
      return v4;
    }

    swift_release(_swiftEmptyArrayStorage);
    return 0LL;
  }

  if (v5 > a3)
  {
    __n128 result = swift_unknownObjectRetain(v9);
    uint64_t v10 = 0LL;
    uint64_t v11 = a2 + a3;
    while (v10 != 0x2000)
    {
      if ((v10 & 0x1FFE) != 0) {
        __int16 v12 = 0;
      }
      else {
        __int16 v12 = *(unsigned __int8 *)(v11 + v10) << (8 * (v10 & 1));
      }
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        __n128 result = sub_10018D984(v13 > 1, v14 + 1, 1);
      }
      ++v10;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      *((_WORD *)&_swiftEmptyArrayStorage[4] + vsub_10018709C(v0 + 14) = v12;
      if (v6 == v10)
      {
        swift_unknownObjectRelease(v9);
        goto LABEL_16;
      }
    }

    __break(1u);
    goto LABEL_28;
  }

uint64_t sub_1002DDADC(uint64_t result)
{
  if (*(void *)(result + 16) == 3LL)
  {
    uint64_t v2 = result;
    __n128 result = sub_1002DD8A8(result, result + 32, 0LL, 5uLL);
    if (!v1) {
      return (unsigned __int16)result | (*(unsigned __int8 *)(v2 + 34) << 16);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1002DDB2C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }

uint64_t sub_1002DDB5C(uint64_t a1, uint64_t a2)
{
  if (BYTE6(a2) != 32LL)
  {
    __break(1u);
    JUMPOUT(0x1002DDC0CLL);
  }

  sub_1002DB094(a1, a2);
  if (!v3)
  {
    unint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      if (v5 != 1)
      {
        if (v5 >= 3)
        {
          if (v5 != 3)
          {
            uint64_t v2 = *(void *)(v4 + 32);
            swift_bridgeObjectRelease((const char *)v4);
            return v2;
          }

uint64_t sub_1002DDC1C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_100183124(a2);
    uint64_t result = swift_getWitnessTable(&unk_1004CE2D8, v4);
    atomic_store(result, a1);
  }

  return result;
}

void sub_1002DDC60(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }

uint64_t sub_1002DDCB8(uint64_t a1)
{
  uint64_t v4 = BYTE6(v24);
  if (BYTE6(v24))
  {
    *(void *)(v3 - 104) = v2;
    uint64_t v5 = BYTE6(v24);
    uint64_t v6 = sub_10018D82C(0, BYTE6(v24), 0);
    uint64_t v2 = *(void *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1) {
        uint64_t v7 = (int)a1;
      }
      else {
        uint64_t v7 = *(void *)(a1 + 16);
      }
    }

    else
    {
      uint64_t v7 = 0LL;
    }

    *(void *)(v3 - 136) = v24 & 0x3FFFFFFFFFFFFFFFLL;
    *(void *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          uint64_t v8 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }

          uint64_t v9 = v8;
          uint64_t v10 = __DataStorage._offset.getter();
          uint64_t v11 = v7 - v10;
          if (__OFSUB__(v7, v10)) {
            goto LABEL_32;
          }
        }

        else
        {
          if (v7 < *(void *)(a1 + 16)) {
            goto LABEL_31;
          }
          if (v7 >= *(void *)(a1 + 24)) {
            goto LABEL_33;
          }
          uint64_t v13 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v13) {
            goto LABEL_36;
          }
          uint64_t v9 = v13;
          uint64_t v14 = __DataStorage._offset.getter();
          uint64_t v11 = v7 - v14;
          if (__OFSUB__(v7, v14)) {
            goto LABEL_34;
          }
        }

        char v12 = *(_BYTE *)(v9 + v11);
      }

      else
      {
        if (v7 >= BYTE6(v24)) {
          goto LABEL_30;
        }
        *(void *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v24;
        *(_BYTE *)(v3 - 108) = BYTE2(v24);
        *(_BYTE *)(v3 - 107) = BYTE3(v24);
        *(_BYTE *)(v3 - 106) = BYTE4(v24);
        *(_BYTE *)(v3 - 105) = BYTE5(v24);
        char v12 = *(_BYTE *)(v3 - 118 + v7);
      }

      uint64_t v15 = sub_100183098(&qword_1006483E0);
      uint64_t v16 = swift_allocObject(v15, 72LL, 7LL);
      *(_OWORD *)(v16 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v16 + 56) = &type metadata for UInt8;
      *(void *)(v16 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v16 + 32) = v12;
      uint64_t v6 = String.init(format:_:)(2016555045LL, 0xE400000000000000LL, v16);
      uint64_t v17 = v6;
      uint64_t v19 = v18;
      *(void *)(v3 - 104) = v2;
      unint64_t v21 = *(void *)(v2 + 16);
      unint64_t v20 = *(void *)(v2 + 24);
      if (v21 >= v20 >> 1)
      {
        uint64_t v6 = sub_10018D82C(v20 > 1, v21 + 1, 1);
        uint64_t v2 = *(void *)(v3 - 104);
      }

      *(void *)(v2 + swift_weakDestroy(v0 + 16) = v21 + 1;
      uint64_t v22 = v2 + 16 * v21;
      *(void *)(v22 + 32) = v17;
      *(void *)(v22 + 40) = v19;
      ++v7;
      --v5;
      --v4;
      uint64_t v1 = *(void *)(v3 - 128);
      if (!v4) {
        return v2;
      }
    }

    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1002DDFCCLL);
  }

  return v2;
}

void *sub_1002DDFF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = &_swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    sub_10018D79C(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v10(v5, v8, v2);
      swift_dynamicCast(v15, v5, v2, (char *)&type metadata for Any + 8, 7LL);
      uint64_t v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      {
        sub_10018D79C(0, v7[2] + 1LL, 1);
        uint64_t v7 = v16;
      }

      unint64_t v12 = v7[2];
      unint64_t v11 = v7[3];
      if (v12 >= v11 >> 1)
      {
        sub_10018D79C(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v16;
      }

      void v7[2] = v12 + 1;
      sub_100186D8C(v15, &v7[4 * v12 + 4]);
      v8 += v9;
      --v6;
    }

    while (v6);
  }

  return v7;
}

void *sub_1002DE168(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    unint64_t v11 = _swiftEmptyArrayStorage;
    sub_10018D79C(0, v1, 0);
    uint64_t v4 = (const char **)(a1 + 32);
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain(*v4, *v4);
      uint64_t v5 = sub_100183098((uint64_t *)&unk_100645190);
      swift_dynamicCast(v10, &v9, v5, (char *)&type metadata for Any + 8, 7LL);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_10018D79C(0, v2[2] + 1LL, 1);
        uint64_t v2 = v11;
      }

      unint64_t v7 = v2[2];
      unint64_t v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_10018D79C(v6 > 1, v7 + 1, 1);
        uint64_t v2 = v11;
      }

      v2[2] = v7 + 1;
      sub_100186D8C(v10, &v2[4 * v7 + 4]);
      ++v4;
      --v1;
    }

    while (v1);
  }

  return v2;
}

uint64_t sub_1002DE294(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease((const char *)a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10018D79C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      for (uint64_t i = 0LL; i != v2; ++i)
      {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        uint64_t v6 = sub_100183168(0LL, &qword_10064D808, &OBJC_CLASS___LSBundleRecord_ptr);
        swift_dynamicCast(v16, &v15, v6, (char *)&type metadata for Any + 8, 7LL);
        uint64_t v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_10018D79C(0, v3[2] + 1LL, 1);
          uint64_t v3 = v17;
        }

        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10018D79C(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }

        v3[2] = v8 + 1;
        sub_100186D8C(v16, &v3[4 * v8 + 4]);
      }
    }

    else
    {
      uint64_t v9 = (id *)(a1 + 32);
      uint64_t v10 = sub_100183168(0LL, &qword_10064D808, &OBJC_CLASS___LSBundleRecord_ptr);
      do
      {
        id v15 = *v9;
        id v11 = v15;
        swift_dynamicCast(v16, &v15, v10, (char *)&type metadata for Any + 8, 7LL);
        uint64_t v3 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
        {
          sub_10018D79C(0, v3[2] + 1LL, 1);
          uint64_t v3 = v17;
        }

        unint64_t v13 = v3[2];
        unint64_t v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_10018D79C(v12 > 1, v13 + 1, 1);
          uint64_t v3 = v17;
        }

        v3[2] = v13 + 1;
        sub_100186D8C(v16, &v3[4 * v13 + 4]);
        ++v9;
        --v2;
      }

      while (v2);
    }

    return (uint64_t)v3;
  }

  __break(1u);
  return result;
}

void *sub_1002DE4F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    uint64_t v4 = a1 + 32;
    do
    {
      sub_100187058(v4, (uint64_t)v10);
      uint64_t v5 = sub_100183168(0LL, &qword_10064D808, &OBJC_CLASS___LSBundleRecord_ptr);
      uint64_t v6 = swift_dynamicCast(&v11, v10, (char *)&type metadata for Any + 8, v5, 7LL);
      uint64_t v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      uint64_t v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      uint64_t v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 32LL;
      --v2;
    }

    while (v2);
    return v12;
  }

  return result;
}

void *sub_1002DE5EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    unint64_t v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    uint64_t v4 = a1 + 32;
    do
    {
      sub_100187058(v4, (uint64_t)v10);
      uint64_t v5 = sub_100183098(&qword_10064B7C0);
      uint64_t v6 = swift_dynamicCast(&v11, v10, (char *)&type metadata for Any + 8, v5, 7LL);
      uint64_t v7 = v11;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v6);
      uint64_t v8 = v12[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
      uint64_t v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v7);
      specialized ContiguousArray._endMutation()(v9);
      v4 += 32LL;
      --v2;
    }

    while (v2);
    return v12;
  }

  return result;
}

uint64_t sub_1002DE6D4(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v15 = a1;
    }
    else {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease((const char *)a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10018D79C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      for (uint64_t i = 0LL; i != v2; ++i)
      {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        type metadata accessor for SecCertificate(0LL);
        swift_dynamicCast(v17, &v16, v6, (char *)&type metadata for Any + 8, 7LL);
        uint64_t v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_10018D79C(0, v3[2] + 1LL, 1);
          uint64_t v3 = v18;
        }

        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10018D79C(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v18;
        }

        v3[2] = v8 + 1;
        sub_100186D8C(v17, &v3[4 * v8 + 4]);
      }
    }

    else
    {
      uint64_t v9 = (id *)(a1 + 32);
      type metadata accessor for SecCertificate(0LL);
      uint64_t v11 = v10;
      do
      {
        id v16 = *v9;
        id v12 = v16;
        swift_dynamicCast(v17, &v16, v11, (char *)&type metadata for Any + 8, 7LL);
        uint64_t v3 = v18;
        if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        {
          sub_10018D79C(0, v3[2] + 1LL, 1);
          uint64_t v3 = v18;
        }

        unint64_t v14 = v3[2];
        unint64_t v13 = v3[3];
        if (v14 >= v13 >> 1)
        {
          sub_10018D79C(v13 > 1, v14 + 1, 1);
          uint64_t v3 = v18;
        }

        v3[2] = v14 + 1;
        sub_100186D8C(v17, &v3[4 * v14 + 4]);
        ++v9;
        --v2;
      }

      while (v2);
    }

    return (uint64_t)v3;
  }

  __break(1u);
  return result;
}

void *sub_1002DE904(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018D864,  &qword_100645278,  (uint64_t *)&unk_10064B7A0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

void *sub_1002DE928(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018D864,  &qword_100645288,  (uint64_t *)&unk_10064B7A0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

void *sub_1002DE94C( uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4, void (*a5)(_BYTE *, void *))
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    unint64_t v20 = _swiftEmptyArrayStorage;
    a2(0, v5, 0LL);
    uint64_t v12 = a1 + 32;
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      sub_10019A6C4(v12, (uint64_t)v18);
      uint64_t v13 = sub_100183098(a3);
      uint64_t v14 = sub_100183098(a4);
      swift_dynamicCast(v19, v18, v13, v14, 7LL);
      if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      {
        a2(0, v6[2] + 1LL, 1LL);
        uint64_t v6 = v20;
      }

      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        a2(v15 > 1, v16 + 1, 1LL);
        uint64_t v6 = v20;
      }

      v6[2] = v16 + 1;
      a5(v19, &v6[5 * v16 + 4]);
      v12 += 40LL;
      --v5;
    }

    while (v5);
  }

  return v6;
}

void *sub_1002DEA8C(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018D864,  &qword_10064D800,  (uint64_t *)&unk_10064B7A0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

void *sub_1002DEAB0(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018D864,  (uint64_t *)&unk_10064D7F0,  (uint64_t *)&unk_10064B7A0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

uint64_t sub_1002DEAD4(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease((const char *)a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10018D8AC(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000LL) == 0)
  {
    uint64_t v3 = v18;
    if ((a1 & 0xC000000000000001LL) != 0)
    {
      uint64_t v5 = 0LL;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        uint64_t v18 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10018D8AC(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v18;
        }

        ++v5;
        uint64_t v16 = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
        uint64_t v17 = &off_1005E0BD0;
        *(void *)&__int128 v15 = v6;
        v3[2] = v8 + 1;
        sub_1001CE0D0(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }

      while (v2 != v5);
    }

    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v18 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_10018D8AC(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v18;
        }

        uint64_t v16 = sub_100183168(0LL, (unint64_t *)&qword_10064D810, &OBJC_CLASS___IDSDevice_ptr);
        uint64_t v17 = &off_1005E0BD0;
        *(void *)&__int128 v15 = v13;
        v3[2] = v12 + 1;
        sub_1001CE0D0(&v15, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }

      while (v2);
    }

    return (uint64_t)v3;
  }

  __break(1u);
  return result;
}

void *sub_1002DECC4(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018DA90,  &qword_10064D800,  &qword_1006452E0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

void *sub_1002DECE8(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018DA90,  (uint64_t *)&unk_10064D7F0,  &qword_1006452E0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

void *sub_1002DED0C(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018DABC,  &qword_100645288,  (uint64_t *)&unk_10064D7E0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

void *sub_1002DED30(uint64_t a1)
{
  return sub_1002DE94C( a1,  (void (*)(BOOL, uint64_t, uint64_t))sub_10018DABC,  &qword_100645278,  (uint64_t *)&unk_10064D7E0,  (void (*)(_BYTE *, void *))sub_1001CE0D0);
}

sec_identity_t sub_1002DED54()
{
  id v1 = [v0 copyMyAppleIDSecIdentity];
  if (!v1) {
    return 0LL;
  }
  uint64_t v2 = v1;
  id v3 = [v0 copyMyAppleIDIntermediateCertificate];
  if (!v3)
  {

    return 0LL;
  }

  uint64_t v4 = v3;
  uint64_t v5 = sub_100183098(&qword_100650450);
  uint64_t v6 = swift_allocObject(v5, 40LL, 7LL);
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = xmmword_1004D0130;
  *(void *)(v6 + 32) = v4;
  uint64_t v11 = v6;
  specialized Array._endMutation()(v6);
  type metadata accessor for SecCertificate(0LL);
  id v7 = v4;
  Class isa = (const __CFArray *)Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  sec_identity_t v9 = sec_identity_create_with_certificates((SecIdentityRef)v2, isa);

  return v9;
}

uint64_t sub_1002DEE3C(uint64_t a1, uint64_t a2, __SecTrust *a3)
{
  uint64_t v4 = sub_100035290(a3);
  if (!v4) {
    __break(1u);
  }
  uint64_t v5 = v4;
  id v23 = 0LL;
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v4, &v23, (char *)&type metadata for Any + 8);

  uint64_t v6 = (uint64_t)v23;
  if (v23)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v3 verifiedIdentityForAppleID:v7];

    if (v8)
    {
      id v9 = [objc_allocWithZone(NSError) init];
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v6);
      id v23 = v9;
      uint64_t v6 = sub_1001720B8(isa, v8, &v23);

      id v11 = v23;
      id v12 = v23;

      if (v12)
      {
        uint64_t v13 = qword_100643FD0;
        id v14 = v12;
        if (v13 != -1) {
          swift_once(&qword_100643FD0, sub_10023A3F4);
        }
        uint64_t v15 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v15, (uint64_t)qword_1006695E0);
        id v16 = v14;
        uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
        os_log_type_t v18 = static os_log_type_t.error.getter(v17);
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v22 = (void *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v19 = 138412290;
          id v23 = v16;
          id v16 = v16;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v19 + 4, v19 + 12);
          *uint64_t v22 = v11;

          _os_log_impl((void *)&_mh_execute_header, v17, v18, "AppleID certificate chain sync error %@", v19, 0xCu);
          uint64_t v20 = sub_100183098(&qword_1006454E0);
          swift_arrayDestroy(v22, 1LL, v20);
          swift_slowDealloc(v22, -1LL, -1LL);
          swift_slowDealloc(v19, -1LL, -1LL);
        }

        else
        {

          uint64_t v17 = (os_log_s *)v16;
        }
      }
    }

    else
    {
      swift_bridgeObjectRelease(v6);
      return 0LL;
    }
  }

  return v6;
}

uint64_t sub_1002DF104()
{
  return sub_1002E0220((uint64_t *)&kSFOperationDiscoverableModeEveryone);
}

uint64_t sub_1002DF110(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a4)
  {
    if (!a2) {
      return 0LL;
    }
    goto LABEL_8;
  }

  if (a4 == 1)
  {
    if (a2 == 1) {
      return 0LL;
    }
    goto LABEL_8;
  }

  if (a2 < 2)
  {
LABEL_8:
    BOOL v6 = a4 == 0;
    if (a2 != 1) {
      BOOL v6 = a4 < 2;
    }
    return a2 && v6;
  }

  if (a3 == a1 && a4 == a2) {
    return 0LL;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 0LL);
  uint64_t result = 0LL;
  if ((v10 & 1) == 0) {
    return _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 1LL);
  }
  return result;
}

uint64_t sub_1002DF1E8()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SHA256(0LL);
  __chkstk_darwin(v5);
  NSString v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SHA256Digest(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v53 = [v0 nextAirDropID];
  if (v53)
  {
    if (qword_100644130 != -1) {
      swift_once(&qword_100644130, sub_1002E09E4);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v10, (uint64_t)qword_10064D780);
    id v11 = v53;
    id v12 = v53;
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v16 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v15 = 138412290;
      id v54 = v12;
      id v17 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, &v55, v15 + 4, v15 + 12);
      *id v16 = v11;

      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Returning cached AirDropID %@", v15, 0xCu);
      uint64_t v18 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v16, 1LL, v18);
      swift_slowDealloc(v16, -1LL, -1LL);
      swift_slowDealloc(v15, -1LL, -1LL);
    }

    else
    {
    }

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  }

  else
  {
    uint64_t v51 = v4;
    uint64_t v52 = v2;
    v50[2] = v9;
    uint64_t v50[3] = v7;
    v50[1] = v0;
    id v19 = [v0 bluetoothAddress];
    if (v19)
    {
      uint64_t v20 = v19;
      id v53 = (id)static Data._unconditionallyBridgeFromObjectiveC(_:)(v19);
      uint64_t v22 = v21;

      v50[4] = v22;
      __asm { BR              X9 }
    }

    if (qword_100644130 != -1) {
      swift_once(&qword_100644130, sub_1002E09E4);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    uint64_t v25 = sub_100186DE4(v24, (uint64_t)qword_10064D780);
    int8x16_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter(v26);
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = v1;
    uint64_t v31 = v51;
    uint64_t v30 = v52;
    if (v28)
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Bluetooth Address missing - using random UUID", v32, 2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    uint64_t v34 = UUID.init()(v33);
    UUID.uuidString.getter(v34);
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
    Swift::String v37 = String.lowercased()();
    __n128 v38 = swift_bridgeObjectRelease(v36);
    unint64_t v39 = String.index(_:offsetBy:)(15LL, 12LL, v37._countAndFlagsBits, v37._object, v38);
    unint64_t v41 = String.index(_:offsetBy:)(15LL, 24LL, v37._countAndFlagsBits, v37._object, v40);
    if (v41 >> 14 < v39 >> 14)
    {
      __break(1u);
      JUMPOUT(0x1002DFBF0LL);
    }

    uint64_t v42 = String.subscript.getter(v39, v41, v37._countAndFlagsBits, v37._object);
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    uint64_t v48 = v47;
    swift_bridgeObjectRelease(v37._object);
    uint64_t v23 = static String._fromSubstring(_:)(v42, v44, v46, v48);
    swift_bridgeObjectRelease(v48);
  }

  return v23;
}

uint64_t sub_1002DFC24()
{
  v1[7] = v0;
  uint64_t v2 = sub_100183098(&qword_10064D7B0);
  v1[8] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Notifications.Iterator(0LL);
  void v1[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[10] = v4;
  v1[11] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1002DFCA8, 0LL, 0LL);
}

uint64_t sub_1002DFCA8()
{
  if ([*(id *)(v0 + 56) deviceWasUnlockedOnce])
  {
    uint64_t v1 = *(void *)(v0 + 64);
    swift_task_dealloc(*(void *)(v0 + 88));
    swift_task_dealloc(v1);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    if (qword_100644130 != -1) {
      swift_once(&qword_100644130, sub_1002E09E4);
    }
    uint64_t v3 = *(void **)(v0 + 56);
    uint64_t v4 = type metadata accessor for Logger(0LL);
    *(void *)(v0 + 96) = sub_100186DE4(v4, (uint64_t)qword_10064D780);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *(void **)(v0 + 56);
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v10 = swift_slowAlloc(32LL, -1LL);
      uint64_t v21 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      *(void *)(v0 + 40) = v8;
      uint64_t v11 = sub_100183168(0LL, &qword_10064D7B8, &off_1005C8890);
      id v12 = v8;
      uint64_t v13 = String.init<A>(describing:)(v0 + 40, v11);
      unint64_t v15 = v14;
      *(void *)(v0 + 48) = sub_10018CDB4(v13, v14, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v9 + 4, v9 + 12);
      swift_bridgeObjectRelease(v15);

      _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s: Waiting for first unlock to start", v9, 0xCu);
      swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1LL, -1LL);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    else
    {
    }

    id v16 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
    if (qword_100643F80 != -1) {
      swift_once(&qword_100643F80, sub_100224D54);
    }
    uint64_t v17 = NSNotificationCenter.notifications(named:object:)(qword_100669518, 0LL);
    *(void *)(v0 + 104) = v17;

    uint64_t v18 = swift_retain(v17);
    NSNotificationCenter.Notifications.makeAsyncIterator()(v18);
    uint64_t v19 = sub_100183F14( &qword_100649138,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Notifications.Iterator);
    uint64_t v20 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(void *)(v0 + 112) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1002DFFA4;
    return dispatch thunk of AsyncIteratorProtocol.next()(*(void *)(v0 + 64), *(void *)(v0 + 72), v19);
  }

uint64_t sub_1002DFFA4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112LL);
  *(void *)(*(void *)v1 + 120LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_10021DACC;
  }
  else {
    uint64_t v3 = sub_1002E0008;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002E0008()
{
  uint64_t v1 = *(void *)(v0 + 64);
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8LL))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  uint64_t v2 = type metadata accessor for Notification(0LL);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(*(id *)(v0 + 56));
  os_log_type_t v4 = static os_log_type_t.default.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  os_log_type_t v6 = *(void **)(v0 + 56);
  if (v5)
  {
    uint64_t v16 = *(void *)(v0 + 104);
    BOOL v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v17 = v8;
    *(_DWORD *)BOOL v7 = 136315138;
    *(void *)(v0 + 24) = v6;
    uint64_t v9 = sub_100183168(0LL, &qword_10064D7B8, &off_1005C8890);
    id v10 = v6;
    uint64_t v11 = String.init<A>(describing:)(v0 + 24, v9);
    unint64_t v13 = v12;
    *(void *)(v0 + 32) = sub_10018CDB4(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v13);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s: Finished waiting for first unlock", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);

    swift_release(v16);
  }

  else
  {
    swift_release(*(void *)(v0 + 104));
  }

  uint64_t v14 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E0214()
{
  return sub_1002E0220((uint64_t *)&kSFOperationDiscoverableModeContactsOnly);
}

uint64_t sub_1002E0220(uint64_t *a1)
{
  id v3 = [v1 discoverableMode];
  if (v3)
  {
    uint64_t v1 = v3;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    os_log_type_t v6 = v5;

    uint64_t v7 = *a1;
    if (*a1) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease(v6);
    __break(1u);
    goto LABEL_9;
  }

  uint64_t v4 = 0LL;
  os_log_type_t v6 = 0LL;
  uint64_t v7 = *a1;
  if (!*a1) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  uint64_t v1 = v9;
  if (!v6)
  {
LABEL_9:
    char v10 = 0;
    goto LABEL_12;
  }

  if (v4 == v8 && v6 == v9) {
    char v10 = 1;
  }
  else {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v9, 0LL);
  }
  swift_bridgeObjectRelease(v6);
LABEL_12:
  swift_bridgeObjectRelease(v1);
  return v10 & 1;
}

__SecIdentity *sub_1002E02F4()
{
  uint64_t v1 = (__SecIdentity *)[v0 copyMyAppleIDSecIdentity];
  if (v1)
  {
    id v2 = [v0 copyMyAppleIDIntermediateCertificate];
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = sub_100183098(&qword_100650450);
      uint64_t v5 = swift_allocObject(v4, 40LL, 7LL);
      *(_OWORD *)(v5 + swift_weakDestroy(v0 + 16) = xmmword_1004D0130;
      *(void *)(v5 + 32) = v3;
      char v10 = (const char *)v5;
      specialized Array._endMutation()(v5);
      type metadata accessor for SecCertificate(0LL);
      id v6 = v3;
      Class isa = (const __CFArray *)Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v10);
      uint64_t v8 = sec_identity_create_with_certificates(v1, isa);

      if (v8)
      {
        uint64_t v1 = sec_identity_copy_ref(v8);
        swift_unknownObjectRelease(v8);
        return v1;
      }
    }

    else
    {
    }

    return 0LL;
  }

  return v1;
}

void sub_1002E03F4(uint64_t a1@<X0>, const char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  id v8 = [v4 idSelfIdentity];
  uint64_t v9 = v8;
  if (!a2 || !v8) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain(a2);
  id v10 = [v9 idsDeviceID];
  if (!v10) {
    goto LABEL_8;
  }
  unint64_t v12 = v10;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  unint64_t v15 = v14;

  id v16 = [v9 deviceIRKData];
  if (!v16)
  {
    *(void *)&double v11 = swift_bridgeObjectRelease(v15).n128_u64[0];
LABEL_8:
    swift_bridgeObjectRelease(a2, v11);
    goto LABEL_9;
  }

  uint64_t v17 = v16;
  uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v16);
  unint64_t v20 = v19;

  id v21 = [v9 edPKData];
  if (v21)
  {
    uint64_t v22 = v21;
    id v34 = v9;
    uint64_t v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v21);
    uint64_t v25 = v24;

    id v26 = [v34 featureFlags];
    unint64_t v27 = 0xF000000000000000LL;
    goto LABEL_15;
  }

  *(void *)&double v33 = swift_bridgeObjectRelease(v15).n128_u64[0];
  swift_bridgeObjectRelease(a2, v33);
  sub_100189B20(v18, v20);
LABEL_9:
  if (qword_100644130 != -1) {
    swift_once(&qword_100644130, sub_1002E09E4);
  }
  uint64_t v28 = type metadata accessor for Logger(0LL);
  uint64_t v29 = sub_100186DE4(v28, (uint64_t)qword_10064D780);
  uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
  os_log_type_t v31 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v30, v31))
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v32 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Missing data for identity update to generate identity share request",  v32,  2u);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
  }

  a1 = 0LL;
  a2 = 0LL;
  unint64_t v27 = 0LL;
  uint64_t v18 = 0LL;
  unint64_t v20 = 0LL;
  uint64_t v23 = 0LL;
  uint64_t v25 = 0LL;
  uint64_t v13 = 0LL;
  unint64_t v15 = 0LL;
  id v26 = 0LL;
LABEL_15:
  *a3 = a1;
  a3[1] = a2;
  a3[2] = 0LL;
  a3[3] = v27;
  a3[4] = v18;
  a3[5] = v20;
  a3[6] = v23;
  a3[7] = v25;
  a3[8] = v13;
  a3[9] = v15;
  a3[10] = v26;
}

uint64_t sub_1002E0654()
{
  uint64_t v1 = v0;
  id v2 = [v0 myAppleIDCommonName];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    unint64_t v6 = v5;

    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v1 verifiedIdentityForAppleID:v7];

    if (v8)
    {
      id v9 = [v8 accountIdentifier];

      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      unint64_t v12 = v11;

      uint64_t v13 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000LL) == 0) {
        uint64_t v13 = v4 & 0xFFFFFFFFFFFFLL;
      }
      if (!v13) {
        goto LABEL_14;
      }
      uint64_t v14 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000LL) == 0) {
        uint64_t v14 = v10 & 0xFFFFFFFFFFFFLL;
      }
      if (v14)
      {
        if (v10 == v4 && v12 == v6)
        {
          char v15 = 1;
          unint64_t v16 = v6;
          unint64_t v12 = v6;
        }

        else
        {
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v4, v6, 0LL);
          unint64_t v16 = v6;
        }
      }

      else
      {
LABEL_14:
        char v15 = 0;
        unint64_t v16 = v12;
        unint64_t v12 = v6;
      }

      swift_bridgeObjectRelease(v16);
      unint64_t v6 = v12;
    }

    else
    {
      char v15 = 0;
    }

    swift_bridgeObjectRelease(v6);
  }

  else
  {
    char v15 = 0;
  }

  return v15 & 1;
}

id sub_1002E07C0()
{
  id v1 = [v0 copyMyAppleIDSecIdentity];

  if (v1)
  {
    id result = [v0 myAppleIDValidationRecord];
    if (!result) {
      return result;
    }
    id v3 = result;
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( result,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

    v7[0] = 0xD000000000000022LL;
    v7[1] = 0x8000000100509C90LL;
    AnyHashable.init<A>(_:)(v8, v7, &type metadata for String, &protocol witness table for String);
    if (*(void *)(v4 + 16) && (unint64_t v5 = sub_1003AD50C((uint64_t)v8), (v6 & 1) != 0))
    {
      sub_100187058(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v9);
    }

    else
    {
      __int128 v9 = 0u;
      __int128 v10 = 0u;
    }

    swift_bridgeObjectRelease((const char *)v4);
    sub_10019154C((uint64_t)v8);
    if (*((void *)&v10 + 1))
    {
    }

    else
    {
      sub_100187100((uint64_t)&v9, (uint64_t *)&unk_100646550);
    }
  }

  return 0LL;
}

BOOL sub_1002E090C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a4)
  {
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }

  if (a4 == 1)
  {
    if (a2 == 1)
    {
LABEL_15:
      char v7 = 0;
      return (v7 & 1) == 0;
    }

    goto LABEL_8;
  }

  if (a2 < 2)
  {
LABEL_8:
    BOOL v6 = a4 == 0;
    if (a2 != 1) {
      BOOL v6 = a4 < 2;
    }
    if (a2) {
      char v7 = v6;
    }
    else {
      char v7 = 0;
    }
    return (v7 & 1) == 0;
  }

  if (a3 == a1 && a4 == a2) {
    goto LABEL_15;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 0LL);
  char v7 = 0;
  if ((v11 & 1) == 0) {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(a3, a4, a1, a2, 1LL);
  }
  return (v7 & 1) == 0;
}

uint64_t sub_1002E09E4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064D780);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064D780);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002E0A74(uint64_t a1, void *a2)
{
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  id v4 = [a2 contactWithPreferredIdentifierForContacts:isa];

  if (v4)
  {
    id v5 = [v4 identifier];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

    id v7 = [objc_allocWithZone(CNContactFormatter) init];
    id v8 = [v7 stringFromContact:v4];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    }
  }

  else
  {
    if (qword_100644130 != -1) {
      swift_once(&qword_100644130, sub_1002E09E4);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064D780);
    char v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "No matching contacts found", v13, 2u);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    return 0LL;
  }

  return v6;
}

uint64_t sub_1002E0C5C(void *a1)
{
  id v2 = [objc_allocWithZone(NSDictionary) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&__int128 v35 = v2;
  unsigned int v4 = [a1 verifyAndParseValidationRecordData:isa intoDictionary:&v35];

  id v5 = (id)v35;
  if (!v4)
  {

    return 0LL;
  }

  if (qword_100644130 != -1) {
    swift_once(&qword_100644130, sub_1002E09E4);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064D780);
  id v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sender validation record verified", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  if (!v5)
  {
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    sub_100187100((uint64_t)&v35, (uint64_t *)&unk_100646550);
    __int128 v35 = 0u;
    __int128 v36 = 0u;
    char v15 = (const char *)_swiftEmptyArrayStorage;
LABEL_23:
    sub_100187100((uint64_t)&v35, (uint64_t *)&unk_100646550);
    goto LABEL_24;
  }

  *(void *)&__int128 v33 = 0xD000000000000014LL;
  *((void *)&v33 + 1) = 0x8000000100509CC0LL;
  id v11 = v5;
  uint64_t v12 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v33, &type metadata for String);
  id v13 = objc_msgSend(v11, "__swift_objectForKeyedSubscript:", v12);
  swift_unknownObjectRelease(v12);

  if (v13)
  {
    _bridgeAnyObjectToAny(_:)(&v33, v13);
    swift_unknownObjectRelease(v13);
  }

  else
  {
    __int128 v33 = 0u;
    __int128 v34 = 0u;
  }

  sub_1002E29F8((uint64_t)&v33, (uint64_t)&v35);
  if (*((void *)&v36 + 1))
  {
    uint64_t v16 = sub_100183098(&qword_10064D7A0);
    if (swift_dynamicCast(&v33, &v35, (char *)&type metadata for Any + 8, v16, 6LL))
    {
      char v15 = (const char *)v33;
      goto LABEL_17;
    }
  }

  else
  {
    sub_100187100((uint64_t)&v35, (uint64_t *)&unk_100646550);
  }

  char v15 = (const char *)_swiftEmptyArrayStorage;
LABEL_17:
  *(void *)&__int128 v33 = 0xD000000000000014LL;
  *((void *)&v33 + 1) = 0x8000000100509CE0LL;
  id v17 = v11;
  uint64_t v18 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v33, &type metadata for String);
  id v19 = objc_msgSend(v17, "__swift_objectForKeyedSubscript:", v18);
  swift_unknownObjectRelease(v18);

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)(&v33, v19);
    swift_unknownObjectRelease(v19);
  }

  else
  {
    __int128 v33 = 0u;
    __int128 v34 = 0u;
  }

  sub_1002E29F8((uint64_t)&v33, (uint64_t)&v35);
  if (!*((void *)&v36 + 1)) {
    goto LABEL_23;
  }
  uint64_t v20 = sub_100183098(&qword_10064D7A0);
  if (swift_dynamicCast(&v33, &v35, (char *)&type metadata for Any + 8, v20, 6LL))
  {
    id v21 = (const char *)v33;
    goto LABEL_25;
  }

void sub_1002E10F8(void *a1@<X1>, uint64_t *a2@<X8>)
{
  unsigned int v4 = sub_100411988();
  if (!v4)
  {
    uint64_t v12 = 0LL;
    id v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    id v16 = 0LL;
    id v17 = 0LL;
    goto LABEL_18;
  }

  id v5 = v4;
  sub_1002E1484(v4, &v43);
  uint64_t v7 = v43;
  id v8 = v45;
  os_log_type_t v9 = v46;
  if (v45)
  {
    swift_bridgeObjectRetain(v45);
    NSString v10 = String._bridgeToObjectiveC()();
    unint64_t v6 = swift_bridgeObjectRelease(v8).n128_u64[0];
    if (v9)
    {
LABEL_4:
      swift_bridgeObjectRetain(v9, *(double *)&v6);
      NSString v11 = String._bridgeToObjectiveC()();
      unint64_t v6 = swift_bridgeObjectRelease(v9).n128_u64[0];
      goto LABEL_8;
    }
  }

  else
  {
    NSString v10 = 0LL;
    if (v46) {
      goto LABEL_4;
    }
  }

  NSString v11 = 0LL;
LABEL_8:
  id v17 = objc_msgSend(a1, "emailOrPhoneForEmailHash:phoneHash:", v10, v11, *(double *)&v6);

  if (v17)
  {
    uint64_t v42 = v7;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
    id v13 = v19;
    id v16 = [a1 verifiedIdentityForAppleID:v17];

    if (v16)
    {
      if (qword_100644130 != -1) {
        swift_once(&qword_100644130, sub_1002E09E4);
      }
      uint64_t v20 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v20, (uint64_t)qword_10064D780);
      unint64_t v41 = (char *)v16;
      id v21 = (os_log_s *)Logger.logObject.getter(v41);
      os_log_type_t v22 = static os_log_type_t.default.getter();
      uint64_t v40 = v18;
      if (os_log_type_enabled(v21, v22))
      {
        os_log_type_t type = v22;
        __n128 v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        id v24 = (void *)swift_slowAlloc(8LL, -1LL);
        Swift::String v37 = v21;
        __n128 v38 = v23;
        *(_DWORD *)__n128 v23 = 138412290;
        Class v25 = v23 + 12;
        uint64_t v43 = v41;
        __int128 v36 = v23 + 4;
        __n128 v26 = v41;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v36, v25);
        *id v24 = v16;

        id v27 = v37;
        _os_log_impl((void *)&_mh_execute_header, v37, type, "Sender validation record verified %@", v38, 0xCu);
        uint64_t v28 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v24, 1LL, v28);
        swift_slowDealloc(v24, -1LL, -1LL);
        swift_slowDealloc(v38, -1LL, -1LL);
      }

      else
      {

        id v27 = (os_log_s *)v41;
      }

      uint64_t v14 = sub_1002E0A74((uint64_t)v42, a1);
      uint64_t v15 = v32;
      id v16 = v33;
      id v17 = v34;
      swift_bridgeObjectRelease(v42);

      *(void *)&double v35 = swift_bridgeObjectRelease(v8).n128_u64[0];
      swift_bridgeObjectRelease(v9, v35);
      uint64_t v12 = v40;
    }

    else
    {
      *(void *)&double v30 = swift_bridgeObjectRelease(v13).n128_u64[0];
      swift_bridgeObjectRelease(v42, v30);

      *(void *)&double v31 = swift_bridgeObjectRelease(v8).n128_u64[0];
      swift_bridgeObjectRelease(v9, v31);
      uint64_t v12 = 0LL;
      id v13 = 0LL;
      uint64_t v14 = 0LL;
      uint64_t v15 = 0LL;
      id v17 = 0LL;
    }
  }

  else
  {
    swift_bridgeObjectRelease(v7);

    *(void *)&double v29 = swift_bridgeObjectRelease(v8).n128_u64[0];
    swift_bridgeObjectRelease(v9, v29);
    uint64_t v12 = 0LL;
    id v13 = 0LL;
    uint64_t v14 = 0LL;
    uint64_t v15 = 0LL;
    id v16 = 0LL;
  }

void sub_1002E1484(__SecTrust *a1@<X2>, void *a2@<X8>)
{
  id v3 = v2;
  id v6 = [objc_allocWithZone(NSString) init];
  id v7 = [objc_allocWithZone(NSString) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v25 = v7;
  id v26 = v6;
  sub_100035408(isa, a1, 0LL, &v26, &v25);

  id v9 = v25;
  id v10 = v26;

  if (v10 && (uint64_t)[v10 length] >= 1)
  {
    Swift::String v12 = String.init(_:)(v10);
    uint64_t countAndFlagsBits = v12._countAndFlagsBits;
    object = (const char *)v12._object;
    if (!v9) {
      goto LABEL_10;
    }
  }

  else
  {
    uint64_t countAndFlagsBits = 0LL;
    object = 0LL;
    if (!v9) {
      goto LABEL_10;
    }
  }

  if ((uint64_t)[v9 length] >= 1)
  {
    Swift::String v15 = String.init(_:)(v9);
    uint64_t v16 = v15._countAndFlagsBits;
    id v17 = (const char *)v15._object;
    if (object) {
      goto LABEL_11;
    }
    goto LABEL_8;
  }

uint64_t sub_1002E170C(void *a1)
{
  id v2 = [objc_allocWithZone(NSDictionary) init];
  id v3 = sub_1002E07C0();
  if (v4 >> 60 == 15)
  {

LABEL_58:
    char v32 = 0;
    return v32 & 1;
  }

  uint64_t v5 = (uint64_t)v3;
  unint64_t v35 = v4;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&__int128 v39 = v2;
  unsigned int v7 = [a1 verifyAndParseValidationRecordData:isa intoDictionary:&v39];

  id v8 = (id)v39;
  id v9 = [objc_allocWithZone(NSDictionary) init];
  Class v10 = Data._bridgeToObjectiveC()().super.isa;
  *(void *)&__int128 v39 = v9;
  unsigned __int8 v11 = [a1 verifyAndParseValidationRecordData:v10 intoDictionary:&v39];

  id v12 = (id)v39;
  if (!v7)
  {
    uint64_t v16 = v5;
LABEL_10:
    sub_100189B0C(v16, v35);
LABEL_57:

    goto LABEL_58;
  }

  if ((v11 & 1) == 0)
  {
    uint64_t v16 = v5;
    goto LABEL_10;
  }

  if (!v8)
  {
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    sub_100187100((uint64_t)&v39, (uint64_t *)&unk_100646550);
    __int128 v39 = 0u;
    __int128 v40 = 0u;
LABEL_27:
    sub_100187100((uint64_t)&v39, (uint64_t *)&unk_100646550);
    id v17 = 0LL;
    uint64_t v18 = 0LL;
    goto LABEL_28;
  }

  *(void *)&__int128 v37 = 0x44497344746C61LL;
  *((void *)&v37 + 1) = 0xE700000000000000LL;
  id v13 = v8;
  uint64_t v14 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  id v15 = objc_msgSend(v13, "__swift_objectForKeyedSubscript:", v14);
  swift_unknownObjectRelease(v14);

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v15);
    swift_unknownObjectRelease(v15);
  }

  else
  {
    __int128 v37 = 0u;
    __int128 v38 = 0u;
  }

  sub_1002E29F8((uint64_t)&v37, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    if ((swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      id v17 = (const char *)*((void *)&v37 + 1);
      uint64_t v18 = v37;
      goto LABEL_28;
    }
  }

  else
  {
    sub_100187100((uint64_t)&v39, (uint64_t *)&unk_100646550);
  }

  *(void *)&__int128 v37 = 0x44497344636E65LL;
  *((void *)&v37 + 1) = 0xE700000000000000LL;
  id v19 = v13;
  uint64_t v20 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  id v21 = objc_msgSend(v19, "__swift_objectForKeyedSubscript:", v20);
  swift_unknownObjectRelease(v20);

  if (v21)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v21);
    swift_unknownObjectRelease(v21);
  }

  else
  {
    __int128 v37 = 0u;
    __int128 v38 = 0u;
  }

  sub_1002E29F8((uint64_t)&v37, (uint64_t)&v39);
  if (!*((void *)&v40 + 1)) {
    goto LABEL_27;
  }
  int v22 = swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
  if (v22) {
    id v17 = (const char *)*((void *)&v37 + 1);
  }
  else {
    id v17 = 0LL;
  }
  if (v22) {
    uint64_t v18 = v37;
  }
  else {
    uint64_t v18 = 0LL;
  }
LABEL_28:
  if (!v12)
  {
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    sub_100187100((uint64_t)&v39, (uint64_t *)&unk_100646550);
    __int128 v39 = 0u;
    __int128 v40 = 0u;
    goto LABEL_53;
  }

  *(void *)&__int128 v37 = 0x44497344746C61LL;
  *((void *)&v37 + 1) = 0xE700000000000000LL;
  id v23 = v12;
  uint64_t v24 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  id v25 = objc_msgSend(v23, "__swift_objectForKeyedSubscript:", v24);
  swift_unknownObjectRelease(v24);

  if (v25)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v25);
    swift_unknownObjectRelease(v25);
  }

  else
  {
    __int128 v37 = 0u;
    __int128 v38 = 0u;
  }

  sub_1002E29F8((uint64_t)&v37, (uint64_t)&v39);
  if (*((void *)&v40 + 1))
  {
    if ((swift_dynamicCast(&v37, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
    {
      id v26 = (const char *)*((void *)&v37 + 1);
      if (v17)
      {
        uint64_t v27 = v37;
        goto LABEL_49;
      }

LABEL_56:
      sub_100189B0C(v5, v35);
      swift_bridgeObjectRelease(v26);
      goto LABEL_57;
    }
  }

  else
  {
    sub_100187100((uint64_t)&v39, (uint64_t *)&unk_100646550);
  }

  *(void *)&__int128 v37 = 0x44497344636E65LL;
  *((void *)&v37 + 1) = 0xE700000000000000LL;
  id v28 = v23;
  uint64_t v29 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v37, &type metadata for String);
  id v30 = objc_msgSend(v28, "__swift_objectForKeyedSubscript:", v29);
  swift_unknownObjectRelease(v29);

  if (v30)
  {
    _bridgeAnyObjectToAny(_:)(&v37, v30);
    swift_unknownObjectRelease(v30);
  }

  else
  {
    __int128 v37 = 0u;
    __int128 v38 = 0u;
  }

  sub_1002E29F8((uint64_t)&v37, (uint64_t)&v39);
  if (!*((void *)&v40 + 1))
  {
LABEL_53:
    sub_100187100((uint64_t)&v39, (uint64_t *)&unk_100646550);
    if (v17) {
      goto LABEL_54;
    }
    id v26 = 0LL;
    goto LABEL_56;
  }

  int v31 = swift_dynamicCast(v36, &v39, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
  if (v31) {
    id v26 = (const char *)v36[1];
  }
  else {
    id v26 = 0LL;
  }
  if (v31) {
    uint64_t v27 = v36[0];
  }
  else {
    uint64_t v27 = 0LL;
  }
  if (!v17) {
    goto LABEL_56;
  }
LABEL_49:
  if (!v26)
  {
LABEL_54:
    sub_100189B0C(v5, v35);
    swift_bridgeObjectRelease(v17);
    goto LABEL_57;
  }

  if (v18 == v27 && v17 == v26) {
    char v32 = 1;
  }
  else {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v17, v27, v26, 0LL);
  }
  sub_100189B0C(v5, v35);
  *(void *)&double v34 = swift_bridgeObjectRelease(v17).n128_u64[0];
  swift_bridgeObjectRelease(v26, v34);

  return v32 & 1;
}

  swift_release(v19);
  uint64_t v73 = v90;
  id v74 = swift_retain_n(v90, 2LL);
  char v75 = (os_log_s *)Logger.logObject.getter(v74);
  unint64_t v76 = static os_log_type_t.default.getter(v75);
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v78 = swift_slowAlloc(32LL, -1LL);
    uint64_t v106 = v78;
    *(_DWORD *)uint64_t v77 = 136315138;
    *(void *)&uint64_t v79 = swift_beginAccess(v93, v107, 0LL, 0LL).n128_u64[0];
    uint64_t v80 = *(const char **)(v73 + 128);
    swift_bridgeObjectRetain(v80, v79);
    uint64_t v82 = Dictionary.description.getter( v81,  &type metadata for String,  &_s12PersonaCacheVN,  &protocol witness table for String);
    uint64_t v84 = v83;
    swift_bridgeObjectRelease(v80);
    uint64_t v105 = sub_10018CDB4(v82, (unint64_t)v84, &v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106, v77 + 4, v77 + 12);
    swift_release_n(v73, 2LL);
    swift_bridgeObjectRelease(v84);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "new cache: %s", v77, 0xCu);
    swift_arrayDestroy(v78, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v78, -1LL, -1LL);
    swift_slowDealloc(v77, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v73, 2LL);
  }

  uint64_t v85 = objc_msgSend(v88, "standardUserDefaults", v87);
  uint64_t v86 = String._bridgeToObjectiveC()();
  [v85 removeObjectForKey:v86];

  return 1LL;
}

              sub_100189B20(v24, v21);
              ((void (*)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))swift_unexpectedError)( v23,  "DaemoniOSLibrary/SDAirDropHashStoreCDB.swift",  44LL,  1LL,  518LL);
              __break(1u);
              JUMPOUT(0x1003C2E94LL);
            }

    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }

  uint64_t v43 = String._bridgeToObjectiveC()();
  uint64_t v45 = (id)SFLocalizedStringForKey(v43, v44);

  if (v45)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v45);
    __int128 v40 = v46;

LABEL_16:
    uint64_t v47 = *(void *)(v0 + 512);
    *(void *)&uint64_t v48 = swift_bridgeObjectRelease(v18, v42).n128_u64[0];
    swift_bridgeObjectRelease(v40, v48);
    *(void *)(v0 + 296) = 0LL;
    *(void *)(v0 + 304) = 0xC000000000000000LL;
    static String.Encoding.utf8.getter(v49);
    uint64_t v50 = sub_100284B00();
    uint64_t v51 = String.init<A>(bytes:encoding:)(v0 + 296, v47, &type metadata for Data, v50);
    if (!v52)
    {
      if (qword_100644408 != -1) {
        swift_once(&qword_100644408, sub_100458568);
      }
      id v68 = type metadata accessor for Logger(0LL);
      uint64_t v69 = sub_100186DE4(v68, (uint64_t)qword_100656748);
      uint64_t v70 = (os_log_s *)Logger.logObject.getter(v69);
      uint64_t v71 = static os_log_type_t.error.getter(v70);
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "Could not decode passcode", v72, 2u);
        swift_slowDealloc(v72, -1LL, -1LL);
      }

      goto LABEL_52;
    }

    id v53 = v51;
    id v54 = v52;
    char v55 = *aBlock;
    if ((*aBlock > 7 || ((1LL << v55) & 0xC4) == 0) && v55 < 9)
    {
      uint64_t v92 = *(void *)(v0 + 496);
      __n128 v139 = *(void *)(v0 + 504);
      uint64_t v93 = *(void *)(v0 + 488);
      uint64_t v138 = *(void *)(v0 + 480);
      uint64_t v140 = *(void *)(v0 + 472);
      queuea = *(dispatch_queue_t *)(v0 + 464);
      aBlocka = *(void **)(v0 + 456);
      uint64_t v149 = *(void *)(v0 + 440);
      uint64_t v141 = *(void *)(v0 + 448);
      v144 = *(void *)(v0 + 432);
      uint64_t v156 = *(void **)(v0 + 416);
      os_log_type_t v94 = *(void *)(v0 + 392);
      (*(void (**)(void))(v93 + 16))();
      sub_10019A6C4(v94, v0 + 112);
      uint64_t v95 = *(unsigned __int8 *)(v93 + 80);
      uint64_t v96 = (v95 + 24) & ~v95;
      uint64_t v97 = (v92 + v96 + 7) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v98 = (v97 + 47) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v99 = (v98 + 23) & 0xFFFFFFFFFFFFFFF8LL;
      uint64_t v100 = swift_allocObject(&unk_1005E2EE0, v99 + 8, v95 | 7);
      *(void *)(v100 + swift_weakDestroy(v0 + 16) = v156;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v100 + v96, v139, v138);
      sub_1001CE0D0((__int128 *)(v0 + 112), v100 + v97);
      unsigned int v101 = (uint64_t *)(v100 + v98);
      void *v101 = v53;
      v101[1] = (uint64_t)v54;
      *(void *)(v100 + v99) = v55;
      *(void *)(v0 + 96) = sub_100488974;
      *(void *)(v0 + 104) = v100;
      *(void *)(v0 + 64) = _NSConcreteStackBlock;
      *(void *)(v0 + 72) = 1107296256LL;
      *(void *)(v0 + 80) = sub_1001B9FE4;
      *(void *)(v0 + 88) = &unk_1005E2EF8;
      uint64_t v102 = _Block_copy((const void *)(v0 + 64));
      static DispatchQoS.unspecified.getter(v156);
      *(void *)(v0 + 328) = _swiftEmptyArrayStorage;
      uint64_t v103 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      __n128 v104 = sub_100183098((uint64_t *)&unk_1006460D0);
      uint64_t v105 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 328, v104, v105, v144, v103);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v140, v141, v102);
      _Block_release(v102);
      (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v141, v144);
      (*((void (**)(uint64_t, void *))queuea + 1))(v140, aBlocka);
      uint64_t v91 = *(void *)(v0 + 104);
LABEL_35:
      swift_release(v91);
LABEL_52:
      uint64_t v135 = *(void *)(v0 + 504);
      uint64_t v136 = *(void *)(v0 + 472);
      uint64_t v137 = *(void *)(v0 + 448);
      swift_task_dealloc(*(void *)(v0 + 512));
      swift_task_dealloc(v135);
      swift_task_dealloc(v136);
      swift_task_dealloc(v137);
      (*(void (**)(void))(v0 + 8))();
      return;
    }

    uint64_t v155 = (void *)(v0 + 232);
    swift_bridgeObjectRelease(v52);
    unint64_t v56 = [objc_allocWithZone(SFAuthenticationOptions) init];
    *(void *)(v0 + 520) = v56;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v56 setAuthorizationToken:isa];

    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    id v58 = *(void *)(v0 + 408);
    uint64_t v59 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v59, (uint64_t)qword_100656748);
    swift_bridgeObjectRetain_n(v58, 2LL);
    unint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
    uint64_t v62 = static os_log_type_t.default.getter(v61);
    id v63 = os_log_type_enabled(v61, v62);
    uint64_t v64 = *(const char **)(v0 + 408);
    uint64_t v148 = v56;
    if (v63)
    {
      uint64_t v65 = *(void *)(v0 + 400);
      uint64_t v66 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v67 = swift_slowAlloc(32LL, -1LL);
      uint64_t v157 = v67;
      *(_DWORD *)uint64_t v66 = 136315138;
      swift_bridgeObjectRetain(v64);
      *(void *)(v0 + 312) = sub_10018CDB4(v65, (unint64_t)v64, &v157);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 312, v0 + 320, v66 + 4, v66 + 12);
      swift_bridgeObjectRelease_n(v64, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Got passcode, starting executor for sessionID %s", v66, 0xCu);
      swift_arrayDestroy(v67, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1LL, -1LL);
      swift_slowDealloc(v66, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v64, 2LL);
    }

    uint64_t v73 = *(void *)(v0 + 496);
    id v74 = *(void *)(v0 + 480);
    char v75 = *(void *)(v0 + 488);
    uint64_t v143 = *(char **)(v0 + 416);
    uint64_t v145 = *(void *)(v0 + 504);
    unint64_t v76 = *(void *)(v0 + 392);
    uint64_t v146 = *(void *)(v0 + 384);
    *(_OWORD *)uint64_t v155 = 0u;
    *(_OWORD *)(v0 + 248) = 0u;
    *(void *)(v0 + 264) = 0LL;
    queue = *(dispatch_queue_s **)&v143[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
    (*(void (**)(void))(v75 + 16))();
    sub_10019A6C4(v76, v0 + 192);
    uint64_t v77 = *(unsigned __int8 *)(v75 + 80);
    uint64_t v78 = (v77 + 32) & ~v77;
    uint64_t v79 = (v73 + v78 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v80 = (v79 + 47) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v81 = (char *)((v80 + 15) & 0xFFFFFFFFFFFFFFF8LL);
    uint64_t v82 = swift_allocObject(&unk_1005E2F30, v81 + 8, v77 | 7);
    *(void *)(v0 + 528) = v82;
    *(void *)(v82 + swift_weakDestroy(v0 + 16) = v155;
    *(void *)(v82 + 24) = v143;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 32))(v82 + v78, v145, v74);
    sub_1001CE0D0((__int128 *)(v0 + 192), v82 + v79);
    *(void *)(v82 + v80) = v146;
    *(void *)&v81[v82] = v148;
    uint64_t v83 = swift_allocObject(&unk_1005E2F58, 32LL, 7LL);
    *(void *)(v83 + swift_weakDestroy(v0 + 16) = sub_100488A7C;
    *(void *)(v83 + 24) = v82;
    *(void *)(v0 + 48) = sub_1003D39DC;
    *(void *)(v0 + 56) = v83;
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256LL;
    *(void *)(v0 + 32) = sub_100458548;
    *(void *)(v0 + 40) = &unk_1005E2F70;
    uint64_t v84 = _Block_copy((const void *)(v0 + 16));
    uint64_t v85 = *(void *)(v0 + 56);
    uint64_t v86 = v143;
    uint64_t v87 = v148;
    swift_retain();
    swift_release(v85);
    dispatch_sync(queue, v84);
    _Block_release(v84);
    LOBYTE(v79) = swift_isEscapingClosureAtFileLocation(v83, "", 94LL, 1384LL, 19LL, 1LL);
    swift_release(v83);
    if ((v79 & 1) == 0)
    {
      uint64_t v88 = *(void *)(v0 + 256);
      if (v88)
      {
        sub_10019A708(v155, v88);
        *(_OWORD *)(v0 + 168) = 0u;
        *(void *)(v0 + 184) = 0LL;
        *(_OWORD *)(v0 + 152) = 0u;
        uint64_t v89 = (void *)swift_task_alloc(dword_10064FE74);
        *(void *)(v0 + 536) = v89;
        *uint64_t v89 = v0;
        v89[1] = sub_10046CF10;
        sub_100344650(v0 + 152);
        return;
      }

      uint64_t v90 = *(void *)(v0 + 528);
      sub_100187100((uint64_t)v155, &qword_10064DAE0);
      uint64_t v91 = v90;
      goto LABEL_35;
    }

    __break(1u);
    swift_once(&qword_100644408, sub_100458568);
    uint64_t v106 = v0 + 352;
    uint64_t v107 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v107, (uint64_t)qword_100656748);
    uint64_t v108 = v81;
    swift_errorRetain(v155);
    uint64_t v109 = v108;
    uint64_t v110 = swift_errorRetain(v155);
    uint64_t v111 = (os_log_s *)Logger.logObject.getter(v110);
    uint64_t v112 = static os_log_type_t.default.getter(v111);
    if (os_log_type_enabled(v111, v112))
    {
      uint64_t v147 = (char **)(v0 + 368);
      uint64_t v113 = v81;
      os_log_type_t v114 = swift_slowAlloc(22LL, -1LL);
      uint64_t v115 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)os_log_type_t v114 = 138412546;
      swift_errorRetain(v155);
      uint64_t v116 = _swift_stdlib_bridgeErrorToNSError(v155);
      *(void *)(v0 + 352) = v116;
      uint64_t v142 = (void *)(v0 + 360);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 352, v0 + 360, v114 + 4, v114 + 12);
      *uint64_t v115 = v116;
      swift_errorRelease(v155);
      swift_errorRelease(v155);
      *(_WORD *)(v114 + 12) = 2112;
      if (v113)
      {
        *uint64_t v147 = v109;
        unint64_t v117 = v109;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v147, queue, v114 + 14, v114 + 22);
      }

      else
      {
        *uint64_t v142 = 0LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v142, v147, v114 + 14, v114 + 22);
      }

      v115[1] = (uint64_t)v113;

      _os_log_impl( (void *)&_mh_execute_header,  v111,  v112,  "Reporting error %@ to remote device as %@",  (uint8_t *)v114,  0x16u);
      uint64_t v118 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v115, 2LL, v118);
      swift_slowDealloc(v115, -1LL, -1LL);
      swift_slowDealloc(v114, -1LL, -1LL);
      uint64_t v81 = v113;
      uint64_t v106 = v0 + 352;

      if (!v113) {
        goto LABEL_45;
      }
    }

    else
    {
      swift_errorRelease(v155);
      swift_errorRelease(v155);

      if (!v81) {
        goto LABEL_45;
      }
    }

    uint64_t v119 = [v109 data];
    if (v119)
    {
      uint64_t v120 = v119;
      os_log_type_t v121 = *(void *)(v0 + 392);
      unint64_t v122 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v119);
      uint64_t v124 = v123;

      sub_1004641AC(v122, v124, v121, 4LL, 5uLL);
      swift_errorRelease(v155);
      sub_100189B20(v122, v124);
      goto LABEL_52;
    }

uint64_t sub_1002E1CBC()
{
  SecTrustRef v0 = sub_100411988();
  if (v0)
  {
    uint64_t v1 = v0;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v3 = sub_100035F84(isa, v1, 0LL);

    if (v3)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      id v6 = v5;

      if (qword_100644130 != -1) {
        swift_once(&qword_100644130, sub_1002E09E4);
      }
      uint64_t v7 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v7, (uint64_t)qword_10064D780);
      uint64_t v8 = swift_bridgeObjectRetain(v6);
      id v9 = (os_log_s *)Logger.logObject.getter(v8);
      os_log_type_t v10 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v9, v10))
      {
        unsigned __int8 v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v12 = swift_slowAlloc(32LL, -1LL);
        uint64_t v15 = v12;
        *(_DWORD *)unsigned __int8 v11 = 136315138;
        swift_bridgeObjectRetain(v6);
        uint64_t v14 = sub_10018CDB4(v4, (unint64_t)v6, &v15);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v11 + 4, v11 + 12);
        swift_bridgeObjectRelease_n(v6, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Confirmed Bonjour Sender: %s", v11, 0xCu);
        swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1LL, -1LL);
        swift_slowDealloc(v11, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(v6, 2LL);
      }

      LOBYTE(v3) = sub_1002E1ED4(v1);
    }
  }

  else
  {
    LOBYTE(v3) = 0;
  }

  return v3 & 1;
}

uint64_t sub_1002E1ED4(__SecTrust *a1)
{
  id v2 = sub_100035290(a1);
  if (!v2) {
    goto LABEL_36;
  }
  id v3 = v2;
  uint64_t v27 = 0LL;
  type metadata accessor for SecCertificate(0LL);
  static Array._conditionallyBridgeFromObjectiveC(_:result:)(v3, &v27, v4);

  uint64_t v5 = v27;
  if (!v27)
  {
LABEL_32:
    char v22 = 0;
    return v22 & 1;
  }

  if (!((unint64_t)v27 >> 62))
  {
    uint64_t v6 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain((const char *)v27);
    if (v6) {
      goto LABEL_5;
    }
LABEL_31:
    swift_bridgeObjectRelease_n(v5, 2LL);
    goto LABEL_32;
  }

  if (v27 >= 0) {
    unint64_t v24 = v27 & 0xFFFFFFFFFFFFFF8LL;
  }
  else {
    unint64_t v24 = v27;
  }
  swift_bridgeObjectRetain((const char *)v27);
  if (!_CocoaArrayWrapper.endIndex.getter(v24)) {
    goto LABEL_31;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001LL) == 0)
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8LL) + 0x10))
    {
      id v7 = *(id *)(v5 + 32);
      goto LABEL_8;
    }

    __break(1u);
LABEL_36:
    __break(1u);
  }

  id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v5);
LABEL_8:
  uint64_t v8 = v7;
  swift_bridgeObjectRelease((const char *)v5);
  int v26 = 0;
  id v9 = (const char *)sub_1002DE6D4(v5);
  swift_bridgeObjectRelease((const char *)v5);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  LODWORD(v9) = SFAppleIDVerifyCertificateChainSync(isa, &v26);

  if (!(_DWORD)v9 || v26) {
    goto LABEL_12;
  }
  unsigned __int8 v11 = (char *)[objc_allocWithZone(NSString) init];
  uint64_t v27 = (uint64_t)v11;
  int v12 = SFAppleIDCommonNameForCertificate(v8, &v27);
  id v13 = (char *)(id)v27;

  if (v12) {
    goto LABEL_11;
  }
  if (!v13) {
    goto LABEL_12;
  }
  uint64_t v27 = 0LL;
  id v28 = 0LL;
  id v13 = v13;
  static String._conditionallyBridgeFromObjectiveC(_:result:)(v13, &v27);

  uint64_t v14 = v28;
  if (!v28)
  {
LABEL_11:

LABEL_12:
    goto LABEL_32;
  }

  uint64_t v15 = v27;
  id v16 = [v1 myAppleIDCommonName];
  if (!v16)
  {

LABEL_24:
    swift_bridgeObjectRelease(v14, v23);
    goto LABEL_12;
  }

  id v17 = v16;
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  uint64_t v20 = v19;

  uint64_t v21 = ((unint64_t)v20 >> 56) & 0xF;
  if (!v21)
  {

    *(void *)&double v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
    goto LABEL_24;
  }

  if (v18 == v15 && v14 == v20) {
    char v22 = 1;
  }
  else {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v15, v14, 0LL);
  }
  swift_bridgeObjectRelease(v20);

  swift_bridgeObjectRelease(v14);
  return v22 & 1;
}

void sub_1002E217C(uint64_t a1, uint64_t a2, __SecTrust *a3)
{
  uint64_t v4 = v3;
  sub_1002E1484(a3, v34);
  uint64_t v5 = v34[0];
  uint64_t v6 = v35;
  *(void *)&double v7 = swift_bridgeObjectRelease(v37).n128_u64[0];
  swift_bridgeObjectRelease(v6, v7);
  if ((v5 & 0xC000000000000001LL) != 0)
  {
    if (v5 < 0) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v10 = __CocoaSet.makeIterator()(v9);
    uint64_t v11 = sub_100183168(0LL, (unint64_t *)&qword_100646C30, &OBJC_CLASS___CNContact_ptr);
    unint64_t v12 = sub_1002E28C8();
    uint64_t v8 = Set.Iterator.init(_cocoa:)(v34, v10, v11, v12);
    uint64_t v5 = v34[0];
    uint64_t v31 = v34[1];
    uint64_t v13 = (uint64_t)v35;
    uint64_t v14 = v36;
    unint64_t v15 = (unint64_t)v37;
  }

  else
  {
    uint64_t v14 = 0LL;
    uint64_t v16 = -1LL << *(_BYTE *)(v5 + 32);
    uint64_t v31 = v5 + 56;
    uint64_t v13 = ~v16;
    uint64_t v17 = -v16;
    if (v17 < 64) {
      uint64_t v18 = ~(-1LL << v17);
    }
    else {
      uint64_t v18 = -1LL;
    }
    unint64_t v15 = v18 & *(void *)(v5 + 56);
  }

  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  while (1)
  {
    uint64_t v23 = v14;
    if ((v5 & 0x8000000000000000LL) == 0) {
      break;
    }
    uint64_t v27 = __CocoaSet.Iterator.next()(v8);
    if (!v27) {
      goto LABEL_32;
    }
    uint64_t v28 = v27;
    uint64_t v32 = v27;
    uint64_t v29 = sub_100183168(0LL, (unint64_t *)&qword_100646C30, &OBJC_CLASS___CNContact_ptr);
    swift_unknownObjectRetain(v28);
    swift_dynamicCast(&v33, &v32, (char *)&type metadata for Swift.AnyObject + 8, v29, 7LL);
    id v21 = v33;
    swift_unknownObjectRelease(v28);
    if (!v21) {
      goto LABEL_32;
    }
LABEL_13:
    unsigned int v22 = [v4 contactIsBlocked:v21];

    if (v22) {
      goto LABEL_32;
    }
  }

  if (v15)
  {
    unint64_t v19 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v20 = v19 | (v14 << 6);
LABEL_12:
    id v21 = *(id *)(*(void *)(v5 + 48) + 8 * v20);
    if (!v21) {
      goto LABEL_32;
    }
    goto LABEL_13;
  }

  int64_t v24 = v14 + 1;
  if (!__OFADD__(v14, 1LL))
  {
    if (v24 >= v30) {
      goto LABEL_32;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v14;
    if (!v25)
    {
      uint64_t v14 = v23 + 2;
      if (v23 + 2 >= v30) {
        goto LABEL_32;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v14);
      if (!v25)
      {
        uint64_t v14 = v23 + 3;
        if (v23 + 3 >= v30) {
          goto LABEL_32;
        }
        unint64_t v25 = *(void *)(v31 + 8 * v14);
        if (!v25)
        {
          uint64_t v14 = v23 + 4;
          if (v23 + 4 >= v30) {
            goto LABEL_32;
          }
          unint64_t v25 = *(void *)(v31 + 8 * v14);
          if (!v25)
          {
            uint64_t v26 = v23 + 5;
            while (v30 != v26)
            {
              unint64_t v25 = *(void *)(v31 + 8 * v26++);
              if (v25)
              {
                uint64_t v14 = v26 - 1;
                goto LABEL_29;
              }
            }

unint64_t destroy for SDAirDropAppleIDState(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

uint64_t _s16DaemoniOSLibrary21SDAirDropAppleIDStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }

  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain(v3);
  }

  return a1;
}

void *assignWithCopy for SDAirDropAppleIDState(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      uint64_t v7 = a2[1];
      a1[1] = v7;
      swift_bridgeObjectRetain(v7);
      return a1;
    }

uint64_t assignWithTake for SDAirDropAppleIDState(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease(v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }

  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAirDropAppleIDState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for SDAirDropAppleIDState( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0LL;
    *(void *)(result + 8) = 0LL;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }

  return result;
}

uint64_t sub_1002E26B0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1002E26C8(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0LL;
  }

  else if (a2)
  {
    result[1] = (a2 - 1);
  }

  return result;
}

ValueMetadata *type metadata accessor for SDAirDropAppleIDState()
{
  return &type metadata for SDAirDropAppleIDState;
}

uint64_t sub_1002E26F8(uint64_t a1, uint64_t a2)
{
  return sub_1002E2920(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_1002E270C(uint64_t a1, uint64_t a2)
{
  return sub_1002E090C(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_1002E2720(uint64_t a1, uint64_t a2)
{
  return sub_1002E2734(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

BOOL sub_1002E2734(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    if (!a4) {
      goto LABEL_15;
    }
    goto LABEL_8;
  }

  if (a2 == 1)
  {
    if (a4 == 1)
    {
LABEL_15:
      char v7 = 0;
      return (v7 & 1) == 0;
    }

    goto LABEL_8;
  }

  if (a4 < 2)
  {
LABEL_8:
    BOOL v6 = a2 == 0;
    if (a4 != 1) {
      BOOL v6 = a2 < 2;
    }
    if (a4) {
      char v7 = v6;
    }
    else {
      char v7 = 0;
    }
    return (v7 & 1) == 0;
  }

  if (a1 == a3 && a2 == a4) {
    goto LABEL_15;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
  char v7 = 0;
  if ((v11 & 1) == 0) {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 1LL);
  }
  return (v7 & 1) == 0;
}

uint64_t sub_1002E280C(uint64_t a1, uint64_t a2)
{
  return sub_1002DF110(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_1002E2820(uint64_t *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  if (!v3) {
    return !v4;
  }
  if (v3 == 1) {
    return v4 == 1;
  }
  if (v4 < 2) {
    return 0LL;
  }
  uint64_t v6 = *a1;
  if (v6 != *a2 || v3 != v4) {
    return _stringCompareWithSmolCheck(_:_:expecting:)(v6, v3, *a2, v4, 0LL);
  }
  return 1LL;
}

unint64_t sub_1002E2884()
{
  unint64_t result = qword_10064D798;
  if (!qword_10064D798)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D45A8, &type metadata for SDAirDropAppleIDState);
    atomic_store(result, (unint64_t *)&qword_10064D798);
  }

  return result;
}

unint64_t sub_1002E28C8()
{
  unint64_t result = qword_100645370;
  if (!qword_100645370)
  {
    uint64_t v1 = sub_100183168(255LL, (unint64_t *)&qword_100646C30, &OBJC_CLASS___CNContact_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100645370);
  }

  return result;
}

uint64_t sub_1002E2920(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2)
  {
    if (!a4) {
      return 0LL;
    }
    goto LABEL_8;
  }

  if (a2 == 1)
  {
    if (a4 == 1) {
      return 0LL;
    }
    goto LABEL_8;
  }

  if (a4 < 2)
  {
LABEL_8:
    BOOL v6 = a2 == 0;
    if (a4 != 1) {
      BOOL v6 = a2 < 2;
    }
    return a4 && v6;
  }

  if (a1 == a3 && a2 == a4) {
    return 0LL;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0LL);
  uint64_t result = 0LL;
  if ((v10 & 1) == 0) {
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 1LL);
  }
  return result;
}

uint64_t sub_1002E29F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100646550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1002E2A40(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v10);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1LL, v7))
    {
      uint64_t v9 = sub_100183098((uint64_t *)&unk_100647610);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    unint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = (const char *)v13[1];
    *unint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    unint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    swift_bridgeObjectRetain(v14);
    if (v18 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v16 = *v17;
    }

    else
    {
      uint64_t v19 = *(void *)v17;
      sub_10019BA8C(v19, v18);
      *(void *)uint64_t v16 = v19;
      *((void *)v16 + 1) = v18;
    }

    uint64_t v20 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    id v21 = (uint64_t *)((char *)a1 + v20);
    unsigned int v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = (const char *)v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    unint64_t v25 = (uint64_t *)((char *)a1 + v24);
    uint64_t v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = (const char *)v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    *(void *)&double v28 = swift_bridgeObjectRetain(v23).n128_u64[0];
    swift_bridgeObjectRetain(v27, v28);
  }

  return a1;
}

__n128 sub_1002E2BB4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  swift_bridgeObjectRelease(*(const char **)(a1 + a2[6] + 8));
  BOOL v6 = (uint64_t *)(a1 + a2[7]);
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15) {
    sub_100189B20(*v6, v7);
  }
  *(void *)&double v8 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[9] + 8)).n128_u64[0];
  return swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[10] + 8), v8);
}

char *sub_1002E2C60(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
  {
    uint64_t v8 = sub_100183098((uint64_t *)&unk_100647610);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  unint64_t v12 = (const char *)*((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  unint64_t v16 = *(void *)&a2[v13 + 8];
  swift_bridgeObjectRetain(v12);
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }

  else
  {
    uint64_t v17 = *(void *)v15;
    sub_10019BA8C(v17, v16);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
  }

  uint64_t v18 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  id v21 = (const char *)*((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  unint64_t v25 = (const char *)*((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = v25;
  *(void *)&double v26 = swift_bridgeObjectRetain(v21).n128_u64[0];
  swift_bridgeObjectRetain(v25, v26);
  return a1;
}

char *sub_1002E2DA8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098((uint64_t *)&unk_100647610);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  uint64_t v15 = (const char *)*((void *)v14 + 1);
  unint64_t v16 = (const char *)*((void *)v13 + 1);
  *((void *)v13 + 1) = v15;
  *(void *)&double v17 = swift_bridgeObjectRetain(v15).n128_u64[0];
  swift_bridgeObjectRelease(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t *)&a1[v18];
  uint64_t v20 = (uint64_t *)&a2[v18];
  unint64_t v21 = *(void *)&a2[v18 + 8];
  if (*(void *)&a1[v18 + 8] >> 60 != 15LL)
  {
    if (v21 >> 60 != 15)
    {
      uint64_t v23 = *v20;
      sub_10019BA8C(v23, v21);
      uint64_t v24 = *v19;
      unint64_t v25 = v19[1];
      *uint64_t v19 = v23;
      v19[1] = v21;
      sub_100189B20(v24, v25);
      goto LABEL_14;
    }

    sub_10019DC8C((uint64_t)v19);
    goto LABEL_12;
  }

  if (v21 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    goto LABEL_14;
  }

  uint64_t v22 = *v20;
  sub_10019BA8C(v22, v21);
  *uint64_t v19 = v22;
  v19[1] = v21;
LABEL_14:
  a1[a3[8]] = a2[a3[8]];
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  double v28 = &a2[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  uint64_t v29 = (const char *)*((void *)v28 + 1);
  int64_t v30 = (const char *)*((void *)v27 + 1);
  *((void *)v27 + 1) = v29;
  *(void *)&double v31 = swift_bridgeObjectRetain(v29).n128_u64[0];
  *(void *)&double v32 = swift_bridgeObjectRelease(v30, v31).n128_u64[0];
  uint64_t v33 = a3[10];
  double v34 = &a1[v33];
  unint64_t v35 = &a2[v33];
  *(void *)double v34 = *(void *)v35;
  uint64_t v36 = (const char *)*((void *)v35 + 1);
  __int128 v37 = (const char *)*((void *)v34 + 1);
  *((void *)v34 + 1) = v36;
  *(void *)&double v38 = swift_bridgeObjectRetain(v36, v32).n128_u64[0];
  swift_bridgeObjectRelease(v37, v38);
  return a1;
}

char *sub_1002E2FC0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1LL, v6))
  {
    uint64_t v8 = sub_100183098((uint64_t *)&unk_100647610);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v10 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  a1[v10] = a2[v10];
  uint64_t v11 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_1002E30AC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098((uint64_t *)&unk_100647610);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  double v17 = (const char *)*((void *)v13 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease(v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (uint64_t *)&a1[v18];
  uint64_t v20 = (uint64_t *)&a2[v18];
  unint64_t v21 = *(void *)&a1[v18 + 8];
  if (v21 >> 60 != 15)
  {
    unint64_t v22 = v20[1];
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v19;
      *uint64_t v19 = *v20;
      v19[1] = v22;
      sub_100189B20(v23, v21);
      goto LABEL_12;
    }

    sub_10019DC8C((uint64_t)v19);
  }

  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
LABEL_12:
  uint64_t v24 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  unint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v28 = *(void *)v26;
  uint64_t v27 = *((void *)v26 + 1);
  uint64_t v29 = (const char *)*((void *)v25 + 1);
  *(void *)unint64_t v25 = v28;
  *((void *)v25 + 1) = v27;
  *(void *)&double v30 = swift_bridgeObjectRelease(v29).n128_u64[0];
  uint64_t v31 = a3[10];
  double v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v35 = *(void *)v33;
  uint64_t v34 = *((void *)v33 + 1);
  uint64_t v36 = (const char *)*((void *)v32 + 1);
  *(void *)double v32 = v35;
  *((void *)v32 + 1) = v34;
  swift_bridgeObjectRelease(v36, v30);
  return a1;
}

uint64_t sub_1002E325C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E3268);
}

uint64_t sub_1002E3268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100647610);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_1002E32EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E32F8);
}

uint64_t sub_1002E32F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100183098((uint64_t *)&unk_100647610);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t _s14descr1005D9BD1C13UploadRequestVMa(uint64_t a1)
{
  uint64_t result = qword_10064D878;
  if (!qword_10064D878) {
    return swift_getSingletonMetadata(a1, &_s14descr1005D9BD1C13UploadRequestVMn);
  }
  return result;
}

void sub_1002E33B4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    void v4[2] = &unk_1004D4648;
    void v4[3] = &unk_1004D4660;
    void v4[4] = &unk_1004D4678;
    void v4[5] = &unk_1004D4690;
    void v4[6] = &unk_1004D4690;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
  }

void sub_1002E3454(uint64_t a1)
{
  if (!qword_10064D888)
  {
    uint64_t v2 = type metadata accessor for SFAirDrop.TransferIdentifier(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_10064D888);
    }
  }

void sub_1002E34A8(char *a1)
{
}

void sub_1002E34B4()
{
}

void sub_1002E34C0()
{
  __asm { BR              X10 }

uint64_t sub_1002E3500(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xEA00000000007365LL);
}

void sub_1002E35CC(uint64_t a1)
{
}

unint64_t sub_1002E35D4@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1002E474C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1002E3600()
{
  return ((uint64_t (*)(void))((char *)sub_1002E3634 + 4 * byte_1004D461F[*v0]))();
}

void sub_1002E3634(void *a1@<X8>)
{
  *a1 = 0x7479426C61746F54LL;
  a1[1] = 0xEA00000000007365LL;
}

void sub_1002E3654(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + sub_10018709C(v0 + 14) = -5120;
}

void sub_1002E3678(void *a1@<X8>)
{
  *a1 = 1635017028LL;
  a1[1] = 0xE400000000000000LL;
}

void sub_1002E368C(char *a1@<X8>)
{
  a1[15] = -18;
}

void sub_1002E36B4(void *a1@<X8>)
{
  *a1 = 0x73507265646E6553LL;
  a1[1] = 0xEF6D796E6F647565LL;
}

void sub_1002E36DC(void *a1@<X8>)
{
  *a1 = 0x75507265646E6553LL;
  a1[1] = 0xEF6E656B6F546873LL;
}

uint64_t sub_1002E3704()
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1002E3738 + 4 * byte_1004D4626[*v0]))( 0x726566736E617254LL,  0xEA00000000004449LL);
}

uint64_t sub_1002E3738()
{
  return 0x7479426C61746F54LL;
}

uint64_t sub_1002E3754()
{
  return 0x2D746E65746E6F43LL;
}

uint64_t sub_1002E3774()
{
  return 1635017028LL;
}

uint64_t sub_1002E3784()
{
  return 0x6F4364616F6C7055LL;
}

uint64_t sub_1002E37A8()
{
  return 0x73507265646E6553LL;
}

uint64_t sub_1002E37CC()
{
  return 0x75507265646E6553LL;
}

unint64_t sub_1002E37F0@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1002E474C(a1);
  *a2 = result;
  return result;
}

void sub_1002E3814(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1002E3820(uint64_t a1)
{
  unint64_t v2 = sub_1002E43CC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E3848(uint64_t a1)
{
  unint64_t v2 = sub_1002E43CC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002E3870()
{
  uint64_t v1 = type metadata accessor for ByteCountFormatStyle.Units(0LL);
  uint64_t v39 = *(void *)(v1 - 8);
  uint64_t v40 = v1;
  __chkstk_darwin(v1);
  unint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for ByteCountFormatStyle.Style(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ByteCountFormatStyle(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  uint64_t v42 = v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = 0LL;
  unint64_t v46 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(116LL);
  v12._object = (void *)0x8000000100509D00LL;
  v12._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v12);
  uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v14 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(v0, v13, v14);
  v15._uint64_t countAndFlagsBits = 0x746E65746E6F4320LL;
  v15._object = (void *)0xEE0020657079542DLL;
  String.append(_:)(v15);
  uint64_t v16 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
  double v17 = (uint64_t *)(v0 + v16[6]);
  uint64_t v19 = *v17;
  uint64_t v18 = (void *)v17[1];
  swift_bridgeObjectRetain(v18);
  v20._uint64_t countAndFlagsBits = v19;
  v20._object = v18;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v18);
  v21._uint64_t countAndFlagsBits = 0x426C61746F74202CLL;
  v21._object = (void *)0xEE00203A73657479LL;
  String.append(_:)(v21);
  v44._uint64_t countAndFlagsBits = *(void *)(v0 + v16[5]);
  uint64_t countAndFlagsBits = v44._countAndFlagsBits;
  v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(object);
  v25._uint64_t countAndFlagsBits = 23328LL;
  v25._object = (void *)0xE200000000000000LL;
  String.append(_:)(v25);
  uint64_t v43 = countAndFlagsBits;
  uint64_t v26 = (*(uint64_t (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for ByteCountFormatStyle.Style.file(_:),  v4);
  static ByteCountFormatStyle.Units.all.getter(v26);
  static FormatStyle<>.byteCount(style:allowedUnits:spellsOutZero:includesActualByteCount:)(v7, v3, 1LL, 0LL);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v3, v40);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  unint64_t v27 = sub_1001DFED0();
  uint64_t v28 = sub_100183F14( &qword_10064D8D0,  (uint64_t (*)(uint64_t))&type metadata accessor for ByteCountFormatStyle,  (uint64_t)&protocol conformance descriptor for ByteCountFormatStyle);
  unint64_t v29 = sub_1002E4388();
  uint64_t v30 = v41;
  BinaryInteger.formatted<A>(_:)(&v44, v11, &type metadata for Int, v41, v27, v28, v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v30);
  uint64_t v31 = v44._object;
  String.append(_:)(v44);
  swift_bridgeObjectRelease(v31);
  v32._uint64_t countAndFlagsBits = 0x203A61746164202CLL;
  v32._object = (void *)0xE800000000000000LL;
  String.append(_:)(v32);
  unint64_t v33 = *(void *)(v0 + v16[7] + 8);
  if (v33 >> 60 != 15) {
    __asm { BR              X14 }
  }

  v44._uint64_t countAndFlagsBits = 0LL;
  LOBYTE(v44._object) = 1;
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v44, &type metadata for Int, &protocol witness table for Int);
  v34._object = (void *)0x8000000100509D20LL;
  v34._uint64_t countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v34);
  LOBYTE(v44._countAndFlagsBits) = *(_BYTE *)(v0 + v16[8]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v44, &type metadata for Bool, &protocol witness table for Bool);
  v35._uint64_t countAndFlagsBits = 0x6F6475657370202CLL;
  v35._object = (void *)0xED0000203A6D796ELL;
  String.append(_:)(v35);
  Swift::String v44 = *(Swift::String *)(v0 + v16[9]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v44,  &type metadata for String,  &protocol witness table for String);
  v36._uint64_t countAndFlagsBits = 0x6F5468737570202CLL;
  v36._object = (void *)0xED0000203A6E656BLL;
  String.append(_:)(v36);
  Swift::String v44 = *(Swift::String *)(v0 + v16[10]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v44,  &type metadata for String,  &protocol witness table for String);
  return v45;
}

uint64_t sub_1002E3D04(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064D8F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_1002E43CC();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON,  &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON,  v11,  v9,  v10);
  LOBYTE(v30) = 0;
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v13 = sub_100183F14( &qword_10064D900,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3, &v30, v5, v12, v13);
  if (!v2)
  {
    uint64_t v14 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
    uint64_t v15 = *(void *)(v3 + v14[5]);
    LOBYTE(v30) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v15, &v30, v5);
    uint64_t v16 = (uint64_t *)(v3 + v14[6]);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    LOBYTE(v30) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v17, v18, &v30, v5);
    __int128 v30 = *(_OWORD *)(v3 + v14[7]);
    char v29 = 3;
    unint64_t v19 = sub_10020C2A8();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v30, &v29, v5, &type metadata for Data, v19);
    uint64_t v20 = *(unsigned __int8 *)(v3 + v14[8]);
    LOBYTE(v30) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v20, &v30, v5);
    Swift::String v21 = (uint64_t *)(v3 + v14[9]);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    LOBYTE(v30) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v22, v23, &v30, v5);
    uint64_t v24 = (uint64_t *)(v3 + v14[10]);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    LOBYTE(v30) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25, v26, &v30, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1002E3F58(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100647610);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v35 = sub_100183098(&qword_10064D8E0);
  uint64_t v7 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = a1[3];
  uint64_t v13 = a1[4];
  Swift::String v36 = a1;
  sub_10019A708(a1, v14);
  unint64_t v15 = sub_1002E43CC();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON,  &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON,  v15,  v14,  v13);
  if (v2)
  {
    sub_10018709C(v36);
  }

  else
  {
    uint64_t v33 = v7;
    uint64_t v16 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    LOBYTE(v37) = 0;
    uint64_t v17 = sub_100183F14( &qword_10064D8F0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v18 = v35;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v6, v16, &v37, v35, v16, v17);
    uint64_t v19 = (uint64_t)v12;
    sub_1002E4450((uint64_t)v6, (uint64_t)v12);
    LOBYTE(v37) = 1;
    uint64_t v20 = v10;
    *(void *)(v19 + v10[5]) = KeyedDecodingContainer.decode(_:forKey:)(&v37, v18);
    LOBYTE(v37) = 2;
    uint64_t v21 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v18);
    uint64_t v22 = (uint64_t *)(v19 + v10[6]);
    *uint64_t v22 = v21;
    v22[1] = v23;
    char v38 = 3;
    unint64_t v24 = sub_10020C198();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)( &v37,  &type metadata for Data,  &v38,  v18,  &type metadata for Data,  v24);
    uint64_t v25 = v33;
    *(_OWORD *)(v19 + v10[7]) = v37;
    LOBYTE(v37) = 4;
    *(_BYTE *)(v19 + v10[8]) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v18);
    LOBYTE(v37) = 5;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v18);
    unint64_t v27 = (uint64_t *)(v19 + v10[9]);
    *unint64_t v27 = v26;
    v27[1] = v28;
    LOBYTE(v37) = 6;
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v18);
    uint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v18);
    Swift::String v32 = (uint64_t *)(v19 + v20[10]);
    *Swift::String v32 = v29;
    v32[1] = v31;
    sub_1002E4498(v19, v34);
    sub_10018709C(v36);
    sub_1002E44DC(v19);
  }

void sub_1002E435C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1002E4370(void *a1)
{
  return sub_1002E3D04(a1);
}

unint64_t sub_1002E4388()
{
  unint64_t result = qword_10064D8D8;
  if (!qword_10064D8D8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Int64, &type metadata for Int64);
    atomic_store(result, (unint64_t *)&qword_10064D8D8);
  }

  return result;
}

unint64_t sub_1002E43CC()
{
  unint64_t result = qword_10064D8E8;
  if (!qword_10064D8E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D481C, &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064D8E8);
  }

  return result;
}

uint64_t sub_1002E4410(uint64_t a1)
{
  uint64_t v2 = sub_100183098((uint64_t *)&unk_100647610);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002E4450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100647610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E4498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E44DC(uint64_t a1)
{
  uint64_t v2 = _s14descr1005D9BD1C13UploadRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDAuthenticationTransportType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

uint64_t _s14descr1005D9BD1C13UploadRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_1002E45F4 + 4 * byte_1004D4632[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1002E4628 + 4 * byte_1004D462D[v4]))();
}

uint64_t sub_1002E4628(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E4630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002E4638LL);
  }
  return result;
}

uint64_t sub_1002E4644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002E464CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_1002E4650(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002E4658(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1005D9BD1C13UploadRequestV10CodingKeysOMa()
{
  return &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON;
}

unint64_t sub_1002E4678()
{
  unint64_t result = qword_10064D908;
  if (!qword_10064D908)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D47F4, &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064D908);
  }

  return result;
}

unint64_t sub_1002E46C0()
{
  unint64_t result = qword_10064D910;
  if (!qword_10064D910)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D472C, &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064D910);
  }

  return result;
}

unint64_t sub_1002E4708()
{
  unint64_t result = qword_10064D918;
  if (!qword_10064D918)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4754, &_s14descr1005D9BD1C13UploadRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064D918);
  }

  return result;
}

unint64_t sub_1002E474C(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D1708, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7) {
    return 7LL;
  }
  else {
    return v3;
  }
}

id sub_1002E4794()
{
  id v1 = [*v0 devices];
  if (v1)
  {
    unint64_t v2 = sub_1002E497C();
    unint64_t v3 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

    id v1 = (id)sub_1002DEAD4((uint64_t)v3);
    swift_bridgeObjectRelease(v3);
  }

  return v1;
}

id sub_1002E4800(uint64_t a1, uint64_t a2)
{
  return [*v2 addDelegate:a1 queue:a2];
}

id sub_1002E4818(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5)
{
  return sub_1002E4838(a1, a2, a3, a4, a5);
}

id sub_1002E4838(uint64_t a1, uint64_t a2, uint64_t a3, objc_class *a4, uint64_t a5)
{
  unsigned int v6 = v5;
  Class isa = a4;
  if (a2)
  {
    v11.super.Class isa = Set._bridgeToObjectiveC()().super.isa;
    if (!isa) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  v11.super.Class isa = 0LL;
  if (a4) {
LABEL_3:
  }
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_4:
  id v16 = 0LL;
  unsigned int v12 = [v6 sendProtobuf:a1 toDestinations:v11.super.isa priority:a3 options:isa identifier:a5 error:&v16];

  id v13 = v16;
  if (v12) {
    return v16;
  }
  id v15 = v16;
  _convertNSErrorToError(_:)(v13);

  return (id)swift_willThrow();
}

unint64_t sub_1002E497C()
{
  unint64_t result = qword_10064D810;
  if (!qword_10064D810)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___IDSDevice);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_10064D810);
  }

  return result;
}

uint64_t sub_1002E49B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_10064D96C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100195708;
  void v4[2] = a2;
  return swift_task_switch(sub_1002E4A30, a2, 0LL);
}

uint64_t sub_1002E4A18()
{
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v0;
  return swift_task_switch(sub_1002E4A30, v0, 0LL);
}

uint64_t sub_1002E4A30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 112);
  *(void *)(v0 + 24) = v2;
  if (v2)
  {
    uint64_t v3 = qword_100643F28;
    id v4 = v2;
    if (v3 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v5 = static AirDropActor.shared;
    unsigned int v6 = sub_1002E4AEC;
  }

  else
  {
    *(void *)(v1 + 112) = 0LL;
    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v5 = static AirDropActor.shared;
    unsigned int v6 = sub_1002E4BA0;
  }

  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_1002E4AEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  sub_1002C78B0();

  return swift_task_switch(sub_1002E4B2C, v1, 0LL);
}

uint64_t sub_1002E4B2C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + 112);
  *(void *)(v1 + 112) = 0LL;

  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002E4BA0, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002E4BA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 32) = [objc_allocWithZone((Class)type metadata accessor for SDAirDropService()) init];
  return swift_task_switch(sub_1002E4BF4, v1, 0LL);
}

uint64_t sub_1002E4BF4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v2 + 112);
  *(void *)(v2 + 112) = v1;
  id v4 = v1;

  return swift_task_switch(sub_1002E4C48, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002E4C48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1002C76E0();
  return swift_task_switch(sub_1002E4C88, v1, 0LL);
}

uint64_t sub_1002E4C88()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E4D7C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_1002E4D90, a2, 0LL);
}

uint64_t sub_1002E4D90()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 112LL);
  *(void *)(v0 + 32) = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_1002E4DE4;
  }

  else
  {
    uint64_t v3 = sub_1002E4E48;
  }

  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1002E4DE4()
{
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002E4E64, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002E4E48()
{
  **(_BYTE **)(v0 + swift_weakDestroy(v0 + 16) = *(void *)(v0 + 32) == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002E4E64()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_1002C78B0();

  return swift_task_switch(sub_1002E5100, 0LL, 0LL);
}

id sub_1002E4F6C()
{
  uint64_t v1 = (void *)swift_allocObject(v0, 120LL, 15LL);
  swift_defaultActor_initialize();
  v1[14] = 0LL;
  v3.receiver = v1;
  v3.super_class = v0;
  return objc_msgSendSuper2(&v3, "init");
}

uint64_t sub_1002E5008()
{
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for SDAirDropService_objc()
{
  return objc_opt_self(&OBJC_CLASS___SDAirDropService_objc);
}

uint64_t sub_1002E504C(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc(dword_10064D94C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_1001943E8;
  void v4[2] = a1;
  void v4[3] = v1;
  return swift_task_switch(sub_1002E4D90, v1, 0LL);
}

uint64_t sub_1002E50AC(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc(dword_10064D95C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_100195708;
  return sub_1002E49B8(a1, v1);
}

uint64_t sub_1002E5104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  if (*(void *)(a1 + 24))
  {
    sub_1001CCE4C((__int128 *)a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v10 = *v3;
    *objc_super v3 = 0x8000000000000000LL;
    sub_1003B2830(v11, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v8 = *v3;
    *id v4 = v10;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v8);
  }

  else
  {
    sub_100187100(a1, &qword_10064DA48);
    sub_1001C943C(a2, a3, v11);
    swift_bridgeObjectRelease(a3);
    return sub_100187100((uint64_t)v11, &qword_10064DA48);
  }

uint64_t sub_1002E51D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E58C8( a1,  a2,  a3,  (uint64_t *)&unk_100646110,  (uint64_t (*)(void))&type metadata accessor for SFClientIdentity,  (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1003B2C4C,  (void (*)(uint64_t, uint64_t))sub_1001C9990);
}

uint64_t sub_1002E51FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E5730( a1,  a2,  a3,  &qword_10064DBF0,  type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation,  (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1003B2C60,  (void (*)(uint64_t, uint64_t))sub_1001C99A4);
}

uint64_t sub_1002E5220(uint64_t a1, uint64_t a2)
{
  return sub_1002E5244( a1,  a2,  &qword_100649D48,  (uint64_t (*)(void))&type metadata accessor for SFAirDropReceive.Transfer,  (void (*)(char *, uint64_t, uint64_t))sub_1003B2C88,  (void (*)(uint64_t))sub_1001C99CC);
}

uint64_t sub_1002E5244( uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void), void (*a5)(char *, uint64_t, uint64_t), void (*a6)(uint64_t))
{
  NSSet v11 = v6;
  uint64_t v14 = sub_100183098(a3);
  __chkstk_darwin(v14);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = a4(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v26 - v19;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(a1, 1LL, v17) == 1)
  {
    sub_100187100(a1, a3);
    a6(a2);
    uint64_t v21 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8LL))(a2, v21);
    return sub_100187100((uint64_t)v16, a3);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v20, a1, v17);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    uint64_t v27 = *v11;
    *NSSet v11 = 0x8000000000000000LL;
    a5(v20, a2, isUniquelyReferenced_nonNull_native);
    uint64_t v24 = *v11;
    *NSSet v11 = v27;
    swift_bridgeObjectRelease(v24);
    uint64_t v25 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8LL))(a2, v25);
  }

uint64_t sub_1002E53D8(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v6 = sub_100183098((uint64_t *)&unk_10064DC20);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006463F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned int v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1LL, v9) == 1)
  {
    sub_100187100(a1, (uint64_t *)&unk_10064DC20);
    sub_1001C9BB4(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(a2, v13);
    return sub_100187100((uint64_t)v8, (uint64_t *)&unk_10064DC20);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v19 = *v3;
    *objc_super v3 = (const char *)0x8000000000000000LL;
    sub_1003B3308((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    id v16 = *v3;
    *objc_super v3 = v19;
    swift_bridgeObjectRelease(v16);
    uint64_t v17 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(a2, v17);
  }

uint64_t sub_1002E5568(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  uint64_t v6 = sub_100183098(&qword_10064DAA0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1LL) == 1)
  {
    sub_100187100(a1, &qword_10064DAA0);
    sub_1001C9D24(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(a2, v13);
    return sub_100187100((uint64_t)v8, &qword_10064DAA0);
  }

  else
  {
    sub_1001A4B40(a1, (uint64_t)v11, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    uint64_t v19 = *v3;
    *objc_super v3 = 0x8000000000000000LL;
    sub_1003B34AC((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = *v3;
    *objc_super v3 = v19;
    swift_bridgeObjectRelease(v16);
    uint64_t v17 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(a2, v17);
  }

uint64_t sub_1002E56E8(uint64_t a1, uint64_t a2)
{
  return sub_1002E5244( a1,  a2,  &qword_100647938,  (uint64_t (*)(void))&type metadata accessor for SFAirDropSend.Transfer,  (void (*)(char *, uint64_t, uint64_t))sub_1003B361C,  (void (*)(uint64_t))sub_1001C9E98);
}

uint64_t sub_1002E570C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E5730( a1,  a2,  a3,  &qword_10064D6E8,  type metadata accessor for RegistrationState,  (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1003B363C,  (void (*)(uint64_t, uint64_t))sub_1001CA024);
}

uint64_t sub_1002E5730( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v12 = v7;
  uint64_t v16 = sub_100183098(a4);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = a5(0LL);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v26 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(a1, 1LL) == 1)
  {
    sub_100187100(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease(a3);
    return sub_100187100((uint64_t)v18, a4);
  }

  else
  {
    sub_1001A4B40(a1, (uint64_t)v21, a5);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
    uint64_t v27 = *v12;
    *uint64_t v12 = 0x8000000000000000LL;
    a6(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v25 = *v12;
    *uint64_t v12 = v27;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v25);
  }

uint64_t sub_1002E58A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E58C8( a1,  a2,  a3,  &qword_1006457E8,  (uint64_t (*)(void))&type metadata accessor for Date,  (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1003B3650,  (void (*)(uint64_t, uint64_t))sub_1001CA038);
}

uint64_t sub_1002E58C8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  uint64_t v25 = a6;
  uint64_t v11 = v7;
  uint64_t v15 = sub_100183098(a4);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = a5(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v25 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a1, 1LL, v18) == 1)
  {
    sub_100187100(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease(a3);
    return sub_100187100((uint64_t)v17, a4);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v21, a1, v18);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    uint64_t v26 = *v11;
    *uint64_t v11 = 0x8000000000000000LL;
    v25(v21, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v24 = *v11;
    *uint64_t v11 = v26;
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(v24);
  }

uint64_t sub_1002E5A48(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1001CE0D0((__int128 *)a1, (uint64_t)v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000LL;
    uint64_t v5 = sub_1002499B4((uint64_t)v14, v14[3]);
    __chkstk_darwin(v5);
    uint64_t v7 = (void *)((char *)&v14[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    sub_1002FB0F0(*v7, a2, isUniquelyReferenced_nonNull_native, &v13);
    sub_10018709C(v14);
    uint64_t v9 = *v2;
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease(v9);
    uint64_t v10 = type metadata accessor for UUID(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8LL))(a2, v10);
  }

  else
  {
    sub_100187100(a1, &qword_10064DAE0);
    sub_1001CA188(a2, (uint64_t)v14);
    uint64_t v12 = type metadata accessor for UUID(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8LL))(a2, v12);
    return sub_100187100((uint64_t)v14, &qword_10064DAE0);
  }

__n128 sub_1002E5B90(uint64_t a1, uint64_t a2, const char *a3)
{
  id v4 = v3;
  uint64_t v8 = sub_100183098(&qword_10064DBD8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_10064DB00);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1LL, v11) == 1)
  {
    sub_100187100(a1, &qword_10064DBD8);
    sub_1001CA508(a2, (uint64_t)a3, (uint64_t)v10);
    swift_bridgeObjectRelease(a3);
    sub_100187100((uint64_t)v10, &qword_10064DBD8);
  }

  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    uint64_t v20 = *v4;
    *id v4 = (const char *)0x8000000000000000LL;
    sub_1003B3C64((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v17 = *v4;
    *id v4 = v20;
    *(void *)&double v18 = swift_bridgeObjectRelease(a3).n128_u64[0];
    return swift_bridgeObjectRelease(v17, v18);
  }

  return result;
}

uint64_t sub_1002E5D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E58C8( a1,  a2,  a3,  &qword_10064DB78,  (uint64_t (*)(void))&type metadata accessor for NWBrowser.Result,  (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1003B3F68,  (void (*)(uint64_t, uint64_t))sub_1001CA884);
}

uint64_t sub_1002E5D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002E5730( a1,  a2,  a3,  &qword_100649F58,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1003B3DC4,  (void (*)(uint64_t, uint64_t))sub_1001CA640);
}

__n128 sub_1002E5D50(uint64_t a1, uint64_t a2, Swift::UInt a3)
{
  id v4 = v3;
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    double v18 = *v3;
    *objc_super v3 = (const char *)0x8000000000000000LL;
    sub_1003B4408(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    uint64_t v9 = *v3;
    *objc_super v3 = v18;
    return swift_bridgeObjectRelease(v9);
  }

  else
  {
    unint64_t v11 = sub_1003AD708(a3);
    if ((v12 & 1) != 0)
    {
      unint64_t v13 = v11;
      int v14 = swift_isUniquelyReferenced_nonNull_native(*v3);
      uint64_t v15 = (uint64_t)*v3;
      uint64_t v19 = *v4;
      *id v4 = (const char *)0x8000000000000000LL;
      if (!v14)
      {
        sub_1003B09D4();
        uint64_t v15 = (uint64_t)v19;
      }

      uint64_t v16 = *(const char **)(*(void *)(v15 + 56) + 16 * v13 + 8);
      sub_1001CC9CC(v13, v15);
      uint64_t v17 = *v4;
      *id v4 = (const char *)v15;
      swift_bridgeObjectRelease(v16);
      return swift_bridgeObjectRelease(v17);
    }
  }

  return result;
}

uint64_t sub_1002E5E44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - v7;
  unint64_t v29 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v10 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v27 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v28 = a1;
  uint64_t result = swift_bridgeObjectRetain(a1);
  int64_t v14 = 0LL;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v14 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))( v8,  *(void *)(v28 + 56) + *(void *)(v3 + 72) * v16,  v2);
    uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    uint64_t v21 = NWEndpoint.nw.getter(v20);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v21)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(result);
      unint64_t v23 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v22 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v23 >= v22 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1LL);
      }
      uint64_t v24 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v21);
      uint64_t result = specialized Array._endMutation()(v24);
    }
  }

  int64_t v17 = v14 + 1;
  if (__OFADD__(v14, 1LL))
  {
    __break(1u);
    goto LABEL_28;
  }

  if (v17 >= v27) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v17);
  ++v14;
  if (v18) {
    goto LABEL_21;
  }
  int64_t v14 = v17 + 1;
  if (v17 + 1 >= v27) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v14);
  if (v18) {
    goto LABEL_21;
  }
  int64_t v14 = v17 + 2;
  if (v17 + 2 >= v27) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v14);
  if (v18) {
    goto LABEL_21;
  }
  int64_t v14 = v17 + 3;
  if (v17 + 3 >= v27) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v14);
  if (v18)
  {
LABEL_21:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_22;
  }

  int64_t v19 = v17 + 4;
  if (v19 >= v27)
  {
LABEL_26:
    swift_release(v28);
    return v29;
  }

  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18)
  {
    int64_t v14 = v19;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v14 = v19 + 1;
    if (__OFADD__(v19, 1LL)) {
      break;
    }
    if (v14 >= v27) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v26 + 8 * v14);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }

void sub_1002E60D4(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t v8 = __chkstk_darwin(v28);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v14 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v15 = -1LL;
  if (v14 < 64) {
    uint64_t v15 = ~(-1LL << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v30 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain((const char *)a1, v27);
  int64_t v17 = 0LL;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_1001A4B84( *(void *)(a1 + 48) + *(void *)(v7 + 72) * i,  (uint64_t)v12,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B40((uint64_t)v12, (uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_100211E44(a2, (uint64_t)a3);
    if ((v23 & 1) != 0)
    {
      swift_release(a1);
      uint64_t v24 = (uint64_t)v10;
      uint64_t v25 = v27;
      sub_1001A4B40(v24, v27, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v26 = 0LL;
LABEL_26:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v25, v26, 1LL, v28);
      swift_bridgeObjectRelease(a3);
      return;
    }

    sub_1001A4BC8((uint64_t)v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v20 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v20 >= v30) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v20);
    ++v17;
    if (v21) {
      goto LABEL_20;
    }
    int64_t v17 = v20 + 1;
    if (v20 + 1 >= v30) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (v21) {
      goto LABEL_20;
    }
    int64_t v17 = v20 + 2;
    if (v20 + 2 >= v30) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (v21) {
      goto LABEL_20;
    }
    int64_t v17 = v20 + 3;
    if (v20 + 3 >= v30) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (v21) {
      goto LABEL_20;
    }
    int64_t v22 = v20 + 4;
    if (v22 >= v30)
    {
LABEL_25:
      swift_release(a1);
      uint64_t v26 = 1LL;
      uint64_t v25 = v27;
      goto LABEL_26;
    }

    unint64_t v21 = *(void *)(v29 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v17 = v22 + 1;
        if (__OFADD__(v22, 1LL)) {
          goto LABEL_28;
        }
        if (v17 >= v30) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v29 + 8 * v17);
        ++v22;
        if (v21) {
          goto LABEL_20;
        }
      }
    }

    int64_t v17 = v22;
LABEL_20:
    unint64_t v16 = (v21 - 1) & v21;
  }

  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_1002E6364(uint64_t a1)
{
  v2[29] = a1;
  v2[30] = v1;
  uint64_t v3 = type metadata accessor for UUID(0LL);
  v2[31] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[32] = v4;
  v2[33] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[34] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E63F8, v5, 0LL);
}

uint64_t sub_1002E63F8()
{
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1003AD618(*(void *)(v0 + 232)), (v4 & 1) != 0))
  {
    sub_10019A6C4(*(void *)(v2 + 56) + 40 * v3, v0 + 144);
  }

  else
  {
    *(void *)(v0 + 176) = 0LL;
    *(_OWORD *)(v0 + 144) = 0u;
    *(_OWORD *)(v0 + 160) = 0u;
  }

  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 232);
  swift_endAccess(v0 + 184);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  uint64_t v9 = *(void *)(v0 + 264);
  if (*(void *)(v0 + 168))
  {
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 256) + 8LL))(v9, *(void *)(v0 + 248));
    sub_1001CE0D0((__int128 *)(v0 + 144), v0 + 104);
LABEL_15:
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    uint64_t v25 = *(void *)(v0 + 88);
    uint64_t v26 = *(void *)(v0 + 96);
    sub_10019A708((void *)(v0 + 64), v25);
    uint64_t v27 = *(int **)(v26 + 40);
    int64_t v30 = (uint64_t (*)(uint64_t, uint64_t))((char *)v27 + *v27);
    uint64_t v28 = (void *)swift_task_alloc(v27[1]);
    *(void *)(v0 + 280) = v28;
    void *v28 = v0;
    v28[1] = sub_1002E66C8;
    return v30(v25, v26);
  }

  uint64_t v10 = *(void *)(v0 + 240);
  uint64_t v11 = UUID.uuidString.getter(v9);
  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess( v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered,  v0 + 208,  32LL,  0LL);
  uint64_t v15 = *v14;
  if (*(void *)(v15 + 16) && (uint64_t v16 = sub_1003AD53C(v11, (uint64_t)v13), (v17 & 1) != 0))
  {
    sub_1002499DC(*(void *)(v15 + 56) + 48 * v16, v0 + 16);
  }

  else
  {
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
  }

  swift_bridgeObjectRelease(v13);
  swift_endAccess(v0 + 208);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v20 = *(void *)(v0 + 256);
  uint64_t v19 = *(void *)(v0 + 264);
  uint64_t v21 = *(void *)(v0 + 248);
  if (v18)
  {
    uint64_t v22 = *(void *)(v0 + 48);
    char v23 = sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 128) = v18;
    *(void *)(v0 + 136) = v22;
    uint64_t v24 = sub_1001A4B04((void *)(v0 + 104));
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v24, v23, v18);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_10018709C((void *)(v0 + 16));
  }

  else
  {
    (*(void (**)(void, void))(v20 + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    sub_100187100(v0 + 16, &qword_10064DA48);
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
    *(void *)(v0 + 136) = 0LL;
  }

  sub_100187100(v0 + 144, &qword_10064DBB0);
  if (*(void *)(v0 + 128)) {
    goto LABEL_15;
  }
  sub_100187100(v0 + 104, &qword_10064DBB0);
  swift_task_dealloc(*(void *)(v0 + 264));
  return (*(uint64_t (**)(void *))(v0 + 8))(&_swiftEmptySetSingleton);
}

uint64_t sub_1002E66C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 272LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 280LL);
  *(void *)(*(void *)v1 + 288LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002E6724, v3, 0LL);
}

uint64_t sub_1002E6724()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 264));
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1002E6764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v54 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  char v55 = (char *)v53 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v53 - v12;
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_10064D970);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
  id v58 = (uint8_t *)a1;
  uint64_t v17 = v16(v13, a1, v6);
  v53[1] = v15;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v21 = swift_slowAlloc(32LL, -1LL);
    uint64_t v56 = a2;
    uint64_t v22 = v21;
    v64[0] = v21;
    uint64_t v57 = v3;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v23 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter(v6, v23);
    uint64_t v26 = (const char *)v25;
    *(void *)&__int128 v60 = sub_10018CDB4(v24, v25, v64);
    uint64_t v3 = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, (char *)&v60 + 8, v20 + 4, v20 + 12);
    __n128 v27 = swift_bridgeObjectRelease(v26);
    uint64_t v28 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    v28(v13, v6, v27);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Adding transferring endpointID: %s", v20, 0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v29 = v22;
    a2 = v56;
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
    ((void (*)(char *, uint64_t))v28)(v13, v6);
  }

  int64_t v30 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID,  v63,  32LL,  0LL);
  uint64_t v31 = *v30;
  if (*(void *)(*v30 + 16) && (unint64_t v32 = sub_1003AD618((uint64_t)v58), (v33 & 1) != 0))
  {
    uint64_t v57 = v3;
    sub_10019A6C4(*(void *)(v31 + 56) + 40 * v32, (uint64_t)&v60);
    sub_1001CE0D0(&v60, (uint64_t)v64);
    swift_endAccess(v63);
    uint64_t v34 = sub_10019A6C4((uint64_t)v64, (uint64_t)&v60);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v35, v36))
    {
      __int128 v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      v63[0] = v38;
      *(_DWORD *)__int128 v37 = 136315138;
      id v58 = v37 + 4;
      uint64_t v56 = a2;
      uint64_t v39 = v61;
      uint64_t v40 = v62;
      sub_10019A708(&v60, v61);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 32);
      uint64_t v42 = v40;
      uint64_t v43 = (uint64_t)v55;
      v41(v39, v42);
      uint64_t v44 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v6, v44);
      unint64_t v47 = v46;
      ((void (*)(uint64_t, uint64_t))v28)(v43, v6);
      uint64_t v59 = sub_10018CDB4(v45, v47, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v59, &v60, v58, v37 + 12);
      uint64_t v48 = (const char *)v47;
      a2 = v56;
      swift_bridgeObjectRelease(v48);
      sub_10018709C(&v60);
      _os_log_impl( (void *)&_mh_execute_header,  v35,  v36,  "Adding connectable to transferringConnectables: %s",  v37,  0xCu);
      swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(&v60);

      uint64_t v43 = (uint64_t)v55;
    }

    uint64_t v50 = v65;
    uint64_t v51 = v66;
    sub_10019A708(v64, v65);
    uint64_t v52 = v54;
    (*(void (**)(uint64_t, uint64_t))(v51 + 32))(v50, v51);
    swift_beginAccess( v57 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,  &v60,  33LL,  0LL);
    sub_1003B54D0(v43, v52);
    swift_endAccess(&v60);
    ((void (*)(uint64_t, uint64_t))v28)(v43, v6);
    sub_10019A6C4((uint64_t)v64, a2);
    return sub_10018709C(v64);
  }

  else
  {
    uint64_t result = swift_endAccess(v63);
    *(void *)(a2 + 32) = 0LL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = 0u;
  }

  return result;
}

uint64_t sub_1002E6C64(uint64_t a1)
{
  v2[40] = a1;
  v2[41] = v1;
  uint64_t v3 = sub_100183098(&qword_10064DA60);
  v2[42] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v2[43] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[44] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[45] = swift_task_alloc(v6);
  v2[46] = swift_task_alloc(v6);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v2[47] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E6D2C, v7, 0LL);
}

uint64_t sub_1002E6D2C()
{
  uint64_t v1 = v0 + 280;
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v6 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v6, (uint64_t)qword_10064D970);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void *)(v0 + 368);
  uint64_t v13 = *(void *)(v0 + 344);
  uint64_t v12 = *(void *)(v0 + 352);
  if (v10)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v55 = swift_slowAlloc(32LL, -1LL);
    uint64_t v60 = v55;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v15 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter(v13, v15);
    unint64_t v18 = v17;
    *(void *)(v0 + 312) = sub_10018CDB4(v16, v17, &v60);
    os_log_type_t v19 = (uint64_t *)(v0 + 320);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 312, v0 + 320, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v18);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Removing transferring endpointID: %s", v14, 0xCu);
    swift_arrayDestroy(v55, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1LL, -1LL);
    uint64_t v21 = v14;
    uint64_t v1 = v0 + 280;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v20(v11, v13);

    os_log_type_t v19 = (uint64_t *)(v0 + 320);
  }

  swift_beginAccess(v22, v1, 32LL, 0LL);
  uint64_t v23 = *v22;
  if (*(void *)(v23 + 16) && (unint64_t v24 = sub_1003AD618(*v19), (v25 & 1) != 0))
  {
    id v58 = v20;
    sub_10019A6C4(*(void *)(v23 + 56) + 40 * v24, v0 + 104);
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
    swift_endAccess(v1);
    uint64_t v57 = (void *)(v0 + 64);
    uint64_t v26 = sub_10019A6C4(v0 + 64, v0 + 144);
    __n128 v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = *(void *)(v0 + 360);
      uint64_t v54 = *(void *)(v0 + 344);
      int64_t v30 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      uint64_t v60 = v56;
      *(_DWORD *)int64_t v30 = 136315138;
      uint64_t v32 = *(void *)(v0 + 168);
      uint64_t v31 = *(void *)(v0 + 176);
      sub_10019A708((void *)(v0 + 144), v32);
      (*(void (**)(uint64_t, uint64_t))(v31 + 32))(v32, v31);
      uint64_t v33 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v54, v33);
      unint64_t v36 = v35;
      v58(v29, v54);
      *(void *)(v0 + 304) = sub_10018CDB4(v34, v36, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 304, v0 + 312, v30 + 4, v30 + 12);
      swift_bridgeObjectRelease(v36);
      sub_10018709C((void *)(v0 + 144));
      _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "Removing connectable from transferringConnectables: %s",  v30,  0xCu);
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    else
    {
      sub_10018709C((void *)(v0 + 144));
    }

    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v43 = *(void *)(v0 + 336);
    uint64_t v42 = *(void *)(v0 + 344);
    uint64_t v44 = *(void *)(v0 + 328);
    uint64_t v45 = *(void *)(v0 + 88);
    uint64_t v46 = *(void *)(v0 + 96);
    sub_10019A708(v57, v45);
    (*(void (**)(uint64_t, uint64_t))(v46 + 32))(v45, v46);
    swift_beginAccess( v44 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,  v0 + 184,  33LL,  0LL);
    sub_1003BD9C8(v41, v43);
    swift_endAccess(v0 + 184);
    v58(v41, v42);
    sub_100187100(v43, &qword_10064DA60);
    uint64_t v47 = *(void *)(v0 + 88);
    uint64_t v48 = *(void *)(v0 + 96);
    sub_10019A708(v57, v47);
    (*(void (**)(uint64_t, uint64_t))(v48 + 32))(v47, v48);
    swift_beginAccess( v44 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID,  v0 + 208,  33LL,  0LL);
    uint64_t v49 = sub_1001C9E8C(v41);
    v58(v41, v42);
    swift_endAccess(v0 + 208);
    swift_unknownObjectRelease(v49);
    uint64_t v50 = *(void *)(v0 + 88);
    uint64_t v51 = *(void *)(v0 + 96);
    sub_10019A708(v57, v50);
    uint64_t v52 = *(int **)(v51 + 40);
    uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t))((char *)v52 + *v52);
    id v53 = (void *)swift_task_alloc(v52[1]);
    *(void *)(v0 + 384) = v53;
    *id v53 = v0;
    v53[1] = sub_1002E7304;
    return v59(v50, v51);
  }

  else
  {
    swift_endAccess(v1);
    uint64_t v38 = *(void *)(v0 + 360);
    uint64_t v37 = *(void *)(v0 + 368);
    uint64_t v39 = *(void *)(v0 + 336);
    sub_1002E8668();
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002E7304(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 376LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 384LL);
  *(void *)(*(void *)v1 + 392LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002E7360, v3, 0LL);
}

uint64_t sub_1002E7360()
{
  uint64_t v1 = (void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 392);
  uint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease(v2);
  if (!v3)
  {
    uint64_t v4 = (_OWORD *)(v0 + 16);
    uint64_t v5 = v0 + 256;
    uint64_t v34 = v0;
    uint64_t v6 = (uint64_t *)(*(void *)(v0 + 328) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
    swift_beginAccess(v6, v0 + 232, 0LL, 0LL);
    uint64_t v7 = *v6;
    uint64_t v8 = swift_task_alloc(32LL);
    uint64_t v33 = (void *)(v0 + 64);
    *(void *)(v8 + swift_weakDestroy(v0 + 16) = v1;
    swift_bridgeObjectRetain(v7);
    uint64_t v9 = sub_1002F9038((uint64_t)sub_1002FC4F4, v8, v7);
    swift_bridgeObjectRelease(v7);
    swift_task_dealloc(v8);
    uint64_t v35 = v9 + 64;
    uint64_t v10 = -1LL;
    uint64_t v11 = -1LL << *(_BYTE *)(v9 + 32);
    if (-v11 < 64) {
      uint64_t v10 = ~(-1LL << -(char)v11);
    }
    unint64_t v12 = v10 & *(void *)(v9 + 64);
    int64_t v36 = (unint64_t)(63 - v11) >> 6;
    uint64_t result = swift_retain(v9);
    int64_t v14 = 0LL;
    while (1)
    {
      if (v12)
      {
        unint64_t v15 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }

      else
      {
        int64_t v17 = v14 + 1;
        if (__OFADD__(v14, 1LL))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }

        if (v17 >= v36) {
          goto LABEL_31;
        }
        unint64_t v18 = *(void *)(v35 + 8 * v17);
        ++v14;
        if (!v18)
        {
          int64_t v14 = v17 + 1;
          if (v17 + 1 >= v36) {
            goto LABEL_31;
          }
          unint64_t v18 = *(void *)(v35 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 2;
            if (v17 + 2 >= v36) {
              goto LABEL_31;
            }
            unint64_t v18 = *(void *)(v35 + 8 * v14);
            if (!v18)
            {
              int64_t v14 = v17 + 3;
              if (v17 + 3 >= v36) {
                goto LABEL_31;
              }
              unint64_t v18 = *(void *)(v35 + 8 * v14);
              if (!v18)
              {
                int64_t v14 = v17 + 4;
                if (v17 + 4 >= v36) {
                  goto LABEL_31;
                }
                unint64_t v18 = *(void *)(v35 + 8 * v14);
                if (!v18)
                {
                  int64_t v19 = v17 + 5;
                  if (v19 >= v36)
                  {
LABEL_31:
                    swift_release(v9);
                    uint64_t v0 = v34;
                    if (*(void *)(v9 + 16)) {
                      sub_1002EB7A8();
                    }
                    swift_release(v9);
                    uint64_t v1 = v33;
                    break;
                  }

                  unint64_t v18 = *(void *)(v35 + 8 * v19);
                  if (!v18)
                  {
                    while (1)
                    {
                      int64_t v14 = v19 + 1;
                      if (__OFADD__(v19, 1LL)) {
                        goto LABEL_36;
                      }
                      if (v14 >= v36) {
                        goto LABEL_31;
                      }
                      unint64_t v18 = *(void *)(v35 + 8 * v14);
                      ++v19;
                      if (v18) {
                        goto LABEL_26;
                      }
                    }
                  }

                  int64_t v14 = v19;
                }
              }
            }
          }
        }

uint64_t sub_1002E76D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v2[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[8] = v6;
  v2[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFPlatform(0LL);
  v2[10] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[11] = v8;
  v2[12] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002E77B8, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002E77B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 80);
  static SFPlatform.macOS.getter(a1);
  char v5 = static SFPlatform.isPlatform(_:)(v2);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v5 & 1) != 0)
  {
    uint64_t v8 = *(void *)(v1 + 64);
    uint64_t v7 = *(void *)(v1 + 72);
    uint64_t v9 = *(void *)(v1 + 56);
    SFAirDropReceive.Transfer.state.getter(v6);
    int v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v7, v9);
    if (v10 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:))
    {
      uint64_t v11 = *(void *)(v1 + 72);
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 64) + 96LL))(v11, *(void *)(v1 + 56));
      unint64_t v12 = (int *)sub_100183098((uint64_t *)&unk_10064B760);
      *(void *)&double v13 = swift_bridgeObjectRelease((const char *)*(void *)(v11 + v12[12])).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v11 + v12[16]), v13);
      uint64_t v14 = v11 + v12[20];
      uint64_t v15 = sub_100183098(&qword_1006451B0);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v14, v15);
      uint64_t v16 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
LABEL_9:
      uint64_t v29 = (*(uint64_t (**)(void))(*(void *)(v16 - 8) + 8LL))(*(void *)(v1 + 72));
      SFAirDropReceive.Transfer.askRequest.getter(v29);
      uint64_t v30 = (void *)swift_task_alloc(dword_10064DABC);
      *(void *)(v1 + 104) = v30;
      *uint64_t v30 = v1;
      v30[1] = sub_1002E7A40;
      return sub_1002E7AB4(*(void *)(v1 + 48));
    }

    if (v10 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
    {
      uint64_t v17 = *(void *)(v1 + 72);
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 64) + 96LL))(v17, *(void *)(v1 + 56));
      unint64_t v18 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
      uint64_t v19 = v17 + v18[12];
      *(void *)&double v20 = swift_bridgeObjectRelease((const char *)*(void *)(v17 + v18[16] + 8)).n128_u64[0];
      *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)(v17 + v18[20]), v20).n128_u64[0];
      *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)(v17 + v18[24]), v21).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v17 + v18[28]), v22);
      uint64_t v23 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8LL))(v19, v23);
LABEL_8:
      uint64_t v16 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
      goto LABEL_9;
    }

    uint64_t v24 = *(void *)(v1 + 64);
    uint64_t v25 = *(void *)(v1 + 72);
    uint64_t v26 = *(void *)(v1 + 56);
    if (v10 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
    {
      (*(void (**)(void, uint64_t))(v24 + 96))(*(void *)(v1 + 72), v26);
      uint64_t v27 = v25 + *(int *)(sub_100183098(&qword_100649750) + 48);
      uint64_t v28 = type metadata accessor for SFAirDropReceive.Failure(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8LL))(v27, v28);
      goto LABEL_8;
    }

    (*(void (**)(void, uint64_t))(v24 + 8))(*(void *)(v1 + 72), v26);
  }

  uint64_t v32 = *(void *)(v1 + 72);
  uint64_t v33 = *(void *)(v1 + 48);
  swift_task_dealloc(*(void *)(v1 + 96));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1002E7A40()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v6 = *(void **)v0;
  swift_task_dealloc(*(void *)(*(void *)v0 + 104LL));
  (*(void (**)(void, void))(v1[5] + 8LL))(v1[6], v1[4]);
  uint64_t v2 = v1[12];
  uint64_t v3 = v1[9];
  uint64_t v4 = v1[6];
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return ((uint64_t (*)(void))v6[1])();
}

uint64_t sub_1002E7AB4(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  unint64_t v3 = (*(void *)(*(void *)(sub_100183098(&qword_10064DA58) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[10] = swift_task_alloc(v3);
  v2[11] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[12] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[13] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[14] = swift_task_alloc(v6);
  v2[15] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for SFPlatform(0LL);
  v2[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[17] = v8;
  v2[18] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002E7BB0, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002E7BB0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 128);
  static SFPlatform.macOS.getter(a1);
  char v5 = static SFPlatform.isPlatform(_:)(v2);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v5 & 1) != 0)
  {
    uint64_t v7 = *(void *)(v1 + 72);
    SFAirDropReceive.AskRequest.id.getter(v6);
    uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables);
    swift_beginAccess(v8, v1 + 16, 32LL, 0LL);
    uint64_t v9 = *v8;
    if (*(void *)(*v8 + 16) && (unint64_t v10 = sub_1003AD580(*(void *)(v1 + 120)), (v11 & 1) != 0))
    {
      unint64_t v12 = v10;
      uint64_t v13 = *(void *)(v1 + 112);
      uint64_t v45 = *(void *)(v1 + 120);
      uint64_t v14 = *(void *)(v1 + 88);
      uint64_t v43 = *(void *)(v1 + 104);
      uint64_t v44 = *(void *)(v1 + 96);
      uint64_t v15 = *(void *)(v1 + 80);
      uint64_t v16 = *(void *)(v9 + 56);
      uint64_t v17 = type metadata accessor for NWEndpoint(0LL);
      uint64_t v18 = *(void *)(v17 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16))( v14,  v16 + *(void *)(v18 + 72) * v12,  v17);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v19(v14, 0LL, 1LL, v17);
      sub_100187100(v14, &qword_10064DA58);
      swift_endAccess(v1 + 16);
      uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
      SFAirDropReceive.AskRequest.id.getter(v20);
      v19(v15, 1LL, 1LL, v17);
      swift_beginAccess(v8, v1 + 40, 33LL, 0LL);
      sub_1002E5244( v15,  v13,  &qword_10064DA58,  (uint64_t (*)(void))&type metadata accessor for NWEndpoint,  (void (*)(char *, uint64_t, uint64_t))sub_1003B2C74,  (void (*)(uint64_t))sub_1001C99B8);
      swift_endAccess(v1 + 40);
      uint64_t v21 = sub_1002EEB54();
      double v22 = (const char *)v21;
      if ((unint64_t)v21 >> 62)
      {
        if (v21 >= 0) {
          v21 &= 0xFFFFFFFFFFFFFF8uLL;
        }
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter(v21);
      }

      else
      {
        uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      }

      uint64_t v24 = *(void *)(v1 + 72);
      swift_bridgeObjectRelease(v22);
      sub_1003961FC(v23);
      uint64_t v25 = *(void (**)(void))(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
      if (v25)
      {
        uint64_t v26 = *(void *)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
        swift_retain(v26);
        uint64_t v27 = (const char *)sub_1002EEB54();
        v25();
        sub_100224FF8((uint64_t)v25, v26);
        swift_bridgeObjectRelease(v27);
      }
    }

    else
    {
      uint64_t v28 = *(void *)(v1 + 120);
      uint64_t v29 = *(void *)(v1 + 96);
      uint64_t v30 = *(void *)(v1 + 104);
      uint64_t v31 = *(void *)(v1 + 88);
      uint64_t v32 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v31, 1LL, 1LL, v32);
      sub_100187100(v31, &qword_10064DA58);
      swift_endAccess(v1 + 16);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      if (qword_100644138 != -1) {
        swift_once(&qword_100644138, sub_1002E9860);
      }
      uint64_t v33 = type metadata accessor for Logger(0LL);
      uint64_t v34 = sub_100186DE4(v33, (uint64_t)qword_10064D970);
      uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "No receive displayable present, skipping remove", v37, 2u);
        swift_slowDealloc(v37, -1LL, -1LL);
      }
    }
  }

  uint64_t v38 = *(void *)(v1 + 112);
  uint64_t v39 = *(void *)(v1 + 120);
  uint64_t v41 = *(void *)(v1 + 80);
  uint64_t v40 = *(void *)(v1 + 88);
  swift_task_dealloc(*(void *)(v1 + 144));
  swift_task_dealloc(v39);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1002E7F50(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  uint64_t v3 = sub_100183098(&qword_10064DA58);
  v2[23] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[24] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_10064DA60);
  v2[25] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  v2[26] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[27] = v7;
  v2[28] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFPlatform(0LL);
  v2[29] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[30] = v9;
  v2[31] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v2[32] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E8074, v10, 0LL);
}

uint64_t sub_1002E8074(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 240);
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v4 = *(void *)(v1 + 232);
  static SFPlatform.macOS.getter(a1);
  char v5 = static SFPlatform.isPlatform(_:)(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v5 & 1) != 0
    && (uint64_t v6 = *(void *)(v1 + 176) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs,
        swift_beginAccess(v6, v1 + 96, 0LL, 0LL),
        *(void *)(*(void *)v6 + 16LL)))
  {
    uint64_t v8 = SFAirDropReceive.AskRequest.senderID.getter(v7);
    uint64_t v10 = v9;
    *(void *)(v1 + 264) = v9;
    uint64_t v11 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
    uint64_t v13 = v12;
    *(void *)(v1 + 272) = v12;
    uint64_t v14 = (void *)swift_task_alloc(dword_10064DA6C);
    *(void *)(v1 + 280) = v14;
    *uint64_t v14 = v1;
    v14[1] = sub_1002E81B8;
    return sub_1002F5BA4(*(void *)(v1 + 200), v8, v10, v11, v13);
  }

  else
  {
    uint64_t v16 = *(void *)(v1 + 224);
    uint64_t v18 = *(void *)(v1 + 192);
    uint64_t v17 = *(void *)(v1 + 200);
    uint64_t v19 = *(void *)(v1 + 184);
    swift_task_dealloc(*(void *)(v1 + 248));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_1002E81B8()
{
  uint64_t v1 = *(const char **)(*(void *)v0 + 272LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 256LL);
  uint64_t v2 = *(const char **)(*(void *)v0 + 264LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 280LL));
  *(void *)&double v4 = swift_bridgeObjectRelease(v2).n128_u64[0];
  swift_bridgeObjectRelease(v1, v4);
  return swift_task_switch(sub_1002E8228, v3, 0LL);
}

uint64_t sub_1002E8228()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) == 1)
  {
    sub_100187100(v3, &qword_10064DA60);
LABEL_12:
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    uint64_t v23 = sub_100186DE4(v22, (uint64_t)qword_10064D970);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v24,  v25,  "No matching AirDropable endpoint found, adding to receiving displayables",  v26,  2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    uint64_t v28 = *(void *)(v0 + 184);
    uint64_t v27 = *(void *)(v0 + 192);
    uint64_t v29 = *(void *)(v0 + 176);

    SFAirDropReceive.AskRequest.id.getter();
    sub_100412348(v28);
    uint64_t v30 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v28, 0LL, 1LL, v30);
    swift_beginAccess( v29 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables,  v0 + 120,  33LL,  0LL);
    sub_1002E5244( v28,  v27,  &qword_10064DA58,  (uint64_t (*)(void))&type metadata accessor for NWEndpoint,  (void (*)(char *, uint64_t, uint64_t))sub_1003B2C74,  (void (*)(uint64_t))sub_1001C99B8);
    swift_endAccess(v0 + 120);
    uint64_t v31 = sub_1002EEB54();
    uint64_t v32 = (const char *)v31;
    if ((unint64_t)v31 >> 62)
    {
      if (v31 >= 0) {
        v31 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v33 = _CocoaArrayWrapper.endIndex.getter(v31);
    }

    else
    {
      uint64_t v33 = *(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    uint64_t v34 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease(v32);
    sub_1003961FC(v33);
    uint64_t v35 = *(void (**)(void))(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
    if (v35)
    {
      uint64_t v36 = *(void *)(v34 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
      swift_retain(v36);
      uint64_t v37 = (const char *)sub_1002EEB54();
      v35();
      sub_100224FF8((uint64_t)v35, v36);
      swift_bridgeObjectRelease(v37);
    }

    goto LABEL_20;
  }

  uint64_t v4 = *(void *)(v0 + 176);
  (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*(void *)(v0 + 224), v3, v1);
  char v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID);
  swift_beginAccess( v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID,  v0 + 144,  32LL,  0LL);
  uint64_t v6 = *v5;
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_1003AD618(*(void *)(v0 + 224)), (v8 & 1) == 0))
  {
    uint64_t v20 = *(void *)(v0 + 216);
    uint64_t v19 = *(void *)(v0 + 224);
    uint64_t v21 = *(void *)(v0 + 208);
    swift_endAccess(v0 + 144);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    goto LABEL_12;
  }

  sub_10019A6C4(*(void *)(v6 + 56) + 40 * v7, v0 + 56);
  sub_1001CE0D0((__int128 *)(v0 + 56), v0 + 16);
  swift_endAccess(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v9);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10) & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8LL))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    sub_10018709C((void *)(v0 + 16));
    goto LABEL_12;
  }

  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_10064D970);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v13,  v14,  "Connectable endpoint present, skipping receiving displayable addition",  v15,  2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  uint64_t v17 = *(void *)(v0 + 216);
  uint64_t v16 = *(void *)(v0 + 224);
  uint64_t v18 = *(void *)(v0 + 208);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  sub_10018709C((void *)(v0 + 16));
LABEL_20:
  uint64_t v38 = *(void *)(v0 + 224);
  uint64_t v40 = *(void *)(v0 + 192);
  uint64_t v39 = *(void *)(v0 + 200);
  uint64_t v41 = *(void *)(v0 + 184);
  swift_task_dealloc(*(void *)(v0 + 248));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002E8668()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((sub_1002E98F0() & 1) != 0)
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064D970);
    char v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v8,  v9,  "No AirDrop browse clients present, stopping all browsing",  v10,  2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    uint64_t v11 = sub_1002EB1EC();
    UUID.init()(v11);
    uint64_t v12 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID], v25, 33LL, 0LL);
    (*(void (**)(char *, char *, uint64_t))(v3 + 40))(v12, v5, v2);
    swift_endAccess(v25);
    uint64_t v13 = v1;
    os_log_type_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v23 = swift_slowAlloc(32LL, -1LL);
      v25[0] = v23;
      *(_DWORD *)uint64_t v16 = 136315138;
      uint64_t v22 = v16 + 4;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v12, v2);
      uint64_t v17 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter(v2, v17);
      unint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v24 = sub_10018CDB4(v18, v20, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v22, v16 + 12);
      swift_bridgeObjectRelease(v20);

      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Rolled service sessionID with new ID %s", v16, 0xCu);
      uint64_t v21 = v23;
      swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1LL, -1LL);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    else
    {
    }
  }

uint64_t sub_1002E895C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[10] = a4;
  v5[11] = v4;
  void v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  uint64_t v6 = type metadata accessor for UUID(0LL);
  v5[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[13] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[14] = swift_task_alloc(v8);
  v5[15] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  v5[16] = v9;
  v5[17] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SDNearFieldTap(0LL);
  v5[18] = v10;
  v5[19] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v5[20] = v11;
  v5[21] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v12 = static AirDropActor.shared;
  v5[22] = static AirDropActor.shared;
  return swift_task_switch(sub_1002E8A74, v12, 0LL);
}

uint64_t sub_1002E8A74()
{
  uint64_t v1 = v0[19];
  uint64_t v3 = (uint64_t *)v0[17];
  uint64_t v2 = (int *)v0[18];
  uint64_t v4 = (int *)v0[16];
  uint64_t v24 = v0[15];
  uint64_t v25 = v0[20];
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v21 = v6;
  uint64_t v22 = v0[21];
  uint64_t v7 = v0[9];
  uint64_t v23 = v0[8];
  sub_1001A4B84(v0[10], v1, type metadata accessor for SDNearFieldTap);
  unint64_t v8 = (uint64_t *)(v1 + v2[13]);
  uint64_t v9 = *v8;
  unint64_t v10 = v8[1];
  *uint64_t v3 = *v8;
  v3[1] = v10;
  uint64_t v11 = v1 + v2[14];
  uint64_t v12 = (char *)v3 + v4[5];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v0[23] = v13;
  v13(v12, v11, v6);
  os_log_type_t v14 = (uint64_t *)(v1 + v2[6]);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = (uint64_t *)((char *)v3 + v4[7]);
  *uint64_t v17 = v15;
  v17[1] = v16;
  *((_BYTE *)v3 + v4[8]) = *(_BYTE *)(v1 + v2[12]);
  LOBYTE(v2) = *(_BYTE *)(v1 + v2[19]);
  swift_unknownObjectRetain(v7);
  sub_10019BA8C(v9, v10);
  swift_bridgeObjectRetain(v16);
  sub_1001A4BC8(v1, type metadata accessor for SDNearFieldTap);
  *((_BYTE *)v3 + v4[9]) = (_BYTE)v2;
  *(uint64_t *)((char *)v3 + v4[6]) = v7;
  sub_1001A4B40((uint64_t)v3, v22, type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint);
  swift_storeEnumTagMultiPayload(v22, v25, 2LL);
  v13((char *)v24, v23, v21);
  uint64_t v18 = type metadata accessor for SDAirDropDiscoveredNearFieldDevice(0LL);
  v0[24] = v18;
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v0[25] = sub_100410040(v24);
  unint64_t v19 = (void *)swift_task_alloc(dword_100654BCC);
  v0[26] = v19;
  *unint64_t v19 = v0;
  v19[1] = sub_1002E8C1C;
  return sub_10040FE14(v0[21]);
}

uint64_t sub_1002E8C1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 208LL));
  return swift_task_switch(sub_1002E8C74, v1, 0LL);
}

uint64_t sub_1002E8C74(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v2 = *(void *)(v1 + 200);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = UUID.uuidString.getter(a1);
  uint64_t v7 = v6;
  uint64_t v45 = v3;
  uint64_t v46 = sub_100183F14( &qword_10064DAD8,  type metadata accessor for SDAirDropDiscoveredNearFieldDevice,  (uint64_t)&unk_1004DB4C0);
  uint64_t v47 = &off_1005E0E70;
  uint64_t v43 = v2;
  swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v1 + 16, 33LL, 0LL);
  swift_retain(v2);
  sub_1002E5104((uint64_t)&v43, v5, v7);
  swift_endAccess(v1 + 16);
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v8 = *(void *)(v1 + 200);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 184);
  uint64_t v10 = *(void *)(v1 + 112);
  uint64_t v11 = *(void *)(v1 + 96);
  uint64_t v12 = *(void *)(v1 + 64);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_10064D970);
  v9(v10, v12, v11);
  uint64_t v14 = swift_retain_n(v8, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = *(void *)(v1 + 200);
  uint64_t v19 = *(void *)(v1 + 168);
  uint64_t v21 = *(void *)(v1 + 104);
  uint64_t v20 = *(void *)(v1 + 112);
  uint64_t v22 = *(void *)(v1 + 96);
  if (v17)
  {
    uint64_t v42 = *(void *)(v1 + 168);
    os_log_type_t type = v16;
    uint64_t v23 = swift_slowAlloc(22LL, -1LL);
    uint64_t v40 = swift_slowAlloc(64LL, -1LL);
    uint64_t v48 = v40;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v24 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v22, v24);
    unint64_t v27 = v26;
    *(void *)(v1 + 40) = sub_10018CDB4(v25, v26, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 40, v1 + 48, v23 + 4, v23 + 12);
    swift_bridgeObjectRelease(v27);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v43 = 0LL;
    unint64_t v44 = 0xE000000000000000LL;
    swift_retain(v18);
    _StringGuts.grow(_:)(19LL);
    swift_bridgeObjectRelease(v44);
    uint64_t v43 = 0xD000000000000010LL;
    unint64_t v44 = 0x8000000100509EF0LL;
    uint64_t v28 = *(void *)(v18 + 16);
    uint64_t v29 = *(void **)(v18 + 24);
    swift_bridgeObjectRetain(v29);
    v30._uint64_t countAndFlagsBits = v28;
    v30._object = v29;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(v29);
    v31._uint64_t countAndFlagsBits = 41LL;
    v31._object = (void *)0xE100000000000000LL;
    String.append(_:)(v31);
    swift_release(v18);
    unint64_t v32 = v44;
    *(void *)(v1 + 48) = sub_10018CDB4(v43, v44, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 48, v1 + 56, v23 + 14, v23 + 22);
    swift_bridgeObjectRelease(v32);
    swift_release_n(v18, 2LL);
    _os_log_impl( (void *)&_mh_execute_header,  v15,  type,  "Created near field endpoint for transaction %s: %s",  (uint8_t *)v23,  0x16u);
    swift_arrayDestroy(v40, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    swift_release(v18);
    uint64_t v33 = v42;
  }

  else
  {

    swift_release_n(v18, 2LL);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    swift_release(v18);
    uint64_t v33 = v19;
  }

  sub_1001A4BC8(v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v34 = *(void *)(v1 + 168);
  uint64_t v35 = *(void *)(v1 + 152);
  uint64_t v36 = *(void *)(v1 + 136);
  uint64_t v38 = *(void *)(v1 + 112);
  uint64_t v37 = *(void *)(v1 + 120);
  (*(void (**)(void, void, void))(v1 + 184))( *(void *)(v1 + 56),  *(void *)(v1 + 64),  *(void *)(v1 + 96));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_1002E905C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v43 - v9;
  uint64_t v11 = UUID.uuidString.getter(v8);
  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, &v47, 32LL, 0LL);
  uint64_t v15 = *v14;
  if (*(void *)(*v14 + 16) && (uint64_t v16 = sub_1003AD53C(v11, v13), (v17 & 1) != 0))
  {
    sub_1002499DC(*(void *)(v15 + 56) + 48 * v16, (uint64_t)&v44);
  }

  else
  {
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v44 = 0u;
  }

  swift_bridgeObjectRelease(v13);
  swift_endAccess(&v47);
  uint64_t v18 = *((void *)&v45 + 1);
  sub_100187100((uint64_t)&v44, &qword_10064DA48);
  if (v18)
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v19, (uint64_t)qword_10064D970);
    uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v10, a1, v3);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v24 = swift_slowAlloc(32LL, -1LL);
      v43[0] = v4;
      *(_DWORD *)uint64_t v23 = 136315138;
      v43[1] = a1;
      *(void *)&__int128 v44 = v24;
      uint64_t v25 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v3, v25);
      unint64_t v28 = v27;
      uint64_t v47 = sub_10018CDB4(v26, v27, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v23 + 4, v23 + 12);
      swift_bridgeObjectRelease(v28);
      (*(void (**)(char *, uint64_t))(v43[0] + 8LL))(v10, v3);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Removing endpoint for near field transaction: %s", v23, 0xCu);
      swift_arrayDestroy(v24, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v24, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
    }

    uint64_t v40 = UUID.uuidString.getter(v39);
    uint64_t v42 = v41;
    __int128 v45 = 0u;
    __int128 v46 = 0u;
    __int128 v44 = 0u;
    swift_beginAccess(v14, &v47, 33LL, 0LL);
    sub_1002E5104((uint64_t)&v44, v40, v42);
    swift_endAccess(&v47);
  }

  else
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v29 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v29, (uint64_t)qword_10064D970);
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
    Swift::String v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v34 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 v44 = v34;
      *(_DWORD *)uint64_t v33 = 136315138;
      uint64_t v35 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter(v3, v35);
      unint64_t v38 = v37;
      uint64_t v47 = sub_10018CDB4(v36, v37, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, v48, v33 + 4, v33 + 12);
      swift_bridgeObjectRelease(v38);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Not tracking endpoint for transaction ID %s", v33, 0xCu);
      swift_arrayDestroy(v34, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1LL, -1LL);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
  }

uint64_t sub_1002E9500(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[3] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[4] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[5] = swift_task_alloc(v6);
  v2[6] = swift_task_alloc(v6);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  v2[7] = static AirDropActor.shared;
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DC04);
  v2[8] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1002E95C8;
  return sub_1002E6364(a2);
}

uint64_t sub_1002E95C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  *(void *)(*(void *)v1 + 72LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002E9624, v3, 0LL);
}

void sub_1002E9624()
{
  int64_t v1 = 0LL;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v6 = -1LL;
  uint64_t v7 = -1LL << *(_BYTE *)(v2 + 32);
  if (-v7 < 64) {
    uint64_t v6 = ~(-1LL << -(char)v7);
  }
  unint64_t v8 = v6 & v4;
  int64_t v25 = (unint64_t)(63 - v7) >> 6;
  if ((v6 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v1 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v1 << 6))
  {
    uint64_t v15 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v16 = *(void *)(v0 + 24);
    sub_1001A4B84( *(void *)(v2 + 48) + *(void *)(v3 + 72) * i,  v14,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B40(v14, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 3)
    {
      uint64_t v17 = *(void *)(v0 + 72);
      uint64_t v18 = *(void **)(v0 + 40);
      uint64_t v19 = (const char *)v18[1];
      uint64_t v20 = (const char *)v18[3];
      uint64_t v21 = v18[4];
      unint64_t v22 = v18[5];
      sub_1001A4C04(v21, v22);
      SFAirDrop.EndpointMetadata.init(imageData:)(v21, v22);
      *(void *)&double v23 = swift_bridgeObjectRelease(v19).n128_u64[0];
      swift_bridgeObjectRelease(v20, v23);
      sub_100189B0C(v21, v22);
      swift_release(v17);
LABEL_24:
      uint64_t v24 = *(void *)(v0 + 40);
      swift_task_dealloc(*(void *)(v0 + 48));
      swift_task_dealloc(v24);
      (*(void (**)(void))(v0 + 8))();
      return;
    }

    sub_1001A4BC8(*(void *)(v0 + 40), type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v1 + 1;
    if (__OFADD__(v1, 1LL)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v1;
    if (v12) {
      goto LABEL_18;
    }
    int64_t v1 = v11 + 1;
    if (v11 + 1 >= v25) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v1);
    if (v12) {
      goto LABEL_18;
    }
    int64_t v1 = v11 + 2;
    if (v11 + 2 >= v25) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v1);
    if (v12) {
      goto LABEL_18;
    }
    int64_t v13 = v11 + 3;
    if (v13 >= v25)
    {
LABEL_23:
      swift_release(*(void *)(v0 + 72));
      SFAirDrop.EndpointMetadata.init(imageData:)(0LL, 0xF000000000000000LL);
      goto LABEL_24;
    }

    unint64_t v12 = *(void *)(v5 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v1 = v13 + 1;
        if (__OFADD__(v13, 1LL)) {
          goto LABEL_26;
        }
        if (v1 >= v25) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v1);
        ++v13;
        if (v12) {
          goto LABEL_18;
        }
      }
    }

    int64_t v1 = v13;
LABEL_18:
    unint64_t v8 = (v12 - 1) & v12;
  }

  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_1002E9860()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064D970);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064D970);
  if (qword_100643FE8 != -1) {
    swift_once(&qword_100643FE8, sub_10023A448);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002E98F0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs;
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs, v13, 0LL, 0LL);
  if (*(void *)(*(void *)v1 + 16LL))
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064D970);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    uint64_t v7 = "Keeping browsers alive, browse client still present";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v7, v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
LABEL_12:

    return 0LL;
  }

  uint64_t v8 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables;
  swift_beginAccess( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,  &v12,  0LL,  0LL);
  if (*(void *)(*(void *)v8 + 16LL))
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064D970);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    uint64_t v7 = "Keeping browsers alive, transfer ongoing";
    goto LABEL_11;
  }

  return 1LL;
}

__n128 sub_1002E9B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(const char *))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = sub_100183098(&qword_10064B780);
  uint64_t v6 = (const char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void sub_1002E9C18(uint64_t a1, uint64_t a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);
}

id sub_1002E9C70(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v5);
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser] = 0LL;
  *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser] = 0LL;
  int64_t v11 = &v5[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser];
  *(void *)int64_t v11 = 0LL;
  *((void *)v11 + 1) = 0LL;
  uint64_t v12 = v5;
  UUID.init()(v12);
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables] = &_swiftEmptySetSingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations] = &_swiftEmptyDictionarySingleton;
  int64_t v13 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler];
  *(void *)int64_t v13 = 0LL;
  *((void *)v13 + 1) = 0LL;
  uint64_t v14 = &v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate];
  *((void *)v14 + 1) = 0LL;
  swift_unknownObjectWeakInit(v14, 0LL);
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] = a1;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent] = a2;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bleController] = a3;
  *(void *)&v12[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger] = a4;
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  swift_retain(a4);

  v23.receiver = v12;
  v23.super_class = ObjectType;
  id v18 = objc_msgSendSuper2(&v23, "init");
  uint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v20 = v18;
  id v21 = [v19 defaultCenter];
  [v21 addObserver:v20 selector:"screenStateChangedWithNotification:" name:@"com.apple.sharingd.ScreenStateChanged" object:0];
  if (qword_100643EC0 != -1) {
    swift_once(&qword_100643EC0, sub_1001B3B58);
  }
  [v21 addObserver:v20 selector:"nearFieldDidTap" name:qword_1006693C8 object:0];

  swift_release(a4);
  return v20;
}

id sub_1002E9EE8(void *a1)
{
  uint64_t v3 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  uint64_t v7 = qword_100643F28;
  id v8 = v1;
  id v9 = a1;
  if (v7 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  uint64_t v11 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v12 = (void *)swift_allocObject(&unk_1005D9DF0, 48LL, 7LL);
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v8;
  v12[5] = v9;
  swift_retain(v10);
  uint64_t v13 = sub_1001B395C((uint64_t)v5, (uint64_t)&unk_10064DB50, (uint64_t)v12);
  uint64_t v14 = (objc_class *)type metadata accessor for SDAirDropAgentClientToken();
  id v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_agentClient] = v9;
  *(void *)&v15[OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_task] = v13;
  v18.receiver = v15;
  v18.super_class = v14;
  id v16 = v9;
  return objc_msgSendSuper2(&v18, "init");
}

uint64_t sub_1002EA068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[3] = a4;
  v5[4] = a5;
  void v5[2] = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002EA0D4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002EA0D4()
{
  uint64_t v1 = *(_BYTE **)(v0 + 16);
  __n128 v2 = sub_1002EA110((char *)*(void *)(v0 + 32));
  *uint64_t v1 = 1;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

__n128 sub_1002EA110(char *a1)
{
  __n128 v2 = v1;
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus];
  if ([v14 currentConsoleUser])
  {
    uint64_t v62 = v6;
    id v63 = v14;
    uint64_t v64 = *(os_log_s **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger];
    sub_100395744(a1);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v15 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v15, (uint64_t)qword_10064D970);
    id v16 = a1;
    id v17 = v2;
    objc_super v18 = v16;
    uint64_t v19 = v17;
    id v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.default.getter();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc(22LL, -1LL);
      os_log_t v60 = v20;
      uint64_t v24 = v23;
      uint64_t v25 = swift_slowAlloc(64LL, -1LL);
      v68[0] = v25;
      *(_DWORD *)uint64_t v24 = 136315394;
      int v59 = v22;
      uint64_t v26 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v61 = v11;
      uint64_t v27 = v26;
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v7, v26);
      uint64_t v30 = (const char *)v29;
      uint64_t v66 = sub_10018CDB4(v28, v29, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v30);

      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v58 = v24 + 14;
      Swift::String v31 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
      __n128 v32 = swift_beginAccess( &v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID],  &v66,  0LL,  0LL);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
      v33(v13, v31, v7, v32);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v7, v27);
      uint64_t v36 = v35;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      uint64_t v65 = sub_10018CDB4(v34, (unint64_t)v36, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v58, v24 + 22);
      swift_bridgeObjectRelease(v36);

      os_log_t v37 = v60;
      _os_log_impl( (void *)&_mh_execute_header,  v60,  (os_log_type_t)v59,  "Adding AirDrop browse client %s for session %s",  (uint8_t *)v24,  0x16u);
      swift_arrayDestroy(v25, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v24, -1LL, -1LL);

      uint64_t v11 = v61;
    }

    else
    {

      uint64_t v33 = *(void (**)(char *, char *, uint64_t, __n128))(v8 + 16);
    }

    ((void (*)(char *, char *, uint64_t))v33)( v11,  &v18[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id],  v7);
    swift_beginAccess( &v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs],  v68,  33LL,  0LL);
    sub_1003B54D0((uint64_t)v13, v11);
    swift_endAccess(v68);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    char v43 = v18[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly];
    sub_1002EADE4();
    sub_1002DF1E8();
    swift_bridgeObjectRelease(v44);
    if ((v43 & 1) == 0)
    {
      sub_1002EAFC8();
      if (!*(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser])
      {
        uint64_t v45 = type metadata accessor for TaskPriority(0LL);
        uint64_t v46 = (uint64_t)v62;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v62, 1LL, 1LL, v45);
        uint64_t v47 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
        swift_unknownObjectWeakInit(v47 + 16, v19);
        type metadata accessor for MainActor(0LL);
        uint64_t v48 = swift_retain(v47);
        uint64_t v49 = static MainActor.shared.getter(v48);
        uint64_t v50 = (void *)swift_allocObject(&unk_1005D9E18, 40LL, 7LL);
        v50[2] = v49;
        uint64_t v50[3] = &protocol witness table for MainActor;
        v50[4] = v47;
        swift_release(v47);
        uint64_t v51 = sub_1001B37E8(v46, (uint64_t)&unk_10064DB60, (uint64_t)v50);
        swift_release(v51);
      }
    }

    uint64_t v52 = sub_1002EEB54();
    id v53 = (const char *)v52;
    if ((unint64_t)v52 >> 62)
    {
      if (v52 >= 0) {
        v52 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      uint64_t v54 = _CocoaArrayWrapper.endIndex.getter(v52);
    }

    else
    {
      uint64_t v54 = *(void *)((v52 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    }

    swift_bridgeObjectRelease(v53);
    sub_1003961FC(v54);
    uint64_t v55 = *(void (**)(void))&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler];
    if (v55)
    {
      uint64_t v56 = *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8];
      swift_retain(v56);
      uint64_t v57 = (const char *)sub_1002EEB54();
      v55();
      sub_100224FF8((uint64_t)v55, v56);
      return swift_bridgeObjectRelease(v57);
    }
  }

  else
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    uint64_t v39 = sub_100186DE4(v38, (uint64_t)qword_10064D970);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v64, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v40, "Browse is intended for different user, ignoring", v41, 2u);
      swift_slowDealloc(v41, -1LL, -1LL);
    }
  }

  return result;
}

uint64_t sub_1002EA77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  void v5[3] = a5;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[4] = static AirDropActor.shared;
  return swift_task_switch(sub_1002EA7E8, v6, 0LL);
}

uint64_t sub_1002EA7E8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropAgentClientToken_task);
  __n128 v2 = (void *)swift_task_alloc(async function pointer to Task.result.getter[1]);
  *(void *)(v0 + 40) = v2;
  *__n128 v2 = v0;
  v2[1] = sub_1002EA86C;
  return Task.result.getter( v0 + 48,  v1,  &type metadata for Bool,  &type metadata for Never,  &protocol witness table for Never);
}

uint64_t sub_1002EA86C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 40LL));
  return swift_task_switch(sub_1002EA8C0, v1, 0LL);
}

uint64_t sub_1002EA8C0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002EA900(char *a1)
{
  uint64_t v3 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ([*(id *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] currentConsoleUser])
  {
    sub_100395904(a1);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v10, (uint64_t)qword_10064D970);
    uint64_t v11 = a1;
    uint64_t v12 = v1;
    uint64_t v13 = v11;
    uint64_t v14 = v12;
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    int v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = swift_slowAlloc(22LL, -1LL);
      int v32 = v17;
      uint64_t v19 = v18;
      uint64_t v33 = swift_slowAlloc(64LL, -1LL);
      v37[0] = v33;
      *(_DWORD *)uint64_t v19 = 136315394;
      os_log_t v31 = v15;
      uint64_t v20 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
      uint64_t v23 = (const char *)v22;
      uint64_t v35 = sub_10018CDB4(v21, v22, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v19 + 4, v19 + 12);
      swift_bridgeObjectRelease(v23);

      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v24 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
      __n128 v25 = swift_beginAccess( &v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID],  &v35,  0LL,  0LL);
      (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 16))(v9, v24, v6, v25);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter(v6, v20);
      uint64_t v28 = v27;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      uint64_t v34 = sub_10018CDB4(v26, (unint64_t)v28, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v19 + 14, v19 + 22);
      swift_bridgeObjectRelease(v28);

      uint64_t v15 = v31;
      _os_log_impl( (void *)&_mh_execute_header,  v31,  (os_log_type_t)v32,  "Removing AirDrop browse client %s for session %s",  (uint8_t *)v19,  0x16u);
      uint64_t v29 = v33;
      swift_arrayDestroy(v33, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1LL, -1LL);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    else
    {
    }

    uint64_t v30 = (uint64_t)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id];
    swift_beginAccess( &v14[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs],  v37,  33LL,  0LL);
    sub_1003BD9C8(v30, (uint64_t)v5);
    swift_endAccess(v37);
    sub_100187100((uint64_t)v5, &qword_10064DA60);
    sub_1002E8668();
  }

void sub_1002EADE4()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser))
  {
    uint64_t v2 = v0;
    if ([*(id *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) isAirDropAllowed])
    {
      if (qword_100644138 != -1) {
        swift_once(&qword_100644138, sub_1002E9860);
      }
      uint64_t v3 = type metadata accessor for Logger(0LL);
      uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_10064D970);
      uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
      os_log_type_t v6 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v5, v6))
      {
        uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v7 = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, v6, "Starting application service browser", v7, 2u);
        swift_slowDealloc(v7, -1LL, -1LL);
      }

      uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger);
      uint64_t v9 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
      swift_unknownObjectWeakInit(v9 + 16, v2);
      id v10 = objc_allocWithZone((Class)type metadata accessor for SDAirDropApplicationServiceBrowser());
      uint64_t v11 = swift_retain(v8);
      id v12 = sub_1002FE074(v11, (uint64_t)sub_1002FC3C4, v9);
      swift_release(v9);
      swift_release(v8);
      uint64_t v13 = *(void **)(v2 + v1);
      *(void *)(v2 + v1) = v12;

      uint64_t v14 = *(void *)(v2 + v1);
      if (v14)
      {
        uint64_t v15 = v14 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate;
        *(void *)(v15 + 8) = &off_1005D9CD8;
        swift_unknownObjectWeakAssign(v15, v2);
        os_log_type_t v16 = *(void **)(v2 + v1);
        if (v16)
        {
          id v17 = v16;
          sub_1002FD0E8();
        }
      }
    }
  }

void sub_1002EAFC8()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser))
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus);
    if ([v3 isAirDropAllowed])
    {
      if (qword_100644138 != -1) {
        swift_once(&qword_100644138, sub_1002E9860);
      }
      uint64_t v4 = type metadata accessor for Logger(0LL);
      uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_10064D970);
      os_log_type_t v6 = (os_log_s *)Logger.logObject.getter(v5);
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Starting bonjour browser", v8, 2u);
        swift_slowDealloc(v8, -1LL, -1LL);
      }

      uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent);
      id v10 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bleController);
      uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionLogger);
      uint64_t v12 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
      swift_unknownObjectWeakInit(v12 + 16, v2);
      objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourBrowser());
      id v13 = v3;
      id v14 = v9;
      id v15 = v10;
      swift_retain(v11);
      os_log_type_t v16 = sub_10032736C(v13, v14, v15, v11, (uint64_t)sub_1002FBA88, v12);
      id v17 = *(void **)(v2 + v1);
      *(void *)(v2 + v1) = v16;

      uint64_t v18 = *(void *)(v2 + v1);
      if (v18)
      {
        uint64_t v19 = v18 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate;
        *(void *)(v19 + 8) = &off_1005D9CD8;
        swift_unknownObjectWeakAssign(v19, v2);
        uint64_t v20 = *(void **)(v2 + v1);
        if (v20)
        {
          id v21 = v20;
          sub_100326A68();
        }
      }
    }
  }

uint64_t sub_1002EB1EC()
{
  int64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_10064DB00);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  os_log_type_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v55 - v7;
  uint64_t v9 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644138 != -1) {
LABEL_37:
  }
    swift_once(&qword_100644138, sub_1002E9860);
  uint64_t v12 = type metadata accessor for Logger(0LL);
  uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_10064D970);
  id v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    os_log_type_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Stopping SDAirDropEndpointService", v16, 2u);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  if ((sub_1002E98F0() & 1) != 0)
  {
    uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser);
    if (v18)
    {
      id v19 = v18;
      sub_1002FD4F8();

      uint64_t v18 = *(void **)(v1 + v17);
    }

    *(void *)(v1 + v17) = 0LL;
  }

  if ((sub_1002E98F0() & 1) != 0)
  {
    uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
    id v21 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser);
    if (v21)
    {
      id v22 = v21;
      sub_100326DF0();

      id v21 = *(void **)(v1 + v20);
    }

    *(void *)(v1 + v20) = 0LL;
  }

  uint64_t v23 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v11, 1LL, 1LL, v23);
  uint64_t v24 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  swift_unknownObjectWeakInit(v24 + 16, v1);
  type metadata accessor for MainActor(0LL);
  uint64_t v25 = swift_retain(v24);
  uint64_t v26 = static MainActor.shared.getter(v25);
  uint64_t v27 = (void *)swift_allocObject(&unk_1005D9D78, 40LL, 7LL);
  v27[2] = v26;
  uint64_t v27[3] = &protocol witness table for MainActor;
  v27[4] = v24;
  swift_release(v24);
  uint64_t v28 = sub_1001B37E8(v11, (uint64_t)&unk_10064DB10, (uint64_t)v27);
  swift_release(v28);
  uint64_t v29 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints,  v63,  1LL,  0LL);
  uint64_t v30 = *v29;
  uint64_t *v29 = (uint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v30);
  os_log_t v31 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v62, 1LL, 0LL);
  uint64_t v32 = *v31;
  *os_log_t v31 = (uint64_t)&_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease(v32);
  sub_1002EB7A8();
  int64_t v56 = v1;
  uint64_t v33 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations,  v61,  1LL,  0LL);
  uint64_t v55 = v33;
  uint64_t v34 = *v33;
  uint64_t v35 = *(void *)(*v33 + 64);
  uint64_t v57 = *v33 + 64;
  uint64_t v36 = 1LL << *(_BYTE *)(v34 + 32);
  uint64_t v37 = -1LL;
  if (v36 < 64) {
    uint64_t v37 = ~(-1LL << v36);
  }
  uint64_t v11 = v37 & v35;
  int64_t v58 = (unint64_t)(v36 + 63) >> 6;
  uint64_t v38 = enum case for SFAirDropSend.Failure.resolveFailure(_:);
  swift_bridgeObjectRetain(v34);
  int64_t v1 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v39 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v40 = v39 | (v1 << 6);
      goto LABEL_16;
    }

    int64_t v45 = v1 + 1;
    if (__OFADD__(v1, 1LL))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }

    if (v45 >= v58) {
      goto LABEL_34;
    }
    unint64_t v46 = *(void *)(v57 + 8 * v45);
    ++v1;
    if (!v46)
    {
      int64_t v1 = v45 + 1;
      if (v45 + 1 >= v58) {
        goto LABEL_34;
      }
      unint64_t v46 = *(void *)(v57 + 8 * v1);
      if (!v46)
      {
        int64_t v1 = v45 + 2;
        if (v45 + 2 >= v58) {
          goto LABEL_34;
        }
        unint64_t v46 = *(void *)(v57 + 8 * v1);
        if (!v46)
        {
          int64_t v1 = v45 + 3;
          if (v45 + 3 >= v58) {
            goto LABEL_34;
          }
          unint64_t v46 = *(void *)(v57 + 8 * v1);
          if (!v46) {
            break;
          }
        }
      }
    }

uint64_t sub_1002EB7A8()
{
  uint64_t v1 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v1);
  uint64_t v65 = (char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  id v63 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v57 - v7;
  __chkstk_darwin(v6);
  uint64_t v62 = (char *)&v57 - v9;
  uint64_t v10 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs, v81, 1LL, 0LL);
  uint64_t v11 = *v10;
  uint64_t v61 = v10;
  void *v10 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered, v80, 0LL, 0LL);
  uint64_t v13 = *v12;
  os_log_type_t v15 = (void *)(*v12 + 64LL);
  uint64_t v14 = *v15;
  uint64_t v57 = v0;
  int64_t v58 = v15;
  uint64_t v16 = 1LL << *(_BYTE *)(v13 + 32);
  uint64_t v17 = -1LL;
  if (v16 < 64) {
    uint64_t v17 = ~(-1LL << v16);
  }
  unint64_t v18 = v17 & v14;
  uint64_t isUniquelyReferenced_nonNull_native = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID;
  uint64_t v66 = v13;
  swift_bridgeObjectRetain(v13);
  uint64_t v60 = isUniquelyReferenced_nonNull_native;
  swift_beginAccess(isUniquelyReferenced_nonNull_native, v78, 0LL, 0LL);
  int64_t v20 = 0LL;
  int64_t v59 = (unint64_t)(v16 + 63) >> 6;
  id v21 = &_swiftEmptyDictionarySingleton;
  uint64_t v22 = (uint64_t)v62;
  while (1)
  {
    uint64_t v70 = v21;
    if (v18)
    {
      uint64_t v67 = (v18 - 1) & v18;
      int64_t v68 = v20;
      unint64_t v23 = __clz(__rbit64(v18)) | (v20 << 6);
      goto LABEL_5;
    }

    int64_t v45 = v20 + 1;
    if (__OFADD__(v20, 1LL))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }

    if (v45 >= v59) {
      goto LABEL_23;
    }
    unint64_t v46 = v58[v45];
    int64_t v47 = v20 + 1;
    if (!v46)
    {
      int64_t v47 = v20 + 2;
      if (v20 + 2 >= v59) {
        goto LABEL_23;
      }
      unint64_t v46 = v58[v47];
      if (!v46)
      {
        int64_t v47 = v20 + 3;
        if (v20 + 3 >= v59) {
          goto LABEL_23;
        }
        unint64_t v46 = v58[v47];
        if (!v46)
        {
          int64_t v47 = v20 + 4;
          if (v20 + 4 >= v59) {
            goto LABEL_23;
          }
          unint64_t v46 = v58[v47];
          if (!v46) {
            break;
          }
        }
      }
    }

uint64_t sub_1002EBD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1002EBDA4, 0LL, 0LL);
}

uint64_t sub_1002EBDA4()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v4 = (void *)swift_task_alloc(dword_10064DB94);
    *(void *)(v0 + 72) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1002EBE44;
    return sub_1002EBE9C(*(void *)(v0 + 56), 0);
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002EBE44()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 72LL));

  return swift_task_switch(sub_100239408, 0LL, 0LL);
}

uint64_t sub_1002EBE9C(uint64_t a1, char a2)
{
  *(_BYTE *)(v3 + 368) = a2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v2;
  uint64_t v4 = sub_100183098(&qword_100649F58);
  *(void *)(v3 + 168) = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  *(void *)(v3 + 176) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v3 + 184) = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v3 + 192) = swift_task_alloc(v7);
  *(void *)(v3 + 200) = swift_task_alloc(v7);
  *(void *)(v3 + 208) = swift_task_alloc(v7);
  *(void *)(v3 + 2swift_weakDestroy(v0 + 16) = swift_task_alloc(v7);
  *(void *)(v3 + 224) = swift_task_alloc(v7);
  *(void *)(v3 + 232) = swift_task_alloc(v7);
  *(void *)(v3 + 240) = swift_task_alloc(v7);
  *(void *)(v3 + 248) = swift_task_alloc(v7);
  *(void *)(v3 + 256) = swift_task_alloc(v7);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v8 = static AirDropActor.shared;
  *(void *)(v3 + 264) = static AirDropActor.shared;
  return swift_task_switch(sub_1002EBFBC, v8, 0LL);
}

uint64_t sub_1002EBFBC()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 144;
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  *(void *)(v0 + 272) = sub_100186DE4(v4, (uint64_t)qword_10064D970);
  uint64_t v5 = swift_bridgeObjectRetain_n(v3, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v9 = *(const char **)(v0 + 152);
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    v116[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_bridgeObjectRetain(v9);
    uint64_t v13 = Array.description.getter(v12, v8);
    os_log_type_t v15 = v14;
    swift_bridgeObjectRelease(v9);
    uint64_t v16 = v13;
    uint64_t v2 = v0 + 144;
    *(void *)(v0 + 144) = sub_10018CDB4(v16, (unint64_t)v15, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease_n(v9, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Endpoints discovered %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v17 = v11;
    uint64_t v1 = v0 + 16;
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(*(void *)(v0 + 152), 2LL);
  }

  unint64_t v18 = *(const char **)(v0 + 152);
  id v19 = *(void **)(v0 + 160);
  int v20 = *(unsigned __int8 *)(v0 + 368);
  swift_bridgeObjectRetain(v18);
  id v21 = v19;
  uint64_t v22 = (const char *)sub_1002FBD70((uint64_t)v18, (uint64_t)v21);

  swift_bridgeObjectRelease(v18);
  unint64_t v23 = (const char *)sub_100190128((uint64_t)v22);
  *(void *)(v0 + 280) = v23;
  swift_bridgeObjectRelease(v22);
  uint64_t v24 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints;
  *(void *)(v0 + 288) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscoveredEndpoints;
  uint64_t v25 = (const char **)&v21[v24];
  *(void *)&double v26 = swift_beginAccess(&v21[v24], v1, 0LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(*v25, v26);
  Swift::Int v28 = sub_1002F93A4(v27, v20);
  *(void *)(v0 + 296) = v28;
  *(void *)(v0 + 128) = v23;
  char v29 = *(_BYTE *)(v28 + 32);
  *(_BYTE *)(v0 + 369) = v29;
  uint64_t v30 = -1LL;
  uint64_t v31 = -1LL << v29;
  if (-(-1LL << v29) < 64) {
    uint64_t v30 = ~(-1LL << -(char)v31);
  }
  unint64_t v32 = v30 & *(void *)(v28 + 56);
  swift_bridgeObjectRetain(v23);
  if (v32)
  {
    uint64_t v33 = 0LL;
    unint64_t v34 = __clz(__rbit64(v32));
    uint64_t v35 = (v32 - 1) & v32;
    goto LABEL_10;
  }

  unint64_t v61 = 63 - v31;
  if ((unint64_t)(63 - v31) > 0x7F)
  {
    unint64_t v62 = *(void *)(v28 + 64);
    if (v62)
    {
      uint64_t v33 = 1LL;
LABEL_18:
      uint64_t v35 = (v62 - 1) & v62;
      unint64_t v34 = __clz(__rbit64(v62)) + (v33 << 6);
LABEL_10:
      *(void *)(v0 + 304) = v33;
      *(void *)(v0 + 312) = v35;
      uint64_t v36 = *(void *)(v0 + 280);
      uint64_t v38 = *(void *)(v0 + 248);
      uint64_t v37 = *(void *)(v0 + 256);
      sub_1001A4B84( *(void *)(v28 + 48) + *(void *)(*(void *)(v0 + 184) + 72LL) * v34,  v37,  type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1001A4B40(v37, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
      char v39 = sub_1003A0980(v38, v36);
      uint64_t v40 = *(void *)(v0 + 248);
      if ((v39 & 1) != 0)
      {
        uint64_t v41 = sub_1001A4B84(v40, *(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
        os_log_type_t v43 = static os_log_type_t.default.getter();
        BOOL v44 = os_log_type_enabled(v42, v43);
        uint64_t v45 = *(void *)(v0 + 240);
        if (v44)
        {
          unint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v47 = swift_slowAlloc(32LL, -1LL);
          v116[0] = v47;
          *(_DWORD *)unint64_t v46 = 136315138;
          sub_10020E23C();
          uint64_t v49 = (const char *)v48;
          *(void *)(v0 + 120) = sub_10018CDB4(v50, v48, v116);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v46 + 4, v46 + 12);
          swift_bridgeObjectRelease(v49);
          sub_1001A4BC8(v45, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Endpoint updated %s", v46, 0xCu);
          swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v47, -1LL, -1LL);
          swift_slowDealloc(v46, -1LL, -1LL);
        }

        else
        {
          sub_1001A4BC8(*(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        uint64_t v63 = *(void *)(v0 + 224);
        uint64_t v64 = *(void *)(v0 + 232);
        uint64_t v65 = *(void *)(v0 + 160) + *(void *)(v0 + 288);
        sub_1001A4B84(*(void *)(v0 + 248), v63, type metadata accessor for SDAirDropDiscoveredEndpoint);
        swift_beginAccess(v65, v0 + 88, 33LL, 0LL);
        sub_1003B52D4(v64, v63);
        swift_endAccess(v0 + 88);
        sub_1001A4BC8(v64, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v66 = (void *)swift_task_alloc(dword_10064DBA4);
        *(void *)(v0 + 320) = v66;
        *uint64_t v66 = v0;
        v66[1] = sub_1002ECAE4;
        return sub_1002EF374(*(void *)(v0 + 248), *(_BYTE *)(v0 + 368));
      }

      else
      {
        uint64_t v51 = sub_1001A4B84(v40, *(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        os_log_type_t v53 = static os_log_type_t.default.getter();
        BOOL v54 = os_log_type_enabled(v52, v53);
        uint64_t v55 = *(void *)(v0 + 216);
        if (v54)
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v57 = swift_slowAlloc(32LL, -1LL);
          v116[0] = v57;
          *(_DWORD *)uint64_t v56 = 136315138;
          sub_10020E23C();
          int64_t v59 = (const char *)v58;
          *(void *)(v0 + 112) = sub_10018CDB4(v60, v58, v116);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v56 + 4, v56 + 12);
          swift_bridgeObjectRelease(v59);
          sub_1001A4BC8(v55, type metadata accessor for SDAirDropDiscoveredEndpoint);
          _os_log_impl((void *)&_mh_execute_header, v52, v53, "Endpoint disappeared %s", v56, 0xCu);
          swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v57, -1LL, -1LL);
          swift_slowDealloc(v56, -1LL, -1LL);
        }

        else
        {
          sub_1001A4BC8(*(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
        }

        uint64_t v68 = *(void *)(v0 + 248);
        uint64_t v69 = *(void *)(v0 + 168);
        swift_beginAccess(*(void *)(v0 + 160) + *(void *)(v0 + 288), v0 + 64, 33LL, 0LL);
        sub_1003BE9C4(v68, v69);
        swift_endAccess(v0 + 64);
        sub_100187100(v69, &qword_100649F58);
        uint64_t v70 = (void *)swift_task_alloc(dword_10064DB9C);
        *(void *)(v0 + 328) = v70;
        *uint64_t v70 = v0;
        v70[1] = sub_1002ED444;
        return sub_1002F0324(*(void *)(v0 + 248));
      }
    }

    if (v61 >= 0xC0)
    {
      unint64_t v62 = *(void *)(v28 + 72);
      if (v62)
      {
        uint64_t v33 = 2LL;
        goto LABEL_18;
      }

      if (v61 >= 0x100)
      {
        unint64_t v62 = *(void *)(v28 + 80);
        if (v62)
        {
          uint64_t v33 = 3LL;
          goto LABEL_18;
        }

        if (v61 >= 0x140)
        {
          unint64_t v62 = *(void *)(v28 + 88);
          if (v62)
          {
            uint64_t v33 = 4LL;
            goto LABEL_18;
          }

          uint64_t v71 = 0LL;
          uint64_t v72 = v61 >> 6;
          if (v72 <= 5) {
            uint64_t v72 = 5LL;
          }
          uint64_t v73 = v72 - 5;
          while (v73 != v71)
          {
            unint64_t v62 = *(void *)(v28 + 96 + 8 * v71++);
            if (v62)
            {
              uint64_t v33 = v71 + 4;
              goto LABEL_18;
            }
          }
        }
      }
    }
  }

  uint64_t v74 = *(const char **)(v0 + 280);
  swift_release(v28);
  swift_bridgeObjectRelease(v74);
  uint64_t v75 = *(void *)(v0 + 128);
  *(void *)(v0 + 336) = v75;
  char v76 = *(_BYTE *)(v75 + 32);
  *(_BYTE *)(v0 + 370) = v76;
  uint64_t v77 = -1LL;
  uint64_t v78 = -1LL << v76;
  if (-v78 < 64) {
    uint64_t v77 = ~(-1LL << -(char)v78);
  }
  unint64_t v79 = v77 & *(void *)(v75 + 56);
  if (!v79)
  {
    unint64_t v101 = 63 - v78;
    if (v101 > 0x7F)
    {
      unint64_t v102 = *(void *)(v75 + 64);
      if (v102)
      {
        uint64_t v80 = 1LL;
LABEL_49:
        uint64_t v82 = (v102 - 1) & v102;
        unint64_t v81 = __clz(__rbit64(v102)) + (v80 << 6);
        goto LABEL_42;
      }

      if (v101 >= 0xC0)
      {
        unint64_t v102 = *(void *)(v75 + 72);
        if (v102)
        {
          uint64_t v80 = 2LL;
          goto LABEL_49;
        }

        if (v101 >= 0x100)
        {
          unint64_t v102 = *(void *)(v75 + 80);
          if (v102)
          {
            uint64_t v80 = 3LL;
            goto LABEL_49;
          }

          if (v101 >= 0x140)
          {
            unint64_t v102 = *(void *)(v75 + 88);
            if (v102)
            {
              uint64_t v80 = 4LL;
              goto LABEL_49;
            }

            uint64_t v103 = 0LL;
            uint64_t v104 = v101 >> 6;
            if (v104 <= 5) {
              uint64_t v104 = 5LL;
            }
            uint64_t v105 = v104 - 5;
            while (v105 != v103)
            {
              unint64_t v102 = *(void *)(v75 + 96 + 8 * v103++);
              if (v102)
              {
                uint64_t v80 = v103 + 4;
                goto LABEL_49;
              }
            }
          }
        }
      }
    }

    uint64_t v107 = *(void *)(v0 + 248);
    uint64_t v106 = *(void *)(v0 + 256);
    uint64_t v109 = *(void *)(v0 + 232);
    uint64_t v108 = *(void *)(v0 + 240);
    uint64_t v111 = *(void *)(v0 + 216);
    uint64_t v110 = *(void *)(v0 + 224);
    uint64_t v113 = *(void *)(v0 + 200);
    uint64_t v112 = *(void *)(v0 + 208);
    uint64_t v114 = *(void *)(v0 + 192);
    uint64_t v115 = *(void *)(v0 + 168);
    swift_release(v75);
    sub_1002EB7A8();
    swift_task_dealloc(v106);
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v80 = 0LL;
  unint64_t v81 = __clz(__rbit64(v79));
  uint64_t v82 = (v79 - 1) & v79;
LABEL_42:
  *(void *)(v0 + 344) = v80;
  *(void *)(v0 + 352) = v82;
  uint64_t v84 = *(void *)(v0 + 200);
  uint64_t v83 = *(void *)(v0 + 208);
  uint64_t v85 = *(void *)(v0 + 192);
  sub_1001A4B84( *(void *)(v75 + 48) + *(void *)(*(void *)(v0 + 184) + 72LL) * v81,  v83,  type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4B40(v83, v84, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v86 = sub_1001A4B84(v84, v85, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
  os_log_type_t v88 = static os_log_type_t.default.getter();
  BOOL v89 = os_log_type_enabled(v87, v88);
  uint64_t v90 = *(void *)(v0 + 192);
  if (v89)
  {
    uint64_t v91 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v92 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v91 = 136315138;
    v116[0] = v92;
    sub_10020E23C();
    uint64_t v93 = v2;
    uint64_t v95 = (const char *)v94;
    *(void *)(v0 + 136) = sub_10018CDB4(v96, v94, v116);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v93, v91 + 4, v91 + 12);
    swift_bridgeObjectRelease(v95);
    sub_1001A4BC8(v90, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "Endpoint discovered %s", v91, 0xCu);
    swift_arrayDestroy(v92, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v92, -1LL, -1LL);
    swift_slowDealloc(v91, -1LL, -1LL);
  }

  else
  {
    sub_1001A4BC8(*(void *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v97 = *(void *)(v0 + 224);
  uint64_t v98 = *(void *)(v0 + 232);
  uint64_t v99 = *(void *)(v0 + 160) + *(void *)(v0 + 288);
  sub_1001A4B84(*(void *)(v0 + 200), v97, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_beginAccess(v99, v0 + 40, 33LL, 0LL);
  sub_1003B52D4(v98, v97);
  swift_endAccess(v0 + 40);
  sub_1001A4BC8(v98, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v100 = (void *)swift_task_alloc(dword_10064DBAC);
  *(void *)(v0 + 360) = v100;
  *uint64_t v100 = v0;
  v100[1] = sub_1002ED49C;
  return sub_1002F16D0(*(void *)(v0 + 200), *(_BYTE *)(v0 + 368));
}

uint64_t sub_1002ECAE4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 320LL));
  return swift_task_switch(sub_1002ECB3C, v1, 0LL);
}

uint64_t sub_1002ECB3C()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 168);
  sub_1003BE9C4(v1, v2);
  sub_100187100(v2, &qword_100649F58);
  uint64_t v3 = sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  unint64_t v4 = *(void *)(v0 + 304);
  unint64_t v5 = *(void *)(v0 + 312);
  if (v5)
  {
    uint64_t v6 = (v5 - 1) & v5;
    unint64_t v7 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t result = *(void *)(v0 + 296);
    goto LABEL_3;
  }

  int64_t v34 = v4 + 1;
  if (__OFADD__(v4, 1LL))
  {
    __break(1u);
    goto LABEL_48;
  }

  int64_t v35 = (unint64_t)((1LL << *(_BYTE *)(v0 + 369)) + 63) >> 6;
  uint64_t result = *(void *)(v0 + 296);
  if (v34 >= v35) {
    goto LABEL_26;
  }
  uint64_t v36 = result + 56;
  unint64_t v37 = *(void *)(result + 56 + 8 * v34);
  ++v4;
  if (v37)
  {
LABEL_11:
    uint64_t v6 = (v37 - 1) & v37;
    unint64_t v7 = __clz(__rbit64(v37)) + (v4 << 6);
LABEL_3:
    *(void *)(v0 + 304) = v4;
    *(void *)(v0 + 312) = v6;
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v11 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 256);
    sub_1001A4B84( *(void *)(result + 48) + *(void *)(*(void *)(v0 + 184) + 72LL) * v7,  v10,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B40(v10, v11, type metadata accessor for SDAirDropDiscoveredEndpoint);
    char v12 = sub_1003A0980(v11, v9);
    uint64_t v13 = *(void *)(v0 + 248);
    if ((v12 & 1) != 0)
    {
      uint64_t v14 = sub_1001A4B84(v13, *(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
      os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v18 = *(void *)(v0 + 240);
      if (v17)
      {
        id v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v20 = swift_slowAlloc(32LL, -1LL);
        uint64_t v85 = v20;
        *(_DWORD *)id v19 = 136315138;
        sub_10020E23C();
        uint64_t v22 = (const char *)v21;
        *(void *)(v0 + 120) = sub_10018CDB4(v23, v21, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 120, v0 + 128, v19 + 4, v19 + 12);
        swift_bridgeObjectRelease(v22);
        sub_1001A4BC8(v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Endpoint updated %s", v19, 0xCu);
        swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1LL, -1LL);
        swift_slowDealloc(v19, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 240), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v38 = *(void *)(v0 + 224);
      uint64_t v39 = *(void *)(v0 + 232);
      uint64_t v40 = *(void *)(v0 + 160) + *(void *)(v0 + 288);
      sub_1001A4B84(*(void *)(v0 + 248), v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess(v40, v0 + 88, 33LL, 0LL);
      sub_1003B52D4(v39, v38);
      swift_endAccess(v0 + 88);
      sub_1001A4BC8(v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v41 = (void *)swift_task_alloc(dword_10064DBA4);
      *(void *)(v0 + 320) = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_1002ECAE4;
      return sub_1002EF374(*(void *)(v0 + 248), *(_BYTE *)(v0 + 368));
    }

    else
    {
      uint64_t v24 = sub_1001A4B84(v13, *(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v26 = static os_log_type_t.default.getter();
      BOOL v27 = os_log_type_enabled(v25, v26);
      uint64_t v28 = *(void *)(v0 + 216);
      if (v27)
      {
        char v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v30 = swift_slowAlloc(32LL, -1LL);
        uint64_t v85 = v30;
        *(_DWORD *)char v29 = 136315138;
        sub_10020E23C();
        unint64_t v32 = (const char *)v31;
        *(void *)(v0 + 112) = sub_10018CDB4(v33, v31, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v29 + 4, v29 + 12);
        swift_bridgeObjectRelease(v32);
        sub_1001A4BC8(v28, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Endpoint disappeared %s", v29, 0xCu);
        swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v30, -1LL, -1LL);
        swift_slowDealloc(v29, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 216), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v42 = *(void *)(v0 + 248);
      uint64_t v43 = *(void *)(v0 + 168);
      swift_beginAccess(*(void *)(v0 + 160) + *(void *)(v0 + 288), v0 + 64, 33LL, 0LL);
      sub_1003BE9C4(v42, v43);
      swift_endAccess(v0 + 64);
      sub_100187100(v43, &qword_100649F58);
      BOOL v44 = (void *)swift_task_alloc(dword_10064DB9C);
      *(void *)(v0 + 328) = v44;
      *BOOL v44 = v0;
      v44[1] = sub_1002ED444;
      return sub_1002F0324(*(void *)(v0 + 248));
    }
  }

  unint64_t v4 = v34 + 1;
  if (v34 + 1 >= v35) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v36 + 8 * v4);
  if (v37) {
    goto LABEL_11;
  }
  unint64_t v4 = v34 + 2;
  if (v34 + 2 >= v35) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v36 + 8 * v4);
  if (v37) {
    goto LABEL_11;
  }
  int64_t v45 = v34 + 3;
  if (v45 >= v35)
  {
LABEL_26:
    unint64_t v46 = *(const char **)(v0 + 280);
    swift_release(result);
    swift_bridgeObjectRelease(v46);
    uint64_t v3 = *(void *)(v0 + 128);
    *(void *)(v0 + 336) = v3;
    char v47 = *(_BYTE *)(v3 + 32);
    *(_BYTE *)(v0 + 370) = v47;
    uint64_t v48 = -1LL;
    uint64_t v49 = -1LL << v47;
    if (-v49 < 64) {
      uint64_t v48 = ~(-1LL << -(char)v49);
    }
    unint64_t v50 = v48 & *(void *)(v3 + 56);
    if (v50)
    {
      uint64_t v51 = 0LL;
      unint64_t v52 = __clz(__rbit64(v50));
      uint64_t v53 = (v50 - 1) & v50;
LABEL_30:
      *(void *)(v0 + 344) = v51;
      *(void *)(v0 + 352) = v53;
      uint64_t v55 = *(void *)(v0 + 200);
      uint64_t v54 = *(void *)(v0 + 208);
      uint64_t v56 = *(void *)(v0 + 192);
      sub_1001A4B84( *(void *)(v3 + 48) + *(void *)(*(void *)(v0 + 184) + 72LL) * v52,  v54,  type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1001A4B40(v54, v55, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v57 = sub_1001A4B84(v55, v56, type metadata accessor for SDAirDropDiscoveredEndpoint);
      unint64_t v58 = (os_log_s *)Logger.logObject.getter(v57);
      os_log_type_t v59 = static os_log_type_t.default.getter();
      BOOL v60 = os_log_type_enabled(v58, v59);
      uint64_t v61 = *(void *)(v0 + 192);
      if (v60)
      {
        unint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v63 = swift_slowAlloc(32LL, -1LL);
        uint64_t v85 = v63;
        *(_DWORD *)unint64_t v62 = 136315138;
        sub_10020E23C();
        uint64_t v65 = (const char *)v64;
        *(void *)(v0 + 136) = sub_10018CDB4(v66, v64, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v62 + 4, v62 + 12);
        swift_bridgeObjectRelease(v65);
        sub_1001A4BC8(v61, type metadata accessor for SDAirDropDiscoveredEndpoint);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Endpoint discovered %s", v62, 0xCu);
        swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v63, -1LL, -1LL);
        swift_slowDealloc(v62, -1LL, -1LL);
      }

      else
      {
        sub_1001A4BC8(*(void *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
      }

      uint64_t v67 = *(void *)(v0 + 224);
      uint64_t v68 = *(void *)(v0 + 232);
      uint64_t v69 = *(void *)(v0 + 160) + *(void *)(v0 + 288);
      sub_1001A4B84(*(void *)(v0 + 200), v67, type metadata accessor for SDAirDropDiscoveredEndpoint);
      swift_beginAccess(v69, v0 + 40, 33LL, 0LL);
      sub_1003B52D4(v68, v67);
      swift_endAccess(v0 + 40);
      sub_1001A4BC8(v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v70 = (void *)swift_task_alloc(dword_10064DBAC);
      *(void *)(v0 + 360) = v70;
      *uint64_t v70 = v0;
      v70[1] = sub_1002ED49C;
      return sub_1002F16D0(*(void *)(v0 + 200), *(_BYTE *)(v0 + 368));
    }

    unint64_t v4 = 63 - v49;
    if (v4 <= 0x7F) {
      goto LABEL_54;
    }
    unint64_t v71 = *(void *)(v3 + 64);
    if (v71)
    {
      uint64_t v51 = 1LL;
LABEL_37:
      uint64_t v53 = (v71 - 1) & v71;
      unint64_t v52 = __clz(__rbit64(v71)) + (v51 << 6);
      goto LABEL_30;
    }

    if (v4 < 0xC0) {
      goto LABEL_54;
    }
    unint64_t v71 = *(void *)(v3 + 72);
    if (v71)
    {
      uint64_t v51 = 2LL;
      goto LABEL_37;
    }

    if (v4 < 0x100) {
      goto LABEL_54;
    }
    unint64_t v71 = *(void *)(v3 + 80);
    if (v71)
    {
      uint64_t v51 = 3LL;
      goto LABEL_37;
    }

    if (v4 < 0x140)
    {
LABEL_54:
      uint64_t v76 = *(void *)(v0 + 248);
      uint64_t v75 = *(void *)(v0 + 256);
      uint64_t v78 = *(void *)(v0 + 232);
      uint64_t v77 = *(void *)(v0 + 240);
      uint64_t v80 = *(void *)(v0 + 216);
      uint64_t v79 = *(void *)(v0 + 224);
      uint64_t v82 = *(void *)(v0 + 200);
      uint64_t v81 = *(void *)(v0 + 208);
      uint64_t v83 = *(void *)(v0 + 192);
      uint64_t v84 = *(void *)(v0 + 168);
      swift_release(v3);
      sub_1002EB7A8();
      swift_task_dealloc(v75);
      swift_task_dealloc(v76);
      swift_task_dealloc(v77);
      swift_task_dealloc(v78);
      swift_task_dealloc(v79);
      swift_task_dealloc(v80);
      swift_task_dealloc(v81);
      swift_task_dealloc(v82);
      swift_task_dealloc(v83);
      swift_task_dealloc(v84);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }

    unint64_t v71 = *(void *)(v3 + 88);
    if (v71)
    {
      uint64_t v51 = 4LL;
      goto LABEL_37;
    }

uint64_t sub_1002ED444()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 328LL));
  return swift_task_switch(sub_1002FC6A0, v1, 0LL);
}

uint64_t sub_1002ED49C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 360LL));
  return swift_task_switch(sub_1002ED4F4, v1, 0LL);
}

uint64_t sub_1002ED4F4()
{
  uint64_t result = sub_1001A4BC8(*(void *)(v0 + 200), type metadata accessor for SDAirDropDiscoveredEndpoint);
  int64_t v2 = *(void *)(v0 + 344);
  unint64_t v3 = *(void *)(v0 + 352);
  if (!v3)
  {
    int64_t v23 = v2 + 1;
    if (__OFADD__(v2, 1LL))
    {
      __break(1u);
    }

    else
    {
      int64_t v24 = (unint64_t)((1LL << *(_BYTE *)(v0 + 370)) + 63) >> 6;
      uint64_t result = *(void *)(v0 + 336);
      if (v23 >= v24) {
        goto LABEL_21;
      }
      uint64_t v25 = result + 56;
      unint64_t v26 = *(void *)(result + 56 + 8 * v23);
      ++v2;
      if (v26)
      {
LABEL_10:
        uint64_t v4 = (v26 - 1) & v26;
        unint64_t v5 = __clz(__rbit64(v26)) + (v2 << 6);
        goto LABEL_3;
      }

      int64_t v2 = v23 + 1;
      if (v23 + 1 >= v24) {
        goto LABEL_21;
      }
      unint64_t v26 = *(void *)(v25 + 8 * v2);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v2 = v23 + 2;
      if (v23 + 2 >= v24) {
        goto LABEL_21;
      }
      unint64_t v26 = *(void *)(v25 + 8 * v2);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v23 + 3;
      if (v27 >= v24)
      {
LABEL_21:
        uint64_t v29 = *(void *)(v0 + 248);
        uint64_t v28 = *(void *)(v0 + 256);
        uint64_t v31 = *(void *)(v0 + 232);
        uint64_t v30 = *(void *)(v0 + 240);
        uint64_t v33 = *(void *)(v0 + 216);
        uint64_t v32 = *(void *)(v0 + 224);
        uint64_t v35 = *(void *)(v0 + 200);
        uint64_t v34 = *(void *)(v0 + 208);
        uint64_t v36 = *(void *)(v0 + 192);
        uint64_t v37 = *(void *)(v0 + 168);
        swift_release(result);
        sub_1002EB7A8();
        swift_task_dealloc(v28);
        swift_task_dealloc(v29);
        swift_task_dealloc(v30);
        swift_task_dealloc(v31);
        swift_task_dealloc(v32);
        swift_task_dealloc(v33);
        swift_task_dealloc(v34);
        swift_task_dealloc(v35);
        swift_task_dealloc(v36);
        swift_task_dealloc(v37);
        return (*(uint64_t (**)(void))(v0 + 8))();
      }

      unint64_t v26 = *(void *)(v25 + 8 * v27);
      if (v26)
      {
        int64_t v2 = v27;
        goto LABEL_10;
      }

      while (1)
      {
        int64_t v2 = v27 + 1;
        if (__OFADD__(v27, 1LL)) {
          break;
        }
        if (v2 >= v24) {
          goto LABEL_21;
        }
        unint64_t v26 = *(void *)(v25 + 8 * v2);
        ++v27;
        if (v26) {
          goto LABEL_10;
        }
      }
    }

    __break(1u);
    return result;
  }

  uint64_t v4 = (v3 - 1) & v3;
  unint64_t v5 = __clz(__rbit64(v3)) | (v2 << 6);
  uint64_t result = *(void *)(v0 + 336);
LABEL_3:
  *(void *)(v0 + 344) = v2;
  *(void *)(v0 + 352) = v4;
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v8 = *(void *)(v0 + 192);
  sub_1001A4B84( *(void *)(result + 48) + *(void *)(*(void *)(v0 + 184) + 72LL) * v5,  v6,  type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4B40(v6, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v9 = sub_1001A4B84(v7, v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 192);
  if (v12)
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = swift_slowAlloc(32LL, -1LL);
    uint64_t v38 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    sub_10020E23C();
    BOOL v17 = (const char *)v16;
    *(void *)(v0 + 136) = sub_10018CDB4(v18, v16, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease(v17);
    sub_1001A4BC8(v13, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Endpoint discovered %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {
    sub_1001A4BC8(*(void *)(v0 + 192), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v19 = *(void *)(v0 + 224);
  uint64_t v20 = *(void *)(v0 + 232);
  uint64_t v21 = *(void *)(v0 + 160) + *(void *)(v0 + 288);
  sub_1001A4B84(*(void *)(v0 + 200), v19, type metadata accessor for SDAirDropDiscoveredEndpoint);
  swift_beginAccess(v21, v0 + 40, 33LL, 0LL);
  sub_1003B52D4(v20, v19);
  swift_endAccess(v0 + 40);
  sub_1001A4BC8(v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v22 = (void *)swift_task_alloc(dword_10064DBAC);
  *(void *)(v0 + 360) = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1002ED49C;
  return sub_1002F16D0(*(void *)(v0 + 200), *(_BYTE *)(v0 + 368));
}

uint64_t sub_1002ED8BC(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v8);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  uint64_t v12 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  swift_beginAccess(a2, v19, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(a2, v13);
  swift_unknownObjectWeakInit(v12 + 16, Strong);

  uint64_t v15 = (void *)swift_allocObject(a3, 48LL, 7LL);
  _OWORD v15[2] = 0LL;
  void v15[3] = 0LL;
  v15[4] = v12;
  v15[5] = a1;
  swift_bridgeObjectRetain(a1);
  uint64_t v16 = sub_1001B3808((uint64_t)v10, a4, (uint64_t)v15);
  return swift_release(v16);
}

uint64_t sub_1002ED9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1002EDA04, 0LL, 0LL);
}

uint64_t sub_1002EDA04()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v4 = (void *)swift_task_alloc(dword_10064DB94);
    *(void *)(v0 + 72) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1002EDAA4;
    return sub_1002EBE9C(*(void *)(v0 + 56), 1);
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002EDAA4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 72LL));

  return swift_task_switch(sub_1002FC6A4, 0LL, 0LL);
}

uint64_t sub_1002EDAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a4;
  uint64_t v5 = sub_100183098(&qword_100646560);
  void v4[7] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  void v4[8] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1002EDB8C, v7, v8);
}

uint64_t sub_1002EDB8C()
{
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064D970);
  unint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting classroom browser", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);

  v6 += 16LL;
  swift_beginAccess(v6, v0 + 16, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v6, v8);
  uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong(v6, v10);
  swift_unknownObjectWeakInit(v0 + 40, v11);

  swift_unknownObjectWeakDestroy(v0 + 40);
  uint64_t v12 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v7, 1LL, 1LL, v12);
  uint64_t v13 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  uint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong(v6, v14);
  swift_unknownObjectWeakInit(v13 + 16, v15);

  uint64_t v16 = qword_100643F28;
  swift_retain(v13);
  if (v16 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v17 = *(void *)(v0 + 56);
  uint64_t v18 = static AirDropActor.shared;
  uint64_t v19 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v20 = (void *)swift_allocObject(&unk_1005D9E40, 56LL, 7LL);
  uint64_t v20[2] = v18;
  v20[3] = v19;
  void v20[5] = 0LL;
  v20[6] = 0LL;
  v20[4] = v13;
  swift_retain(v18);
  swift_release(v13);
  uint64_t v21 = sub_1001B3808(v17, (uint64_t)&unk_10064DB70, (uint64_t)v20);
  swift_release(v21);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EDDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  void v6[8] = a6;
  void v6[5] = a1;
  v6[6] = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002EDE4C, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002EDE4C()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  os_log_type_t v4 = (void *)Strong;
  if (Strong)
  {
    uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    __int128 v6 = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser) = v6;
    swift_unknownObjectRetain(v6);
    swift_unknownObjectRelease(v5);
  }

  **(_BYTE **)(v0 + 40) = v4 == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EDED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[8] = a4;
  uint64_t v5 = sub_100183098(&qword_100646560);
  void v4[9] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  v4[10] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v4[11] = v7;
  v4[12] = v8;
  return swift_task_switch(sub_1002EDF68, v7, v8);
}

uint64_t sub_1002EDF68()
{
  uint64_t v1 = *(void *)(v0 + 64) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 104) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 112) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser;
    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    return swift_task_switch(sub_1002EE164, static AirDropActor.shared, 0LL);
  }

  else
  {
    swift_release(*(void *)(v0 + 80));
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 64) + 16LL;
    uint64_t v7 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v5, 1LL, 1LL, v7);
    uint64_t v8 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
    swift_beginAccess(v6, v0 + 40, 0LL, 0LL);
    uint64_t v10 = (void *)swift_unknownObjectWeakLoadStrong(v6, v9);
    swift_unknownObjectWeakInit(v8 + 16, v10);

    uint64_t v11 = qword_100643F28;
    swift_retain(v8);
    if (v11 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v13 = static AirDropActor.shared;
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v15 = (void *)swift_allocObject(&unk_1005D9DA0, 40LL, 7LL);
    _OWORD v15[2] = v13;
    void v15[3] = v14;
    v15[4] = v8;
    swift_retain(v13);
    swift_release(v8);
    uint64_t v16 = sub_1001B3808(v12, (uint64_t)&unk_10064DB30, (uint64_t)v15);
    swift_release(v16);
    swift_task_dealloc(v12);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002EE164()
{
  uint64_t v1 = (uint64_t *)(v0[13] + v0[14]);
  uint64_t v2 = *v1;
  v0[15] = *v1;
  if (v2)
  {
    v0[16] = v1[1];
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    swift_unknownObjectRetain(v2);
    uint64_t v5 = sub_1002EE1CC;
    uint64_t v6 = v3;
    uint64_t v7 = v4;
  }

  else
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[12];
    uint64_t v5 = sub_1002EE364;
  }

  return swift_task_switch(v5, v6, v7);
}

uint64_t sub_1002EE1CC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 80);

  swift_release(v3);
  uint64_t ObjectType = swift_getObjectType(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
  swift_unknownObjectRelease(v1);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 64) + 16LL;
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v5, 1LL, 1LL, v7);
  uint64_t v8 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  swift_beginAccess(v6, v0 + 40, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v6, v9);
  swift_unknownObjectWeakInit(v8 + 16, Strong);

  uint64_t v11 = qword_100643F28;
  swift_retain(v8);
  if (v11 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = static AirDropActor.shared;
  uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v15 = (void *)swift_allocObject(&unk_1005D9DA0, 40LL, 7LL);
  _OWORD v15[2] = v13;
  void v15[3] = v14;
  v15[4] = v8;
  swift_retain(v13);
  swift_release(v8);
  uint64_t v16 = sub_1001B3808(v12, (uint64_t)&unk_10064DB30, (uint64_t)v15);
  swift_release(v16);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EE364()
{
  uint64_t v1 = *(void *)(v0 + 80);

  swift_release(v1);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 64) + 16LL;
  uint64_t v4 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v2, 1LL, 1LL, v4);
  uint64_t v5 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  swift_beginAccess(v3, v0 + 40, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v3, v6);
  swift_unknownObjectWeakInit(v5 + 16, Strong);

  uint64_t v8 = qword_100643F28;
  swift_retain(v5);
  if (v8 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v10 = static AirDropActor.shared;
  uint64_t v11 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v12 = (void *)swift_allocObject(&unk_1005D9DA0, 40LL, 7LL);
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v5;
  swift_retain(v10);
  swift_release(v5);
  uint64_t v13 = sub_1001B3808(v9, (uint64_t)&unk_10064DB30, (uint64_t)v12);
  swift_release(v13);
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EE4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002EE544, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002EE544()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  uint64_t v4 = (void *)Strong;
  if (Strong)
  {
    uint64_t v5 = (void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_classroomBrowser);
    *uint64_t v5 = 0LL;
    v5[1] = 0LL;
    swift_unknownObjectRelease(v6);
  }

  **(_BYTE **)(v0 + 40) = v4 == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002EE5C4()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (const char **)((char *)&v49 - v6);
  uint64_t v8 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus);
  uint64_t v12 = (const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs);
  *(void *)&double v13 = swift_beginAccess( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_browseClientIDs,  v60,  1LL,  0LL).n128_u64[0];
  unint64_t v50 = v12;
  uint64_t v51 = v0;
  uint64_t v14 = *v12;
  uint64_t v15 = *((void *)*v12 + 7);
  uint64_t v56 = (uint64_t)(*v12 + 56);
  uint64_t v16 = 1LL << v14[32];
  uint64_t v17 = -1LL;
  if (v16 < 64) {
    uint64_t v17 = ~(-1LL << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v57 = (unint64_t)(v16 + 63) >> 6;
  __n128 v19 = swift_bridgeObjectRetain_n(v14, 2LL);
  int64_t v20 = 0LL;
  v19.n128_u64[0] = 136315138LL;
  __n128 v53 = v19;
  unint64_t v52 = (char *)&type metadata for Any + 8;
  uint64_t v54 = v7;
  uint64_t v55 = v10;
  while (1)
  {
    if (v18)
    {
      unint64_t v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_29;
    }

    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1LL))
    {
      __break(1u);
      goto LABEL_41;
    }

    if (v24 >= v57) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v56 + 8 * v24);
    ++v20;
    if (v25) {
      goto LABEL_28;
    }
    int64_t v20 = v24 + 1;
    if (v24 + 1 >= v57) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v56 + 8 * v20);
    if (v25) {
      goto LABEL_28;
    }
    int64_t v20 = v24 + 2;
    if (v24 + 2 >= v57) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v56 + 8 * v20);
    if (v25) {
      goto LABEL_28;
    }
    int64_t v20 = v24 + 3;
    if (v24 + 3 >= v57) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v56 + 8 * v20);
    if (v25) {
      goto LABEL_28;
    }
    int64_t v20 = v24 + 4;
    if (v24 + 4 >= v57) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v56 + 8 * v20);
    if (v25) {
      goto LABEL_28;
    }
    int64_t v26 = v24 + 5;
    if (v26 >= v57)
    {
LABEL_34:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1LL, 1LL, v1);
LABEL_35:
      swift_release(v14);
      swift_bridgeObjectRelease(v14);
      uint64_t v7 = v50;
      if (qword_100644138 == -1)
      {
LABEL_36:
        uint64_t v43 = type metadata accessor for Logger(0LL);
        uint64_t v44 = sub_100186DE4(v43, (uint64_t)qword_10064D970);
        int64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
        os_log_type_t v46 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v45, v46))
        {
          char v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)char v47 = 0;
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "Removing delinquent browsers", v47, 2u);
          swift_slowDealloc(v47, -1LL, -1LL);
        }

        uint64_t v48 = *v7;
        *uint64_t v7 = (const char *)&_swiftEmptySetSingleton;
        swift_bridgeObjectRelease(v48);
        sub_1002E8668();
        return;
      }

uint64_t sub_1002EEB54()
{
  uint64_t v87 = type metadata accessor for UUID(0LL);
  BOOL v89 = *(uint8_t **)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v2 = (char *)&v82 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = type metadata accessor for NWEndpoint(0LL);
  os_log_type_t v88 = *(uint8_t **)(v90 - 8);
  uint64_t v3 = __chkstk_darwin(v90);
  uint64_t v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (uint64_t *)((char *)&v82 - v6);
  uint64_t v8 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered];
  swift_beginAccess(&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered], v95, 0LL, 0LL);
  uint64_t v9 = *(void *)v8;
  uint64_t v10 = v0;
  uint64_t v11 = swift_bridgeObjectRetain(v9);
  uint64_t v12 = sub_1002FB2D4(v11, (uint64_t)v10);

  v94[0] = v12;
  swift_bridgeObjectRetain(v12);
  sub_1002F988C(v94);
  uint64_t v86 = v8;
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = v94[0];
  v93[0] = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(v94[0] + 16LL);
  if (v14)
  {
    uint64_t v84 = 0LL;
    uint64_t v85 = v10;
    uint64_t v15 = &v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_sessionID];
    uint64_t v16 = v10;
    swift_retain(v13);
    swift_beginAccess(v15, v94, 0LL, 0LL);
    uint64_t v83 = v13;
    uint64_t v17 = (uint64_t *)(v13 + 72);
    do
    {
      uint64_t v19 = *(v17 - 2);
      uint64_t v20 = *v17;
      sub_10019A708(v17 - 5, v19);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      uint64_t v21 = v89;
      uint64_t v22 = v87;
      (*((void (**)(char *, char *, uint64_t))v89 + 2))(v2, v15, v87);
      sub_100412060((uint64_t)v2, v7);
      (*((void (**)(char *, uint64_t))v21 + 1))(v2, v22);
      unint64_t v23 = (uint64_t (*)(char *, uint64_t))*((void *)v88 + 1);
      uint64_t v24 = v90;
      uint64_t v25 = v23(v5, v90);
      uint64_t v26 = NWEndpoint.nw.getter(v25);
      uint64_t v27 = v23((char *)v7, v24);
      if (v26)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        unint64_t v29 = *(void *)((v93[0] & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v28 = *(void *)((v93[0] & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v29 >= v28 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
        }
        uint64_t v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v26);
        specialized Array._endMutation()(v18);
      }

      v17 += 6;
      --v14;
    }

    while (v14);
    uint64_t v13 = v83;
    swift_release(v83);
    uint64_t v30 = (void *)v93[0];
    uint64_t v10 = v85;
  }

  else
  {
    os_log_type_t v31 = v10;
    uint64_t v30 = _swiftEmptyArrayStorage;
  }

  swift_release(v13);

  uint64_t v32 = &v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables];
  swift_beginAccess( &v10[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_receivingDisplayables],  v93,  0LL,  0LL);
  uint64_t v33 = *(void *)v32;
  uint64_t v34 = swift_bridgeObjectRetain(*(void *)v32);
  uint64_t v35 = sub_1002E5E44(v34);
  swift_bridgeObjectRelease(v33);
  uint64_t v92 = v30;
  swift_bridgeObjectRetain(v35);
  sub_10028A610(v35);
  uint64_t v36 = (uint64_t)v92;
  if ((unint64_t)v35 >> 62)
  {
    if (v35 < 0) {
      uint64_t v81 = v35;
    }
    else {
      uint64_t v81 = v35 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v35);
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease(v35);
  }

  else
  {
    uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v35);
  unint64_t v38 = &qword_100644000;
  if (v37)
  {
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v39 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v39, (uint64_t)qword_10064D970);
    __n128 v40 = v10;
    uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v44 = swift_slowAlloc(32LL, -1LL);
      BOOL v89 = (uint8_t *)v36;
      uint64_t v45 = v44;
      uint64_t v92 = (void *)v44;
      *(_DWORD *)uint64_t v43 = 136315138;
      os_log_type_t v88 = v43 + 4;
      uint64_t v46 = *(void *)v32;
      char v47 = v10;
      uint64_t v48 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v49 = sub_100183F14( &qword_100646250,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      uint64_t v50 = swift_bridgeObjectRetain(v46);
      uint64_t v51 = v48;
      uint64_t v10 = v47;
      uint64_t v52 = Dictionary.Values.description.getter(v50, v51, v90, v49);
      unint64_t v54 = v53;
      swift_bridgeObjectRelease(v46);
      uint64_t v55 = v52;
      unint64_t v38 = &qword_100644000;
      uint64_t v91 = sub_10018CDB4(v55, v54, (uint64_t *)&v92);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v88, v43 + 12);

      swift_bridgeObjectRelease(v54);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Additional receive display endpoints %s", v43, 0xCu);
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v56 = v45;
      uint64_t v36 = (uint64_t)v89;
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);
    }

    else
    {
    }
  }

  if (v38[39] != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v57 = type metadata accessor for Logger(0LL);
  uint64_t v58 = sub_100186DE4(v57, (uint64_t)qword_10064D970);
  uint64_t v59 = v10;
  uint64_t v90 = v58;
  BOOL v60 = (os_log_s *)Logger.logObject.getter(v59);
  os_log_type_t v61 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v60, v61))
  {
    unint64_t v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v63 = swift_slowAlloc(32LL, -1LL);
    uint64_t v92 = (void *)v63;
    *(_DWORD *)unint64_t v62 = 136315138;
    BOOL v89 = v62 + 4;
    uint64_t v64 = v36;
    uint64_t v65 = *(void *)v86;
    swift_bridgeObjectRetain(*(void *)v86);
    uint64_t v66 = sub_100183098(&qword_100645200);
    uint64_t v67 = Dictionary.description.getter(v65, &type metadata for String, v66, &protocol witness table for String);
    unint64_t v69 = v68;
    uint64_t v70 = v65;
    uint64_t v36 = v64;
    swift_bridgeObjectRelease(v70);
    uint64_t v91 = sub_10018CDB4(v67, v69, (uint64_t *)&v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v89, v62 + 12);

    swift_bridgeObjectRelease(v69);
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "All unfiltered endpoints: %s", v62, 0xCu);
    swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1LL, -1LL);
    swift_slowDealloc(v62, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v71 = swift_bridgeObjectRetain_n(v36, 2LL);
  uint64_t v72 = (os_log_s *)Logger.logObject.getter(v71);
  os_log_type_t v73 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v75 = swift_slowAlloc(32LL, -1LL);
    uint64_t v92 = (void *)v75;
    *(_DWORD *)uint64_t v74 = 136315138;
    swift_bridgeObjectRetain(v36);
    uint64_t v76 = sub_100183098(&qword_10064B780);
    uint64_t v77 = Array.description.getter(v36, v76);
    unint64_t v79 = v78;
    swift_bridgeObjectRelease(v36);
    uint64_t v91 = sub_10018CDB4(v77, v79, (uint64_t *)&v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v74 + 4, v74 + 12);
    swift_bridgeObjectRelease_n(v36, 2LL);
    swift_bridgeObjectRelease(v79);
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "Returning validated endpoints: %s", v74, 0xCu);
    swift_arrayDestroy(v75, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v75, -1LL, -1LL);
    swift_slowDealloc(v74, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v36, 2LL);
  }

  return v36;
}

uint64_t sub_1002EF374(uint64_t a1, char a2)
{
  *(void *)(v3 + 752) = v2;
  *(_BYTE *)(v3 + 872) = a2;
  *(void *)(v3 + 744) = a1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  *(void *)(v3 + 760) = v4;
  unint64_t v5 = (*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v3 + 768) = swift_task_alloc(v5);
  *(void *)(v3 + 776) = swift_task_alloc(v5);
  *(void *)(v3 + 784) = swift_task_alloc(v5);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  *(void *)(v3 + 792) = static AirDropActor.shared;
  return swift_task_switch(sub_1002EF428, v6, 0LL);
}

uint64_t sub_1002EF428()
{
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v1 = v0 + 472;
  uint64_t v2 = *(void *)(v0 + 784);
  uint64_t v3 = *(void *)(v0 + 744);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_10064D970);
  uint64_t v5 = sub_1001A4B84(v3, v2, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 784);
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v99 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_10020E23C();
    uint64_t v13 = (const char *)v12;
    *(void *)(v0 + 736) = sub_10018CDB4(v14, v12, (uint64_t *)&v99);
    uint64_t v1 = v0 + 472;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v13);
    sub_1001A4BC8(v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Updating discovered endpoint: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    sub_1001A4BC8(v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + swift_weakDestroy(v0 + 16) = 0u;
  *(void *)(v1 + 32) = 0LL;
  sub_10020F0E4();
  uint64_t v17 = qword_10064D000;
  if (v16)
  {
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    uint64_t v20 = (uint64_t *)(*(void *)(v0 + 752) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
    swift_beginAccess(v20, v0 + 664, 32LL, 0LL);
    uint64_t v21 = *v20;
    if (!*(void *)(v21 + 16) || (uint64_t v22 = sub_1003AD53C(v18, (uint64_t)v19), (v23 & 1) == 0))
    {
      swift_endAccess(v0 + 664);
      swift_bridgeObjectRelease(v19);
      goto LABEL_14;
    }

    uint64_t v24 = *(void *)(v0 + 752);
    sub_1002499DC(*(void *)(v21 + 56) + 48 * v22, v0 + 64);
    sub_1001CCE4C((__int128 *)(v0 + 64), (_OWORD *)(v0 + 160));
    swift_endAccess(v0 + 664);
    id v25 =  [*(id *)(v24 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) meCard];
    if (v25)
    {
      uint64_t v26 = v25;
      id v27 = [v25 identifier];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
      uint64_t v30 = v29;

      if (v18 == v28 && v19 == v30)
      {
        swift_bridgeObjectRelease(v30);

        swift_bridgeObjectRelease(v19);
LABEL_47:
        sub_10018709C((void *)(v0 + 160));
        uint64_t v17 = qword_10064D000;
        goto LABEL_14;
      }

      char v95 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v28, v30, 0LL);
      swift_bridgeObjectRelease(v30);

      swift_bridgeObjectRelease(v19);
      if ((v95 & 1) != 0) {
        goto LABEL_47;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v19);
    }

    uint64_t v39 = *(void *)(v0 + 184);
    uint64_t v40 = *(void *)(v0 + 192);
    sub_10019A708((void *)(v0 + 160), v39);
    uint64_t v96 = *(int **)(v40 + 48);
    uint64_t v98 = (int *)((char *)v96 + *v96);
    os_log_type_t v42 = (void *)swift_task_alloc(v96[1]);
    *(void *)(v0 + 800) = v42;
    uint64_t v43 = sub_1002EFD6C;
    goto LABEL_49;
  }

uint64_t sub_1002EFD6C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 800));
  uint64_t v3 = (void *)swift_task_alloc(dword_10064DBCC);
  *(void *)(v1 + 808) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1002EFDE4;
  return sub_1002F2B84(v1 + 160, *(void *)(v1 + 744));
}

uint64_t sub_1002EFDE4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 792LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 808LL));
  return swift_task_switch(sub_1002EFE3C, v1, 0LL);
}

uint64_t sub_1002EFE3C()
{
  __int128 v8 = *(_OWORD *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = sub_10019A708((void *)(v0 + 160), v1);
  *(_OWORD *)(v0 + 456) = v8;
  uint64_t v3 = sub_1001A4B04((void *)(v0 + 432));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v1 - 8) + 16LL))(v3, v2, v1);
  sub_100187100(v0 + 472, &qword_10064DBB0);
  sub_1001870BC(v0 + 432, v0 + 472, &qword_10064DBB0);
  sub_10018709C((void *)(v0 + 160));
  if (*(_BYTE *)(v0 + 872) == 1)
  {
    sub_1001915A4(v0 + 472, v0 + 552, &qword_10064DBB0);
    if (!*(void *)(v0 + 576))
    {
      sub_100187100(v0 + 472, &qword_10064DBB0);
      uint64_t v4 = v0 + 552;
      goto LABEL_6;
    }

    sub_1001CE0D0((__int128 *)(v0 + 552), v0 + 512);
    sub_1002F2D4C((void *)(v0 + 512));
    sub_10018709C((void *)(v0 + 512));
  }

  uint64_t v4 = v0 + 472;
LABEL_6:
  sub_100187100(v4, &qword_10064DBB0);
  uint64_t v5 = *(void *)(v0 + 776);
  uint64_t v6 = *(void *)(v0 + 768);
  swift_task_dealloc(*(void *)(v0 + 784));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002EFF98()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 816));
  uint64_t v3 = (void *)swift_task_alloc(dword_10064DBCC);
  *(void *)(v1 + 824) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1002F0010;
  return sub_1002F2B84(v1 + 256, *(void *)(v1 + 744));
}

uint64_t sub_1002F0010()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 792LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 824LL));
  return swift_task_switch(sub_1002F0068, v1, 0LL);
}

uint64_t sub_1002F0068()
{
  __int128 v8 = *(_OWORD *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = sub_10019A708((void *)(v0 + 256), v1);
  *(_OWORD *)(v0 + 4swift_weakDestroy(v0 + 16) = v8;
  uint64_t v3 = sub_1001A4B04((void *)(v0 + 392));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v1 - 8) + 16LL))(v3, v2, v1);
  sub_100187100(v0 + 472, &qword_10064DBB0);
  sub_1001870BC(v0 + 392, v0 + 472, &qword_10064DBB0);
  sub_10018709C((void *)(v0 + 256));
  if (*(_BYTE *)(v0 + 872) == 1)
  {
    sub_1001915A4(v0 + 472, v0 + 552, &qword_10064DBB0);
    if (!*(void *)(v0 + 576))
    {
      sub_100187100(v0 + 472, &qword_10064DBB0);
      uint64_t v4 = v0 + 552;
      goto LABEL_6;
    }

    sub_1001CE0D0((__int128 *)(v0 + 552), v0 + 512);
    sub_1002F2D4C((void *)(v0 + 512));
    sub_10018709C((void *)(v0 + 512));
  }

  uint64_t v4 = v0 + 472;
LABEL_6:
  sub_100187100(v4, &qword_10064DBB0);
  uint64_t v5 = *(void *)(v0 + 776);
  uint64_t v6 = *(void *)(v0 + 768);
  swift_task_dealloc(*(void *)(v0 + 784));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F01BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 792LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 864LL));
  return swift_task_switch(sub_1002F0214, v1, 0LL);
}

uint64_t sub_1002F0214()
{
  unint64_t v1 = *(void *)(v0 + 856);
  uint64_t v2 = *(void *)(v0 + 848);
  uint64_t v3 = *(const char **)(v0 + 840);
  *(void *)&double v4 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 832)).n128_u64[0];
  swift_bridgeObjectRelease(v3, v4);
  sub_100189B0C(v2, v1);
  sub_10018709C((void *)(v0 + 304));
  if (*(_BYTE *)(v0 + 872) == 1)
  {
    sub_1001915A4(v0 + 472, v0 + 552, &qword_10064DBB0);
    if (!*(void *)(v0 + 576))
    {
      sub_100187100(v0 + 472, &qword_10064DBB0);
      uint64_t v5 = v0 + 552;
      goto LABEL_6;
    }

    sub_1001CE0D0((__int128 *)(v0 + 552), v0 + 512);
    sub_1002F2D4C((void *)(v0 + 512));
    sub_10018709C((void *)(v0 + 512));
  }

  uint64_t v5 = v0 + 472;
LABEL_6:
  sub_100187100(v5, &qword_10064DBB0);
  uint64_t v6 = *(void *)(v0 + 776);
  uint64_t v7 = *(void *)(v0 + 768);
  swift_task_dealloc(*(void *)(v0 + 784));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F0324(uint64_t a1)
{
  v2[88] = v1;
  v2[87] = a1;
  uint64_t v3 = type metadata accessor for UUID(0LL);
  v2[89] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[90] = v4;
  v2[91] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[92] = v5;
  unint64_t v6 = (*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[93] = swift_task_alloc(v6);
  v2[94] = swift_task_alloc(v6);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v2[95] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F03F0, v7, 0LL);
}

uint64_t sub_1002F03F0()
{
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 696);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  *(void *)(v0 + 768) = sub_100186DE4(v3, (uint64_t)qword_10064D970);
  uint64_t v4 = sub_1001A4B84(v2, v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 752);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    *(void *)&v104[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_10020E23C();
    unint64_t v12 = (const char *)v11;
    *(void *)(v0 + 688) = sub_10018CDB4(v13, v11, (uint64_t *)v104);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 688, v0 + 696, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v12);
    sub_1001A4BC8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Removing discovered endpoint: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
    sub_1001A4BC8(v8, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  sub_10020F0E4();
  *(void *)(v0 + 776) = v14;
  *(void *)(v0 + 784) = v15;
  if (v15)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    uint64_t v18 = (_OWORD *)(v0 + 64);
    uint64_t v19 = *(void *)(v0 + 704);
    uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 792) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    uint64_t v21 = (uint64_t *)(v19 + v20);
    *(void *)&double v22 = swift_beginAccess(v19 + v20, v0 + 592, 32LL, 0LL).n128_u64[0];
    uint64_t v23 = *v21;
    if (*(void *)(v23 + 16))
    {
      swift_bridgeObjectRetain(v17, v22);
      uint64_t v24 = sub_1003AD53C(v16, (uint64_t)v17);
      if ((v25 & 1) != 0)
      {
        sub_1002499DC(*(void *)(v23 + 56) + 48 * v24, v0 + 64);
      }

      else
      {
        *(_OWORD *)(v0 + 80) = 0u;
        *(_OWORD *)(v0 + 96) = 0u;
        *uint64_t v18 = 0u;
      }

      swift_bridgeObjectRelease(v17);
      if (*(void *)(v0 + 88))
      {
        uint64_t v26 = *(void *)(v0 + 704);
        sub_1001CCE4C((__int128 *)(v0 + 64), (_OWORD *)(v0 + 160));
        swift_endAccess(v0 + 592);
        id v27 =  [*(id *)(v26 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) meCard];
        if (v27)
        {
          uint64_t v28 = v27;
          id v29 = [v27 identifier];
          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          uint64_t v32 = v31;

          if (v16 == v30 && v17 == v32)
          {
            swift_bridgeObjectRelease(v32);

LABEL_19:
            swift_bridgeObjectRelease(v17);
            sub_10018709C((void *)(v0 + 160));
            goto LABEL_20;
          }

          char v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v30, v32, 0LL);
          swift_bridgeObjectRelease(v32);

          if ((v33 & 1) != 0) {
            goto LABEL_19;
          }
        }

        uint64_t v46 = *(void *)(v0 + 184);
        uint64_t v47 = *(void *)(v0 + 192);
        sub_10019A708((void *)(v0 + 160), v46);
        unint64_t v68 = *(int **)(v47 + 56);
        uint64_t v103 = (int *)((char *)v68 + *v68);
        uint64_t v49 = (void *)swift_task_alloc(v68[1]);
        *(void *)(v0 + 800) = v49;
        uint64_t v50 = sub_1002F0CE0;
        goto LABEL_39;
      }
    }

    else
    {
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
      *uint64_t v18 = 0u;
    }

    sub_100187100(v0 + 64, &qword_10064DA48);
    swift_endAccess(v0 + 592);
    swift_bridgeObjectRelease(v17);
  }

uint64_t sub_1002F0CE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 760LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 800LL));
  return swift_task_switch(sub_1002F0D38, v1, 0LL);
}

uint64_t sub_1002F0D38()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  sub_10019A708(v0 + 20, v1);
  uint64_t v3 = *(int **)(v2 + 40);
  os_log_type_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  uint64_t v4 = (void *)swift_task_alloc(v3[1]);
  v0[101] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002F0DB0;
  return v6(v1, v2);
}

uint64_t sub_1002F0DB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 808LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 760LL);
  *(void *)(*(void *)v1 + 816LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F0E10, v3, 0LL);
}

uint64_t sub_1002F0E10()
{
  uint64_t v1 = *(void *)(v0 + 816);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 784), v3);
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 728);
    uint64_t v5 = *(void *)(v0 + 720);
    uint64_t v6 = *(void *)(v0 + 712);
    swift_beginAccess(v7, v0 + 640, 0LL, 0LL);
    uint64_t v8 = *v7;
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    sub_10019A708((void *)(v0 + 160), v9);
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 32);
    __n128 v12 = swift_bridgeObjectRetain(v8);
    v11(v9, v10, v12);
    LOBYTE(v7) = sub_1003A036C(v4, (uint64_t)v8);
    __n128 v13 = swift_bridgeObjectRelease(v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v13);
    if ((v7 & 1) != 0)
    {
      swift_bridgeObjectRelease(*(const char **)(v0 + 784));
      uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "Skipping remove from allDiscovered endpoints because it's in a transfer",  v17,  2u);
        swift_slowDealloc(v17, -1LL, -1LL);
      }
    }

    else
    {
      uint64_t v18 = *(void *)(v0 + 784);
      uint64_t v19 = *(void *)(v0 + 776);
      uint64_t v20 = *(void *)(v0 + 704) + *(void *)(v0 + 792);
      memset(v24, 0, sizeof(v24));
      swift_beginAccess(v20, v0 + 664, 33LL, 0LL);
      sub_1002E5104((uint64_t)v24, v19, v18);
      swift_endAccess(v0 + 664);
    }
  }

  sub_10018709C((void *)(v0 + 160));
  uint64_t v21 = *(void *)(v0 + 744);
  uint64_t v22 = *(void *)(v0 + 728);
  swift_task_dealloc(*(void *)(v0 + 752));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F1000()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 760LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 848LL));
  return swift_task_switch(sub_1002F1058, v1, 0LL);
}

uint64_t sub_1002F1058()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[42];
  sub_10019A708(v0 + 38, v1);
  double v3 = *(int **)(v2 + 40);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  uint64_t v4 = (void *)swift_task_alloc(v3[1]);
  v0[107] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002F10D0;
  return v6(v1, v2);
}

uint64_t sub_1002F10D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 856LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 760LL);
  *(void *)(*(void *)v1 + 864LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F1130, v3, 0LL);
}

uint64_t sub_1002F1130()
{
  uint64_t v1 = *(void *)(v0 + 864);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
  if (v2)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 832), v3);
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 728);
    uint64_t v5 = *(void *)(v0 + 720);
    uint64_t v6 = *(void *)(v0 + 712);
    swift_beginAccess(v7, v0 + 520, 0LL, 0LL);
    uint64_t v8 = *v7;
    uint64_t v9 = *(void *)(v0 + 328);
    uint64_t v10 = *(void *)(v0 + 336);
    sub_10019A708((void *)(v0 + 304), v9);
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, __n128))(v10 + 32);
    __n128 v12 = swift_bridgeObjectRetain(v8);
    v11(v9, v10, v12);
    LOBYTE(v7) = sub_1003A036C(v4, (uint64_t)v8);
    __n128 v13 = swift_bridgeObjectRelease(v8);
    (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v4, v6, v13);
    if ((v7 & 1) != 0)
    {
      swift_bridgeObjectRelease(*(const char **)(v0 + 832));
      uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "Skipping remove from allDiscovered endpoints because it's in a transfer",  v17,  2u);
        swift_slowDealloc(v17, -1LL, -1LL);
      }
    }

    else
    {
      uint64_t v18 = *(void *)(v0 + 832);
      uint64_t v19 = *(void *)(v0 + 824);
      uint64_t v20 = *(void *)(v0 + 704) + *(void *)(v0 + 840);
      memset(v24, 0, sizeof(v24));
      swift_beginAccess(v20, v0 + 544, 33LL, 0LL);
      sub_1002E5104((uint64_t)v24, v19, v18);
      swift_endAccess(v0 + 544);
    }
  }

  sub_10018709C((void *)(v0 + 304));
  uint64_t v21 = *(void *)(v0 + 744);
  uint64_t v22 = *(void *)(v0 + 728);
  swift_task_dealloc(*(void *)(v0 + 752));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F1320()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 760LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 920LL));
  return swift_task_switch(sub_1002F1378, v1, 0LL);
}

uint64_t sub_1002F1378()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[36];
  sub_10019A708(v0 + 32, v1);
  double v3 = *(int **)(v2 + 40);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  uint64_t v4 = (void *)swift_task_alloc(v3[1]);
  v0[116] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002F13F0;
  return v6(v1, v2);
}

uint64_t sub_1002F13F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 928LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 760LL);
  *(void *)(*(void *)v1 + 936LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F1450, v3, 0LL);
}

uint64_t sub_1002F1450()
{
  uint64_t v1 = *(void *)(v0 + 936);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
  if (v2)
  {
    unint64_t v4 = *(void *)(v0 + 904);
    uint64_t v5 = *(void *)(v0 + 896);
    uint64_t v6 = *(const char **)(v0 + 888);
    *(void *)&double v7 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 880), v3).n128_u64[0];
    swift_bridgeObjectRelease(v6, v7);
    uint64_t v8 = v5;
    unint64_t v9 = v4;
  }

  else
  {
    uint64_t v10 = *(void *)(v0 + 728);
    uint64_t v11 = *(void *)(v0 + 720);
    uint64_t v12 = *(void *)(v0 + 712);
    swift_beginAccess(v13, v0 + 400, 0LL, 0LL);
    uint64_t v14 = *v13;
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 288);
    sub_10019A708((void *)(v0 + 256), v15);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 32);
    __n128 v18 = swift_bridgeObjectRetain(v14);
    v17(v15, v16, v18);
    LOBYTE(v13) = sub_1003A036C(v10, (uint64_t)v14);
    __n128 v19 = swift_bridgeObjectRelease(v14);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v11 + 8))(v10, v12, v19);
    if ((v13 & 1) != 0)
    {
      uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
      os_log_type_t v22 = static os_log_type_t.default.getter();
      BOOL v23 = os_log_type_enabled(v21, v22);
      unint64_t v24 = *(void *)(v0 + 904);
      uint64_t v25 = *(void *)(v0 + 896);
      uint64_t v26 = *(const char **)(v0 + 888);
      id v27 = *(const char **)(v0 + 880);
      if (!v23)
      {
        *(void *)&double v40 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 880)).n128_u64[0];
        swift_bridgeObjectRelease(v26, v40);
        sub_100189B0C(v25, v24);

        goto LABEL_8;
      }

      uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v21,  v22,  "Skipping remove from allDiscovered endpoints because it's in a transfer",  v28,  2u);
      swift_slowDealloc(v28, -1LL, -1LL);

      *(void *)&double v29 = swift_bridgeObjectRelease(v27).n128_u64[0];
      swift_bridgeObjectRelease(v26, v29);
      uint64_t v8 = v25;
      unint64_t v9 = v24;
    }

    else
    {
      unint64_t v30 = *(void *)(v0 + 904);
      uint64_t v31 = *(void *)(v0 + 896);
      uint64_t v32 = *(const char **)(v0 + 888);
      char v33 = *(const char **)(v0 + 880);
      uint64_t v34 = *(void *)(v0 + 872);
      *(void *)&double v35 = swift_beginAccess(*(void *)(v0 + 704) + *(void *)(v0 + 912), v0 + 424, 33LL, 0LL).n128_u64[0];
      swift_bridgeObjectRetain(v33, v35, (unsigned __int128)0, (unsigned __int128)0, (unsigned __int128)0);
      sub_1002E5104((uint64_t)&v41, v34, (uint64_t)v33);
      swift_endAccess(v0 + 424);
      *(void *)&double v36 = swift_bridgeObjectRelease(v33).n128_u64[0];
      swift_bridgeObjectRelease(v32, v36);
      uint64_t v8 = v31;
      unint64_t v9 = v30;
    }
  }

  sub_100189B0C(v8, v9);
LABEL_8:
  sub_10018709C((void *)(v0 + 256));
  uint64_t v37 = *(void *)(v0 + 744);
  uint64_t v38 = *(void *)(v0 + 728);
  swift_task_dealloc(*(void *)(v0 + 752));
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F16D0(uint64_t a1, char a2)
{
  *(void *)(v3 + 1064) = v2;
  *(_BYTE *)(v3 + 1256) = a2;
  *(void *)(v3 + 1056) = a1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  *(void *)(v3 + 1072) = v4;
  unint64_t v5 = (*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v3 + 1080) = swift_task_alloc(v5);
  *(void *)(v3 + 1088) = swift_task_alloc(v5);
  *(void *)(v3 + 1096) = swift_task_alloc(v5);
  *(void *)(v3 + 1104) = swift_task_alloc(v5);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  *(void *)(v3 + 1112) = static AirDropActor.shared;
  return swift_task_switch(sub_1002F1790, v6, 0LL);
}

uint64_t sub_1002F1790()
{
  id v1 =  [*(id *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_nearbyAgent) idSelfIdentity];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 idsDeviceID];

    if (v3)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
      uint64_t v6 = v5;

      sub_10020EEE0();
      if (v8)
      {
        unint64_t v9 = v8;
        if (v4 == v7 && v8 == v6)
        {
          *(void *)&double v72 = swift_bridgeObjectRelease(v8).n128_u64[0];
          swift_bridgeObjectRelease(v6, v72);
LABEL_36:
          if (qword_100644138 != -1) {
            swift_once(&qword_100644138, sub_1002E9860);
          }
          uint64_t v73 = *(void *)(v0 + 1104);
          uint64_t v74 = *(void *)(v0 + 1056);
          uint64_t v75 = type metadata accessor for Logger(0LL);
          sub_100186DE4(v75, (uint64_t)qword_10064D970);
          uint64_t v76 = sub_1001A4B84(v74, v73, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
          os_log_type_t v78 = static os_log_type_t.default.getter();
          BOOL v79 = os_log_type_enabled(v77, v78);
          uint64_t v80 = *(void *)(v0 + 1104);
          if (v79)
          {
            uint64_t v81 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
            uint64_t v82 = swift_slowAlloc(32LL, -1LL);
            v118[0] = v82;
            *(_DWORD *)uint64_t v81 = 136315138;
            sub_10020E23C();
            uint64_t v84 = (const char *)v83;
            *(void *)(v0 + 1048) = sub_10018CDB4(v85, v83, v118);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1048, v0 + 1056, v81 + 4, v81 + 12);
            swift_bridgeObjectRelease(v84);
            sub_1001A4BC8(v80, type metadata accessor for SDAirDropDiscoveredEndpoint);
            _os_log_impl( (void *)&_mh_execute_header,  v77,  v78,  "Discovered endpoint is current device, ignoring %s",  v81,  0xCu);
            swift_arrayDestroy(v82, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v82, -1LL, -1LL);
            swift_slowDealloc(v81, -1LL, -1LL);
          }

          else
          {
            sub_1001A4BC8(*(void *)(v0 + 1104), type metadata accessor for SDAirDropDiscoveredEndpoint);
          }

          goto LABEL_55;
        }

        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0LL);
        *(void *)&double v12 = swift_bridgeObjectRelease(v9).n128_u64[0];
        swift_bridgeObjectRelease(v6, v12);
        if ((v11 & 1) != 0) {
          goto LABEL_36;
        }
      }

      else
      {
        swift_bridgeObjectRelease(v6);
      }
    }
  }

  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v13 = v0 + 672;
  uint64_t v14 = *(void *)(v0 + 1096);
  uint64_t v15 = *(void *)(v0 + 1056);
  uint64_t v16 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v16, (uint64_t)qword_10064D970);
  uint64_t v17 = sub_1001A4B84(v15, v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  __n128 v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = *(void *)(v0 + 1096);
  if (v20)
  {
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    v118[0] = v23;
    *(_DWORD *)os_log_type_t v22 = 136315138;
    sub_10020E23C();
    uint64_t v25 = (const char *)v24;
    *(void *)(v0 + 1040) = sub_10018CDB4(v26, v24, v118);
    uint64_t v13 = v0 + 672;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1040, v0 + 1048, v22 + 4, v22 + 12);
    swift_bridgeObjectRelease(v25);
    sub_1001A4BC8(v21, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Adding discovered endpoint: %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
    sub_1001A4BC8(*(void *)(v0 + 1096), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + swift_weakDestroy(v0 + 16) = 0u;
  *(void *)(v13 + 32) = 0LL;
  sub_10020F0E4();
  *(void *)(v0 + 1120) = v27;
  *(void *)(v0 + 1128) = v28;
  if (v28)
  {
    uint64_t v29 = v27;
    unint64_t v30 = v28;
    id v31 =  [*(id *)(*(void *)(v0 + 1064) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus) meCard];
    if (v31)
    {
      uint64_t v32 = v31;
      id v33 = [v31 identifier];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      double v36 = v35;

      if (v29 == v34 && v30 == v36)
      {
        swift_bridgeObjectRelease(v36);

LABEL_22:
        swift_bridgeObjectRelease(v30);
        goto LABEL_23;
      }

      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v34, v36, 0LL);
      swift_bridgeObjectRelease(v36);

      if ((v37 & 1) != 0) {
        goto LABEL_22;
      }
    }

    uint64_t v50 = (_OWORD *)(v0 + 160);
    uint64_t v51 = *(void *)(v0 + 1064);
    uint64_t v52 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    *(void *)(v0 + 1136) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered;
    unint64_t v53 = (uint64_t *)(v51 + v52);
    *(void *)&double v54 = swift_beginAccess(v51 + v52, v0 + 896, 32LL, 0LL).n128_u64[0];
    uint64_t v55 = *v53;
    if (*(void *)(v55 + 16))
    {
      swift_bridgeObjectRetain(v30, v54);
      uint64_t v56 = sub_1003AD53C(v29, (uint64_t)v30);
      if ((v57 & 1) != 0)
      {
        sub_1002499DC(*(void *)(v55 + 56) + 48 * v56, v0 + 160);
      }

      else
      {
        *(_OWORD *)(v0 + 176) = 0u;
        *(_OWORD *)(v0 + 192) = 0u;
        *uint64_t v50 = 0u;
      }
    }

    else
    {
      *(_OWORD *)(v0 + 176) = 0u;
      *(_OWORD *)(v0 + 192) = 0u;
      *uint64_t v50 = 0u;
      swift_bridgeObjectRetain(v30);
    }

    sub_1001870BC(v0 + 160, v0 + 112, &qword_10064DA48);
    if (*(void *)(v0 + 136))
    {
      sub_1001CCE4C((__int128 *)(v0 + 112), (_OWORD *)(v0 + 208));
    }

    else
    {
      uint64_t v111 = type metadata accessor for SDAirDropDiscoveredPerson(0LL);
      swift_allocObject(v111, *(unsigned int *)(v111 + 48), *(unsigned __int16 *)(v111 + 52));
      swift_bridgeObjectRetain(v30);
      uint64_t v112 = sub_10028D248(v29, v30);
      *(void *)(v0 + 232) = v111;
      *(void *)(v0 + 240) = sub_100183F14( &qword_10064DBD0,  type metadata accessor for SDAirDropDiscoveredPerson,  (uint64_t)&unk_1004D25C8);
      *(void *)(v0 + 248) = &off_1005D7BF8;
      *(void *)(v0 + 208) = v112;
      sub_100187100(v0 + 112, &qword_10064DA48);
    }

    swift_bridgeObjectRelease(v30);
    swift_endAccess(v0 + 896);
    uint64_t v89 = *(void *)(v0 + 232);
    uint64_t v90 = *(void *)(v0 + 240);
    sub_10019A708((void *)(v0 + 208), v89);
    uint64_t v113 = *(int **)(v90 + 48);
    unint64_t v117 = (int *)((char *)v113 + *v113);
    __n128 v92 = (void *)swift_task_alloc(v113[1]);
    *(void *)(v0 + 1144) = v92;
    uint64_t v93 = sub_1002F23B8;
    goto LABEL_67;
  }

uint64_t sub_1002F23B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1144LL));
  return swift_task_switch(sub_1002F2410, v1, 0LL);
}

uint64_t sub_1002F2410()
{
  uint64_t v1 = v0[141];
  uint64_t v2 = v0[140];
  uint64_t v3 = v0[133] + v0[142];
  sub_1002499DC((uint64_t)(v0 + 26), (uint64_t)(v0 + 8));
  swift_beginAccess(v3, v0 + 124, 33LL, 0LL);
  sub_1002E5104((uint64_t)(v0 + 8), v2, v1);
  swift_endAccess(v0 + 124);
  uint64_t v4 = (uint64_t **)swift_task_alloc(dword_10064DBCC);
  v0[144] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = (uint64_t *)sub_1002F24CC;
  return sub_1002F2B84((uint64_t)(v0 + 26), v0[132]);
}

uint64_t sub_1002F24CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1152LL));
  return swift_task_switch(sub_1002F2524, v1, 0LL);
}

uint64_t sub_1002F2524()
{
  __int128 v9 = *(_OWORD *)(v0 + 232);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = sub_10019A708((void *)(v0 + 208), v1);
  *(_OWORD *)(v0 + 656) = v9;
  uint64_t v3 = sub_1001A4B04((void *)(v0 + 632));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v1 - 8) + 16LL))(v3, v2, v1);
  sub_100187100(v0 + 672, &qword_10064DBB0);
  sub_1001870BC(v0 + 632, v0 + 672, &qword_10064DBB0);
  sub_10018709C((void *)(v0 + 208));
  if (*(_BYTE *)(v0 + 1256) == 1)
  {
    sub_1001915A4(v0 + 672, v0 + 752, &qword_10064DBB0);
    if (!*(void *)(v0 + 776))
    {
      sub_100187100(v0 + 672, &qword_10064DBB0);
      uint64_t v4 = v0 + 752;
      goto LABEL_6;
    }

    sub_1001CE0D0((__int128 *)(v0 + 752), v0 + 712);
    sub_1002F2D4C((void *)(v0 + 712));
    sub_10018709C((void *)(v0 + 712));
  }

  uint64_t v4 = v0 + 672;
LABEL_6:
  sub_100187100(v4, &qword_10064DBB0);
  uint64_t v5 = *(void *)(v0 + 1096);
  uint64_t v6 = *(void *)(v0 + 1088);
  uint64_t v7 = *(void *)(v0 + 1080);
  swift_task_dealloc(*(void *)(v0 + 1104));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F2680()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1184LL));
  return swift_task_switch(sub_1002F26D8, v1, 0LL);
}

uint64_t sub_1002F26D8()
{
  uint64_t v1 = v0[146];
  uint64_t v2 = v0[145];
  uint64_t v3 = v0[133] + v0[147];
  sub_1002499DC((uint64_t)(v0 + 68), (uint64_t)(v0 + 38));
  swift_beginAccess(v3, v0 + 109, 33LL, 0LL);
  sub_1002E5104((uint64_t)(v0 + 38), v2, v1);
  swift_endAccess(v0 + 109);
  uint64_t v4 = (uint64_t **)swift_task_alloc(dword_10064DBCC);
  v0[149] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = (uint64_t *)sub_1002F2794;
  return sub_1002F2B84((uint64_t)(v0 + 68), v0[132]);
}

uint64_t sub_1002F2794()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1192LL));
  return swift_task_switch(sub_1002F27EC, v1, 0LL);
}

uint64_t sub_1002F27EC()
{
  uint64_t v1 = *(void *)(v0 + 568);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = sub_10019A708((void *)(v0 + 544), v1);
  *(void *)(v0 + 856) = v1;
  *(void *)(v0 + 864) = v2;
  uint64_t v4 = sub_1001A4B04((void *)(v0 + 832));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v1 - 8) + 16LL))(v4, v3, v1);
  sub_100187100(v0 + 672, &qword_10064DBB0);
  sub_1001870BC(v0 + 832, v0 + 672, &qword_10064DBB0);
  sub_10018709C((void *)(v0 + 544));
  if (*(_BYTE *)(v0 + 1256) == 1)
  {
    sub_1001915A4(v0 + 672, v0 + 752, &qword_10064DBB0);
    if (!*(void *)(v0 + 776))
    {
      sub_100187100(v0 + 672, &qword_10064DBB0);
      uint64_t v5 = v0 + 752;
      goto LABEL_6;
    }

    sub_1001CE0D0((__int128 *)(v0 + 752), v0 + 712);
    sub_1002F2D4C((void *)(v0 + 712));
    sub_10018709C((void *)(v0 + 712));
  }

  uint64_t v5 = v0 + 672;
LABEL_6:
  sub_100187100(v5, &qword_10064DBB0);
  uint64_t v6 = *(void *)(v0 + 1096);
  uint64_t v7 = *(void *)(v0 + 1088);
  uint64_t v8 = *(void *)(v0 + 1080);
  swift_task_dealloc(*(void *)(v0 + 1104));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F2944()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1112LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 1248LL));
  return swift_task_switch(sub_1002F299C, v1, 0LL);
}

uint64_t sub_1002F299C()
{
  uint64_t v16 = *(void *)(v0 + 1224);
  unint64_t v17 = *(void *)(v0 + 1232);
  uint64_t v1 = *(const char **)(v0 + 1216);
  uint64_t v2 = *(const char **)(v0 + 1208);
  uint64_t v3 = *(void *)(v0 + 1200);
  uint64_t v4 = *(void *)(v0 + 1064) + *(void *)(v0 + 1240);
  sub_1002499DC(v0 + 256, v0 + 448);
  *(void *)&double v5 = swift_beginAccess(v4, v0 + 968, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(v2, v5);
  sub_1002E5104(v0 + 448, v3, (uint64_t)v2);
  swift_endAccess(v0 + 968);
  uint64_t v6 = *(void *)(v0 + 280);
  uint64_t v7 = *(void *)(v0 + 288);
  uint64_t v8 = sub_10019A708((void *)(v0 + 256), v6);
  *(void *)(v0 + 6swift_weakDestroy(v0 + 16) = v6;
  *(void *)(v0 + 624) = v7;
  __int128 v9 = sub_1001A4B04((void *)(v0 + 592));
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16LL))(v9, v8, v6);
  *(void *)&double v10 = swift_bridgeObjectRelease(v2).n128_u64[0];
  swift_bridgeObjectRelease(v1, v10);
  sub_100189B0C(v16, v17);
  sub_100187100(v0 + 672, &qword_10064DBB0);
  sub_1001870BC(v0 + 592, v0 + 672, &qword_10064DBB0);
  sub_10018709C((void *)(v0 + 256));
  if (*(_BYTE *)(v0 + 1256) == 1)
  {
    sub_1001915A4(v0 + 672, v0 + 752, &qword_10064DBB0);
    if (!*(void *)(v0 + 776))
    {
      sub_100187100(v0 + 672, &qword_10064DBB0);
      uint64_t v11 = v0 + 752;
      goto LABEL_6;
    }

    sub_1001CE0D0((__int128 *)(v0 + 752), v0 + 712);
    sub_1002F2D4C((void *)(v0 + 712));
    sub_10018709C((void *)(v0 + 712));
  }

  uint64_t v11 = v0 + 672;
LABEL_6:
  sub_100187100(v11, &qword_10064DBB0);
  uint64_t v12 = *(void *)(v0 + 1096);
  uint64_t v13 = *(void *)(v0 + 1088);
  uint64_t v14 = *(void *)(v0 + 1080);
  swift_task_dealloc(*(void *)(v0 + 1104));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F2B84(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v3[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  void v3[9] = v5;
  v3[10] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002F2C18, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002F2C18()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 40);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_10019A708(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v3, v4);
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID,  v0 + 16,  32LL,  0LL);
  uint64_t v6 = *v5;
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1003AD618(*(void *)(v0 + 80)), (v8 & 1) != 0))
  {
    uint64_t v10 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v13 = *(void *)(*(void *)(v6 + 56) + 16 * v7);
    swift_endAccess(v0 + 16);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    swift_unknownObjectRetain(v13);
    v14(v9, v11);
    sub_1002F3150(v12);
    if ((v15 & 1) != 0) {
      sub_10025D634(*(void *)(v0 + 48));
    }
    swift_unknownObjectRelease(v13);
  }

  else
  {
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 64);
    swift_endAccess(v0 + 16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }

  swift_task_dealloc(*(void *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F2D4C(void *a1)
{
  uint64_t v3 = sub_100183098(&qword_10064DBD8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  char v8 = (char *)&v43 - v7;
  uint64_t v9 = sub_100183098(&qword_10064DB00);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_10019A708(a1, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  uint64_t v17 = v16;
  uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations);
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations,  v51,  32LL,  0LL);
  uint64_t v19 = *v18;
  if (*(void *)(*v18 + 16) && (uint64_t v20 = sub_1003AD53C(v15, (uint64_t)v17), (v21 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))( v8,  *(void *)(v19 + 56) + *(void *)(v10 + 72) * v20,  v9);
    os_log_type_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 0LL, 1LL, v9);
  }

  else
  {
    os_log_type_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v22(v8, 1LL, 1LL, v9);
  }

  __n128 v23 = swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1LL, v9, v23) == 1)
  {
    sub_100187100((uint64_t)v8, &qword_10064DBD8);
    return swift_endAccess(v51);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    swift_endAccess(v51);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v47 = v12;
    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_10064D970);
    uint64_t v26 = sub_10019A6C4((uint64_t)a1, (uint64_t)v51);
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v30 = swift_slowAlloc(32LL, -1LL);
      char v45 = v22;
      uint64_t v31 = v30;
      uint64_t v50 = v30;
      double v46 = v6;
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v44 = v29 + 4;
      sub_10019A6C4((uint64_t)v51, (uint64_t)&v48);
      uint64_t v32 = sub_100183098((uint64_t *)&unk_10064DA90);
      uint64_t v33 = String.init<A>(describing:)(&v48, v32);
      double v35 = (const char *)v34;
      uint64_t v48 = sub_10018CDB4(v33, v34, &v50);
      uint64_t v6 = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v44, v29 + 12);
      swift_bridgeObjectRelease(v35);
      sub_10018709C(v51);
      _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "Bonjour discovery completed for waiting connectable: %s",  v29,  0xCu);
      swift_arrayDestroy(v31, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v36 = v31;
      os_log_type_t v22 = v45;
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    else
    {
      sub_10018709C(v51);
    }

    uint64_t v37 = a1[3];
    uint64_t v38 = a1[4];
    sub_10019A708(a1, v37);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    __int128 v41 = v40;
    v22(v6, 1LL, 1LL, v9);
    swift_beginAccess(v18, v51, 33LL, 0LL);
    sub_1002E5B90((uint64_t)v6, v39, v41);
    swift_endAccess(v51);
    sub_10019A6C4((uint64_t)a1, (uint64_t)v51);
    double v42 = v47;
    CheckedContinuation.resume(returning:)(v51, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v42, v9);
  }

void sub_1002F3150(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v7 = &v10[-v6];
  sub_1001A4B84(a1, (uint64_t)&v10[-v6], v8);
  uint64_t v9 = (char *)sub_1002F3274 + 4 * byte_1004D4900[swift_getEnumCaseMultiPayload(v7, v4)];
  __asm { BR              X10 }

uint64_t sub_1002F3274()
{
  char v6 = sub_10020D110();
  sub_1001A4BC8(v3, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  if ((v6 & 1) != 0) {
    return 1LL;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate,  v7);
  if (!Strong) {
    return 0LL;
  }
  uint64_t v9 = Strong;
  sub_10020F0E4();
  if (!v11) {
    goto LABEL_10;
  }
  uint64_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v14 = v9 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
  swift_beginAccess(v9 + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService, v5 - 152, 0LL, 0LL);
  sub_10019A6C4(v14, v5 - 128);
  uint64_t v15 = *(void *)(v5 - 104);
  uint64_t v16 = *(void *)(v5 - 96);
  sub_10019A708((void *)(v5 - 128), v15);
  LOBYTE(v12) = (*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t))(v16 + 104))(v12, v13, v15, v16);
  swift_bridgeObjectRelease(v13);
  sub_10018709C((void *)(v5 - 128));
  if ((v12 & 1) == 0)
  {
LABEL_10:
    swift_unknownObjectRelease(v9);
    return 0LL;
  }

  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v17, (uint64_t)qword_10064D970);
  uint64_t v18 = sub_1001A4B84(v2, v0, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    char v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    *(void *)(v5 - 128) = v22;
    *(_DWORD *)char v21 = 136315138;
    sub_10020E23C();
    unint64_t v24 = (const char *)v23;
    *(void *)(v5 - 88) = sub_10018CDB4(v25, v23, (uint64_t *)(v5 - 128));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v5 - 88, v5 - 80, v21 + 4, v21 + 12);
    swift_bridgeObjectRelease(v24);
    sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint);
    _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "endpoint.isConnectable is false. Treating endpoint as connectable due to delegate: %s",  v21,  0xCu);
    uint64_t v26 = 1LL;
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);
    swift_unknownObjectRelease(v9);
  }

  else
  {
    sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint);

    swift_unknownObjectRelease(v9);
    return 1LL;
  }

  return v26;
}

uint64_t sub_1002F3560(uint64_t a1)
{
  v2[34] = a1;
  v2[35] = v1;
  unint64_t v3 = (*(void *)(*(void *)(sub_100183098(&qword_100649F58) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[36] = swift_task_alloc(v3);
  v2[37] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[38] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[39] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[40] = swift_task_alloc(v6);
  v2[41] = swift_task_alloc(v6);
  v2[42] = swift_task_alloc(v6);
  v2[43] = swift_task_alloc(v6);
  v2[44] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for UUID(0LL);
  v2[45] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[46] = v8;
  v2[47] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v2[48] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F3684, v9, 0LL);
}

uint64_t sub_1002F3684()
{
  uint64_t v2 = *v1;
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1003AD618(*(void *)(v0 + 272)), (v4 & 1) != 0))
  {
    sub_10019A6C4(*(void *)(v2 + 56) + 40 * v3, v0 + 104);
  }

  else
  {
    *(void *)(v0 + 136) = 0LL;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
  }

  uint64_t v6 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 360);
  uint64_t v8 = *(void *)(v0 + 272);
  swift_endAccess(v0 + 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  uint64_t v9 = *(void *)(v0 + 376);
  if (*(void *)(v0 + 128))
  {
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 368) + 8LL))(v9, *(void *)(v0 + 360));
    sub_1001CE0D0((__int128 *)(v0 + 104), v0 + 64);
LABEL_15:
    sub_1001CE0D0((__int128 *)(v0 + 64), v0 + 144);
    uint64_t v25 = *(void *)(v0 + 168);
    uint64_t v26 = *(void *)(v0 + 176);
    sub_10019A708((void *)(v0 + 144), v25);
    uint64_t v27 = *(int **)(v26 + 40);
    uint64_t v37 = (uint64_t (*)(uint64_t, uint64_t))((char *)v27 + *v27);
    os_log_type_t v28 = (void *)swift_task_alloc(v27[1]);
    *(void *)(v0 + 392) = v28;
    void *v28 = v0;
    v28[1] = sub_1002F39A0;
    return v37(v25, v26);
  }

  uint64_t v10 = *(void *)(v0 + 280);
  uint64_t v11 = UUID.uuidString.getter(v9);
  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)(v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered);
  swift_beginAccess( v10 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_allDiscovered,  v0 + 248,  32LL,  0LL);
  uint64_t v15 = *v14;
  if (*(void *)(v15 + 16) && (uint64_t v16 = sub_1003AD53C(v11, (uint64_t)v13), (v17 & 1) != 0))
  {
    sub_1002499DC(*(void *)(v15 + 56) + 48 * v16, v0 + 16);
  }

  else
  {
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + swift_weakDestroy(v0 + 16) = 0u;
  }

  swift_bridgeObjectRelease(v13);
  swift_endAccess(v0 + 248);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v20 = *(void *)(v0 + 368);
  uint64_t v19 = *(void *)(v0 + 376);
  uint64_t v21 = *(void *)(v0 + 360);
  if (v18)
  {
    uint64_t v22 = *(void *)(v0 + 48);
    unint64_t v23 = sub_10019A708((void *)(v0 + 16), *(void *)(v0 + 40));
    *(void *)(v0 + 88) = v18;
    *(void *)(v0 + 96) = v22;
    unint64_t v24 = sub_1001A4B04((void *)(v0 + 64));
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16LL))(v24, v23, v18);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_10018709C((void *)(v0 + 16));
  }

  else
  {
    (*(void (**)(void, void))(v20 + 8))(*(void *)(v0 + 376), *(void *)(v0 + 360));
    sub_100187100(v0 + 16, &qword_10064DA48);
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(void *)(v0 + 96) = 0LL;
  }

  sub_100187100(v0 + 104, &qword_10064DBB0);
  if (*(void *)(v0 + 88)) {
    goto LABEL_15;
  }
  sub_100187100(v0 + 64, &qword_10064DBB0);
  uint64_t v30 = *(void *)(v0 + 344);
  uint64_t v31 = *(void *)(v0 + 352);
  uint64_t v33 = *(void *)(v0 + 328);
  uint64_t v32 = *(void *)(v0 + 336);
  uint64_t v34 = *(void *)(v0 + 320);
  uint64_t v36 = *(void *)(v0 + 288);
  uint64_t v35 = *(void *)(v0 + 296);
  swift_task_dealloc(*(void *)(v0 + 376));
  swift_task_dealloc(v31);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  return (*(uint64_t (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
}

uint64_t sub_1002F39A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 384LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 392LL);
  *(void *)(*(void *)v1 + 40swift_beginAccess(v1, v0 + 224, 32LL, 0LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F39FC, v3, 0LL);
}

void sub_1002F39FC()
{
  uint64_t v52 = (void *)(v0 + 144);
  uint64_t v1 = *(const char **)(v0 + 400);
  id v2 = *(id *)(v0 + 280);
  swift_bridgeObjectRetain(v1);
  sub_1002FBB28(v3);
  char v5 = v4;
  uint64_t v6 = 0LL;

  *(void *)&double v7 = swift_bridgeObjectRelease(v1).n128_u64[0];
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 400), v7);
    uint64_t v44 = (void *)swift_task_alloc(dword_10064DC3C);
    *(void *)(v0 + 408) = v44;
    *uint64_t v44 = v0;
    v44[1] = sub_1002F3EA4;
    sub_1002F47FC(v0 + 184, (uint64_t)v52);
    return;
  }

  int64_t v8 = 0LL;
  uint64_t v9 = *(void *)(v0 + 400);
  uint64_t v10 = *(void *)(v0 + 312);
  uint64_t v54 = v9;
  uint64_t v55 = v9 + 56;
  uint64_t v11 = -1LL;
  uint64_t v12 = -1LL << *(_BYTE *)(v9 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1LL << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v9 + 56);
  int64_t v56 = (unint64_t)(63 - v12) >> 6;
  uint64_t v57 = *(void *)(v0 + 312);
  while (1)
  {
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v19 = v18 | (v8 << 6);
      goto LABEL_21;
    }

    if (__OFADD__(v8++, 1LL))
    {
      __break(1u);
      goto LABEL_34;
    }

    if (v8 >= v56) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v55 + 8 * v8);
    if (!v21) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
LABEL_21:
    uint64_t v23 = *(void *)(v0 + 344);
    uint64_t v24 = *(void *)(v0 + 352);
    sub_1001A4B84( *(void *)(v9 + 48) + *(void *)(v10 + 72) * v19,  v24,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B40(v24, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002F3150(v23);
    if ((v25 & 1) != 0)
    {
      uint64_t v26 = *(void *)(v0 + 344);
      uint64_t v28 = *(void *)(v0 + 296);
      uint64_t v27 = *(void *)(v0 + 304);
      uint64_t v29 = swift_task_alloc(32LL);
      *(void *)(v29 + swift_weakDestroy(v0 + 16) = v26;
      swift_bridgeObjectRetain((const char *)&_swiftEmptySetSingleton, v52);
      sub_10028CBE0((uint64_t (*)(char *))sub_1002FC510, (uint64_t)&_swiftEmptySetSingleton, v28);
      swift_bridgeObjectRelease((const char *)&_swiftEmptySetSingleton);
      swift_task_dealloc(v29);
      int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v28, 1LL, v27);
      uint64_t v31 = *(void *)(v0 + 344);
      if (v30 == 1)
      {
        uint64_t v15 = *(void *)(v0 + 320);
        uint64_t v14 = *(void *)(v0 + 328);
        sub_100187100(*(void *)(v0 + 296), &qword_100649F58);
        sub_1001A4B84(v31, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v16 = v15;
        uint64_t v10 = v57;
        sub_1003B52D4(v14, v16);
        char v17 = (uint64_t *)(v0 + 328);
        uint64_t v9 = v54;
      }

      else
      {
        sub_1001A4B40( *(void *)(v0 + 296),  *(void *)(v0 + 336),  type metadata accessor for SDAirDropDiscoveredEndpoint);
        sub_100212640();
        uint64_t v33 = v32;
        sub_100212640();
        uint64_t v34 = *(void *)(v0 + 344);
        if (v35 >= v33)
        {
          uint64_t v43 = *(void *)(v0 + 320);
          uint64_t v42 = *(void *)(v0 + 328);
          sub_1001A4B84(*(void *)(v0 + 344), v43, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003B52D4(v42, v43);
          uint64_t v41 = v42;
        }

        else
        {
          uint64_t v37 = *(void *)(v0 + 328);
          uint64_t v36 = *(void *)(v0 + 336);
          uint64_t v53 = v6;
          uint64_t v38 = *(void *)(v0 + 320);
          uint64_t v39 = *(void *)(v0 + 288);
          sub_1001A4B84(v36, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003B52D4(v37, v38);
          sub_1001A4BC8(v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003BE9C4(v36, v39);
          sub_100187100(v39, &qword_100649F58);
          sub_1001A4B84(v34, v38, type metadata accessor for SDAirDropDiscoveredEndpoint);
          uint64_t v40 = v38;
          uint64_t v6 = v53;
          sub_1003B52D4(v37, v40);
          uint64_t v41 = v37;
        }

        sub_1001A4BC8(v41, type metadata accessor for SDAirDropDiscoveredEndpoint);
        char v17 = (uint64_t *)(v0 + 336);
        uint64_t v9 = v54;
        uint64_t v10 = v57;
      }

      sub_1001A4BC8(*v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    sub_1001A4BC8(*(void *)(v0 + 344), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  int64_t v22 = v8 + 1;
  if (v8 + 1 >= v56) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21) {
    goto LABEL_19;
  }
  int64_t v22 = v8 + 2;
  if (v8 + 2 >= v56) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21) {
    goto LABEL_19;
  }
  int64_t v22 = v8 + 3;
  if (v8 + 3 >= v56)
  {
LABEL_32:
    swift_release(v9);
    sub_10018709C(v52);
    uint64_t v46 = *(void *)(v0 + 344);
    uint64_t v45 = *(void *)(v0 + 352);
    uint64_t v48 = *(void *)(v0 + 328);
    uint64_t v47 = *(void *)(v0 + 336);
    uint64_t v49 = *(void *)(v0 + 320);
    uint64_t v51 = *(void *)(v0 + 288);
    uint64_t v50 = *(void *)(v0 + 296);
    swift_task_dealloc(*(void *)(v0 + 376));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    (*(void (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
    return;
  }

  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21)
  {
LABEL_19:
    int64_t v8 = v22;
    goto LABEL_20;
  }

  while (1)
  {
    int64_t v8 = v22 + 1;
    if (__OFADD__(v22, 1LL)) {
      break;
    }
    if (v8 >= v56) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v55 + 8 * v8);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }

uint64_t sub_1002F3EA4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 408);
  *(void *)(*v1 + 4swift_weakDestroy(v0 + 16) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    char v4 = sub_1002F43F4;
  }
  else {
    char v4 = sub_1002F3F08;
  }
  return swift_task_switch(v4, *(void *)(v2 + 384), 0LL);
}

uint64_t sub_1002F3F08()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[27];
  sub_10019A708(v0 + 23, v1);
  uint64_t v3 = *(int **)(v2 + 40);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  char v4 = (void *)swift_task_alloc(v3[1]);
  v0[53] = v4;
  *char v4 = v0;
  v4[1] = sub_1002F3F80;
  return v6(v1, v2);
}

uint64_t sub_1002F3F80(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 424LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 384LL);
  *(void *)(*(void *)v1 + 432LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F3FE0, v3, 0LL);
}

uint64_t sub_1002F3FE0()
{
  uint64_t result = sub_10018709C((void *)(v0 + 184));
  int64_t v2 = 0LL;
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v47 = v3 + 56;
  uint64_t v5 = -1LL;
  uint64_t v6 = -1LL << *(_BYTE *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v3 + 56);
  int64_t v48 = (unint64_t)(63 - v6) >> 6;
  uint64_t v45 = *(void *)(v0 + 312);
  uint64_t v46 = *(void *)(v0 + 432);
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v2 << 6);
      goto LABEL_20;
    }

    if (__OFADD__(v2++, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v2 >= v48) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v47 + 8 * v2);
    if (!v16) {
      break;
    }
LABEL_19:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v2 << 6);
LABEL_20:
    uint64_t v18 = *(void *)(v0 + 344);
    uint64_t v19 = *(void *)(v0 + 352);
    sub_1001A4B84( *(void *)(v3 + 48) + *(void *)(v4 + 72) * v14,  v19,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B40(v19, v18, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002F3150(v18);
    if ((v20 & 1) != 0)
    {
      uint64_t v21 = *(void *)(v0 + 344);
      uint64_t v23 = *(void *)(v0 + 296);
      uint64_t v22 = *(void *)(v0 + 304);
      uint64_t v24 = swift_task_alloc(32LL);
      *(void *)(v24 + swift_weakDestroy(v0 + 16) = v21;
      swift_bridgeObjectRetain((const char *)&_swiftEmptySetSingleton);
      sub_10028CBE0((uint64_t (*)(char *))sub_1002FC510, (uint64_t)&_swiftEmptySetSingleton, v23);
      swift_bridgeObjectRelease((const char *)&_swiftEmptySetSingleton);
      swift_task_dealloc(v24);
      int v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v23, 1LL, v22);
      uint64_t v26 = *(void *)(v0 + 344);
      if (v25 == 1)
      {
        uint64_t v9 = *(void *)(v0 + 320);
        uint64_t v8 = *(void *)(v0 + 328);
        sub_100187100(*(void *)(v0 + 296), &qword_100649F58);
        sub_1001A4B84(v26, v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v10 = v8;
        uint64_t v11 = v9;
        uint64_t v4 = v45;
        uint64_t v3 = v46;
        sub_1003B52D4(v10, v11);
        uint64_t v12 = (uint64_t *)(v0 + 328);
      }

      else
      {
        sub_1001A4B40( *(void *)(v0 + 296),  *(void *)(v0 + 336),  type metadata accessor for SDAirDropDiscoveredEndpoint);
        sub_100212640();
        uint64_t v28 = v27;
        sub_100212640();
        uint64_t v29 = *(void *)(v0 + 344);
        if (v30 >= v28)
        {
          uint64_t v37 = *(void *)(v0 + 320);
          uint64_t v36 = *(void *)(v0 + 328);
          sub_1001A4B84(*(void *)(v0 + 344), v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003B52D4(v36, v37);
          uint64_t v35 = v36;
        }

        else
        {
          uint64_t v32 = *(void *)(v0 + 328);
          uint64_t v31 = *(void *)(v0 + 336);
          uint64_t v33 = *(void *)(v0 + 320);
          uint64_t v34 = *(void *)(v0 + 288);
          sub_1001A4B84(v31, v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003B52D4(v32, v33);
          sub_1001A4BC8(v32, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003BE9C4(v31, v34);
          sub_100187100(v34, &qword_100649F58);
          sub_1001A4B84(v29, v33, type metadata accessor for SDAirDropDiscoveredEndpoint);
          sub_1003B52D4(v32, v33);
          uint64_t v35 = v32;
        }

        sub_1001A4BC8(v35, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v12 = (uint64_t *)(v0 + 336);
        uint64_t v4 = v45;
        uint64_t v3 = v46;
      }

      sub_1001A4BC8(*v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t result = sub_1001A4BC8(*(void *)(v0 + 344), type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  int64_t v17 = v2 + 1;
  if (v2 + 1 >= v48) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v47 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v2 + 2;
  if (v2 + 2 >= v48) {
    goto LABEL_30;
  }
  unint64_t v16 = *(void *)(v47 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v2 + 3;
  if (v2 + 3 >= v48)
  {
LABEL_30:
    swift_release(v3);
    sub_10018709C((void *)(v0 + 144));
    uint64_t v39 = *(void *)(v0 + 344);
    uint64_t v38 = *(void *)(v0 + 352);
    uint64_t v41 = *(void *)(v0 + 328);
    uint64_t v40 = *(void *)(v0 + 336);
    uint64_t v42 = *(void *)(v0 + 320);
    uint64_t v44 = *(void *)(v0 + 288);
    uint64_t v43 = *(void *)(v0 + 296);
    swift_task_dealloc(*(void *)(v0 + 376));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    return (*(uint64_t (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
  }

  unint64_t v16 = *(void *)(v47 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v2 = v17;
    goto LABEL_19;
  }

  while (1)
  {
    int64_t v2 = v17 + 1;
    if (__OFADD__(v17, 1LL)) {
      break;
    }
    if (v2 >= v48) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v47 + 8 * v2);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }

uint64_t sub_1002F43F4()
{
  uint64_t result = swift_errorRelease(*(void *)(v0 + 416));
  int64_t v2 = 0LL;
  uint64_t v44 = *(void *)(v0 + 312);
  uint64_t v3 = -1LL;
  uint64_t v4 = -1LL << *((_BYTE *)&_swiftEmptySetSingleton + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1LL << -(char)v4);
  }
  unint64_t v5 = v3 & *((void *)&_swiftEmptySetSingleton + 7);
  int64_t v43 = (unint64_t)(63 - v4) >> 6;
  for (i = type metadata accessor for SDAirDropDiscoveredEndpoint; ; uint64_t result = sub_1001A4BC8(*(void *)(v0 + 344), i))
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v2 << 6);
      goto LABEL_20;
    }

    if (__OFADD__(v2++, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v2 >= v43) {
      goto LABEL_30;
    }
    unint64_t v13 = *((void *)&_swiftEmptySetSingleton + v2 + 7);
    if (!v13) {
      break;
    }
LABEL_19:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v16 = *(void *)(v0 + 352);
    sub_1001A4B84(*((void *)&_swiftEmptySetSingleton + 6) + *(void *)(v44 + 72) * v11, v16, i);
    sub_1001A4B40(v16, v15, i);
    sub_1002F3150(v15);
    if ((v17 & 1) != 0)
    {
      uint64_t v18 = i;
      uint64_t v19 = *(void *)(v0 + 344);
      uint64_t v21 = *(void *)(v0 + 296);
      uint64_t v20 = *(void *)(v0 + 304);
      uint64_t v22 = swift_task_alloc(32LL);
      *(void *)(v22 + swift_weakDestroy(v0 + 16) = v19;
      swift_bridgeObjectRetain((const char *)&_swiftEmptySetSingleton);
      sub_10028CBE0((uint64_t (*)(char *))sub_1002FC510, (uint64_t)&_swiftEmptySetSingleton, v21);
      swift_bridgeObjectRelease((const char *)&_swiftEmptySetSingleton);
      swift_task_dealloc(v22);
      int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v21, 1LL, v20);
      uint64_t v24 = *(void *)(v0 + 344);
      if (v23 == 1)
      {
        uint64_t v8 = *(void *)(v0 + 320);
        uint64_t v7 = *(void *)(v0 + 328);
        sub_100187100(*(void *)(v0 + 296), &qword_100649F58);
        unint64_t i = v18;
        sub_1001A4B84(v24, v8, v18);
        sub_1003B52D4(v7, v8);
        uint64_t v9 = (uint64_t *)(v0 + 328);
      }

      else
      {
        unint64_t i = v18;
        sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 336), v18);
        sub_100212640();
        uint64_t v26 = v25;
        sub_100212640();
        uint64_t v27 = *(void *)(v0 + 344);
        if (v28 >= v26)
        {
          uint64_t v35 = *(void *)(v0 + 320);
          uint64_t v34 = *(void *)(v0 + 328);
          sub_1001A4B84(*(void *)(v0 + 344), v35, v18);
          sub_1003B52D4(v34, v35);
          uint64_t v33 = v34;
        }

        else
        {
          uint64_t v30 = *(void *)(v0 + 328);
          uint64_t v29 = *(void *)(v0 + 336);
          uint64_t v31 = *(void *)(v0 + 320);
          uint64_t v32 = *(void *)(v0 + 288);
          sub_1001A4B84(v29, v31, v18);
          sub_1003B52D4(v30, v31);
          sub_1001A4BC8(v30, v18);
          sub_1003BE9C4(v29, v32);
          sub_100187100(v32, &qword_100649F58);
          sub_1001A4B84(v27, v31, v18);
          sub_1003B52D4(v30, v31);
          uint64_t v33 = v30;
          unint64_t i = v18;
        }

        sub_1001A4BC8(v33, v18);
        uint64_t v9 = (uint64_t *)(v0 + 336);
      }

      sub_1001A4BC8(*v9, i);
    }
  }

  int64_t v14 = v2 + 1;
  if (v2 + 1 >= v43) {
    goto LABEL_30;
  }
  unint64_t v13 = *((void *)&_swiftEmptySetSingleton + v14 + 7);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v2 + 2;
  if (v2 + 2 >= v43) {
    goto LABEL_30;
  }
  unint64_t v13 = *((void *)&_swiftEmptySetSingleton + v14 + 7);
  if (v13) {
    goto LABEL_18;
  }
  int64_t v14 = v2 + 3;
  if (v2 + 3 >= v43)
  {
LABEL_30:
    swift_release(&_swiftEmptySetSingleton);
    sub_10018709C((void *)(v0 + 144));
    uint64_t v37 = *(void *)(v0 + 344);
    uint64_t v36 = *(void *)(v0 + 352);
    uint64_t v39 = *(void *)(v0 + 328);
    uint64_t v38 = *(void *)(v0 + 336);
    uint64_t v40 = *(void *)(v0 + 320);
    uint64_t v42 = *(void *)(v0 + 288);
    uint64_t v41 = *(void *)(v0 + 296);
    swift_task_dealloc(*(void *)(v0 + 376));
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    return (*(uint64_t (**)(void *, void *))(v0 + 8))(&_swiftEmptySetSingleton, &_swiftEmptySetSingleton);
  }

  unint64_t v13 = *((void *)&_swiftEmptySetSingleton + v14 + 7);
  if (v13)
  {
LABEL_18:
    int64_t v2 = v14;
    goto LABEL_19;
  }

  while (1)
  {
    int64_t v2 = v14 + 1;
    if (__OFADD__(v14, 1LL)) {
      break;
    }
    if (v2 >= v43) {
      goto LABEL_30;
    }
    unint64_t v13 = *((void *)&_swiftEmptySetSingleton + v2 + 7);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }

uint64_t sub_1002F47FC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = swift_getObjectType(v2);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v4 = static AirDropActor.shared;
  v3[6] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F4878, v4, 0LL);
}

uint64_t sub_1002F4878()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = static AirDropActor.shared;
  uint64_t v5 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v6 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  v0[7] = v6;
  swift_unknownObjectWeakInit(v6 + 16, v1);
  uint64_t v7 = (void *)swift_task_alloc(48LL);
  v0[8] = v7;
  void v7[2] = v3;
  v7[3] = v6;
  v7[4] = v2;
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[9] = v8;
  uint64_t v9 = sub_100183098((uint64_t *)&unk_10064DA90);
  *uint64_t v8 = v0;
  v8[1] = sub_1002F4988;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0[2],  v4,  v5,  0xD000000000000024LL,  0x8000000100509F40LL,  sub_1002FC52C,  v7,  v9);
}

uint64_t sub_1002F4988()
{
  uint64_t v2 = *(void *)(*v1 + 72);
  uint64_t v3 = *v1;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_1002F4A08, *(void *)(v3 + 48), 0LL);
  }
  uint64_t v5 = *(void *)(v3 + 64);
  swift_release(*(void *)(v3 + 56));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1002F4A08()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release(*(void *)(v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1002F4A44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - v7;
  sub_1001A4B84(a1, (uint64_t)&v11 - v7, v9);
  unint64_t v10 = (char *)&loc_1002F4B74 + *((int *)qword_1002F4E20 + swift_getEnumCaseMultiPayload(v8, v5));
  __asm { BR              X10 }

void sub_1002F4B84()
{
  uint64_t v5 = sub_1001A4B40(v3, v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v6 = NWEndpoint.nw.getter(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v7);
    if (device_id) {
      String.init(cString:)(device_id);
    }
    sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    sub_1001A4B84(v2, v4, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v9 = (char *)&loc_1002F4C88 + *((int *)qword_1002F4E30 + swift_getEnumCaseMultiPayload(v4, v0));
    __asm { BR              X10 }
  }

  __break(1u);
  JUMPOUT(0x1002F4E1CLL);
}

uint64_t sub_1002F4E40(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a1;
  uint64_t v7 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v7);
  int64_t v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_10064DBD8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = a3 + 16;
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_10064D970);
  uint64_t v14 = sub_10019A6C4((uint64_t)a2, (uint64_t)v52);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    char v17 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v18 = swift_slowAlloc(32LL, -1LL);
    uint64_t v46 = a4;
    uint64_t v19 = v18;
    v51[0] = v18;
    *(_DWORD *)char v17 = 136315138;
    sub_10019A6C4((uint64_t)v52, (uint64_t)&v49);
    uint64_t v20 = sub_100183098((uint64_t *)&unk_10064DA90);
    uint64_t v21 = String.init<A>(describing:)(&v49, v20);
    int v23 = (const char *)v22;
    uint64_t v49 = sub_10018CDB4(v21, v22, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease(v23);
    sub_10018709C(v52);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Connectable (%s) requires Bonjour discovery", v17, 0xCu);
    swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v24 = v19;
    a4 = v46;
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);
  }

  else
  {
    sub_10018709C(v52);
  }

  swift_beginAccess(v12, &v49, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v12, v25);
  if (Strong)
  {
    uint64_t v27 = (char *)Strong;
    uint64_t v28 = a2[3];
    uint64_t v29 = a2[4];
    sub_10019A708(a2, v28);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    uint64_t v32 = v31;
    uint64_t v33 = sub_100183098(&qword_10064DB00);
    uint64_t v34 = *(void *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v11, v47, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v11, 0LL, 1LL, v33);
    swift_beginAccess( &v27[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations],  v52,  33LL,  0LL);
    sub_1002E5B90((uint64_t)v11, v30, v32);
    swift_endAccess(v52);
  }

  uint64_t v35 = type metadata accessor for TaskPriority(0LL);
  uint64_t v36 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v48, 1LL, 1LL, v35);
  uint64_t v37 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  swift_beginAccess(v12, v51, 0LL, 0LL);
  uint64_t v39 = (void *)swift_unknownObjectWeakLoadStrong(v12, v38);
  swift_unknownObjectWeakInit(v37 + 16, v39);

  sub_10019A6C4((uint64_t)a2, (uint64_t)v52);
  uint64_t v40 = qword_100643F28;
  swift_retain(v37);
  if (v40 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v41 = static AirDropActor.shared;
  uint64_t v42 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  int64_t v43 = (void *)swift_allocObject(&unk_1005D9F08, 88LL, 7LL);
  void v43[2] = v41;
  v43[3] = v42;
  v43[4] = v37;
  sub_1001CE0D0(v52, (uint64_t)(v43 + 5));
  v43[10] = a4;
  swift_retain(v41);
  swift_release(v37);
  uint64_t v44 = sub_1001B341C(v36, (uint64_t)&unk_10064DC48, (uint64_t)v43);
  return swift_release(v44);
}

uint64_t sub_1002F5284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  uint64_t v6 = sub_100183098(&qword_100646560);
  v5[15] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ContinuousClock(0LL);
  v5[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[17] = v8;
  v5[18] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v5[19] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F533C, v9, 0LL);
}

uint64_t sub_1002F533C()
{
  uint64_t v1 = *(void *)(v0 + 104) + 16LL;
  swift_beginAccess(v1, v0 + 56, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1002EAFC8();
  }

  ContinuousClock.init()(Strong);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v5 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 160) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002F53F0;
  return v7(0x70801D946C940000LL, 2LL, 0LL, 0LL, 1);
}

uint64_t sub_1002F53F0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 160);
  uint64_t v5 = *(void *)(*v1 + 136);
  uint64_t v4 = *(void *)(*v1 + 144);
  uint64_t v6 = *(void *)(*v1 + 128);
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_1002F55DC;
  }
  else {
    uint64_t v7 = sub_1002F547C;
  }
  return swift_task_switch(v7, *(void *)(v2 + 152), 0LL);
}

uint64_t sub_1002F547C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 104) + 16LL;
  uint64_t v5 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v2, 1LL, 1LL, v5);
  uint64_t v6 = swift_allocObject(&unk_1005D9D50, 24LL, 7LL);
  swift_beginAccess(v4, v0 + 80, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v4, v7);
  swift_unknownObjectWeakInit(v6 + 16, Strong);

  sub_10019A6C4(v3, v0 + 16);
  uint64_t v9 = static AirDropActor.shared;
  uint64_t v10 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v11 = (void *)swift_allocObject(&unk_1005D9F30, 80LL, 7LL);
  v11[2] = v9;
  __int128 v11[3] = v10;
  sub_1001CE0D0((__int128 *)(v0 + 16), (uint64_t)(v11 + 4));
  v11[9] = v6;
  swift_retain(v9);
  uint64_t v12 = sub_1001B37E8(v2, (uint64_t)&unk_10064DC58, (uint64_t)v11);
  swift_release(v12);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F55DC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_task_dealloc(*(void *)(v0 + 144));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  v5[27] = a5;
  unint64_t v6 = (*(void *)(*(void *)(sub_100183098(&qword_10064DBD8) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[28] = swift_task_alloc(v6);
  v5[29] = swift_task_alloc(v6);
  uint64_t v7 = sub_100183098(&qword_10064DB00);
  v5[30] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[31] = v8;
  v5[32] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002F56E4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002F56E4()
{
  uint64_t v1 = v0 + 168;
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v3 = v0 + 208;
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v4 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v4, (uint64_t)qword_10064D970);
  uint64_t v5 = sub_10019A6C4(v2, v0 + 16);
  unint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.error.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v60 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_10019A6C4(v0 + 16, v0 + 56);
    uint64_t v10 = sub_100183098((uint64_t *)&unk_10064DA90);
    uint64_t v11 = String.init<A>(describing:)(v0 + 56, v10);
    uint64_t v13 = (const char *)v12;
    *(void *)(v0 + 200) = sub_10018CDB4(v11, v12, &v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v13);
    sub_10018709C((void *)(v0 + 16));
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Bonjour discovery timed out for (%s)", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    uint64_t v14 = v8;
    uint64_t v1 = v0 + 168;
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {
    sub_10018709C((void *)(v0 + 16));
  }

  uint64_t v15 = *(void *)(v0 + 216) + 16LL;
  swift_beginAccess(v15, v1, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v15, v16);
  if (!Strong)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 248) + 56LL))( *(void *)(v0 + 232),  1LL,  1LL,  *(void *)(v0 + 240));
LABEL_14:
    sub_100187100(*(void *)(v0 + 232), &qword_10064DBD8);
    goto LABEL_18;
  }

  uint64_t v18 = (char *)Strong;
  uint64_t v19 = *(void **)v3;
  uint64_t v20 = *(void *)(*(void *)v3 + 24LL);
  uint64_t v21 = v19[4];
  sub_10019A708(v19, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v24 = v23;
  uint64_t v25 = &v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations];
  __n128 v26 = swift_beginAccess( &v18[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations],  v0 + 96,  32LL,  0LL);
  uint64_t v27 = *(void *)v25;
  if (*(void *)(v27 + 16))
  {
    uint64_t v28 = sub_1003AD53C(v22, (uint64_t)v24);
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = *(void *)(v0 + 248);
    uint64_t v32 = *(void *)(v0 + 232);
    if ((v33 & 1) != 0)
    {
      (*(void (**)(void, uint64_t, void))(v31 + 16))( *(void *)(v0 + 232),  *(void *)(v27 + 56) + *(void *)(v31 + 72) * v28,  *(void *)(v0 + 240));
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v31 + 56);
      v34(v32, 0LL, 1LL, v30, v35);
    }

    else
    {
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v31 + 56);
      v34(*(void *)(v0 + 232), 1LL, 1LL, v30, v29);
    }
  }

  else
  {
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v0 + 248) + 56LL);
    v34(*(void *)(v0 + 232), 1LL, 1LL, *(void *)(v0 + 240), v26);
  }

  uint64_t v36 = *(void *)(v0 + 240);
  uint64_t v37 = *(void *)(v0 + 248);
  uint64_t v38 = *(void *)(v0 + 232);
  swift_bridgeObjectRelease(v24);
  swift_endAccess(v0 + 96);

  uint64_t v39 = *(void *)(v0 + 216) + 16LL;
  (*(void (**)(void, void, void))(*(void *)(v0 + 248) + 32LL))( *(void *)(v0 + 256),  *(void *)(v0 + 232),  *(void *)(v0 + 240));
  swift_beginAccess(v39, v0 + 120, 0LL, 0LL);
  uint64_t v41 = swift_unknownObjectWeakLoadStrong(v39, v40);
  if (v41)
  {
    uint64_t v42 = (char *)v41;
    uint64_t v43 = *(void *)(v0 + 240);
    uint64_t v44 = *(void *)(v0 + 224);
    uint64_t v46 = v19[3];
    uint64_t v45 = v19[4];
    sub_10019A708(*(void **)(v0 + 208), v46);
    uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 16))(v46, v45);
    uint64_t v49 = v48;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v44, 1LL, 1LL, v43);
    swift_beginAccess( &v42[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourDiscoveryContinuations],  v0 + 144,  33LL,  0LL);
    sub_1002E5B90(v44, v47, v49);
    swift_endAccess(v0 + 144);
  }

  uint64_t v51 = *(void *)(v0 + 248);
  uint64_t v50 = *(void *)(v0 + 256);
  uint64_t v52 = *(void *)(v0 + 240);
  uint64_t v53 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v54 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v55 = swift_allocError(v53, v54, 0LL, 0LL);
  _BYTE *v56 = 1;
  (*(void (**)(_BYTE *, void, uint64_t))(*(void *)(v53 - 8) + 104LL))( v56,  enum case for SFAirDropSend.Failure.resolveFailure(_:),  v53);
  *(void *)(v0 + 192) = v55;
  CheckedContinuation.resume(throwing:)(v0 + 192, v52);
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
LABEL_18:
  uint64_t v57 = *(void *)(v0 + 224);
  uint64_t v58 = *(void *)(v0 + 232);
  swift_task_dealloc(*(void *)(v0 + 256));
  swift_task_dealloc(v58);
  swift_task_dealloc(v57);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F5BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[12] = a5;
  v6[13] = v5;
  v6[10] = a3;
  v6[11] = a4;
  void v6[8] = a1;
  void v6[9] = a2;
  unint64_t v9 = (*(void *)(*(void *)(sub_100183098(&qword_10064DA60) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[14] = swift_task_alloc(v9);
  uint64_t v10 = swift_task_alloc(v9);
  v6[15] = v10;
  uint64_t v11 = type metadata accessor for UUID(0LL);
  v6[16] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[17] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[18] = swift_task_alloc(v13);
  v6[19] = swift_task_alloc(v13);
  v6[20] = swift_task_alloc(v13);
  v6[21] = swift_task_alloc(v13);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  v6[22] = static AirDropActor.shared;
  uint64_t v14 = (void *)swift_task_alloc(dword_10064DA84);
  v6[23] = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_1002F5CDC;
  return sub_1002F6814(v10, a2, a3);
}

uint64_t sub_1002F5CDC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 184LL));
  return swift_task_switch(sub_1002F5D30, v1, 0LL);
}

uint64_t sub_1002F5D30()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 192) = v4;
  if (v4(v3, 1LL, v1) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    sub_100187100(v3, &qword_10064DA60);
    if (v5)
    {
      uint64_t v6 = *(void *)(v0 + 96);
      os_log_type_t v7 = (void *)swift_task_alloc(dword_10064DA84);
      *(void *)(v0 + 200) = v7;
      *os_log_type_t v7 = v0;
      v7[1] = sub_1002F62A4;
      return sub_1002F6814(*(void *)(v0 + 112), *(void *)(v0 + 88), v6);
    }

    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v32 = *(const char **)(v0 + 96);
    uint64_t v33 = *(void *)(v0 + 80);
    uint64_t v34 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v34, (uint64_t)qword_10064D970);
    swift_bridgeObjectRetain_n(v32, 2LL);
    uint64_t v35 = swift_bridgeObjectRetain_n(v33, 2LL);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.error.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v52 = *(void *)(v0 + 96);
      uint64_t v38 = *(const char **)(v0 + 80);
      uint64_t v54 = *(void *)(v0 + 88);
      uint64_t v39 = *(void *)(v0 + 72);
      uint64_t v40 = swift_slowAlloc(22LL, -1LL);
      uint64_t v41 = swift_slowAlloc(64LL, -1LL);
      uint64_t v55 = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      swift_bridgeObjectRetain(v38);
      *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_10018CDB4(v39, (unint64_t)v38, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v40 + 4, v40 + 12);
      swift_bridgeObjectRelease_n(v38, 3LL);
      *(_WORD *)(v40 + 12) = 2080;
      if (v52) {
        uint64_t v42 = v54;
      }
      else {
        uint64_t v42 = 7104878LL;
      }
      if (v52) {
        uint64_t v43 = v32;
      }
      else {
        uint64_t v43 = (const char *)0xE300000000000000LL;
      }
      swift_bridgeObjectRetain(v32);
      *(void *)(v0 + 24) = sub_10018CDB4(v42, (unint64_t)v43, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v40 + 14, v40 + 22);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease_n(v32, 2LL);
      _os_log_impl( (void *)&_mh_execute_header,  v36,  v37,  "Unable to match sender with existing connectable endpoints senderID: %s - contactID: %s",  (uint8_t *)v40,  0x16u);
      swift_arrayDestroy(v41, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v40, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(*(void *)(v0 + 80), 2LL);
      swift_bridgeObjectRelease_n(v32, 2LL);
    }

    uint64_t v31 = 1LL;
  }

  else
  {
    unint64_t v9 = *(void (**)(void, uint64_t, uint64_t))(v2 + 32);
    v9(*(void *)(v0 + 168), v3, v1);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 168);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v15 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v15, (uint64_t)qword_10064D970);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v10, v11, v12);
    uint64_t v16 = swift_bridgeObjectRetain_n(v14, 2LL);
    char v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = *(void *)(v0 + 160);
    uint64_t v22 = *(void *)(v0 + 128);
    uint64_t v21 = *(void *)(v0 + 136);
    int v23 = *(const char **)(v0 + 80);
    if (v19)
    {
      uint64_t v53 = v9;
      uint64_t v24 = *(void *)(v0 + 72);
      uint64_t v50 = *(void *)(v0 + 136);
      uint64_t v25 = swift_slowAlloc(22LL, -1LL);
      uint64_t v51 = swift_slowAlloc(64LL, -1LL);
      uint64_t v55 = v51;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain(v23);
      *(void *)(v0 + 48) = sub_10018CDB4(v24, (unint64_t)v23, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease_n(v23, 3LL);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v26 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v22, v26);
      __n128 v29 = (const char *)v28;
      *(void *)(v0 + 56) = sub_10018CDB4(v27, v28, &v55);
      unint64_t v9 = v53;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v25 + 14, v25 + 22);
      __n128 v30 = swift_bridgeObjectRelease(v29);
      (*(void (**)(uint64_t, uint64_t, __n128))(v50 + 8))(v20, v22, v30);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Matched senderID %s to %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy(v51, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(*(void *)(v0 + 80), 2LL);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    }

    v9(*(void *)(v0 + 64), *(void *)(v0 + 168), *(void *)(v0 + 128));
    uint64_t v31 = 0LL;
  }

  uint64_t v44 = *(void *)(v0 + 160);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 144);
  uint64_t v46 = *(void *)(v0 + 152);
  uint64_t v49 = *(void *)(v0 + 112);
  uint64_t v48 = *(void *)(v0 + 120);
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 136) + 56LL))( *(void *)(v0 + 64),  v31,  1LL,  *(void *)(v0 + 128));
  swift_task_dealloc(v45);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F62A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 200LL));
  return swift_task_switch(sub_1002F62FC, v1, 0LL);
}

uint64_t sub_1002F62FC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192))(v2, 1LL, v1) == 1)
  {
    sub_100187100(v2, &qword_10064DA60);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v3 = *(const char **)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v5 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v5, (uint64_t)qword_10064D970);
    swift_bridgeObjectRetain_n(v3, 2LL);
    uint64_t v6 = swift_bridgeObjectRetain_n(v4, 2LL);
    os_log_type_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v46 = *(void *)(v0 + 96);
      unint64_t v9 = *(const char **)(v0 + 80);
      uint64_t v48 = *(void *)(v0 + 88);
      uint64_t v10 = *(void *)(v0 + 72);
      uint64_t v11 = swift_slowAlloc(22LL, -1LL);
      uint64_t v12 = swift_slowAlloc(64LL, -1LL);
      uint64_t v51 = v12;
      *(_DWORD *)uint64_t v11 = 136315394;
      swift_bridgeObjectRetain(v9);
      *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_10018CDB4(v10, (unint64_t)v9, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease_n(v9, 3LL);
      *(_WORD *)(v11 + 12) = 2080;
      if (v46) {
        uint64_t v13 = v48;
      }
      else {
        uint64_t v13 = 7104878LL;
      }
      if (v46) {
        uint64_t v14 = v3;
      }
      else {
        uint64_t v14 = (const char *)0xE300000000000000LL;
      }
      swift_bridgeObjectRetain(v3, v0 + 16);
      *(void *)(v0 + 24) = sub_10018CDB4(v13, (unint64_t)v14, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v11 + 14, v11 + 22);
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease_n(v3, 2LL);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "Unable to match sender with existing connectable endpoints senderID: %s - contactID: %s",  (uint8_t *)v11,  0x16u);
      swift_arrayDestroy(v12, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1LL, -1LL);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(*(void *)(v0 + 80), 2LL);
      swift_bridgeObjectRelease_n(v3, 2LL);
    }

    uint64_t v38 = 1LL;
  }

  else
  {
    uint64_t v15 = *(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 136) + 32LL);
    v15(*(void *)(v0 + 152), v2, v1);
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v17 = *(void *)(v0 + 144);
    uint64_t v16 = *(void *)(v0 + 152);
    uint64_t v19 = *(void *)(v0 + 128);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v21 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v21, (uint64_t)qword_10064D970);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v17, v16, v19);
    uint64_t v22 = swift_bridgeObjectRetain_n(v20, 2LL);
    int v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    BOOL v25 = os_log_type_enabled(v23, v24);
    uint64_t v26 = *(void *)(v0 + 136);
    uint64_t v27 = *(void *)(v0 + 144);
    uint64_t v28 = *(void *)(v0 + 128);
    __n128 v29 = *(const char **)(v0 + 80);
    if (v25)
    {
      uint64_t v47 = *(void *)(v0 + 136);
      uint64_t v30 = *(void *)(v0 + 72);
      uint64_t v31 = swift_slowAlloc(22LL, -1LL);
      uint64_t v49 = swift_slowAlloc(64LL, -1LL);
      *(_DWORD *)uint64_t v31 = 136315394;
      uint64_t v50 = v15;
      uint64_t v51 = v49;
      swift_bridgeObjectRetain(v29);
      *(void *)(v0 + 32) = sub_10018CDB4(v30, (unint64_t)v29, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease_n(v29, 3LL);
      *(_WORD *)(v31 + 12) = 2080;
      uint64_t v32 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v28, v32);
      uint64_t v35 = (const char *)v34;
      *(void *)(v0 + 40) = sub_10018CDB4(v33, v34, &v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v31 + 14, v31 + 22);
      uint64_t v36 = v35;
      uint64_t v15 = v50;
      __n128 v37 = swift_bridgeObjectRelease(v36);
      (*(void (**)(uint64_t, uint64_t, __n128))(v47 + 8))(v27, v28, v37);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Matched contactID %s to %s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy(v49, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(*(void *)(v0 + 80), 2LL);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    }

    v15(*(void *)(v0 + 64), *(void *)(v0 + 152), *(void *)(v0 + 128));
    uint64_t v38 = 0LL;
  }

  uint64_t v39 = *(void *)(v0 + 160);
  uint64_t v40 = *(void *)(v0 + 168);
  uint64_t v42 = *(void *)(v0 + 144);
  uint64_t v41 = *(void *)(v0 + 152);
  uint64_t v44 = *(void *)(v0 + 112);
  uint64_t v43 = *(void *)(v0 + 120);
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 136) + 56LL))( *(void *)(v0 + 64),  v38,  1LL,  *(void *)(v0 + 128));
  swift_task_dealloc(v40);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F6814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[31] = a3;
  v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v4[33] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[34] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[35] = swift_task_alloc(v7);
  v4[36] = swift_task_alloc(v7);
  unint64_t v8 = (*(void *)(*(void *)(sub_100183098(&qword_100649F58) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[37] = swift_task_alloc(v8);
  v4[38] = swift_task_alloc(v8);
  unint64_t v9 = (*(void *)(*(void *)(sub_100183098(&qword_10064DA60) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[39] = swift_task_alloc(v9);
  v4[40] = swift_task_alloc(v9);
  uint64_t v10 = type metadata accessor for UUID(0LL);
  v4[41] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[42] = v11;
  unint64_t v12 = (*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[43] = swift_task_alloc(v12);
  v4[44] = swift_task_alloc(v12);
  v4[45] = swift_task_alloc(v12);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v13 = static AirDropActor.shared;
  v4[46] = static AirDropActor.shared;
  return swift_task_switch(sub_1002F6968, v13, 0LL);
}

uint64_t sub_1002F6968()
{
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 320);
  UUID.init(uuidString:)(*(void *)(v0 + 240), *(void *)(v0 + 248));
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(void *)(v0 + 376) = v5;
  if (v5(v4, 1LL, v2) == 1)
  {
    uint64_t v121 = v0 + 224;
    sub_100187100(*(void *)(v0 + 320), &qword_10064DA60);
  }

  else
  {
    uint64_t v6 = *(void *)(v0 + 360);
    uint64_t v7 = *(void *)(v0 + 256);
    unint64_t v8 = *(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 336) + 32LL);
    v8(v6, *(void *)(v0 + 320), *(void *)(v0 + 328));
    unint64_t v9 = (const char **)(v7 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs);
    *(void *)&double v10 = swift_beginAccess(v9, v0 + 144, 0LL, 0LL).n128_u64[0];
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain(*v9, v10);
    LOBYTE(v6) = sub_1003A036C(v6, (uint64_t)v11);
    __n128 v12 = swift_bridgeObjectRelease(v11);
    if ((v6 & 1) != 0)
    {
      if (qword_100644138 != -1) {
        swift_once(&qword_100644138, sub_1002E9860);
      }
      uint64_t v13 = *(void *)(v0 + 352);
      uint64_t v14 = *(void *)(v0 + 360);
      uint64_t v15 = *(void *)(v0 + 328);
      uint64_t v16 = *(void *)(v0 + 336);
      uint64_t v17 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v17, (uint64_t)qword_10064D970);
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
      uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
      os_log_type_t v20 = static os_log_type_t.default.getter();
      BOOL v21 = os_log_type_enabled(v19, v20);
      uint64_t v22 = *(void *)(v0 + 352);
      uint64_t v23 = *(void *)(v0 + 328);
      uint64_t v24 = *(void *)(v0 + 336);
      if (v21)
      {
        BOOL v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v26 = swift_slowAlloc(32LL, -1LL);
        uint64_t v126 = v26;
        *(_DWORD *)BOOL v25 = 136315138;
        uint64_t v27 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v23, v27);
        uint64_t v30 = (const char *)v29;
        *(void *)(v0 + 224) = sub_10018CDB4(v28, v29, &v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v25 + 4, v25 + 12);
        __n128 v31 = swift_bridgeObjectRelease(v30);
        (*(void (**)(uint64_t, uint64_t, __n128))(v24 + 8))(v22, v23, v31);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Direct match to displayable found %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1LL, -1LL);
        swift_slowDealloc(v25, -1LL, -1LL);
      }

      else
      {
        (*(void (**)(void, void))(v24 + 8))(*(void *)(v0 + 352), *(void *)(v0 + 328));
      }

      uint64_t v107 = *(void *)(v0 + 328);
      uint64_t v108 = *(void *)(v0 + 336);
      uint64_t v109 = *(void *)(v0 + 232);
      v8(v109, *(void *)(v0 + 360), v107);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v109, 0LL, 1LL, v107);
      goto LABEL_49;
    }

    uint64_t v121 = v0 + 224;
    (*(void (**)(void, void, __n128))(*(void *)(v0 + 336) + 8LL))( *(void *)(v0 + 360),  *(void *)(v0 + 328),  v12);
  }

  uint64_t v120 = (void *)(v0 + 16);
  uint64_t v124 = v0 + 200;
  uint64_t v118 = (__int128 *)(v0 + 56);
  uint64_t v32 = *(void *)(v0 + 256);
  uint64_t v33 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs;
  *(void *)(v0 + 384) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_displayableIDs;
  unint64_t v34 = (uint64_t *)(v32 + v33);
  *(void *)&double v35 = swift_beginAccess(v32 + v33, v0 + 96, 0LL, 0LL).n128_u64[0];
  uint64_t v36 = *v34;
  *(void *)(v0 + 392) = *v34;
  char v37 = *(_BYTE *)(v36 + 32);
  *(_BYTE *)(v0 + 464) = v37;
  uint64_t v38 = 1LL << v37;
  if (v38 < 64) {
    uint64_t v39 = ~(-1LL << v38);
  }
  else {
    uint64_t v39 = -1LL;
  }
  unint64_t v40 = v39 & *(void *)(v36 + 56);
  *(void *)(v0 + 400) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_connectableByDisplayableID;
  *(void *)(v0 + 408) = 0LL;
  swift_bridgeObjectRetain((const char *)v36, v35);
  int64_t v41 = 0LL;
  while (1)
  {
    if (v40)
    {
      unint64_t v45 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      unint64_t v46 = v45 | (v41 << 6);
      uint64_t v47 = *(void *)(v0 + 392);
      goto LABEL_30;
    }

    int64_t v48 = v41 + 1;
    if (__OFADD__(v41, 1LL))
    {
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }

    int64_t v49 = (unint64_t)((1LL << *(_BYTE *)(v0 + 464)) + 63) >> 6;
    uint64_t v47 = *(void *)(v0 + 392);
    if (v48 >= v49) {
      goto LABEL_35;
    }
    uint64_t v50 = v47 + 56;
    unint64_t v51 = *(void *)(v47 + 56 + 8 * v48);
    ++v41;
    if (!v51)
    {
      int64_t v41 = v48 + 1;
      if (v48 + 1 >= v49) {
        goto LABEL_35;
      }
      unint64_t v51 = *(void *)(v50 + 8 * v41);
      if (!v51)
      {
        int64_t v41 = v48 + 2;
        if (v48 + 2 >= v49) {
          goto LABEL_35;
        }
        unint64_t v51 = *(void *)(v50 + 8 * v41);
        if (!v51) {
          break;
        }
      }
    }

uint64_t sub_1002F742C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 448LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 368LL);
  *(void *)(*(void *)v1 + 456LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1002F748C, v3, 0LL);
}

uint64_t sub_1002F748C()
{
  uint64_t v112 = v0 + 216;
  uint64_t v114 = (uint64_t *)(v0 + 208);
  uint64_t v1 = *(const char **)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 264);
  uint64_t v6 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v7 = *(const char **)(v0 + 248);
  swift_bridgeObjectRetain(v7);
  sub_1002E60D4((uint64_t)v1, v8, v7, v3);
  swift_bridgeObjectRelease(v1);
  sub_1001915A4(v3, v4, &qword_100649F58);
  uint64_t v115 = (void *)(v0 + 16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) != 1)
  {
    sub_1001A4B40(*(void *)(v0 + 296), *(void *)(v0 + 288), type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_100644138 != -1) {
LABEL_46:
    }
      swift_once(&qword_100644138, sub_1002E9860);
    uint64_t v44 = *(void *)(v0 + 280);
    uint64_t v45 = *(void *)(v0 + 288);
    uint64_t v46 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v46, (uint64_t)qword_10064D970);
    uint64_t v47 = sub_1001A4B84(v45, v44, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.default.getter();
    BOOL v50 = os_log_type_enabled(v48, v49);
    uint64_t v51 = *(void *)(v0 + 392);
    uint64_t v52 = *(void *)(v0 + 304);
    uint64_t v53 = *(void *)(v0 + 280);
    uint64_t v54 = *(void *)(v0 + 288);
    if (v50)
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v56 = swift_slowAlloc(32LL, -1LL);
      v119[0] = v56;
      *(_DWORD *)uint64_t v55 = 136315138;
      sub_10020C5CC();
      uint64_t v110 = v51;
      uint64_t v58 = (const char *)v57;
      *uint64_t v114 = sub_10018CDB4(v59, v57, v119);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v114, v112, v55 + 4, v55 + 12);
      swift_bridgeObjectRelease(v58);
      sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Matching endpoint found %s", v55, 0xCu);
      swift_arrayDestroy(v56, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v55, -1LL, -1LL);

      sub_1001A4BC8(v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100187100(v52, &qword_100649F58);
      uint64_t v60 = v110;
    }

    else
    {

      sub_1001A4BC8(v53, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1001A4BC8(v54, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_100187100(v52, &qword_100649F58);
      uint64_t v60 = v51;
    }

    swift_release(v60);
    unint64_t v61 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 432);
    uint64_t v62 = *(void *)(v0 + 328);
    uint64_t v63 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 440))(v63, *(void *)(v0 + 344), v62);
    v61(v63, 0LL, 1LL, v62);
    sub_10018709C(v115);
    goto LABEL_43;
  }

  uint64_t v109 = (__int128 *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 336);
  uint64_t v10 = *(void *)(v0 + 344);
  uint64_t v111 = v0 + 200;
  uint64_t v11 = *(void *)(v0 + 328);
  uint64_t v12 = *(void *)(v0 + 296);
  sub_100187100(*(void *)(v0 + 304), &qword_100649F58);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v11);
  sub_100187100(v12, &qword_100649F58);
  sub_10018709C((void *)(v0 + 16));
  int64_t v13 = *(void *)(v0 + 416);
  unint64_t v14 = *(void *)(v0 + 424);
  *(void *)(v0 + 408) = v2;
  while (1)
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      uint64_t v20 = *(void *)(v0 + 392);
      goto LABEL_20;
    }

    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }

    int64_t v22 = (unint64_t)((1LL << *(_BYTE *)(v0 + 464)) + 63) >> 6;
    uint64_t v20 = *(void *)(v0 + 392);
    if (v21 >= v22) {
      goto LABEL_30;
    }
    uint64_t v23 = v20 + 56;
    unint64_t v24 = *(void *)(v20 + 56 + 8 * v21);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v22) {
        goto LABEL_30;
      }
      unint64_t v24 = *(void *)(v23 + 8 * v13);
      if (!v24)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v22) {
          goto LABEL_30;
        }
        unint64_t v24 = *(void *)(v23 + 8 * v13);
        if (!v24) {
          break;
        }
      }
    }

uint64_t sub_1002F7F14(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v22 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  v23[0] = v12;
  v23[1] = v13;
  sub_1002499DC(a2, (uint64_t)v24);
  uint64_t v15 = v25;
  uint64_t v14 = v26;
  sub_10019A708(v24, v25);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 32);
  swift_bridgeObjectRetain(v13);
  v16(v15, v14);
  uint64_t v17 = a3[3];
  uint64_t v18 = a3[4];
  sub_10019A708(a3, v17);
  (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  LOBYTE(v17) = static UUID.== infix(_:_:)(v11, v9);
  unint64_t v19 = *(void (**)(char *, uint64_t))(v22 + 8);
  v19(v9, v6);
  v19(v11, v6);
  sub_100187100((uint64_t)v23, (uint64_t *)&unk_10064DC10);
  return v17 & 1;
}

__n128 sub_1002F8078()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1002EEB54();
  uint64_t v3 = (const char *)v2;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 >= 0) {
      v2 &= 0xFFFFFFFFFFFFFF8uLL;
    }
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v2);
  }

  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  swift_bridgeObjectRelease(v3);
  sub_1003961FC(v4);
  uint64_t v6 = *(void (**)(void))(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler);
  if (v6)
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_endpointsChangedHandler + 8);
    swift_retain(v7);
    uint64_t v8 = (const char *)sub_1002EEB54();
    v6();
    sub_100224FF8((uint64_t)v6, v7);
    return swift_bridgeObjectRelease(v8);
  }

  return result;
}

uint64_t sub_1002F8174()
{
  uint64_t v1 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for TaskPriority(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1LL, 1LL, v4);
  uint64_t v6 = (void *)swift_allocObject(&unk_1005D9D00, 40LL, 7LL);
  v6[2] = 0LL;
  uint64_t v7 = v6 + 2;
  void v6[3] = 0LL;
  v6[4] = v0;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4);
  id v9 = v0;
  if (v8 == 1)
  {
    sub_100187100((uint64_t)v3, &qword_100646560);
    uint64_t v10 = 0LL;
    uint64_t v11 = 0LL;
    uint64_t v12 = 7168LL;
  }

  else
  {
    unsigned __int8 v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v12 = v13 | 0x1C00LL;
    uint64_t v14 = *v7;
    if (*v7)
    {
      uint64_t v15 = v6[3];
      uint64_t ObjectType = swift_getObjectType(*v7);
      swift_unknownObjectRetain(v14);
      uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      uint64_t v11 = v17;
      swift_unknownObjectRelease(v14);
    }

    else
    {
      uint64_t v10 = 0LL;
      uint64_t v11 = 0LL;
    }
  }

  uint64_t v18 = swift_allocObject(&unk_1005D9D28, 32LL, 7LL);
  *(void *)(v18 + swift_weakDestroy(v0 + 16) = &unk_10064DAF0;
  *(void *)(v18 + 24) = v6;
  if (v11 | v10)
  {
    v22[0] = 0LL;
    v22[1] = 0LL;
    unint64_t v19 = v22;
    v22[2] = v10;
    v22[3] = v11;
  }

  else
  {
    unint64_t v19 = 0LL;
  }

  uint64_t v20 = swift_task_create(v12, v19, (char *)&type metadata for () + 8, &unk_100649820, v18);
  return swift_release(v20);
}

uint64_t sub_1002F8344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a4;
  return swift_task_switch(sub_1002F835C, 0LL, 0LL);
}

uint64_t sub_1002F835C()
{
  if (qword_100644138 != -1) {
    swift_once(&qword_100644138, sub_1002E9860);
  }
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064D970);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(char **)(v0 + 16);
  if (v5)
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v7 = 67109120;
    *(_DWORD *)(v0 + 24) = [*(id *)&v6[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus] screenOn];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 28, v7 + 4, v7 + 8);

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Screen state changed %{BOOL}d", v7, 8u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
  }

  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002F84E0, static AirDropActor.shared, 0LL);
}

uint64_t sub_1002F84E0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002F8738()
{
  return type metadata accessor for SDAirDropEndpointService(0LL);
}

uint64_t type metadata accessor for SDAirDropEndpointService(uint64_t a1)
{
  uint64_t result = qword_10064DA38;
  if (!qword_10064DA38) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropEndpointService);
  }
  return result;
}

uint64_t sub_1002F877C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[3] = "\b";
  void v4[4] = "\b";
  void v4[5] = &unk_1004D49A8;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    void v4[6] = *(void *)(result - 8) + 64LL;
    void v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[12] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[13] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[15] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[16] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[17] = &unk_1004D49A8;
    v4[18] = &unk_1004D49C0;
    return swift_updateClassMetadata2(a1, 256LL, 19LL, v4, a1 + 80);
  }

  return result;
}

uint64_t sub_1002F8844(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v34);
  v33[4] = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v6 = __chkstk_darwin(v5);
  v33[1] = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  id v9 = (char *)v33 - v8;
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  v33[0] = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  int64_t v41 = (char *)v33 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v33 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v33 - v19;
  __chkstk_darwin(v18);
  uint64_t v38 = (uint64_t)v33 - v21;
  uint64_t v22 = *(void *)(a1 + 56);
  double v35 = (void *)(a1 + 56);
  uint64_t v23 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v24 = -1LL;
  if (v23 < 64) {
    uint64_t v24 = ~(-1LL << v23);
  }
  unint64_t v25 = v24 & v22;
  uint64_t v37 = a2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegate;
  int64_t v36 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  uint64_t v40 = a1;
  v33[2] = v9;
  uint64_t v33[3] = v10;
  if (v25)
  {
    unint64_t v26 = __clz(__rbit64(v25));
    goto LABEL_18;
  }

  if (v36 > 1)
  {
    unint64_t v27 = v35[1];
    uint64_t v28 = 1LL;
    if (v27) {
      goto LABEL_17;
    }
    uint64_t v28 = 2LL;
    if (v36 <= 2) {
      goto LABEL_19;
    }
    unint64_t v27 = v35[2];
    if (v27) {
      goto LABEL_17;
    }
    uint64_t v28 = 3LL;
    if (v36 <= 3) {
      goto LABEL_19;
    }
    unint64_t v27 = v35[3];
    if (v27)
    {
LABEL_17:
      unint64_t v26 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_18:
      uint64_t v30 = v38;
      sub_1001A4B84( *(void *)(v40 + 48) + *(void *)(v39 + 72) * v26,  v38,  type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1001A4B40(v30, (uint64_t)v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1001A4B84((uint64_t)v20, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v31 = (char *)&loc_1002F8BB0 + *((int *)qword_1002F9018 + swift_getEnumCaseMultiPayload(v17, v10));
      __asm { BR              X9 }
    }

    uint64_t v29 = 4LL;
    if (v36 > 4)
    {
      unint64_t v27 = v35[4];
      if (v27)
      {
        uint64_t v28 = 4LL;
        goto LABEL_17;
      }

      while (1)
      {
        uint64_t v28 = v29 + 1;
        if (__OFADD__(v29, 1LL))
        {
          __break(1u);
          JUMPOUT(0x1002F9000LL);
        }

        if (v28 >= v36) {
          break;
        }
        unint64_t v27 = v35[v28];
        ++v29;
        if (v27) {
          goto LABEL_17;
        }
      }
    }
  }

uint64_t sub_1002F9038(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t (*)(uint64_t *, void *))isStackAllocationSafe;
  char v7 = *(_BYTE *)(a3 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (1LL << v7) + 63;
  uint64_t v10 = v9 >> 6;
  size_t v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0LL), v11);
    uint64_t v12 = sub_1002F91A8((uint64_t)&v15 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0LL), v10, a3, v6);
    if (v3) {
      swift_willThrow(v12);
    }
    else {
      return v12;
    }
  }

  else
  {
    uint64_t v13 = (void *)swift_slowAlloc(v11, -1LL);
    bzero(v13, v11);
    a2 = sub_1002F91A8((uint64_t)v13, v10, a3, v6);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  return a2;
}

uint64_t sub_1002F91A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, void *))
{
  uint64_t v22 = (unint64_t *)result;
  uint64_t v23 = 0LL;
  int64_t v7 = 0LL;
  uint64_t v8 = a3 + 64;
  uint64_t v9 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v10 = -1LL;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 64);
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v7 << 6);
LABEL_17:
    uint64_t v17 = *(void *)(a3 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v13);
    uint64_t v19 = v18[1];
    uint64_t v25 = *v18;
    uint64_t v26 = v19;
    sub_1002499DC(v17 + 48 * v13, (uint64_t)v24);
    swift_bridgeObjectRetain(v19);
    char v20 = a4(&v25, v24);
    sub_10018709C(v24);
    uint64_t result = swift_bridgeObjectRelease(v26);
    if (v4) {
      return result;
    }
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)v22 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v13;
      BOOL v14 = __OFADD__(v23++, 1LL);
      if (v14) {
        goto LABEL_30;
      }
    }
  }

  BOOL v14 = __OFADD__(v7++, 1LL);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }

  if (v7 >= v27) {
    return sub_1002484BC(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }

  int64_t v16 = v7 + 1;
  if (v7 + 1 >= v27) {
    return sub_1002484BC(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 2;
  if (v7 + 2 >= v27) {
    return sub_1002484BC(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v7 + 3;
  if (v7 + 3 >= v27) {
    return sub_1002484BC(v22, a2, v23, a3);
  }
  unint64_t v15 = *(void *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    int64_t v7 = v16;
    goto LABEL_16;
  }

  while (1)
  {
    int64_t v7 = v16 + 1;
    if (__OFADD__(v16, 1LL)) {
      break;
    }
    if (v7 >= v27) {
      return sub_1002484BC(v22, a2, v23, a3);
    }
    unint64_t v15 = *(void *)(v8 + 8 * v7);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }

Swift::Int sub_1002F93A4(uint64_t isStackAllocationSafe, int a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (1LL << v5) + 63;
  uint64_t v8 = v7 >> 6;
  size_t v9 = 8 * (v7 >> 6);
  if (v6 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v7 >> 6), 8LL), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL), v9);
    Swift::Int v10 = sub_1002F9514((unint64_t *)((char *)&v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0LL)), v8, v4, a2);
    uint64_t v11 = swift_release(v4);
    if (v2) {
      swift_willThrow(v11);
    }
  }

  else
  {
    unint64_t v12 = (void *)swift_slowAlloc(v9, -1LL);
    bzero(v12, v9);
    Swift::Int v10 = sub_1002F9514((unint64_t *)v12, v8, v4, a2);
    swift_release(v4);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  return v10;
}

Swift::Int sub_1002F9514(unint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v22 = a2;
  int v29 = a4;
  uint64_t v23 = a1;
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  size_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v22 - v11;
  uint64_t v24 = 0LL;
  uint64_t v25 = v10;
  uint64_t v13 = *(void *)(a3 + 56);
  int64_t v27 = (void *)(a3 + 56);
  uint64_t v14 = 1LL << *(_BYTE *)(a3 + 32);
  uint64_t v15 = -1LL;
  if (v14 < 64) {
    uint64_t v15 = ~(-1LL << v14);
  }
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v30 = (char *)&v22 - v11;
  uint64_t v26 = v6;
  if ((v15 & v13) != 0)
  {
    unint64_t v16 = __clz(__rbit64(v15 & v13));
    goto LABEL_18;
  }

  if (v28 > 1)
  {
    unint64_t v17 = v27[1];
    uint64_t v18 = 1LL;
    if (v17) {
      goto LABEL_17;
    }
    uint64_t v18 = 2LL;
    if (v28 <= 2) {
      goto LABEL_19;
    }
    unint64_t v17 = v27[2];
    if (v17) {
      goto LABEL_17;
    }
    uint64_t v18 = 3LL;
    if (v28 <= 3) {
      goto LABEL_19;
    }
    unint64_t v17 = v27[3];
    if (v17)
    {
LABEL_17:
      unint64_t v16 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_18:
      sub_1001A4B84( *(void *)(a3 + 48) + *(void *)(v6 + 72) * v16,  (uint64_t)v12,  type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_1001A4B84((uint64_t)v12, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
      char v20 = (char *)&loc_1002F972C + dword_1002F987C[swift_getEnumCaseMultiPayload(v9, v5)];
      __asm { BR              X9 }
    }

    uint64_t v19 = 4LL;
    if (v28 > 4)
    {
      unint64_t v17 = v27[4];
      if (v17)
      {
        uint64_t v18 = 4LL;
        goto LABEL_17;
      }

      while (1)
      {
        uint64_t v18 = v19 + 1;
        if (__OFADD__(v19, 1LL))
        {
          __break(1u);
          JUMPOUT(0x1002F987CLL);
        }

        if (v18 >= v28) {
          break;
        }
        unint64_t v17 = v27[v18];
        ++v19;
        if (v17) {
          goto LABEL_17;
        }
      }
    }
  }

Swift::Int sub_1002F988C(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0) {
    uint64_t v2 = (void *)sub_1002FAD14(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1002F98F4(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1002F98F4(uint64_t *a1)
{
  uint64_t v144 = type metadata accessor for UUID(0LL);
  uint64_t v137 = *(void *)(v144 - 8);
  uint64_t v2 = __chkstk_darwin(v144);
  uint64_t v4 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v125 - v5;
  Swift::Int v7 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v7);
  if (result >= v7)
  {
    if (v7 < 0) {
      goto LABEL_137;
    }
    if (v7) {
      return sub_1002FA2E0(0LL, v7, 1LL, a1);
    }
    return result;
  }

  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_145;
  }
  Swift::Int v126 = result;
  if (v7 < 2)
  {
    uint64_t v134 = (char *)&_swiftEmptyArrayStorage[4];
    uint64_t v125 = _swiftEmptyArrayStorage;
    if (v7 != 1)
    {
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      uint64_t v14 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v117 = v136;
      if (v15 >= 2)
      {
        uint64_t v118 = *a1;
        do
        {
          unint64_t v119 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_132;
          }
          if (!v118) {
            goto LABEL_144;
          }
          uint64_t v106 = v14;
          uint64_t v120 = v14 + 32;
          uint64_t v121 = *(void *)&v14[16 * v119 + 32];
          uint64_t v122 = *(void *)&v14[16 * v15 + 24];
          sub_1002FA4E0( (char *)(v118 + 48 * v121),  (char *)(v118 + 48LL * *(void *)&v120[16 * v15 - 16]),  v118 + 48 * v122,  v134);
          if (v117) {
            goto LABEL_100;
          }
          if (v122 < v121) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0) {
            uint64_t v106 = sub_1002FAD00((uint64_t)v106);
          }
          if (v119 >= *((void *)v106 + 2)) {
            goto LABEL_134;
          }
          uint64_t v123 = &v106[16 * v119 + 32];
          *(void *)uint64_t v123 = v121;
          *((void *)v123 + 1) = v122;
          unint64_t v124 = *((void *)v106 + 2);
          if (v15 > v124) {
            goto LABEL_135;
          }
          uint64_t v14 = v106;
          memmove(&v106[16 * v15 + 16], &v106[16 * v15 + 32], 16 * (v124 - v15));
          *((void *)v106 + 2) = v124 - 1;
          unint64_t v15 = v124 - 1;
        }

        while (v124 > 2);
      }

      swift_bridgeObjectRelease(v14);
      uint64_t v116 = v125;
      v125[2] = 0LL;
      return swift_bridgeObjectRelease(v116);
    }
  }

  else
  {
    uint64_t v10 = v9 >> 1;
    uint64_t v11 = sub_100183098(&qword_100645200);
    uint64_t v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(void *)(v12 + swift_weakDestroy(v0 + 16) = v10;
    uint64_t v125 = (void *)v12;
    uint64_t v134 = (char *)(v12 + 32);
  }

  Swift::Int v13 = 0LL;
  uint64_t v14 = (char *)_swiftEmptyArrayStorage;
  uint64_t v135 = a1;
  uint64_t v131 = v6;
  char v132 = v4;
  while (1)
  {
    Swift::Int v16 = v13++;
    Swift::Int v130 = v16;
    if (v13 >= v7) {
      break;
    }
    uint64_t v17 = *a1;
    sub_1002499DC(*a1 + 48 * v13, (uint64_t)&v141);
    uint64_t v18 = v17;
    sub_1002499DC(v17 + 48 * v16, (uint64_t)v138);
    Swift::Int v133 = v7;
    uint64_t v20 = v142;
    uint64_t v19 = v143;
    sub_10019A708(&v141, v142);
    (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v20, v19);
    uint64_t v21 = v139;
    uint64_t v22 = v140;
    sub_10019A708(v138, v139);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 32);
    uint64_t v24 = v22;
    Swift::Int v7 = v133;
    v23(v21, v24);
    LODWORD(v129) = static UUID.< infix(_:_:)(v6, v4);
    uint64_t v25 = *(char **)(v137 + 8);
    uint64_t v26 = v144;
    ((void (*)(char *, uint64_t))v25)(v4, v144);
    uint64_t v128 = v25;
    ((void (*)(char *, uint64_t))v25)(v6, v26);
    sub_10018709C(v138);
    sub_10018709C(&v141);
    uint64_t v127 = v18;
    if (v16 + 2 >= v7)
    {
      Swift::Int v13 = v16 + 2;
    }

    else
    {
      uint64_t v27 = v18 + 48 * v16 + 48;
      Swift::Int v13 = v16 + 2;
      while (1)
      {
        uint64_t v28 = v27 + 48;
        sub_1002499DC(v27 + 48, (uint64_t)&v141);
        sub_1002499DC(v27, (uint64_t)v138);
        uint64_t v30 = v142;
        uint64_t v29 = v143;
        sub_10019A708(&v141, v142);
        (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v30, v29);
        uint64_t v31 = v139;
        uint64_t v32 = v140;
        sub_10019A708(v138, v139);
        (*(void (**)(uint64_t, uint64_t))(v32 + 32))(v31, v32);
        LODWORD(v31) = static UUID.< infix(_:_:)(v6, v4);
        uint64_t v33 = v144;
        uint64_t v34 = v128;
        ((void (*)(char *, uint64_t))v128)(v4, v144);
        ((void (*)(char *, uint64_t))v34)(v6, v33);
        sub_10018709C(v138);
        sub_10018709C(&v141);
        ++v13;
        uint64_t v27 = v28;
        Swift::Int v7 = v133;
        if (v133 == v13)
        {
          Swift::Int v13 = v133;
          goto LABEL_23;
        }
      }

      Swift::Int v7 = v133;
    }

LABEL_84:
        if ((v87 & 1) != 0) {
          goto LABEL_124;
        }
        uint64_t v95 = &v62[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_127;
        }
        if (v98 < v86) {
          goto LABEL_14;
        }
LABEL_92:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }

        uint64_t v104 = *a1;
        if (!*a1) {
          goto LABEL_142;
        }
        Swift::Int v105 = v13;
        uint64_t v106 = v14;
        uint64_t v107 = &v62[16 * v103];
        uint64_t v108 = *(void *)v107;
        uint64_t v109 = v62;
        unint64_t v110 = v64;
        uint64_t v111 = &v62[16 * v64];
        uint64_t v112 = *((void *)v111 + 1);
        uint64_t v113 = v136;
        sub_1002FA4E0( (char *)(v104 + 48LL * *(void *)v107),  (char *)(v104 + 48LL * *(void *)v111),  v104 + 48 * v112,  v134);
        uint64_t v136 = v113;
        if (v113)
        {
LABEL_100:
          uint64_t v115 = v125;
          swift_bridgeObjectRelease(v106);
          v115[2] = 0LL;
          uint64_t v116 = v115;
          return swift_bridgeObjectRelease(v116);
        }

        if (v112 < v108) {
          goto LABEL_117;
        }
        if (v110 > *((void *)v106 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v107 = v108;
        *(void *)&v109[16 * v103 + 8] = v112;
        unint64_t v114 = *((void *)v106 + 2);
        if (v110 >= v114) {
          goto LABEL_119;
        }
        uint64_t v14 = v106;
        unint64_t v15 = v114 - 1;
        memmove(v111, v111 + 16, 16 * (v114 - 1 - v110));
        uint64_t v62 = v109;
        *((void *)v106 + 2) = v114 - 1;
        BOOL v92 = v114 > 2;
        a1 = v135;
        Swift::Int v13 = v105;
        uint64_t v6 = v131;
        uint64_t v4 = v132;
        if (!v92) {
          goto LABEL_14;
        }
      }
    }

    unint64_t v15 = 1LL;
    a1 = v135;
LABEL_14:
    Swift::Int v7 = a1[1];
    if (v13 >= v7) {
      goto LABEL_103;
    }
  }

  if (v13 >= v7) {
    goto LABEL_52;
  }
LABEL_33:
  if (__OFSUB__(v13, v16)) {
    goto LABEL_136;
  }
  if (v13 - v16 >= v126) {
    goto LABEL_52;
  }
  if (__OFADD__(v16, v126)) {
    goto LABEL_139;
  }
  if (v16 + v126 >= v7) {
    Swift::Int v46 = v7;
  }
  else {
    Swift::Int v46 = v16 + v126;
  }
  if (v46 >= v16)
  {
    if (v13 != v46)
    {
      uint64_t v128 = v14;
      uint64_t v47 = 48 * v13 - 48;
      Swift::Int v129 = v46;
      do
      {
        Swift::Int v133 = v47;
        while (1)
        {
          Swift::Int v48 = v13;
          uint64_t v49 = *a1 + v47;
          sub_1002499DC(v49 + 48, (uint64_t)&v141);
          sub_1002499DC(v49, (uint64_t)v138);
          BOOL v50 = a1;
          uint64_t v51 = v142;
          uint64_t v52 = v143;
          sub_10019A708(&v141, v142);
          (*(void (**)(uint64_t, uint64_t))(v52 + 32))(v51, v52);
          uint64_t v53 = v139;
          uint64_t v54 = v140;
          sub_10019A708(v138, v139);
          (*(void (**)(uint64_t, uint64_t))(v54 + 32))(v53, v54);
          LOBYTE(v53) = static UUID.< infix(_:_:)(v6, v4);
          uint64_t v55 = *(void (**)(char *, uint64_t))(v137 + 8);
          uint64_t v56 = v144;
          v55(v4, v144);
          v55(v6, v56);
          sub_10018709C(v138);
          sub_10018709C(&v141);
          if ((v53 & 1) == 0) {
            break;
          }
          uint64_t v57 = *v50;
          if (!*v50) {
            goto LABEL_141;
          }
          a1 = v50;
          uint64_t v58 = (_OWORD *)(v57 + v47);
          sub_1001CCE4C((__int128 *)(v57 + v47 + 48), &v141);
          __int128 v59 = v58[1];
          v58[3] = *v58;
          v58[4] = v59;
          v58[5] = v58[2];
          sub_1001CCE4C(&v141, v58);
          v47 -= 48LL;
          ++v16;
          Swift::Int v13 = v48;
          if (v48 == v16) {
            goto LABEL_43;
          }
        }

        a1 = v50;
        Swift::Int v13 = v48;
LABEL_43:
        ++v13;
        uint64_t v47 = v133 + 48;
        Swift::Int v16 = v130;
      }

      while (v13 != v129);
      Swift::Int v13 = v129;
      uint64_t v14 = v128;
    }

    goto LABEL_52;
  }

  __break(1u);
}

LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Can't construct Array with count < 0",  36LL,  2LL,  "Swift/Array.swift",  17LL,  2,  936LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_1002FA2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v27 = a1;
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = __chkstk_darwin(v8);
  Swift::Int v13 = (char *)&v25 - v12;
  uint64_t v36 = a3;
  uint64_t v26 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = 48 * v36 - 48;
LABEL_5:
    uint64_t v15 = v27;
    uint64_t v28 = v14;
    while (1)
    {
      uint64_t v16 = *a4 + v14;
      sub_1002499DC(v16 + 48, (uint64_t)&v33);
      sub_1002499DC(v16, (uint64_t)v30);
      uint64_t v17 = v34;
      uint64_t v18 = v35;
      sub_10019A708(&v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
      uint64_t v19 = v31;
      uint64_t v20 = v32;
      sub_10019A708(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
      LOBYTE(v19) = static UUID.< infix(_:_:)(v13, v10);
      uint64_t v21 = *(void (**)(char *, uint64_t))(v29 + 8);
      v21(v10, v7);
      v21(v13, v7);
      sub_10018709C(v30);
      uint64_t result = sub_10018709C(&v33);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        uint64_t v14 = v28 + 48;
        if (++v36 == v26) {
          return result;
        }
        goto LABEL_5;
      }

      uint64_t v22 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v23 = (_OWORD *)(v22 + v14);
      sub_1001CCE4C((__int128 *)(v22 + v14 + 48), &v33);
      __int128 v24 = v23[1];
      void v23[3] = *v23;
      v23[4] = v24;
      void v23[5] = v23[2];
      uint64_t result = (uint64_t)sub_1001CCE4C(&v33, v23);
      v14 -= 48LL;
      if (v36 == ++v15) {
        goto LABEL_4;
      }
    }

    __break(1u);
  }

  return result;
}

uint64_t sub_1002FA4E0(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  __int128 v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v56 - v11;
  uint64_t v13 = a2 - a1;
  uint64_t v14 = (a2 - a1) / 48;
  uint64_t v15 = a3 - (void)a2;
  uint64_t v16 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v70 = a1;
  os_log_type_t v69 = a4;
  if (v14 >= v16)
  {
    if (v15 < -47) {
      goto LABEL_45;
    }
    if (a4 != a2 || &a2[48 * v16] <= a4) {
      memmove(a4, a2, 48 * v16);
    }
    uint64_t v34 = &a4[48 * v16];
    char v68 = v34;
    uint64_t v70 = a2;
    if (v15 < 48 || a1 >= a2) {
      goto LABEL_44;
    }
    uint64_t v35 = (char *)(a3 - 48);
    uint64_t v57 = a4;
    uint64_t v58 = a1;
    while (1)
    {
      uint64_t v36 = v35 + 48;
      sub_1002499DC((uint64_t)(v34 - 48), (uint64_t)v65);
      uint64_t v37 = a2 - 48;
      sub_1002499DC((uint64_t)(a2 - 48), (uint64_t)v62);
      uint64_t v38 = v66;
      uint64_t v39 = v67;
      sub_10019A708(v65, v66);
      (*(void (**)(uint64_t, uint64_t))(v39 + 32))(v38, v39);
      uint64_t v40 = v63;
      uint64_t v41 = v64;
      sub_10019A708(v62, v63);
      uint64_t v42 = v12;
      uint64_t v43 = v59;
      (*(void (**)(uint64_t, uint64_t))(v41 + 32))(v40, v41);
      LOBYTE(v40) = static UUID.< infix(_:_:)(v42, v43);
      uint64_t v44 = v61;
      __int128 v45 = *(void (**)(char *, uint64_t))(v60 + 8);
      Swift::Int v46 = v43;
      uint64_t v12 = v42;
      v45(v46, v61);
      v45(v42, v44);
      sub_10018709C(v62);
      sub_10018709C(v65);
      if ((v40 & 1) != 0)
      {
        if (v36 != a2 || v35 >= a2)
        {
          __int128 v47 = *(_OWORD *)v37;
          __int128 v48 = *((_OWORD *)a2 - 1);
          *((_OWORD *)v35 + 1) = *((_OWORD *)a2 - 2);
          *((_OWORD *)v35 + 2) = v48;
          *(_OWORD *)uint64_t v35 = v47;
        }

        v70 -= 48;
        uint64_t v34 = v68;
      }

      else
      {
        unint64_t v49 = (unint64_t)v68;
        uint64_t v34 = v68 - 48;
        v68 -= 48;
        if ((unint64_t)v36 >= v49 && (unint64_t)v35 < v49)
        {
          unint64_t v50 = (unint64_t)v58;
          if (v36 != (char *)v49)
          {
            __int128 v51 = *(_OWORD *)v34;
            __int128 v52 = *(_OWORD *)(v49 - 16);
            *((_OWORD *)v35 + 1) = *(_OWORD *)(v49 - 32);
            *((_OWORD *)v35 + 2) = v52;
            *(_OWORD *)uint64_t v35 = v51;
          }

          uint64_t v37 = a2;
          goto LABEL_40;
        }

        __int128 v53 = *(_OWORD *)v34;
        __int128 v54 = *(_OWORD *)(v49 - 16);
        *((_OWORD *)v35 + 1) = *(_OWORD *)(v49 - 32);
        *((_OWORD *)v35 + 2) = v54;
        *(_OWORD *)uint64_t v35 = v53;
        uint64_t v37 = a2;
      }

      unint64_t v50 = (unint64_t)v58;
LABEL_40:
      if (v34 > v57)
      {
        v35 -= 48;
        a2 = v37;
      }

      goto LABEL_44;
    }
  }

  if (v13 >= -47)
  {
    if (a4 != a1 || &a1[48 * v14] <= a4) {
      memmove(a4, a1, 48 * v14);
    }
    unint64_t v17 = (unint64_t)&a4[48 * v14];
    char v68 = (char *)v17;
    if (v13 >= 48 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_1002499DC((uint64_t)a2, (uint64_t)v65);
        sub_1002499DC((uint64_t)a4, (uint64_t)v62);
        uint64_t v18 = v66;
        uint64_t v19 = v67;
        sub_10019A708(v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v18, v19);
        uint64_t v20 = v63;
        uint64_t v21 = v64;
        sub_10019A708(v62, v63);
        uint64_t v22 = v59;
        (*(void (**)(uint64_t, uint64_t))(v21 + 32))(v20, v21);
        char v23 = static UUID.< infix(_:_:)(v12, v22);
        __int128 v24 = *(void (**)(char *, uint64_t))(v60 + 8);
        uint64_t v25 = v22;
        uint64_t v26 = v61;
        v24(v25, v61);
        v24(v12, v26);
        sub_10018709C(v62);
        sub_10018709C(v65);
        uint64_t v27 = v70;
        if ((v23 & 1) != 0)
        {
          unint64_t v28 = (unint64_t)(a2 + 48);
          if (v70 >= a2 && (unint64_t)v70 < v28 && v70 == a2)
          {
            uint64_t v27 = a2;
          }

          else
          {
            __int128 v29 = *(_OWORD *)a2;
            __int128 v30 = *((_OWORD *)a2 + 2);
            *((_OWORD *)v70 + 1) = *((_OWORD *)a2 + 1);
            *((_OWORD *)v27 + 2) = v30;
            *(_OWORD *)uint64_t v27 = v29;
          }
        }

        else
        {
          uint64_t v31 = v69 + 48;
          if (v70 != v69 || v70 >= v31)
          {
            __int128 v32 = *(_OWORD *)v69;
            __int128 v33 = *((_OWORD *)v69 + 2);
            *((_OWORD *)v70 + 1) = *((_OWORD *)v69 + 1);
            *((_OWORD *)v27 + 2) = v33;
            *(_OWORD *)uint64_t v27 = v32;
          }

          os_log_type_t v69 = v31;
          unint64_t v28 = (unint64_t)a2;
        }

        uint64_t v70 = v27 + 48;
        a4 = v69;
        a2 = (char *)v28;
      }

      while (v28 < a3);
    }

char *sub_1002FA994(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        return result;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_100183098(&qword_10064DA78);
    uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v8;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8]) {
      memmove(v14, v15, 16 * v8);
    }
    *((void *)a4 + 2) = 0LL;
  }

  else
  {
    memcpy(v14, v15, 16 * v8);
  }

  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_1002FAA8C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    char v7 = 2;
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v7,  1046LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6]) {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }

  return result;
}

uint64_t sub_1002FAB48(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_100183098(&qword_1006453B0);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72LL);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000LL && v7 == -1) {
    goto LABEL_14;
  }
  uint64_t v10 = v8 / v7;
  if (v8 / v7 < 0)
  {
LABEL_15:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1046LL,  0);
    __break(1u);
    return result;
  }

  if (v3 < v4 || v3 >= v4 + v10 * v7) {
    return swift_arrayInitWithTakeFrontToBack(v3, v4, v10, result);
  }
  if (v3 != v4) {
    return swift_arrayInitWithTakeBackToFront(v3);
  }
  return result;
}

char *sub_1002FAC58(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    char v9 = 2;
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.moveInitialize with negative count",  55LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  v9,  1046LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7]) {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }

  return result;
}

char *sub_1002FAD00(uint64_t a1)
{
  return sub_1002FA994(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1002FAD14(void *a1)
{
  return sub_10018DDE0(0, a1[2], 0, a1);
}

uint64_t sub_1002FAD28(void *a1)
{
  return sub_10018E694(0, a1[2], 0, a1);
}

uint64_t sub_1002FAD3C(uint64_t a1)
{
  return sub_10018DF84(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1002FAD50(uint64_t a1)
{
  return sub_10018F59C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1002FAD64(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v34 = a6;
  uint64_t v16 = sub_1001A4B04(&v35);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32LL))(v16, a1, a5);
  unint64_t v17 = (void *)*a4;
  unint64_t v19 = sub_1003AD618(a2);
  uint64_t v20 = v17[2];
  BOOL v21 = (v18 & 1) == 0;
  uint64_t v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v23 = v18;
  uint64_t v24 = v17[3];
  if (v24 >= v22 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v25 = (void *)*a4;
    if ((v23 & 1) != 0)
    {
LABEL_8:
      uint64_t v26 = (void *)(v25[7] + 40 * v19);
      sub_10018709C(v26);
      return sub_1001CE0D0(&v35, (uint64_t)v26);
    }

    goto LABEL_11;
  }

  if (v24 >= v22 && (a3 & 1) == 0)
  {
    sub_1003AEC24();
    goto LABEL_7;
  }

  sub_1003A9B44(v22, a3 & 1);
  unint64_t v28 = sub_1003AD618(a2);
  if ((v23 & 1) != (v29 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v12);
    __break(1u);
    return result;
  }

  unint64_t v19 = v28;
  uint64_t v25 = (void *)*a4;
  if ((v23 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  uint64_t v30 = sub_1002499B4((uint64_t)&v35, v36);
  __chkstk_darwin(v30);
  __int128 v32 = (char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v33 + 16))(v32);
  sub_1002FAF64(v19, (uint64_t)v15, (uint64_t)v32, v25, a5, v34);
  return sub_10018709C(&v35);
}

uint64_t sub_1002FAF64(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a5;
  uint64_t v20 = a6;
  uint64_t v11 = sub_1001A4B04(&v18);
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32LL))(v11, a3, a5);
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = type metadata accessor for UUID(0LL);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32LL))( v12 + *(void *)(*(void *)(v13 - 8) + 72LL) * a1,  a2,  v13);
  uint64_t result = sub_1001CE0D0(&v18, a4[7] + 40 * a1);
  uint64_t v15 = a4[2];
  BOOL v16 = __OFADD__(v15, 1LL);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    a4[2] = v17;
  }
  return result;
}

uint64_t sub_1002FB034(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v15 = type metadata accessor for SDAuthenticationSessionExecutor(0LL);
  BOOL v16 = &off_1005DC318;
  *(void *)&__int128 v14 = a3;
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID(0LL);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( v8 + *(void *)(*(void *)(v9 - 8) + 72LL) * a1,  a2,  v9);
  uint64_t result = sub_1001CE0D0(&v14, a4[7] + 40 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1LL);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1002FB0F0(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for SDAuthenticationSessionExecutor(0LL);
  __int128 v32 = &off_1005DC318;
  *(void *)&__int128 v30 = a1;
  BOOL v12 = (void *)*a4;
  unint64_t v14 = sub_1003AD618(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = (void *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      BOOL v21 = (void *)(v20[7] + 40 * v14);
      sub_10018709C(v21);
      return sub_1001CE0D0(&v30, (uint64_t)v21);
    }

    goto LABEL_11;
  }

  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1003AF3FC();
    goto LABEL_7;
  }

  sub_1003AA68C(v17, a3 & 1);
  unint64_t v23 = sub_1003AD618(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }

  unint64_t v14 = v23;
  uint64_t v20 = (void *)*a4;
  if ((v18 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v25 = sub_1002499B4((uint64_t)&v30, v31);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v29 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  sub_1002FB034(v14, (uint64_t)v11, *v27, v20);
  return sub_10018709C(&v30);
}

uint64_t sub_1002FB2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for SFPlatform(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  int64_t v8 = 0LL;
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v10 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v36 = (unint64_t)(v10 + 63) >> 6;
  if ((v11 & v9) != 0) {
    goto LABEL_36;
  }
LABEL_6:
  int64_t v13 = v8 + 1;
  if (!__OFADD__(v8, 1LL))
  {
    if (v13 < v36)
    {
      unint64_t v14 = *(void *)(v35 + 8 * v13);
      ++v8;
      if (v14) {
        goto LABEL_21;
      }
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v36) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v35 + 8 * v8);
      if (v14) {
        goto LABEL_21;
      }
      int64_t v8 = v13 + 2;
      if (v13 + 2 >= v36) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v35 + 8 * v8);
      if (v14) {
        goto LABEL_21;
      }
      int64_t v8 = v13 + 3;
      if (v13 + 3 >= v36) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v35 + 8 * v8);
      if (v14)
      {
LABEL_21:
        unint64_t v12 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v8 << 6); ; unint64_t i = v32 | (v8 << 6))
        {
          sub_1002499DC(*(void *)(a1 + 56) + 48 * i, (uint64_t)v40);
          uint64_t v17 = sub_1001CCE4C(v40, v41);
          static SFPlatform.watchOS.getter(v17);
          char v18 = static SFPlatform.isPlatform(_:)(v7);
          (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
          if ((v18 & 1) != 0) {
            goto LABEL_31;
          }
          sub_1002499DC((uint64_t)v41, (uint64_t)v40);
          uint64_t v19 = sub_100183098(&qword_100645200);
          uint64_t v20 = type metadata accessor for SDAirDropDiscoveredDevice(0LL);
          sub_1002499DC((uint64_t)v41, (uint64_t)v40);
          uint64_t v24 = type metadata accessor for SDAirDropDiscoveredPerson(0LL);
          if (swift_dynamicCast(&v39, v40, v19, v24, 6LL))
          {
            uint64_t v21 = v39;
            uint64_t v22 = (uint64_t *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_allEndpoints);
            unint64_t v23 = &v38;
LABEL_27:
            swift_beginAccess(v22, v23, 0LL, 0LL);
            uint64_t v25 = *v22;
            uint64_t v26 = swift_bridgeObjectRetain(v25);
            char v27 = sub_1002F8844(v26, v34);
            swift_release(v21);
            swift_bridgeObjectRelease(v25);
            if ((v27 & 1) == 0) {
              goto LABEL_5;
            }
            goto LABEL_31;
          }

          sub_1002499DC((uint64_t)v41, (uint64_t)v40);
          uint64_t v28 = type metadata accessor for SDAirDropDiscoveredClassroom(0LL);
          if (!swift_dynamicCast(&v39, v40, v19, v28, 6LL))
          {
LABEL_5:
            uint64_t result = sub_10018709C(v41);
            if (!v12) {
              goto LABEL_6;
            }
            goto LABEL_36;
          }

          swift_release(v39);
LABEL_31:
          sub_1001CCE4C(v41, v40);
          uint64_t v29 = v42;
          if ((swift_isUniquelyReferenced_nonNull_native(v42) & 1) == 0)
          {
            sub_10018D7E4(0, v29[2] + 1LL, 1);
            uint64_t v29 = v42;
          }

          unint64_t v31 = v29[2];
          unint64_t v30 = v29[3];
          if (v31 >= v30 >> 1)
          {
            sub_10018D7E4(v30 > 1, v31 + 1, 1);
            uint64_t v29 = v42;
          }

          v29[2] = v31 + 1;
          uint64_t result = (uint64_t)sub_1001CCE4C(v40, &v29[6 * v31 + 4]);
          if (!v12) {
            goto LABEL_6;
          }
LABEL_36:
          unint64_t v32 = __clz(__rbit64(v12));
          v12 &= v12 - 1;
        }

        uint64_t v21 = v39;
        uint64_t v22 = (uint64_t *)(v39 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
        unint64_t v23 = &v37;
        goto LABEL_27;
      }

      int64_t v15 = v13 + 4;
      if (v15 < v36)
      {
        unint64_t v14 = *(void *)(v35 + 8 * v15);
        if (v14)
        {
          int64_t v8 = v15;
          goto LABEL_21;
        }

        while (1)
        {
          int64_t v8 = v15 + 1;
          if (__OFADD__(v15, 1LL)) {
            goto LABEL_39;
          }
          if (v8 >= v36) {
            break;
          }
          unint64_t v14 = *(void *)(v35 + 8 * v8);
          ++v15;
          if (v14) {
            goto LABEL_21;
          }
        }
      }
    }

uint64_t sub_1002FB6A8()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1002FB6D4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc(dword_10064DAEC);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100195708;
  v3[2] = v2;
  return swift_task_switch(sub_1002F835C, 0LL, 0LL);
}

uint64_t sub_1002FB734()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002FB758()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002FB780(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DB0C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1002EDED8(a1, v4, v5, v6);
}

uint64_t sub_1002FB7F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DB24);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1002EE4DC(a1, v4, v5, v6);
}

uint64_t sub_1002FB860(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int64_t v8 = (void *)swift_task_alloc(dword_10064DB3C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *int64_t v8 = v2;
  v8[1] = sub_100195708;
  return sub_1002EA77C(a1, v4, v5, v7, v6);
}

uint64_t sub_1002FB8DC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1002FB910(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int64_t v8 = (void *)swift_task_alloc(dword_10064DB4C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *int64_t v8 = v2;
  v8[1] = sub_100195708;
  return sub_1002EA068(a1, v4, v5, v7, v6);
}

uint64_t sub_1002FB98C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DB5C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1002EDAFC(a1, v4, v5, v6);
}

uint64_t sub_1002FB9F8()
{
  return sub_1002FC3FC((void (*)(void))&_swift_unknownObjectRelease, 56LL);
}

uint64_t sub_1002FBA08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc(dword_10064DB6C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100195708;
  return sub_1002EDDE0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002FBA88(const char *a1)
{
  return sub_1002ED8BC(a1, v1, (uint64_t)&unk_1005D9E68, (uint64_t)&unk_10064DB88);
}

uint64_t sub_1002FBAB0()
{
  return sub_1002FC3FC((void (*)(void))&_swift_bridgeObjectRelease, 48LL);
}

uint64_t sub_1002FBAC0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_10064DB84);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return swift_task_switch(sub_1002EDA04, 0LL, 0LL);
}

void sub_1002FBB28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v10 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain((const char *)a1);
  int64_t v13 = 0LL;
  while (v12)
  {
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_5:
    sub_1001A4B84( *(void *)(a1 + 48) + *(void *)(v3 + 72) * v15,  (uint64_t)v8,  type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B40((uint64_t)v8, (uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1002F3150((uint64_t)v6);
    char v17 = v16;
    sub_1001A4BC8((uint64_t)v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v17 & 1) != 0) {
      goto LABEL_23;
    }
  }

  int64_t v18 = v13 + 1;
  if (__OFADD__(v13, 1LL))
  {
    __break(1u);
    goto LABEL_25;
  }

  if (v18 >= v23) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v18);
  ++v13;
  if (v19) {
    goto LABEL_22;
  }
  int64_t v13 = v18 + 1;
  if (v18 + 1 >= v23) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v13);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v13 = v18 + 2;
  if (v18 + 2 >= v23) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v13);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v13 = v18 + 3;
  if (v18 + 3 >= v23) {
    goto LABEL_23;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v13);
  if (v19)
  {
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v13 << 6);
    goto LABEL_5;
  }

  int64_t v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release(a1);
    return;
  }

  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
    int64_t v13 = v20;
    goto LABEL_22;
  }

  while (1)
  {
    int64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1LL)) {
      break;
    }
    if (v13 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }

void *sub_1002FBD70(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v33 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v33);
  unint64_t v32 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v31);
  void v30[3] = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v7 = __chkstk_darwin(v6);
  char v37 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v30 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v14 = (char *)v30 - v13;
  __chkstk_darwin(v12);
  char v16 = (char *)v30 - v15;
  uint64_t v42 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v17 = __chkstk_darwin(v42);
  uint64_t v40 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v41 = (char *)v30 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  int64_t v23 = (char *)v30 - v22;
  __chkstk_darwin(v21);
  uint64_t v26 = (char *)v30 - v25;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v43 = _swiftEmptyArrayStorage;
  if (*(void *)(a1 + 16))
  {
    v30[1] = v11;
    v30[2] = v14;
    v30[0] = v2;
    uint64_t v34 = v16;
    uint64_t v35 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_deviceStatus;
    unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v39 = *(void *)(v24 + 72);
    unint64_t v38 = v28;
    sub_1001A4B84(a1 + v28, (uint64_t)v30 - v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B84((uint64_t)v26, (uint64_t)v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v29 = (char *)&loc_1002FBFEC + dword_1002FC3A4[swift_getEnumCaseMultiPayload(v23, v42)];
    __asm { BR              X9 }
  }

  return result;
}

uint64_t sub_1002FC3C4(const char *a1)
{
  return sub_1002ED8BC(a1, v1, (uint64_t)&unk_1005D9E90, (uint64_t)&unk_10064DBE8);
}

uint64_t sub_1002FC3EC()
{
  return sub_1002FC3FC((void (*)(void))&_swift_bridgeObjectRelease, 48LL);
}

uint64_t sub_1002FC3FC(void (*a1)(void), uint64_t a2)
{
  return swift_deallocObject(v2, a2, 7LL);
}

uint64_t sub_1002FC448(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_10064DBE4);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return swift_task_switch(sub_1002EBDA4, 0LL, 0LL);
}

uint64_t sub_1002FC4B0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1002FC4D4(uint64_t a1)
{
}

uint64_t sub_1002FC4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002FC4EC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002FC4F4(uint64_t *a1, uint64_t a2)
{
  return sub_1002F7F14(a1, a2, *(void **)(v2 + 16)) & 1;
}

uint64_t sub_1002FC510(uint64_t a1)
{
  return v1 & 1;
}

uint64_t sub_1002FC52C(uint64_t a1)
{
  return sub_1002F4E40(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1002FC538()
{
  return swift_deallocObject(v0, 88LL);
}

uint64_t sub_1002FC56C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DC44);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_1002F5284(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1002FC5F0()
{
  return swift_deallocObject(v0, 80LL);
}

uint64_t sub_1002FC624(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = (void *)swift_task_alloc(dword_10064DC54);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1001943E8;
  return sub_1002F561C(a1, v4, v5, v6, v7);
}

uint64_t sub_1002FC6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void **)(*(void *)(v3 + 16) + 16LL);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v11 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  id v13 = v10;
  sub_10026664C(a1, v10, 1, a3);

  return sub_100187334((uint64_t)v9);
}

uint64_t sub_1002FC7A0()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerVoiceMails()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropContentHandlerVoiceMails);
}

uint64_t sub_1002FC7E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerVoiceMails();
  uint64_t v3 = swift_allocObject(v2, 24LL, 7LL);
  uint64_t v4 = type metadata accessor for SDAirDropContentHandlerVoiceMemos();
  uint64_t result = swift_allocObject(v4, 24LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1002FC838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002FC6A8(a1, a2, a3);
}

void sub_1002FC858(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x49414D4543494F56LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xE90000000000004CLL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xE90000000000004CLL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._uint64_t countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = 0x49414D4543494F56LL;
  v10._object = (void *)0xE90000000000004CLL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE90000000000004CLL);
  if (v4 > 1)
  {
    v11._uint64_t countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._uint64_t countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._uint64_t countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 6sub_10018709C(v0 + 4) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

void sub_1002FCAAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v63 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  uint64_t v7 = &v57[-v6];
  uint64_t v8 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v8);
  Swift::String v10 = &v57[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  __int128 v59 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v12);
  uint64_t v58 = &v57[-v14];
  uint64_t v15 = type metadata accessor for NWBrowser.Result(0LL);
  uint64_t v75 = *(void *)(v15 - 8);
  uint64_t v76 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v74 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v16);
  os_log_type_t v69 = &v57[-v18];
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v67 = a1 + 56;
  uint64_t v20 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v21 = -1LL;
  if (v20 < 64) {
    uint64_t v21 = ~(-1LL << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v68 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v71 = a1;
  __n128 v23 = swift_bridgeObjectRetain((const char *)a1);
  int64_t v24 = 0LL;
  uint64_t v60 = _swiftEmptyArrayStorage;
  v23.n128_u64[0] = 136315138LL;
  __n128 v62 = v23;
  uint64_t v61 = (char *)&type metadata for Any + 8;
  uint64_t v65 = v10;
  uint64_t v66 = v2;
  uint64_t v70 = v3;
  uint64_t v64 = v11;
  if (v22) {
    goto LABEL_8;
  }
LABEL_14:
  int64_t v34 = v24 + 1;
  if (!__OFADD__(v24, 1LL))
  {
    if (v34 < v68)
    {
      unint64_t v35 = *(void *)(v67 + 8 * v34);
      int64_t v36 = v24 + 1;
      if (v35) {
        goto LABEL_29;
      }
      int64_t v36 = v24 + 2;
      if (v24 + 2 >= v68) {
        goto LABEL_37;
      }
      unint64_t v35 = *(void *)(v67 + 8 * v36);
      if (v35) {
        goto LABEL_29;
      }
      int64_t v36 = v24 + 3;
      if (v24 + 3 >= v68) {
        goto LABEL_37;
      }
      unint64_t v35 = *(void *)(v67 + 8 * v36);
      if (v35) {
        goto LABEL_29;
      }
      int64_t v36 = v24 + 4;
      if (v24 + 4 >= v68) {
        goto LABEL_37;
      }
      unint64_t v35 = *(void *)(v67 + 8 * v36);
      if (v35)
      {
LABEL_29:
        unint64_t v22 = (v35 - 1) & v35;
        int64_t v73 = v36;
        for (unint64_t i = __clz(__rbit64(v35)) + (v36 << 6); ; unint64_t i = v27 | (v24 << 6))
        {
          uint64_t v39 = v75;
          uint64_t v38 = v76;
          uint64_t v40 = v69;
          (*(void (**)(_BYTE *, unint64_t, uint64_t))(v75 + 16))( v69,  *(void *)(v71 + 48) + *(void *)(v75 + 72) * i,  v76);
          uint64_t v41 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v39 + 32))(v74, v40, v38);
          NWBrowser.Result.endpoint.getter(v41);
          if (sub_100412900())
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v10, v7, v2);
            swift_storeEnumTagMultiPayload(v10, v11, 0LL);
            uint64_t v25 = 0LL;
          }

          else
          {
            if (qword_100644140 != -1) {
              swift_once(&qword_100644140, sub_1002FD768);
            }
            uint64_t v42 = type metadata accessor for Logger(0LL);
            sub_100186DE4(v42, (uint64_t)qword_10064DD30);
            uint64_t v43 = v63;
            uint64_t v44 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v63, v7, v2);
            __int128 v45 = v7;
            Swift::Int v46 = (os_log_s *)Logger.logObject.getter(v44);
            os_log_type_t v47 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v46, v47))
            {
              uint64_t v48 = swift_slowAlloc(12LL, -1LL);
              uint64_t v49 = swift_slowAlloc(32LL, -1LL);
              uint64_t v77 = v49;
              *(_DWORD *)uint64_t v48 = v62.n128_u32[0];
              uint64_t v50 = NWEndpoint.debugDescription.getter();
              __int128 v52 = (const char *)v51;
              *(void *)(v48 + sub_10018709C(v0 + 4) = sub_10018CDB4(v50, v51, &v77);
              __n128 v53 = swift_bridgeObjectRelease(v52);
              __int128 v54 = *(void (**)(_BYTE *, uint64_t, __n128))(v70 + 8);
              v54(v43, v66, v53);
              _os_log_impl( (void *)&_mh_execute_header,  v46,  v47,  "Dropping Endpoint %s - missing essential metadata for rendering",  (uint8_t *)v48,  0xCu);
              uint64_t v25 = 1LL;
              swift_arrayDestroy(v49, 1LL, v61);
              swift_slowDealloc(v49, -1LL, -1LL);
              uint64_t v55 = v48;
              uint64_t v2 = v66;
              swift_slowDealloc(v55, -1LL, -1LL);

              ((void (*)(_BYTE *, uint64_t))v54)(v45, v2);
              uint64_t v3 = v70;
            }

            else
            {

              uint64_t v56 = *(void (**)(_BYTE *, uint64_t))(v70 + 8);
              v56(v43, v2);
              v56(v45, v2);
              uint64_t v3 = v70;
              uint64_t v25 = 1LL;
            }

            uint64_t v7 = v45;
            uint64_t v11 = v64;
            Swift::String v10 = v65;
          }

          uint64_t v26 = v72;
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v10, v25, 1LL, v11);
          (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v74, v76);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v26 + 48))(v10, 1LL, v11) == 1)
          {
            sub_1002FEEC0((uint64_t)v10);
            int64_t v24 = v73;
            if (!v22) {
              goto LABEL_14;
            }
          }

          else
          {
            uint64_t v29 = v58;
            sub_10028CA30((uint64_t)v10, (uint64_t)v58);
            sub_10028CA30((uint64_t)v29, (uint64_t)v59);
            if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0) {
              uint64_t v60 = (void *)sub_10018CA08(0, v60[2] + 1LL, 1, (unint64_t)v60);
            }
            unint64_t v31 = v60[2];
            unint64_t v30 = v60[3];
            if (v31 >= v30 >> 1) {
              uint64_t v60 = (void *)sub_10018CA08(v30 > 1, v31 + 1, 1, (unint64_t)v60);
            }
            unint64_t v32 = v59;
            uint64_t v33 = v60;
            v60[2] = v31 + 1;
            sub_10028CA30( (uint64_t)v32,  (uint64_t)v33 + ((*(unsigned __int8 *)(v72 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))
            + *(void *)(v72 + 72) * v31);
            uint64_t v2 = v66;
            int64_t v24 = v73;
            if (!v22) {
              goto LABEL_14;
            }
          }

uint64_t sub_1002FD0E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NWBrowser.Descriptor(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v44 - v7);
  uint64_t v9 = type metadata accessor for NWBrowser.Descriptor.Options.Scope(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for NWBrowser.Descriptor.Options(0LL);
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser;
  if (!*(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser])
  {
    uint64_t v46 = v16;
    uint64_t v47 = result;
    uint64_t v50 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v18 = sub_100183098(&qword_10064DDA0);
    uint64_t v48 = v2;
    uint64_t v49 = v3;
    uint64_t v19 = swift_allocObject( v18,  ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + 5LL * *(void *)(v10 + 72),
            *(unsigned __int8 *)(v10 + 80) | 7LL);
    __int128 v45 = v6;
    uint64_t v20 = v19;
    *(_OWORD *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CD1E0;
    uint64_t v21 = static NWBrowser.Descriptor.Options.Scope.nfc.getter();
    uint64_t v22 = static NWBrowser.Descriptor.Options.Scope.personal.getter(v21);
    uint64_t v23 = static NWBrowser.Descriptor.Options.Scope.contacts.getter(v22);
    uint64_t v24 = static NWBrowser.Descriptor.Options.Scope.family.getter(v23);
    static NWBrowser.Descriptor.Options.Scope.adhoc_paired.getter(v24);
    uint64_t v51 = v20;
    uint64_t v25 = sub_100183F14( &qword_10064DDA8,  (uint64_t (*)(uint64_t))&type metadata accessor for NWBrowser.Descriptor.Options.Scope,  (uint64_t)&protocol conformance descriptor for NWBrowser.Descriptor.Options.Scope);
    uint64_t v26 = sub_100183098(&qword_10064DDB0);
    uint64_t v27 = sub_1001DFF80(&qword_10064DDB8, &qword_10064DDB0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v26, v27, v9, v25);
    unint64_t v28 = v50;
    NWBrowser.Descriptor.Options.init(scope:)(v12);
    uint64_t v29 = (char *)v8 + *(int *)(sub_100183098(&qword_10064DDC0) + 48);
    *uint64_t v8 = 0xD00000000000001ALL;
    v8[1] = 0x80000001005089E0LL;
    uint64_t v31 = v46;
    uint64_t v30 = v47;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v29, v28, v47);
    uint64_t v33 = v48;
    uint64_t v32 = v49;
    (*(void (**)(void *, void, uint64_t))(v49 + 104))( v8,  enum case for NWBrowser.Descriptor.applicationServiceWithOptions(_:),  v48);
    int64_t v34 = v45;
    (*(void (**)(char *, void *, uint64_t))(v32 + 16))(v45, v8, v33);
    type metadata accessor for NWParameters(0LL);
    uint64_t v35 = static NWParameters.airDropNetworkBrowserParameters(domain:type:)( 0xD000000000000018LL,  0x800000010050A090LL,  0xD000000000000012LL,  0x800000010050A0B0LL);
    uint64_t v36 = type metadata accessor for NWBrowser(0LL);
    swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    uint64_t v37 = NWBrowser.init(for:using:)(v34, v35);
    uint64_t v38 = *(void *)&v1[v17];
    *(void *)&v1[v17] = v37;
    swift_retain(v37);
    swift_release(v38);
    uint64_t v39 = swift_allocObject(&unk_1005DA010, 24LL, 7LL);
    *(void *)(v39 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
    uint64_t v40 = v1;
    NWBrowser.browseResultsChangedHandler.setter(sub_1002FDFF0, v39);
    uint64_t v41 = swift_allocObject(&unk_1005DA038, 24LL, 7LL);
    swift_unknownObjectWeakInit(v41 + 16, v40);
    uint64_t v42 = swift_allocObject(&unk_1005DA060, 24LL, 7LL);
    swift_weakInit(v42 + 16);
    uint64_t v43 = swift_allocObject(&unk_1005DA088, 32LL, 7LL);
    *(void *)(v43 + swift_unknownObjectWeakDestroy(v0 + 16) = v41;
    *(void *)(v43 + 2sub_10018709C(v0 + 4) = v42;
    swift_retain(v41);
    swift_retain(v42);
    NWBrowser.stateUpdateHandler.setter(sub_1002FE06C, v43);
    swift_release(v41);
    swift_release(v42);
    NWBrowser.start(queue:)(*(void *)&v40[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browserQueue]);
    swift_release(v37);
    (*(void (**)(void *, uint64_t))(v49 + 8))(v8, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v50, v30);
  }

  return result;
}

void sub_1002FD4F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser);
  if (!v3) {
    return;
  }
  swift_retain(v3);
  NWBrowser.cancel()();
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger);
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    goto LABEL_14;
  }
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)(v4 + 24));
    if (v6) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }

  if (v5 < 0) {
    uint64_t v6 = *(void *)(v4 + 24);
  }
  else {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)(v4 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v6))
  {
LABEL_13:
    swift_bridgeObjectRelease(v5);
LABEL_14:
    unint64_t v8 = 0xE000000000000000LL;
    goto LABEL_15;
  }

uint64_t sub_1002FD768()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064DD30);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064DD30);
  if (qword_100643FF8 != -1) {
    swift_once(&qword_100643FF8, sub_10023A490);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669658);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002FD7F8(const char *a1, const char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v10 = swift_allocObject(&unk_1005DA038, 24LL, 7LL);
  swift_unknownObjectWeakInit(v10 + 16, a3);
  uint64_t v11 = (void *)swift_allocObject(&unk_1005DA100, 56LL, 7LL);
  v11[2] = 0LL;
  __int128 v11[3] = 0LL;
  v11[4] = v10;
  v11[5] = a1;
  v11[6] = a2;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  uint64_t v12 = sub_1001B3808((uint64_t)v8, (uint64_t)&unk_10064DDF0, (uint64_t)v11);
  return swift_release(v12);
}

uint64_t sub_1002FD8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_1002FD918, 0LL, 0LL);
}

uint64_t sub_1002FD918()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 6sub_10018709C(v0 + 4) = Strong;
  if (Strong)
  {
    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    return swift_task_switch(sub_1002FD9C8, static AirDropActor.shared, 0LL);
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1002FD9C8()
{
  uint64_t v1 = *(char **)(v0 + 64);
  sub_1002FCAAC(*(void *)(v0 + 56));
  uint64_t v3 = v2;
  (*(void (**)(void))&v1[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_endpointsUpdateHandler])();
  swift_bridgeObjectRelease(v3);

  return swift_task_switch(sub_100239408, 0LL, 0LL);
}

uint64_t sub_1002FDA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    unint64_t v8 = (void *)result;
    uint64_t v9 = a3 + 16;
    swift_beginAccess(v9, &v11, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v9);
    sub_1002FE2E8(a1);

    return swift_release(Strong);
  }

  return result;
}

uint64_t sub_1002FDACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1002FDB34, static AirDropActor.shared, 0LL);
}

void sub_1002FDB34()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger);
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    goto LABEL_12;
  }
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    *(void *)&double v4 = swift_bridgeObjectRetain((const char *)*(void *)(v1 + 24)).n128_u64[0];
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }

  if (v2 < 0) {
    uint64_t v3 = *(void *)(v1 + 24);
  }
  else {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(const char **)(v1 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v3))
  {
LABEL_11:
    swift_bridgeObjectRelease((const char *)v2, v4);
LABEL_12:
    uint64_t v7 = (const char *)0xE000000000000000LL;
    goto LABEL_13;
  }

uint64_t sub_1002FDD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[5] = a1;
  void v4[6] = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  void v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_1002FDDCC, v5, 0LL);
}

uint64_t sub_1002FDDCC()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate,  v4);
    *(void *)(v0 + 6sub_10018709C(v0 + 4) = v6;

    if (v6) {
      return swift_task_switch(sub_1002FDE74, static AirDropActor.shared, 0LL);
    }
  }

  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002FDE74()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1002E98F0();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_applicationServiceBrowser);
  if (v3)
  {
    id v4 = v3;
    sub_1002FD4F8();

    uint64_t v3 = *(void **)(v1 + v2);
  }

  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  *(void *)(v1 + v2) = 0LL;

  swift_unknownObjectRelease(v5);
  return swift_task_switch(sub_1002FDEF4, v6, 0LL);
}

uint64_t sub_1002FDEF4()
{
  **(_BYTE **)(v0 + 40) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropApplicationServiceBrowser()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser);
}

uint64_t sub_1002FDFCC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002FDFF0(const char *a1, const char *a2)
{
  return sub_1002FD7F8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1002FDFF8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002FE01C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002FE040()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_1002FE06C(uint64_t a1)
{
  return sub_1002FDA3C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1002FE074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v29 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  uint64_t v28 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v5 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v8);
  double v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browserQueue;
  unint64_t v26 = sub_100237A04();
  double v14 = v4;
  static DispatchQoS.default.getter();
  int64_t v34 = _swiftEmptyArrayStorage;
  uint64_t v15 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v16 = sub_100183098(&qword_100650E60);
  uint64_t v17 = sub_1001DFF80((unint64_t *)&qword_100644430, &qword_100650E60);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v16, v17, v8, v15);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v28);
  uint64_t v18 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000034LL,  0x800000010050A0D0LL,  v13,  v10,  v7,  0LL);
  *(void *)&v4[v27] = v18;
  uint64_t v19 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_delegate];
  *((void *)v19 + 1) = 0LL;
  swift_unknownObjectWeakInit(v19, 0LL);
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_browser] = 0LL;
  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_parameters;
  type metadata accessor for NWParameters(0LL);
  *(void *)&v14[v20] = static NWParameters.applicationService.getter();
  uint64_t v21 = v29;
  uint64_t v22 = v30;
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_sessionLogger] = v29;
  uint64_t v23 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropApplicationServiceBrowser_endpointsUpdateHandler];
  uint64_t v24 = v31;
  *(void *)uint64_t v23 = v22;
  *((void *)v23 + 1) = v24;
  swift_retain(v21);
  swift_retain(v24);

  v33.receiver = v14;
  v33.super_class = ObjectType;
  return objc_msgSendSuper2(&v33, "init");
}

void sub_1002FE2E8(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  id v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for NWError(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v88 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v91 = (char *)&v88 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = type metadata accessor for NWBrowser.State(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for NWBrowser.State.failed(_:))
  {
    uint64_t v91 = v4;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, v5);
    if (qword_100644140 != -1) {
      swift_once(&qword_100644140, sub_1002FD768);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v22, (uint64_t)qword_10064DD30);
    uint64_t v23 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v24 = v23(v9, v12, v5);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v28 = swift_slowAlloc(8LL, -1LL);
      uint64_t v90 = (uint8_t *)v12;
      uint64_t v29 = (void *)v28;
      *(_DWORD *)uint64_t v27 = 138412290;
      uint64_t v89 = v27 + 4;
      uint64_t v30 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v31 = swift_allocError(v5, v30, 0LL, 0LL);
      v23(v32, v9, v5);
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError(v31);
      uint64_t v93 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v89, v27 + 12);
      void *v29 = v33;
      int64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
      _os_log_impl( (void *)&_mh_execute_header,  v25,  v26,  "AirDrop application service browser failed with error %@",  v27,  0xCu);
      uint64_t v35 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v29, 1LL, v35);
      uint64_t v36 = v29;
      uint64_t v12 = (char *)v90;
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    else
    {
      int64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
    }

    uint64_t v52 = type metadata accessor for TaskPriority(0LL);
    uint64_t v53 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v91, 1LL, 1LL, v52);
    uint64_t v54 = swift_allocObject(&unk_1005DA038, 24LL, 7LL);
    swift_unknownObjectWeakInit(v54 + 16, v92);
    uint64_t v55 = qword_100643F28;
    swift_retain(v54);
    if (v55 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v56 = static AirDropActor.shared;
    uint64_t v57 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v58 = (void *)swift_allocObject(&unk_1005DA0B0, 40LL, 7LL);
    v58[2] = v56;
    v58[3] = v57;
    v58[4] = v54;
    swift_retain(v56);
    swift_release(v54);
    uint64_t v59 = sub_1001B3808(v53, (uint64_t)&unk_10064DDD0, (uint64_t)v58);
    swift_release(v59);
    v34(v12, v5);
    return;
  }

  if (v21 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    uint64_t v37 = v16;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v20, v5);
    if (qword_100644140 != -1) {
      swift_once(&qword_100644140, sub_1002FD768);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v38, (uint64_t)qword_10064DD30);
    uint64_t v39 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v40 = v91;
    uint64_t v41 = v39(v91, v37, v5);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      BOOL v92 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v44 = 138412290;
      uint64_t v90 = v44 + 4;
      uint64_t v45 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v46 = swift_allocError(v5, v45, 0LL, 0LL);
      v39(v47, v40, v5);
      uint64_t v48 = _swift_stdlib_bridgeErrorToNSError(v46);
      uint64_t v93 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v90, v44 + 12);
      uint64_t v49 = v92;
      uint64_t *v92 = v48;
      uint64_t v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
      _os_log_impl( (void *)&_mh_execute_header,  v42,  v43,  "AirDrop application service browser waiting with error %@",  v44,  0xCu);
      uint64_t v51 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v49, 1LL, v51);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {

      uint64_t v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
    }

    v50(v37, v5);
    return;
  }

  if (v21 == enum case for NWBrowser.State.setup(_:))
  {
    if (qword_100644140 != -1) {
      swift_once(&qword_100644140, sub_1002FD768);
    }
    uint64_t v60 = type metadata accessor for Logger(0LL);
    uint64_t v61 = sub_100186DE4(v60, (uint64_t)qword_10064DD30);
    __n128 v62 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v62, v63)) {
      goto LABEL_36;
    }
    uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v64 = 0;
    uint64_t v65 = "AirDrop application service browser setting up";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v62, v63, v65, v64, 2u);
    swift_slowDealloc(v64, -1LL, -1LL);
LABEL_36:

    return;
  }

  if (v21 == enum case for NWBrowser.State.ready(_:))
  {
    if (qword_100644140 != -1) {
      swift_once(&qword_100644140, sub_1002FD768);
    }
    uint64_t v66 = type metadata accessor for Logger(0LL);
    uint64_t v67 = sub_100186DE4(v66, (uint64_t)qword_10064DD30);
    int64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = v4;
      uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "AirDrop application service browser ready", v71, 2u);
      uint64_t v72 = v71;
      id v4 = v70;
      swift_slowDealloc(v72, -1LL, -1LL);
    }

    uint64_t v73 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56LL))(v4, 1LL, 1LL, v73);
    uint64_t v74 = qword_100643F28;
    uint64_t v75 = v92;
    uint64_t v76 = (uint64_t)v4;
    if (v74 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v77 = static AirDropActor.shared;
    uint64_t v78 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v79 = (void *)swift_allocObject(&unk_1005DA0D8, 40LL, 7LL);
    v79[2] = v77;
    __int128 v79[3] = v78;
    v79[4] = v75;
    swift_retain(v77);
    uint64_t v80 = sub_1001B37E8(v76, (uint64_t)&unk_10064DDE0, (uint64_t)v79);
    swift_release(v80);
  }

  else
  {
    if (v21 == enum case for NWBrowser.State.cancelled(_:))
    {
      if (qword_100644140 != -1) {
        swift_once(&qword_100644140, sub_1002FD768);
      }
      uint64_t v81 = type metadata accessor for Logger(0LL);
      uint64_t v82 = sub_100186DE4(v81, (uint64_t)qword_10064DD30);
      __n128 v62 = (os_log_s *)Logger.logObject.getter(v82);
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v62, v63)) {
        goto LABEL_36;
      }
      uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v64 = 0;
      uint64_t v65 = "AirDrop application service browser cancelled";
      goto LABEL_35;
    }

    if (qword_100644140 != -1) {
      swift_once(&qword_100644140, sub_1002FD768);
    }
    uint64_t v83 = type metadata accessor for Logger(0LL);
    uint64_t v84 = sub_100186DE4(v83, (uint64_t)qword_10064DD30);
    BOOL v85 = (os_log_s *)Logger.logObject.getter(v84);
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      char v87 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v87 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v85,  v86,  "AirDrop application service browser in unknown state",  v87,  2u);
      swift_slowDealloc(v87, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }

uint64_t sub_1002FECEC()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1002FED18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DDCC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_1002FDD60(a1, v4, v5, v6);
}

uint64_t sub_1002FED84()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1002FEDB0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064DDDC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_1002FDACC(a1, v4, v5, v6);
}

uint64_t sub_1002FEE1C()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1002FEE58(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_10064DDEC);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return swift_task_switch(sub_1002FD918, 0LL, 0LL);
}

uint64_t sub_1002FEEC0(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100649F58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002FEF00()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064DDF8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064DDF8);
  if (qword_100643FE8 != -1) {
    swift_once(&qword_100643FE8, sub_10023A448);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1002FEF90(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v43 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v4 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v6 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for UUID(0LL);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  uint64_t v45 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v12 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10020EEE0();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v44 = a1;
  sub_10019140C(a1, (uint64_t)v14);
  if (!v18)
  {
    sub_10020C5CC();
    uint64_t v16 = v19;
    uint64_t v18 = v20;
  }

  sub_1001A4BC8((uint64_t)v14, type metadata accessor for SDAirDropDiscoveredEndpoint);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v16;
  *(void *)(v2 + 2sub_10018709C(v0 + 4) = v18;
  uint64_t v22 = v46;
  uint64_t v21 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v9, 1LL, 1LL, v47);
  uint64_t v23 = v45;
  sub_100411A2C((uint64_t)v9, v16, v18, v45);
  sub_100187100((uint64_t)v9, &qword_10064DA60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID,  v23,  v21);
  *uint64_t v6 = nw_endpoint_create_application_service("com.apple.AirDrop", v23);
  uint64_t v24 = v43;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for NWEndpoint.opaque(_:), v43);
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint,  v6,  v24);
  uint64_t v25 = sub_100183098(&qword_100645390);
  uint64_t v26 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v27 = (v26 + 32) & ~v26;
  uint64_t v28 = swift_allocObject(v25, v27 + *(void *)(v12 + 72), v26 | 7);
  *(_OWORD *)(v28 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  uint64_t v29 = v28 + v27;
  uint64_t v30 = v44;
  sub_10019140C(v44, v29);
  uint64_t v31 = sub_1001DD7C0(v28);
  swift_setDeallocating(v28);
  swift_arrayDestroy(v29, 1LL, v42);
  swift_deallocClassInstance(v28, 32LL, 7LL);
  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints) = v31;
  sub_1002FF3FC();
  if (qword_100644148 != -1) {
    swift_once(&qword_100644148, sub_1002FEF00);
  }
  uint64_t v32 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v32, (uint64_t)qword_10064DDF8);
  uint64_t v33 = swift_retain_n(v2, 2LL);
  int64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    uint64_t v49 = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v39 = *(void *)(v2 + 16);
    uint64_t v38 = *(const char **)(v2 + 24);
    swift_bridgeObjectRetain(v38);
    uint64_t v48 = sub_10018CDB4(v39, (unint64_t)v38, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v36 + 4, v36 + 12);
    swift_release_n(v2, 2LL);
    swift_bridgeObjectRelease(v38);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Creating Device %s", v36, 0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v2, 2LL);
  }

  sub_1001A4BC8(v30, type metadata accessor for SDAirDropDiscoveredEndpoint);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  return v2;
}

uint64_t sub_1002FF3FC()
{
  uint64_t v1 = v0;
  uint64_t v132 = type metadata accessor for SFAirDrop.TXTRecord(0LL);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  Swift::Int v130 = (char *)&v128 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v181 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v3 = *(void *)(v181 - 8);
  uint64_t v4 = __chkstk_darwin(v181);
  uint64_t v128 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  Swift::Int v129 = (char *)&v128 - v6;
  uint64_t v161 = type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
  __chkstk_darwin(v161);
  uint64_t v8 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v142 = type metadata accessor for SFString(0LL);
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v140 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v182 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  uint64_t v10 = __chkstk_darwin(v182);
  uint64_t v12 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v128 - v13;
  uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v168 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  int v169 = (char *)&v128 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v144 = (char *)&v128 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v151 = (char *)&v128 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v145 = (char *)&v128 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v150 = (char *)&v128 - v27;
  __chkstk_darwin(v26);
  uint64_t v187 = (char *)&v128 - v28;
  uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v185 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  os_log_t v188 = (char *)&v128 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v189 = (char *)&v128 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v155 = (char *)&v128 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v171 = (char *)&v128 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v154 = (char *)&v128 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v170 = (char *)&v128 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v44 = (char *)&v128 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v128 - v46;
  __chkstk_darwin(v45);
  uint64_t v184 = (uint64_t)&v128 - v48;
  uint64_t v49 = sub_100183098(&qword_10064DF00);
  uint64_t v50 = __chkstk_darwin(v49);
  uint64_t v134 = (uint64_t)&v128 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v163 = (char *)&v128 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v149 = (char *)&v128 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v162 = (char *)&v128 - v57;
  __chkstk_darwin(v56);
  uint64_t v59 = (char *)&v128 - v58;
  uint64_t v136 = sub_1003011D8();
  uint64_t v135 = v60;
  uint64_t v137 = NWEndpoint.nw.getter(v136);
  if (!v137)
  {
    __break(1u);
    JUMPOUT(0x100301160LL);
  }

  uint64_t v180 = v3;
  uint64_t v61 = *(void (**)(void, void, void, void))(v3 + 56);
  uint64_t v183 = v59;
  uint64_t v157 = v61;
  v61(v59, 1LL, 1LL, v181);
  uint64_t v133 = v0;
  __n128 v62 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  *(void *)&double v63 = swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints,  v197,  0LL,  0LL).n128_u64[0];
  uint64_t v64 = *v62;
  uint64_t v65 = *(void *)(*v62 + 56);
  uint64_t v178 = *v62 + 56;
  uint64_t v66 = 1LL << *(_BYTE *)(v64 + 32);
  uint64_t v67 = -1LL;
  if (v66 < 64) {
    uint64_t v67 = ~(-1LL << v66);
  }
  uint64_t v68 = v67 & v65;
  uint64_t v175 = v12;
  uint64_t v146 = v12 + 8;
  uint64_t v159 = v8 + 8;
  uint64_t v158 = v14 + 8;
  int64_t v179 = (unint64_t)(v66 + 63) >> 6;
  int v139 = enum case for SFString.maybeContact(_:);
  int v147 = enum case for SFAirDrop.DeviceRelationship.contact(_:);
  int v148 = enum case for SFAirDrop.DeviceRelationship.stranger(_:);
  int v153 = enum case for SFAirDrop.DeviceRelationship.sameAccount(_:);
  uint64_t v186 = v64;
  swift_bridgeObjectRetain((const char *)v64, v63);
  int v143 = 0;
  uint64_t v164 = 0LL;
  os_log_type_t v173 = 0LL;
  int v166 = 0;
  int v165 = 0;
  uint64_t v167 = 0LL;
  uint64_t v176 = 0LL;
  uint64_t v152 = 0LL;
  uint64_t v172 = 0LL;
  uint64_t v156 = 0LL;
  uint64_t v177 = 0LL;
  int64_t v190 = 0LL;
  __int128 v138 = xmmword_1004CDCA0;
  unint64_t v160 = v8;
  uint64_t v191 = v14;
  uint64_t v174 = v29;
  if (v68)
  {
    unint64_t v69 = __clz(__rbit64(v68)) | (v190 << 6);
    goto LABEL_20;
  }

  int64_t v70 = v190 + 1;
  if (__OFADD__(v190, 1LL))
  {
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }

  if (v70 < v179)
  {
    unint64_t v71 = *(void *)(v178 + 8 * v70);
    ++v190;
    if (v71) {
      goto LABEL_19;
    }
    int64_t v190 = v70 + 1;
    if (v70 + 1 >= v179) {
      goto LABEL_21;
    }
    unint64_t v71 = *(void *)(v178 + 8 * v190);
    if (v71) {
      goto LABEL_19;
    }
    int64_t v190 = v70 + 2;
    if (v70 + 2 >= v179) {
      goto LABEL_21;
    }
    unint64_t v71 = *(void *)(v178 + 8 * v190);
    if (v71)
    {
LABEL_19:
      unint64_t v69 = __clz(__rbit64(v71)) + (v190 << 6);
LABEL_20:
      uint64_t v73 = v184;
      sub_10019140C(*(void *)(v186 + 48) + *(void *)(v185 + 72) * v69, v184);
      sub_1001A4B40(v73, (uint64_t)v47, type metadata accessor for SDAirDropDiscoveredEndpoint);
      sub_10019140C((uint64_t)v47, (uint64_t)v44);
      uint64_t v74 = (char *)&loc_1002FFC40 + *((int *)qword_100301168 + swift_getEnumCaseMultiPayload(v44, v29));
      __asm { BR              X9 }
    }

    int64_t v72 = v70 + 3;
    if (v72 < v179)
    {
      unint64_t v71 = *(void *)(v178 + 8 * v72);
      if (v71)
      {
        int64_t v190 = v72;
        goto LABEL_19;
      }

      while (1)
      {
        int64_t v190 = v72 + 1;
        if (__OFADD__(v72, 1LL)) {
          goto LABEL_52;
        }
        if (v190 >= v179) {
          break;
        }
        unint64_t v71 = *(void *)(v178 + 8 * v190);
        ++v72;
        if (v71) {
          goto LABEL_19;
        }
      }
    }
  }

uint64_t sub_1003011D8()
{
  uint64_t v22 = 0LL;
  unint64_t v23 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(25LL);
  v1._uint64_t countAndFlagsBits = 0x28656369766544LL;
  v1._object = (void *)0xE700000000000000LL;
  String.append(_:)(v1);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v3);
  v4._uint64_t countAndFlagsBits = v2;
  v4._object = v3;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  v5._uint64_t countAndFlagsBits = 0x22206D4E20LL;
  v5._object = (void *)0xE500000000000000LL;
  String.append(_:)(v5);
  uint64_t result = NWEndpoint.nw.getter(v6);
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }

  uint64_t v8 = result;
  uint64_t device_name = nw_endpoint_get_device_name();
  swift_unknownObjectRelease(v8);
  if (device_name)
  {
    uint64_t v10 = String.init(cString:)(device_name);
    uint64_t device_name = v11;
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  uint64_t v20 = v10;
  uint64_t v21 = device_name;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v20,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(device_name);
  v12._uint64_t countAndFlagsBits = 0x20644D202C22LL;
  v12._object = (void *)0xE600000000000000LL;
  String.append(_:)(v12);
  uint64_t result = NWEndpoint.nw.getter(v13);
  if (!result) {
    goto LABEL_11;
  }
  uint64_t v14 = result;
  uint64_t device_model = nw_endpoint_get_device_model();
  swift_unknownObjectRelease(v14);
  if (device_model)
  {
    uint64_t v16 = String.init(cString:)(device_model);
    uint64_t v18 = v17;
  }

  else
  {
    uint64_t v16 = 0LL;
    uint64_t v18 = 0LL;
  }

  uint64_t v20 = v16;
  uint64_t v21 = v18;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v20,  &type metadata for String,  &protocol witness table for String);
  swift_bridgeObjectRelease(v18);
  v19._uint64_t countAndFlagsBits = 41LL;
  v19._object = (void *)0xE100000000000000LL;
  String.append(_:)(v19);
  return v22;
}

uint64_t sub_10030137C()
{
  Swift::String v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint;
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t sub_10030140C()
{
  return type metadata accessor for SDAirDropDiscoveredDevice(0LL);
}

uint64_t type metadata accessor for SDAirDropDiscoveredDevice(uint64_t a1)
{
  uint64_t result = qword_10064DE40;
  if (!qword_10064DE40) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropDiscoveredDevice);
  }
  return result;
}

uint64_t sub_100301450(uint64_t a1)
{
  v5[0] = &unk_1004D4AC0;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for NWEndpoint(319LL);
    if (v4 <= 0x3F)
    {
      uint64_t v5[2] = *(void *)(result - 8) + 64LL;
      void v5[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t result = swift_updateClassMetadata2(a1, 256LL, 4LL, v5, a1 + 80);
      if (!result) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_1003014F0()
{
  return sub_1003011D8();
}

uint64_t sub_100301510@<X0>(uint64_t a1@<X8>)
{
  return sub_10028F740( &OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_displayEndpoint,  (uint64_t (*)(void))&type metadata accessor for NWEndpoint,  a1);
}

uint64_t sub_100301524()
{
  uint64_t v29 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v29);
  v28[1] = (char *)v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v2);
  v28[0] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v4 = *(void *)(v32 - 8);
  uint64_t v5 = __chkstk_darwin(v32);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v28 - v9;
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)v28 - v11;
  uint64_t v13 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints,  v34,  0LL,  0LL);
  uint64_t v14 = *v13;
  uint64_t v15 = *v13 + 56;
  uint64_t v16 = 1LL << *(_BYTE *)(*v13 + 32);
  uint64_t v17 = -1LL;
  if (v16 < 64) {
    uint64_t v17 = ~(-1LL << v16);
  }
  unint64_t v18 = v17 & *(void *)(*v13 + 56);
  int64_t v33 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain_n(v14, 2LL);
  int64_t v19 = 0LL;
  char v20 = 0;
  uint64_t v30 = v15;
  uint64_t v31 = v7;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_25;
    }

    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1LL))
    {
      __break(1u);
      goto LABEL_29;
    }

    if (v23 >= v33) {
      goto LABEL_27;
    }
    unint64_t v24 = *(void *)(v15 + 8 * v23);
    ++v19;
    if (!v24)
    {
      int64_t v19 = v23 + 1;
      if (v23 + 1 >= v33) {
        goto LABEL_27;
      }
      unint64_t v24 = *(void *)(v15 + 8 * v19);
      if (!v24)
      {
        int64_t v19 = v23 + 2;
        if (v23 + 2 >= v33) {
          goto LABEL_27;
        }
        unint64_t v24 = *(void *)(v15 + 8 * v19);
        if (!v24)
        {
          int64_t v19 = v23 + 3;
          if (v23 + 3 >= v33) {
            goto LABEL_27;
          }
          unint64_t v24 = *(void *)(v15 + 8 * v19);
          if (!v24)
          {
            int64_t v19 = v23 + 4;
            if (v23 + 4 >= v33) {
              goto LABEL_27;
            }
            unint64_t v24 = *(void *)(v15 + 8 * v19);
            if (!v24) {
              break;
            }
          }
        }
      }
    }

uint64_t sub_10030193C(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  unint64_t v3 = (*(void *)(*(void *)(sub_100183098(&qword_100649F58) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[14] = swift_task_alloc(v3);
  v2[15] = swift_task_alloc(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[16] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[17] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[18] = swift_task_alloc(v6);
  v2[19] = swift_task_alloc(v6);
  v2[20] = swift_task_alloc(v6);
  v2[21] = swift_task_alloc(v6);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100301A28, static AirDropActor.shared, 0LL);
}

uint64_t sub_100301A28()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 120);
  swift_beginAccess(v5, v0 + 16, 0LL, 0LL);
  unint64_t v6 = *v5;
  uint64_t v7 = swift_task_alloc(32LL);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = v1;
  swift_bridgeObjectRetain(v6);
  sub_10028CBE0((uint64_t (*)(char *))sub_100302208, (uint64_t)v6, v4);
  swift_bridgeObjectRelease(v6);
  swift_task_dealloc(v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1LL, v2) == 1)
  {
    sub_100187100(*(void *)(v0 + 120), &qword_100649F58);
    uint64_t v8 = v5;
  }

  else
  {
    uint64_t v9 = v0 + 64;
    sub_1001A4B40(*(void *)(v0 + 120), *(void *)(v0 + 168), type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_100644148 != -1) {
      swift_once(&qword_100644148, sub_1002FEF00);
    }
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 168);
    uint64_t v12 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v12, (uint64_t)qword_10064DDF8);
    uint64_t v13 = sub_10019140C(v10, v11);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 160);
    if (v16)
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      uint64_t v34 = v19;
      *(_DWORD *)unint64_t v18 = 136315138;
      sub_10020C5CC();
      char v20 = v5;
      unint64_t v22 = (const char *)v21;
      *(void *)(v0 + 88) = sub_10018CDB4(v23, v21, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v18 + 4, v18 + 12);
      unint64_t v24 = v22;
      uint64_t v5 = v20;
      uint64_t v9 = v0 + 64;
      swift_bridgeObjectRelease(v24);
      sub_1001A4BC8(v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Removing duplicate/stale endpoint %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(*(void *)(v0 + 160), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v25 = *(void *)(v0 + 168);
    uint64_t v26 = *(void *)(v0 + 112);
    swift_beginAccess(v5, v9, 33LL, 0LL);
    uint64_t v8 = v5;
    sub_1003BE9C4(v25, v26);
    swift_endAccess(v9);
    sub_100187100(v26, &qword_100649F58);
    sub_1001A4BC8(v25, type metadata accessor for SDAirDropDiscoveredEndpoint);
  }

  uint64_t v28 = *(void *)(v0 + 160);
  uint64_t v27 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 144);
  uint64_t v29 = *(void *)(v0 + 152);
  uint64_t v31 = *(void *)(v0 + 112);
  uint64_t v32 = *(void *)(v0 + 120);
  sub_10019140C(*(void *)(v0 + 96), v30);
  swift_beginAccess(v8, v0 + 40, 33LL, 0LL);
  sub_1003B52D4(v29, v30);
  swift_endAccess(v0 + 40);
  sub_1001A4BC8(v29, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1002FF3FC();
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_100301D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10019140C(a1, (uint64_t)&v13 - v8);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, v4);
  uint64_t v11 = EnumCaseMultiPayload;
  sub_1001A4BC8((uint64_t)v9, (uint64_t (*)(void))off_1005DA168[EnumCaseMultiPayload]);
  sub_10019140C(a2, (uint64_t)v7);
  LODWORD(a2) = swift_getEnumCaseMultiPayload(v7, v4);
  sub_1001A4BC8((uint64_t)v7, (uint64_t (*)(void))off_1005DA188[(int)a2]);
  return v11 == a2;
}

uint64_t sub_100301E90()
{
  return sub_100301524() & 1;
}

uint64_t sub_100301EB4@<X0>(uint64_t a1@<X8>)
{
  return sub_10028F740( &OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID,  (uint64_t (*)(void))&type metadata accessor for UUID,  a1);
}

uint64_t sub_100301EC8()
{
  *(void *)(v1 + 40) = v0;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100301F30, static AirDropActor.shared, 0LL);
}

uint64_t sub_100301F30()
{
  uint64_t v1 = (void *)(**(void **)(v0 + 40)
                + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints);
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = swift_bridgeObjectRetain(*v1);
  return v4(v2);
}

uint64_t sub_100301F90(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10064DF0C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001943E8;
  return sub_10030193C(a1);
}

uint64_t sub_100301FE0(uint64_t a1)
{
  v2[5] = a1;
  uint64_t v3 = sub_100183098(&qword_100649F58);
  uint64_t v4 = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = *v1;
  v2[6] = v4;
  v2[7] = v5;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100302070, static AirDropActor.shared, 0LL);
}

uint64_t sub_100302070()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_beginAccess( *(void *)(v0 + 56) + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_discoveredEndpoints,  v0 + 16,  33LL,  0LL);
  sub_1003BE9C4(v2, v1);
  swift_endAccess(v0 + 16);
  sub_100187100(v1, &qword_100649F58);
  sub_1002FF3FC();
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10030210C(uint64_t a1)
{
  unint64_t result = sub_100302130();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100302130()
{
  unint64_t result = qword_10064DEF8;
  if (!qword_10064DEF8)
  {
    uint64_t v1 = type metadata accessor for SDAirDropDiscoveredDevice(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1004D4B2C, v1);
    atomic_store(result, (unint64_t *)&qword_10064DEF8);
  }

  return result;
}

uint64_t sub_100302178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064DF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003021C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064DF00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

BOOL sub_100302208(uint64_t a1)
{
  return sub_100301D98(a1, *(void *)(v1 + 16));
}

uint64_t sub_100302224()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064DF10);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064DF10);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1003022B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  uint64_t v6 = type metadata accessor for URL(0LL);
  v5[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[11] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[12] = swift_task_alloc(v8);
  v5[13] = swift_task_alloc(v8);
  v5[14] = swift_task_alloc(v8);
  unint64_t v9 = (*(void *)(*(void *)(sub_100183098((uint64_t *)&unk_100645130) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[15] = swift_task_alloc(v9);
  v5[16] = swift_task_alloc(v9);
  v5[17] = swift_task_alloc(v9);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1003023D0, static AirDropActor.shared, 0LL);
}

id sub_1003023D0()
{
  uint64_t v1 = 0xD000000000000014LL;
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = sub_100183098(&qword_1006483E0);
  uint64_t v8 = swift_allocObject(v7, 72LL, 7LL);
  *(_OWORD *)(v8 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  uint64_t v10 = *(void *)(v6 + 16);
  unint64_t v9 = *(const char **)(v6 + 24);
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 6sub_10018709C(v0 + 4) = sub_10021366C();
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v9;
  swift_bridgeObjectRetain(v9);
  uint64_t v11 = String.init(format:_:)(0xD00000000000004BLL, 0x800000010050A290LL, v8);
  uint64_t v13 = v12;
  URL.init(string:)(v11, v12);
  swift_bridgeObjectRelease(v13);
  sub_10026D9AC(v3, v2);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v14(v2, 1LL, v5) == 1)
  {
    sub_100187100(*(void *)(v0 + 128), (uint64_t *)&unk_100645130);
    if (qword_100644150 != -1) {
      swift_once(&qword_100644150, sub_100302224);
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v16, (uint64_t)qword_10064DF10);
    swift_bridgeObjectRetain_n(v15, 2LL);
    unint64_t v18 = (void *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.error.getter(v18);
    if (!os_log_type_enabled((os_log_t)v18, v19))
    {
      uint64_t v54 = *(void *)(v0 + 136);
      uint64_t v55 = *(void *)(v0 + 72);

      swift_bridgeObjectRelease_n(v55, 2LL);
LABEL_22:
      uint64_t v96 = v54;
      goto LABEL_23;
    }

    uint64_t v20 = *(void *)(v0 + 72);
    unint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v110 = v22;
    *(_DWORD *)unint64_t v21 = 136315138;
    uint64_t v23 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 80);
    uint64_t v26 = *(void *)(v0 + 88);
    if (v23)
    {
      (*(void (**)(void, unint64_t, void))(v26 + 16))( *(void *)(v0 + 120),  *(void *)(v0 + 72)
      + ((*(unsigned __int8 *)(v26 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)),
        *(void *)(v0 + 80));
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v24, 0LL, 1LL, v25);
      uint64_t v27 = v14(v24, 1LL, v25);
      if ((_DWORD)v27 != 1)
      {
        uint64_t v28 = *(void *)(v0 + 120);
        uint64_t v29 = *(void *)(v0 + 80);
        uint64_t v30 = *(void *)(v0 + 88);
        uint64_t v1 = URL.description.getter(v27);
        uint64_t v32 = v31;
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
LABEL_21:
        uint64_t v54 = *(void *)(v0 + 136);
        uint64_t v97 = *(void *)(v0 + 72);
        *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_10018CDB4(v1, (unint64_t)v32, &v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v21 + 4, v21 + 12);
        swift_bridgeObjectRelease(v32);
        swift_bridgeObjectRelease_n(v97, 2LL);
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v18,  v19,  "Unable to build app store search URL with item: %s",  v21,  0xCu);
        swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v22, -1LL, -1LL);
        swift_slowDealloc(v21, -1LL, -1LL);

        goto LABEL_22;
      }
    }

    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v26 + 56))( *(void *)(v0 + 120),  1LL,  1LL,  *(void *)(v0 + 80));
    }

    sub_100187100(*(void *)(v0 + 120), (uint64_t *)&unk_100645130);
    uint64_t v32 = (const char *)0x800000010050A2E0LL;
    goto LABEL_21;
  }

  uint64_t v108 = v0 + 48;
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 32LL))( *(void *)(v0 + 112),  *(void *)(v0 + 128),  *(void *)(v0 + 80));
  if (qword_100644150 != -1) {
    swift_once(&qword_100644150, sub_100302224);
  }
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v33 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 80);
  uint64_t v35 = *(void *)(v0 + 88);
  uint64_t v37 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v37, (uint64_t)qword_10064DF10);
  uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v39 = v38(v34, v33, v36);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v43 = *(void *)(v0 + 104);
  uint64_t v45 = *(void *)(v0 + 80);
  uint64_t v44 = *(void *)(v0 + 88);
  Swift::String v107 = (void (*)(uint64_t, uint64_t, uint64_t))v38;
  if (v42)
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v47 = swift_slowAlloc(32LL, -1LL);
    uint64_t v110 = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    unint64_t v48 = sub_10030306C();
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v45, v48);
    uint64_t v51 = (const char *)v50;
    *(void *)(v0 + 48) = sub_10018CDB4(v49, v50, &v110);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v108, v0 + 56, v46 + 4, v46 + 12);
    __n128 v52 = swift_bridgeObjectRelease(v51);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    v53(v43, v45, v52);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Launching app store with URL: %s", v46, 0xCu);
    swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);
  }

  else
  {
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
    ((void (*)(uint64_t, uint64_t))v53)(v43, v45);
  }

  uint64_t v56 = (void *)objc_opt_self(&OBJC_CLASS___SDAirDropHandler);
  URL._bridgeToObjectiveC()(v57);
  uint64_t v59 = v58;
  [v56 logReceiverBundleID:0 forURL:v58];

  id v60 = [objc_allocWithZone(_LSOpenConfiguration) init];
  [v60 setFrontBoardOptions:0];
  id result = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  if (result)
  {
    double v63 = result;
    URL._bridgeToObjectiveC()(v62);
    uint64_t v65 = v64;
    *(void *)(v0 + 2sub_10018709C(v0 + 4) = 0LL;
    id v66 = [v63 openURL:v64 configuration:v60 error:v0 + 24];

    uint64_t v67 = *(void **)(v0 + 24);
    if (v66)
    {
      uint64_t v68 = *(void *)(v0 + 136);
      uint64_t v69 = *(void *)(v0 + 112);
      uint64_t v70 = *(void *)(v0 + 80);
      id v71 = v67;

      ((void (*)(uint64_t, uint64_t))v53)(v69, v70);
      sub_100187100(v68, (uint64_t *)&unk_100645130);
      char v72 = 1;
LABEL_24:
      uint64_t v99 = *(void *)(v0 + 128);
      uint64_t v98 = *(void *)(v0 + 136);
      uint64_t v101 = *(void *)(v0 + 112);
      uint64_t v100 = *(void *)(v0 + 120);
      uint64_t v103 = *(void *)(v0 + 96);
      uint64_t v102 = *(void *)(v0 + 104);
      **(_BYTE **)(v0 + 56) = v72;
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      return (id)(*(uint64_t (**)(void))(v0 + 8))();
    }

    uint64_t v73 = *(void *)(v0 + 112);
    uint64_t v74 = *(void *)(v0 + 96);
    uint64_t v75 = *(void *)(v0 + 80);
    id v76 = v67;
    uint64_t v77 = _convertNSErrorToError(_:)(v67);

    swift_willThrow(v78);
    v107(v74, v73, v75);
    swift_errorRetain(v77);
    uint64_t v79 = swift_errorRetain(v77);
    uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
    os_log_type_t v81 = static os_log_type_t.error.getter(v80);
    BOOL v82 = os_log_type_enabled(v80, v81);
    uint64_t v83 = *(void *)(v0 + 136);
    uint64_t v84 = *(void *)(v0 + 112);
    uint64_t v85 = *(void *)(v0 + 96);
    uint64_t v86 = *(void *)(v0 + 80);
    if (v82)
    {
      uint64_t v109 = *(void *)(v0 + 136);
      uint64_t v87 = swift_slowAlloc(22LL, -1LL);
      uint64_t v104 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      uint64_t v106 = swift_slowAlloc(32LL, -1LL);
      uint64_t v110 = v106;
      *(_DWORD *)uint64_t v87 = 136315394;
      os_log_type_t type = v81;
      unint64_t v88 = sub_10030306C();
      uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter(v86, v88);
      uint64_t v90 = v86;
      BOOL v92 = (const char *)v91;
      *(void *)(v0 + 32) = sub_10018CDB4(v89, v91, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 32, v0 + 40, v87 + 4, v87 + 12);
      __n128 v93 = swift_bridgeObjectRelease(v92);
      v53(v85, v90, v93);
      *(_WORD *)(v87 + 12) = 2112;
      swift_errorRetain(v77);
      uint64_t v94 = _swift_stdlib_bridgeErrorToNSError(v77);
      *(void *)(v0 + 40) = v94;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v108, v87 + 14, v87 + 22);
      *uint64_t v104 = v94;
      swift_errorRelease(v77);
      swift_errorRelease(v77);
      _os_log_impl( (void *)&_mh_execute_header,  v80,  type,  "Failed to launch app store with URL %s: %@",  (uint8_t *)v87,  0x16u);
      uint64_t v95 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v104, 1LL, v95);
      swift_slowDealloc(v104, -1LL, -1LL);
      swift_arrayDestroy(v106, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v106, -1LL, -1LL);
      swift_slowDealloc(v87, -1LL, -1LL);

      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v84, v90);
      uint64_t v96 = v109;
    }

    else
    {

      swift_errorRelease(v77);
      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v85, v86);
      swift_errorRelease(v77);
      ((void (*)(uint64_t, uint64_t))v53)(v84, v86);
      uint64_t v96 = v83;
    }

uint64_t sub_100302CE8()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerUnsupportedFileType()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary42SDAirDropContentHandlerUnsupportedFileType);
}

uint64_t sub_100302D2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerUnsupportedFileType();
  uint64_t result = swift_allocObject(v2, 32LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(result + 2sub_10018709C(v0 + 4) = 0xE000000000000000LL;
  *a1 = result;
  return result;
}

uint64_t sub_100302D68(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v6 = 0LL;
  uint64_t v4 = swift_allocObject(&unk_1005DA288, 32LL, 7LL);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v3;
  *(void *)(v4 + 2sub_10018709C(v0 + 4) = a1;
  swift_retain(v3);
  swift_bridgeObjectRetain(a1);
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x707041206E65704FLL,  0xEE0065726F745320LL,  &v6,  &unk_10064E030,  v4,  0xD000000000000071LL,  0x800000010050A210LL,  60LL,  &type metadata for Double,  &type metadata for Bool);
}

uint64_t sub_100302E34(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_10064E038 + dword_10064E038);
  uint64_t v3 = (void *)swift_task_alloc(unk_10064E03C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100302EAC;
  return v5(a1);
}

uint64_t sub_100302EAC(char a1)
{
  uint64_t v4 = *(void *)(*v2 + 16);
  uint64_t v5 = *v2;
  swift_task_dealloc(v4);
  if (v1) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = a1 & 1;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8))(v6);
}

void sub_100302F08(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    id v4 = (id)SFLocalizedStringForKey(v2, v3);

    if (v4)
    {
LABEL_5:
      static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

      return;
    }

    __break(1u);
  }

  NSString v5 = String._bridgeToObjectiveC()();
  id v4 = (id)SFLocalizedStringForKey(v5, v6);

  if (v4) {
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_100302FC4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100302FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v10 = (void *)swift_task_alloc(dword_10064E02C);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v10;
  void *v10 = v4;
  v10[1] = sub_1001943E8;
  return sub_1003022B4(a1, a2, a3, v9, v8);
}

unint64_t sub_10030306C()
{
  unint64_t result = qword_100645408;
  if (!qword_100645408)
  {
    uint64_t v1 = type metadata accessor for URL(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for URL, v1);
    atomic_store(result, (unint64_t *)&qword_100645408);
  }

  return result;
}

uint64_t sub_1003030B4(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = sub_100183098((uint64_t *)&unk_1006563F0);
  v1[4] = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_100183098(&qword_1006467F8);
  v1[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[6] = v4;
  v1[7] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v1[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v1[9] = v6;
  v1[10] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064E040);
  v1[11] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v1[12] = v8;
  v1[13] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v1[14] = static AirDropActor.shared;
  return swift_task_switch(sub_1003031C4, v9, 0LL);
}

uint64_t sub_1003031C4()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[3];
  v0[15] = type metadata accessor for SDAirDropContentHandlerUtilities();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))( v2,  enum case for SFAirDropReceive.ItemDestination.default(_:),  v4);
  sub_100266ABC(v5, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[16] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10030329C;
  return SFProgressTask.finalValue.getter(v0 + 2, v0[11]);
}

uint64_t sub_10030329C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 128);
  uint64_t v5 = *(void *)(*v1 + 96);
  uint64_t v4 = *(void *)(*v1 + 104);
  uint64_t v6 = *(void *)(*v1 + 88);
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_1003034E0;
  }
  else {
    uint64_t v7 = sub_100303328;
  }
  return swift_task_switch(v7, *(void *)(v2 + 112), 0LL);
}

uint64_t sub_100303328()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[4];
  uint64_t v3 = (const char *)v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[9] + 56LL))(v2, 1LL, 1LL, v0[8]);
  sub_10026664C((uint64_t)v3, 0LL, 0, v1);
  swift_bridgeObjectRelease(v3);
  sub_100187100(v2, (uint64_t *)&unk_1006563F0);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1003033EC;
  return SFProgressTask.finalValue.getter(v0 + 20, v0[5]);
}

uint64_t sub_1003033EC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 144);
  uint64_t v5 = *(void *)(*v1 + 48);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v6 = *(void *)(*v1 + 40);
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_100303544;
  }
  else {
    uint64_t v7 = sub_100303478;
  }
  return swift_task_switch(v7, *(void *)(v2 + 112), 0LL);
}

uint64_t sub_100303478()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 160);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_1003034E0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

uint64_t sub_100303544()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

uint64_t sub_1003035A8(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc(a2[1]);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100195708;
  return v5();
}

void sub_1003035FC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess(v1 + 16, aBlock, 33LL, 0LL);
  sub_1003BD9C8(a1, (uint64_t)v12);
  swift_endAccess(aBlock);
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1LL, v3);
  sub_100187100((uint64_t)v12, &qword_10064DA60);
  if (v13 != 1)
  {
    if (qword_100644158 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v14, (uint64_t)qword_10064E048);
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v16 = v15(v9, a1, v3);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = a1;
      uint64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      uint64_t v22 = v21;
      aBlock[0] = v21;
      uint64_t v36 = v15;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v35 = v20 + 4;
      unint64_t v23 = sub_1003044A4();
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter(v3, v23);
      unint64_t v26 = v25;
      uint64_t v39 = sub_10018CDB4(v24, v25, aBlock);
      uint64_t v15 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, aBlock, v35, v20 + 12);
      swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      _os_log_impl( (void *)&_mh_execute_header,  v17,  v18,  "SDAirDropAWDLSingleBandManager: requesting stop Single band mode for Nearby Sharing Interaction ID:%s",  v20,  0xCu);
      swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v27 = v22;
      uint64_t v7 = v38;
      swift_slowDealloc(v27, -1LL, -1LL);
      uint64_t v28 = v20;
      a1 = v37;
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }

    id v29 = [(id)objc_opt_self(WiFiP2PSPITransactionRequestor) shared];
    v15(v7, a1, v3);
    uint64_t v30 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v31 = (v30 + 16) & ~v30;
    uint64_t v32 = swift_allocObject(&unk_1005DA2D0, v31 + v5, v30 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v32 + v31, v7, v3);
    aBlock[4] = (uint64_t)sub_100304450;
    uint64_t v41 = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_1002C5880;
    aBlock[3] = (uint64_t)&unk_1005DA2E8;
    uint64_t v33 = _Block_copy(aBlock);
    swift_release(v41);
    [v29 endTransaction:18 completionHandler:v33];
    _Block_release(v33);
  }

uint64_t sub_100303994()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064E048);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064E048);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100303A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v14, 1LL, 1LL, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = (v16 + 24) & ~v16;
  unint64_t v18 = (v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v19 = swift_allocObject(&unk_1005DA398, v18 + 16, v16 | 7);
  *(void *)(v19 + swift_weakDestroy(v0 + 16) = a1;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19 + v17, v11, v8);
  uint64_t v20 = (void *)(v19 + v18);
  *uint64_t v20 = a3;
  v20[1] = a4;
  uint64_t v21 = swift_allocObject(&unk_1005DA3C0, 32LL, 7LL);
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = &unk_10064E108;
  *(void *)(v21 + 2sub_10018709C(v0 + 4) = v19;
  swift_retain(a4);
  uint64_t v22 = static Task<>.noThrow(priority:operation:)(v14, &unk_100646290, v21, (char *)&type metadata for () + 8);
  swift_release(v22);
  swift_release(v21);
  return sub_100187100((uint64_t)v14, &qword_100646560);
}

uint64_t sub_100303BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[6] = a3;
  void v4[7] = a4;
  void v4[4] = a1;
  void v4[5] = a2;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  void v4[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[9] = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[10] = swift_task_alloc(v7);
  v4[11] = swift_task_alloc(v7);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100303C74, static AirDropActor.shared, 0LL);
}

uint64_t sub_100303C74()
{
  if (*(void *)(v0 + 32))
  {
    if (qword_100644158 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v1 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v5, (uint64_t)qword_10064E048);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
    unint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.error.getter(v7);
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 72);
    if (v9)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v14 = swift_slowAlloc(32LL, -1LL);
      uint64_t v44 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      unint64_t v15 = sub_1003044A4();
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter(v11, v15);
      unint64_t v18 = (const char *)v17;
      *(void *)(v0 + swift_weakDestroy(v0 + 16) = sub_10018CDB4(v16, v17, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v13 + 4, v13 + 12);
      __n128 v19 = swift_bridgeObjectRelease(v18);
      (*(void (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v19);
      _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "SDAirDropAWDLSingleBandManager: failed requesting enforce Single band mode for Nearby Sharing Interaction ID:%s",  v13,  0xCu);
      swift_arrayDestroy(v14, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1LL, -1LL);
      swift_slowDealloc(v13, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(void, void))(v12 + 8))(*(void *)(v0 + 88), *(void *)(v0 + 64));
    }

    uint64_t v38 = *(void (**)(void))(v0 + 48);
    unint64_t v39 = sub_100304EFC();
    uint64_t v40 = swift_allocError(&type metadata for SDAirDropAWDLSingleBandManagerError, v39, 0LL, 0LL);
    v38();
    swift_errorRelease(v40);
  }

  else
  {
    if (qword_100644158 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 64);
    uint64_t v23 = *(void *)(v0 + 40);
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_10064E048);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
    unint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v30 = *(void *)(v0 + 72);
    uint64_t v29 = *(void *)(v0 + 80);
    uint64_t v31 = *(void *)(v0 + 64);
    if (v28)
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      uint64_t v44 = v43;
      *(_DWORD *)uint64_t v32 = 136315138;
      unint64_t v33 = sub_1003044A4();
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter(v31, v33);
      uint64_t v36 = (const char *)v35;
      *(void *)(v0 + 2sub_10018709C(v0 + 4) = sub_10018CDB4(v34, v35, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v32 + 4, v32 + 12);
      __n128 v37 = swift_bridgeObjectRelease(v36);
      (*(void (**)(uint64_t, uint64_t, __n128))(v30 + 8))(v29, v31, v37);
      _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "SDAirDropAWDLSingleBandManager: requested enforce Single band mode for Nearby Sharing Interaction ID:%s",  v32,  0xCu);
      swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1LL, -1LL);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(void, void))(v30 + 8))(*(void *)(v0 + 80), *(void *)(v0 + 64));
    }

    (*(void (**)(void))(v0 + 48))(0LL);
  }

  uint64_t v41 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v41);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10030403C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - v9;
  if (a1)
  {
    if (qword_100644158 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v11 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v11, (uint64_t)qword_10064E048);
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, a2, v4);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      unint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v16 = swift_slowAlloc(32LL, -1LL);
      uint64_t v32 = v16;
      *(_DWORD *)unint64_t v15 = 136315138;
      unint64_t v17 = sub_1003044A4();
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter(v4, v17);
      unint64_t v20 = v19;
      uint64_t v31 = sub_10018CDB4(v18, v19, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v15 + 4, v15 + 12);
      swift_bridgeObjectRelease(v20);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      _os_log_impl( (void *)&_mh_execute_header,  v13,  v14,  "SDAirDropAWDLSingleBandManager: failed requesting stop Single band mode for Nearby Sharing Interaction ID:%s",  v15,  0xCu);
      swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1LL, -1LL);
      swift_slowDealloc(v15, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
  }

  else
  {
    if (qword_100644158 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v21 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v21, (uint64_t)qword_10064E048);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v26 = swift_slowAlloc(32LL, -1LL);
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315138;
      unint64_t v27 = sub_1003044A4();
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v4, v27);
      unint64_t v30 = v29;
      uint64_t v31 = sub_10018CDB4(v28, v29, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl( (void *)&_mh_execute_header,  v23,  v24,  "SDAirDropAWDLSingleBandManager: requested stop Single band mode for Nearby Sharing Interaction ID:%s",  v25,  0xCu);
      swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }

uint64_t type metadata accessor for SDAirDropAWDLSingleBandManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary30SDAirDropAWDLSingleBandManager);
}

uint64_t sub_1003043F0()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100304450(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  sub_10030403C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_10030448C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10030449C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_1003044A4()
{
  unint64_t result = qword_1006460B0;
  if (!qword_1006460B0)
  {
    uint64_t v1 = type metadata accessor for UUID(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UUID, v1);
    atomic_store(result, (unint64_t *)&qword_1006460B0);
  }

  return result;
}

void sub_1003044EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v92 = type metadata accessor for UUID(0LL);
  uint64_t v94 = *(void *)(v92 - 8);
  uint64_t v12 = *(void *)(v94 + 64);
  uint64_t v13 = __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v86 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v90 = (uint64_t)&v86 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v86 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v86 - v22;
  os_log_type_t v24 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_1005DA320, 40LL, 7LL);
  *((void *)v24 + 2) = a4;
  *((void *)v24 + 3) = a5;
  unint64_t v91 = a5;
  uint64_t v25 = a6;
  __n128 v93 = v24;
  *((void *)v24 + sub_10018709C(v0 + 4) = a6;
  if (*(_BYTE *)(a1 + *(int *)(type metadata accessor for SDNearFieldTap(0LL) + 64)) != 1)
  {
    uint64_t v43 = qword_100644158;
    id v44 = a4;
    swift_retain(a6);
    if (v43 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v45 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v45, (uint64_t)qword_10064E048);
    uint64_t v46 = v94;
    uint64_t v47 = v92;
    uint64_t v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 16))(v23, a2, v92);
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v52 = swift_slowAlloc(32LL, -1LL);
      aBlock[0] = v52;
      uint64_t v90 = v25;
      *(_DWORD *)uint64_t v51 = 136315138;
      unint64_t v53 = sub_1003044A4();
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter(v47, v53);
      unint64_t v56 = v55;
      uint64_t v98 = sub_10018CDB4(v54, v55, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, &v99, v51 + 4, v51 + 12);
      swift_bridgeObjectRelease(v56);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v47);
      _os_log_impl( (void *)&_mh_execute_header,  v49,  v50,  "SDAirDropAWDLSingleBandManager: Single band not required for Nearby Sharing Interaction ID:%s",  v51,  0xCu);
      swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v52, -1LL, -1LL);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v47);
    }

    goto LABEL_19;
  }

  uint64_t v26 = a3 + 16;
  swift_beginAccess(a3 + 16, &v98, 0LL, 0LL);
  uint64_t v27 = *(void *)(a3 + 16);
  id v28 = a4;
  swift_retain(a6);
  swift_bridgeObjectRetain(v27);
  char v29 = sub_1003A036C(a2, v27);
  swift_bridgeObjectRelease(v27);
  uint64_t v30 = a2;
  if ((v29 & 1) != 0)
  {
    uint64_t v31 = v92;
    if (qword_100644158 != -1) {
      swift_once(&qword_100644158, sub_100303994);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v32, (uint64_t)qword_10064E048);
    uint64_t v33 = v94;
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v94 + 16))(v21, v30, v31);
    unint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      __n128 v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(32LL, -1LL);
      aBlock[0] = v38;
      *(_DWORD *)__n128 v37 = 136315138;
      uint64_t v90 = v25;
      unint64_t v39 = sub_1003044A4();
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v31, v39);
      unint64_t v42 = v41;
      uint64_t v95 = sub_10018CDB4(v40, v41, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, aBlock, v37 + 4, v37 + 12);
      swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
      _os_log_impl( (void *)&_mh_execute_header,  v35,  v36,  "SDAirDropAWDLSingleBandManager: Nearby Sharing Interaction ID:%s already handled. ignoring it",  v37,  0xCu);
      swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v31);
    }

LABEL_19:
    v91();
    swift_release(v93);
    return;
  }

  uint64_t v57 = v94;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
  uint64_t v59 = v92;
  v58(v16, a2, v92);
  swift_beginAccess(v26, aBlock, 33LL, 0LL);
  uint64_t v60 = v90;
  sub_1003B54D0(v90, v16);
  swift_endAccess(aBlock);
  unint64_t v91 = *(void (**)(void))(v57 + 8);
  ((void (*)(uint64_t, uint64_t))v91)(v60, v59);
  if (qword_100644158 != -1) {
    swift_once(&qword_100644158, sub_100303994);
  }
  uint64_t v61 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v61, (uint64_t)qword_10064E048);
  __n128 v62 = v89;
  uint64_t v63 = ((uint64_t (*)(char *, uint64_t, uint64_t))v58)(v89, v30, v59);
  uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
  os_log_type_t v65 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = swift_slowAlloc(12LL, -1LL);
    uint64_t v87 = v58;
    uint64_t v67 = v62;
    uint64_t v68 = (uint8_t *)v66;
    uint64_t v69 = swift_slowAlloc(32LL, -1LL);
    uint64_t v88 = v30;
    uint64_t v70 = v69;
    aBlock[0] = v69;
    *(_DWORD *)uint64_t v68 = 136315138;
    uint64_t v86 = v68 + 4;
    unint64_t v71 = sub_1003044A4();
    uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter(v59, v71);
    unint64_t v74 = v73;
    uint64_t v95 = sub_10018CDB4(v72, v73, aBlock);
    uint64_t v57 = v94;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, aBlock, v86, v68 + 12);
    swift_bridgeObjectRelease(v74);
    uint64_t v75 = v67;
    uint64_t v58 = v87;
    ((void (*)(char *, uint64_t))v91)(v75, v59);
    _os_log_impl( (void *)&_mh_execute_header,  v64,  v65,  "SDAirDropAWDLSingleBandManager: requesting enforce Single band mode for Nearby Sharing Interaction ID:%s",  v68,  0xCu);
    swift_arrayDestroy(v70, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v76 = v70;
    uint64_t v30 = v88;
    swift_slowDealloc(v76, -1LL, -1LL);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  else
  {
    ((void (*)(char *, uint64_t))v91)(v62, v59);
  }

  id v77 = [(id)objc_opt_self(WiFiP2PSPITransactionRequestor) shared];
  v58((char *)v60, v30, v59);
  uint64_t v78 = *(unsigned __int8 *)(v57 + 80);
  uint64_t v79 = (v78 + 16) & ~v78;
  unint64_t v80 = (v12 + v79 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v81 = swift_allocObject(&unk_1005DA348, v80 + 16, v78 | 7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v81 + v79, v60, v59);
  BOOL v82 = (uint64_t (**)(uint64_t))(v81 + v80);
  uint64_t v83 = v93;
  char *v82 = sub_100304CF4;
  v82[1] = v83;
  aBlock[4] = (uint64_t)sub_100304D78;
  uint64_t v97 = v81;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_1002C5880;
  aBlock[3] = (uint64_t)&unk_1005DA360;
  uint64_t v84 = _Block_copy(aBlock);
  uint64_t v85 = v97;
  swift_retain(v83);
  swift_release(v85);
  [v77 beginTransaction:18 completionHandler:v84];
  _Block_release(v84);
  swift_release(v83);
}

uint64_t sub_100304CC8()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100304CF4(uint64_t a1)
{
  return sub_1001BE748(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_100304D00()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100304D78(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  return sub_100303A24(a1, v1 + v4, *v5, v5[1]);
}

uint64_t sub_100304DCC()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100304E44()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID(0LL) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  unint64_t v6 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (void *)swift_task_alloc(dword_10064E104);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v9;
  void *v9 = v1;
  v9[1] = sub_1001943E8;
  return sub_100303BD0(v4, v5, v7, v8);
}

uint64_t sub_100304ED8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

unint64_t sub_100304EFC()
{
  unint64_t result = qword_10064E118;
  if (!qword_10064E118)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4CAC, &type metadata for SDAirDropAWDLSingleBandManagerError);
    atomic_store(result, (unint64_t *)&qword_10064E118);
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for SDAirDropAWDLSingleBandManagerError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(vsub_10018709C(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100304F80 + 4 * byte_1004D4BE0[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100304FA0 + 4 * byte_1004D4BE5[v4]))();
  }
}

_BYTE *sub_100304F80(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_100304FA0(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100304FA8(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100304FB0(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100304FB8(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100304FC0(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDAirDropAWDLSingleBandManagerError()
{
  return &type metadata for SDAirDropAWDLSingleBandManagerError;
}

unint64_t sub_100304FE0()
{
  unint64_t result = qword_10064E120;
  if (!qword_10064E120)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4C84, &type metadata for SDAirDropAWDLSingleBandManagerError);
    atomic_store(result, (unint64_t *)&qword_10064E120);
  }

  return result;
}

uint64_t sub_10030502C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064E128);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064E128);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1003050BC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064E280);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_10019A708(a1, v8);
  unint64_t v10 = sub_1003069C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s12PersonaCacheV10CodingKeysON,  &_s12PersonaCacheV10CodingKeysON,  v10,  v8,  v9);
  uint64_t v16 = a2;
  uint64_t v11 = sub_100183098(&qword_10064E268);
  uint64_t v12 = sub_100306A40( &qword_10064E288,  &qword_10064E290,  (uint64_t)&unk_1004D4EA8,  (uint64_t)&protocol conformance descriptor for <A> [A]);
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v16, v13, v4, v11, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1003051E0(void *a1)
{
  int v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064E378);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_100307320();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14VolumeMetadataV10CodingKeysON,  &_s14VolumeMetadataV10CodingKeysON,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  uint64_t v13 = v3[1];
  char v26 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v26, v5);
  if (!v2)
  {
    uint64_t v14 = v3[2];
    uint64_t v15 = v3[3];
    char v25 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v25, v5);
    uint64_t v16 = _s14VolumeMetadataVMa(0LL);
    uint64_t v17 = (char *)v3 + *(int *)(v16 + 24);
    char v24 = 2;
    uint64_t v18 = type metadata accessor for Date(0LL);
    uint64_t v19 = sub_100183F14( &qword_10064E380,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v17, &v24, v5, v18, v19);
    uint64_t v20 = (char *)v3 + *(int *)(v16 + 28);
    char v23 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v20, &v23, v5, v18, v19);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10030539C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for Date(0LL);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v30 = (uint64_t *)((char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v26 - v6);
  uint64_t v34 = sub_100183098(&qword_10064E360);
  uint64_t v8 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = _s14VolumeMetadataVMa(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_10019A708(a1, v14);
  unint64_t v16 = sub_100307320();
  uint64_t v33 = v10;
  uint64_t v17 = v35;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14VolumeMetadataV10CodingKeysON,  &_s14VolumeMetadataV10CodingKeysON,  v16,  v14,  v15);
  if (v17)
  {
    sub_10018709C(a1);
  }

  else
  {
    unint64_t v35 = v7;
    uint64_t v18 = a1;
    uint64_t v20 = v31;
    uint64_t v19 = v32;
    char v39 = 0;
    void *v13 = KeyedDecodingContainer.decode(_:forKey:)(&v39, v34);
    v13[1] = v21;
    char v38 = 1;
    v13[2] = KeyedDecodingContainer.decode(_:forKey:)(&v38, v34);
    v13[3] = v22;
    char v37 = 2;
    uint64_t v27 = sub_100183F14( &qword_10064E370,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v28 = 0LL;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v35, v19, &v37, v34, v19, v27);
    char v23 = (char *)v13 + *(int *)(v11 + 24);
    char v24 = v35;
    unint64_t v35 = *(void **)(v20 + 32);
    ((void (*)(char *, void *, uint64_t))v35)(v23, v24, v19);
    char v36 = 3;
    char v25 = v30;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v30, v19, &v36, v34, v19, v27);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v33, v34);
    ((void (*)(char *, void *, uint64_t))v35)((char *)v13 + *(int *)(v11 + 28), v25, v19);
    sub_100306B74((uint64_t)v13, v29);
    sub_10018709C(v18);
    sub_100306BFC((uint64_t)v13);
  }

uint64_t sub_1003056E4()
{
  return 0x73656D756C6F76LL;
}

uint64_t sub_1003056FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  if (a1 == 0x73656D756C6F76LL && a2 == 0xE700000000000000LL)
  {
    uint64_t result = swift_bridgeObjectRelease(0xE700000000000000LL);
    char v8 = 0;
  }

  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(0x73656D756C6F76LL, 0xE700000000000000LL, a1, a2, 0LL);
    uint64_t result = swift_bridgeObjectRelease(a2);
    char v8 = v6 ^ 1;
  }

  *a3 = v8 & 1;
  return result;
}

uint64_t sub_100305790(uint64_t a1)
{
  unint64_t v2 = sub_1003069C0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003057B8(uint64_t a1)
{
  unint64_t v2 = sub_1003069C0();
  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1003057E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100306874(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100305808(void *a1)
{
  return sub_1003050BC(a1, *v1);
}

uint64_t sub_100305820()
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100305850 + 4 * byte_1004D4CF0[*v0]))( 0x4449656D756C6F76LL,  0xE800000000000000LL);
}

uint64_t sub_100305850()
{
  return 0x4449656369766564LL;
}

uint64_t sub_100305864()
{
  return 0x6E6F697461657263LL;
}

uint64_t sub_100305898@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_100307508(a1, a2);
  *a3 = result;
  return result;
}

void sub_1003058BC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1003058C8(uint64_t a1)
{
  unint64_t v2 = sub_100307320();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003058F0(uint64_t a1)
{
  unint64_t v2 = sub_100307320();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100305918(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10030592C(void *a1)
{
  return sub_1003051E0(a1);
}

void *sub_100305944(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_defaultActor_initialize(v3);
  v3[16] = &_swiftEmptyDictionarySingleton;
  char v6 = (const char **)(v3 + 16);
  v3[14] = a1;
  v3[15] = a2;
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  swift_retain();
  id v8 = [v7 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 dataForKey:v9];

  if (v10)
  {
    uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
    unint64_t v13 = v12;

    uint64_t v14 = type metadata accessor for JSONDecoder(0LL);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    uint64_t v15 = JSONDecoder.init()();
    uint64_t v16 = sub_100183098(&qword_10064E298);
    unint64_t v17 = sub_100306AC4();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v16, v11, v13, v16, v17);
    swift_release(v15);
    *(void *)&double v32 = swift_beginAccess(v3 + 16, v49, 1LL, 0LL).n128_u64[0];
    uint64_t v33 = *v6;
    *char v6 = v48;
    swift_bridgeObjectRelease(v33, v32);
    if (qword_100644160 != -1) {
      swift_once(&qword_100644160, sub_10030502C);
    }
    uint64_t v34 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v34, (uint64_t)qword_10064E128);
    uint64_t v35 = swift_retain_n(v3, 2LL);
    char v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    log = v36;
    if (os_log_type_enabled(v36, v37))
    {
      char v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v45 = swift_slowAlloc(32LL, -1LL);
      uint64_t v48 = (const char *)v45;
      *(_DWORD *)char v38 = 136315138;
      char v39 = (const char *)v3[16];
      swift_bridgeObjectRetain(v39);
      uint64_t v41 = Dictionary.description.getter( v40,  &type metadata for String,  &_s12PersonaCacheVN,  &protocol witness table for String);
      uint64_t v43 = v42;
      swift_bridgeObjectRelease(v39);
      uint64_t v47 = sub_10018CDB4(v41, (unint64_t)v43, (uint64_t *)&v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v38 + 4, v38 + 12);
      swift_release_n(v3, 2LL);
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, log, v37, "localCache: %s", v38, 0xCu);
      swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
      sub_100189B20(v11, v13);
    }

    else
    {
      swift_release_n(v3, 2LL);
      sub_100189B20(v11, v13);
    }

    goto LABEL_15;
  }

  v49[0] = 0LL;
  v49[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(43LL);
  swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
  unint64_t v18 = sub_100187014();
  uint64_t v19 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v18, 0LL, 0LL);
  *(_DWORD *)uint64_t v20 = 10;
  *(void *)(v20 + 8) = 0xD00000000000003CLL;
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = 0x800000010050A410LL;
  swift_willThrow(v19);
  unint64_t v21 = sub_100392024((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&double v22 = swift_beginAccess(v3 + 16, v49, 1LL, 0LL).n128_u64[0];
  char v23 = (const char *)v3[16];
  v3[16] = v21;
  swift_bridgeObjectRelease(v23, v22);
  if ((sub_100305ED8() & 1) == 0)
  {
    if (qword_100644160 != -1) {
      swift_once(&qword_100644160, sub_10030502C);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_10064E128);
    swift_errorRetain(v19);
    uint64_t v25 = swift_errorRetain(v19);
    uint64_t v26 = (void *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.error.getter(v26);
    if (!os_log_type_enabled((os_log_t)v26, v27))
    {
      swift_errorRelease(v19);
      swift_errorRelease(v19);
      swift_errorRelease(v19);

LABEL_15:
      swift_release(a2);
      return v3;
    }

    uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v29 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v28 = 138412290;
    swift_errorRetain(v19);
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError(v19);
    uint64_t v48 = (const char *)v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, v49, v28 + 4, v28 + 12);
    uint64_t *v29 = v30;
    swift_errorRelease(v19);
    swift_errorRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v26, v27, "Could not load VolumeUnlockLocalCache %@", v28, 0xCu);
    uint64_t v31 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v29, 1LL, v31);
    swift_slowDealloc(v29, -1LL, -1LL);
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  swift_release(a2);
  swift_errorRelease(v19);
  return v3;
}

uint64_t sub_100305ED8()
{
  uint64_t v0 = _s14VolumeMetadataVMa(0LL);
  uint64_t v102 = *(void *)(v0 - 8);
  uint64_t v103 = v0;
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v1);
  uint64_t v5 = (unint64_t *)((char *)&v87 - v4);
  uint64_t v6 = objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  id v7 = [(id)v6 standardUserDefaults];
  unint64_t v8 = (unint64_t)"Cache at SDVolumeByPersonaID";
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v7 dictionaryForKey:v9];

  if (!v10) {
    return 0LL;
  }
  uint64_t v11 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v10,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

  sub_10021E43C((uint64_t)v11);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease(v11);
  if (!v13) {
    return 0LL;
  }
  uint64_t v94 = v13;
  if (qword_100644160 == -1) {
    goto LABEL_4;
  }
LABEL_64:
  swift_once(&qword_100644160, sub_10030502C);
LABEL_4:
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_10064E128);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Found legacy local cache, converting and deleting", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v19 = v94;
  swift_bridgeObjectRetain_n(v94, 2LL);
  unint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter(v21);
  BOOL v23 = os_log_type_enabled(v21, v22);
  id v88 = (id)v6;
  unint64_t v87 = v8;
  uint64_t v89 = v15;
  if (v23)
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    unint64_t v8 = swift_slowAlloc(32LL, -1LL);
    v107[0] = v8;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v6 = (uint64_t)(v24 + 4);
    swift_bridgeObjectRetain(v94, v87);
    uint64_t v25 = sub_100183098(&qword_100649150);
    uint64_t v26 = v3;
    uint64_t v27 = Dictionary.description.getter(v94, &type metadata for String, v25, &protocol witness table for String);
    uint64_t v29 = v28;
    swift_bridgeObjectRelease(v94);
    uint64_t v30 = v27;
    uint64_t v3 = v26;
    uint64_t v106 = sub_10018CDB4(v30, (unint64_t)v29, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v24 + 4, v24 + 12);
    swift_bridgeObjectRelease_n(v94, 2LL);
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "old cache: %s", v24, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    uint64_t v19 = v94;
    swift_slowDealloc(v24, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v19, 2LL);
  }

  int64_t v32 = 0LL;
  uint64_t v33 = *((void *)v19 + 8);
  unint64_t v91 = v19 + 64;
  uint64_t v34 = 1LL << v19[32];
  if (v34 < 64) {
    uint64_t v35 = ~(-1LL << v34);
  }
  else {
    uint64_t v35 = -1LL;
  }
  unint64_t v36 = v35 & v33;
  int64_t v92 = (unint64_t)(v34 + 63) >> 6;
  uint64_t v93 = v90 + 128;
  uint64_t v101 = v3;
LABEL_15:
  if (v36)
  {
    uint64_t v95 = (v36 - 1) & v36;
    int64_t v96 = v32;
    unint64_t v42 = __clz(__rbit64(v36)) | (v32 << 6);
    goto LABEL_31;
  }

  int64_t v43 = v32 + 1;
  if (__OFADD__(v32, 1LL)) {
    goto LABEL_62;
  }
  if (v43 >= v92) {
    goto LABEL_56;
  }
  unint64_t v44 = *(void *)&v91[8 * v43];
  int64_t v45 = v32 + 1;
  if (v44) {
    goto LABEL_30;
  }
  int64_t v45 = v32 + 2;
  if (v32 + 2 >= v92) {
    goto LABEL_56;
  }
  unint64_t v44 = *(void *)&v91[8 * v45];
  if (v44) {
    goto LABEL_30;
  }
  int64_t v45 = v32 + 3;
  if (v32 + 3 >= v92) {
    goto LABEL_56;
  }
  unint64_t v44 = *(void *)&v91[8 * v45];
  if (v44)
  {
LABEL_30:
    uint64_t v95 = (v44 - 1) & v44;
    int64_t v96 = v45;
    unint64_t v42 = __clz(__rbit64(v44)) + (v45 << 6);
LABEL_31:
    uint64_t v47 = (uint64_t *)(*((void *)v19 + 6) + 16 * v42);
    uint64_t v48 = *(void *)(*((void *)v19 + 7) + 8 * v42);
    uint64_t v49 = (const char *)v47[1];
    uint64_t v97 = *v47;
    uint64_t v98 = v49;
    uint64_t v50 = *(void *)(v48 + 64);
    uint64_t v99 = v48 + 64;
    uint64_t v51 = 1LL << *(_BYTE *)(v48 + 32);
    if (v51 < 64) {
      uint64_t v52 = ~(-1LL << v51);
    }
    else {
      uint64_t v52 = -1LL;
    }
    unint64_t v8 = v52 & v50;
    int64_t v100 = (unint64_t)(v51 + 63) >> 6;
    *(void *)&double v53 = swift_bridgeObjectRetain(v49, v87).n128_u64[0];
    uint64_t v104 = v48;
    *(void *)&double v54 = swift_bridgeObjectRetain((const char *)v48, v53).n128_u64[0];
    uint64_t v6 = 0LL;
    unint64_t v55 = _swiftEmptyArrayStorage;
    if (v8)
    {
LABEL_35:
      unint64_t v56 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v57 = v56 | (v6 << 6);
      goto LABEL_50;
    }

    while (1)
    {
      int64_t v58 = v6 + 1;
      if (__OFADD__(v6, 1LL))
      {
        __break(1u);
        goto LABEL_61;
      }

      if (v58 >= v100) {
        goto LABEL_14;
      }
      unint64_t v59 = *(void *)(v99 + 8 * v58);
      ++v6;
      if (!v59)
      {
        uint64_t v6 = v58 + 1;
        if (v58 + 1 >= v100) {
          goto LABEL_14;
        }
        unint64_t v59 = *(void *)(v99 + 8 * v6);
        if (!v59)
        {
          uint64_t v6 = v58 + 2;
          if (v58 + 2 >= v100) {
            goto LABEL_14;
          }
          unint64_t v59 = *(void *)(v99 + 8 * v6);
          if (!v59)
          {
            int64_t v60 = v58 + 3;
            if (v60 >= v100)
            {
LABEL_14:
              swift_release(v104);
              uint64_t v6 = v93;
              swift_beginAccess(v93, v107, 33LL, 0LL);
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)v6);
              uint64_t v106 = *(void *)v6;
              *(void *)uint64_t v6 = 0x8000000000000000LL;
              uint64_t v38 = (uint64_t)v55;
              char v39 = v98;
              sub_1003B3938(v38, v97, v98, isUniquelyReferenced_nonNull_native);
              uint64_t v40 = *(const char **)v6;
              *(void *)uint64_t v6 = v106;
              *(void *)&double v41 = swift_bridgeObjectRelease(v39).n128_u64[0];
              swift_bridgeObjectRelease(v40, v41);
              swift_endAccess(v107);
              uint64_t v19 = v94;
              unint64_t v36 = v95;
              int64_t v32 = v96;
              goto LABEL_15;
            }

            unint64_t v59 = *(void *)(v99 + 8 * v60);
            if (!v59)
            {
              while (1)
              {
                uint64_t v6 = v60 + 1;
                if (__OFADD__(v60, 1LL)) {
                  break;
                }
                if (v6 >= v100) {
                  goto LABEL_14;
                }
                unint64_t v59 = *(void *)(v99 + 8 * v6);
                ++v60;
                if (v59) {
                  goto LABEL_49;
                }
              }

uint64_t sub_100306818()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t _s22VolumeUnlockLocalCacheCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCV16DaemoniOSLibrary16SDAuthentication22VolumeUnlockLocalCache);
}

ValueMetadata *_s12PersonaCacheVMa()
{
  return &_s12PersonaCacheVN;
}

void *sub_100306874(void *a1)
{
  uint64_t v3 = sub_100183098(&qword_10064E258);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  NSString v9 = sub_10019A708(a1, v7);
  unint64_t v10 = sub_1003069C0();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s12PersonaCacheV10CodingKeysON,  &_s12PersonaCacheV10CodingKeysON,  v10,  v7,  v8);
  if (v1)
  {
    sub_10018709C(a1);
  }

  else
  {
    uint64_t v11 = sub_100183098(&qword_10064E268);
    uint64_t v12 = sub_100306A40( &qword_10064E270,  &qword_10064E278,  (uint64_t)&unk_1004D4ED0,  (uint64_t)&protocol conformance descriptor for <A> [A]);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v16, v11, v13, v3, v11, v12);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    NSString v9 = v16;
    sub_10018709C(a1);
  }

  return v9;
}

unint64_t sub_1003069C0()
{
  unint64_t result = qword_10064E260;
  if (!qword_10064E260)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4EF8, &_s12PersonaCacheV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E260);
  }

  return result;
}

uint64_t _s14VolumeMetadataVMa(uint64_t a1)
{
  uint64_t result = qword_10064E308;
  if (!qword_10064E308) {
    return swift_getSingletonMetadata(a1, &_s14VolumeMetadataVMn);
  }
  return result;
}

uint64_t sub_100306A40(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v9 = sub_100183124(&qword_10064E268);
    sub_100183F14(a2, _s14VolumeMetadataVMa, a3);
    uint64_t result = swift_getWitnessTable(a4, v9);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_100306AC4()
{
  unint64_t result = qword_10064E2A0;
  if (!qword_10064E2A0)
  {
    uint64_t v1 = sub_100183124(&qword_10064E298);
    sub_100306B30();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> [A : B], v1);
    atomic_store(result, (unint64_t *)&qword_10064E2A0);
  }

  return result;
}

unint64_t sub_100306B30()
{
  unint64_t result = qword_10064E2A8;
  if (!qword_10064E2A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4D6C, &_s12PersonaCacheVN);
    atomic_store(result, (unint64_t *)&qword_10064E2A8);
  }

  return result;
}

uint64_t sub_100306B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14VolumeMetadataVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100306BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14VolumeMetadataVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100306BFC(uint64_t a1)
{
  uint64_t v2 = _s14VolumeMetadataVMa(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t _s12PersonaCacheV10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(vsub_10018709C(v0 + 4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100306C78 + 4 * byte_1004D4CF4[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100306C98 + 4 * byte_1004D4CF9[v4]))();
  }
}

_BYTE *sub_100306C78(_BYTE *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

_BYTE *sub_100306C98(_BYTE *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100306CA0(_DWORD *result, int a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100306CA8(_WORD *result, __int16 a2)
{
  *unint64_t result = a2;
  return result;
}

_WORD *sub_100306CB0(_WORD *result)
{
  *unint64_t result = 0;
  return result;
}

_DWORD *sub_100306CB8(_DWORD *result)
{
  *unint64_t result = 0;
  return result;
}

ValueMetadata *_s12PersonaCacheV10CodingKeysOMa()
{
  return &_s12PersonaCacheV10CodingKeysON;
}

char *sub_100306CD4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v14);
  }

  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Date(0LL);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12);
    v13(&v4[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v12);
  }

  return v4;
}

uint64_t sub_100306DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 28), v5);
}

char *sub_100306E2C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  unint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Date(0LL);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11);
  v12(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v11);
  return a1;
}

char *sub_100306ED8(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a1 + 1);
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  uint64_t v8 = *((void *)a2 + 3);
  uint64_t v9 = *((void *)a1 + 3);
  *((void *)a1 + 3) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL);
  v14(v11, v12, v13);
  v14(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v13);
  return a1;
}

char *sub_100306F9C(char *a1, char *a2, uint64_t a3)
{
  __int128 v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32LL);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v10);
  return a1;
}

char *sub_100307028(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  uint64_t v7 = *((void *)a1 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *((void *)a2 + 3);
  uint64_t v9 = *((void *)a1 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40LL);
  v14(v11, v12, v13);
  v14(&a1[*(int *)(a3 + 28)], &a2[*(int *)(a3 + 28)], v13);
  return a1;
}

uint64_t sub_1003070CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003070D8);
}

uint64_t sub_1003070D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(vsub_10018709C(v0 + 4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for Date(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v8);
  }

uint64_t sub_100307154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100307160);
}

uint64_t sub_100307160(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v5 + *(int *)(a4 + 24),  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_1003071D4(uint64_t a1)
{
  v4[0] = &unk_1004D4DD8;
  v4[1] = &unk_1004D4DD8;
  uint64_t result = type metadata accessor for Date(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64LL;
    uint64_t v6 = v5;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

unint64_t sub_10030724C()
{
  unint64_t result = qword_10064E348;
  if (!qword_10064E348)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4E80, &_s12PersonaCacheV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E348);
  }

  return result;
}

unint64_t sub_100307294()
{
  unint64_t result = qword_10064E350;
  if (!qword_10064E350)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4DF0, &_s12PersonaCacheV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E350);
  }

  return result;
}

unint64_t sub_1003072DC()
{
  unint64_t result = qword_10064E358;
  if (!qword_10064E358)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4E18, &_s12PersonaCacheV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E358);
  }

  return result;
}

unint64_t sub_100307320()
{
  unint64_t result = qword_10064E368;
  if (!qword_10064E368)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5000, &_s14VolumeMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E368);
  }

  return result;
}

uint64_t _s14VolumeMetadataV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(vsub_10018709C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_10018709C(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1003073B0 + 4 * byte_1004D4D03[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003073E4 + 4 * byte_1004D4CFE[v4]))();
}

uint64_t sub_1003073E4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003073EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1003073F4LL);
  }
  return result;
}

uint64_t sub_100307400(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100307408LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_10030740C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100307414(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14VolumeMetadataV10CodingKeysOMa()
{
  return &_s14VolumeMetadataV10CodingKeysON;
}

unint64_t sub_100307434()
{
  unint64_t result = qword_10064E388;
  if (!qword_10064E388)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4FD8, &_s14VolumeMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E388);
  }

  return result;
}

unint64_t sub_10030747C()
{
  unint64_t result = qword_10064E390;
  if (!qword_10064E390)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4F48, &_s14VolumeMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E390);
  }

  return result;
}

unint64_t sub_1003074C4()
{
  unint64_t result = qword_10064E398;
  if (!qword_10064E398)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D4F70, &_s14VolumeMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064E398);
  }

  return result;
}

uint64_t sub_100307508(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x4449656D756C6F76LL && a2 == 0xE800000000000000LL)
  {
    unint64_t v5 = 0xE800000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4449656D756C6F76LL, 0xE800000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4449656369766564LL && a2 == 0xE800000000000000LL)
  {
    unint64_t v7 = 0xE800000000000000LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4449656369766564LL, 0xE800000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x6E6F697461657263LL && a2 == 0xEC00000065746144LL)
  {
    unint64_t v8 = 0xEC00000065746144LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F697461657263LL, 0xEC00000065746144LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144LL)
  {
    swift_bridgeObjectRelease(0xEC00000065746144LL);
    return 3LL;
  }

  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x646573557473616CLL, 0xEC00000065746144LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

uint64_t sub_1003076EC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064E3A0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064E3A0);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

id sub_10030777C()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV17InitialKeyContextVMa(0LL) + 40);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationRequest) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

uint64_t sub_1003077E8()
{
  uint64_t v0 = sub_100183098(&qword_1006457E0);
  uint64_t v1 = swift_allocObject(v0, 432LL, 7LL);
  *(_OWORD *)(v1 + swift_weakDestroy(v0 + 16) = xmmword_1004CE410;
  if (qword_100644170 != -1) {
    swift_once(&qword_100644170, LongHash.storage.getter);
  }
  *(void *)(v1 + 56) = &type metadata for SDAuthentication.Operation.CheckIsBluetoothEnabled;
  *(void *)(v1 + 6sub_10018709C(v0 + 4) = &off_10064AC58;
  *(void *)(v1 + 96) = &type metadata for SDAuthentication.Operation.CheckIsWiFiEnabled;
  *(void *)(v1 + 10sub_10018709C(v0 + 4) = &off_10064AC38;
  *(void *)(v1 + 136) = &type metadata for SDAuthentication.Operation.CheckRemoteDeviceOSVersionIsSupported;
  *(void *)(v1 + 14sub_10018709C(v0 + 4) = &off_10064ABF8;
  *(void *)(v1 + 176) = &type metadata for SDAuthentication.Operation.RecordRemoteDevice;
  *(void *)(v1 + 18sub_10018709C(v0 + 4) = &off_10064ABD8;
  *(void *)(v1 + 2swift_weakDestroy(v0 + 16) = &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
  *(void *)(v1 + 22sub_10018709C(v0 + 4) = &off_10064AB18;
  *(void *)(v1 + 256) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v1 + 26sub_10018709C(v0 + 4) = &off_10064ABB8;
  *(void *)(v1 + 296) = &type metadata for SDAuthentication.Operation.IncludeLastRegistrationDateInMessage;
  *(void *)(v1 + 30sub_10018709C(v0 + 4) = &off_10064AAF8;
  *(void *)(v1 + 336) = &type metadata for SDAuthentication.Operation.IncludeSessionStartDateInMessage;
  *(void *)(v1 + 34sub_10018709C(v0 + 4) = &off_10064AAD8;
  *(void *)(v1 + 376) = &type metadata for SDAuthentication.Operation.UseAuthTokenForFirstAKSTokenAsKeyInMessage;
  *(void *)(v1 + 38sub_10018709C(v0 + 4) = &off_10064AAB8;
  *(void *)(v1 + 4swift_weakDestroy(v0 + 16) = &type metadata for SDAuthentication.Operation.SendRequestMessage;
  *(void *)(v1 + 42sub_10018709C(v0 + 4) = &off_10064AB38;
  return v1;
}

const char *sub_10030791C(uint64_t a1, uint64_t a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  id v5 = *(const char **)a2;
  *(void *)a1 = *(void *)a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v20 = &v5[(v4 + 16LL) & ~(unint64_t)v4];
    swift_retain(v5);
  }

  else
  {
    uint64_t v8 = a2 + 8;
    __int128 v9 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v9 - 8);
    __n128 v12 = swift_bridgeObjectRetain(v5);
    v11(a1 + 8, v8, v10, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)(a1 + v13);
    uint64_t v15 = (char *)(a2 + v13);
    uint64_t v16 = type metadata accessor for Date(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    unint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    int64_t v92 = (const char *)a1;
    if (v18(v15, 1LL, v16))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
    }

    unint64_t v21 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v22 = v21[5];
    BOOL v23 = &v14[v22];
    uint64_t v24 = &v15[v22];
    if (v18(&v15[v22], 1LL, v16))
    {
      uint64_t v25 = sub_100183098(&qword_1006457E8);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0LL, 1LL, v16);
    }

    uint64_t v26 = v21[6];
    uint64_t v27 = &v14[v26];
    uint64_t v28 = &v15[v26];
    if (v18(&v15[v26], 1LL, v16))
    {
      uint64_t v29 = sub_100183098(&qword_1006457E8);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v27, v28, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v27, 0LL, 1LL, v16);
    }

    uint64_t v30 = v21[7];
    uint64_t v31 = &v14[v30];
    int64_t v32 = &v15[v30];
    if (v18(&v15[v30], 1LL, v16))
    {
      uint64_t v33 = sub_100183098(&qword_1006457E8);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v31, v32, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v31, 0LL, 1LL, v16);
    }

    uint64_t v34 = v21[8];
    uint64_t v35 = &v14[v34];
    unint64_t v36 = &v15[v34];
    if (v18(&v15[v34], 1LL, v16))
    {
      uint64_t v37 = sub_100183098(&qword_1006457E8);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v35, v36, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v35, 0LL, 1LL, v16);
    }

    uint64_t v38 = v21[9];
    char v39 = &v14[v38];
    uint64_t v40 = &v15[v38];
    if (v18(&v15[v38], 1LL, v16))
    {
      uint64_t v41 = sub_100183098(&qword_1006457E8);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v39, v40, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v39, 0LL, 1LL, v16);
    }

    uint64_t v42 = v21[10];
    int64_t v43 = &v14[v42];
    unint64_t v44 = &v15[v42];
    if (v18(&v15[v42], 1LL, v16))
    {
      uint64_t v45 = sub_100183098(&qword_1006457E8);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v43, v44, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v43, 0LL, 1LL, v16);
    }

    uint64_t v46 = v21[11];
    uint64_t v47 = &v14[v46];
    uint64_t v48 = &v15[v46];
    if (v18(&v15[v46], 1LL, v16))
    {
      uint64_t v49 = sub_100183098(&qword_1006457E8);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v47, v48, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v47, 0LL, 1LL, v16);
    }

    uint64_t v50 = v21[12];
    uint64_t v51 = &v14[v50];
    uint64_t v52 = &v15[v50];
    if (v18(&v15[v50], 1LL, v16))
    {
      uint64_t v53 = sub_100183098(&qword_1006457E8);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v51, v52, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v51, 0LL, 1LL, v16);
    }

    v14[v21[13]] = v15[v21[13]];
    uint64_t v54 = v21[14];
    unint64_t v55 = &v14[v54];
    unint64_t v56 = &v15[v54];
    if (v18(&v15[v54], 1LL, v16))
    {
      uint64_t v57 = sub_100183098(&qword_1006457E8);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v55, v56, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v55, 0LL, 1LL, v16);
    }

    uint64_t v58 = v21[15];
    unint64_t v59 = &v14[v58];
    int64_t v60 = &v15[v58];
    if (v18(&v15[v58], 1LL, v16))
    {
      uint64_t v61 = sub_100183098(&qword_1006457E8);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v59, v60, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v59, 0LL, 1LL, v16);
    }

    uint64_t v62 = v21[16];
    uint64_t v63 = &v14[v62];
    uint64_t v64 = &v15[v62];
    if (v18(&v15[v62], 1LL, v16))
    {
      uint64_t v65 = sub_100183098(&qword_1006457E8);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v63, v64, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v63, 0LL, 1LL, v16);
    }

    uint64_t v66 = v21[17];
    double v67 = &v14[v66];
    uint64_t v68 = &v15[v66];
    if (v18(&v15[v66], 1LL, v16))
    {
      uint64_t v69 = sub_100183098(&qword_1006457E8);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v67, v68, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v67, 0LL, 1LL, v16);
    }

    uint64_t v70 = v21[18];
    unint64_t v71 = &v14[v70];
    unint64_t v72 = &v15[v70];
    *(_DWORD *)unint64_t v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    v14[v21[19]] = v15[v21[19]];
    uint64_t v73 = v21[20];
    uint64_t v74 = &v14[v73];
    uint64_t v75 = &v15[v73];
    os_log_type_t v76 = (const char *)*((void *)v75 + 1);
    *(void *)uint64_t v74 = *(void *)v75;
    *((void *)v74 + 1) = v76;
    uint64_t v77 = v21[21];
    uint64_t v78 = &v14[v77];
    double v79 = &v15[v77];
    unint64_t v80 = (const char *)*((void *)v79 + 1);
    *(void *)uint64_t v78 = *(void *)v79;
    *((void *)v78 + 1) = v80;
    uint64_t v81 = a3[7];
    uint64_t v20 = v92;
    uint64_t v82 = (char *)&v92[v81];
    uint64_t v83 = (const void *)(a2 + v81);
    *(void *)&double v84 = swift_bridgeObjectRetain(v76).n128_u64[0];
    __n128 v85 = swift_bridgeObjectRetain(v80, v84);
    if (((unsigned int (*)(const void *, uint64_t, uint64_t, __n128))v18)(v83, 1LL, v16, v85))
    {
      uint64_t v86 = sub_100183098(&qword_1006457E8);
      memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v82, v83, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v82, 0LL, 1LL, v16);
    }

    uint64_t v87 = a3[8];
    id v88 = (char *)&v92[v87];
    uint64_t v89 = (void *)(a2 + v87);
    if (v18((char *)v89, 1LL, v16))
    {
      uint64_t v90 = sub_100183098(&qword_1006457E8);
      memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, void *, uint64_t))(v17 + 16))(v88, v89, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v88, 0LL, 1LL, v16);
    }
  }

  return v20;
}

uint64_t sub_1003080E8(const char **a1, int *a2)
{
  int v4 = a1 + 1;
  swift_bridgeObjectRelease(*a1);
  sub_10018709C(v4);
  id v5 = (char *)a1 + a2[6];
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  __int128 v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v10 = &v5[v9[5]];
  if (!v8(v10, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v11 = &v5[v9[6]];
  if (!v8(v11, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  __n128 v12 = &v5[v9[7]];
  if (!v8(v12, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  uint64_t v13 = &v5[v9[8]];
  if (!v8(v13, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  uint64_t v14 = &v5[v9[9]];
  if (!v8(v14, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }
  uint64_t v15 = &v5[v9[10]];
  if (!v8(v15, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  uint64_t v16 = &v5[v9[11]];
  if (!v8(v16, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  }
  uint64_t v17 = &v5[v9[12]];
  if (!v8(v17, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  }
  unint64_t v18 = &v5[v9[14]];
  if (!v8(v18, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }
  uint64_t v19 = &v5[v9[15]];
  if (!v8(v19, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  uint64_t v20 = &v5[v9[16]];
  if (!v8(v20, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  }
  unint64_t v21 = &v5[v9[17]];
  if (!v8(v21, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  }
  *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)&v5[v9[20] + 8]).n128_u64[0];
  __n128 v23 = swift_bridgeObjectRelease((const char *)*(void *)&v5[v9[21] + 8], v22);
  uint64_t v24 = (char *)a1 + a2[7];
  uint64_t v25 = (char *)a1 + a2[8];
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v8)(v25, 1LL, v6);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v25, v6);
  }
  return result;
}

uint64_t sub_10030841C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(const char **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a2 + 8;
  __int128 v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  __n128 v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 8, v7, v9, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v90 = a1;
  if (v17(v14, 1LL, v15))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  uint64_t v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v20 = v19[5];
  unint64_t v21 = &v13[v20];
  double v22 = &v14[v20];
  if (v17(&v14[v20], 1LL, v15))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0LL, 1LL, v15);
  }

  uint64_t v24 = v19[6];
  uint64_t v25 = &v13[v24];
  uint64_t v26 = &v14[v24];
  if (v17(&v14[v24], 1LL, v15))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0LL, 1LL, v15);
  }

  uint64_t v28 = v19[7];
  uint64_t v29 = &v13[v28];
  uint64_t v30 = &v14[v28];
  if (v17(&v14[v28], 1LL, v15))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0LL, 1LL, v15);
  }

  uint64_t v32 = v19[8];
  uint64_t v33 = &v13[v32];
  uint64_t v34 = &v14[v32];
  if (v17(&v14[v32], 1LL, v15))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0LL, 1LL, v15);
  }

  uint64_t v36 = v19[9];
  uint64_t v37 = &v13[v36];
  uint64_t v38 = &v14[v36];
  if (v17(&v14[v36], 1LL, v15))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v37, 0LL, 1LL, v15);
  }

  uint64_t v40 = v19[10];
  uint64_t v41 = &v13[v40];
  uint64_t v42 = &v14[v40];
  if (v17(&v14[v40], 1LL, v15))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v41, 0LL, 1LL, v15);
  }

  uint64_t v44 = v19[11];
  uint64_t v45 = &v13[v44];
  uint64_t v46 = &v14[v44];
  if (v17(&v14[v44], 1LL, v15))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v45, 0LL, 1LL, v15);
  }

  uint64_t v48 = v19[12];
  uint64_t v49 = &v13[v48];
  uint64_t v50 = &v14[v48];
  if (v17(&v14[v48], 1LL, v15))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v49, 0LL, 1LL, v15);
  }

  v13[v19[13]] = v14[v19[13]];
  uint64_t v52 = v19[14];
  uint64_t v53 = &v13[v52];
  uint64_t v54 = &v14[v52];
  if (v17(&v14[v52], 1LL, v15))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v53, 0LL, 1LL, v15);
  }

  uint64_t v56 = v19[15];
  uint64_t v57 = &v13[v56];
  uint64_t v58 = &v14[v56];
  if (v17(&v14[v56], 1LL, v15))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v57, 0LL, 1LL, v15);
  }

  uint64_t v60 = v19[16];
  uint64_t v61 = &v13[v60];
  uint64_t v62 = &v14[v60];
  if (v17(&v14[v60], 1LL, v15))
  {
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v61, 0LL, 1LL, v15);
  }

  uint64_t v64 = v19[17];
  uint64_t v65 = &v13[v64];
  uint64_t v66 = &v14[v64];
  if (v17(&v14[v64], 1LL, v15))
  {
    uint64_t v67 = sub_100183098(&qword_1006457E8);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v65, 0LL, 1LL, v15);
  }

  uint64_t v68 = v19[18];
  uint64_t v69 = &v13[v68];
  uint64_t v70 = &v14[v68];
  *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v13[v19[19]] = v14[v19[19]];
  uint64_t v71 = v19[20];
  unint64_t v72 = &v13[v71];
  uint64_t v73 = &v14[v71];
  uint64_t v74 = (const char *)*((void *)v73 + 1);
  *(void *)unint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v19[21];
  os_log_type_t v76 = &v13[v75];
  uint64_t v77 = &v14[v75];
  uint64_t v78 = (const char *)*((void *)v77 + 1);
  *(void *)os_log_type_t v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  uint64_t v79 = a3[7];
  unint64_t v80 = (void *)(v90 + v79);
  uint64_t v81 = (const void *)(a2 + v79);
  *(void *)&double v82 = swift_bridgeObjectRetain(v74).n128_u64[0];
  __n128 v83 = swift_bridgeObjectRetain(v78, v82);
  if (((unsigned int (*)(const void *, uint64_t, uint64_t, __n128))v17)(v81, 1LL, v15, v83))
  {
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v80, v81, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v80, 0LL, 1LL, v15);
  }

  uint64_t v85 = a3[8];
  uint64_t v86 = (void *)(v90 + v85);
  uint64_t v87 = (void *)(a2 + v85);
  if (v17((char *)v87, 1LL, v15))
  {
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v86, v87, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v86, 0LL, 1LL, v15);
  }

  return v90;
}

uint64_t sub_100308BC4(uint64_t a1, const char **a2, int *a3)
{
  uint64_t v7 = a2 + 1;
  uint64_t v6 = *a2;
  __int128 v8 = *(const char **)a1;
  *(void *)a1 = *a2;
  *(void *)&double v9 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v8, v9);
  sub_10019DB24((void *)(a1 + 8), v7);
  uint64_t v10 = a3[6];
  __n128 v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v124 = *(void *)(v13 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v124 + 48);
  int v15 = v14(v11, 1LL, v13);
  int v16 = v14(v12, 1LL, v13);
  uint64_t v122 = a1;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v11, 0LL, 1LL, v13);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  uint64_t v20 = &v11[v19];
  unint64_t v21 = &v12[v19];
  int v22 = v14(&v11[v19], 1LL, v13);
  int v23 = v14(v21, 1LL, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v20, v21, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v20, 0LL, 1LL, v13);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v20, v13);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v20, v21, v13);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v11[v25];
  uint64_t v27 = &v12[v25];
  int v28 = v14(&v11[v25], 1LL, v13);
  int v29 = v14(v27, 1LL, v13);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v26, v27, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v26, 0LL, 1LL, v13);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v26, v13);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v26, v27, v13);
LABEL_19:
  uint64_t v31 = v18[7];
  uint64_t v32 = &v11[v31];
  uint64_t v33 = &v12[v31];
  int v34 = v14(&v11[v31], 1LL, v13);
  int v35 = v14(v33, 1LL, v13);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v32, v33, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v32, 0LL, 1LL, v13);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v32, v13);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v32, v33, v13);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v11[v37];
  uint64_t v39 = &v12[v37];
  int v40 = v14(&v11[v37], 1LL, v13);
  int v41 = v14(v39, 1LL, v13);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v38, v39, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v38, 0LL, 1LL, v13);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v38, v13);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v38, v39, v13);
LABEL_31:
  uint64_t v43 = v18[9];
  uint64_t v44 = &v11[v43];
  uint64_t v45 = &v12[v43];
  int v46 = v14(&v11[v43], 1LL, v13);
  int v47 = v14(v45, 1LL, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v44, v45, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v44, 0LL, 1LL, v13);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v44, v13);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v44, v45, v13);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v11[v49];
  uint64_t v51 = &v12[v49];
  int v52 = v14(&v11[v49], 1LL, v13);
  int v53 = v14(v51, 1LL, v13);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v50, v51, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v50, 0LL, 1LL, v13);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v50, v13);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v50, v51, v13);
LABEL_43:
  uint64_t v55 = v18[11];
  uint64_t v56 = &v11[v55];
  uint64_t v57 = &v12[v55];
  int v58 = v14(&v11[v55], 1LL, v13);
  int v59 = v14(v57, 1LL, v13);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v56, v57, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v56, 0LL, 1LL, v13);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v56, v13);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v56, v57, v13);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v11[v61];
  uint64_t v63 = &v12[v61];
  int v64 = v14(&v11[v61], 1LL, v13);
  int v65 = v14(v63, 1LL, v13);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v62, v63, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v62, 0LL, 1LL, v13);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v62, v13);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v62, v63, v13);
LABEL_55:
  v11[v18[13]] = v12[v18[13]];
  uint64_t v67 = v18[14];
  uint64_t v68 = &v11[v67];
  uint64_t v69 = &v12[v67];
  int v70 = v14(&v11[v67], 1LL, v13);
  int v71 = v14(v69, 1LL, v13);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v68, v69, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v68, 0LL, 1LL, v13);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v68, v13);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v68, v69, v13);
LABEL_61:
  uint64_t v73 = v18[15];
  uint64_t v74 = &v11[v73];
  uint64_t v75 = &v12[v73];
  int v76 = v14(&v11[v73], 1LL, v13);
  int v77 = v14(v75, 1LL, v13);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v74, v75, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v74, 0LL, 1LL, v13);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v74, v13);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v74, v75, v13);
LABEL_67:
  uint64_t v79 = v18[16];
  unint64_t v80 = &v11[v79];
  uint64_t v81 = &v12[v79];
  int v82 = v14(&v11[v79], 1LL, v13);
  int v83 = v14(v81, 1LL, v13);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v80, v81, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v80, 0LL, 1LL, v13);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v80, v13);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v80, v81, v13);
LABEL_73:
  uint64_t v85 = v18[17];
  uint64_t v86 = &v11[v85];
  uint64_t v87 = &v12[v85];
  int v88 = v14(&v11[v85], 1LL, v13);
  int v89 = v14(v87, 1LL, v13);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v86, v87, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v86, 0LL, 1LL, v13);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v86, v13);
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v124 + 24))(v86, v87, v13);
LABEL_79:
  uint64_t v91 = v18[18];
  int64_t v92 = &v11[v91];
  uint64_t v93 = &v12[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)int64_t v92 = v94;
  v11[v18[19]] = v12[v18[19]];
  uint64_t v95 = v18[20];
  int64_t v96 = &v11[v95];
  uint64_t v97 = &v12[v95];
  *(void *)int64_t v96 = *(void *)v97;
  uint64_t v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v122).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v11[v102];
  uint64_t v104 = &v12[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  __n128 v108 = swift_bridgeObjectRelease(v106, v107);
  uint64_t v109 = a3[7];
  uint64_t v110 = (void *)(v123 + v109);
  uint64_t v111 = (char *)a2 + v109;
  int v112 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v14)(v123 + v109, 1LL, v13, v108);
  int v113 = v14(v111, 1LL, v13);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v110, v111, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v110, 0LL, 1LL, v13);
      goto LABEL_85;
    }

    goto LABEL_84;
  }

  if (v113)
  {
    (*(void (**)(void *, uint64_t))(v124 + 8))(v110, v13);
LABEL_84:
    uint64_t v114 = sub_100183098(&qword_1006457E8);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(void *, char *, uint64_t))(v124 + 24))(v110, v111, v13);
LABEL_85:
  uint64_t v115 = a3[8];
  uint64_t v116 = (void *)(v123 + v115);
  uint64_t v117 = (char *)a2 + v115;
  int v118 = v14((char *)(v123 + v115), 1LL, v13);
  int v119 = v14(v117, 1LL, v13);
  if (!v118)
  {
    if (!v119)
    {
      (*(void (**)(void *, char *, uint64_t))(v124 + 24))(v116, v117, v13);
      return v123;
    }

    (*(void (**)(void *, uint64_t))(v124 + 8))(v116, v13);
    goto LABEL_90;
  }

  if (v119)
  {
LABEL_90:
    uint64_t v120 = sub_100183098(&qword_1006457E8);
    memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64LL));
    return v123;
  }

  (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v116, v117, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v116, 0LL, 1LL, v13);
  return v123;
}

uint64_t sub_100309838(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 2sub_10018709C(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  __int128 v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v74 = a1;
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  int v15 = &v7[v14];
  int v16 = &v8[v14];
  if (v11(&v8[v14], 1LL, v9))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0LL, 1LL, v9);
  }

  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1LL, v9))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0LL, 1LL, v9);
  }

  uint64_t v22 = v13[7];
  int v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1LL, v9))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0LL, 1LL, v9);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  int v28 = &v8[v26];
  if (v11(&v8[v26], 1LL, v9))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0LL, 1LL, v9);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1LL, v9))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0LL, 1LL, v9);
  }

  uint64_t v34 = v13[10];
  int v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1LL, v9))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0LL, 1LL, v9);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  int v40 = &v8[v38];
  if (v11(&v8[v38], 1LL, v9))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0LL, 1LL, v9);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1LL, v9))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0LL, 1LL, v9);
  }

  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  int v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1LL, v9))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0LL, 1LL, v9);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  int v52 = &v8[v50];
  if (v11(&v8[v50], 1LL, v9))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0LL, 1LL, v9);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1LL, v9))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0LL, 1LL, v9);
  }

  uint64_t v58 = v13[17];
  int v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1LL, v9))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0LL, 1LL, v9);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  int v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = a3[7];
  uint64_t v66 = (void *)(v74 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  if (v11((char *)(a2 + v65), 1LL, v9))
  {
    uint64_t v68 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0LL, 1LL, v9);
  }

  uint64_t v69 = a3[8];
  int v70 = (void *)(v74 + v69);
  int v71 = (void *)(a2 + v69);
  if (v11((char *)v71, 1LL, v9))
  {
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v70, v71, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v70, 0LL, 1LL, v9);
  }

  return v74;
}

uint64_t sub_100309FAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(const char **)a1;
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease(v6);
  sub_10018709C((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 2sub_10018709C(v0 + 4) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[6];
  __int128 v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v120 = *(void *)(v10 - 8);
  __n128 v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v120 + 48);
  int v12 = v11(v8, 1LL, v10);
  int v13 = v11(v9, 1LL, v10);
  uint64_t v118 = a1;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v8, v10);
LABEL_6:
    uint64_t v14 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v8, v9, v10);
LABEL_7:
  int v15 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  int v19 = v11(&v8[v16], 1LL, v10);
  int v20 = v11(v18, 1LL, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v17, v18, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v17, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v17, v10);
LABEL_12:
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v17, v18, v10);
LABEL_13:
  uint64_t v22 = v15[6];
  int v23 = &v8[v22];
  uint64_t v24 = &v9[v22];
  int v25 = v11(&v8[v22], 1LL, v10);
  int v26 = v11(v24, 1LL, v10);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v23, v24, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v23, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v23, v10);
LABEL_18:
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v23, v24, v10);
LABEL_19:
  uint64_t v28 = v15[7];
  uint64_t v29 = &v8[v28];
  uint64_t v30 = &v9[v28];
  int v31 = v11(&v8[v28], 1LL, v10);
  int v32 = v11(v30, 1LL, v10);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v29, v30, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v29, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v29, v10);
LABEL_24:
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v29, v30, v10);
LABEL_25:
  uint64_t v34 = v15[8];
  int v35 = &v8[v34];
  uint64_t v36 = &v9[v34];
  int v37 = v11(&v8[v34], 1LL, v10);
  int v38 = v11(v36, 1LL, v10);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v35, v36, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v35, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v35, v10);
LABEL_30:
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v35, v36, v10);
LABEL_31:
  uint64_t v40 = v15[9];
  uint64_t v41 = &v8[v40];
  uint64_t v42 = &v9[v40];
  int v43 = v11(&v8[v40], 1LL, v10);
  int v44 = v11(v42, 1LL, v10);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v41, v42, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v41, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v44)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v41, v10);
LABEL_36:
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v41, v42, v10);
LABEL_37:
  uint64_t v46 = v15[10];
  int v47 = &v8[v46];
  uint64_t v48 = &v9[v46];
  int v49 = v11(&v8[v46], 1LL, v10);
  int v50 = v11(v48, 1LL, v10);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v47, v48, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v47, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v50)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v47, v10);
LABEL_42:
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v47, v48, v10);
LABEL_43:
  uint64_t v52 = v15[11];
  uint64_t v53 = &v8[v52];
  uint64_t v54 = &v9[v52];
  int v55 = v11(&v8[v52], 1LL, v10);
  int v56 = v11(v54, 1LL, v10);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v53, v54, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v53, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v56)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v53, v10);
LABEL_48:
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v53, v54, v10);
LABEL_49:
  uint64_t v58 = v15[12];
  int v59 = &v8[v58];
  uint64_t v60 = &v9[v58];
  int v61 = v11(&v8[v58], 1LL, v10);
  int v62 = v11(v60, 1LL, v10);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v59, v60, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v59, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v59, v10);
LABEL_54:
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v59, v60, v10);
LABEL_55:
  v8[v15[13]] = v9[v15[13]];
  uint64_t v64 = v15[14];
  uint64_t v65 = &v8[v64];
  uint64_t v66 = &v9[v64];
  int v67 = v11(&v8[v64], 1LL, v10);
  int v68 = v11(v66, 1LL, v10);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v65, v66, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v65, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v65, v10);
LABEL_60:
    uint64_t v69 = sub_100183098(&qword_1006457E8);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v65, v66, v10);
LABEL_61:
  uint64_t v70 = v15[15];
  int v71 = &v8[v70];
  uint64_t v72 = &v9[v70];
  int v73 = v11(&v8[v70], 1LL, v10);
  int v74 = v11(v72, 1LL, v10);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v71, v72, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v71, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v71, v10);
LABEL_66:
    uint64_t v75 = sub_100183098(&qword_1006457E8);
    memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v71, v72, v10);
LABEL_67:
  uint64_t v76 = v15[16];
  int v77 = &v8[v76];
  uint64_t v78 = &v9[v76];
  int v79 = v11(&v8[v76], 1LL, v10);
  int v80 = v11(v78, 1LL, v10);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v77, v78, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v77, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v80)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v77, v10);
LABEL_72:
    uint64_t v81 = sub_100183098(&qword_1006457E8);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v77, v78, v10);
LABEL_73:
  uint64_t v82 = v15[17];
  int v83 = &v8[v82];
  uint64_t v84 = &v9[v82];
  int v85 = v11(&v8[v82], 1LL, v10);
  int v86 = v11(v84, 1LL, v10);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v83, v84, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v83, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v86)
  {
    (*(void (**)(char *, uint64_t))(v120 + 8))(v83, v10);
LABEL_78:
    uint64_t v87 = sub_100183098(&qword_1006457E8);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v120 + 40))(v83, v84, v10);
LABEL_79:
  uint64_t v88 = v15[18];
  int v89 = &v8[v88];
  uint64_t v90 = &v9[v88];
  *(_DWORD *)int v89 = *(_DWORD *)v90;
  v89[4] = v90[4];
  v8[v15[19]] = v9[v15[19]];
  uint64_t v91 = v15[20];
  int64_t v92 = &v8[v91];
  uint64_t v93 = &v9[v91];
  uint64_t v95 = *(void *)v93;
  uint64_t v94 = *((void *)v93 + 1);
  int64_t v96 = (const char *)*((void *)v92 + 1);
  *(void *)int64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  *(void *)&double v97 = swift_bridgeObjectRelease(v96, v118).n128_u64[0];
  uint64_t v98 = v15[21];
  uint64_t v99 = &v8[v98];
  double v100 = &v9[v98];
  uint64_t v102 = *(void *)v100;
  uint64_t v101 = *((void *)v100 + 1);
  uint64_t v103 = (const char *)*((void *)v99 + 1);
  *(void *)uint64_t v99 = v102;
  *((void *)v99 + 1) = v101;
  __n128 v104 = swift_bridgeObjectRelease(v103, v97);
  uint64_t v105 = a3[7];
  uint64_t v106 = (void *)(v119 + v105);
  double v107 = (char *)(a2 + v105);
  int v108 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v11)(v119 + v105, 1LL, v10, v104);
  int v109 = v11(v107, 1LL, v10);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(void *, char *, uint64_t))(v120 + 32))(v106, v107, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v106, 0LL, 1LL, v10);
      goto LABEL_85;
    }

    goto LABEL_84;
  }

  if (v109)
  {
    (*(void (**)(void *, uint64_t))(v120 + 8))(v106, v10);
LABEL_84:
    uint64_t v110 = sub_100183098(&qword_1006457E8);
    memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(void *, char *, uint64_t))(v120 + 40))(v106, v107, v10);
LABEL_85:
  uint64_t v111 = a3[8];
  int v112 = (void *)(v119 + v111);
  int v113 = (char *)(a2 + v111);
  int v114 = v11((char *)(v119 + v111), 1LL, v10);
  int v115 = v11(v113, 1LL, v10);
  if (!v114)
  {
    if (!v115)
    {
      (*(void (**)(void *, char *, uint64_t))(v120 + 40))(v112, v113, v10);
      return v119;
    }

    (*(void (**)(void *, uint64_t))(v120 + 8))(v112, v10);
    goto LABEL_90;
  }

  if (v115)
  {
LABEL_90:
    uint64_t v116 = sub_100183098(&qword_1006457E8);
    memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64LL));
    return v119;
  }

  (*(void (**)(void *, char *, uint64_t))(v120 + 32))(v112, v113, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v112, 0LL, 1LL, v10);
  return v119;
}

uint64_t sub_10030AC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10030AC10);
}

uint64_t sub_10030AC10(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(vsub_10018709C(v0 + 4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }

    else
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 28);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_10030ACB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030ACC0);
}

char *sub_10030ACC0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  id v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }

    else
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 28);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

uint64_t _s14MacUnlockPhoneV18InitialLockContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E410, (uint64_t)&_s14MacUnlockPhoneV18InitialLockContextVMn);
}

void sub_10030AD74(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = "(";
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v6[2] = *(void *)(v2 - 8) + 64LL;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      uint64_t v7 = *(void *)(v4 - 8) + 64LL;
      uint64_t v8 = v7;
      swift_initStructMetadata(a1, 256LL, 5LL, v6, a1 + 16);
    }
  }

uint64_t sub_10030AE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10030AE1C);
}

uint64_t sub_10030AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_10030AE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030AEA8);
}

uint64_t sub_10030AEA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 2sub_10018709C(v0 + 4) = (a2 - 1);
  return result;
}

uint64_t _s14MacUnlockPhoneV4FlowVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E4B0, (uint64_t)&_s14MacUnlockPhoneV4FlowVMn);
}

uint64_t sub_10030AF38(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    void v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

const char *sub_10030AFB8(const char **a1, const char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v16 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date(0LL);
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    __n128 v14 = swift_bridgeObjectRetain(v4);
    uint64_t v106 = a2;
    if (v13(v10, 1LL, v11, v14))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
    }

    uint64_t v17 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v18 = v17[5];
    int v19 = &v9[v18];
    int v20 = &v10[v18];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v18], 1LL, v11))
    {
      uint64_t v21 = sub_100183098(&qword_1006457E8);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v20, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v19, 0LL, 1LL, v11);
    }

    uint64_t v22 = v17[6];
    int v23 = &v9[v22];
    uint64_t v24 = &v10[v22];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v22], 1LL, v11))
    {
      uint64_t v25 = sub_100183098(&qword_1006457E8);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v23, v24, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v23, 0LL, 1LL, v11);
    }

    uint64_t v26 = v17[7];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v26], 1LL, v11))
    {
      uint64_t v29 = sub_100183098(&qword_1006457E8);
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v27, v28, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0LL, 1LL, v11);
    }

    uint64_t v30 = v17[8];
    int v31 = &v9[v30];
    int v32 = &v10[v30];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v30], 1LL, v11))
    {
      uint64_t v33 = sub_100183098(&qword_1006457E8);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v31, v32, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v31, 0LL, 1LL, v11);
    }

    uint64_t v34 = v17[9];
    int v35 = &v9[v34];
    uint64_t v36 = &v10[v34];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v34], 1LL, v11))
    {
      uint64_t v37 = sub_100183098(&qword_1006457E8);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v35, v36, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v35, 0LL, 1LL, v11);
    }

    uint64_t v38 = v17[10];
    uint64_t v39 = &v9[v38];
    uint64_t v40 = &v10[v38];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v38], 1LL, v11))
    {
      uint64_t v41 = sub_100183098(&qword_1006457E8);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v39, v40, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v39, 0LL, 1LL, v11);
    }

    uint64_t v42 = v17[11];
    int v43 = &v9[v42];
    int v44 = &v10[v42];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v42], 1LL, v11))
    {
      uint64_t v45 = sub_100183098(&qword_1006457E8);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v43, v44, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v43, 0LL, 1LL, v11);
    }

    uint64_t v46 = v17[12];
    int v47 = &v9[v46];
    uint64_t v48 = &v10[v46];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v46], 1LL, v11))
    {
      uint64_t v49 = sub_100183098(&qword_1006457E8);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v47, v48, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v47, 0LL, 1LL, v11);
    }

    v9[v17[13]] = v10[v17[13]];
    uint64_t v50 = v17[14];
    uint64_t v51 = &v9[v50];
    uint64_t v52 = &v10[v50];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v50], 1LL, v11))
    {
      uint64_t v53 = sub_100183098(&qword_1006457E8);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v51, v52, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v51, 0LL, 1LL, v11);
    }

    uint64_t v54 = v17[15];
    int v55 = &v9[v54];
    int v56 = &v10[v54];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v54], 1LL, v11))
    {
      uint64_t v57 = sub_100183098(&qword_1006457E8);
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v55, v56, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v55, 0LL, 1LL, v11);
    }

    uint64_t v58 = v17[16];
    int v59 = &v9[v58];
    uint64_t v60 = &v10[v58];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v58], 1LL, v11))
    {
      uint64_t v61 = sub_100183098(&qword_1006457E8);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v59, v60, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v59, 0LL, 1LL, v11);
    }

    uint64_t v62 = v17[17];
    uint64_t v63 = &v9[v62];
    uint64_t v64 = &v10[v62];
    uint64_t v104 = v12;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)(&v10[v62], 1LL, v11))
    {
      uint64_t v65 = sub_100183098(&qword_1006457E8);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v63, v64, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v63, 0LL, 1LL, v11);
    }

    uint64_t v66 = v17[18];
    int v67 = &v9[v66];
    int v68 = &v10[v66];
    *(_DWORD *)int v67 = *(_DWORD *)v68;
    v67[4] = v68[4];
    v9[v17[19]] = v10[v17[19]];
    uint64_t v69 = v17[20];
    uint64_t v70 = &v9[v69];
    int v71 = &v10[v69];
    uint64_t v72 = (const char *)*((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v72;
    uint64_t v73 = v17[21];
    int v74 = &v9[v73];
    uint64_t v75 = &v10[v73];
    uint64_t v76 = (const char *)*((void *)v75 + 1);
    *(void *)int v74 = *(void *)v75;
    *((void *)v74 + 1) = v76;
    uint64_t v77 = a3[6];
    uint64_t v78 = (char *)a1 + v77;
    uint64_t v16 = (const char *)a1;
    int v79 = (char *)v106 + v77;
    __int128 v80 = *(_OWORD *)((char *)v106 + v77 + 24);
    *(_OWORD *)(v78 + 2sub_10018709C(v0 + 4) = v80;
    uint64_t v81 = v80;
    uint64_t v82 = **(void (***)(char *, char *, uint64_t, __n128))(v80 - 8);
    *(void *)&double v83 = swift_bridgeObjectRetain(v72, v104).n128_u64[0];
    __n128 v84 = swift_bridgeObjectRetain(v76, v83);
    v82(v78, v79, v81, v84);
    uint64_t v85 = a3[7];
    int v86 = (char *)a1 + v85;
    uint64_t v87 = (char *)v106 + v85;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)v106 + v85, 1LL, v11))
    {
      uint64_t v88 = sub_100183098(&qword_1006457E8);
      memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64LL));
      uint64_t v89 = v105;
    }

    else
    {
      uint64_t v89 = v105;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v86, v87, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v86, 0LL, 1LL, v11);
    }

    uint64_t v90 = a3[8];
    uint64_t v91 = (char *)a1 + v90;
    int64_t v92 = (char *)v106 + v90;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v13)((char *)v106 + v90, 1LL, v11))
    {
      uint64_t v93 = sub_100183098(&qword_1006457E8);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v92, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v91, 0LL, 1LL, v11);
    }

    uint64_t v94 = a3[9];
    uint64_t v95 = (char *)a1 + v94;
    int64_t v96 = (char *)v106 + v94;
    unint64_t v97 = *((void *)v96 + 1);
    if (v97 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
    }

    else
    {
      uint64_t v98 = *(void *)v96;
      sub_10019BA8C(*(void *)v96, *((void *)v96 + 1));
      *(void *)uint64_t v95 = v98;
      *((void *)v95 + 1) = v97;
    }

    uint64_t v99 = a3[10];
    uint64_t v100 = a3[11];
    uint64_t v101 = *(char **)((char *)v106 + v99);
    *(const char **)((char *)a1 + v99) = v101;
    *((_BYTE *)a1 + v100) = *((_BYTE *)v106 + v100);
    uint64_t v102 = v101;
  }

  return v16;
}

void sub_10030B800(const char **a1, int *a2)
{
  uint64_t v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v9 = &v4[v8[5]];
  if (!v7(v9, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  uint64_t v10 = &v4[v8[6]];
  if (!v7(v10, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
  }
  uint64_t v11 = &v4[v8[7]];
  if (!v7(v11, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v12 = &v4[v8[8]];
  if (!v7(v12, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  int v13 = &v4[v8[9]];
  if (!v7(v13, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  }
  __n128 v14 = &v4[v8[10]];
  if (!v7(v14, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v15 = &v4[v8[11]];
  if (!v7(v15, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v16 = &v4[v8[12]];
  if (!v7(v16, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  uint64_t v17 = &v4[v8[14]];
  if (!v7(v17, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  }
  uint64_t v18 = &v4[v8[15]];
  if (!v7(v18, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v18, v5);
  }
  int v19 = &v4[v8[16]];
  if (!v7(v19, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  }
  int v20 = &v4[v8[17]];
  if (!v7(v20, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v20, v5);
  }
  *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)&v4[v8[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v4[v8[21] + 8], v21);
  sub_10018709C((const char **)((char *)a1 + a2[6]));
  uint64_t v22 = (char *)a1 + a2[7];
  if (!v7(v22, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v22, v5);
  }
  int v23 = (char *)a1 + a2[8];
  if (!v7(v23, 1LL, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v5);
  }
  uint64_t v24 = (uint64_t *)((char *)a1 + a2[9]);
  unint64_t v25 = v24[1];
  if (v25 >> 60 != 15) {
    sub_100189B20(*v24, v25);
  }
}

const char **sub_10030BB48(const char **a1, const char **a2, int *a3)
{
  uint64_t v5 = *a2;
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48);
  __n128 v12 = swift_bridgeObjectRetain(v5);
  if (v11(v8, 1LL, v9, v12))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  __n128 v14 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v15 = v14[5];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v15], 1LL, v9))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0LL, 1LL, v9);
  }

  uint64_t v19 = v14[6];
  int v20 = &v7[v19];
  double v21 = &v8[v19];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v19], 1LL, v9))
  {
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v21, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0LL, 1LL, v9);
  }

  uint64_t v23 = v14[7];
  uint64_t v24 = &v7[v23];
  unint64_t v25 = &v8[v23];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v23], 1LL, v9))
  {
    uint64_t v26 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v24, v25, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v24, 0LL, 1LL, v9);
  }

  uint64_t v27 = v14[8];
  uint64_t v28 = &v7[v27];
  uint64_t v29 = &v8[v27];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v27], 1LL, v9))
  {
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v28, 0LL, 1LL, v9);
  }

  uint64_t v31 = v14[9];
  int v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v31], 1LL, v9))
  {
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v32, v33, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v32, 0LL, 1LL, v9);
  }

  uint64_t v35 = v14[10];
  uint64_t v36 = &v7[v35];
  uint64_t v37 = &v8[v35];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v35], 1LL, v9))
  {
    uint64_t v38 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v36, v37, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v36, 0LL, 1LL, v9);
  }

  uint64_t v39 = v14[11];
  uint64_t v40 = &v7[v39];
  uint64_t v41 = &v8[v39];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v39], 1LL, v9))
  {
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v40, 0LL, 1LL, v9);
  }

  uint64_t v43 = v14[12];
  int v44 = &v7[v43];
  uint64_t v45 = &v8[v43];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v43], 1LL, v9))
  {
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v44, v45, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v44, 0LL, 1LL, v9);
  }

  v7[v14[13]] = v8[v14[13]];
  uint64_t v47 = v14[14];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v47], 1LL, v9))
  {
    uint64_t v50 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v49, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v48, 0LL, 1LL, v9);
  }

  uint64_t v51 = v14[15];
  uint64_t v52 = &v7[v51];
  uint64_t v53 = &v8[v51];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v51], 1LL, v9))
  {
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v52, 0LL, 1LL, v9);
  }

  uint64_t v55 = v14[16];
  int v56 = &v7[v55];
  uint64_t v57 = &v8[v55];
  uint64_t v105 = v10;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v55], 1LL, v9))
  {
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v56, 0LL, 1LL, v9);
  }

  int v59 = a1;
  uint64_t v60 = v14[17];
  uint64_t v61 = &v7[v60];
  uint64_t v62 = &v8[v60];
  uint64_t v63 = a2;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)(&v8[v60], 1LL, v9))
  {
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v61, v62, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v61, 0LL, 1LL, v9);
  }

  uint64_t v65 = v14[18];
  uint64_t v66 = &v7[v65];
  int v67 = &v8[v65];
  *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
  v66[4] = v67[4];
  v7[v14[19]] = v8[v14[19]];
  uint64_t v68 = v14[20];
  uint64_t v69 = &v7[v68];
  uint64_t v70 = &v8[v68];
  int v71 = (const char *)*((void *)v70 + 1);
  *(void *)uint64_t v69 = *(void *)v70;
  *((void *)v69 + 1) = v71;
  uint64_t v72 = v14[21];
  uint64_t v73 = &v7[v72];
  int v74 = &v8[v72];
  uint64_t v75 = (const char *)*((void *)v74 + 1);
  *(void *)uint64_t v73 = *(void *)v74;
  *((void *)v73 + 1) = v75;
  uint64_t v76 = a3;
  uint64_t v77 = a3[6];
  uint64_t v78 = (char *)v59 + v77;
  int v79 = (char *)v63 + v77;
  __int128 v80 = *(_OWORD *)((char *)v63 + v77 + 24);
  *(_OWORD *)((char *)v59 + v77 + 2sub_10018709C(v0 + 4) = v80;
  uint64_t v81 = v80;
  uint64_t v82 = **(void (***)(char *, char *, uint64_t, __n128))(v80 - 8);
  *(void *)&double v83 = swift_bridgeObjectRetain(v71, a3).n128_u64[0];
  __n128 v84 = swift_bridgeObjectRetain(v75, v83);
  v82(v78, v79, v81, v84);
  uint64_t v85 = v76[7];
  int v86 = (char *)v59 + v85;
  uint64_t v87 = (char *)v63 + v85;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)((char *)v63 + v85, 1LL, v9))
  {
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64LL));
    uint64_t v89 = v105;
  }

  else
  {
    uint64_t v89 = v105;
    (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v86, v87, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v86, 0LL, 1LL, v9);
  }

  uint64_t v90 = v76[8];
  uint64_t v91 = (char *)v59 + v90;
  int64_t v92 = (char *)v63 + v90;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11)((char *)v63 + v90, 1LL, v9))
  {
    uint64_t v93 = sub_100183098(&qword_1006457E8);
    memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v92, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v91, 0LL, 1LL, v9);
  }

  uint64_t v94 = v76[9];
  uint64_t v95 = (char *)v59 + v94;
  int64_t v96 = (char *)v63 + v94;
  unint64_t v97 = *((void *)v96 + 1);
  if (v97 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
  }

  else
  {
    uint64_t v98 = *(void *)v96;
    sub_10019BA8C(*(void *)v96, *((void *)v96 + 1));
    *(void *)uint64_t v95 = v98;
    *((void *)v95 + 1) = v97;
  }

  uint64_t v99 = v76[10];
  uint64_t v100 = v76[11];
  uint64_t v101 = *(char **)((char *)v63 + v99);
  *(const char **)((char *)v59 + v99) = v101;
  *((_BYTE *)v59 + v100) = *((_BYTE *)v63 + v100);
  uint64_t v102 = v101;
  return v59;
}

const char **sub_10030C368(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  *(void *)&double v8 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v7, v8);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  uint64_t v133 = a3;
  uint64_t v135 = a2;
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v19 = v18[5];
  int v20 = &v10[v19];
  double v21 = &v11[v19];
  int v22 = v14(&v10[v19], 1LL, v12);
  int v23 = v14(v21, 1LL, v12);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v20, v21, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v20, 0LL, 1LL, v12);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);
LABEL_12:
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v20, v21, v12);
LABEL_13:
  uint64_t v25 = v18[6];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  int v28 = v14(&v10[v25], 1LL, v12);
  int v29 = v14(v27, 1LL, v12);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v26, v27, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v26, 0LL, 1LL, v12);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
LABEL_18:
    uint64_t v30 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v26, v27, v12);
LABEL_19:
  uint64_t v31 = v18[7];
  int v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  int v34 = v14(&v10[v31], 1LL, v12);
  int v35 = v14(v33, 1LL, v12);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v33, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v32, 0LL, 1LL, v12);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
LABEL_24:
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v32, v33, v12);
LABEL_25:
  uint64_t v37 = v18[8];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  int v40 = v14(&v10[v37], 1LL, v12);
  int v41 = v14(v39, 1LL, v12);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v38, v39, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v38, 0LL, 1LL, v12);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
LABEL_30:
    uint64_t v42 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v38, v39, v12);
LABEL_31:
  uint64_t v43 = v18[9];
  int v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  int v46 = v14(&v10[v43], 1LL, v12);
  int v47 = v14(v45, 1LL, v12);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v44, v45, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v44, 0LL, 1LL, v12);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v44, v12);
LABEL_36:
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v44, v45, v12);
LABEL_37:
  uint64_t v49 = v18[10];
  uint64_t v50 = &v10[v49];
  uint64_t v51 = &v11[v49];
  int v52 = v14(&v10[v49], 1LL, v12);
  int v53 = v14(v51, 1LL, v12);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v51, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v50, 0LL, 1LL, v12);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
LABEL_42:
    uint64_t v54 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v50, v51, v12);
LABEL_43:
  uint64_t v55 = v18[11];
  int v56 = &v10[v55];
  uint64_t v57 = &v11[v55];
  int v58 = v14(&v10[v55], 1LL, v12);
  int v59 = v14(v57, 1LL, v12);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v56, v57, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v56, 0LL, 1LL, v12);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v56, v12);
LABEL_48:
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v56, v57, v12);
LABEL_49:
  uint64_t v61 = v18[12];
  uint64_t v62 = &v10[v61];
  uint64_t v63 = &v11[v61];
  int v64 = v14(&v10[v61], 1LL, v12);
  int v65 = v14(v63, 1LL, v12);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v62, v63, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v62, 0LL, 1LL, v12);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v62, v12);
LABEL_54:
    uint64_t v66 = sub_100183098(&qword_1006457E8);
    memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v62, v63, v12);
LABEL_55:
  v10[v18[13]] = v11[v18[13]];
  uint64_t v67 = v18[14];
  uint64_t v68 = &v10[v67];
  uint64_t v69 = &v11[v67];
  int v70 = v14(&v10[v67], 1LL, v12);
  int v71 = v14(v69, 1LL, v12);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v68, v69, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v68, 0LL, 1LL, v12);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v68, v12);
LABEL_60:
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v68, v69, v12);
LABEL_61:
  uint64_t v73 = v18[15];
  int v74 = &v10[v73];
  uint64_t v75 = &v11[v73];
  int v76 = v14(&v10[v73], 1LL, v12);
  int v77 = v14(v75, 1LL, v12);
  if (v76)
  {
    if (!v77)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v74, v75, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v74, 0LL, 1LL, v12);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v77)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v74, v12);
LABEL_66:
    uint64_t v78 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v74, v75, v12);
LABEL_67:
  uint64_t v79 = v18[16];
  __int128 v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  int v82 = v14(&v10[v79], 1LL, v12);
  int v83 = v14(v81, 1LL, v12);
  if (v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v80, v81, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v80, 0LL, 1LL, v12);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v83)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v80, v12);
LABEL_72:
    uint64_t v84 = sub_100183098(&qword_1006457E8);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v80, v81, v12);
LABEL_73:
  uint64_t v85 = v18[17];
  int v86 = &v10[v85];
  uint64_t v87 = &v11[v85];
  int v88 = v14(&v10[v85], 1LL, v12);
  int v89 = v14(v87, 1LL, v12);
  if (v88)
  {
    if (!v89)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v86, v87, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v86, 0LL, 1LL, v12);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v89)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v86, v12);
LABEL_78:
    uint64_t v90 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v86, v87, v12);
LABEL_79:
  uint64_t v91 = v18[18];
  int64_t v92 = &v10[v91];
  uint64_t v93 = &v11[v91];
  int v94 = *(_DWORD *)v93;
  v92[4] = v93[4];
  *(_DWORD *)int64_t v92 = v94;
  v10[v18[19]] = v11[v18[19]];
  uint64_t v95 = v18[20];
  int64_t v96 = &v10[v95];
  unint64_t v97 = &v11[v95];
  *(void *)int64_t v96 = *(void *)v97;
  uint64_t v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v133, v135).n128_u64[0];
  *(void *)&double v101 = swift_bridgeObjectRelease(v99, v100).n128_u64[0];
  uint64_t v102 = v18[21];
  uint64_t v103 = &v10[v102];
  uint64_t v104 = &v11[v102];
  *(void *)uint64_t v103 = *(void *)v104;
  uint64_t v105 = (const char *)*((void *)v104 + 1);
  uint64_t v106 = (const char *)*((void *)v103 + 1);
  *((void *)v103 + 1) = v105;
  *(void *)&double v107 = swift_bridgeObjectRetain(v105, v101).n128_u64[0];
  swift_bridgeObjectRelease(v106, v107);
  sub_10019DB24((const char **)((char *)a1 + v134[6]), (void *)(v136 + v134[6]));
  uint64_t v108 = v134[7];
  int v109 = (char *)a1 + v108;
  uint64_t v110 = (char *)(v136 + v108);
  int v111 = v14((char *)a1 + v108, 1LL, v12);
  int v112 = v14(v110, 1LL, v12);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v109, v110, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v109, 0LL, 1LL, v12);
      goto LABEL_85;
    }

    goto LABEL_84;
  }

  if (v112)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v109, v12);
LABEL_84:
    uint64_t v113 = sub_100183098(&qword_1006457E8);
    memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v109, v110, v12);
LABEL_85:
  uint64_t v114 = v134[8];
  int v115 = (char *)a1 + v114;
  uint64_t v116 = (char *)(v136 + v114);
  int v117 = v14((char *)a1 + v114, 1LL, v12);
  int v118 = v14(v116, 1LL, v12);
  if (v117)
  {
    if (!v118)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v115, v116, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v115, 0LL, 1LL, v12);
      goto LABEL_91;
    }

    goto LABEL_90;
  }

  if (v118)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v115, v12);
LABEL_90:
    uint64_t v119 = sub_100183098(&qword_1006457E8);
    memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64LL));
    goto LABEL_91;
  }

  (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v115, v116, v12);
LABEL_91:
  uint64_t v120 = v134[9];
  double v121 = (uint64_t *)((char *)a1 + v120);
  uint64_t v122 = (uint64_t *)(v136 + v120);
  unint64_t v123 = *(void *)(v136 + v120 + 8);
  if (*(unint64_t *)((char *)a1 + v120 + 8) >> 60 != 15)
  {
    if (v123 >> 60 != 15)
    {
      uint64_t v125 = *v122;
      sub_10019BA8C(*v122, v123);
      uint64_t v126 = *v121;
      unint64_t v127 = v121[1];
      *double v121 = v125;
      v121[1] = v123;
      sub_100189B20(v126, v127);
      goto LABEL_98;
    }

    sub_10019DC8C((uint64_t)v121);
    goto LABEL_96;
  }

  if (v123 >> 60 == 15)
  {
LABEL_96:
    *(_OWORD *)double v121 = *(_OWORD *)v122;
    goto LABEL_98;
  }

  uint64_t v124 = *v122;
  sub_10019BA8C(*v122, v123);
  *double v121 = v124;
  v121[1] = v123;
LABEL_98:
  uint64_t v128 = v134[10];
  Swift::Int v129 = *(void **)((char *)a1 + v128);
  Swift::Int v130 = *(char **)(v136 + v128);
  *(const char **)((char *)a1 + v128) = v130;
  uint64_t v131 = v130;

  *((_BYTE *)a1 + v134[11]) = *(_BYTE *)(v136 + v134[11]);
  return a1;
}

void *sub_10030CFC4(void *a1, char *a2, int *a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  double v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v79 = a3;
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  int v15 = &v7[v14];
  int v16 = &v8[v14];
  if (v11(&v8[v14], 1LL, v9))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0LL, 1LL, v9);
  }

  uint64_t v18 = v13[6];
  uint64_t v19 = &v7[v18];
  int v20 = &v8[v18];
  if (v11(&v8[v18], 1LL, v9))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0LL, 1LL, v9);
  }

  uint64_t v22 = v13[7];
  int v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  if (v11(&v8[v22], 1LL, v9))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0LL, 1LL, v9);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  int v28 = &v8[v26];
  if (v11(&v8[v26], 1LL, v9))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0LL, 1LL, v9);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  int v32 = &v8[v30];
  if (v11(&v8[v30], 1LL, v9))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0LL, 1LL, v9);
  }

  uint64_t v34 = v13[10];
  int v35 = &v7[v34];
  uint64_t v36 = &v8[v34];
  if (v11(&v8[v34], 1LL, v9))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0LL, 1LL, v9);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  int v40 = &v8[v38];
  if (v11(&v8[v38], 1LL, v9))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0LL, 1LL, v9);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  int v44 = &v8[v42];
  if (v11(&v8[v42], 1LL, v9))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0LL, 1LL, v9);
  }

  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  int v47 = &v7[v46];
  uint64_t v48 = &v8[v46];
  if (v11(&v8[v46], 1LL, v9))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0LL, 1LL, v9);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  int v52 = &v8[v50];
  if (v11(&v8[v50], 1LL, v9))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0LL, 1LL, v9);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  int v56 = &v8[v54];
  if (v11(&v8[v54], 1LL, v9))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0LL, 1LL, v9);
  }

  uint64_t v58 = v13[17];
  int v59 = &v7[v58];
  uint64_t v60 = &v8[v58];
  if (v11(&v8[v58], 1LL, v9))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0LL, 1LL, v9);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  int v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v79[6];
  uint64_t v66 = v79[7];
  uint64_t v67 = (char *)a1 + v65;
  uint64_t v68 = &a2[v65];
  __int128 v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((void *)v67 + sub_10018709C(v0 + 4) = *((void *)v68 + 4);
  int v70 = (char *)a1 + v66;
  int v71 = &a2[v66];
  if (v11(&a2[v66], 1LL, v9))
  {
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v70, v71, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v70, 0LL, 1LL, v9);
  }

  uint64_t v73 = v79[8];
  int v74 = (char *)a1 + v73;
  uint64_t v75 = &a2[v73];
  if (v11(&a2[v73], 1LL, v9))
  {
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v74, v75, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v74, 0LL, 1LL, v9);
  }

  uint64_t v77 = v79[10];
  *(_OWORD *)((char *)a1 + v79[9]) = *(_OWORD *)&a2[v79[9]];
  *(void *)((char *)a1 + v77) = *(void *)&a2[v77];
  *((_BYTE *)a1 + v79[11]) = a2[v79[11]];
  return a1;
}

const char **sub_10030D758(const char **a1, const char **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  double v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  uint64_t v130 = a3;
  uint64_t v132 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  int v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  uint64_t v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  uint64_t v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  uint64_t v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  uint64_t v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  uint64_t v93 = &v8[v92];
  int v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  unint64_t v97 = (const char *)*((void *)v93 + 1);
  *(void *)uint64_t v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v130, v132).n128_u64[0];
  uint64_t v99 = v16[21];
  double v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  uint64_t v104 = (const char *)*((void *)v100 + 1);
  *(void *)double v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = v131[6];
  uint64_t v106 = (char *)a1 + v105;
  uint64_t v107 = v133 + v105;
  sub_10018709C((const char **)((char *)a1 + v105));
  __int128 v108 = *(_OWORD *)(v107 + 16);
  *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
  *((_OWORD *)v106 + 1) = v108;
  *((void *)v106 + sub_10018709C(v0 + 4) = *(void *)(v107 + 32);
  uint64_t v109 = v131[7];
  uint64_t v110 = (char *)a1 + v109;
  int v111 = (char *)(v133 + v109);
  int v112 = v12((char *)a1 + v109, 1LL, v10);
  int v113 = v12(v111, 1LL, v10);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v110, v111, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v110, 0LL, 1LL, v10);
      goto LABEL_85;
    }

    goto LABEL_84;
  }

  if (v113)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v110, v10);
LABEL_84:
    uint64_t v114 = sub_100183098(&qword_1006457E8);
    memcpy(v110, v111, *(void *)(*(void *)(v114 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v110, v111, v10);
LABEL_85:
  uint64_t v115 = v131[8];
  uint64_t v116 = (char *)a1 + v115;
  int v117 = (char *)(v133 + v115);
  int v118 = v12((char *)a1 + v115, 1LL, v10);
  int v119 = v12(v117, 1LL, v10);
  if (v118)
  {
    if (!v119)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v116, v117, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v116, 0LL, 1LL, v10);
      goto LABEL_91;
    }

    goto LABEL_90;
  }

  if (v119)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v116, v10);
LABEL_90:
    uint64_t v120 = sub_100183098(&qword_1006457E8);
    memcpy(v116, v117, *(void *)(*(void *)(v120 - 8) + 64LL));
    goto LABEL_91;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v116, v117, v10);
LABEL_91:
  uint64_t v121 = v131[9];
  uint64_t v122 = (uint64_t *)((char *)a1 + v121);
  unint64_t v123 = (uint64_t *)(v133 + v121);
  unint64_t v124 = *(unint64_t *)((char *)a1 + v121 + 8);
  if (v124 >> 60 != 15)
  {
    unint64_t v125 = v123[1];
    if (v125 >> 60 != 15)
    {
      uint64_t v126 = *v122;
      *uint64_t v122 = *v123;
      v122[1] = v125;
      sub_100189B20(v126, v124);
      goto LABEL_96;
    }

    sub_10019DC8C((uint64_t)v122);
  }

  *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
LABEL_96:
  uint64_t v127 = v131[10];
  uint64_t v128 = *(void **)((char *)a1 + v127);
  *(const char **)((char *)a1 + v127) = *(const char **)(v133 + v127);

  *((_BYTE *)a1 + v131[11]) = *(_BYTE *)(v133 + v131[11]);
  return a1;
}

uint64_t sub_10030E36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10030E378);
}

uint64_t sub_10030E378(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(vsub_10018709C(v0 + 4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 28);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_10030E41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10030E428);
}

char *sub_10030E428(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 28);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

uint64_t _s14MacUnlockPhoneV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E548, (uint64_t)&_s14MacUnlockPhoneV17InitialKeyContextVMn);
}

void sub_10030E4DC(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    v6[2] = "(";
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      uint64_t v7 = *(void *)(v4 - 8) + 64LL;
      uint64_t v8 = v7;
      uint64_t v9 = &unk_1004D50E8;
      uint64_t v10 = &unk_1004D5100;
      uint64_t v11 = &unk_1004D5118;
      swift_initStructMetadata(a1, 256LL, 8LL, v6, a1 + 16);
    }
  }

uint64_t sub_10030E59C(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_10030777C);
}

id sub_10030E5B8()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV20HandleRequestContextVMa(0LL) + 44);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_10030E624(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v5 = type metadata accessor for Date(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = sub_100183098(&qword_1006457E0);
  uint64_t v12 = swift_allocObject(v11, 432LL, 7LL);
  *(_OWORD *)(v12 + swift_weakDestroy(v0 + 16) = xmmword_1004CE410;
  if (qword_100644170 != -1) {
    swift_once(&qword_100644170, LongHash.storage.getter);
  }
  *(void *)(v12 + 56) = &type metadata for SDAuthentication.Operation.RecordSessionStart;
  *(void *)(v12 + 6sub_10018709C(v0 + 4) = &off_10064B078;
  *(void *)(v12 + 96) = &type metadata for SDAuthentication.Operation.RecordRemoteUnlockDate;
  *(void *)(v12 + 10sub_10018709C(v0 + 4) = &off_10064B058;
  *(void *)(v12 + 136) = &type metadata for SDAuthentication.Operation.RecordDiscoveryEnd;
  *(void *)(v12 + 14sub_10018709C(v0 + 4) = &off_10064B038;
  *(void *)(v12 + 176) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeStart;
  *(void *)(v12 + 18sub_10018709C(v0 + 4) = &off_10064B018;
  *(void *)(v12 + 2swift_weakDestroy(v0 + 16) = &type metadata for SDAuthentication.Operation.RecordKeyExchangeEnd;
  *(void *)(v12 + 22sub_10018709C(v0 + 4) = &off_10064AFF8;
  *(void *)(v12 + 256) = &type metadata for SDAuthentication.Operation.CheckEnabledWithPeer;
  *(void *)(v12 + 26sub_10018709C(v0 + 4) = &off_10064AB18;
  *(void *)(v12 + 296) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v12 + 30sub_10018709C(v0 + 4) = &off_10064ABB8;
  *(void *)(v12 + 336) = &type metadata for SDAuthentication.Operation.CheckLockRegisteredAndArmed;
  *(void *)(v12 + 34sub_10018709C(v0 + 4) = &off_10064AE58;
  *(void *)(v12 + 376) = &type metadata for SDAuthentication.Operation.UseReceivedTokenForIncludingFirstAKSTokenInMessage;
  *(void *)(v12 + 38sub_10018709C(v0 + 4) = &off_10064AE38;
  *(void *)(v12 + 4swift_weakDestroy(v0 + 16) = &type metadata for SDAuthentication.Operation.SendResponseMessage;
  *(void *)(v12 + 42sub_10018709C(v0 + 4) = &off_10064AFB8;
  *a3 = (const char *)v12;
  int v13 = (int *)_s14MacUnlockPhoneV20HandleRequestContextVMa(0LL);
  uint64_t v14 = (uint64_t)a3 + v13[8];
  uint64_t v47 = v6;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v15(v14, 1LL, 1LL, v5);
  uint64_t v16 = (uint64_t)a3 + v13[9];
  v15(v16, 1LL, 1LL, v5);
  uint64_t v17 = v13[11];
  *(const char **)((char *)a3 + v17) = 0LL;
  *((_BYTE *)a3 + v13[12]) = 1;
  if ([a1 hasAksToken])
  {
    uint64_t v18 = v48;
    sub_10019A6C4(v48 + 8, (uint64_t)(a3 + 1));
    uint64_t v19 = (int *)_s14MacUnlockPhoneV18InitialLockContextVMa(0LL);
    sub_1001A4B84(v18 + v19[6], (uint64_t)a3 + v13[6], type metadata accessor for SDAuthenticationSessionMetrics);
    sub_100224D6C(v18 + v19[7], v14);
    sub_100224D6C(v18 + v19[8], v16);
    id v20 = [a1 hasUnlockDate];
    if ((_DWORD)v20 && (id v20 = [a1 unlockDate], v21 != 0.0)) {
      Date.init(timeIntervalSince1970:)([a1 unlockDate]);
    }
    else {
      Date.init()(v20);
    }
    uint64_t v22 = v47;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))((char *)a3 + v13[10], v10, v5);
    id v23 = [a1 aksToken];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
      uint64_t v27 = v26;

      uint64_t v28 = (uint64_t *)((char *)a3 + v13[7]);
      uint64_t *v28 = v25;
      v28[1] = v27;
      if (qword_100644168 != -1) {
        swift_once(&qword_100644168, sub_1003076EC);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v29, (uint64_t)qword_10064E3A0);
      id v30 = a1;
      uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        int v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v47 = swift_slowAlloc(32LL, -1LL);
        uint64_t v51 = v47;
        *(_DWORD *)int v33 = 136315138;
        int v45 = v33 + 4;
        id v34 = [v30 unlockDate];
        uint64_t v35 = v46;
        Date.init(timeIntervalSince1970:)(v34);
        unint64_t v36 = sub_1002ACCD0();
        uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter(v5, v36);
        uint64_t v38 = v22;
        uint64_t v40 = v39;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v5);
        uint64_t v49 = sub_10018CDB4(v37, (unint64_t)v40, &v51);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v45, v33 + 12);

        swift_bridgeObjectRelease(v40);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "got remote unlock date: %s", v33, 0xCu);
        uint64_t v41 = v47;
        swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v41, -1LL, -1LL);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      else
      {
      }

      sub_1001A4BC8(v48, _s14MacUnlockPhoneV18InitialLockContextVMa);
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    unint64_t v42 = sub_100187014();
    uint64_t v43 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v42, 0LL, 0LL);
    *(_DWORD *)uint64_t v44 = 1;
    *(void *)(v44 + 8) = 0xD000000000000011LL;
    *(void *)(v44 + swift_weakDestroy(v0 + 16) = 0x8000000100508DC0LL;
    swift_willThrow(v43);

    sub_1001A4BC8(v48, _s14MacUnlockPhoneV18InitialLockContextVMa);
    swift_bridgeObjectRelease(*a3);
    sub_100187100(v14, &qword_1006457E8);
    sub_100187100(v16, &qword_1006457E8);
  }

uint64_t sub_10030EBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for Date(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

uint64_t sub_10030EBF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D95A8(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_10030EC04(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_10030E5B8);
}

id sub_10030EC20()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0LL) + 36);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationToken) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_10030EC8C(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 112LL, 7LL);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_1004CD530;
  if (qword_100644170 != -1) {
    swift_once(&qword_100644170, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.IncludeNextAKSTokenInMessage;
  *(void *)(v7 + 6sub_10018709C(v0 + 4) = &off_10064AE98;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendTokenMessage;
  *(void *)(v7 + 10sub_10018709C(v0 + 4) = &off_10064AF78;
  *a3 = (const char *)v7;
  uint64_t v8 = (int *)_s14MacUnlockPhoneV21HandleResponseContextVMa(0LL);
  *(_DWORD *)((char *)a3 + v8[7]) = 34;
  uint64_t v9 = v8[9];
  *(const char **)((char *)a3 + v9) = 0LL;
  *((_BYTE *)a3 + v8[10]) = 7;
  if ([a1 hasAksToken])
  {
    uint64_t v10 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0LL);
    sub_10019A6C4(a2 + *(int *)(v10 + 24), (uint64_t)(a3 + 1));
    sub_1001A4B84( a2 + *(int *)(v10 + 20),  (uint64_t)a3 + v8[6],  type metadata accessor for SDAuthenticationSessionMetrics);
    id v11 = [a1 aksToken];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      uint64_t v15 = v14;

      sub_1001A4BC8(a2, _s14MacUnlockPhoneV17InitialKeyContextVMa);
      uint64_t v16 = (uint64_t *)((char *)a3 + v8[8]);
      *uint64_t v16 = v13;
      v16[1] = v15;
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 1;
    *(void *)(v19 + 8) = 0xD000000000000019LL;
    *(void *)(v19 + swift_weakDestroy(v0 + 16) = 0x80000001005041F0LL;
    swift_willThrow(v18);

    sub_1001A4BC8(a2, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

uint64_t sub_10030EE90(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_10030EE9C(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_10030EC20);
}

id sub_10030EEB8()
{
  uint64_t v1 = *(int *)(_s14MacUnlockPhoneV18HandleTokenContextVMa(0LL) + 32);
  uint64_t v2 = *(void **)(v0 + v1);
  if (v2)
  {
    id v3 = *(id *)(v0 + v1);
LABEL_5:
    id v5 = v2;
    return v3;
  }

  id result = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  if (result)
  {
    *(void *)(v0 + v1) = result;
    id v3 = result;
    uint64_t v2 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

void sub_10030EF24(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 152LL, 7LL);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_1004CD550;
  if (qword_100644170 != -1) {
    swift_once(&qword_100644170, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.ConsumeAKSToken;
  *(void *)(v7 + 6sub_10018709C(v0 + 4) = &off_10064AE78;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v7 + 10sub_10018709C(v0 + 4) = &off_10064B238;
  *(void *)(v7 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v7 + 14sub_10018709C(v0 + 4) = &off_10064AF38;
  *a3 = (const char *)v7;
  uint64_t v8 = (int *)_s14MacUnlockPhoneV18HandleTokenContextVMa(0LL);
  uint64_t v9 = v8[8];
  *(const char **)((char *)a3 + v9) = 0LL;
  *((_BYTE *)a3 + v8[9]) = 2;
  if ([a1 hasAksToken])
  {
    sub_10019A6C4(a2 + 8, (uint64_t)(a3 + 1));
    uint64_t v10 = _s14MacUnlockPhoneV20HandleRequestContextVMa(0LL);
    sub_1001A4B84( a2 + *(int *)(v10 + 24),  (uint64_t)a3 + v8[6],  type metadata accessor for SDAuthenticationSessionMetrics);
    id v11 = [a1 aksToken];
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v11);
      uint64_t v15 = v14;

      sub_1001A4BC8(a2, _s14MacUnlockPhoneV20HandleRequestContextVMa);
      uint64_t v16 = (uint64_t *)((char *)a3 + v8[7]);
      *uint64_t v16 = v13;
      v16[1] = v15;
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    unint64_t v17 = sub_100187014();
    uint64_t v18 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v17, 0LL, 0LL);
    *(_DWORD *)uint64_t v19 = 1;
    *(void *)(v19 + 8) = 0xD000000000000019LL;
    *(void *)(v19 + swift_weakDestroy(v0 + 16) = 0x80000001005041F0LL;
    swift_willThrow(v18);

    sub_1001A4BC8(a2, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

uint64_t sub_10030F128(uint64_t a1, uint64_t a2)
{
  return sub_1001A315C(a1, a2, (uint64_t (*)(void))sub_10030EEB8);
}

void sub_10030F144(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 152LL, 7LL);
  *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_1004CD550;
  if (qword_100644170 != -1) {
    swift_once(&qword_100644170, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v7 + 6sub_10018709C(v0 + 4) = &off_10064B218;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.ConfirmAKSSession;
  *(void *)(v7 + 10sub_10018709C(v0 + 4) = &off_10064AE18;
  *(void *)(v7 + 136) = &type metadata for SDAuthentication.Operation.FinishSession;
  *(void *)(v7 + 14sub_10018709C(v0 + 4) = &off_10064AF38;
  *a3 = (const char *)v7;
  if ([a1 hasSuccess])
  {
    sub_10019A6C4(a2 + 8, (uint64_t)(a3 + 1));
    uint64_t v8 = a2 + *(int *)(_s14MacUnlockPhoneV21HandleResponseContextVMa(0LL) + 24);
    uint64_t v9 = _s14MacUnlockPhoneV25HandleConfirmationContextVMa(0LL);
    sub_1001A4B84(v8, (uint64_t)a3 + *(int *)(v9 + 24), type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v8) = [a1 success];

    sub_1001A4BC8(a2, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    *((_BYTE *)a3 + *(int *)(v9 + 28)) = v8;
  }

  else
  {
    unint64_t v10 = sub_100187014();
    uint64_t v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0LL, 0LL);
    *(_DWORD *)uint64_t v12 = 1;
    *(void *)(v12 + 8) = 0xD000000000000016LL;
    *(void *)(v12 + swift_weakDestroy(v0 + 16) = 0x8000000100504210LL;
    swift_willThrow(v11);

    sub_1001A4BC8(a2, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

void sub_10030F30C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v123 = a2;
  int v118 = a3;
  uint64_t v102 = _s14MacUnlockPhoneV25HandleConfirmationContextVMa(0LL);
  __chkstk_darwin(v102);
  uint64_t v106 = (const char **)((char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = sub_100183098(&qword_10064E598);
  __chkstk_darwin(v5);
  int v111 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = _s14MacUnlockPhoneV18HandleTokenContextVMa(0LL);
  __chkstk_darwin(v103);
  uint64_t v110 = (const char **)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = sub_100183098(&qword_10064E5A0);
  __chkstk_darwin(v8);
  int v117 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v112 = _s14MacUnlockPhoneV21HandleResponseContextVMa(0LL);
  uint64_t v109 = *(void *)(v112 - 8);
  uint64_t v10 = __chkstk_darwin(v112);
  uint64_t v104 = (uint64_t)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v105 = (uint64_t)&v102 - v13;
  __chkstk_darwin(v12);
  uint64_t v116 = (const char **)((char *)&v102 - v14);
  uint64_t v15 = sub_100183098(&qword_10064E5A8);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = _s14MacUnlockPhoneV17InitialKeyContextVMa(0LL);
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v114 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v115 = (uint64_t)&v102 - v21;
  uint64_t v119 = _s14MacUnlockPhoneV20HandleRequestContextVMa(0LL);
  uint64_t v113 = *(void *)(v119 - 8);
  uint64_t v22 = __chkstk_darwin(v119);
  uint64_t v107 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v108 = (uint64_t)&v102 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (const char **)((char *)&v102 - v26);
  uint64_t v28 = sub_100183098(&qword_10064E5B0);
  __chkstk_darwin(v28);
  id v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = _s14MacUnlockPhoneV18InitialLockContextVMa(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v102 - v36;
  uint64_t v38 = a1;
  sub_10019A6C4(a1, (uint64_t)v124);
  uint64_t v39 = sub_100183098(&qword_1006500D0);
  uint64_t v40 = sub_100183168(0LL, &qword_100645A08, off_1005C8870);
  if (swift_dynamicCast(&v125, v124, v39, v40, 6LL))
  {
    uint64_t v41 = v125;
    sub_10019A6C4(v123, (uint64_t)v124);
    uint64_t v42 = sub_100183098(&qword_100645A28);
    int v43 = swift_dynamicCast(v30, v124, v42, v31, 6LL);
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if (v43)
    {
      v44(v30, 0LL, 1LL, v31);
      sub_1001A4B40((uint64_t)v30, (uint64_t)v37, _s14MacUnlockPhoneV18InitialLockContextVMa);
      sub_1001A4B84((uint64_t)v37, (uint64_t)v35, _s14MacUnlockPhoneV18InitialLockContextVMa);
      id v45 = v41;
      uint64_t v46 = v122;
      sub_10030E624(v45, (uint64_t)v35, v27);
      if (v46)
      {
        uint64_t v47 = _s14MacUnlockPhoneV18InitialLockContextVMa;
        uint64_t v48 = (uint64_t)v37;
LABEL_21:
        sub_1001A4BC8(v48, v47);

        return;
      }

      int v87 = v118;
      v118[3] = v119;
      v87[4] = &off_1005DAC38;
      uint64_t v88 = sub_1001A4B04(v87);
      sub_1001A4B40((uint64_t)v27, (uint64_t)v88, _s14MacUnlockPhoneV20HandleRequestContextVMa);

      uint64_t v89 = _s14MacUnlockPhoneV18InitialLockContextVMa;
      uint64_t v90 = (uint64_t)v37;
      goto LABEL_30;
    }

    v44(v30, 1LL, 1LL, v31);
    sub_100187100((uint64_t)v30, &qword_10064E5B0);
    unint64_t v60 = sub_100187014();
    uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v60, 0LL, 0LL);
    *(_DWORD *)uint64_t v62 = 10;
    unint64_t v63 = 0xD000000000000047LL;
    uint64_t v64 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_10:
    *(void *)(v62 + 8) = v63;
    *(void *)(v62 + swift_weakDestroy(v0 + 16) = (unint64_t)(v64 - 32) | 0x8000000000000000LL;
    swift_willThrow(v61);

    return;
  }

  uint64_t v49 = v123;
  sub_10019A6C4(v38, (uint64_t)v124);
  uint64_t v50 = sub_100183168(0LL, &qword_100645A10, off_1005C8878);
  if (swift_dynamicCast(&v125, v124, v39, v50, 6LL))
  {
    uint64_t v51 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v52 = sub_100183098(&qword_100645A28);
    uint64_t v53 = v121;
    int v54 = swift_dynamicCast(v17, v124, v52, v121, 6LL);
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
    if (!v54)
    {
      v55(v17, 1LL, 1LL, v53);
      sub_100187100((uint64_t)v17, &qword_10064E5A8);
      unint64_t v75 = sub_100187014();
      uint64_t v76 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v75, 0LL, 0LL);
      *(_DWORD *)uint64_t v77 = 10;
      *(void *)(v77 + 8) = 0xD000000000000046LL;
      *(void *)(v77 + swift_weakDestroy(v0 + 16) = 0x80000001005040E0LL;
      swift_willThrow(v76);

      return;
    }

    v55(v17, 0LL, 1LL, v53);
    uint64_t v56 = v115;
    sub_1001A4B40((uint64_t)v17, v115, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    uint64_t v57 = v114;
    sub_1001A4B84(v56, v114, _s14MacUnlockPhoneV17InitialKeyContextVMa);
    id v45 = v51;
    uint64_t v58 = v116;
    uint64_t v59 = v122;
    sub_10030EC8C(v45, v57, v116);
    if (v59)
    {
      uint64_t v47 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
      uint64_t v48 = v56;
      goto LABEL_21;
    }

    uint64_t v95 = v118;
    v118[3] = v112;
    v95[4] = &off_1005DAC50;
    uint64_t v96 = sub_1001A4B04(v95);
    sub_1001A4B40((uint64_t)v58, (uint64_t)v96, _s14MacUnlockPhoneV21HandleResponseContextVMa);

    uint64_t v89 = _s14MacUnlockPhoneV17InitialKeyContextVMa;
    uint64_t v90 = v56;
    goto LABEL_30;
  }

  sub_10019A6C4(v38, (uint64_t)v124);
  uint64_t v65 = sub_100183168(0LL, &qword_100645A18, off_1005C8880);
  if (swift_dynamicCast(&v125, v124, v39, v65, 6LL))
  {
    uint64_t v41 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v66 = sub_100183098(&qword_100645A28);
    uint64_t v67 = (uint64_t)v117;
    uint64_t v68 = v119;
    int v69 = swift_dynamicCast(v117, v124, v66, v119, 6LL);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    if (!v69)
    {
      v70(v67, 1LL, 1LL, v68);
      sub_100187100(v67, &qword_10064E5A0);
      unint64_t v91 = sub_100187014();
      uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v91, 0LL, 0LL);
      *(_DWORD *)uint64_t v62 = 10;
      unint64_t v63 = 0xD000000000000049LL;
      uint64_t v64 = "Invalid previous context as HandleRequestContext, message may be replayed";
      goto LABEL_10;
    }

    v70(v67, 0LL, 1LL, v68);
    uint64_t v71 = v108;
    sub_1001A4B40(v67, v108, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    uint64_t v72 = v107;
    sub_1001A4B84(v71, v107, _s14MacUnlockPhoneV20HandleRequestContextVMa);
    id v45 = v41;
    uint64_t v73 = v110;
    uint64_t v74 = v122;
    sub_10030EF24(v45, v72, v110);
    if (v74)
    {
      uint64_t v47 = _s14MacUnlockPhoneV20HandleRequestContextVMa;
LABEL_20:
      uint64_t v48 = v71;
      goto LABEL_21;
    }

    double v98 = v118;
    v118[3] = v103;
    v98[4] = &off_1005DAC68;
    uint64_t v99 = sub_1001A4B04(v98);
    sub_1001A4B40((uint64_t)v73, (uint64_t)v99, _s14MacUnlockPhoneV18HandleTokenContextVMa);

    uint64_t v89 = _s14MacUnlockPhoneV20HandleRequestContextVMa;
  }

  else
  {
    sub_10019A6C4(v38, (uint64_t)v124);
    uint64_t v78 = sub_100183168(0LL, &qword_100645A20, off_1005C8838);
    if (!swift_dynamicCast(&v125, v124, v39, v78, 6LL))
    {
      unint64_t v92 = sub_100187014();
      uint64_t v93 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v92, 0LL, 0LL);
      *(_DWORD *)uint64_t v94 = 10;
      *(void *)(v94 + 8) = 0xD00000000000001FLL;
      *(void *)(v94 + swift_weakDestroy(v0 + 16) = 0x8000000100503F30LL;
      swift_willThrow(v93);
      return;
    }

    uint64_t v41 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v79 = sub_100183098(&qword_100645A28);
    uint64_t v81 = (uint64_t)v111;
    uint64_t v80 = v112;
    int v82 = swift_dynamicCast(v111, v124, v79, v112, 6LL);
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
    if (!v82)
    {
      v83(v81, 1LL, 1LL, v80);
      sub_100187100(v81, &qword_10064E598);
      unint64_t v97 = sub_100187014();
      uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v97, 0LL, 0LL);
      *(_DWORD *)uint64_t v62 = 10;
      unint64_t v63 = 0xD00000000000004ALL;
      uint64_t v64 = "Invalid previous context as HandleResponseContext, message may be replayed";
      goto LABEL_10;
    }

    v83(v81, 0LL, 1LL, v80);
    uint64_t v71 = v105;
    sub_1001A4B40(v81, v105, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    uint64_t v84 = v104;
    sub_1001A4B84(v71, v104, _s14MacUnlockPhoneV21HandleResponseContextVMa);
    id v45 = v41;
    uint64_t v85 = v106;
    uint64_t v86 = v122;
    sub_10030F144(v45, v84, v106);
    if (v86)
    {
      uint64_t v47 = _s14MacUnlockPhoneV21HandleResponseContextVMa;
      goto LABEL_20;
    }

    double v100 = v118;
    v118[3] = v102;
    v100[4] = &off_1005DAC80;
    double v101 = sub_1001A4B04(v100);
    sub_1001A4B40((uint64_t)v85, (uint64_t)v101, _s14MacUnlockPhoneV25HandleConfirmationContextVMa);

    uint64_t v89 = _s14MacUnlockPhoneV21HandleResponseContextVMa;
  }

  uint64_t v90 = v71;
LABEL_30:
  sub_1001A4BC8(v90, v89);
}

void sub_10030FD9C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

uint64_t _s14MacUnlockPhoneV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E808, (uint64_t)&_s14MacUnlockPhoneV25HandleConfirmationContextVMn);
}

uint64_t _s14MacUnlockPhoneV18HandleTokenContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E6C0, (uint64_t)&_s14MacUnlockPhoneV18HandleTokenContextVMn);
}

uint64_t _s14MacUnlockPhoneV21HandleResponseContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E760, (uint64_t)&_s14MacUnlockPhoneV21HandleResponseContextVMn);
}

uint64_t _s14MacUnlockPhoneV20HandleRequestContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064E610, (uint64_t)&_s14MacUnlockPhoneV20HandleRequestContextVMn);
}

char *sub_10030FE00(char *a1, uint64_t a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v5 = *(const char **)a2;
  *(void *)a1 = *(void *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)&v5[(v4 + 16LL) & ~(unint64_t)v4];
    swift_retain(v5);
  }

  else
  {
    uint64_t v8 = a2 + 8;
    __int128 v9 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 2) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(char *, uint64_t, uint64_t, __n128))(v9 - 8);
    __n128 v12 = swift_bridgeObjectRetain(v5);
    v11(a1 + 8, v8, v10, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = (char *)(a2 + v13);
    uint64_t v16 = type metadata accessor for Date(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    double v100 = a3;
    if (v18(v15, 1LL, v16))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
    }

    uint64_t v20 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v21 = v20[5];
    uint64_t v22 = &v14[v21];
    uint64_t v23 = &v15[v21];
    if (v18(&v15[v21], 1LL, v16))
    {
      uint64_t v24 = sub_100183098(&qword_1006457E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v23, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0LL, 1LL, v16);
    }

    uint64_t v25 = v20[6];
    uint64_t v26 = &v14[v25];
    uint64_t v27 = &v15[v25];
    if (v18(&v15[v25], 1LL, v16))
    {
      uint64_t v28 = sub_100183098(&qword_1006457E8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v27, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0LL, 1LL, v16);
    }

    uint64_t v29 = v20[7];
    id v30 = &v14[v29];
    uint64_t v31 = &v15[v29];
    if (v18(&v15[v29], 1LL, v16))
    {
      uint64_t v32 = sub_100183098(&qword_1006457E8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v31, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v30, 0LL, 1LL, v16);
    }

    uint64_t v33 = v20[8];
    uint64_t v34 = &v14[v33];
    uint64_t v35 = &v15[v33];
    if (v18(&v15[v33], 1LL, v16))
    {
      uint64_t v36 = sub_100183098(&qword_1006457E8);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v34, 0LL, 1LL, v16);
    }

    uint64_t v37 = v20[9];
    uint64_t v38 = &v14[v37];
    uint64_t v39 = &v15[v37];
    if (v18(&v15[v37], 1LL, v16))
    {
      uint64_t v40 = sub_100183098(&qword_1006457E8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v38, v39, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v38, 0LL, 1LL, v16);
    }

    uint64_t v41 = v20[10];
    uint64_t v42 = &v14[v41];
    int v43 = &v15[v41];
    if (v18(&v15[v41], 1LL, v16))
    {
      uint64_t v44 = sub_100183098(&qword_1006457E8);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v42, v43, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v42, 0LL, 1LL, v16);
    }

    uint64_t v45 = v20[11];
    uint64_t v46 = &v14[v45];
    uint64_t v47 = &v15[v45];
    if (v18(&v15[v45], 1LL, v16))
    {
      uint64_t v48 = sub_100183098(&qword_1006457E8);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v46, v47, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v46, 0LL, 1LL, v16);
    }

    uint64_t v49 = v20[12];
    uint64_t v50 = &v14[v49];
    uint64_t v51 = &v15[v49];
    if (v18(&v15[v49], 1LL, v16))
    {
      uint64_t v52 = sub_100183098(&qword_1006457E8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v50, v51, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v50, 0LL, 1LL, v16);
    }

    v14[v20[13]] = v15[v20[13]];
    uint64_t v53 = v20[14];
    int v54 = &v14[v53];
    uint64_t v55 = &v15[v53];
    if (v18(&v15[v53], 1LL, v16))
    {
      uint64_t v56 = sub_100183098(&qword_1006457E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v54, v55, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v54, 0LL, 1LL, v16);
    }

    uint64_t v57 = v20[15];
    uint64_t v58 = &v14[v57];
    uint64_t v59 = &v15[v57];
    if (v18(&v15[v57], 1LL, v16))
    {
      uint64_t v60 = sub_100183098(&qword_1006457E8);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v58, v59, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v58, 0LL, 1LL, v16);
    }

    uint64_t v61 = v20[16];
    uint64_t v62 = &v14[v61];
    unint64_t v63 = &v15[v61];
    if (v18(&v15[v61], 1LL, v16))
    {
      uint64_t v64 = sub_100183098(&qword_1006457E8);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v62, v63, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v62, 0LL, 1LL, v16);
    }

    uint64_t v65 = v20[17];
    uint64_t v66 = &v14[v65];
    uint64_t v67 = &v15[v65];
    if (v18(&v15[v65], 1LL, v16))
    {
      uint64_t v68 = sub_100183098(&qword_1006457E8);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v66, v67, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v66, 0LL, 1LL, v16);
    }

    uint64_t v69 = v20[18];
    uint64_t v70 = &v14[v69];
    uint64_t v71 = &v15[v69];
    *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
    v70[4] = v71[4];
    v14[v20[19]] = v15[v20[19]];
    uint64_t v72 = v20[20];
    uint64_t v73 = &v14[v72];
    uint64_t v74 = &v15[v72];
    unint64_t v75 = (const char *)*((void *)v74 + 1);
    *(void *)uint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = v20[21];
    uint64_t v77 = &v14[v76];
    uint64_t v78 = &v15[v76];
    uint64_t v79 = (const char *)*((void *)v78 + 1);
    *(void *)uint64_t v77 = *(void *)v78;
    *((void *)v77 + 1) = v79;
    uint64_t v80 = v100[7];
    uint64_t v81 = (uint64_t *)&a1[v80];
    int v82 = (uint64_t *)(a2 + v80);
    uint64_t v83 = *v82;
    unint64_t v84 = v82[1];
    *(void *)&double v85 = swift_bridgeObjectRetain(v75).n128_u64[0];
    swift_bridgeObjectRetain(v79, v85);
    sub_10019BA8C(v83, v84);
    *uint64_t v81 = v83;
    v81[1] = v84;
    uint64_t v86 = v100[8];
    int v87 = &a1[v86];
    uint64_t v88 = (const void *)(a2 + v86);
    if (v18((char *)(a2 + v86), 1LL, v16))
    {
      uint64_t v89 = sub_100183098(&qword_1006457E8);
      memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v17 + 16))(v87, v88, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v87, 0LL, 1LL, v16);
    }

    uint64_t v90 = v100[9];
    unint64_t v91 = &a1[v90];
    unint64_t v92 = (const void *)(a2 + v90);
    if (v18((char *)(a2 + v90), 1LL, v16))
    {
      uint64_t v93 = sub_100183098(&qword_1006457E8);
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64LL));
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(&a1[v100[10]], a2 + v100[10], v16);
    }

    else
    {
      uint64_t v94 = *(void (**)(char *, const void *, uint64_t))(v17 + 16);
      v94(v91, v92, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v91, 0LL, 1LL, v16);
      v94(&a1[v100[10]], (const void *)(a2 + v100[10]), v16);
    }

    uint64_t v95 = v100[11];
    uint64_t v96 = v100[12];
    unint64_t v97 = *(void **)(a2 + v95);
    *(void *)&a1[v95] = v97;
    a1[v96] = *(_BYTE *)(a2 + v96);
    id v98 = v97;
  }

  return a1;
}