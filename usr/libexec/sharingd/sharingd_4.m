void sub_10031061C(const char **a1, int *a2)
{
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  int *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  double v22;
  char *v23;
  char *v24;
  unsigned int v25;
  void (*v26)(char *, uint64_t);
  v4 = a1 + 1;
  swift_bridgeObjectRelease(*a1);
  sub_10018709C(v4);
  v5 = (char *)a1 + a2[6];
  v6 = type metadata accessor for Date(0LL);
  v7 = *(void *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  v10 = &v5[v9[5]];
  if (!v8(v10, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v11 = &v5[v9[6]];
  if (!v8(v11, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  v12 = &v5[v9[7]];
  if (!v8(v12, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  v13 = &v5[v9[8]];
  if (!v8(v13, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  v14 = &v5[v9[9]];
  if (!v8(v14, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }
  v15 = &v5[v9[10]];
  if (!v8(v15, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  v16 = &v5[v9[11]];
  if (!v8(v16, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  }
  v17 = &v5[v9[12]];
  if (!v8(v17, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  }
  v18 = &v5[v9[14]];
  if (!v8(v18, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }
  v19 = &v5[v9[15]];
  if (!v8(v19, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  v20 = &v5[v9[16]];
  if (!v8(v20, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  }
  v21 = &v5[v9[17]];
  if (!v8(v21, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  }
  *(void *)&v22 = swift_bridgeObjectRelease((const char *)*(void *)&v5[v9[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v5[v9[21] + 8], v22);
  sub_100189B20(*(uint64_t *)((char *)a1 + a2[7]), *(unint64_t *)((char *)a1 + a2[7] + 8));
  v23 = (char *)a1 + a2[8];
  if (!v8(v23, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
  }
  v24 = (char *)a1 + a2[9];
  v25 = v8(v24, 1LL, v6);
  v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  if (!v25) {
    v26(v24, v6);
  }
  v26((char *)a1 + a2[10], v6);
}

uint64_t sub_100310964(uint64_t a1, uint64_t a2, int *a3)
{
  v6 = *(const char **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a2 + 8;
  __int128 v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  uint64_t v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  __n128 v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 8, v7, v9, v11);
  uint64_t v12 = a3[6];
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v99 = a3;
  if (v17(v14, 1LL, v15))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v20 = v19[5];
  v21 = &v13[v20];
  v22 = &v14[v20];
  if (v17(&v14[v20], 1LL, v15))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0LL, 1LL, v15);
  }

  uint64_t v24 = v19[6];
  v25 = &v13[v24];
  v26 = &v14[v24];
  if (v17(&v14[v24], 1LL, v15))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0LL, 1LL, v15);
  }

  uint64_t v28 = v19[7];
  v29 = &v13[v28];
  v30 = &v14[v28];
  if (v17(&v14[v28], 1LL, v15))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0LL, 1LL, v15);
  }

  uint64_t v32 = v19[8];
  v33 = &v13[v32];
  v34 = &v14[v32];
  if (v17(&v14[v32], 1LL, v15))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0LL, 1LL, v15);
  }

  uint64_t v36 = v19[9];
  v37 = &v13[v36];
  v38 = &v14[v36];
  if (v17(&v14[v36], 1LL, v15))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v37, 0LL, 1LL, v15);
  }

  uint64_t v40 = v19[10];
  v41 = &v13[v40];
  v42 = &v14[v40];
  if (v17(&v14[v40], 1LL, v15))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v41, 0LL, 1LL, v15);
  }

  uint64_t v44 = v19[11];
  v45 = &v13[v44];
  v46 = &v14[v44];
  if (v17(&v14[v44], 1LL, v15))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v45, 0LL, 1LL, v15);
  }

  uint64_t v48 = v19[12];
  v49 = &v13[v48];
  v50 = &v14[v48];
  if (v17(&v14[v48], 1LL, v15))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v49, 0LL, 1LL, v15);
  }

  v13[v19[13]] = v14[v19[13]];
  uint64_t v52 = v19[14];
  v53 = &v13[v52];
  v54 = &v14[v52];
  if (v17(&v14[v52], 1LL, v15))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v53, 0LL, 1LL, v15);
  }

  uint64_t v56 = v19[15];
  v57 = &v13[v56];
  v58 = &v14[v56];
  if (v17(&v14[v56], 1LL, v15))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v57, 0LL, 1LL, v15);
  }

  uint64_t v60 = v19[16];
  v61 = &v13[v60];
  v62 = &v14[v60];
  if (v17(&v14[v60], 1LL, v15))
  {
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v61, 0LL, 1LL, v15);
  }

  uint64_t v64 = v19[17];
  v65 = &v13[v64];
  v66 = &v14[v64];
  if (v17(&v14[v64], 1LL, v15))
  {
    uint64_t v67 = sub_100183098(&qword_1006457E8);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v65, 0LL, 1LL, v15);
  }

  uint64_t v68 = v19[18];
  v69 = &v13[v68];
  v70 = &v14[v68];
  *(_DWORD *)v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v13[v19[19]] = v14[v19[19]];
  uint64_t v71 = v19[20];
  v72 = &v13[v71];
  v73 = &v14[v71];
  v74 = (const char *)*((void *)v73 + 1);
  *(void *)v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v19[21];
  v76 = &v13[v75];
  v77 = &v14[v75];
  v78 = (const char *)*((void *)v77 + 1);
  *(void *)v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  uint64_t v79 = v99[7];
  v80 = (uint64_t *)(a1 + v79);
  v81 = (uint64_t *)(a2 + v79);
  uint64_t v82 = *v81;
  unint64_t v83 = v81[1];
  *(void *)&double v84 = swift_bridgeObjectRetain(v74).n128_u64[0];
  swift_bridgeObjectRetain(v78, v84);
  sub_10019BA8C(v82, v83);
  uint64_t *v80 = v82;
  v80[1] = v83;
  uint64_t v85 = v99[8];
  v86 = (void *)(a1 + v85);
  v87 = (const void *)(a2 + v85);
  if (v17((char *)(a2 + v85), 1LL, v15))
  {
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v86, v87, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v86, 0LL, 1LL, v15);
  }

  uint64_t v89 = v99[9];
  v90 = (void *)(a1 + v89);
  v91 = (const void *)(a2 + v89);
  if (v17((char *)(a2 + v89), 1LL, v15))
  {
    uint64_t v92 = sub_100183098(&qword_1006457E8);
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64LL));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a1 + v99[10], a2 + v99[10], v15);
  }

  else
  {
    v93 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
    v93(v90, v91, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v90, 0LL, 1LL, v15);
    v93((void *)(a1 + v99[10]), (const void *)(a2 + v99[10]), v15);
  }

  uint64_t v94 = v99[11];
  uint64_t v95 = v99[12];
  v96 = *(void **)(a2 + v94);
  *(void *)(a1 + v94) = v96;
  *(_BYTE *)(a1 + v95) = *(_BYTE *)(a2 + v95);
  id v97 = v96;
  return a1;
}

uint64_t sub_10031115C(uint64_t a1, const char **a2, uint64_t a3)
{
  uint64_t v7 = a2 + 1;
  v6 = *a2;
  __int128 v8 = *(const char **)a1;
  *(void *)a1 = *a2;
  *(void *)&double v9 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v8, v9);
  sub_10019DB24((void *)(a1 + 8), v7);
  uint64_t v10 = *(int *)(a3 + 24);
  __n128 v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1LL, v13);
  int v17 = v15(v12, 1LL, v13);
  uint64_t v132 = a3;
  v134 = a2;
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0LL, 1LL, v13);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v20 = v19[5];
  v21 = &v11[v20];
  v22 = &v12[v20];
  int v23 = v15(&v11[v20], 1LL, v13);
  int v24 = v15(v22, 1LL, v13);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0LL, 1LL, v13);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
LABEL_12:
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v21, v22, v13);
LABEL_13:
  uint64_t v26 = v19[6];
  uint64_t v27 = &v11[v26];
  uint64_t v28 = &v12[v26];
  int v29 = v15(&v11[v26], 1LL, v13);
  int v30 = v15(v28, 1LL, v13);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0LL, 1LL, v13);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
LABEL_18:
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v27, v28, v13);
LABEL_19:
  uint64_t v32 = v19[7];
  v33 = &v11[v32];
  v34 = &v12[v32];
  int v35 = v15(&v11[v32], 1LL, v13);
  int v36 = v15(v34, 1LL, v13);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v33, 0LL, 1LL, v13);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
LABEL_24:
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v33, v34, v13);
LABEL_25:
  uint64_t v38 = v19[8];
  uint64_t v39 = &v11[v38];
  uint64_t v40 = &v12[v38];
  int v41 = v15(&v11[v38], 1LL, v13);
  int v42 = v15(v40, 1LL, v13);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v40, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v39, 0LL, 1LL, v13);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v13);
LABEL_30:
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v39, v40, v13);
LABEL_31:
  uint64_t v44 = v19[9];
  v45 = &v11[v44];
  v46 = &v12[v44];
  int v47 = v15(&v11[v44], 1LL, v13);
  int v48 = v15(v46, 1LL, v13);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v45, v46, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v45, 0LL, 1LL, v13);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v45, v13);
LABEL_36:
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v45, v46, v13);
LABEL_37:
  uint64_t v50 = v19[10];
  uint64_t v51 = &v11[v50];
  uint64_t v52 = &v12[v50];
  int v53 = v15(&v11[v50], 1LL, v13);
  int v54 = v15(v52, 1LL, v13);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v52, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v51, 0LL, 1LL, v13);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v13);
LABEL_42:
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v51, v52, v13);
LABEL_43:
  uint64_t v56 = v19[11];
  v57 = &v11[v56];
  v58 = &v12[v56];
  int v59 = v15(&v11[v56], 1LL, v13);
  int v60 = v15(v58, 1LL, v13);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, v58, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v57, 0LL, 1LL, v13);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v57, v13);
LABEL_48:
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v57, v58, v13);
LABEL_49:
  uint64_t v62 = v19[12];
  uint64_t v63 = &v11[v62];
  uint64_t v64 = &v12[v62];
  int v65 = v15(&v11[v62], 1LL, v13);
  int v66 = v15(v64, 1LL, v13);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v64, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v63, 0LL, 1LL, v13);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v63, v13);
LABEL_54:
    uint64_t v67 = sub_100183098(&qword_1006457E8);
    memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v63, v64, v13);
LABEL_55:
  v11[v19[13]] = v12[v19[13]];
  uint64_t v68 = v19[14];
  v69 = &v11[v68];
  v70 = &v12[v68];
  int v71 = v15(&v11[v68], 1LL, v13);
  int v72 = v15(v70, 1LL, v13);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v69, v70, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v69, 0LL, 1LL, v13);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v72)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v69, v13);
LABEL_60:
    uint64_t v73 = sub_100183098(&qword_1006457E8);
    memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v69, v70, v13);
LABEL_61:
  uint64_t v74 = v19[15];
  uint64_t v75 = &v11[v74];
  v76 = &v12[v74];
  int v77 = v15(&v11[v74], 1LL, v13);
  int v78 = v15(v76, 1LL, v13);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v75, v76, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v75, 0LL, 1LL, v13);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v75, v13);
LABEL_66:
    uint64_t v79 = sub_100183098(&qword_1006457E8);
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v75, v76, v13);
LABEL_67:
  uint64_t v80 = v19[16];
  v81 = &v11[v80];
  uint64_t v82 = &v12[v80];
  int v83 = v15(&v11[v80], 1LL, v13);
  int v84 = v15(v82, 1LL, v13);
  if (v83)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v81, v82, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v81, 0LL, 1LL, v13);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v84)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v81, v13);
LABEL_72:
    uint64_t v85 = sub_100183098(&qword_1006457E8);
    memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v81, v82, v13);
LABEL_73:
  uint64_t v86 = v19[17];
  v87 = &v11[v86];
  uint64_t v88 = &v12[v86];
  int v89 = v15(&v11[v86], 1LL, v13);
  int v90 = v15(v88, 1LL, v13);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v87, v88, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v87, 0LL, 1LL, v13);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v87, v13);
LABEL_78:
    uint64_t v91 = sub_100183098(&qword_1006457E8);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v87, v88, v13);
LABEL_79:
  uint64_t v92 = v19[18];
  v93 = &v11[v92];
  uint64_t v94 = &v12[v92];
  int v95 = *(_DWORD *)v94;
  v93[4] = v94[4];
  *(_DWORD *)v93 = v95;
  v11[v19[19]] = v12[v19[19]];
  uint64_t v96 = v19[20];
  id v97 = &v11[v96];
  v98 = &v12[v96];
  *(void *)id v97 = *(void *)v98;
  v99 = (const char *)*((void *)v98 + 1);
  v100 = (const char *)*((void *)v97 + 1);
  *((void *)v97 + 1) = v99;
  *(void *)&double v101 = swift_bridgeObjectRetain(v99, v132, v134).n128_u64[0];
  *(void *)&double v102 = swift_bridgeObjectRelease(v100, v101).n128_u64[0];
  uint64_t v103 = v19[21];
  v104 = &v11[v103];
  v105 = &v12[v103];
  *(void *)v104 = *(void *)v105;
  v106 = (const char *)*((void *)v105 + 1);
  v107 = (const char *)*((void *)v104 + 1);
  *((void *)v104 + 1) = v106;
  *(void *)&double v108 = swift_bridgeObjectRetain(v106, v102).n128_u64[0];
  swift_bridgeObjectRelease(v107, v108);
  uint64_t v109 = v133[7];
  v110 = (uint64_t *)(a1 + v109);
  v111 = (uint64_t *)(v135 + v109);
  uint64_t v112 = *v111;
  unint64_t v113 = v111[1];
  sub_10019BA8C(*v111, v113);
  uint64_t v114 = *v110;
  unint64_t v115 = v110[1];
  uint64_t *v110 = v112;
  v110[1] = v113;
  sub_100189B20(v114, v115);
  uint64_t v116 = v133[8];
  v117 = (void *)(a1 + v116);
  v118 = (char *)(v135 + v116);
  LODWORD(v110) = v15((char *)(a1 + v116), 1LL, v13);
  int v119 = v15(v118, 1LL, v13);
  if ((_DWORD)v110)
  {
    if (!v119)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v117, v118, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v117, 0LL, 1LL, v13);
      goto LABEL_85;
    }

    goto LABEL_84;
  }

  if (v119)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v117, v13);
LABEL_84:
    uint64_t v120 = sub_100183098(&qword_1006457E8);
    memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v117, v118, v13);
LABEL_85:
  uint64_t v121 = v133[9];
  v122 = (void *)(a1 + v121);
  v123 = (char *)(v135 + v121);
  int v124 = v15((char *)(a1 + v121), 1LL, v13);
  int v125 = v15(v123, 1LL, v13);
  if (!v124)
  {
    if (!v125)
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 24))(v122, v123, v13);
      goto LABEL_91;
    }

    (*(void (**)(void *, uint64_t))(v14 + 8))(v122, v13);
    goto LABEL_90;
  }

  if (v125)
  {
LABEL_90:
    uint64_t v126 = sub_100183098(&qword_1006457E8);
    memcpy(v122, v123, *(void *)(*(void *)(v126 - 8) + 64LL));
    goto LABEL_91;
  }

  (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v122, v123, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v122, 0LL, 1LL, v13);
LABEL_91:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(a1 + v133[10], v135 + v133[10], v13);
  uint64_t v127 = v133[11];
  v128 = *(void **)(a1 + v127);
  v129 = *(void **)(v135 + v127);
  *(void *)(a1 + v127) = v129;
  id v130 = v129;

  *(_BYTE *)(a1 + v133[12]) = *(_BYTE *)(v135 + v133[12]);
  return a1;
}

uint64_t sub_100311D7C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  __int128 v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v76 = a3;
  if (v11(v8, 1LL, v9))
  {
    uint64_t v12 = sub_100183098(&qword_1006457E8);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0LL, 1LL, v9);
  }

  uint64_t v13 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v14 = v13[5];
  uint64_t v15 = &v7[v14];
  int v16 = &v8[v14];
  if (v11(&v8[v14], 1LL, v9))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0LL, 1LL, v9);
  }

  uint64_t v18 = v13[6];
  v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  if (v11(&v8[v18], 1LL, v9))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0LL, 1LL, v9);
  }

  uint64_t v22 = v13[7];
  int v23 = &v7[v22];
  int v24 = &v8[v22];
  if (v11(&v8[v22], 1LL, v9))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0LL, 1LL, v9);
  }

  uint64_t v26 = v13[8];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  if (v11(&v8[v26], 1LL, v9))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0LL, 1LL, v9);
  }

  uint64_t v30 = v13[9];
  uint64_t v31 = &v7[v30];
  uint64_t v32 = &v8[v30];
  if (v11(&v8[v30], 1LL, v9))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0LL, 1LL, v9);
  }

  uint64_t v34 = v13[10];
  int v35 = &v7[v34];
  int v36 = &v8[v34];
  if (v11(&v8[v34], 1LL, v9))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v35, v36, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0LL, 1LL, v9);
  }

  uint64_t v38 = v13[11];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  if (v11(&v8[v38], 1LL, v9))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v39, v40, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v39, 0LL, 1LL, v9);
  }

  uint64_t v42 = v13[12];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  if (v11(&v8[v42], 1LL, v9))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v43, v44, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v43, 0LL, 1LL, v9);
  }

  v7[v13[13]] = v8[v13[13]];
  uint64_t v46 = v13[14];
  int v47 = &v7[v46];
  int v48 = &v8[v46];
  if (v11(&v8[v46], 1LL, v9))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v48, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v47, 0LL, 1LL, v9);
  }

  uint64_t v50 = v13[15];
  uint64_t v51 = &v7[v50];
  uint64_t v52 = &v8[v50];
  if (v11(&v8[v50], 1LL, v9))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v51, 0LL, 1LL, v9);
  }

  uint64_t v54 = v13[16];
  uint64_t v55 = &v7[v54];
  uint64_t v56 = &v8[v54];
  if (v11(&v8[v54], 1LL, v9))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v55, v56, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v55, 0LL, 1LL, v9);
  }

  uint64_t v58 = v13[17];
  int v59 = &v7[v58];
  int v60 = &v8[v58];
  if (v11(&v8[v58], 1LL, v9))
  {
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v59, v60, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v59, 0LL, 1LL, v9);
  }

  uint64_t v62 = v13[18];
  uint64_t v63 = &v7[v62];
  uint64_t v64 = &v8[v62];
  *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
  v63[4] = v64[4];
  v7[v13[19]] = v8[v13[19]];
  *(_OWORD *)&v7[v13[20]] = *(_OWORD *)&v8[v13[20]];
  *(_OWORD *)&v7[v13[21]] = *(_OWORD *)&v8[v13[21]];
  uint64_t v65 = v76[8];
  *(_OWORD *)(a1 + v76[7]) = *(_OWORD *)(a2 + v76[7]);
  int v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  if (v11((char *)(a2 + v65), 1LL, v9))
  {
    uint64_t v68 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v66, v67, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v66, 0LL, 1LL, v9);
  }

  uint64_t v69 = v76[9];
  v70 = (void *)(a1 + v69);
  int v71 = (const void *)(a2 + v69);
  if (v11((char *)(a2 + v69), 1LL, v9))
  {
    uint64_t v72 = sub_100183098(&qword_1006457E8);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64LL));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + v76[10], a2 + v76[10], v9);
  }

  else
  {
    uint64_t v73 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v73(v70, v71, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v70, 0LL, 1LL, v9);
    v73((void *)(a1 + v76[10]), (const void *)(a2 + v76[10]), v9);
  }

  uint64_t v74 = v76[12];
  *(void *)(a1 + v76[11]) = *(void *)(a2 + v76[11]);
  *(_BYTE *)(a1 + v74) = *(_BYTE *)(a2 + v74);
  return a1;
}

uint64_t sub_100312524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(const char **)a1;
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease(v6);
  sub_10018709C((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 24);
  __int128 v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  uint64_t v123 = a3;
  uint64_t v125 = a2;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  int v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  int v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  int v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  uint64_t v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  int v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  uint64_t v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  int v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  int v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  uint64_t v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  int v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  int v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
      goto LABEL_79;
    }

    goto LABEL_78;
  }

  if (v87)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  int v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)int v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  v93 = &v8[v92];
  uint64_t v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  id v97 = (const char *)*((void *)v93 + 1);
  *(void *)v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v123, v125).n128_u64[0];
  uint64_t v99 = v16[21];
  v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  v104 = (const char *)*((void *)v100 + 1);
  *(void *)v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = v124[7];
  uint64_t v106 = *(void *)(a1 + v105);
  unint64_t v107 = *(void *)(a1 + v105 + 8);
  *(_OWORD *)(a1 + v105) = *(_OWORD *)(v126 + v105);
  sub_100189B20(v106, v107);
  uint64_t v108 = v124[8];
  uint64_t v109 = (void *)(a1 + v108);
  v110 = (char *)(v126 + v108);
  int v111 = v12((char *)(a1 + v108), 1LL, v10);
  int v112 = v12(v110, 1LL, v10);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v109, v110, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v109, 0LL, 1LL, v10);
      goto LABEL_85;
    }

    goto LABEL_84;
  }

  if (v112)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v109, v10);
LABEL_84:
    uint64_t v113 = sub_100183098(&qword_1006457E8);
    memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64LL));
    goto LABEL_85;
  }

  (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v109, v110, v10);
LABEL_85:
  uint64_t v114 = v124[9];
  unint64_t v115 = (void *)(a1 + v114);
  uint64_t v116 = (char *)(v126 + v114);
  int v117 = v12((char *)(a1 + v114), 1LL, v10);
  int v118 = v12(v116, 1LL, v10);
  if (!v117)
  {
    if (!v118)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 40))(v115, v116, v10);
      goto LABEL_91;
    }

    (*(void (**)(void *, uint64_t))(v11 + 8))(v115, v10);
    goto LABEL_90;
  }

  if (v118)
  {
LABEL_90:
    uint64_t v119 = sub_100183098(&qword_1006457E8);
    memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64LL));
    goto LABEL_91;
  }

  (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v115, v116, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v115, 0LL, 1LL, v10);
LABEL_91:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(a1 + v124[10], v126 + v124[10], v10);
  uint64_t v120 = v124[11];
  uint64_t v121 = *(void **)(a1 + v120);
  *(void *)(a1 + v120) = *(void *)(v126 + v120);

  *(_BYTE *)(a1 + v124[12]) = *(_BYTE *)(v126 + v124[12]);
  return a1;
}

uint64_t sub_100313114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100313120);
}

uint64_t sub_100313120(char *a1, uint64_t a2, int *a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[6];
    }

    else
    {
      uint64_t v12 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[8];
      }

      else
      {
        uint64_t v10 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a3[10];
      }
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_1003131E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003131F4);
}

char *sub_1003131F4(char *result, uint64_t a2, int a3, int *a4)
{
  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[6];
    }

    else
    {
      uint64_t v12 = sub_100183098(&qword_1006457E8);
      uint64_t v9 = *(void *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[8];
      }

      else
      {
        uint64_t v10 = type metadata accessor for Date(0LL);
        uint64_t v9 = *(void *)(v10 - 8);
        uint64_t v11 = a4[10];
      }
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_1003132B8(uint64_t a1)
{
  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[1] = "(";
  uint64_t v2 = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v8[2] = *(void *)(v2 - 8) + 64LL;
    v8[3] = &unk_1004D5258;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      uint64_t v9 = *(void *)(v4 - 8) + 64LL;
      uint64_t v10 = v9;
      uint64_t v6 = type metadata accessor for Date(319LL);
      if (v7 <= 0x3F)
      {
        uint64_t v11 = *(void *)(v6 - 8) + 64LL;
        uint64_t v12 = &unk_1004D5100;
        int v13 = &unk_1004D5118;
        swift_initStructMetadata(a1, 256LL, 9LL, v8, a1 + 16);
      }
    }
  }

uint64_t sub_10031338C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100313398);
}

uint64_t sub_10031339C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003133A8);
}

uint64_t sub_1003133AC(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "(";
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_1004D5258;
    v4[4] = &unk_1004D5100;
    v4[5] = &unk_1004D5118;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

ValueMetadata *_s14MacUnlockPhoneVMa()
{
  return &_s14MacUnlockPhoneVN;
}

char *sub_100313458(char *a1, uint64_t a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  unint64_t v5 = *(const char **)a2;
  *(void *)a1 = *(void *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)&v5[(v4 + 16LL) & ~(unint64_t)v4];
    swift_retain(v5);
  }

  else
  {
    uint64_t v8 = a2 + 8;
    __int128 v9 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 2) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(char *, uint64_t, uint64_t, __n128))(v9 - 8);
    __n128 v12 = swift_bridgeObjectRetain(v5);
    v11(a1 + 8, v8, v10, v12);
    uint64_t v13 = a3[6];
    int v14 = &a1[v13];
    uint64_t v15 = (char *)(a2 + v13);
    uint64_t v16 = type metadata accessor for Date(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    int v90 = a3;
    if (v18(v15, 1LL, v16))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
    }

    int v20 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
    uint64_t v21 = v20[5];
    uint64_t v22 = &v14[v21];
    uint64_t v23 = &v15[v21];
    if (v18(&v15[v21], 1LL, v16))
    {
      uint64_t v24 = sub_100183098(&qword_1006457E8);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v22, v23, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v22, 0LL, 1LL, v16);
    }

    uint64_t v25 = v20[6];
    int v26 = &v14[v25];
    int v27 = &v15[v25];
    if (v18(&v15[v25], 1LL, v16))
    {
      uint64_t v28 = sub_100183098(&qword_1006457E8);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v26, v27, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v26, 0LL, 1LL, v16);
    }

    uint64_t v29 = v20[7];
    uint64_t v30 = &v14[v29];
    uint64_t v31 = &v15[v29];
    if (v18(&v15[v29], 1LL, v16))
    {
      uint64_t v32 = sub_100183098(&qword_1006457E8);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v30, v31, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v30, 0LL, 1LL, v16);
    }

    uint64_t v33 = v20[8];
    uint64_t v34 = &v14[v33];
    uint64_t v35 = &v15[v33];
    if (v18(&v15[v33], 1LL, v16))
    {
      uint64_t v36 = sub_100183098(&qword_1006457E8);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v34, v35, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v34, 0LL, 1LL, v16);
    }

    uint64_t v37 = v20[9];
    int v38 = &v14[v37];
    int v39 = &v15[v37];
    if (v18(&v15[v37], 1LL, v16))
    {
      uint64_t v40 = sub_100183098(&qword_1006457E8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v38, v39, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v38, 0LL, 1LL, v16);
    }

    uint64_t v41 = v20[10];
    uint64_t v42 = &v14[v41];
    uint64_t v43 = &v15[v41];
    if (v18(&v15[v41], 1LL, v16))
    {
      uint64_t v44 = sub_100183098(&qword_1006457E8);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v42, v43, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v42, 0LL, 1LL, v16);
    }

    uint64_t v45 = v20[11];
    uint64_t v46 = &v14[v45];
    uint64_t v47 = &v15[v45];
    if (v18(&v15[v45], 1LL, v16))
    {
      uint64_t v48 = sub_100183098(&qword_1006457E8);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v46, v47, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v46, 0LL, 1LL, v16);
    }

    uint64_t v49 = v20[12];
    int v50 = &v14[v49];
    int v51 = &v15[v49];
    if (v18(&v15[v49], 1LL, v16))
    {
      uint64_t v52 = sub_100183098(&qword_1006457E8);
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v50, v51, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v50, 0LL, 1LL, v16);
    }

    v14[v20[13]] = v15[v20[13]];
    uint64_t v53 = v20[14];
    uint64_t v54 = &v14[v53];
    uint64_t v55 = &v15[v53];
    if (v18(&v15[v53], 1LL, v16))
    {
      uint64_t v56 = sub_100183098(&qword_1006457E8);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v54, v55, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v54, 0LL, 1LL, v16);
    }

    uint64_t v57 = v20[15];
    uint64_t v58 = &v14[v57];
    uint64_t v59 = &v15[v57];
    if (v18(&v15[v57], 1LL, v16))
    {
      uint64_t v60 = sub_100183098(&qword_1006457E8);
      memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v58, v59, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v58, 0LL, 1LL, v16);
    }

    uint64_t v61 = v20[16];
    int v62 = &v14[v61];
    int v63 = &v15[v61];
    if (v18(&v15[v61], 1LL, v16))
    {
      uint64_t v64 = sub_100183098(&qword_1006457E8);
      memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v62, v63, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v62, 0LL, 1LL, v16);
    }

    uint64_t v65 = v20[17];
    int v66 = &v14[v65];
    uint64_t v67 = &v15[v65];
    if (v18(&v15[v65], 1LL, v16))
    {
      uint64_t v68 = sub_100183098(&qword_1006457E8);
      memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v66, v67, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v66, 0LL, 1LL, v16);
    }

    uint64_t v69 = v20[18];
    uint64_t v70 = &v14[v69];
    uint64_t v71 = &v15[v69];
    *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
    v70[4] = v71[4];
    v14[v20[19]] = v15[v20[19]];
    uint64_t v72 = v20[20];
    uint64_t v73 = &v14[v72];
    int v74 = &v15[v72];
    int v75 = (const char *)*((void *)v74 + 1);
    *(void *)uint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    uint64_t v76 = v20[21];
    uint64_t v77 = &v14[v76];
    int v78 = &v15[v76];
    uint64_t v79 = (const char *)*((void *)v78 + 1);
    *(void *)uint64_t v77 = *(void *)v78;
    *((void *)v77 + 1) = v79;
    uint64_t v80 = v90[8];
    *(_DWORD *)&a1[v90[7]] = *(_DWORD *)(a2 + v90[7]);
    int v81 = (uint64_t *)&a1[v80];
    uint64_t v82 = *(void *)(a2 + v80);
    unint64_t v83 = *(void *)(a2 + v80 + 8);
    *(void *)&double v84 = swift_bridgeObjectRetain(v75).n128_u64[0];
    swift_bridgeObjectRetain(v79, v84);
    sub_10019BA8C(v82, v83);
    uint64_t *v81 = v82;
    v81[1] = v83;
    uint64_t v85 = v90[9];
    uint64_t v86 = v90[10];
    int v87 = *(void **)(a2 + v85);
    *(void *)&a1[v85] = v87;
    a1[v86] = *(_BYTE *)(a2 + v86);
    id v88 = v87;
  }

  return a1;
}

void sub_100313B84(const char **a1, int *a2)
{
  int v4 = a1 + 1;
  swift_bridgeObjectRelease(*a1);
  sub_10018709C(v4);
  unint64_t v5 = (char *)a1 + a2[6];
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  __int128 v9 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v10 = &v5[v9[5]];
  if (!v8(v10, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v11 = &v5[v9[6]];
  if (!v8(v11, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }
  __n128 v12 = &v5[v9[7]];
  if (!v8(v12, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  uint64_t v13 = &v5[v9[8]];
  if (!v8(v13, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  int v14 = &v5[v9[9]];
  if (!v8(v14, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }
  uint64_t v15 = &v5[v9[10]];
  if (!v8(v15, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  }
  uint64_t v16 = &v5[v9[11]];
  if (!v8(v16, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  }
  uint64_t v17 = &v5[v9[12]];
  if (!v8(v17, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v17, v6);
  }
  uint64_t v18 = &v5[v9[14]];
  if (!v8(v18, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }
  uint64_t v19 = &v5[v9[15]];
  if (!v8(v19, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  int v20 = &v5[v9[16]];
  if (!v8(v20, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  }
  uint64_t v21 = &v5[v9[17]];
  if (!v8(v21, 1LL, v6)) {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v6);
  }
  *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)&v5[v9[20] + 8]).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)&v5[v9[21] + 8], v22);
  sub_100189B20(*(uint64_t *)((char *)a1 + a2[8]), *(unint64_t *)((char *)a1 + a2[8] + 8));
}

uint64_t sub_100313E64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(const char **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v7 = a2 + 8;
  __int128 v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v8 - 8);
  __n128 v11 = swift_bridgeObjectRetain(v6);
  v10(a1 + 8, v7, v9, v11);
  uint64_t v89 = a3;
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)(a1 + v12);
  int v14 = (char *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1LL, v15))
  {
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  uint64_t v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v13[v20];
  double v22 = &v14[v20];
  if (v17(&v14[v20], 1LL, v15))
  {
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0LL, 1LL, v15);
  }

  uint64_t v24 = v19[6];
  uint64_t v25 = &v13[v24];
  int v26 = &v14[v24];
  if (v17(&v14[v24], 1LL, v15))
  {
    uint64_t v27 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v26, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0LL, 1LL, v15);
  }

  uint64_t v28 = v19[7];
  uint64_t v29 = &v13[v28];
  uint64_t v30 = &v14[v28];
  if (v17(&v14[v28], 1LL, v15))
  {
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v29, v30, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v29, 0LL, 1LL, v15);
  }

  uint64_t v32 = v19[8];
  uint64_t v33 = &v13[v32];
  uint64_t v34 = &v14[v32];
  if (v17(&v14[v32], 1LL, v15))
  {
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v33, v34, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v33, 0LL, 1LL, v15);
  }

  uint64_t v36 = v19[9];
  uint64_t v37 = &v13[v36];
  int v38 = &v14[v36];
  if (v17(&v14[v36], 1LL, v15))
  {
    uint64_t v39 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v37, v38, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v37, 0LL, 1LL, v15);
  }

  uint64_t v40 = v19[10];
  uint64_t v41 = &v13[v40];
  uint64_t v42 = &v14[v40];
  if (v17(&v14[v40], 1LL, v15))
  {
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v41, v42, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v41, 0LL, 1LL, v15);
  }

  uint64_t v44 = v19[11];
  uint64_t v45 = &v13[v44];
  uint64_t v46 = &v14[v44];
  if (v17(&v14[v44], 1LL, v15))
  {
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v46, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v45, 0LL, 1LL, v15);
  }

  uint64_t v48 = v19[12];
  uint64_t v49 = &v13[v48];
  int v50 = &v14[v48];
  if (v17(&v14[v48], 1LL, v15))
  {
    uint64_t v51 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v49, v50, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v49, 0LL, 1LL, v15);
  }

  v13[v19[13]] = v14[v19[13]];
  uint64_t v52 = v19[14];
  uint64_t v53 = &v13[v52];
  uint64_t v54 = &v14[v52];
  if (v17(&v14[v52], 1LL, v15))
  {
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v53, v54, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v53, 0LL, 1LL, v15);
  }

  uint64_t v56 = v19[15];
  uint64_t v57 = &v13[v56];
  uint64_t v58 = &v14[v56];
  if (v17(&v14[v56], 1LL, v15))
  {
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v57, v58, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v57, 0LL, 1LL, v15);
  }

  uint64_t v60 = v19[16];
  uint64_t v61 = &v13[v60];
  int v62 = &v14[v60];
  if (v17(&v14[v60], 1LL, v15))
  {
    uint64_t v63 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v61, v62, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v61, 0LL, 1LL, v15);
  }

  uint64_t v64 = v19[17];
  uint64_t v65 = &v13[v64];
  int v66 = &v14[v64];
  if (v17(&v14[v64], 1LL, v15))
  {
    uint64_t v67 = sub_100183098(&qword_1006457E8);
    memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v65, v66, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v65, 0LL, 1LL, v15);
  }

  uint64_t v68 = v19[18];
  uint64_t v69 = &v13[v68];
  uint64_t v70 = &v14[v68];
  *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  v13[v19[19]] = v14[v19[19]];
  uint64_t v71 = v19[20];
  uint64_t v72 = &v13[v71];
  uint64_t v73 = &v14[v71];
  int v74 = (const char *)*((void *)v73 + 1);
  *(void *)uint64_t v72 = *(void *)v73;
  *((void *)v72 + 1) = v74;
  uint64_t v75 = v19[21];
  uint64_t v76 = &v13[v75];
  uint64_t v77 = &v14[v75];
  int v78 = (const char *)*((void *)v77 + 1);
  *(void *)uint64_t v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  uint64_t v79 = v89[8];
  *(_DWORD *)(a1 + v89[7]) = *(_DWORD *)(a2 + v89[7]);
  uint64_t v80 = (uint64_t *)(a1 + v79);
  uint64_t v81 = *(void *)(a2 + v79);
  unint64_t v82 = *(void *)(a2 + v79 + 8);
  *(void *)&double v83 = swift_bridgeObjectRetain(v74).n128_u64[0];
  swift_bridgeObjectRetain(v78, v83);
  sub_10019BA8C(v81, v82);
  uint64_t *v80 = v81;
  v80[1] = v82;
  uint64_t v84 = v89[9];
  uint64_t v85 = v89[10];
  uint64_t v86 = *(void **)(a2 + v84);
  *(void *)(a1 + v84) = v86;
  *(_BYTE *)(a1 + v85) = *(_BYTE *)(a2 + v85);
  id v87 = v86;
  return a1;
}

uint64_t sub_10031456C(uint64_t a1, const char **a2, uint64_t a3)
{
  uint64_t v7 = a2 + 1;
  uint64_t v6 = *a2;
  __int128 v8 = *(const char **)a1;
  *(void *)a1 = *a2;
  *(void *)&double v9 = swift_bridgeObjectRetain(v6).n128_u64[0];
  swift_bridgeObjectRelease(v8, v9);
  sub_10019DB24((void *)(a1 + 8), v7);
  uint64_t v121 = a3;
  uint64_t v123 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  __n128 v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1LL, v13);
  int v17 = v15(v12, 1LL, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0LL, 1LL, v13);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v11[v20];
  double v22 = &v12[v20];
  int v23 = v15(&v11[v20], 1LL, v13);
  int v24 = v15(v22, 1LL, v13);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0LL, 1LL, v13);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
LABEL_12:
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v21, v22, v13);
LABEL_13:
  uint64_t v26 = v19[6];
  uint64_t v27 = &v11[v26];
  uint64_t v28 = &v12[v26];
  int v29 = v15(&v11[v26], 1LL, v13);
  int v30 = v15(v28, 1LL, v13);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v27, v28, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0LL, 1LL, v13);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v27, v13);
LABEL_18:
    uint64_t v31 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v27, v28, v13);
LABEL_19:
  uint64_t v32 = v19[7];
  uint64_t v33 = &v11[v32];
  uint64_t v34 = &v12[v32];
  int v35 = v15(&v11[v32], 1LL, v13);
  int v36 = v15(v34, 1LL, v13);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v34, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v33, 0LL, 1LL, v13);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
LABEL_24:
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v33, v34, v13);
LABEL_25:
  uint64_t v38 = v19[8];
  uint64_t v39 = &v11[v38];
  uint64_t v40 = &v12[v38];
  int v41 = v15(&v11[v38], 1LL, v13);
  int v42 = v15(v40, 1LL, v13);
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v39, v40, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v39, 0LL, 1LL, v13);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v42)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v13);
LABEL_30:
    uint64_t v43 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v39, v40, v13);
LABEL_31:
  uint64_t v44 = v19[9];
  uint64_t v45 = &v11[v44];
  uint64_t v46 = &v12[v44];
  int v47 = v15(&v11[v44], 1LL, v13);
  int v48 = v15(v46, 1LL, v13);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v45, v46, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v45, 0LL, 1LL, v13);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v45, v13);
LABEL_36:
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v45, v46, v13);
LABEL_37:
  uint64_t v50 = v19[10];
  uint64_t v51 = &v11[v50];
  uint64_t v52 = &v12[v50];
  int v53 = v15(&v11[v50], 1LL, v13);
  int v54 = v15(v52, 1LL, v13);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v51, v52, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v51, 0LL, 1LL, v13);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v51, v13);
LABEL_42:
    uint64_t v55 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v51, v52, v13);
LABEL_43:
  uint64_t v56 = v19[11];
  uint64_t v57 = &v11[v56];
  uint64_t v58 = &v12[v56];
  int v59 = v15(&v11[v56], 1LL, v13);
  int v60 = v15(v58, 1LL, v13);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v57, v58, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v57, 0LL, 1LL, v13);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v57, v13);
LABEL_48:
    uint64_t v61 = sub_100183098(&qword_1006457E8);
    memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v57, v58, v13);
LABEL_49:
  uint64_t v62 = v19[12];
  uint64_t v63 = &v11[v62];
  uint64_t v64 = &v12[v62];
  int v65 = v15(&v11[v62], 1LL, v13);
  int v66 = v15(v64, 1LL, v13);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v63, v64, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v63, 0LL, 1LL, v13);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v66)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v63, v13);
LABEL_54:
    uint64_t v67 = sub_100183098(&qword_1006457E8);
    memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v63, v64, v13);
LABEL_55:
  v11[v19[13]] = v12[v19[13]];
  uint64_t v68 = v19[14];
  uint64_t v69 = &v11[v68];
  uint64_t v70 = &v12[v68];
  int v71 = v15(&v11[v68], 1LL, v13);
  int v72 = v15(v70, 1LL, v13);
  if (v71)
  {
    if (!v72)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v69, v70, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v69, 0LL, 1LL, v13);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v72)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v69, v13);
LABEL_60:
    uint64_t v73 = sub_100183098(&qword_1006457E8);
    memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v69, v70, v13);
LABEL_61:
  uint64_t v74 = v19[15];
  uint64_t v75 = &v11[v74];
  uint64_t v76 = &v12[v74];
  int v77 = v15(&v11[v74], 1LL, v13);
  int v78 = v15(v76, 1LL, v13);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v75, v76, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v75, 0LL, 1LL, v13);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v78)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v75, v13);
LABEL_66:
    uint64_t v79 = sub_100183098(&qword_1006457E8);
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v75, v76, v13);
LABEL_67:
  uint64_t v80 = v19[16];
  uint64_t v81 = &v11[v80];
  unint64_t v82 = &v12[v80];
  int v83 = v15(&v11[v80], 1LL, v13);
  int v84 = v15(v82, 1LL, v13);
  if (v83)
  {
    if (!v84)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v81, v82, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v81, 0LL, 1LL, v13);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v84)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v81, v13);
LABEL_72:
    uint64_t v85 = sub_100183098(&qword_1006457E8);
    memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v81, v82, v13);
LABEL_73:
  uint64_t v86 = v19[17];
  id v87 = &v11[v86];
  id v88 = &v12[v86];
  int v89 = v15(&v11[v86], 1LL, v13);
  int v90 = v15(v88, 1LL, v13);
  if (!v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v87, v88, v13);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v87, v13);
    goto LABEL_78;
  }

  if (v90)
  {
LABEL_78:
    uint64_t v91 = sub_100183098(&qword_1006457E8);
    memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v87, v88, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v87, 0LL, 1LL, v13);
LABEL_79:
  uint64_t v92 = v19[18];
  v93 = &v11[v92];
  uint64_t v94 = &v12[v92];
  int v95 = *(_DWORD *)v94;
  v93[4] = v94[4];
  *(_DWORD *)v93 = v95;
  v11[v19[19]] = v12[v19[19]];
  uint64_t v96 = v19[20];
  id v97 = &v11[v96];
  double v98 = &v12[v96];
  *(void *)id v97 = *(void *)v98;
  uint64_t v99 = (const char *)*((void *)v98 + 1);
  v100 = (const char *)*((void *)v97 + 1);
  *((void *)v97 + 1) = v99;
  *(void *)&double v101 = swift_bridgeObjectRetain(v99, v121, v123).n128_u64[0];
  *(void *)&double v102 = swift_bridgeObjectRelease(v100, v101).n128_u64[0];
  uint64_t v103 = v19[21];
  v104 = &v11[v103];
  uint64_t v105 = &v12[v103];
  *(void *)v104 = *(void *)v105;
  uint64_t v106 = (const char *)*((void *)v105 + 1);
  unint64_t v107 = (const char *)*((void *)v104 + 1);
  *((void *)v104 + 1) = v106;
  *(void *)&double v108 = swift_bridgeObjectRetain(v106, v102).n128_u64[0];
  swift_bridgeObjectRelease(v107, v108);
  *(_DWORD *)(a1 + v122[7]) = *(_DWORD *)(v124 + v122[7]);
  uint64_t v109 = v122[8];
  v110 = (uint64_t *)(a1 + v109);
  int v111 = (uint64_t *)(v124 + v109);
  uint64_t v112 = *v111;
  unint64_t v113 = v111[1];
  sub_10019BA8C(*v111, v113);
  uint64_t v114 = *v110;
  unint64_t v115 = v110[1];
  uint64_t *v110 = v112;
  v110[1] = v113;
  sub_100189B20(v114, v115);
  uint64_t v116 = v122[9];
  int v117 = *(void **)(a1 + v116);
  int v118 = *(void **)(v124 + v116);
  *(void *)(a1 + v116) = v118;
  id v119 = v118;

  *(_BYTE *)(a1 + v122[10]) = *(_BYTE *)(v124 + v122[10]);
  return a1;
}

uint64_t sub_100315018(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a3[6];
  uint64_t v6 = (char *)(a1 + v5);
  uint64_t v7 = (char *)(a2 + v5);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1LL, v8))
  {
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0LL, 1LL, v8);
  }

  uint64_t v12 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v6[v13];
  uint64_t v15 = &v7[v13];
  if (v10(&v7[v13], 1LL, v8))
  {
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v15, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0LL, 1LL, v8);
  }

  uint64_t v17 = v12[6];
  uint64_t v18 = &v6[v17];
  uint64_t v19 = &v7[v17];
  if (v10(&v7[v17], 1LL, v8))
  {
    uint64_t v20 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v18, v19, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0LL, 1LL, v8);
  }

  uint64_t v21 = v12[7];
  double v22 = &v6[v21];
  int v23 = &v7[v21];
  if (v10(&v7[v21], 1LL, v8))
  {
    uint64_t v24 = sub_100183098(&qword_1006457E8);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v22, v23, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v22, 0LL, 1LL, v8);
  }

  uint64_t v25 = v12[8];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  if (v10(&v7[v25], 1LL, v8))
  {
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v27, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v26, 0LL, 1LL, v8);
  }

  uint64_t v29 = v12[9];
  int v30 = &v6[v29];
  uint64_t v31 = &v7[v29];
  if (v10(&v7[v29], 1LL, v8))
  {
    uint64_t v32 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v30, v31, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v30, 0LL, 1LL, v8);
  }

  uint64_t v33 = v12[10];
  uint64_t v34 = &v6[v33];
  int v35 = &v7[v33];
  if (v10(&v7[v33], 1LL, v8))
  {
    uint64_t v36 = sub_100183098(&qword_1006457E8);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v34, v35, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v34, 0LL, 1LL, v8);
  }

  uint64_t v37 = v12[11];
  uint64_t v38 = &v6[v37];
  uint64_t v39 = &v7[v37];
  if (v10(&v7[v37], 1LL, v8))
  {
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v38, v39, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v38, 0LL, 1LL, v8);
  }

  uint64_t v41 = v12[12];
  int v42 = &v6[v41];
  uint64_t v43 = &v7[v41];
  if (v10(&v7[v41], 1LL, v8))
  {
    uint64_t v44 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v42, v43, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v42, 0LL, 1LL, v8);
  }

  v6[v12[13]] = v7[v12[13]];
  uint64_t v45 = v12[14];
  uint64_t v46 = &v6[v45];
  int v47 = &v7[v45];
  if (v10(&v7[v45], 1LL, v8))
  {
    uint64_t v48 = sub_100183098(&qword_1006457E8);
    memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v47, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v46, 0LL, 1LL, v8);
  }

  uint64_t v49 = v12[15];
  uint64_t v50 = &v6[v49];
  uint64_t v51 = &v7[v49];
  if (v10(&v7[v49], 1LL, v8))
  {
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v51, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v50, 0LL, 1LL, v8);
  }

  uint64_t v53 = v12[16];
  int v54 = &v6[v53];
  uint64_t v55 = &v7[v53];
  if (v10(&v7[v53], 1LL, v8))
  {
    uint64_t v56 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v54, v55, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v54, 0LL, 1LL, v8);
  }

  uint64_t v57 = v12[17];
  uint64_t v58 = &v6[v57];
  int v59 = &v7[v57];
  if (v10(&v7[v57], 1LL, v8))
  {
    uint64_t v60 = sub_100183098(&qword_1006457E8);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v58, v59, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v58, 0LL, 1LL, v8);
  }

  uint64_t v61 = v12[18];
  uint64_t v62 = &v6[v61];
  uint64_t v63 = &v7[v61];
  *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
  v62[4] = v63[4];
  v6[v12[19]] = v7[v12[19]];
  *(_OWORD *)&v6[v12[20]] = *(_OWORD *)&v7[v12[20]];
  *(_OWORD *)&v6[v12[21]] = *(_OWORD *)&v7[v12[21]];
  uint64_t v64 = a3[8];
  *(_DWORD *)(a1 + a3[7]) = *(_DWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v64) = *(_OWORD *)(a2 + v64);
  uint64_t v65 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v65) = *(_BYTE *)(a2 + v65);
  return a1;
}

uint64_t sub_1003156D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(const char **)a1;
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease(v6);
  sub_10018709C((void *)(a1 + 8));
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v111 = a3;
  uint64_t v113 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = (int *)type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  uint64_t v17 = v16[5];
  uint64_t v18 = &v8[v17];
  uint64_t v19 = &v9[v17];
  int v20 = v12(&v8[v17], 1LL, v10);
  int v21 = v12(v19, 1LL, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0LL, 1LL, v10);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100183098(&qword_1006457E8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = v16[6];
  uint64_t v24 = &v8[v23];
  uint64_t v25 = &v9[v23];
  int v26 = v12(&v8[v23], 1LL, v10);
  int v27 = v12(v25, 1LL, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0LL, 1LL, v10);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100183098(&qword_1006457E8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = v16[7];
  int v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  int v32 = v12(&v8[v29], 1LL, v10);
  int v33 = v12(v31, 1LL, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0LL, 1LL, v10);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100183098(&qword_1006457E8);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = v16[8];
  uint64_t v36 = &v8[v35];
  uint64_t v37 = &v9[v35];
  int v38 = v12(&v8[v35], 1LL, v10);
  int v39 = v12(v37, 1LL, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0LL, 1LL, v10);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100183098(&qword_1006457E8);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = v16[9];
  int v42 = &v8[v41];
  uint64_t v43 = &v9[v41];
  int v44 = v12(&v8[v41], 1LL, v10);
  int v45 = v12(v43, 1LL, v10);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0LL, 1LL, v10);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
LABEL_36:
    uint64_t v46 = sub_100183098(&qword_1006457E8);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
LABEL_37:
  uint64_t v47 = v16[10];
  uint64_t v48 = &v8[v47];
  uint64_t v49 = &v9[v47];
  int v50 = v12(&v8[v47], 1LL, v10);
  int v51 = v12(v49, 1LL, v10);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v48, v49, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v48, 0LL, 1LL, v10);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
LABEL_42:
    uint64_t v52 = sub_100183098(&qword_1006457E8);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v48, v49, v10);
LABEL_43:
  uint64_t v53 = v16[11];
  int v54 = &v8[v53];
  uint64_t v55 = &v9[v53];
  int v56 = v12(&v8[v53], 1LL, v10);
  int v57 = v12(v55, 1LL, v10);
  if (v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v54, v55, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v54, 0LL, 1LL, v10);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v57)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v54, v10);
LABEL_48:
    uint64_t v58 = sub_100183098(&qword_1006457E8);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v54, v55, v10);
LABEL_49:
  uint64_t v59 = v16[12];
  uint64_t v60 = &v8[v59];
  uint64_t v61 = &v9[v59];
  int v62 = v12(&v8[v59], 1LL, v10);
  int v63 = v12(v61, 1LL, v10);
  if (v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v61, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v60, 0LL, 1LL, v10);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v60, v10);
LABEL_54:
    uint64_t v64 = sub_100183098(&qword_1006457E8);
    memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v60, v61, v10);
LABEL_55:
  v8[v16[13]] = v9[v16[13]];
  uint64_t v65 = v16[14];
  int v66 = &v8[v65];
  uint64_t v67 = &v9[v65];
  int v68 = v12(&v8[v65], 1LL, v10);
  int v69 = v12(v67, 1LL, v10);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v66, v67, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v66, 0LL, 1LL, v10);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v66, v10);
LABEL_60:
    uint64_t v70 = sub_100183098(&qword_1006457E8);
    memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v66, v67, v10);
LABEL_61:
  uint64_t v71 = v16[15];
  int v72 = &v8[v71];
  uint64_t v73 = &v9[v71];
  int v74 = v12(&v8[v71], 1LL, v10);
  int v75 = v12(v73, 1LL, v10);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v72, v73, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v72, 0LL, 1LL, v10);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v75)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v72, v10);
LABEL_66:
    uint64_t v76 = sub_100183098(&qword_1006457E8);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v72, v73, v10);
LABEL_67:
  uint64_t v77 = v16[16];
  int v78 = &v8[v77];
  uint64_t v79 = &v9[v77];
  int v80 = v12(&v8[v77], 1LL, v10);
  int v81 = v12(v79, 1LL, v10);
  if (v80)
  {
    if (!v81)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v78, v79, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v78, 0LL, 1LL, v10);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v81)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v78, v10);
LABEL_72:
    uint64_t v82 = sub_100183098(&qword_1006457E8);
    memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v78, v79, v10);
LABEL_73:
  uint64_t v83 = v16[17];
  int v84 = &v8[v83];
  uint64_t v85 = &v9[v83];
  int v86 = v12(&v8[v83], 1LL, v10);
  int v87 = v12(v85, 1LL, v10);
  if (!v86)
  {
    if (!v87)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v84, v85, v10);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v84, v10);
    goto LABEL_78;
  }

  if (v87)
  {
LABEL_78:
    uint64_t v88 = sub_100183098(&qword_1006457E8);
    memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v84, v85, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v84, 0LL, 1LL, v10);
LABEL_79:
  uint64_t v89 = v16[18];
  int v90 = &v8[v89];
  uint64_t v91 = &v9[v89];
  *(_DWORD *)int v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  v8[v16[19]] = v9[v16[19]];
  uint64_t v92 = v16[20];
  v93 = &v8[v92];
  uint64_t v94 = &v9[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  id v97 = (const char *)*((void *)v93 + 1);
  *(void *)v93 = v96;
  *((void *)v93 + 1) = v95;
  *(void *)&double v98 = swift_bridgeObjectRelease(v97, v111, v113).n128_u64[0];
  uint64_t v99 = v16[21];
  v100 = &v8[v99];
  double v101 = &v9[v99];
  uint64_t v103 = *(void *)v101;
  uint64_t v102 = *((void *)v101 + 1);
  v104 = (const char *)*((void *)v100 + 1);
  *(void *)v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease(v104, v98);
  uint64_t v105 = v112[8];
  *(_DWORD *)(a1 + v112[7]) = *(_DWORD *)(v114 + v112[7]);
  uint64_t v106 = *(void *)(a1 + v105);
  unint64_t v107 = *(void *)(a1 + v105 + 8);
  *(_OWORD *)(a1 + v105) = *(_OWORD *)(v114 + v105);
  sub_100189B20(v106, v107);
  uint64_t v108 = v112[9];
  uint64_t v109 = *(void **)(a1 + v108);
  *(void *)(a1 + v108) = *(void *)(v114 + v108);

  *(_BYTE *)(a1 + v112[10]) = *(_BYTE *)(v114 + v112[10]);
  return a1;
}

uint64_t sub_100316148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100316154);
}

uint64_t sub_100316158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100316164);
}

uint64_t sub_100316168(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "(";
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = (char *)&value witness table for Builtin.Int32 + 64;
    v4[4] = &unk_1004D5258;
    v4[5] = &unk_1004D5100;
    void v4[6] = &unk_1004D5118;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100316214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100316220);
}

uint64_t sub_100316224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100316230);
}

uint64_t sub_100316234(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = "(";
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_1004D52D0;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1003162C4(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for SFInterventionWorkflow.SprinboardSettings(0LL);
  v1[3] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[4] = v3;
  v1[5] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100316324, 0LL, 0LL);
}

uint64_t sub_100316324()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = *(uint64_t (**)(uint64_t, void, uint64_t))(v2 + 104);
  uint64_t v5 = v4(v1, enum case for SFInterventionWorkflow.SprinboardSettings.interventionShouldContinue(_:), v3);
  SFInterventionWorkflow.SprinboardSettings.rawValue.getter(v5);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v1, v3);
  uint64_t v7 = v4(v1, enum case for SFInterventionWorkflow.SprinboardSettings.interventionReply(_:), v3);
  SFInterventionWorkflow.SprinboardSettings.rawValue.getter(v7);
  v6(v1, v3);
  if (qword_100644178 != -1) {
    swift_once(&qword_100644178, sub_1003164B4);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_10064E848);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.error.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v10,  v11,  "UserSafety unsupported on this platform. Accepting by default.",  v12,  2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 16);

  uint64_t v15 = enum case for SFInterventionResponse.accept(_:);
  uint64_t v16 = type metadata accessor for SFInterventionResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104LL))(v14, v15, v16);
  swift_task_dealloc(v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003164A0(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

uint64_t sub_1003164B4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064E848);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064E848);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100316544(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 40) = a6;
  *(void *)(v7 + 48) = a7;
  *(void *)(v7 + 32) = a5;
  *(_BYTE *)(v7 + 128) = a4;
  uint64_t v8 = type metadata accessor for SFInterventionResponse(0LL);
  *(void *)(v7 + 56) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v7 + 64) = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v7 + 72) = swift_task_alloc(v10);
  *(void *)(v7 + 80) = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for SFInterventionWorkflow(0LL);
  *(void *)(v7 + 88) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v7 + 96) = v12;
  *(void *)(v7 + 104) = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1003165E4, 0LL, 0LL);
}

uint64_t sub_1003165E4()
{
  if (*(_BYTE *)(v0 + 128)) {
    uint64_t v1 = (unsigned int *)&enum case for SFInterventionWorkflow.send(_:);
  }
  else {
    uint64_t v1 = (unsigned int *)&enum case for SFInterventionWorkflow.receive(_:);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 96) + 104LL))( *(void *)(v0 + 104),  *v1,  *(void *)(v0 + 88));
  uint64_t v2 = (void *)swift_task_alloc(dword_10064E89C);
  *(void *)(v0 + 112) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100316660;
  return sub_1003162C4(*(void *)(v0 + 80));
}

uint64_t sub_100316660()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112LL);
  *(void *)(*(void *)v1 + 120LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_1003167CC;
  }
  else {
    uint64_t v3 = sub_1003166C4;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_1003166C4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v1, *(void *)(v0 + 80), v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  if (v4 != enum case for SFInterventionResponse.accept(_:) && v4 != enum case for SFInterventionResponse.reject(_:)) {
    return _diagnoseUnexpectedEnumCase<A>(type:)(*(void *)(v0 + 56), *(void *)(v0 + 56));
  }
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 64);
  (*(void (**)(BOOL))(v0 + 40))(v4 == enum case for SFInterventionResponse.accept(_:));
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v13);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003167CC()
{
  if (qword_100644178 != -1) {
    swift_once(&qword_100644178, sub_1003164B4);
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064E848);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  int v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 120);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)(v0 + 16) = v7;
    swift_errorRetain(v7);
    uint64_t v10 = sub_100183098(&qword_100645710);
    uint64_t v11 = String.init<A>(describing:)(v0 + 16, v10);
    uint64_t v13 = (const char *)v12;
    *(void *)(v0 + 24) = sub_10018CDB4(v11, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 24, v0 + 32, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v13, v18);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Intervention UI failed {error: %s}", v8, 0xCu);
    swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 120));
    swift_errorRelease(v7);
  }

  uint64_t v14 = *(void *)(v0 + 120);
  (*(void (**)(void))(v0 + 40))(0LL);
  swift_errorRelease(v14);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 104));
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropUserSafetyInterventionAlert()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary36SDAirDropUserSafetyInterventionAlert);
}

uint64_t sub_100316B74()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100316B98(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16LL))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_100316BAC()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100316BE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(_BYTE *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc(dword_10064E88C);
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1001943E8;
  return sub_100316544(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_100316C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[24] = a4;
  v5[25] = v4;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  uint64_t v6 = sub_100183098(&qword_10064A1B8);
  v5[26] = v6;
  v5[27] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064A1A0);
  v5[28] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100646560);
  v5[29] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropSend.Failure(0LL);
  v5[30] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[31] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[32] = swift_task_alloc(v11);
  v5[33] = swift_task_alloc(v11);
  v5[34] = swift_task_alloc(v11);
  v5[35] = swift_task_alloc(v11);
  uint64_t v12 = sub_100183098(&qword_10064EA18);
  v5[36] = swift_task_alloc((*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = _s15EndpointFailureVMa(0LL);
  v5[37] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v5[38] = v14;
  v5[39] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_100649F58);
  v5[40] = swift_task_alloc((*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_10064EA20);
  v5[41] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v5[42] = v17;
  v5[43] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v18 = (*(void *)(*(void *)(sub_100183098(&qword_10064A188) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[44] = swift_task_alloc(v18);
  v5[45] = swift_task_alloc(v18);
  v5[46] = swift_task_alloc(v18);
  v5[47] = swift_task_alloc(v18);
  uint64_t v19 = sub_100183098(&qword_10064A1A8);
  v5[48] = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  v5[49] = v20;
  v5[50] = swift_task_alloc((*(void *)(v20 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100183098(&qword_10064EA28);
  v5[51] = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  v5[52] = v22;
  unint64_t v23 = (*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[53] = swift_task_alloc(v23);
  v5[54] = swift_task_alloc(v23);
  return swift_task_switch(sub_100316EC0, v4, 0LL);
}

uint64_t sub_100316EC0()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v59 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner);
  uint64_t v4 = *(void *)(*sub_10019A708( (void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner),  *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner + 24))
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
  *(void *)(v0 + 128) = v4;
  uint64_t v5 = swift_allocObject(&unk_1005DAD90, 24LL, 7LL);
  swift_weakInit(v5 + 16);
  swift_retain(v4);
  uint64_t v6 = sub_100183098(&qword_100648588);
  unint64_t v7 = sub_10031CC84();
  uint64_t v8 = Publisher<>.sink(receiveValue:)(sub_10031CC4C, v5, v6, v7);
  *(void *)(v0 + 440) = v8;
  swift_release(v5);
  swift_release(*(void *)(v0 + 128));
  uint64_t v9 = *(void *)(*sub_10019A708(v3, v3[3])
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
  *(void *)(v0 + 152) = v9;
  uint64_t v10 = swift_allocObject(&unk_1005DAD90, 24LL, 7LL);
  swift_weakInit(v10 + 16);
  swift_retain(v9);
  uint64_t v11 = Publisher<>.sink(receiveValue:)(sub_10031CCD0, v10, v6, v7);
  *(void *)(v0 + 448) = v11;
  swift_release(v10);
  swift_release(*(void *)(v0 + 152));
  uint64_t v12 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  *(void *)(v0 + 456) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  uint64_t v13 = v2 + v12;
  __n128 v14 = swift_beginAccess(v2 + v12, v0 + 96, 0LL, 0LL);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v1 + 48);
  *(void *)(v0 + 464) = v15;
  if (v15(v13, 1LL, v59, v14))
  {
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v17 = *(void *)(v0 + 248);
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v19 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v16, v19, 0LL, 0LL);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v17 + 104))( v20,  enum case for SFAirDropSend.Failure.badRequest(_:),  v16);
    swift_willThrow(v21);
    sub_1003195E0(v8, v11, v18);
    uint64_t v22 = *(void *)(v0 + 440);
    uint64_t v24 = *(void *)(v0 + 424);
    uint64_t v23 = *(void *)(v0 + 432);
    uint64_t v25 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 368);
    uint64_t v26 = *(void *)(v0 + 376);
    uint64_t v29 = *(void *)(v0 + 352);
    uint64_t v28 = *(void *)(v0 + 360);
    uint64_t v30 = *(void *)(v0 + 344);
    uint64_t v46 = *(void *)(v0 + 320);
    uint64_t v47 = *(void *)(v0 + 312);
    uint64_t v48 = *(void *)(v0 + 288);
    uint64_t v49 = *(void *)(v0 + 280);
    uint64_t v50 = *(void *)(v0 + 272);
    uint64_t v51 = *(void *)(v0 + 264);
    uint64_t v53 = *(void *)(v0 + 256);
    uint64_t v55 = *(void *)(v0 + 232);
    uint64_t v56 = *(void *)(v0 + 224);
    uint64_t v58 = *(void *)(v0 + 216);
    swift_release(*(void *)(v0 + 448));
    swift_release(v22);
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v33 = *(void *)(v0 + 424);
    uint64_t v32 = *(void *)(v0 + 432);
    uint64_t v35 = *(void *)(v0 + 408);
    uint64_t v34 = *(void *)(v0 + 416);
    uint64_t v36 = *(void *)(v0 + 392);
    uint64_t v37 = *(void *)(v0 + 400);
    uint64_t v38 = *(void *)(v0 + 384);
    uint64_t v54 = *(void *)(v0 + 376);
    uint64_t v39 = *(void *)(v0 + 248);
    uint64_t v52 = *(void *)(v0 + 240);
    uint64_t v57 = *(void *)(v0 + 200);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    *(void *)(v0 + 472) = v40;
    v40(v37, v13, v38);
    SFProgressContinuation.task.getter(v38);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    *(void *)(v0 + 480) = v41;
    v41(v37, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v32, v33, v35);
    int v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56);
    *(void *)(v0 + 488) = v42;
    v42(v54, 1LL, 1LL, v52);
    SFProgressTask.makeAsyncIterator()(v35);
    uint64_t v43 = sub_100183F14(&qword_10064EA38, type metadata accessor for SDAirDropAskFanoutHelper, (uint64_t)&unk_1004D55C8);
    uint64_t v44 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_endpointService;
    *(void *)(v0 + 496) = v43;
    *(void *)(v0 + 504) = v44;
    int v45 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 512) = v45;
    void *v45 = v0;
    v45[1] = sub_100317318;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 144, v57, v43, *(void *)(v0 + 328), v0 + 120);
  }

uint64_t sub_100317318()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 512));
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = sub_1003184B8;
  }

  else
  {
    *(_DWORD *)(v2 + 560) = enum case for SFAirDropSend.Failure.unexpected(_:);
    *(_DWORD *)(v2 + 564) = enum case for SFAirDropSend.Failure.resolveFailure(_:);
    *(_DWORD *)(v2 + 568) = enum case for SFAirDropSend.Failure.receiverDeclined(_:);
    *(_DWORD *)(v2 + 572) = enum case for SFAirDropSend.Failure.unsupportedConnection(_:);
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = sub_1003173BC;
  }

  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_1003173BC()
{
  uint64_t v2 = v0 + 144;
  uint64_t v1 = *(void *)(v0 + 144);
  *(void *)(v0 + 520) = v1;
  if (!v1) {
    goto LABEL_36;
  }
  if (v1 == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 336) + 8LL))(*(void *)(v0 + 344), *(void *)(v0 + 328));
    uint64_t v3 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(void *)(v0 + 544) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10031817C;
    return SFProgressTask.finalValue.getter(*(void *)(v0 + 216), *(void *)(v0 + 408));
  }

  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 304);
  uint64_t v8 = *(void *)(v0 + 288);
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL);
  v10(v5, 1LL, 1LL, v9);
  *(void *)(v0 + 160) = v1;
  swift_errorRetain(v1);
  swift_errorRetain(v1);
  uint64_t v11 = sub_100183098(&qword_100645710);
  int v12 = swift_dynamicCast(v8, v0 + 160, v11, v6, 6LL);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v12)
  {
    uint64_t v14 = *(void *)(v0 + 376);
    uint64_t v16 = *(void *)(v0 + 312);
    uint64_t v15 = *(void *)(v0 + 320);
    uint64_t v18 = *(void *)(v0 + 288);
    uint64_t v17 = *(void *)(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 240);
    uint64_t v112 = *(void *)(v0 + 248);
    unint64_t v115 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 488);
    v13(v18, 0LL, 1LL, v17);
    sub_100187100(v15, &qword_100649F58);
    sub_100187100(v14, &qword_10064A188);
    sub_1001A4B40(v18, v16, _s15EndpointFailureVMa);
    sub_1001A4B40(v16, v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    v10(v15, 0LL, 1LL, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32))(v14, v16 + *(int *)(v17 + 20), v19);
    uint64_t v20 = v19;
    uint64_t v2 = v0 + 144;
    v115(v14, 0LL, 1LL, v20);
  }

  else
  {
    uint64_t v21 = *(void *)(v0 + 368);
    uint64_t v22 = *(void *)(v0 + 288);
    uint64_t v23 = *(void *)(v0 + 240);
    v13(v22, 1LL, 1LL, *(void *)(v0 + 296));
    sub_100187100(v22, &qword_10064EA18);
    *(void *)(v0 + 136) = v1;
    swift_errorRetain(v1);
    if (swift_dynamicCast(v21, v0 + 136, v11, v23, 6LL))
    {
      uint64_t v24 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 488);
      uint64_t v26 = *(void *)(v0 + 368);
      uint64_t v25 = *(void *)(v0 + 376);
      uint64_t v27 = *(void *)(v0 + 280);
      uint64_t v28 = *(void *)(v0 + 240);
      uint64_t v29 = *(void *)(v0 + 248);
      v24(v26, 0LL, 1LL, v28);
      sub_100187100(v25, &qword_10064A188);
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
      v30(v27, v26, v28);
      v30(v25, v27, v28);
      v24(v25, 0LL, 1LL, v28);
    }

    else
    {
      uint64_t v31 = *(unsigned int *)(v0 + 560);
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 488);
      uint64_t v34 = *(void *)(v0 + 368);
      uint64_t v33 = *(void *)(v0 + 376);
      uint64_t v35 = *(void *)(v0 + 360);
      uint64_t v36 = *(void *)(v0 + 240);
      uint64_t v37 = *(void *)(v0 + 248);
      v32(v34, 1LL, 1LL, v36);
      sub_100187100(v34, &qword_10064A188);
      swift_errorRetain(v1);
      CodableError.init(_:)(v1);
      sub_100187100(v33, &qword_10064A188);
      uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 104);
      uint64_t v2 = v0 + 144;
      v38(v35, v31, v36);
      v32(v35, 0LL, 1LL, v36);
      sub_1001870BC(v35, v33, &qword_10064A188);
    }
  }

  uint64_t v39 = *(void *)(v0 + 352);
  uint64_t v41 = *(void *)(v0 + 240);
  uint64_t v40 = *(void *)(v0 + 248);
  sub_1001915A4(*(void *)(v0 + 376), v39, &qword_10064A188);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1LL, v41) == 1)
  {
    uint64_t v42 = *(void *)(v0 + 352);
    sub_100187100(*(void *)(v0 + 320), &qword_100649F58);
    sub_10031CD08(v1);
    sub_10031CD08(v1);
    sub_100187100(v42, &qword_10064A188);
LABEL_36:
    uint64_t v107 = *(void *)(v0 + 496);
    uint64_t v108 = *(void *)(v0 + 200);
    uint64_t v109 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 536) = v109;
    *uint64_t v109 = v0;
    v109[1] = sub_100318118;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v2, v108, v107, *(void *)(v0 + 328), v0 + 120);
  }

  int v43 = *(_DWORD *)(v0 + 564);
  uint64_t v45 = *(void *)(v0 + 264);
  uint64_t v44 = *(void *)(v0 + 272);
  uint64_t v46 = *(void *)(v0 + 240);
  uint64_t v47 = *(void *)(v0 + 248);
  (*(void (**)(uint64_t, void, uint64_t))(v47 + 32))(v44, *(void *)(v0 + 352), v46);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
  v48(v45, v44, v46);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 88))(v45, v46);
  if (v49 != v43)
  {
    if (v49 == *(_DWORD *)(v0 + 568) || v49 == *(_DWORD *)(v0 + 572))
    {
      uint64_t v116 = v0 + 72;
      if (qword_100644180 != -1) {
        swift_once(&qword_100644180, sub_1003187D4);
      }
      uint64_t v65 = v0 + 48;
      uint64_t v66 = *(void *)(v0 + 272);
      uint64_t v67 = *(void *)(v0 + 256);
      uint64_t v68 = *(void *)(v0 + 240);
      uint64_t v69 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v69, (uint64_t)qword_10064E8A0);
      uint64_t v70 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v48)(v67, v66, v68);
      uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
      os_log_type_t v72 = static os_log_type_t.default.getter();
      BOOL v73 = os_log_type_enabled(v71, v72);
      uint64_t v74 = *(void *)(v0 + 248);
      uint64_t v75 = *(void *)(v0 + 256);
      if (v73)
      {
        uint64_t v113 = *(void *)(v0 + 240);
        uint64_t v76 = swift_slowAlloc(12LL, -1LL);
        log = v71;
        uint64_t v77 = swift_slowAlloc(32LL, -1LL);
        uint64_t v117 = v77;
        *(_DWORD *)uint64_t v76 = 136315138;
        uint64_t v78 = SFAirDropSend.Failure.errorDescription.getter(v77);
        int v80 = (const char *)v79;
        *(void *)(v76 + 4) = sub_10018CDB4(v78, v79, &v117);
        int v81 = v80;
        uint64_t v65 = v0 + 48;
        __n128 v82 = swift_bridgeObjectRelease(v81);
        uint64_t v83 = *(void (**)(uint64_t, uint64_t, __n128))(v74 + 8);
        v83(v75, v113, v82);
        os_log_type_t v84 = v72;
        uint64_t v85 = (void (*)(uint64_t, uint64_t))v83;
        _os_log_impl((void *)&_mh_execute_header, log, v84, "Fatal Ask failure %s", (uint8_t *)v76, 0xCu);
        swift_arrayDestroy(v77, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v77, -1LL, -1LL);
        swift_slowDealloc(v76, -1LL, -1LL);
      }

      else
      {
        uint64_t v85 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
        v85(*(void *)(v0 + 256), *(void *)(v0 + 240));
      }

      int v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v0 + 464);
      uint64_t v91 = *(void *)(v0 + 384);
      uint64_t v92 = *(void *)(v0 + 200) + *(void *)(v0 + 456);
      __n128 v93 = swift_beginAccess(v92, v116, 32LL, 0LL);
      if (v90(v92, 1LL, v91, v93))
      {
        uint64_t v94 = *(void *)(v0 + 320);
        v85(*(void *)(v0 + 272), *(void *)(v0 + 240));
        sub_100187100(v94, &qword_100649F58);
        swift_endAccess(v116);
        sub_10031CD08(v1);
        sub_10031CD08(v1);
      }

      else
      {
        uint64_t v95 = *(void *)(v0 + 400);
        uint64_t v96 = v65;
        uint64_t v97 = *(void *)(v0 + 384);
        os_log_t loga = *(os_log_t *)(v0 + 480);
        uint64_t v114 = *(void *)(v0 + 320);
        double v98 = v85;
        uint64_t v99 = *(void *)(v0 + 272);
        uint64_t v100 = *(void *)(v0 + 240);
        (*(void (**)(uint64_t, void, uint64_t))(v0 + 472))( v95,  *(void *)(v0 + 200) + *(void *)(v0 + 456),  v97);
        swift_endAccess(v116);
        uint64_t v101 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
        uint64_t v102 = swift_allocError(v100, v101, 0LL, 0LL);
        v48(v103, v99, v100);
        SFProgressContinuation.fail(with:)(v102, v97);
        sub_10031CD08(v1);
        sub_10031CD08(v1);
        uint64_t v104 = v97;
        uint64_t v65 = v96;
        ((void (*)(uint64_t, uint64_t))loga)(v95, v104);
        v98(v99, v100);
        sub_100187100(v114, &qword_100649F58);
        swift_errorRelease(v102);
      }

      uint64_t v2 = v0 + 144;
      uint64_t v105 = *(void *)(v0 + 224);
      uint64_t v106 = *(void *)(v0 + 200) + *(void *)(v0 + 456);
      (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 392) + 56LL))( v105,  1LL,  1LL,  *(void *)(v0 + 384));
      swift_beginAccess(v106, v65, 33LL, 0LL);
      sub_10031CD8C(v105, v106);
      swift_endAccess(v65);
    }

    else
    {
      if (qword_100644180 != -1) {
        swift_once(&qword_100644180, sub_1003187D4);
      }
      uint64_t v57 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v57, (uint64_t)qword_10064E8A0);
      swift_errorRetain(v1);
      uint64_t v58 = swift_errorRetain(v1);
      uint64_t v59 = (os_log_s *)Logger.logObject.getter(v58);
      os_log_type_t v60 = static os_log_type_t.default.getter();
      uint64_t v2 = v0 + 144;
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = swift_slowAlloc(12LL, -1LL);
        int v62 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v61 = 138412290;
        swift_errorRetain(v1);
        uint64_t v63 = _swift_stdlib_bridgeErrorToNSError(v1);
        *(void *)(v61 + 4) = v63;
        uint64_t *v62 = v63;
        sub_10031CD08(v1);
        sub_10031CD08(v1);
        _os_log_impl( (void *)&_mh_execute_header,  v59,  v60,  "Ask failed %@ - waiting for other asks if appropriate",  (uint8_t *)v61,  0xCu);
        uint64_t v64 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v62, 1LL, v64);
        swift_slowDealloc(v62, -1LL, -1LL);
        swift_slowDealloc(v61, -1LL, -1LL);

        sub_10031CD08(v1);
        sub_10031CD08(v1);
      }

      else
      {

        sub_10031CD08(v1);
        sub_10031CD08(v1);
        swift_errorRelease(v1);
        swift_errorRelease(v1);
      }

      uint64_t v86 = *(void *)(v0 + 320);
      uint64_t v87 = *(void *)(v0 + 264);
      uint64_t v88 = *(void *)(v0 + 240);
      uint64_t v89 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 248) + 8LL);
      v89(*(void *)(v0 + 272), v88);
      sub_100187100(v86, &qword_100649F58);
      v89(v87, v88);
    }

    goto LABEL_36;
  }

  if (qword_100644180 != -1) {
    swift_once(&qword_100644180, sub_1003187D4);
  }
  uint64_t v50 = type metadata accessor for Logger(0LL);
  uint64_t v51 = sub_100186DE4(v50, (uint64_t)qword_10064E8A0);
  uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v53 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v52,  v53,  "Resolve failed - waiting for other asks if appropriate and attempting fallback",  v54,  2u);
    swift_slowDealloc(v54, -1LL, -1LL);
  }

  uint64_t v55 = *(void *)(v0 + 504);
  uint64_t v56 = *(void *)(v0 + 200);

  *(void *)(v0 + 528) = *(void *)(v56 + v55);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100317E1C, static AirDropActor.shared, 0LL);
}

uint64_t sub_100317E1C()
{
  uint64_t v1 = v0[66];
  sub_1002EADE4();
  sub_1002DF1E8();
  swift_bridgeObjectRelease(v2);
  sub_1002EAFC8();
  uint64_t v3 = v0[66];
  uint64_t v4 = v0[29];
  uint64_t v5 = type metadata accessor for TaskPriority(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1LL, 1LL, v5);
  uint64_t v7 = swift_allocObject(&unk_1005DADB8, 24LL, 7LL);
  swift_unknownObjectWeakInit(v7 + 16, v3);
  type metadata accessor for MainActor(0LL);
  uint64_t v8 = swift_retain(v7);
  uint64_t v9 = static MainActor.shared.getter(v8);
  uint64_t v10 = (void *)swift_allocObject(&unk_1005DADE0, 40LL, 7LL);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  swift_release(v7);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5);
  uint64_t v12 = v0[29];
  if ((_DWORD)v11 != 1)
  {
    unsigned __int8 v19 = TaskPriority.rawValue.getter(v11);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
    uint64_t v13 = v19 | 0x1C00LL;
    uint64_t v9 = v10[2];
    if (v9) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v16 = 0LL;
    uint64_t v18 = 0LL;
    goto LABEL_7;
  }

  sub_100187100(v0[29], &qword_100646560);
  uint64_t v13 = 7168LL;
  if (!v9) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v14 = v10[3];
  uint64_t ObjectType = swift_getObjectType(v9);
  swift_unknownObjectRetain(v9);
  uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v14);
  uint64_t v18 = v17;
  swift_unknownObjectRelease(v9);
LABEL_7:
  uint64_t v20 = swift_allocObject(&unk_1005DAE08, 32LL, 7LL);
  *(void *)(v20 + 16) = &unk_10064DB60;
  *(void *)(v20 + 24) = v10;
  if (v18 | v16)
  {
    uint64_t v21 = v0 + 2;
    v0[2] = 0LL;
    v0[3] = 0LL;
    v0[4] = v16;
    v0[5] = v18;
  }

  else
  {
    uint64_t v21 = 0LL;
  }

  uint64_t v22 = swift_task_create(v13, v21, (char *)&type metadata for () + 8, &unk_100649820, v20);
  swift_release(v22);
  return swift_task_switch(sub_100318040, v0[25], 0LL);
}

uint64_t sub_100318040()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[34];
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[31];
  sub_1003197D4(v2);
  sub_10031CD08(v1);
  sub_10031CD08(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_100187100(v2, &qword_100649F58);
  uint64_t v6 = v0[62];
  uint64_t v7 = v0[25];
  uint64_t v8 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
  v0[67] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100318118;
  return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 18, v7, v6, v0[41], v0 + 15);
}

uint64_t sub_100318118()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 536));
  if (v0) {
    uint64_t v3 = sub_1003184B8;
  }
  else {
    uint64_t v3 = sub_1003173BC;
  }
  return swift_task_switch(v3, *(void *)(v2 + 200), 0LL);
}

uint64_t sub_10031817C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 544);
  *(void *)(*v1 + 552) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100318650;
  }
  else {
    uint64_t v4 = sub_1003181E0;
  }
  return swift_task_switch(v4, *(void *)(v2 + 200), 0LL);
}

uint64_t sub_1003181E0()
{
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v19 = *(void *)(v0 + 440);
  uint64_t v20 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v18 = *(void *)(v0 + 376);
  uint64_t v21 = *(void *)(v0 + 400);
  uint64_t v22 = *(void *)(v0 + 368);
  uint64_t v23 = *(void *)(v0 + 360);
  uint64_t v25 = *(void *)(v0 + 352);
  uint64_t v35 = *(void *)(v0 + 344);
  uint64_t v37 = *(void *)(v0 + 320);
  uint64_t v38 = *(void *)(v0 + 312);
  uint64_t v39 = *(void *)(v0 + 288);
  uint64_t v41 = *(void *)(v0 + 280);
  uint64_t v43 = *(void *)(v0 + 272);
  uint64_t v44 = *(void *)(v0 + 264);
  uint64_t v45 = *(void *)(v0 + 256);
  uint64_t v46 = *(void *)(v0 + 232);
  uint64_t v5 = *(int **)(v0 + 216);
  uint64_t v47 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 208);
  uint64_t v17 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 184);
  uint64_t v16 = *(void *)(v0 + 192);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 176);
  sub_100187100(v18, &qword_10064A188);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v10 = *(void *)((char *)v5 + *(int *)(v6 + 48));
  int v42 = *v5;
  char v40 = *((_BYTE *)v5 + 4);
  uint64_t v11 = (int *)sub_100183098(&qword_10064A140);
  uint64_t v36 = *(void *)((char *)v5 + v11[16]);
  uint64_t v12 = (uint64_t)v5 + v11[20];
  uint64_t v13 = (__int128 *)((char *)v5 + v11[24]);
  __int128 v34 = *v13;
  uint64_t v32 = *((void *)v13 + 3);
  uint64_t v33 = *((void *)v13 + 2);
  char v31 = *((_BYTE *)v13 + 32);
  __int128 v29 = *(__int128 *)((char *)v13 + 56);
  __int128 v30 = *(__int128 *)((char *)v13 + 40);
  __int128 v28 = *(__int128 *)((char *)v13 + 72);
  uint64_t v26 = *((void *)v13 + 12);
  uint64_t v27 = *((void *)v13 + 11);
  uint64_t v14 = (uint64_t)v5 + v11[32];
  uint64_t v24 = *(void *)((char *)v5 + v11[28]);
  sub_1001A4B40((uint64_t)v5 + v11[12], v8, _s14descr1005DF7D1C10AskRequestVMa);
  sub_1001A4B40(v12, v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001870BC(v14, v16, &qword_100649F80);
  sub_1003195E0(v19, v1, v17);
  swift_release(v1);
  swift_release(v19);
  swift_task_dealloc(v2);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v18);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v5);
  *(_BYTE *)(v9 + 4) = v40;
  *(_DWORD *)uint64_t v9 = v42;
  *(void *)(v9 + 8) = v36;
  *(_OWORD *)(v9 + 16) = v34;
  *(void *)(v9 + 32) = v33;
  *(void *)(v9 + 40) = v32;
  *(_BYTE *)(v9 + 48) = v31;
  *(_OWORD *)(v9 + 56) = v30;
  *(_OWORD *)(v9 + 72) = v29;
  *(_OWORD *)(v9 + 88) = v28;
  *(void *)(v9 + 104) = v27;
  *(void *)(v9 + 112) = v26;
  *(void *)(v9 + 120) = v24;
  *(void *)(v9 + 128) = v10;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003184B8()
{
  uint64_t v2 = *(void *)(v0 + 440);
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 200);
  (*(void (**)(void, void))(*(void *)(v0 + 336) + 8LL))(*(void *)(v0 + 344), *(void *)(v0 + 328));
  sub_100187100(v6, &qword_10064A188);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1003195E0(v2, v1, v7);
  uint64_t v8 = *(void *)(v0 + 440);
  uint64_t v10 = *(void *)(v0 + 424);
  uint64_t v9 = *(void *)(v0 + 432);
  uint64_t v11 = *(void *)(v0 + 400);
  uint64_t v13 = *(void *)(v0 + 368);
  uint64_t v12 = *(void *)(v0 + 376);
  uint64_t v15 = *(void *)(v0 + 352);
  uint64_t v14 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 344);
  uint64_t v18 = *(void *)(v0 + 320);
  uint64_t v19 = *(void *)(v0 + 312);
  uint64_t v20 = *(void *)(v0 + 288);
  uint64_t v21 = *(void *)(v0 + 280);
  uint64_t v22 = *(void *)(v0 + 272);
  uint64_t v23 = *(void *)(v0 + 264);
  uint64_t v24 = *(void *)(v0 + 256);
  uint64_t v25 = *(void *)(v0 + 232);
  uint64_t v26 = *(void *)(v0 + 224);
  uint64_t v27 = *(void *)(v0 + 216);
  swift_release(*(void *)(v0 + 448));
  swift_release(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100318650()
{
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 200);
  sub_100187100(*(void *)(v0 + 376), &qword_10064A188);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  sub_1003195E0(v1, v2, v6);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v9 = *(void *)(v0 + 424);
  uint64_t v8 = *(void *)(v0 + 432);
  uint64_t v10 = *(void *)(v0 + 400);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v11 = *(void *)(v0 + 376);
  uint64_t v14 = *(void *)(v0 + 352);
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v15 = *(void *)(v0 + 344);
  uint64_t v17 = *(void *)(v0 + 320);
  uint64_t v18 = *(void *)(v0 + 312);
  uint64_t v19 = *(void *)(v0 + 288);
  uint64_t v20 = *(void *)(v0 + 280);
  uint64_t v21 = *(void *)(v0 + 272);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v25 = *(void *)(v0 + 224);
  uint64_t v26 = *(void *)(v0 + 216);
  swift_release(*(void *)(v0 + 448));
  swift_release(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003187D4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064E8A0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064E8A0);
  if (qword_100643FE8 != -1) {
    swift_once(&qword_100643FE8, sub_10023A448);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669628);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100318864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_100318880, 0LL, 0LL);
}

uint64_t sub_100318880()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 64) = Strong;
  if (Strong) {
    return swift_task_switch(sub_100318900, Strong, 0LL);
  }
  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100318900()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_100318944(*(void *)(v0 + 56));
  swift_release(v1);
  return swift_task_switch(sub_1002FC6A4, 0LL, 0LL);
}

uint64_t sub_100318944(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v10 = swift_allocObject(&unk_1005DAD90, 24LL, 7LL);
  swift_weakInit(v10 + 16);
  sub_1001A4B84( a1,  (uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)],  type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v11 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v12 = (v11 + 40) & ~v11;
  uint64_t v13 = (void *)swift_allocObject(&unk_1005DAF20, v12 + v5, v11 | 7);
  v13[2] = 0LL;
  v13[3] = 0LL;
  v13[4] = v10;
  sub_1001A4B40( (uint64_t)&v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)],  (uint64_t)v13 + v12,  type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v14 = sub_1001B37E8((uint64_t)v8, (uint64_t)&unk_10064EAA8, (uint64_t)v13);
  swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks, v16, 33LL, 0LL);
  swift_retain(v14);
  sub_1003B6900(&v17, v14);
  swift_endAccess(v16);
  swift_release(v14);
  return swift_release(v17);
}

uint64_t sub_100318AEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v61 = a5;
  uint64_t v62 = a6;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v58 = a2;
  uint64_t v7 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v55 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v56 = v12;
  __chkstk_darwin(v11);
  uint64_t v54 = (uint64_t)&v51 - v13;
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(*a1 + 56);
  uint64_t v52 = *a1 + 56;
  uint64_t v16 = 1LL << *(_BYTE *)(v14 + 32);
  uint64_t v17 = -1LL;
  if (v16 < 64) {
    uint64_t v17 = ~(-1LL << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v53 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v63 = v14;
  uint64_t result = swift_bridgeObjectRetain((const char *)v14);
  int64_t v20 = 0LL;
  while (1)
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      int64_t v64 = v20;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }

    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1LL))
    {
      __break(1u);
      goto LABEL_32;
    }

    if (v25 >= v53) {
      return swift_release(v63);
    }
    unint64_t v26 = *(void *)(v52 + 8 * v25);
    int64_t v27 = v20 + 1;
    if (!v26)
    {
      int64_t v27 = v20 + 2;
      if (v20 + 2 >= v53) {
        return swift_release(v63);
      }
      unint64_t v26 = *(void *)(v52 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v20 + 3;
        if (v20 + 3 >= v53) {
          return swift_release(v63);
        }
        unint64_t v26 = *(void *)(v52 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }

uint64_t sub_100318EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_100318EE4, 0LL, 0LL);
}

uint64_t sub_100318EE4()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 64) = Strong;
  if (Strong) {
    return swift_task_switch(sub_100318F64, Strong, 0LL);
  }
  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100318F64()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_100318FA8(*(void *)(v0 + 56));
  swift_release(v1);
  return swift_task_switch(sub_100239408, 0LL, 0LL);
}

void sub_100318FA8(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v14 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v14 + 64);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v15 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  uint64_t v10 = &v13[-v9];
  sub_1001A4B84(a1, (uint64_t)&v13[-v9], v11);
  uint64_t v12 = (char *)&loc_100319118 + *((int *)qword_1003195D0 + swift_getEnumCaseMultiPayload(v10, v5));
  __asm { BR              X10 }

void sub_100319128()
{
  uint64_t v8 = sub_1001A4B40(v1, v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  uint64_t v9 = NWEndpoint.nw.getter(v8);
  if (!v9)
  {
    __break(1u);
    JUMPOUT(0x1003195D0LL);
  }

  uint64_t v10 = v9;
  uint64_t device_id = nw_endpoint_get_device_id();
  swift_unknownObjectRelease(v10);
  if (device_id)
  {
    *(void *)(v7 - 160) = String.init(cString:)(device_id);
    uint64_t v13 = v12;
    sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    if (qword_100644180 != -1) {
      swift_once(&qword_100644180, sub_1003187D4);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_10064E8A0);
    uint64_t v16 = sub_1001A4B84(v2, v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    *(void *)(v7 - 168) = v15;
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc(12LL, -1LL);
      *(void *)(v7 - 184) = v2;
      int64_t v20 = (uint8_t *)v19;
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      *(void *)(v7 - 104) = v21;
      *(void *)(v7 - 176) = v5;
      *(_DWORD *)int64_t v20 = 136315138;
      *(void *)(v7 - 192) = v13;
      sub_10020E23C();
      unint64_t v23 = (const char *)v22;
      *(void *)(v7 - 128) = sub_10018CDB4(v24, v22, (uint64_t *)(v7 - 104));
      uint64_t v13 = *(const char **)(v7 - 192);
      uint64_t v5 = *(void *)(v7 - 176);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v7 - 128, v7 - 120, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease(v23);
      sub_1001A4BC8(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Checking if backup Ask needed for %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1LL, -1LL);
      int64_t v25 = v20;
      uint64_t v2 = *(void *)(v7 - 184);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    unint64_t v26 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs);
    *(void *)&double v27 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs,  v7 - 104,  0LL,  0LL).n128_u64[0];
    uint64_t v28 = *v26;
    swift_bridgeObjectRetain(*v26, v27);
    uint64_t v29 = *(void *)(v7 - 160);
    char v30 = sub_1003A084C(v29, (uint64_t)v13, (uint64_t)v28);
    *(void *)&double v31 = swift_bridgeObjectRelease(v28).n128_u64[0];
    if ((v30 & 1) != 0)
    {
      swift_beginAccess(v26, v7 - 128, 33LL, 0LL);
      sub_1003BDC14(v29, (uint64_t)v13);
      uint64_t v33 = v32;
      swift_endAccess(v7 - 128);
      *(void *)&double v34 = swift_bridgeObjectRelease(v13).n128_u64[0];
      swift_bridgeObjectRelease(v33, v34);
      uint64_t v35 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v5, 1LL, 1LL, v35);
      uint64_t v36 = swift_allocObject(&unk_1005DAD90, 24LL, 7LL);
      swift_weakInit(v36 + 16);
      uint64_t v37 = *(void *)(v7 - 144);
      sub_1001A4B84(v2, v37, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v38 = *(unsigned __int8 *)(*(void *)(v7 - 152) + 80LL);
      uint64_t v39 = (v38 + 40) & ~v38;
      uint64_t v40 = (void *)swift_allocObject(&unk_1005DAEA8, v39 + v4, v38 | 7);
      v40[2] = 0LL;
      v40[3] = 0LL;
      v40[4] = v36;
      sub_1001A4B40(v37, (uint64_t)v40 + v39, type metadata accessor for SDAirDropDiscoveredEndpoint);
      uint64_t v41 = sub_1001B37E8(v5, (uint64_t)&unk_10064EA80, (uint64_t)v40);
      swift_beginAccess(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks, v7 - 128, 33LL, 0LL);
      swift_retain(v41);
      sub_1003B6900((void *)(v7 - 136), v41);
      swift_endAccess(v7 - 128);
      swift_release(v41);
      swift_release(*(void *)(v7 - 136));
    }

    else
    {
      swift_bridgeObjectRelease(v13, v31);
      uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Fallback not needed", v45, 2u);
        swift_slowDealloc(v45, -1LL, -1LL);
      }
    }
  }

  else
  {
    sub_1001A4BC8(v0, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
  }

void sub_1003195E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks);
  swift_beginAccess(v4, v16, 1LL, 0LL);
  uint64_t v5 = *v4;
  uint64_t v6 = *v4 + 56LL;
  uint64_t v7 = 1LL << *(_BYTE *)(*v4 + 32LL);
  uint64_t v8 = -1LL;
  if (v7 < 64) {
    uint64_t v8 = ~(-1LL << v7);
  }
  uint64_t v9 = v8 & *(void *)(*v4 + 56LL);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain_n(*v4, 2LL);
  int64_t v11 = 0LL;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }

    int64_t v12 = v11 + 1;
    if (__OFADD__(v11, 1LL))
    {
      __break(1u);
      goto LABEL_27;
    }

    if (v12 >= v10) {
      goto LABEL_25;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v12);
    ++v11;
    if (!v13)
    {
      int64_t v11 = v12 + 1;
      if (v12 + 1 >= v10) {
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)(v6 + 8 * v11);
      if (!v13)
      {
        int64_t v11 = v12 + 2;
        if (v12 + 2 >= v10) {
          goto LABEL_25;
        }
        uint64_t v13 = *(void *)(v6 + 8 * v11);
        if (!v13)
        {
          int64_t v11 = v12 + 3;
          if (v12 + 3 >= v10) {
            goto LABEL_25;
          }
          uint64_t v13 = *(void *)(v6 + 8 * v11);
          if (!v13)
          {
            int64_t v11 = v12 + 4;
            if (v12 + 4 >= v10) {
              goto LABEL_25;
            }
            uint64_t v13 = *(void *)(v6 + 8 * v11);
            if (!v13) {
              break;
            }
          }
        }
      }
    }

void sub_1003197D4(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v71 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v73 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v66 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v65 - v7;
  uint64_t v9 = type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL);
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v69 + 64);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v70 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v75 = (uint64_t)&v65 - v12;
  uint64_t v13 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v68 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v65 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v65 - v23;
  sub_1001915A4(a1, (uint64_t)v15, &qword_100649F58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v16) != 1)
  {
    sub_1001A4B40((uint64_t)v15, (uint64_t)v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B84((uint64_t)v24, (uint64_t)v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v22, v16);
    uint64_t v67 = v24;
    if (EnumCaseMultiPayload)
    {
      sub_1001A4BC8((uint64_t)v22, type metadata accessor for SDAirDropDiscoveredEndpoint);
      if (qword_100644180 != -1) {
        swift_once(&qword_100644180, sub_1003187D4);
      }
      uint64_t v31 = type metadata accessor for Logger(0LL);
      uint64_t v32 = sub_100186DE4(v31, (uint64_t)qword_10064E8A0);
      uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
      os_log_type_t v34 = static os_log_type_t.error.getter(v33);
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "We only handle Application Service endpoints for fallbacks",  v35,  2u);
        swift_slowDealloc(v35, -1LL, -1LL);
      }
    }

    else
    {
      uint64_t v36 = v75;
      sub_1001A4B40( (uint64_t)v22,  v75,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
      uint64_t v37 = (const char **)(v74 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_failedResolveEndpointIDs);
      *(void *)&double v38 = swift_beginAccess( v74 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_failedResolveEndpointIDs,  v78,  0LL,  0LL).n128_u64[0];
      uint64_t v39 = *v37;
      swift_bridgeObjectRetain(*v37, v38);
      sub_10020CB28();
      char v40 = sub_1003A036C((uint64_t)v8, (uint64_t)v39);
      __n128 v41 = swift_bridgeObjectRelease(v39);
      uint64_t v42 = v73;
      uint64_t v43 = *(void (**)(char *, uint64_t, __n128))(v72 + 8);
      v43(v8, v73, v41);
      if ((v40 & 1) == 0)
      {
        uint64_t v50 = v66;
        sub_10020CB28();
        swift_beginAccess(v37, v77, 33LL, 0LL);
        sub_1003B54D0((uint64_t)v8, v50);
        swift_endAccess(v77);
        ((void (*)(char *, uint64_t))v43)(v8, v42);
        uint64_t v51 = type metadata accessor for TaskPriority(0LL);
        uint64_t v52 = (uint64_t)v71;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v71, 1LL, 1LL, v51);
        uint64_t v53 = swift_allocObject(&unk_1005DAD90, 24LL, 7LL);
        uint64_t v54 = v74;
        swift_weakInit(v53 + 16);
        uint64_t v55 = v70;
        sub_1001A4B84(v36, v70, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v56 = v68;
        sub_1001A4B84((uint64_t)v67, v68, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v57 = *(unsigned __int8 *)(v69 + 80);
        uint64_t v58 = (v57 + 40) & ~v57;
        uint64_t v59 = *(unsigned __int8 *)(v17 + 80);
        uint64_t v60 = v10 + v59 + v58;
        uint64_t v61 = v54;
        uint64_t v62 = v60 & ~v59;
        uint64_t v63 = (void *)swift_allocObject(&unk_1005DAE30, v62 + v18, v57 | v59 | 7);
        v63[2] = 0LL;
        v63[3] = 0LL;
        v63[4] = v53;
        sub_1001A4B40( v55,  (uint64_t)v63 + v58,  type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        sub_1001A4B40(v56, (uint64_t)v63 + v62, type metadata accessor for SDAirDropDiscoveredEndpoint);
        uint64_t v64 = sub_1001B37E8(v52, (uint64_t)&unk_10064EA48, (uint64_t)v63);
        swift_beginAccess(v61 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks, v77, 33LL, 0LL);
        swift_retain(v64);
        sub_1003B6900(&v76, v64);
        swift_endAccess(v77);
        swift_release(v64);
        swift_release(v76);
        sub_1001A4BC8(v75, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
        uint64_t v49 = (uint64_t)v67;
        goto LABEL_20;
      }

      if (qword_100644180 != -1) {
        swift_once(&qword_100644180, sub_1003187D4);
      }
      uint64_t v44 = type metadata accessor for Logger(0LL);
      uint64_t v45 = sub_100186DE4(v44, (uint64_t)qword_10064E8A0);
      uint64_t v46 = (os_log_s *)Logger.logObject.getter(v45);
      os_log_type_t v47 = static os_log_type_t.error.getter(v46);
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v46,  v47,  "We only attempt a fallback once per endpoint, for each send",  v48,  2u);
        swift_slowDealloc(v48, -1LL, -1LL);
      }

      sub_1001A4BC8(v36, type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint);
    }

    uint64_t v49 = (uint64_t)v67;
LABEL_20:
    sub_1001A4BC8(v49, type metadata accessor for SDAirDropDiscoveredEndpoint);
    return;
  }

  sub_100187100((uint64_t)v15, &qword_100649F58);
  if (qword_100644180 != -1) {
    swift_once(&qword_100644180, sub_1003187D4);
  }
  uint64_t v25 = type metadata accessor for Logger(0LL);
  uint64_t v26 = sub_100186DE4(v25, (uint64_t)qword_10064E8A0);
  double v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.error.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "No endpoint provided from failure, skipping fallback", v29, 2u);
    swift_slowDealloc(v29, -1LL, -1LL);
  }
}

uint64_t sub_100319EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_100183098(&qword_10064A1A8);
  v5[11] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[12] = v7;
  v5[13] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100319F10, 0LL, 0LL);
}

uint64_t sub_100319F10()
{
  uint64_t v1 = *(void *)(v0 + 72) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 112) = Strong;
  if (Strong) {
    return swift_task_switch(sub_100319F8C, Strong, 0LL);
  }
  swift_task_dealloc(*(void *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100319F8C()
{
  if ((v1 & 1) != 0)
  {
    uint64_t v2 = (uint64_t **)swift_task_alloc(dword_10064EA5C);
    v0[15] = (uint64_t)v2;
    *uint64_t v2 = v0;
    v2[1] = (uint64_t *)sub_10031A078;
    return sub_10031A7E8(v0[10]);
  }

  else
  {
    uint64_t v4 = v0[11];
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[14] + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
    __n128 v7 = swift_beginAccess(v6, v0 + 5, 0LL, 0LL);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 48))(v6, 1LL, v4, v7))
    {
      uint64_t v8 = sub_10031D5AC;
    }

    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[12] + 16))(v0[13], v6, v0[11]);
      uint64_t v8 = sub_10031A104;
    }

    return swift_task_switch(v8, 0LL, 0LL);
  }

uint64_t sub_10031A078()
{
  return swift_task_switch(sub_10031A0CC, 0LL, 0LL);
}

uint64_t sub_10031A0CC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031A104()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v6 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v7 = swift_allocError(v5, v6, 0LL, 0LL);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))( v8,  enum case for SFAirDropSend.Failure.badRequest(_:),  v5);
  *(void *)(v0 + 64) = v7;
  SFProgressContinuation.yield(_:)(v0 + 64, v3);
  swift_release(v1);
  swift_errorRelease(v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc(*(void *)(v0 + 104));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10031A1DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v61 = (uint64_t)&v60 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v60 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v60 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v60 - v16;
  uint64_t v18 = (const char **)(*sub_10019A708( (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner),  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner + 24))
                      + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine6Runner_sendConnections);
  *(void *)&double v19 = swift_beginAccess(v18, v68, 0LL, 0LL).n128_u64[0];
  uint64_t v20 = *v18;
  uint64_t v63 = a1;
  swift_bridgeObjectRetain(v20, v19);
  sub_1002B6E4C((uint64_t (*)(id *))sub_10031D588, (uint64_t)v62, (uint64_t)v20);
  char v22 = v21;
  swift_bridgeObjectRelease(v20);
  sub_10020EEE0();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease(v23);
  sub_1001A4B84(a1, (uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (!v24)
  {
    sub_1001A4BC8((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
    sub_1001A4B84(a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
LABEL_10:
    sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if ((v22 & 1) == 0) {
      return;
    }
    goto LABEL_11;
  }

  uint64_t v60 = v2;
  uint64_t v25 = (const char **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs);
  *(void *)&double v26 = swift_beginAccess( v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs,  v64,  0LL,  0LL).n128_u64[0];
  double v27 = *v25;
  swift_bridgeObjectRetain(*v25, v26);
  sub_10020EEE0();
  if (!v29)
  {
    __break(1u);
    goto LABEL_24;
  }

  char v30 = (const char *)v29;
  char v31 = sub_1003A084C(v28, v29, (uint64_t)v27);
  *(void *)&double v32 = swift_bridgeObjectRelease(v30).n128_u64[0];
  swift_bridgeObjectRelease(v27, v32);
  sub_1001A4BC8((uint64_t)v17, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4B84(a1, (uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v31 & 1) == 0) {
    goto LABEL_10;
  }
  sub_1001A4B84((uint64_t)v15, (uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if (swift_getEnumCaseMultiPayload(v12, v4) == 1)
  {
    sub_1001A4BC8((uint64_t)v12, type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint);
    sub_1001A4BC8((uint64_t)v15, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (qword_100644180 != -1) {
      swift_once(&qword_100644180, sub_1003187D4);
    }
    uint64_t v33 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v33, (uint64_t)qword_10064E8A0);
    uint64_t v34 = v61;
    uint64_t v35 = sub_1001A4B84(a1, v61, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v36 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      double v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v39 = swift_slowAlloc(32LL, -1LL);
      v65[0] = v39;
      *(_DWORD *)double v38 = 136315138;
      sub_10020E23C();
      __n128 v41 = (const char *)v40;
      uint64_t v66 = sub_10018CDB4(v42, v40, v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease(v41);
      sub_1001A4BC8(v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Running fallback Ask for endpoint %s", v38, 0xCu);
      swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(v34, type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v52 = v60;
    sub_10020EEE0();
    if (v54)
    {
      uint64_t v55 = v53;
      uint64_t v56 = v54;
      swift_beginAccess( v52 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs,  v65,  33LL,  0LL);
      sub_1003BDC14(v55, (uint64_t)v56);
      uint64_t v58 = v57;
      swift_endAccess(v65);
      *(void *)&double v59 = swift_bridgeObjectRelease(v56).n128_u64[0];
      swift_bridgeObjectRelease(v58, v59);
      return;
    }

uint64_t sub_10031A7E8(uint64_t a1)
{
  v2[41] = a1;
  v2[42] = v1;
  uint64_t v3 = sub_100183098(&qword_10064A1A8);
  v2[43] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[44] = v4;
  v2[45] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[46] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_10064A140);
  v2[47] = v6;
  unint64_t v7 = (*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[48] = swift_task_alloc(v7);
  v2[49] = swift_task_alloc(v7);
  return swift_task_switch(sub_10031A8A4, v1, 0LL);
}

uint64_t sub_10031A8A4()
{
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 336);
  sub_10019A6C4(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner, v0 + 256);
  sub_10019A708((void *)(v0 + 256), *(void *)(v0 + 280));
  uint64_t v4 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_sendRequest;
  char v5 = SFAirDropSend.Request.supportsPipelining.getter();
  sub_1001A4B84(v3, v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v6 = *(void *)(v0 + 368);
  if ((v5 & 1) == 0)
  {
    sub_1001A4BC8(*(void *)(v0 + 368), type metadata accessor for SDAirDropDiscoveredEndpoint);
LABEL_7:
    char v12 = 0;
    goto LABEL_8;
  }

  char v7 = sub_10020F350();
  sub_1001A4BC8(v6, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v7 & 1) == 0) {
    goto LABEL_7;
  }
  type metadata accessor for SFAirDropUserDefaults(0LL, v8);
  uint64_t v9 = (void *)static SFAirDropUserDefaults.shared.getter();
  char v10 = SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();

  if ((v10 & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v0 + 336);
  if (*(_BYTE *)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_pipelinedUploadAvailable) != 1) {
    goto LABEL_7;
  }
  *(_BYTE *)(v11 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_pipelinedUploadAvailable) = 0;
  char v12 = 1;
LABEL_8:
  uint64_t v13 = *(void *)(v0 + 392);
  uint64_t v14 = *(int **)(v0 + 376);
  uint64_t v15 = v14[12];
  *(_DWORD *)(v0 + 568) = v15;
  uint64_t v16 = v13 + v15;
  uint64_t v17 = v14[20];
  *(_DWORD *)(v0 + 572) = v17;
  uint64_t v18 = v13 + v17;
  uint64_t v19 = v14[32];
  *(_DWORD *)(v0 + 576) = v19;
  uint64_t v20 = v13 + v19;
  char v21 = (void *)swift_task_alloc(dword_10064A184);
  *(void *)(v0 + 400) = v21;
  void *v21 = v0;
  v21[1] = sub_10031AA30;
  return sub_100254418(v0 + 16, v16, v18, v20, *(void *)(v0 + 328), v12, v4);
}

uint64_t sub_10031AA30()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 400);
  *(void *)(v2 + 408) = v0;
  int v4 = *(_DWORD *)(v2 + 16);
  *(_BYTE *)(v2 + 420) = *(_BYTE *)(v2 + 20);
  *(_DWORD *)(v2 + 416) = v4;
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 424) = *(void *)(v2 + 24);
  *(void *)(v2 + 432) = v5;
  *(_OWORD *)(v2 + 440) = *(_OWORD *)(v2 + 40);
  *(void *)(v2 + 456) = *(void *)(v2 + 56);
  *(_BYTE *)(v2 + 604) = *(_BYTE *)(v2 + 64);
  __int128 v6 = *(_OWORD *)(v2 + 88);
  *(_OWORD *)(v2 + 464) = *(_OWORD *)(v2 + 72);
  *(_OWORD *)(v2 + 480) = v6;
  __int128 v7 = *(_OWORD *)(v2 + 120);
  *(_OWORD *)(v2 + 496) = *(_OWORD *)(v2 + 104);
  *(_OWORD *)(v2 + 512) = v7;
  uint64_t v8 = *(void *)(v2 + 144);
  *(void *)(v2 + 528) = *(void *)(v2 + 136);
  *(void *)(v2 + 536) = v8;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v9 = *(void *)(v2 + 336);
    char v10 = sub_10031AE88;
  }

  else
  {
    uint64_t v11 = *(_DWORD **)(v2 + 376);
    uint64_t v9 = *(void *)(v2 + 336);
    *(_DWORD *)(v2 + 580) = v11[16];
    *(_DWORD *)(v2 + 584) = v11[24];
    *(_DWORD *)(v2 + 588) = v11[28];
    char v10 = sub_10031AB0C;
  }

  return swift_task_switch(v10, v9, 0LL);
}

uint64_t sub_10031AB0C()
{
  uint64_t v1 = *(int *)(v0 + 588);
  uint64_t v44 = v1;
  uint64_t v2 = *(int *)(v0 + 580);
  uint64_t v3 = *(void *)(v0 + 528);
  char v4 = *(_BYTE *)(v0 + 604);
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v5 = *(void *)(v0 + 456);
  __int128 v7 = *(_OWORD *)(v0 + 432);
  uint64_t v8 = *(void *)(v0 + 424);
  unsigned int v9 = *(_DWORD *)(v0 + 416);
  uint64_t v11 = *(void *)(v0 + 384);
  char v10 = *(unsigned int **)(v0 + 392);
  char v12 = *(int **)(v0 + 376);
  uint64_t v13 = (char *)v10 + *(int *)(v0 + 584);
  uint64_t v46 = (uint64_t)v10 + *(int *)(v0 + 576);
  uint64_t v43 = (uint64_t)v10 + *(int *)(v0 + 572);
  uint64_t v14 = (char *)v10 + *(int *)(v0 + 568);
  __int128 v15 = *(_OWORD *)(v0 + 464);
  __int128 v16 = *(_OWORD *)(v0 + 480);
  __int128 v17 = *(_OWORD *)(v0 + 496);
  __int128 v18 = *(_OWORD *)(v0 + 512);
  *((_BYTE *)v10 + 4) = *(_BYTE *)(v0 + 420);
  *char v10 = v9;
  *(void *)((char *)v10 + v2) = v8;
  *(_OWORD *)uint64_t v13 = v7;
  *((void *)v13 + 2) = v6;
  *((void *)v13 + 3) = v5;
  v13[32] = v4;
  *(_OWORD *)(v13 + 40) = v15;
  *(_OWORD *)(v13 + 56) = v16;
  *(_OWORD *)(v13 + 72) = v17;
  *(_OWORD *)(v13 + 88) = v18;
  *(void *)((char *)v10 + v1) = v3;
  sub_10018709C((void *)(v0 + 256));
  uint64_t v19 = v12[12];
  *(_DWORD *)(v0 + 592) = v19;
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12[16];
  uint64_t v22 = v12[20];
  *(_DWORD *)(v0 + 596) = v22;
  uint64_t v23 = v11 + v22;
  uint64_t v24 = (void *)(v11 + v12[24]);
  uint64_t v42 = v12[28];
  uint64_t v25 = v12[32];
  *(_DWORD *)(v0 + 600) = v25;
  uint64_t v26 = v11 + v25;
  uint64_t v27 = *((unsigned __int8 *)v10 + 4);
  uint64_t v28 = *v10;
  uint64_t v45 = v28 | (v27 << 32);
  *(_BYTE *)(v11 + 4) = v27;
  *(_DWORD *)uint64_t v11 = v28;
  uint64_t v29 = (uint64_t)v14;
  uint64_t v30 = v20;
  sub_1001A4B84(v29, v20, _s14descr1005DF7D1C10AskRequestVMa);
  char v31 = *(void **)((char *)v10 + v2);
  *(void *)(v0 + 544) = v31;
  *(void *)(v11 + v21) = v31;
  sub_1001A4B84(v43, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
  __int128 v33 = *((_OWORD *)v13 + 1);
  __int128 v32 = *((_OWORD *)v13 + 2);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)v13;
  *(_OWORD *)(v0 + 168) = v33;
  *(_OWORD *)(v0 + 184) = v32;
  __int128 v35 = *((_OWORD *)v13 + 4);
  __int128 v34 = *((_OWORD *)v13 + 5);
  uint64_t v36 = *((void *)v13 + 12);
  *(_OWORD *)(v0 + 200) = *((_OWORD *)v13 + 3);
  *(void *)(v0 + 248) = v36;
  *(_OWORD *)(v0 + 232) = v34;
  *(_OWORD *)(v0 + 216) = v35;
  memmove(v24, v13, 0x68uLL);
  os_log_type_t v37 = *(const char **)((char *)v10 + v44);
  *(void *)(v0 + 552) = v37;
  *(void *)(v11 + v42) = v37;
  sub_1001915A4(v46, v26, &qword_100649F80);
  id v38 = v31;
  sub_10025FCB0((void *)(v0 + 152));
  uint64_t v39 = dword_10064EA64;
  swift_bridgeObjectRetain(v37);
  unint64_t v40 = (void *)swift_task_alloc(v39);
  *(void *)(v0 + 560) = v40;
  *unint64_t v40 = v0;
  v40[1] = sub_10031AD3C;
  return sub_10031B2BC(v45, v30, v38, v23, v0 + 152, v37, v26, *(void *)(v0 + 536));
}

uint64_t sub_10031AD3C()
{
  uint64_t v1 = (void *)(*(void *)v0 + 152LL);
  uint64_t v2 = *(const char **)(*(void *)v0 + 552LL);
  uint64_t v3 = *(void **)(*(void *)v0 + 544LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 384LL);
  uint64_t v5 = *(void *)(*(void *)v0 + 336LL);
  uint64_t v6 = v4 + *(int *)(*(void *)v0 + 600LL);
  uint64_t v7 = v4 + *(int *)(*(void *)v0 + 596LL);
  uint64_t v8 = v4 + *(int *)(*(void *)v0 + 592LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 560LL));
  swift_bridgeObjectRelease(v2);
  sub_1001FC264(v1);

  sub_100187100(v6, &qword_100649F80);
  sub_1001A4BC8(v7, type metadata accessor for SDAirDropDiscoveredEndpoint);
  sub_1001A4BC8(v8, _s14descr1005DF7D1C10AskRequestVMa);
  return swift_task_switch(sub_10031AE18, v5, 0LL);
}

uint64_t sub_10031AE18()
{
  uint64_t v1 = *(void *)(v0 + 392);

  sub_100187100(v1, &qword_10064A140);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  swift_task_dealloc(*(void *)(v0 + 392));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031AE88()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 336);
  sub_10018709C((void *)(v0 + 256));
  uint64_t v4 = v3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  __n128 v5 = swift_beginAccess(v4, v0 + 296, 0LL, 0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v4, 1LL, v1, v5))
  {
    swift_errorRelease(*(void *)(v0 + 408));
  }

  else
  {
    uint64_t v6 = *(void *)(v0 + 408);
    uint64_t v8 = *(void *)(v0 + 352);
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v9 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v4, v9);
    *(void *)(v0 + 320) = v6;
    SFProgressContinuation.yield(_:)(v0 + 320, v9);
    swift_errorRelease(v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }

  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v12 = *(void *)(v0 + 360);
  uint64_t v11 = *(void *)(v0 + 368);
  swift_task_dealloc(*(void *)(v0 + 392));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031AF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v5[8] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10031AFE4, 0LL, 0LL);
}

uint64_t sub_10031AFE4()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    if (qword_100644180 != -1) {
      swift_once(&qword_100644180, sub_1003187D4);
    }
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v5 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v5, (uint64_t)qword_10064E8A0);
    uint64_t v6 = sub_1001A4B84(v4, v3, type metadata accessor for SDAirDropDiscoveredEndpoint);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 64);
    if (v9)
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v12 = swift_slowAlloc(32LL, -1LL);
      uint64_t v18 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_10020E23C();
      uint64_t v14 = (const char *)v13;
      *(void *)(v0 + 40) = sub_10018CDB4(v15, v13, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease(v14);
      sub_1001A4BC8(v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Sending backup Ask to new endpoint: %s", v11, 0xCu);
      swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1LL, -1LL);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(*(void *)(v0 + 64), type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    __int128 v17 = (void *)swift_task_alloc(dword_10064EA5C);
    *(void *)(v0 + 80) = v17;
    *__int128 v17 = v0;
    v17[1] = sub_10031B230;
    return sub_10031A7E8(*(void *)(v0 + 56));
  }

  else
  {
    swift_task_dealloc(*(void *)(v0 + 64));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10031B230()
{
  return swift_task_switch(sub_10031B284, 0LL, 0LL);
}

uint64_t sub_10031B284()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031B2BC( uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v9 + 96) = a8;
  *(void *)(v9 + 104) = v8;
  *(void *)(v9 + 80) = a5;
  *(void *)(v9 + 88) = a6;
  *(void *)(v9 + 64) = a1;
  *(void *)(v9 + 72) = a3;
  uint64_t v14 = sub_100183098(&qword_10064A1A0);
  *(void *)(v9 + 112) = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_10064A1B8);
  *(void *)(v9 + 120) = v15;
  *(void *)(v9 + 128) = swift_task_alloc((*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_10064A1A8);
  *(void *)(v9 + 136) = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  *(void *)(v9 + 144) = v17;
  *(void *)(v9 + 152) = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = (int *)sub_100183098(&qword_10064A140);
  *(void *)(v9 + 160) = v18;
  unint64_t v19 = (*(void *)(*((void *)v18 - 1) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v9 + 168) = swift_task_alloc(v19);
  uint64_t v20 = swift_task_alloc(v19);
  *(void *)(v9 + 176) = v20;
  uint64_t v21 = v18[12];
  *(_DWORD *)(v9 + 184) = v21;
  uint64_t v22 = v20 + v21;
  uint64_t v23 = v18[20];
  *(_DWORD *)(v9 + 188) = v23;
  uint64_t v24 = v20 + v23;
  uint64_t v25 = v18[32];
  *(_DWORD *)(v9 + 192) = v25;
  uint64_t v26 = v20 + v25;
  *(_BYTE *)(v20 + 4) = BYTE4(a1);
  *(_DWORD *)uint64_t v20 = a1;
  sub_1001A4B84(a2, v22, _s14descr1005DF7D1C10AskRequestVMa);
  *(void *)(v20 + v18[16]) = a3;
  sub_1001A4B84(a4, v24, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v27 = v20 + v18[24];
  uint64_t v28 = *(void *)(a5 + 96);
  __int128 v30 = *(_OWORD *)(a5 + 64);
  __int128 v29 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v27 + 64) = v30;
  *(_OWORD *)(v27 + 80) = v29;
  *(void *)(v27 + 96) = v28;
  __int128 v32 = *(_OWORD *)(a5 + 16);
  __int128 v31 = *(_OWORD *)(a5 + 32);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)a5;
  *(_OWORD *)(v27 + 16) = v32;
  *(_OWORD *)(v27 + 32) = v31;
  *(void *)(v20 + v18[28]) = a6;
  sub_1001915A4(a7, v26, &qword_100649F80);
  id v33 = a3;
  sub_10025FCB0((void *)a5);
  swift_bridgeObjectRetain(a6);
  return swift_task_switch(sub_10031B4A8, v8, 0LL);
}

uint64_t sub_10031B4A8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 104) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  __n128 v4 = swift_beginAccess(v3, v0 + 16, 32LL, 0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1LL, v1, v4))
  {
    sub_100187100(*(void *)(v0 + 176), &qword_10064A140);
    swift_endAccess(v0 + 16);
  }

  else
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v51 = *(void *)(v0 + 176);
    uint64_t v6 = *(int **)(v0 + 160);
    uint64_t v49 = *(void *)(v0 + 152);
    uint64_t v50 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v45 = *(void *)(v0 + 120);
    os_log_type_t v47 = *(void **)(v0 + 96);
    uint64_t v48 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v53 = *(const char **)(v0 + 88);
    uint64_t v9 = *(void **)(v0 + 72);
    uint64_t v43 = v9;
    uint64_t v52 = *(void *)(v0 + 64);
    uint64_t v44 = v51 + *(int *)(v0 + 192);
    uint64_t v40 = v51 + *(int *)(v0 + 188);
    uint64_t v38 = v51 + *(int *)(v0 + 184);
    (*(void (**)(void))(v50 + 16))();
    swift_endAccess(v0 + 16);
    uint64_t v37 = v6[16];
    uint64_t v10 = v5 + v6[20];
    uint64_t v41 = v10;
    uint64_t v42 = v5 + v6[12];
    uint64_t v11 = v5 + v6[24];
    uint64_t v39 = v6[28];
    uint64_t v12 = v5 + v6[32];
    *(_BYTE *)(v5 + 4) = BYTE4(v52);
    *(_DWORD *)uint64_t v5 = v52;
    sub_1001A4B84(v38, v42, _s14descr1005DF7D1C10AskRequestVMa);
    *(void *)(v5 + v37) = v9;
    sub_1001A4B84(v40, v10, type metadata accessor for SDAirDropDiscoveredEndpoint);
    __int128 v14 = *(_OWORD *)(v8 + 16);
    __int128 v13 = *(_OWORD *)(v8 + 32);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v8;
    *(_OWORD *)(v11 + 16) = v14;
    *(_OWORD *)(v11 + 32) = v13;
    __int128 v16 = *(_OWORD *)(v8 + 64);
    __int128 v15 = *(_OWORD *)(v8 + 80);
    __int128 v17 = *(_OWORD *)(v8 + 48);
    *(void *)(v11 + 96) = *(void *)(v8 + 96);
    *(_OWORD *)(v11 + 64) = v16;
    *(_OWORD *)(v11 + 80) = v15;
    *(_OWORD *)(v11 + 48) = v17;
    *(void *)(v5 + v39) = v53;
    sub_1001915A4(v44, v12, &qword_100649F80);
    uint64_t v46 = *(int *)(v45 + 48);
    uint64_t v18 = v7 + v6[12];
    uint64_t v19 = v6[16];
    uint64_t v20 = v7 + v6[20];
    uint64_t v21 = v7 + v6[24];
    uint64_t v22 = v6[28];
    uint64_t v23 = v7 + v6[32];
    *(_BYTE *)(v7 + 4) = BYTE4(v52);
    *(_DWORD *)uint64_t v7 = v52;
    sub_1001A4B40(v42, v18, _s14descr1005DF7D1C10AskRequestVMa);
    *(void *)(v7 + v19) = v43;
    sub_1001A4B40(v41, v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
    __int128 v25 = *(_OWORD *)(v8 + 16);
    __int128 v24 = *(_OWORD *)(v8 + 32);
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v8;
    *(_OWORD *)(v21 + 16) = v25;
    *(_OWORD *)(v21 + 32) = v24;
    __int128 v27 = *(_OWORD *)(v8 + 64);
    __int128 v26 = *(_OWORD *)(v8 + 80);
    __int128 v28 = *(_OWORD *)(v8 + 48);
    *(void *)(v21 + 96) = *(void *)(v8 + 96);
    *(_OWORD *)(v21 + 64) = v27;
    *(_OWORD *)(v21 + 80) = v26;
    *(_OWORD *)(v21 + 48) = v28;
    *(void *)(v7 + v22) = v53;
    sub_1001870BC(v12, v23, &qword_100649F80);
    *(void *)(v7 + v46) = v47;
    id v29 = v43;
    sub_10025FCB0((void *)v8);
    swift_bridgeObjectRetain(v53);
    id v30 = v47;
    SFProgressContinuation.finish(with:)(v7, v48);
    sub_100187100(v7, &qword_10064A1B8);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v48);
    sub_100187100(v51, &qword_10064A140);
  }

  uint64_t v32 = *(void *)(v0 + 168);
  uint64_t v31 = *(void *)(v0 + 176);
  uint64_t v33 = *(void *)(v0 + 152);
  uint64_t v34 = *(void *)(v0 + 128);
  uint64_t v35 = *(void *)(v0 + 112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56LL))( v35,  1LL,  1LL,  *(void *)(v0 + 136));
  swift_beginAccess(v3, v0 + 40, 33LL, 0LL);
  sub_10031CD8C(v35, v3);
  swift_endAccess(v0 + 40);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031B810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  uint64_t v7 = sub_100183098(&qword_10064A1A8);
  v6[14] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v6[15] = v8;
  v6[16] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ContinuousClock(0LL);
  v6[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v6[18] = v10;
  v6[19] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v6[20] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v6[21] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[22] = swift_task_alloc(v13);
  v6[23] = swift_task_alloc(v13);
  uint64_t v14 = sub_100183098(&qword_100649F58);
  v6[24] = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v6[25] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v6[26] = v16;
  unint64_t v17 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[27] = swift_task_alloc(v17);
  v6[28] = swift_task_alloc(v17);
  return swift_task_switch(sub_10031B934, 0LL, 0LL);
}

uint64_t sub_10031B934()
{
  uint64_t v1 = *(void *)(v0 + 88) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 232) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 240) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner;
    return swift_task_switch(sub_10031BA14, Strong, 0LL);
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v6 = *(void *)(v0 + 184);
    uint64_t v5 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 152);
    uint64_t v9 = *(void *)(v0 + 128);
    swift_task_dealloc(*(void *)(v0 + 224));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10031BA14()
{
  uint64_t v1 = (void *)(v0[29] + v0[30]);
  uint64_t v2 = v1[3];
  v0[31] = v2;
  sub_10019A708(v1, v2);
  uint64_t v3 = *(void *)(v2 - 8);
  v0[32] = v3;
  v0[33] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(void))(v3 + 16))();
  return swift_task_switch(sub_10031BA98, 0LL, 0LL);
}

uint64_t sub_10031BA98()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[12];
  uint64_t v7 = *(void *)(*v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t))(v0[32] + 8LL);
  swift_retain(v7);
  uint64_t v9 = v8(v1, v2);
  CurrentValueSubject.value.getter(v9);
  swift_release(v7);
  uint64_t v10 = (const char *)v0[8];
  uint64_t v11 = swift_task_alloc(32LL);
  *(void *)(v11 + 16) = v6;
  sub_10028CBE0((uint64_t (*)(char *))sub_10031D0B4, (uint64_t)v10, v5);
  swift_bridgeObjectRelease(v10);
  swift_task_dealloc(v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1LL, v3) == 1)
  {
    uint64_t v12 = sub_100187100(v0[24], &qword_100649F58);
    uint64_t result = NWEndpoint.nw.getter(v12);
    if (result)
    {
      uint64_t v14 = result;
      uint64_t device_id = nw_endpoint_get_device_id();
      uint64_t v16 = swift_unknownObjectRelease(v14);
      if (device_id)
      {
        uint64_t v17 = String.init(cString:)(device_id);
        uint64_t v19 = v18;
        v0[34] = v18;
        uint64_t v20 = (void *)swift_task_alloc(dword_10064EA54);
        v0[35] = v20;
        *uint64_t v20 = v0;
        v20[1] = sub_10031BF04;
        uint64_t v21 = v0[29];
        v20[6] = v19;
        v20[7] = v21;
        v20[5] = v17;
        return swift_task_switch(sub_10031C4CC, v21, 0LL);
      }

      else
      {
        uint64_t v38 = v0[22];
        uint64_t v37 = v0[23];
        uint64_t v39 = v0[20];
        uint64_t v40 = v0[21];
        SFAirDropSend.Request.type.getter(v16);
        (*(void (**)(uint64_t, void, uint64_t))(v40 + 104))( v38,  enum case for SFAirDrop.TransferType.peerPayment(_:),  v39);
        char v41 = static SFAirDrop.TransferType.== infix(_:_:)(v37, v38);
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        v42(v38, v39);
        uint64_t v43 = ((uint64_t (*)(uint64_t, uint64_t))v42)(v37, v39);
        if ((v41 & 1) != 0) {
          unint64_t v44 = 0x8155A43676E00000LL;
        }
        else {
          unint64_t v44 = 0x70801D946C940000LL;
        }
        if ((v41 & 1) != 0) {
          uint64_t v45 = 6LL;
        }
        else {
          uint64_t v45 = 2LL;
        }
        ContinuousClock.init()(v43);
        os_log_type_t v47 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8
                                                                               + dword_1006461D8);
        uint64_t v46 = (void *)swift_task_alloc(unk_1006461DC);
        v0[37] = v46;
        void *v46 = v0;
        v46[1] = sub_10031C170;
        return v47(v44, v45, 0LL, 0LL, 1);
      }
    }

    else
    {
      __break(1u);
    }
  }

  else
  {
    uint64_t v22 = v0[33];
    sub_1001A4B40(v0[24], v0[28], type metadata accessor for SDAirDropDiscoveredEndpoint);
    swift_task_dealloc(v22);
    if (qword_100644180 != -1) {
      swift_once(&qword_100644180, sub_1003187D4);
    }
    uint64_t v23 = v0[27];
    uint64_t v24 = v0[28];
    uint64_t v25 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v25, (uint64_t)qword_10064E8A0);
    uint64_t v26 = sub_1001A4B84(v24, v23, type metadata accessor for SDAirDropDiscoveredEndpoint);
    __int128 v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v0[27];
    if (v29)
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v32 = swift_slowAlloc(32LL, -1LL);
      uint64_t v48 = v32;
      *(_DWORD *)uint64_t v31 = 136315138;
      sub_10020E23C();
      uint64_t v34 = (const char *)v33;
      v0[10] = sub_10018CDB4(v35, v33, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 10, v0 + 11, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease(v34);
      sub_1001A4BC8(v30, type metadata accessor for SDAirDropDiscoveredEndpoint);
      _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "Sending backup Ask to existing backup endpoint: %s",  v31,  0xCu);
      swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      sub_1001A4BC8(v0[27], type metadata accessor for SDAirDropDiscoveredEndpoint);
    }

    uint64_t v36 = (void *)swift_task_alloc(dword_10064EA5C);
    v0[36] = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_10031C084;
    return sub_10031A7E8(v0[13]);
  }

  return result;
}

uint64_t sub_10031BF04()
{
  uint64_t v1 = *(const char **)(*(void *)v0 + 272LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 280LL));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_10031BF60, 0LL, 0LL);
}

uint64_t sub_10031BF60(uint64_t a1)
{
  uint64_t v3 = v1[22];
  uint64_t v2 = v1[23];
  uint64_t v4 = v1[20];
  uint64_t v5 = v1[21];
  SFAirDropSend.Request.type.getter(a1);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))( v3,  enum case for SFAirDrop.TransferType.peerPayment(_:),  v4);
  char v6 = static SFAirDrop.TransferType.== infix(_:_:)(v2, v3);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v7(v3, v4);
  uint64_t v8 = ((uint64_t (*)(uint64_t, uint64_t))v7)(v2, v4);
  if ((v6 & 1) != 0) {
    unint64_t v9 = 0x8155A43676E00000LL;
  }
  else {
    unint64_t v9 = 0x70801D946C940000LL;
  }
  if ((v6 & 1) != 0) {
    uint64_t v10 = 6LL;
  }
  else {
    uint64_t v10 = 2LL;
  }
  ContinuousClock.init()(v8);
  unint64_t v13 = (char *)&dword_1006461D8 + dword_1006461D8;
  uint64_t v11 = (void *)swift_task_alloc(unk_1006461DC);
  v1[37] = v11;
  *uint64_t v11 = v1;
  v11[1] = sub_10031C170;
  return ((uint64_t (*)(unint64_t, uint64_t, void, void, uint64_t))v13)(v9, v10, 0LL, 0LL, 1LL);
}

uint64_t sub_10031C084()
{
  return swift_task_switch(sub_10031C0D8, 0LL, 0LL);
}

uint64_t sub_10031C0D8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_release(*(void *)(v0 + 232));
  sub_1001A4BC8(v1, type metadata accessor for SDAirDropDiscoveredEndpoint);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 128);
  swift_task_dealloc(*(void *)(v0 + 224));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031C170()
{
  uint64_t v2 = *(void **)v1;
  swift_task_dealloc(*(void *)(*(void *)v1 + 296LL));
  uint64_t v4 = v2[18];
  uint64_t v3 = v2[19];
  uint64_t v5 = v2[17];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_10031C220;
    uint64_t v7 = 0LL;
  }

  else
  {
    (*(void (**)(void, void))(v4 + 8))(v2[19], v2[17]);
    uint64_t v7 = v2[29];
    v2[38] = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
    uint64_t v6 = sub_10031C240;
  }

  return swift_task_switch(v6, v7, 0LL);
}

uint64_t sub_10031C220()
{
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 304) = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation;
  return swift_task_switch(sub_10031C240, v1, 0LL);
}

uint64_t sub_10031C240()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[29] + v0[38];
  __n128 v4 = swift_beginAccess(v3, v0 + 5, 0LL, 0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1LL, v1, v4))
  {
    uint64_t v5 = sub_10031C2E0;
  }

  else
  {
    (*(void (**)(void, void, void))(v0[15] + 16LL))(v0[16], v0[29] + v0[38], v0[14]);
    uint64_t v5 = sub_10031C370;
  }

  return swift_task_switch(v5, 0LL, 0LL);
}

uint64_t sub_10031C2E0()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 128);
  swift_task_dealloc(*(void *)(v0 + 224));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031C370()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v6 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v7 = swift_allocError(v5, v6, 0LL, 0LL);
  uint64_t v9 = v8;
  sub_10020CB28();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))( v9,  enum case for SFAirDropSend.Failure.missingEndpoint(_:),  v5);
  *(void *)(v0 + 72) = v7;
  SFProgressContinuation.yield(_:)(v0 + 72, v4);
  swift_release(v1);
  swift_errorRelease(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc(*(void *)(v0 + 264));
  uint64_t v10 = *(void *)(v0 + 216);
  uint64_t v12 = *(void *)(v0 + 184);
  uint64_t v11 = *(void *)(v0 + 192);
  uint64_t v13 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 152);
  uint64_t v15 = *(void *)(v0 + 128);
  swift_task_dealloc(*(void *)(v0 + 224));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10031C4B0(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  return swift_task_switch(sub_10031C4CC, v2, 0LL);
}

uint64_t sub_10031C4CC()
{
  if (qword_100644180 != -1) {
    swift_once(&qword_100644180, sub_1003187D4);
  }
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064E8A0);
  swift_bridgeObjectRetain_n(v1, 2LL);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(const char **)(v0 + 48);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    v16[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain(v7);
    *(void *)(v0 + 16) = sub_10018CDB4(v8, (unint64_t)v7, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease_n(v7, 3LL);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  v5,  "No backup endpoint present, adding deviceID for needsFallback %s",  v9,  0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(*(void *)(v0 + 48), 2LL);
  }

  uint64_t v11 = *(const char **)(v0 + 48);
  uint64_t v12 = *(void *)(v0 + 40);
  *(void *)&double v13 = swift_beginAccess( *(void *)(v0 + 56)
                    + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs,
                      v0 + 16,
                      33LL,
                      0LL).n128_u64[0];
  swift_bridgeObjectRetain(v11, v13);
  sub_1003B572C(v16, v12, (uint64_t)v11);
  swift_endAccess(v0 + 16);
  __n128 v14 = swift_bridgeObjectRelease((const char *)v16[1]);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v14);
}

uint64_t sub_10031C6D0()
{
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t result = NWEndpoint.nw.getter(v0);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t device_id = nw_endpoint_get_device_id();
    swift_unknownObjectRelease(v5);
    if (device_id)
    {
      uint64_t v8 = String.init(cString:)(device_id);
      uint64_t v10 = v9;
      if (v3)
      {
        if (v9)
        {
          if (v1 == v8 && v3 == v9)
          {
            *(void *)&double v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
            char v11 = 1;
          }

          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v1, v3, v8, v9, 0LL);
            *(void *)&double v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
          }

          goto LABEL_14;
        }

        goto LABEL_9;
      }

      if (v9)
      {
        char v11 = 0;
LABEL_14:
        swift_bridgeObjectRelease(v10, v7);
        return v11 & 1;
      }
    }

    else if (v3)
    {
LABEL_9:
      char v11 = 0;
      swift_bridgeObjectRelease(v3, v7);
      return v11 & 1;
    }

    char v11 = 1;
    return v11 & 1;
  }

  __break(1u);
  return result;
}

uint64_t sub_10031C7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10020C5CC();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  sub_10020C5CC();
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n(v9, 2LL);
    sub_1001A4B84(a2, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_14;
  }

  double v13 = v11;
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0LL);
  *(void *)&double v15 = swift_bridgeObjectRelease(v9).n128_u64[0];
  swift_bridgeObjectRelease(v13, v15);
  sub_1001A4B84(a2, (uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
  if ((v14 & 1) != 0)
  {
LABEL_14:
    sub_1001A4BC8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    goto LABEL_15;
  }

  sub_10020EEE0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  sub_10020EEE0();
  uint64_t v22 = v21;
  if (!v19)
  {
    sub_1001A4BC8((uint64_t)v5, type metadata accessor for SDAirDropDiscoveredEndpoint);
    if (v22)
    {
      swift_bridgeObjectRelease(v22);
LABEL_20:
      char v24 = 0;
      return v24 & 1;
    }

uint64_t sub_10031C9A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_sendRequest;
  uint64_t v2 = type metadata accessor for SFAirDropSend.Request(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_initialTransfer;
  uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);

  sub_10018709C((void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_runner));
  sub_100187100(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askContinuation, &qword_10064A1A0);
  *(void *)&double v5 = swift_bridgeObjectRelease((const char *)*(void *)(v0
                                                                     + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_askTasks)).n128_u64[0];
  *(void *)&double v6 = swift_bridgeObjectRelease( (const char *)*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_failedResolveEndpointIDs),  v5).n128_u64[0];
  swift_bridgeObjectRelease( *(const char **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropAskFanoutHelper_needsFallbackDeviceIDs),  v6);
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_10031CA94()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10031CAAC()
{
  return type metadata accessor for SDAirDropAskFanoutHelper(0LL);
}

uint64_t type metadata accessor for SDAirDropAskFanoutHelper(uint64_t a1)
{
  uint64_t result = qword_10064E930;
  if (!qword_10064E930) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropAskFanoutHelper);
  }
  return result;
}

void sub_10031CAF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropSend.Request(319LL);
  if (v3 <= 0x3F)
  {
    v8[1] = *(void *)(v2 - 8) + 64LL;
    uint64_t v4 = type metadata accessor for SFAirDropSend.Transfer(319LL);
    if (v5 <= 0x3F)
    {
      v8[2] = *(void *)(v4 - 8) + 64LL;
      v8[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
      void v8[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v8[5] = &unk_1004D5598;
      sub_10031CBD0(319LL);
      if (v7 <= 0x3F)
      {
        v8[6] = *(void *)(v6 - 8) + 64LL;
        v8[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v8[10] = &unk_1004D55B0;
        swift_updateClassMetadata2(a1, 256LL, 11LL, v8, a1 + 80);
      }
    }
  }

void sub_10031CBD0(uint64_t a1)
{
  if (!qword_10064E940)
  {
    uint64_t v2 = sub_100183124(&qword_10064A1A8);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_10064E940);
    }
  }

uint64_t sub_10031CC28()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10031CC4C(uint64_t *a1)
{
  return sub_100318AEC( a1,  v1,  (uint64_t)&unk_1005DAED0,  (uint64_t)&unk_1005DAEF8,  (uint64_t)&unk_10064EA90,  (uint64_t)&unk_10064EA98);
}

unint64_t sub_10031CC84()
{
  unint64_t result = qword_10064EA30;
  if (!qword_10064EA30)
  {
    uint64_t v1 = sub_100183124(&qword_100648588);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_10064EA30);
  }

  return result;
}

uint64_t sub_10031CCD0(uint64_t *a1)
{
  return sub_100318AEC( a1,  v1,  (uint64_t)&unk_1005DAE58,  (uint64_t)&unk_1005DAE80,  (uint64_t)&unk_10064EA70,  (uint64_t)&unk_100646248);
}

uint64_t sub_10031CD08(uint64_t result)
{
  if (result != 1) {
    return swift_errorRelease(result);
  }
  return result;
}

uint64_t sub_10031CD18()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10031CD3C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10031CD68()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10031CD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064A1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031CDD4()
{
  uint64_t v1 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  uint64_t v8 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL);
  v9(v0 + v2, v8);
  uint64_t v10 = v0 + v6;
  switch(swift_getEnumCaseMultiPayload(v0 + v6, v4))
  {
    case 0u:
      v9(v0 + v6, v8);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(v10 + 8));
      uint64_t v17 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
      v9(v10 + v17[5], v8);
      *(void *)&double v18 = swift_bridgeObjectRelease((const char *)*(void *)(v10 + v17[7] + 8)).n128_u64[0];
      *(void *)&double v19 = swift_bridgeObjectRelease((const char *)*(void *)(v10 + v17[8] + 8), v18).n128_u64[0];
      *(void *)&double v20 = swift_bridgeObjectRelease((const char *)*(void *)(v10 + v17[9] + 8), v19).n128_u64[0];
      *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)(v10 + v17[10] + 8), v20).n128_u64[0];
      *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)(v10 + v17[11] + 8), v21).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v10 + v17[12] + 8), v22);
      uint64_t v23 = (uint64_t *)(v10 + v17[14]);
      unint64_t v15 = v23[1];
      if (v15 >> 60 != 15)
      {
        uint64_t v16 = *v23;
        goto LABEL_8;
      }

      break;
    case 2u:
      sub_100189B20(*(void *)v10, *(void *)(v10 + 8));
      char v11 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
      uint64_t v12 = v10 + v11[5];
      uint64_t v13 = type metadata accessor for UUID(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
      swift_unknownObjectRelease(*(void *)(v10 + v11[6]));
      swift_bridgeObjectRelease(*(const char **)(v10 + v11[7] + 8));
      break;
    case 3u:
      *(void *)&double v14 = swift_bridgeObjectRelease((const char *)*(void *)(v10 + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v10 + 24), v14);
      unint64_t v15 = *(void *)(v10 + 40);
      if (v15 >> 60 != 15)
      {
        uint64_t v16 = *(void *)(v10 + 32);
LABEL_8:
        sub_100189B20(v16, v15);
      }

      break;
    default:
      return swift_deallocObject(v0, v6 + v7);
  }

  return swift_deallocObject(v0, v6 + v7);
}

uint64_t sub_10031CFF8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint.ApplicationServiceEndpoint(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 80LL);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v12 = (uint64_t)v1 + v5;
  uint64_t v13 = (uint64_t)v1 + (v8 & ~v7);
  double v14 = (void *)swift_task_alloc(dword_10064EA44);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_100195708;
  return sub_10031B810(a1, v9, v10, v11, v12, v13);
}

uint64_t sub_10031D0B4()
{
  return sub_10031C6D0() & 1;
}

uint64_t sub_10031D0D4(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((v4 + 40) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_10064EA6C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return swift_task_switch(sub_100318EE4, 0LL, 0LL);
}

uint64_t sub_10031D164(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_10064EA7C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_10031AF8C(a1, v5, v6, v7, v8);
}

uint64_t sub_10031D1FC(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((v4 + 40) & ~v4);
  uint64_t v7 = (void *)swift_task_alloc(dword_10064EA8C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return swift_task_switch(sub_100318880, 0LL, 0LL);
}

uint64_t sub_10031D288(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_100646244);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1001943E8;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_100646240 + dword_100646240))(a1, v4);
}

uint64_t sub_10031D2FC()
{
  uint64_t v1 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload(v0 + v3, v1))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v3, v6);
      break;
    case 1u:
      swift_bridgeObjectRelease(*(const char **)(v5 + 8));
      uint64_t v13 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.BonjourEndpoint(0LL);
      uint64_t v14 = v5 + v13[5];
      uint64_t v15 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v14, v15);
      *(void *)&double v16 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v13[7] + 8)).n128_u64[0];
      *(void *)&double v17 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v13[8] + 8), v16).n128_u64[0];
      *(void *)&double v18 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v13[9] + 8), v17).n128_u64[0];
      *(void *)&double v19 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v13[10] + 8), v18).n128_u64[0];
      *(void *)&double v20 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + v13[11] + 8), v19).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + v13[12] + 8), v20);
      double v21 = (uint64_t *)(v5 + v13[14]);
      unint64_t v11 = v21[1];
      if (v11 >> 60 != 15)
      {
        uint64_t v12 = *v21;
        goto LABEL_8;
      }

      break;
    case 2u:
      sub_100189B20(*(void *)v5, *(void *)(v5 + 8));
      uint64_t v7 = (int *)type metadata accessor for SDAirDropDiscoveredEndpoint.NearFieldEndpoint(0LL);
      uint64_t v8 = v5 + v7[5];
      uint64_t v9 = type metadata accessor for UUID(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
      swift_unknownObjectRelease(*(void *)(v5 + v7[6]));
      swift_bridgeObjectRelease(*(const char **)(v5 + v7[7] + 8));
      break;
    case 3u:
      *(void *)&double v10 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v5 + 24), v10);
      unint64_t v11 = *(void *)(v5 + 40);
      if (v11 >> 60 != 15)
      {
        uint64_t v12 = *(void *)(v5 + 32);
LABEL_8:
        sub_100189B20(v12, v11);
      }

      break;
    default:
      return swift_deallocObject(v0, v3 + v4);
  }

  return swift_deallocObject(v0, v3 + v4);
}

uint64_t sub_10031D4F4(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SDAirDropDiscoveredEndpoint(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_10064EAA4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1001943E8;
  return sub_100319EAC(a1, v5, v6, v7, v8);
}

uint64_t sub_10031D588(uint64_t a1)
{
  return sub_10031C7C4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_10031D5B0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064EAB0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064EAB0);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

double sub_10031D640()
{
  id v0 = [(id)objc_opt_self(IDSServerBag) sharedInstance];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (!v2)
  {
    if (qword_100644188 != -1) {
      swift_once(&qword_100644188, sub_10031D5B0);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_10064EAB0);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v15 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v30[0] = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      *(void *)&v29[0] = sub_10018CDB4(0xD000000000000028LL, 0x800000010050A5D0LL, (uint64_t *)v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v29, (char *)v29 + 8, v14 + 4, v14 + 12);
      _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "Pseudonym properties provider failed to retrieve an IDS Server Bag object for key %s",  v14,  0xCu);
      swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    return 2592000.0;
  }

  _bridgeAnyObjectToAny(_:)(v29, v2);
  swift_unknownObjectRelease(v2);
  sub_100186D8C(v29, v30);
  sub_100187058((uint64_t)v30, (uint64_t)v29);
  if (!swift_dynamicCast(&v26, v29, (char *)&type metadata for Any + 8, &type metadata for Double, 6LL))
  {
    if (qword_100644188 != -1) {
      swift_once(&qword_100644188, sub_10031D5B0);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v16, (uint64_t)qword_10064EAB0);
    uint64_t v17 = sub_100187058((uint64_t)v30, (uint64_t)v29);
    double v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc(22LL, -1LL);
      uint64_t v21 = swift_slowAlloc(64LL, -1LL);
      uint64_t v28 = v21;
      *(_DWORD *)uint64_t v20 = 136315394;
      sub_100187058((uint64_t)v29, (uint64_t)&v26);
      uint64_t v22 = String.init<A>(describing:)(&v26, (char *)&type metadata for Any + 8);
      unint64_t v24 = v23;
      double v26 = COERCE_DOUBLE(sub_10018CDB4(v22, v23, &v28));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v20 + 4, v20 + 12);
      swift_bridgeObjectRelease(v24);
      sub_10018709C(v29);
      *(_WORD *)(v20 + 12) = 2080;
      double v26 = COERCE_DOUBLE(sub_10018CDB4(0xD000000000000028LL, 0x800000010050A5D0LL, &v28));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v20 + 14, v20 + 22);
      _os_log_impl( (void *)&_mh_execute_header,  v18,  v19,  "Pseudonym properties provider retrieved an invalid IDS Server Bag object %s for key %s",  (uint8_t *)v20,  0x16u);
      swift_arrayDestroy(v21, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1LL, -1LL);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    else
    {

      sub_10018709C(v29);
    }

    goto LABEL_20;
  }

  double v3 = v26;
  if (v26 > 2592000.0)
  {
    if (qword_100644188 != -1) {
      swift_once(&qword_100644188, sub_10031D5B0);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_10064EAB0);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc(32LL, -1LL);
      uint64_t v9 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v29[0] = v9;
      *(_DWORD *)uint64_t v8 = 134218498;
      double v26 = v3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v8 + 4, v8 + 12);
      *(_WORD *)(v8 + 12) = 2080;
      double v26 = COERCE_DOUBLE(sub_10018CDB4(0xD000000000000028LL, 0x800000010050A5D0LL, (uint64_t *)v29));
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v8 + 14, v8 + 22);
      *(_WORD *)(v8 + 22) = 2048;
      double v26 = 2592000.0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, v27, v8 + 24, v8 + 32);
      _os_log_impl( (void *)&_mh_execute_header,  v6,  v7,  "Pseudonym properties provider retrieved an invalid IDS Server Bag value %f for key %s greater than %f",  (uint8_t *)v8,  0x20u);
      swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

LABEL_20:
    sub_10018709C(v30);
    return 2592000.0;
  }

  sub_10018709C(v30);
  return v3;
}

uint64_t sub_10031DBBC()
{
  id v0 = [(id)objc_opt_self(IDSServerBag) sharedInstance];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (!v2)
  {
    if (qword_100644188 != -1) {
      swift_once(&qword_100644188, sub_10031D5B0);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    uint64_t v5 = sub_100186DE4(v4, (uint64_t)qword_10064EAB0);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v9 = swift_slowAlloc(32LL, -1LL);
      *(void *)&v24[0] = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      *(void *)&v23[0] = sub_10018CDB4(0xD000000000000019LL, 0x800000010050A5B0LL, (uint64_t *)v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v23, (char *)v23 + 8, v8 + 4, v8 + 12);
      _os_log_impl( (void *)&_mh_execute_header,  v6,  v7,  "Pseudonym properties provider failed to retrieve an IDS Server Bag object for key %s",  v8,  0xCu);
      uint64_t v3 = 1LL;
      swift_arrayDestroy(v9, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);

      return v3;
    }

    return 1LL;
  }

  _bridgeAnyObjectToAny(_:)(v23, v2);
  swift_unknownObjectRelease(v2);
  sub_100186D8C(v23, v24);
  sub_100187058((uint64_t)v24, (uint64_t)v23);
  if (!swift_dynamicCast(&v20, v23, (char *)&type metadata for Any + 8, &type metadata for Bool, 6LL))
  {
    if (qword_100644188 != -1) {
      swift_once(&qword_100644188, sub_10031D5B0);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v10, (uint64_t)qword_10064EAB0);
    uint64_t v11 = sub_100187058((uint64_t)v24, (uint64_t)v23);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc(22LL, -1LL);
      uint64_t v15 = swift_slowAlloc(64LL, -1LL);
      uint64_t v22 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      sub_100187058((uint64_t)v23, (uint64_t)&v20);
      uint64_t v16 = String.init<A>(describing:)(&v20, (char *)&type metadata for Any + 8);
      double v18 = (const char *)v17;
      uint64_t v20 = sub_10018CDB4(v16, v17, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v14 + 4, v14 + 12);
      swift_bridgeObjectRelease(v18);
      sub_10018709C(v23);
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t v20 = sub_10018CDB4(0xD000000000000019LL, 0x800000010050A5B0LL, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v14 + 14, v14 + 22);
      _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "Pseudonym properties provider retrieved an invalid IDS Server Bag object %s for key %s",  (uint8_t *)v14,  0x16u);
      swift_arrayDestroy(v15, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    else
    {

      sub_10018709C(v23);
    }

    sub_10018709C(v24);
    return 1LL;
  }

  uint64_t v3 = v20;
  sub_10018709C(v24);
  return v3;
}

ValueMetadata *type metadata accessor for SDPseudonymPropertiesProvider()
{
  return &type metadata for SDPseudonymPropertiesProvider;
}

uint64_t sub_10031DFC4(uint64_t a1)
{
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100267E68, static AirDropActor.shared, 0LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerCredentialLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary38SDAirDropContentHandlerCredentialLinks);
}

uint64_t sub_10031E04C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerCredentialLinks();
  uint64_t result = swift_allocObject(v2, 16LL, 7LL);
  *a1 = result;
  return result;
}

uint64_t sub_10031E080()
{
  uint64_t v1 = 0x3FF0000000000000LL;
  return SFProgressTask.init(_:initialProgress:operation:file:line:)( 0x615420796D6D7544LL,  0xEA00000000006B73LL,  &v1,  &unk_10064EB88,  0LL,  0xD00000000000006DLL,  0x800000010050A640LL,  95LL,  &type metadata for Double,  &type metadata for Bool);
}

void sub_10031E0FC(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v6, v26);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x49544E4544455243LL;
  uint64_t v8 = inited + 32;
  *(void *)(inited + 40) = 0xEA00000000004C41LL;
  *(void *)(inited + 48) = v5;
  *(void *)&double v9 = swift_bridgeObjectRetain((const char *)0xEA00000000004C41LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v9);
  v10._countAndFlagsBits = 95LL;
  v10._object = (void *)0xE100000000000000LL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x49544E4544455243LL;
  v11._object = (void *)0xEA00000000004C41LL;
  String.append(_:)(v11);
  swift_bridgeObjectRelease((const char *)0xEA00000000004C41LL);
  if (v5 > 1)
  {
    v12._countAndFlagsBits = 0x4C4152554C505FLL;
    v12._object = (void *)0xE700000000000000LL;
    String.append(_:)(v12);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a3 & 1) != 0)
  {
    v13._countAndFlagsBits = 0x4C4154495041435FLL;
    v13._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v13);
  }

  v14._countAndFlagsBits = 0x545845545FLL;
  v14._object = (void *)0xE500000000000000LL;
  String.append(_:)(v14);
  swift_setDeallocating(inited);
  uint64_t v15 = *(void *)(inited + 16);
  uint64_t v16 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v8, v15, v16);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v19 = (id)SFLocalizedStringForKey(v17, v18);

  if (v19)
  {
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    uint64_t v22 = v21;

    uint64_t v23 = sub_100183098(&qword_1006483E0);
    uint64_t v24 = swift_allocObject(v23, 72LL, 7LL);
    *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v24 + 56) = &type metadata for Int;
    *(void *)(v24 + 64) = &protocol witness table for Int;
    *(void *)(v24 + 32) = v5;
    static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
    *(void *)&double v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v24, v25);
  }

  else
  {
    __break(1u);
  }

uint64_t storeEnumTagSinglePayload for SDTempPairingSubService(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_10031E390 + 4 * byte_1004D5690[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_10031E3B0 + 4 * byte_1004D5695[v4]))();
  }
}

_BYTE *sub_10031E390(_BYTE *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

_BYTE *sub_10031E3B0(_BYTE *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_10031E3B8(_DWORD *result, int a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_10031E3C0(_WORD *result, __int16 a2)
{
  *uint64_t result = a2;
  return result;
}

_WORD *sub_10031E3C8(_WORD *result)
{
  *uint64_t result = 0;
  return result;
}

_DWORD *sub_10031E3D0(_DWORD *result)
{
  *uint64_t result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingSubService()
{
  return &type metadata for SDTempPairingSubService;
}

void *sub_10031E3EC@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0LL;
  return result;
}

uint64_t sub_10031E400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10031E4F0();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10031E45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10031E4F0();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_10031E4AC()
{
  unint64_t result = qword_10064EB90;
  if (!qword_10064EB90)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5780, &type metadata for SDTempPairingSubService);
    atomic_store(result, (unint64_t *)&qword_10064EB90);
  }

  return result;
}

unint64_t sub_10031E4F0()
{
  unint64_t result = qword_10064EB98;
  if (!qword_10064EB98)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5708, &type metadata for SDTempPairingSubService);
    atomic_store(result, (unint64_t *)&qword_10064EB98);
  }

  return result;
}

uint64_t sub_10031E534()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_10064EBA0);
  uint64_t inited = swift_initStackObject(v2, v23);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CE420;
  *(void *)(inited + 32) = 115LL;
  *(void *)(inited + 40) = 0xE100000000000000LL;
  *(void *)(inited + 48) = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = 28260LL;
  *(void *)(inited + 72) = 0xE200000000000000LL;
  unint64_t v5 = (const char *)v0[1];
  *(void *)(inited + 80) = *v0;
  *(void *)(inited + 88) = v5;
  *(void *)(inited + 96) = 27504LL;
  *(void *)(inited + 104) = 0xE200000000000000LL;
  uint64_t v6 = v0[2];
  uint64_t v7 = v1[3];
  swift_bridgeObjectRetain(v5);
  sub_1002DDC60(v6, v7);
  double v9 = v8;
  uint64_t v10 = sub_100183098((uint64_t *)&unk_10064D7D0);
  unint64_t v11 = sub_1001FF494();
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v10, v11);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease(v9);
  *(void *)(inited + 112) = v12;
  *(void *)(inited + 120) = v14;
  *(void *)(inited + 128) = 29793LL;
  *(void *)(inited + 136) = 0xE200000000000000LL;
  sub_1002DDC60(v1[4], v1[5]);
  uint64_t v16 = v15;
  uint64_t v17 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v10, v11);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease(v16);
  *(void *)(inited + 144) = v17;
  *(void *)(inited + 152) = v19;
  unint64_t v20 = sub_100392318(inited);
  return NWTXTRecord.init(_:)(v20, v21);
}

uint64_t sub_10031E6A8(uint64_t a1, const char *a2, uint64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v15 = (uint64_t)a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v4 = String.init<A>(_:)( &v14,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000LL) == 0)
  {
    if ((v5 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v14 = v6;
    uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }

  uint64_t v6 = sub_1002131B0(v4, v5);
  unint64_t v11 = (unint64_t)v10;
  swift_bridgeObjectRelease((const char *)v7);
  unint64_t v7 = v11;
  if ((v11 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }

unsigned __int8 *sub_10031E788(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v14 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v15 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v16 = a3 + 55;
        }

        else
        {
          unsigned __int8 v15 = 97;
          unsigned __int8 v16 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v17 = a3 + 48;
        }
        else {
          unsigned __int8 v17 = 58;
        }
        if (result)
        {
          LOBYTE(v8) = 0;
          uint64_t v18 = result + 1;
          do
          {
            unsigned int v19 = *v18;
            if (v19 < 0x30 || v19 >= v17)
            {
              if (v19 < 0x41 || v19 >= v16)
              {
                unsigned __int8 v12 = 0;
                int v13 = 1;
                if (v19 < 0x61 || v19 >= v15) {
                  return (unsigned __int8 *)(v12 | (v13 << 8));
                }
                char v20 = -87;
              }

              else
              {
                char v20 = -55;
              }
            }

            else
            {
              char v20 = -48;
            }

            unsigned int v8 = (v8 * a3) + (v19 + v20);
            if (((v8 >> 8) & 1) != 0) {
              goto LABEL_72;
            }
            ++v18;
            --v14;
          }

          while (v14);
LABEL_48:
          int v13 = 0;
          unsigned __int8 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 8));
        }

        goto LABEL_71;
      }

LABEL_71:
        unsigned __int8 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 8));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

void sub_10031EA30(uint64_t a1, const char *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if ((String.count.getter(a1, a2) & 1) != 0)
  {
    swift_bridgeObjectRelease(v2);
    return;
  }

  uint64_t v4 = String.count.getter(v3, v2);
  uint64_t v71 = v3;
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v74 = _swiftEmptyArrayStorage;
    sub_10018D94C(0, v4 & ~(v4 >> 63), 0);
    if (v5 < 0)
    {
LABEL_103:
      __break(1u);
      return;
    }

    unsigned __int8 v6 = v74;
    uint64_t v7 = 15LL;
    do
    {
      uint64_t v8 = String.subscript.getter(v7, v3, v2);
      uint64_t v10 = v9;
      uint64_t v74 = v6;
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1)
      {
        sub_10018D94C(v11 > 1, v12 + 1, 1);
        uint64_t v3 = v71;
        unsigned __int8 v6 = v74;
      }

      v6[2] = v12 + 1;
      int v13 = &v6[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      uint64_t v7 = String.index(after:)(v7, v3, v2);
      --v5;
    }

    while (v5);
  }

  else
  {
    unsigned __int8 v6 = _swiftEmptyArrayStorage;
  }

  unint64_t v14 = v6[2];
  if (v14) {
    int64_t v15 = ((v14 - 1) >> 1) + 1;
  }
  else {
    int64_t v15 = 0LL;
  }
  uint64_t v76 = _swiftEmptyArrayStorage;
  sub_10018D82C(0, v15, 0);
  unsigned __int8 v16 = _swiftEmptyArrayStorage;
  if (!v14)
  {
LABEL_29:
    swift_bridgeObjectRelease((const char *)v6, v70);
    uint64_t v43 = v16[2];
    if (!v43) {
      goto LABEL_90;
    }
LABEL_30:
    unint64_t v44 = v2;
    uint64_t v45 = v16 + 4;
    uint64_t v46 = v16;
    swift_retain(v16);
    uint64_t v47 = 0LL;
    uint64_t v48 = (char *)_swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v49 = &v45[2 * v47];
      uint64_t v50 = *v49;
      unint64_t v51 = v49[1];
      uint64_t v52 = HIBYTE(v51) & 0xF;
      uint64_t v53 = v50 & 0xFFFFFFFFFFFFLL;
      if ((v51 & 0x2000000000000000LL) != 0) {
        uint64_t v54 = HIBYTE(v51) & 0xF;
      }
      else {
        uint64_t v54 = v50 & 0xFFFFFFFFFFFFLL;
      }
      if (v54)
      {
        if ((v51 & 0x1000000000000000LL) != 0)
        {
          swift_bridgeObjectRetain((const char *)v51);
          LOWORD(v50) = sub_10031E6A8(v50, (const char *)v51, 16LL);
          swift_bridgeObjectRelease((const char *)v51);
          if ((v50 & 0x100) == 0) {
            goto LABEL_80;
          }
        }

        else if ((v51 & 0x2000000000000000LL) != 0)
        {
          uint64_t v74 = (void *)v50;
          uint64_t v75 = v51 & 0xFFFFFFFFFFFFFFLL;
          if (v50 == 43)
          {
            if (!v52) {
              goto LABEL_101;
            }
            if (!--v52) {
              goto LABEL_32;
            }
            LOBYTE(v50) = 0;
            uint64_t v60 = (unsigned __int8 *)&v74 + 1;
            while (1)
            {
              int v61 = *v60;
              char v62 = v61 - 48;
              if ((v61 - 48) >= 0xA)
              {
                if ((v61 - 65) < 6)
                {
                  char v62 = v61 - 55;
                }

                else
                {
                  char v62 = v61 - 87;
                }
              }

              LOBYTE(v50) = v62 + 16 * v50;
              ++v60;
              if (!--v52) {
                goto LABEL_79;
              }
            }
          }

          if (v50 == 45)
          {
            if (!v52) {
              goto LABEL_100;
            }
            if (!--v52) {
              goto LABEL_32;
            }
            LOBYTE(v50) = 0;
            uint64_t v57 = (unsigned __int8 *)&v74 + 1;
            while (1)
            {
              int v58 = *v57;
              unsigned __int8 v59 = v58 - 48;
              if ((v58 - 48) >= 0xA)
              {
                if ((v58 - 65) < 6)
                {
                  unsigned __int8 v59 = v58 - 55;
                }

                else
                {
                  unsigned __int8 v59 = v58 - 87;
                }
              }

              LODWORD(v50) = 16 * (v50 & 0xF) - v59;
              if ((v50 & 0xFFFFFF00) != 0) {
                break;
              }
              ++v57;
              if (!--v52) {
                goto LABEL_79;
              }
            }

LABEL_78:
            LOBYTE(v50) = 0;
            LODWORD(v52) = 1;
LABEL_79:
            if ((_DWORD)v52) {
              goto LABEL_32;
            }
LABEL_80:
            if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0) {
              uint64_t v48 = sub_10018C0B4(0LL, *((void *)v48 + 2) + 1LL, 1, v48);
            }
            unint64_t v67 = *((void *)v48 + 2);
            unint64_t v66 = *((void *)v48 + 3);
            if (v67 >= v66 >> 1) {
              uint64_t v48 = sub_10018C0B4((char *)(v66 > 1), v67 + 1, 1, v48);
            }
            *((void *)v48 + 2) = v67 + 1;
            v48[v67 + 32] = v50;
            goto LABEL_32;
          }

          if (v52)
          {
            LOBYTE(v50) = 0;
            uint64_t v63 = (unsigned __int8 *)&v74;
            while (1)
            {
              int v64 = *v63;
              char v65 = v64 - 48;
              if ((v64 - 48) >= 0xA)
              {
                if ((v64 - 65) < 6)
                {
                  char v65 = v64 - 55;
                }

                else
                {
                  char v65 = v64 - 87;
                }
              }

              LOBYTE(v50) = v65 + 16 * v50;
              ++v63;
              if (!--v52) {
                goto LABEL_79;
              }
            }
          }
        }

        else
        {
          if ((v50 & 0x1000000000000000LL) != 0) {
            uint64_t v55 = (unsigned __int8 *)((v51 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v55 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v50, v51);
          }
          unsigned int v56 = sub_10031E788(v55, v53, 16LL);
          LOBYTE(v50) = v56;
          if (((v56 >> 8) & 1) == 0) {
            goto LABEL_80;
          }
        }
      }

    swift_once(&qword_100644408, sub_100458568);
    goto LABEL_10;
  }

  sub_1001CE0D0(&v126, (uint64_t)v129);
  if ((sub_1004764D0(a2, a3) & 1) != 0)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    __int128 v27 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v27, (uint64_t)qword_100656748);
    unint64_t v28 = swift_bridgeObjectRetain_n(a3, 2LL);
    unint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    uint64_t v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      unint64_t v32 = swift_slowAlloc(32LL, -1LL);
      *(void *)&uint64_t v126 = v32;
      *(_DWORD *)unint64_t v31 = 136315138;
      swift_bridgeObjectRetain(a3);
      uint64_t v124 = sub_10018CDB4(a2, a3, (uint64_t *)&v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease_n(a3, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v29,  v30,  "Already in a registration session for (%s), not attempting again",  v31,  0xCu);
      swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(a3, 2LL);
    }

    goto LABEL_55;
  }

  sub_10045D5D0(a2, a3, (uint64_t)v18);
  uint64_t v39 = type metadata accessor for Date(0LL);
  unint64_t v40 = *(void *)(v39 - 8);
  unint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  uint64_t v42 = v41(v18, 1LL, v39);
  sub_100187100((uint64_t)v18, &qword_1006457E8);
  if (v42 != 1)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    int v58 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v58, (uint64_t)qword_100656748);
    unsigned __int8 v59 = swift_bridgeObjectRetain_n(a3, 2LL);
    uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
    int v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      char v62 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v63 = swift_slowAlloc(32LL, -1LL);
      *(void *)&uint64_t v126 = v63;
      *(_DWORD *)char v62 = 136315138;
      swift_bridgeObjectRetain(a3);
      uint64_t v124 = sub_10018CDB4(a2, a3, (uint64_t *)&v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v124, v125, v62 + 4, v62 + 12);
      swift_bridgeObjectRelease_n(a3, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "Already Registered Device %s, not reregistering", v62, 0xCu);
      swift_arrayDestroy(v63, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v62, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(a3, 2LL);
    }

    goto LABEL_75;
  }

  uint64_t v116 = v40;
  uint64_t v43 = *(void *)&v5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager];
  if (!v43)
  {
    if (qword_100644408 != -1) {
      swift_once(&qword_100644408, sub_100458568);
    }
    int v64 = type metadata accessor for Logger(0LL);
    char v65 = sub_100186DE4(v64, (uint64_t)qword_100656748);
    unint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
    unint64_t v67 = static os_log_type_t.error.getter(v66);
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "No registration manager, not reregistering", v68, 2u);
      swift_slowDealloc(v68, -1LL, -1LL);
    }

    goto LABEL_75;
  }

  uint64_t v112 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager;
  uint64_t v113 = v41;
  unint64_t v44 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  swift_retain(v43);
  uint64_t v45 = [v44 standardUserDefaults];
  uint64_t v46 = String._bridgeToObjectiveC()();
  LODWORD(v114) = [v45 BOOLForKey:v46];

  if (qword_100644408 != -1) {
    swift_once(&qword_100644408, sub_100458568);
  }
  uint64_t v47 = type metadata accessor for Logger(0LL);
  unint64_t v115 = sub_100186DE4(v47, (uint64_t)qword_100656748);
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v115);
  uint64_t v49 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v50 = 67109120;
    LODWORD(v126) = v114;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v126, (char *)&v126 + 4, v50 + 4, v50 + 8);
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "mockDeviceNotUsed: %{BOOL}d", v50, 8u);
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  if ((_DWORD)v114) {
    unint64_t v51 = 0LL;
  }
  else {
    unint64_t v51 = 7LL;
  }
  swift_beginAccess(v43 + 16, &v124, 0LL, 0LL);
  uint64_t v52 = *(void *)(v43 + 16);
  uint64_t v53 = (unsigned int (*)(char *, uint64_t, uint64_t, __n128))v113;
  if (*(void *)(v52 + 16))
  {
    uint64_t v114 = v51;
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(v52);
    uint64_t v54 = sub_1003AD53C(a2, a3);
    if ((v55 & 1) != 0)
    {
      unsigned int v56 = v116;
      (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))( v16,  *(void *)(v52 + 56) + *(void *)(v116 + 72) * v54,  v39);
      uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
      v57(v16, 0LL, 1LL, v39);
    }

    else
    {
      uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56);
      v57(v16, 1LL, 1LL, v39);
    }

    swift_bridgeObjectRelease(v52);
    uint64_t v69 = swift_bridgeObjectRelease(a3);
    if (v53(v16, 1LL, v39, v69) == 1) {
      goto LABEL_41;
    }
    uint64_t v95 = sub_10047E934(v114);
    uint64_t v96 = *(void (***)(uint64_t, uint64_t))(v116 + 8);
    ((void (*)(char *, uint64_t))v96)(v16, v39);
    if ((v95 & 1) != 0 || (v121 & 1) != 0) {
      goto LABEL_42;
    }
    uint64_t v121 = v43;
    swift_bridgeObjectRetain_n(a3, 4LL);
    uint64_t v97 = v5;
    double v98 = (void *)Logger.logObject.getter(v97);
    uint64_t v99 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled((os_log_t)v98, (os_log_type_t)v99))
    {
      swift_release(v121);

      swift_bridgeObjectRelease_n(a3, 4LL);
LABEL_74:

LABEL_75:
      sub_10018709C(v129);
      return 0LL;
    }

    int v118 = v96;
    uint64_t v120 = v99;
    uint64_t v100 = 0x676E697373696DLL;
    uint64_t v101 = swift_slowAlloc(38LL, -1LL);
    id v119 = swift_slowAlloc(64LL, -1LL);
    uint64_t v123 = v119;
    *(_DWORD *)uint64_t v101 = 136315906;
    uint64_t v102 = *(void *)&v5[v112];
    if (v102)
    {
      swift_beginAccess(v102 + 16, &v126, 0LL, 0LL);
      uint64_t v103 = *(void *)(v102 + 16);
      if (*(void *)(v103 + 16))
      {
        swift_bridgeObjectRetain(a3);
        swift_retain(v102);
        swift_bridgeObjectRetain(v103);
        uint64_t v104 = sub_1003AD53C(a2, a3);
        if ((v105 & 1) != 0)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))( v13,  *(void *)(v103 + 56) + *(void *)(v116 + 72) * v104,  v39);
          uint64_t v106 = 0LL;
        }

        else
        {
          uint64_t v106 = 1LL;
        }

        v57(v13, v106, 1LL, v39);
        swift_bridgeObjectRelease(v103);
        swift_bridgeObjectRelease(a3);
        swift_release(v102);
        if (v113(v13, 1LL, v39) != 1)
        {
          uint64_t v100 = Date.description.getter();
          uint64_t v109 = v110;
          ((void (*)(char *, uint64_t))v118)(v13, v39);
          goto LABEL_73;
        }
      }

      else
      {
        v57(v13, 1LL, 1LL, v39);
      }

      sub_100187100((uint64_t)v13, &qword_1006457E8);
      uint64_t v109 = 0xE700000000000000LL;
      uint64_t v100 = 0x676E697373696DLL;
    }

    else
    {
      uint64_t v109 = 0xE700000000000000LL;
    }

void sub_10031F0AC(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = NWTXTRecord.subscript.getter(115LL, 0xE100000000000000LL);
  unint64_t v6 = v5;
  if (!v5)
  {
    uint64_t v14 = type metadata accessor for NWTXTRecord(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8LL))(a1, v14);
LABEL_50:
    Swift::String v25 = 0LL;
LABEL_51:
    uint64_t v26 = 0LL;
    unint64_t v27 = 0LL;
    unint64_t v28 = 0LL;
    unint64_t v29 = 0LL;
LABEL_52:
    *a2 = v6;
    a2[1] = (unint64_t)v25;
    a2[2] = v26;
    a2[3] = v27;
    a2[4] = v28;
    a2[5] = v29;
    return;
  }

  uint64_t v7 = HIBYTE(v5) & 0xF;
  uint64_t v8 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000LL) != 0) {
    uint64_t v9 = HIBYTE(v6) & 0xF;
  }
  else {
    uint64_t v9 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease((const char *)v6);
    goto LABEL_48;
  }

  if ((v6 & 0x1000000000000000LL) != 0)
  {
    uint64_t v11 = sub_100212BB0(v4, v6, 10LL);
    char v13 = v47;
    goto LABEL_46;
  }

  if ((v6 & 0x2000000000000000LL) == 0)
  {
    if ((v4 & 0x1000000000000000LL) != 0) {
      uint64_t v10 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v4, v6);
    }
    uint64_t v11 = (uint64_t)sub_100212B88(v10, v8, 10LL);
    char v13 = v12 & 1;
LABEL_46:
    swift_bridgeObjectRelease((const char *)v6);
    if ((v13 & 1) == 0 && !v11)
    {
      uint64_t v30 = NWTXTRecord.subscript.getter(28260LL, 0xE200000000000000LL);
      Swift::String v25 = v31;
      if (!v31)
      {
        uint64_t v37 = type metadata accessor for NWTXTRecord(0LL);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8LL))(a1, v37);
        unint64_t v6 = 0LL;
        goto LABEL_51;
      }

      unint64_t v6 = v30;
      uint64_t v32 = NWTXTRecord.subscript.getter(27504LL, 0xE200000000000000LL);
      if (v33 && (sub_10031EA30(v32, v33), v35 >> 60 != 15))
      {
        uint64_t v26 = v34;
        unint64_t v27 = v35;
        uint64_t v38 = NWTXTRecord.subscript.getter(29793LL, 0xE200000000000000LL);
        if (v39)
        {
          sub_10031EA30(v38, v39);
          unint64_t v28 = v40;
          unint64_t v29 = v41;
          uint64_t v42 = type metadata accessor for NWTXTRecord(0LL);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8LL))(a1, v42);
          if (v29 >> 60 != 15) {
            goto LABEL_52;
          }
        }

        else
        {
          uint64_t v43 = type metadata accessor for NWTXTRecord(0LL);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8LL))(a1, v43);
        }

        sub_100189B0C(v26, v27);
      }

      else
      {
        uint64_t v36 = type metadata accessor for NWTXTRecord(0LL);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8LL))(a1, v36);
      }

      swift_bridgeObjectRelease(v25);
      goto LABEL_49;
    }

uint64_t destroy for SDTempPairingTXTRecord(uint64_t a1)
{
  return sub_100189B20(*(void *)(a1 + 32), *(void *)(a1 + 40));
}

void *initializeWithCopy for SDTempPairingTXTRecord(void *a1, void *a2)
{
  uint64_t v4 = (const char *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain(v4);
  sub_10019BA8C(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v8 = a2[4];
  unint64_t v7 = a2[5];
  sub_10019BA8C(v8, v7);
  a1[4] = v8;
  a1[5] = v7;
  return a1;
}

void *assignWithCopy for SDTempPairingTXTRecord(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (const char *)a2[1];
  uint64_t v5 = (const char *)a1[1];
  a1[1] = v4;
  *(void *)&double v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  uint64_t v7 = a2[2];
  unint64_t v8 = a2[3];
  sub_10019BA8C(v7, v8);
  uint64_t v9 = a1[2];
  unint64_t v10 = a1[3];
  a1[2] = v7;
  a1[3] = v8;
  sub_100189B20(v9, v10);
  uint64_t v12 = a2[4];
  unint64_t v11 = a2[5];
  sub_10019BA8C(v12, v11);
  uint64_t v13 = a1[4];
  unint64_t v14 = a1[5];
  a1[4] = v12;
  a1[5] = v11;
  sub_100189B20(v13, v14);
  return a1;
}

__n128 _s17ClassroomEndpointVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for SDTempPairingTXTRecord(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = (const char *)a1[1];
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_100189B20(v6, v7);
  uint64_t v8 = a1[4];
  unint64_t v9 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100189B20(v8, v9);
  return a1;
}

uint64_t _s17ClassroomEndpointVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17ClassroomEndpointVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingTXTRecord()
{
  return &type metadata for SDTempPairingTXTRecord;
}

uint64_t storeEnumTagSinglePayload for SharingFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF7) {
    return ((uint64_t (*)(void))((char *)&loc_10031F760 + 4 * byte_1004D57D5[v4]))();
  }
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_10031F794 + 4 * asc_1004D57D0[v4]))();
}

uint64_t sub_10031F794(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031F79C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10031F7A4LL);
  }
  return result;
}

uint64_t sub_10031F7B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10031F7B8LL);
  }
  *(_BYTE *)__n128 result = a2 + 8;
  return result;
}

uint64_t sub_10031F7BC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10031F7C4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingFeatureFlags()
{
  return &type metadata for SharingFeatureFlags;
}

unint64_t sub_10031F7E4()
{
  unint64_t result = qword_10064EBA8;
  if (!qword_10064EBA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5864, &type metadata for SharingFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_10064EBA8);
  }

  return result;
}

uint64_t sub_10031F828(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_10031F854 + 4 * byte_1004D57DA[a1]))( "AirTag_PRX",  10LL);
}

const char *sub_10031F854()
{
  return "HomePodUseAMS";
}

const char *sub_10031F888()
{
  return "headphones_prox_upsell_supported";
}

const char *sub_10031F89C()
{
  return "marketing_upsell_use_sharing_config";
}

const char *sub_10031F8B0()
{
  return "ProductKitAssets";
}

const char *sub_10031F8D0()
{
  return "auto_unlock_ipad_as_realitydevice";
}

const char *sub_10031F8E4()
{
  return "Sharing";
}

uint64_t sub_10031F8F8()
{
  return sub_10031F828(*v0);
}

void *_s10AKSSessionVwCP(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s10AKSSessionVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t _s10AKSSessionVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 8) = v3;
  return result;
}

ValueMetadata *_s10AKSSessionVMa()
{
  return &_s10AKSSessionVN;
}

void sub_10031F978(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    unint64_t v2 = 0xC000000000000000LL;
  }
  else {
    unint64_t v2 = a2;
  }
  __asm { BR              X10 }

uint64_t sub_10031F9E8( uint64_t a1, unint64_t a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15, char a16, char a17, char a18, char a19, void *__src, uint64_t a21, uint64_t a22, uint64_t a23, uint64_t a24, uint64_t a25, uint64_t a26, uint64_t a27, uint64_t a28, uint64_t a29, uint64_t a30, uint64_t a31, uint64_t a32, uint64_t a33)
{
  uint64_t v50 = v33;
  __int16 v51 = v34;
  char v52 = BYTE2(v34);
  char v53 = BYTE3(v34);
  char v54 = BYTE4(v34);
  char v55 = BYTE5(v34);
  sub_1001A4C04(a1, a2);
  int v36 = aks_remote_session_step(v35, &v50, BYTE6(v34), &v56, &v49);
  if (qword_100644190 != -1) {
    swift_once(&qword_100644190, sub_1003200F0);
  }
  uint64_t v37 = type metadata accessor for Logger(0LL);
  uint64_t v38 = sub_100186DE4(v37, (uint64_t)qword_10064EBB0);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc(18LL, -1LL);
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = v42;
    *(_DWORD *)uint64_t v41 = 67109378;
    LODWORD(v48) = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, (char *)&v48 + 4, v41 + 4, v41 + 8);
    *(_WORD *)(v41 + 8) = 2080;
    uint64_t v43 = sub_100320180();
    unsigned int v45 = (const char *)v44;
    uint64_t v48 = sub_10018CDB4(v43, v44, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v41 + 10, v41 + 18);
    swift_bridgeObjectRelease(v45);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "AKS step ret: %d %s", (uint8_t *)v41, 0x12u);
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);
  }

  uint64_t v46 = sub_10032028C(v36, v56, v49, 0xD000000000000021LL, (const char *)0x800000010050A7C0LL);
  sub_100189B20(v33, v34);
  return v46;
}

void sub_10031FDB0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    unint64_t v2 = 0xC000000000000000LL;
  }
  else {
    unint64_t v2 = a2;
  }
  __asm { BR              X10 }

uint64_t sub_10031FE1C(uint64_t a1, unint64_t a2)
{
  uint64_t v16 = v2;
  __int16 v17 = v3;
  char v18 = BYTE2(v3);
  char v19 = BYTE3(v3);
  char v20 = BYTE4(v3);
  char v21 = BYTE5(v3);
  sub_1001A4C04(a1, a2);
  int v7 = aks_remote_peer_setup(v5, &v16, BYTE6(v3), &v23, &v22);
  if (v7 == -536870194)
  {
    unint64_t v8 = sub_100187014();
    uint64_t v9 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v8, 0LL, 0LL);
    *(_DWORD *)uint64_t v10 = 23;
    *(void *)(v10 + 8) = 0xD000000000000015LL;
    *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x800000010050A830LL;
    swift_willThrow(v9);
  }

  else
  {
    if (v6 <= 0xE) {
      uint64_t v11 = 0xD000000000000019LL;
    }
    else {
      uint64_t v11 = 0xD00000000000001FLL;
    }
    if (v6 <= 0xE) {
      uint64_t v12 = (const char *)0x800000010050A7F0LL;
    }
    else {
      uint64_t v12 = (const char *)0x800000010050A810LL;
    }
    uint64_t v13 = sub_10032028C(v7, v23, v22, v11, v12);
    if (!v4) {
      sub_100189B0C(v13, v14);
    }
    swift_bridgeObjectRelease(v12);
  }

  return sub_100189B20(v2, v3);
}

uint64_t sub_1003200F0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064EBB0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064EBB0);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100320180()
{
  strcpy((char *)v6, "AKSSession id=");
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int32,  &protocol witness table for Int32);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  v2._countAndFlagsBits = 0x67616279656B202CLL;
  v2._object = (void *)0xEF3D656C646E6148LL;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int32,  &protocol witness table for Int32);
  uint64_t v4 = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v4);
  return v6[0];
}

uint64_t sub_100320284()
{
  return sub_100320180();
}

uint64_t sub_10032028C(int a1, _BYTE *__src, uint64_t a3, uint64_t a4, const char *a5)
{
  if (a1)
  {
    if (qword_100644190 != -1) {
      swift_once(&qword_100644190, sub_1003200F0);
    }
    uint64_t v8 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v8, (uint64_t)qword_10064EBB0);
    uint64_t v9 = swift_bridgeObjectRetain_n(a5, 2LL);
    uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
    os_log_type_t v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc(18LL, -1LL);
      uint64_t v13 = swift_slowAlloc(32LL, -1LL);
      uint64_t v24 = v13;
      *(_DWORD *)uint64_t v12 = 136315394;
      swift_bridgeObjectRetain(a5, v24);
      uint64_t v26 = sub_10018CDB4(a4, (unint64_t)a5, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease_n(a5, 3LL);
      *(_WORD *)(v12 + 12) = 1024;
      LODWORD(v26) = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, (char *)&v26 + 4, v12 + 14, v12 + 18);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s, AKS errCode: %d", (uint8_t *)v12, 0x12u);
      swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a5, 2LL);
    }

    Swift::String v25 = a5;
    swift_bridgeObjectRetain(a5, a4);
    v16._countAndFlagsBits = 0x646F43727265202CLL;
    v16._object = (void *)0xEB00000000203A65LL;
    String.append(_:)(v16);
    LODWORD(v26) = a1;
    v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int32,  &protocol witness table for Int32);
    object = (const char *)v17._object;
    String.append(_:)(v17);
    swift_bridgeObjectRelease(object);
    uint64_t v15 = v24;
    char v19 = v25;
    unint64_t v20 = sub_100187014();
    uint64_t v21 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v20, 0LL, 0LL);
    *(_DWORD *)uint64_t v22 = 10;
    *(void *)(v22 + 8) = v15;
    *(void *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = v19;
    swift_willThrow(v21);
  }

  else
  {
    uint64_t v15 = 0LL;
    if (__src && a3 >= 1)
    {
      uint64_t v15 = sub_10033C9DC(__src, a3);
      free(__src);
    }
  }

  return v15;
}

uint64_t sub_100320530()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064EBC8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064EBC8);
  if (qword_100643FC8 != -1) {
    swift_once(&qword_100643FC8, sub_10023A3CC);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_1003205C0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100325AC8();
  unint64_t v5 = sub_100184D70();
  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_100320604(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  return a3(1LL);
}

uint64_t sub_100320628()
{
  uint64_t v1 = v0;
  if (qword_100644198 != -1) {
    swift_once(&qword_100644198, sub_100320530);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064EBC8);
  uint64_t v3 = swift_retain_n(v0, 2LL);
  unint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)unint64_t v6 = 136315138;
    uint64_t v14 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
    uint64_t v15 = v7;
    uint64_t v8 = type metadata accessor for NWConnection(0LL);
    swift_retain(v14);
    uint64_t v9 = String.init<A>(describing:)(&v14, v8);
    os_log_type_t v11 = (const char *)v10;
    uint64_t v14 = sub_10018CDB4(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4, v6 + 12);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting connection: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v1, 2LL);
  }

  uint64_t v12 = swift_allocObject(&unk_1005DB358, 24LL, 7LL);
  swift_weakInit(v12 + 16);
  swift_retain(v12);
  NWConnection.stateUpdateHandler.setter(sub_100324558, v12);
  swift_release(v12);
  return NWConnection.start(queue:)(*(void *)(v1 + 16));
}

uint64_t sub_100320848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  v4[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[23] = v6;
  v4[24] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v4[25] = static AirDropActor.shared;
  return swift_task_switch(sub_1003208E0, v7, 0LL);
}

uint64_t sub_1003208E0()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 168) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity);
  id v2 = [v1 identifier];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    uint64_t v6 = v5;
  }

  else
  {
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v10 = UUID.init()(0LL);
    uint64_t v4 = UUID.uuidString.getter(v10);
    uint64_t v6 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }

  *(void *)(v0 + 208) = v6;
  id v12 = [v1 deviceIRKData];
  if (!v12)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v35 = type metadata accessor for SFError(0LL);
    unint64_t v36 = sub_1002D138C();
    swift_allocError(v35, v36, 0LL, 0LL);
    strcpy(v37, "deviceIRKData");
    *((_WORD *)v37 + 7) = -4864;
    *((void *)v37 + 2) = 0xD00000000000005ELL;
    *((void *)v37 + 3) = 0x800000010050A920LL;
    *((void *)v37 + 4) = 79LL;
    uint64_t v38 = (*(uint64_t (**)(char *, void, uint64_t))(*(void *)(v35 - 8) + 104LL))( v37,  enum case for SFError.missingValue(_:),  v35);
    swift_willThrow(v38);
LABEL_13:
    swift_task_dealloc(*(void *)(v0 + 192));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v13 = v12;
  uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
  unint64_t v16 = v15;

  *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(v0 + 224) = v16;
  id v17 = [v1 edPKData];
  if (!v17)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v39 = type metadata accessor for SFError(0LL);
    unint64_t v40 = sub_1002D138C();
    swift_allocError(v39, v40, 0LL, 0LL);
    void *v41 = 0x617461444B506465LL;
    v41[1] = 0xE800000000000000LL;
    v41[2] = 0xD00000000000005ELL;
    v41[3] = 0x800000010050A920LL;
    v41[4] = 83LL;
    uint64_t v42 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v39 - 8) + 104LL))( v41,  enum case for SFError.missingValue(_:),  v39);
    swift_willThrow(v42);
    sub_100189B20(v14, v16);
    goto LABEL_13;
  }

  char v18 = v17;
  char v19 = *(const char **)(v0 + 160);
  uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
  unint64_t v22 = v21;

  *(void *)(v0 + 232) = v20;
  *(void *)(v0 + 240) = v22;
  swift_bridgeObjectRetain(v19);
  sub_10019BA8C(v20, v22);
  sub_10019BA8C(v14, v16);
  if (qword_100644198 != -1) {
    swift_once(&qword_100644198, sub_100320530);
  }
  uint64_t v43 = v4;
  uint64_t v23 = type metadata accessor for Logger(0LL);
  uint64_t v24 = sub_100186DE4(v23, (uint64_t)qword_10064EBC8);
  *(void *)(v0 + 248) = v24;
  Swift::String v25 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Sending pairing request", v27, 2u);
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  unint64_t v28 = *(const char **)(v0 + 160);
  uint64_t v29 = *(void *)(v0 + 168);
  uint64_t v30 = *(void *)(v0 + 152);

  *(void *)(v0 + 256) = *(void *)(v29 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
  *(void *)(v0 + 112) = &type metadata for SDTempPairingMessage.Request;
  *(void *)(v0 + 120) = sub_1003245F8();
  unint64_t v31 = (void *)swift_allocObject(&unk_1005DB3A8, 88LL, 7LL);
  *(void *)(v0 + 88) = v31;
  v31[2] = 1LL;
  v31[3] = v30;
  v31[4] = v28;
  v31[5] = v43;
  v31[6] = v6;
  v31[7] = v20;
  v31[8] = v22;
  v31[9] = v14;
  v31[10] = v16;
  *(void *)&double v32 = swift_bridgeObjectRetain(v28).n128_u64[0];
  swift_bridgeObjectRetain(v6, v32);
  sub_10019BA8C(v20, v22);
  sub_10019BA8C(v14, v16);
  uint64_t v33 = (void *)swift_task_alloc(dword_100655D8C);
  *(void *)(v0 + 264) = v33;
  void *v33 = v0;
  v33[1] = sub_100320CF8;
  return sub_100445FE0(v0 + 88);
}

uint64_t sub_100320CF8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 264);
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 200);
    uint64_t v5 = sub_1003217E8;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 200);
    sub_10018709C((void *)(v2 + 88));
    uint64_t v5 = sub_100320D6C;
    uint64_t v4 = v6;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100320D6C(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sent pairing request, waiting for response", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v5 = (void *)swift_task_alloc(dword_100654CFC);
  *(void *)(v1 + 280) = v5;
  void *v5 = v1;
  v5[1] = sub_100320E2C;
  return sub_100413990();
}

uint64_t sub_100320E2C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = *(void *)(*v2 + 280);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    v4[40] = v1;
    return swift_task_switch(sub_1003215BC, v4[25], 0LL);
  }

  else
  {
    uint64_t v8 = (void *)swift_task_alloc(dword_100654CE4);
    v4[36] = v8;
    *uint64_t v8 = v6;
    v8[1] = sub_100320ED0;
    return sub_100413C04(a1, 0x20000LL);
  }

uint64_t sub_100320ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 288LL);
  v4[37] = a1;
  v4[38] = a2;
  v4[39] = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    v4[40] = v2;
    uint64_t v6 = v4[25];
    uint64_t v7 = sub_1003215BC;
  }

  else
  {
    uint64_t v7 = sub_100320F48;
    uint64_t v6 = 0LL;
  }

  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_100320F48()
{
  uint64_t v1 = v0[39];
  sub_100445BB0(v0[37], v0[38]);
  uint64_t v2 = v0[37];
  unint64_t v3 = v0[38];
  if (v1)
  {
    sub_100189B20(v2, v3);
    v0[40] = v1;
    uint64_t v4 = v0[25];
    uint64_t v5 = sub_1003215BC;
  }

  else
  {
    uint64_t v6 = v0[25];
    sub_100189B20(v2, v3);
    uint64_t v5 = sub_100320FBC;
    uint64_t v4 = v6;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100320FBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  char v3 = *(_BYTE *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(const char **)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  unint64_t v7 = *(void *)(v1 + 64);
  unint64_t v80 = *(void *)(v1 + 80);
  uint64_t v82 = *(void *)(v1 + 72);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v5;
    uint64_t v11 = v6;
    id v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received pairing response", v12, 2u);
    uint64_t v13 = v12;
    uint64_t v6 = v11;
    uint64_t v5 = v10;
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  if ((v3 & 1) == 0)
  {
    uint64_t v69 = *(void *)(v1 + 232);
    unint64_t v70 = *(void *)(v1 + 240);
    uint64_t v72 = *(void *)(v1 + 216);
    unint64_t v74 = *(void *)(v1 + 224);
    unint64_t v77 = v7;
    BOOL v27 = v2 != 0;
    unint64_t v67 = *(const char **)(v1 + 160);
    uint64_t v68 = *(const char **)(v1 + 208);
    uint64_t v28 = type metadata accessor for SFError(0LL);
    unint64_t v29 = sub_1002D138C();
    uint64_t v30 = swift_allocError(v28, v29, 0LL, 0LL);
    uint64_t v31 = v6;
    uint64_t v33 = v32;
    _StringGuts.grow(_:)(28LL);
    swift_bridgeObjectRelease((const char *)0xE000000000000000LL);
    uint64_t v84 = 0xD00000000000001ALL;
    unint64_t v85 = 0x800000010050A9A0LL;
    *(_BYTE *)(v1 + 328) = v27;
    uint64_t v34 = sub_100183098(&qword_10064EDA8);
    v35._countAndFlagsBits = String.init<A>(describing:)(v1 + 328, v34);
    object = (const char *)v35._object;
    String.append(_:)(v35);
    __n128 v37 = swift_bridgeObjectRelease(object);
    unint64_t v38 = v85;
    void *v33 = v84;
    v33[1] = v38;
    v33[2] = 0xD00000000000005ELL;
    v33[3] = 0x800000010050A920LL;
    v33[4] = 101LL;
    uint64_t v39 = (*(uint64_t (**)(void *, void, uint64_t, __n128))(*(void *)(v28 - 8) + 104LL))( v33,  enum case for SFError.unexpected(_:),  v28,  v37);
    swift_willThrow(v39);
    swift_bridgeObjectRelease(v5);
    sub_100189B20(v31, v77);
    sub_100189B20(v82, v80);
    *(void *)&double v40 = swift_bridgeObjectRelease(v67).n128_u64[0];
    swift_bridgeObjectRelease(v68, v40);
    sub_100189B20(v69, v70);
    uint64_t v41 = v72;
    unint64_t v42 = v74;
    goto LABEL_9;
  }

  uint64_t v14 = *(void *)(v1 + 144);
  unint64_t v15 = (uint64_t *)(v14 + *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20));
  sub_100213838(v15[2], v15[3]);
  if ((v16 & 1) == 0)
  {
    uint64_t v43 = *(void *)(v1 + 232);
    unint64_t v44 = *(void *)(v1 + 224);
    unint64_t v75 = *(void *)(v1 + 240);
    uint64_t v78 = *(void *)(v1 + 216);
    unsigned int v45 = *(const char **)(v1 + 208);
    uint64_t v46 = *(const char **)(v1 + 160);
    uint64_t v47 = type metadata accessor for SFError(0LL);
    unint64_t v48 = sub_1002D138C();
    uint64_t v30 = swift_allocError(v47, v48, 0LL, 0LL);
    void *v49 = 0xD000000000000018LL;
    v49[1] = 0x800000010050A980LL;
    v49[2] = 0xD00000000000005ELL;
    v49[3] = 0x800000010050A920LL;
    v49[4] = 103LL;
    uint64_t v50 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v47 - 8) + 104LL))( v49,  enum case for SFError.unexpected(_:),  v47);
    swift_willThrow(v50);
    swift_bridgeObjectRelease(v5);
    sub_100189B20(v6, v7);
    sub_100189B20(v82, v80);
    *(void *)&double v51 = swift_bridgeObjectRelease(v46).n128_u64[0];
    swift_bridgeObjectRelease(v45, v51);
    sub_100189B20(v43, v75);
    uint64_t v41 = v78;
    unint64_t v42 = v44;
LABEL_9:
    sub_100189B20(v41, v42);
    swift_errorRetain(v30);
    uint64_t v52 = swift_errorRetain(v30);
    char v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.error.getter(v53);
    BOOL v55 = os_log_type_enabled(v53, v54);
    uint64_t v57 = *(void *)(v1 + 216);
    unint64_t v56 = *(void *)(v1 + 224);
    if (v55)
    {
      unint64_t v81 = *(void *)(v1 + 240);
      unint64_t v83 = *(void *)(v1 + 224);
      uint64_t v79 = *(void *)(v1 + 232);
      int v58 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v59 = swift_slowAlloc(32LL, -1LL);
      uint64_t v84 = v59;
      *(_DWORD *)int v58 = 136315138;
      *(void *)(v1 + 128) = v30;
      swift_errorRetain(v30);
      uint64_t v60 = sub_100183098(&qword_100645710);
      uint64_t v61 = String.init<A>(describing:)(v1 + 128, v60);
      uint64_t v63 = (const char *)v62;
      *(void *)(v1 + 136) = sub_10018CDB4(v61, v62, &v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 136, v1 + 144, v58 + 4, v58 + 12);
      swift_bridgeObjectRelease(v63);
      swift_errorRelease(v30);
      swift_errorRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Failed to exchange temporary identity: %s", v58, 0xCu);
      swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v58, -1LL, -1LL);

      swift_errorRelease(v30);
      sub_100189B20(v57, v83);
      sub_100189B20(v79, v81);
    }

    else
    {
      sub_100189B20(*(void *)(v1 + 232), *(void *)(v1 + 240));
      sub_100189B20(v57, v56);
      swift_errorRelease(v30);
      swift_errorRelease(v30);
      swift_errorRelease(v30);
    }

    goto LABEL_15;
  }

  uint64_t v17 = *(void *)(v1 + 168);
  char v18 = (void *)sub_100324678(v4, (uint64_t)v5, *v15, v15[1], v82, v80, v6, v7);
  uint64_t v73 = v6;
  unint64_t v76 = v7;
  char v19 = *(void (**)(void *))(v17 + 24);
  uint64_t v21 = *(void *)(v1 + 232);
  unint64_t v20 = *(void *)(v1 + 240);
  uint64_t v23 = *(void *)(v1 + 216);
  unint64_t v22 = *(void *)(v1 + 224);
  uint64_t v24 = *(const char **)(v1 + 208);
  if (v19)
  {
    uint64_t v71 = *(const char **)(v1 + 160);
    uint64_t v25 = *(void *)(*(void *)(v1 + 168) + 32LL);
    swift_retain(v25);
    v19(v18);
    sub_100189B20(v21, v20);
    sub_100189B20(v23, v22);
    *(void *)&double v26 = swift_bridgeObjectRelease(v71).n128_u64[0];
    swift_bridgeObjectRelease(v24, v26);
    sub_100189B20(v21, v20);
    sub_100189B20(v23, v22);
    sub_100224FF8((uint64_t)v19, v25);
  }

  else
  {
    int v64 = *(const char **)(v1 + 160);
    sub_100189B20(*(void *)(v1 + 232), *(void *)(v1 + 240));
    sub_100189B20(v23, v22);
    *(void *)&double v65 = swift_bridgeObjectRelease(v64).n128_u64[0];
    swift_bridgeObjectRelease(v24, v65);
    sub_100189B20(v21, v20);
    sub_100189B20(v23, v22);
  }

  swift_bridgeObjectRelease(v5);
  sub_100189B20(v73, v76);
  sub_100189B20(v82, v80);
LABEL_15:
  swift_task_dealloc(*(void *)(v1 + 192));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003215BC()
{
  uint64_t v1 = *(void *)(v0 + 232);
  unint64_t v2 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 216);
  unint64_t v3 = *(void *)(v0 + 224);
  uint64_t v5 = *(const char **)(v0 + 208);
  *(void *)&double v6 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 160)).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  sub_100189B20(v1, v2);
  sub_100189B20(v4, v3);
  uint64_t v7 = *(void *)(v0 + 320);
  swift_errorRetain(v7);
  uint64_t v8 = swift_errorRetain(v7);
  os_log_type_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v22 = *(void *)(v0 + 232);
    unint64_t v23 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 216);
    unint64_t v21 = *(void *)(v0 + 224);
    id v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)id v12 = 136315138;
    uint64_t v24 = v13;
    *(void *)(v0 + 128) = v7;
    swift_errorRetain(v7);
    uint64_t v14 = sub_100183098(&qword_100645710);
    uint64_t v15 = String.init<A>(describing:)(v0 + 128, v14);
    uint64_t v17 = (const char *)v16;
    *(void *)(v0 + 136) = sub_10018CDB4(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to exchange temporary identity: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);

    swift_errorRelease(v7);
    sub_100189B20(v11, v21);
    sub_100189B20(v22, v23);
  }

  else
  {
    uint64_t v19 = *(void *)(v0 + 216);
    unint64_t v18 = *(void *)(v0 + 224);
    sub_100189B20(*(void *)(v0 + 232), *(void *)(v0 + 240));
    sub_100189B20(v19, v18);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  swift_task_dealloc(*(void *)(v0 + 192));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003217E8()
{
  uint64_t v2 = *(void *)(v0 + 232);
  unint64_t v1 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 216);
  unint64_t v3 = *(void *)(v0 + 224);
  uint64_t v5 = *(const char **)(v0 + 208);
  *(void *)&double v6 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 160)).n128_u64[0];
  swift_bridgeObjectRelease(v5, v6);
  sub_100189B20(v2, v1);
  sub_100189B20(v4, v3);
  sub_10018709C((void *)(v0 + 88));
  uint64_t v7 = *(void *)(v0 + 272);
  swift_errorRetain(v7);
  uint64_t v8 = swift_errorRetain(v7);
  os_log_type_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v22 = *(void *)(v0 + 232);
    unint64_t v23 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 216);
    unint64_t v21 = *(void *)(v0 + 224);
    id v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)id v12 = 136315138;
    uint64_t v24 = v13;
    *(void *)(v0 + 128) = v7;
    swift_errorRetain(v7);
    uint64_t v14 = sub_100183098(&qword_100645710);
    uint64_t v15 = String.init<A>(describing:)(v0 + 128, v14);
    uint64_t v17 = (const char *)v16;
    *(void *)(v0 + 136) = sub_10018CDB4(v15, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to exchange temporary identity: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);

    swift_errorRelease(v7);
    sub_100189B20(v11, v21);
    sub_100189B20(v22, v23);
  }

  else
  {
    uint64_t v19 = *(void *)(v0 + 216);
    unint64_t v18 = *(void *)(v0 + 224);
    sub_100189B20(*(void *)(v0 + 232), *(void *)(v0 + 240));
    sub_100189B20(v19, v18);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }

  swift_task_dealloc(*(void *)(v0 + 192));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100321A20()
{
  v1[18] = v0;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  v1[19] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[20] = v3;
  v1[21] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v4 = static AirDropActor.shared;
  v1[22] = static AirDropActor.shared;
  return swift_task_switch(sub_100321AB4, v4, 0LL);
}

uint64_t sub_100321AB4()
{
  unint64_t v1 = *(void **)(*(void *)(v0 + 144) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity);
  id v2 = [v1 identifier];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    double v6 = v5;
  }

  else
  {
    uint64_t v8 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = UUID.init()(0LL);
    uint64_t v4 = UUID.uuidString.getter(v10);
    double v6 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }

  *(void *)(v0 + 184) = v6;
  *(void *)(v0 + 192) = v4;
  id v12 = [v1 deviceIRKData];
  if (!v12)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v30 = type metadata accessor for SFError(0LL);
    unint64_t v31 = sub_1002D138C();
    swift_allocError(v30, v31, 0LL, 0LL);
    strcpy(v32, "deviceIRKData");
    *((_WORD *)v32 + 7) = -4864;
    *((void *)v32 + 2) = 0xD00000000000005ELL;
    *((void *)v32 + 3) = 0x800000010050A920LL;
    *((void *)v32 + 4) = 119LL;
    uint64_t v33 = (*(uint64_t (**)(char *, void, uint64_t))(*(void *)(v30 - 8) + 104LL))( v32,  enum case for SFError.missingValue(_:),  v30);
    swift_willThrow(v33);
LABEL_13:
    swift_task_dealloc(*(void *)(v0 + 168));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v13 = v12;
  uint64_t v14 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
  unint64_t v16 = v15;

  *(void *)(v0 + 200) = v14;
  *(void *)(v0 + 208) = v16;
  id v17 = [v1 edPKData];
  if (!v17)
  {
    swift_bridgeObjectRelease(v6);
    uint64_t v34 = type metadata accessor for SFError(0LL);
    unint64_t v35 = sub_1002D138C();
    swift_allocError(v34, v35, 0LL, 0LL);
    *unint64_t v36 = 0x617461444B506465LL;
    v36[1] = 0xE800000000000000LL;
    v36[2] = 0xD00000000000005ELL;
    v36[3] = 0x800000010050A920LL;
    v36[4] = 123LL;
    uint64_t v37 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104LL))( v36,  enum case for SFError.missingValue(_:),  v34);
    swift_willThrow(v37);
    sub_100189B20(v14, v16);
    goto LABEL_13;
  }

  unint64_t v18 = v17;
  uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
  uint64_t v21 = v20;

  *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v19;
  *(void *)(v0 + 224) = v21;
  if (qword_100644198 != -1) {
    swift_once(&qword_100644198, sub_100320530);
  }
  uint64_t v22 = type metadata accessor for Logger(0LL);
  uint64_t v23 = sub_100186DE4(v22, (uint64_t)qword_10064EBC8);
  *(void *)(v0 + 232) = v23;
  uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    double v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)double v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Waiting for pairing request", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = *(void *)(v0 + 144);

  *(void *)(v0 + 240) = *(void *)(v27 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection);
  uint64_t v28 = (void *)swift_task_alloc(dword_100654CFC);
  *(void *)(v0 + 248) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_100321E20;
  return sub_100413990();
}

uint64_t sub_100321E20(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 248);
  uint64_t v6 = *v2;
  swift_task_dealloc(v5);
  if (v1)
  {
    *(void *)(v4 + 352) = v1;
    uint64_t v7 = *(void *)(v4 + 176);
    swift_bridgeObjectRelease(*(const char **)(v4 + 184));
    return swift_task_switch(sub_1003221CC, v7, 0LL);
  }

  else
  {
    uint64_t v9 = (void *)swift_task_alloc(dword_100654CE4);
    *(void *)(v4 + 256) = v9;
    *uint64_t v9 = v6;
    v9[1] = sub_100321ECC;
    return sub_100413C04(a1, 0x20000LL);
  }

uint64_t sub_100321ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 256);
  *(void *)(v4 + 264) = a1;
  *(void *)(v4 + 272) = a2;
  *(void *)(v4 + 280) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    *(void *)(v4 + 352) = v2;
    uint64_t v6 = *(void *)(v4 + 176);
    swift_bridgeObjectRelease(*(const char **)(v4 + 184));
    uint64_t v7 = sub_1003221CC;
    uint64_t v8 = v6;
  }

  else
  {
    uint64_t v7 = sub_100321F4C;
    uint64_t v8 = 0LL;
  }

  return swift_task_switch(v7, v8, 0LL);
}

uint64_t sub_100321F4C()
{
  uint64_t v1 = *(void *)(v0 + 280);
  sub_100445DC8(*(void *)(v0 + 264), *(void *)(v0 + 272));
  uint64_t v2 = *(void *)(v0 + 264);
  unint64_t v3 = *(void *)(v0 + 272);
  if (v1)
  {
    sub_100189B20(v2, v3);
    *(void *)(v0 + 352) = v1;
    uint64_t v4 = *(void *)(v0 + 176);
    swift_bridgeObjectRelease(*(const char **)(v0 + 184));
    uint64_t v5 = sub_1003221CC;
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 176);
    sub_100189B20(v2, v3);
    uint64_t v5 = sub_100321FC4;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100321FC4(uint64_t a1)
{
  *(void *)(v1 + 288) = *(void *)(v1 + 24);
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v1 + 32);
  *(void *)(v1 + 312) = *(void *)(v1 + 48);
  __int128 v2 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(v1 + 320) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v1 + 336) = v2;
  unint64_t v3 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received pairing request", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  unint64_t v6 = *(void *)(v1 + 224);
  unint64_t v8 = *(void *)(v1 + 208);
  uint64_t v7 = *(void *)(v1 + 216);
  uint64_t v9 = *(void *)(v1 + 200);

  sub_10019BA8C(v7, v6);
  uint64_t v10 = sub_10019BA8C(v9, v8);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Sending pairing response", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  uint64_t v15 = *(void *)(v1 + 216);
  unint64_t v14 = *(void *)(v1 + 224);
  uint64_t v17 = *(void *)(v1 + 200);
  unint64_t v16 = *(void *)(v1 + 208);
  unint64_t v18 = *(const char **)(v1 + 184);
  uint64_t v19 = *(void *)(v1 + 192);

  *(void *)(v1 + 112) = &type metadata for SDTempPairingMessage.Response;
  *(void *)(v1 + 120) = sub_1003248C8();
  uint64_t v20 = swift_allocObject(&unk_1005DB3D0, 88LL, 7LL);
  *(void *)(v1 + 88) = v20;
  *(_OWORD *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004D58F0;
  *(_BYTE *)(v20 + 32) = 1;
  *(void *)(v20 + 40) = v19;
  *(void *)(v20 + 48) = v18;
  *(void *)(v20 + 56) = v15;
  *(void *)(v20 + 64) = v14;
  *(void *)(v20 + 72) = v17;
  *(void *)(v20 + 80) = v16;
  swift_bridgeObjectRetain(v18);
  sub_10019BA8C(v15, v14);
  sub_10019BA8C(v17, v16);
  uint64_t v21 = (void *)swift_task_alloc(dword_100655D8C);
  *(void *)(v1 + 360) = v21;
  void *v21 = v1;
  v21[1] = sub_1003223CC;
  return sub_100445FE0(v1 + 88);
}

uint64_t sub_1003221CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[44];
  swift_errorRetain(v2);
  uint64_t v3 = swift_errorRetain(v2);
  os_log_type_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v19 = v0[27];
    unint64_t v20 = v0[28];
    uint64_t v6 = v0[25];
    unint64_t v18 = v0[26];
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v21 = v8;
    v0[16] = v2;
    swift_errorRetain(v2);
    uint64_t v9 = sub_100183098(&qword_100645710);
    uint64_t v10 = String.init<A>(describing:)(v0 + 16, v9);
    os_log_type_t v12 = (const char *)v11;
    v1[17] = sub_10018CDB4(v10, v11, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 17, v1 + 18, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to exchange temporary identity: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);

    sub_100189B20(v6, v18);
    sub_100189B20(v19, v20);
    swift_errorRelease(v2);
  }

  else
  {
    uint64_t v13 = v0[27];
    unint64_t v14 = v0[28];
    uint64_t v15 = v0[25];
    unint64_t v16 = v0[26];
    sub_100189B20(v13, v14);
    sub_100189B20(v15, v16);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
    swift_errorRelease(v2);
  }

  swift_task_dealloc(v1[21]);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1003223CC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 360);
  *(void *)(*v1 + 368) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 176);
    os_log_type_t v5 = sub_100322644;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 176);
    sub_10018709C((void *)(v2 + 88));
    os_log_type_t v5 = sub_100322440;
    uint64_t v4 = v6;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100322440(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sent pairing response", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v1 + 336);
  uint64_t v5 = *(void *)(v1 + 344);
  uint64_t v8 = *(void *)(v1 + 320);
  uint64_t v7 = *(void *)(v1 + 328);
  uint64_t v10 = *(void *)(v1 + 304);
  uint64_t v9 = *(void *)(v1 + 312);
  uint64_t v12 = *(void *)(v1 + 288);
  uint64_t v11 = *(void *)(v1 + 296);
  uint64_t v13 = v2;
  uint64_t v14 = *(void *)(v1 + 144);

  uint64_t v15 = (void *)sub_100324678(v10, v9, v12, v11, v6, v5, v8, v7);
  unint64_t v16 = *(void (**)(void *))(v14 + 24);
  uint64_t v18 = *(void *)(v1 + 336);
  unint64_t v17 = *(void *)(v1 + 344);
  uint64_t v32 = *(void *)(v1 + 320);
  unint64_t v33 = *(void *)(v1 + 328);
  uint64_t v30 = *(const char **)(v1 + 296);
  unint64_t v31 = *(const char **)(v1 + 312);
  uint64_t v20 = *(void *)(v1 + 216);
  unint64_t v19 = *(void *)(v1 + 224);
  uint64_t v21 = *(void *)(v1 + 200);
  unint64_t v22 = *(void *)(v1 + 208);
  uint64_t v23 = *(const char **)(v1 + 184);
  if (v16)
  {
    uint64_t v29 = *(void *)(v1 + 336);
    unint64_t v24 = *(void *)(v1 + 344);
    uint64_t v25 = *(void *)(*(void *)(v1 + 144) + 32LL);
    swift_retain(v25);
    v16(v15);
    sub_100189B20(v20, v19);
    sub_100189B20(v21, v22);
    swift_bridgeObjectRelease(v23);
    sub_100189B20(v20, v19);
    sub_100189B20(v21, v22);
    uint64_t v26 = v25;
    unint64_t v17 = v24;
    uint64_t v18 = v29;
    sub_100224FF8((uint64_t)v16, v26);
  }

  else
  {
    sub_100189B20(*(void *)(v1 + 216), *(void *)(v1 + 224));
    sub_100189B20(v21, v22);
    swift_bridgeObjectRelease(v23);
    sub_100189B20(v20, v19);
    sub_100189B20(v21, v22);
  }

  *(void *)&double v27 = swift_bridgeObjectRelease(v30).n128_u64[0];
  swift_bridgeObjectRelease(v31, v27);
  sub_100189B20(v32, v33);
  sub_100189B20(v18, v17);
  swift_task_dealloc(*(void *)(v1 + 168));
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100322644()
{
  uint64_t v1 = *(void *)(v0 + 336);
  unint64_t v26 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 320);
  unint64_t v2 = *(void *)(v0 + 328);
  uint64_t v4 = *(const char **)(v0 + 312);
  uint64_t v5 = *(const char **)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 216);
  unint64_t v6 = *(void *)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 200);
  unint64_t v8 = *(void *)(v0 + 208);
  swift_bridgeObjectRelease(*(const char **)(v0 + 184));
  sub_100189B20(v7, v6);
  sub_100189B20(v9, v8);
  *(void *)&double v10 = swift_bridgeObjectRelease(v5).n128_u64[0];
  swift_bridgeObjectRelease(v4, v10);
  sub_100189B20(v3, v2);
  sub_100189B20(v1, v26);
  sub_10018709C((void *)(v0 + 88));
  uint64_t v11 = *(void *)(v0 + 368);
  swift_errorRetain(v11);
  uint64_t v12 = swift_errorRetain(v11);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v27 = *(void *)(v0 + 216);
    unint64_t v28 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 200);
    unint64_t v25 = *(void *)(v0 + 208);
    unint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)unint64_t v16 = 136315138;
    uint64_t v29 = v17;
    *(void *)(v0 + 128) = v11;
    swift_errorRetain(v11);
    uint64_t v18 = sub_100183098(&qword_100645710);
    uint64_t v19 = String.init<A>(describing:)(v0 + 128, v18);
    uint64_t v21 = (const char *)v20;
    *(void *)(v0 + 136) = sub_10018CDB4(v19, v20, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v16 + 4, v16 + 12);
    swift_bridgeObjectRelease(v21);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to exchange temporary identity: %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);

    sub_100189B20(v15, v25);
    sub_100189B20(v27, v28);
    swift_errorRelease(v11);
  }

  else
  {
    uint64_t v23 = *(void *)(v0 + 200);
    unint64_t v22 = *(void *)(v0 + 208);
    sub_100189B20(*(void *)(v0 + 216), *(void *)(v0 + 224));
    sub_100189B20(v23, v22);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  swift_task_dealloc(*(void *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003228AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for NWConnection.State(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  os_log_type_t v14 = (char *)&v41 - v13;
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v41 - v15;
  a2 += 16LL;
  swift_beginAccess(a2, v48, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a2);
  if (result)
  {
    uint64_t v18 = result;
    if (qword_100644198 != -1) {
      swift_once(&qword_100644198, sub_100320530);
    }
    uint64_t v19 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v19, (uint64_t)qword_10064EBC8);
    unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v45 = a1;
    uint64_t v21 = v20(v16, a1, v7);
    unint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc(12LL, -1LL);
      uint64_t v43 = v6;
      unint64_t v25 = (uint8_t *)v24;
      uint64_t v26 = swift_slowAlloc(32LL, -1LL);
      unint64_t v44 = (void (*)(char *, char *, uint64_t))v20;
      uint64_t v27 = v26;
      uint64_t v47 = v26;
      uint64_t v42 = v18;
      *(_DWORD *)unint64_t v25 = 136315138;
      uint64_t v41 = v25 + 4;
      v44(v14, v16, v7);
      uint64_t v28 = String.init<A>(describing:)(v14, v7);
      uint64_t v30 = (const char *)v29;
      uint64_t v46 = sub_10018CDB4(v28, v29, &v47);
      uint64_t v18 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v41, v25 + 12);
      __n128 v31 = swift_bridgeObjectRelease(v30);
      uint64_t v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      v32(v16, v7, v31);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Connection state changed to %s", v25, 0xCu);
      swift_arrayDestroy(v27, 1LL, (char *)&type metadata for Any + 8);
      uint64_t v33 = v27;
      unint64_t v20 = (uint64_t (*)(char *, uint64_t, uint64_t))v44;
      swift_slowDealloc(v33, -1LL, -1LL);
      uint64_t v34 = v25;
      unint64_t v6 = v43;
      swift_slowDealloc(v34, -1LL, -1LL);
    }

    else
    {
      uint64_t v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      ((void (*)(char *, uint64_t))v32)(v16, v7);
    }

    v20(v11, v45, v7);
    int v35 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
    if (v35 == enum case for NWConnection.State.waiting(_:)
      || (int v36 = v35, v35 == enum case for NWConnection.State.failed(_:)))
    {
      swift_release(v18);
      return ((uint64_t (*)(char *, uint64_t))v32)(v11, v7);
    }

    if (v35 == enum case for NWConnection.State.setup(_:) || v35 == enum case for NWConnection.State.preparing(_:)) {
      return swift_release(v18);
    }
    if (v35 == enum case for NWConnection.State.ready(_:))
    {
      uint64_t v37 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v6, 1LL, 1LL, v37);
      unint64_t v38 = (void *)swift_allocObject(&unk_1005DB380, 40LL, 7LL);
      v38[2] = 0LL;
      v38[3] = 0LL;
      v38[4] = v18;
      uint64_t v39 = sub_1001B37E8((uint64_t)v6, (uint64_t)&unk_10064ED88, (uint64_t)v38);
      return swift_release(v39);
    }

    int v40 = enum case for NWConnection.State.cancelled(_:);
    uint64_t result = swift_release(v18);
    if (v36 != v40) {
      return ((uint64_t (*)(char *, uint64_t))v32)(v11, v7);
    }
  }

  return result;
}

uint64_t sub_100322C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  uint64_t v5 = type metadata accessor for SDTempPairingEndpoint(0LL);
  void v4[4] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDTempPairingConnection.Role(0LL);
  v4[5] = v6;
  void v4[6] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100322D04, 0LL, 0LL);
}

uint64_t sub_100322D04()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_1003244D8(v0[3] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role, v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v2, v1);
  uint64_t v4 = (void *)v0[6];
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(*v4);
    uint64_t v5 = (void *)swift_task_alloc(dword_10064ED94);
    v0[10] = v5;
    void *v5 = v0;
    v5[1] = sub_100322EB8;
    return sub_100321A20();
  }

  else
  {
    uint64_t v7 = v0[4];
    uint64_t v8 = (void *)((char *)v4 + *(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48));
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    v0[7] = v10;
    sub_10029881C((uint64_t)v4, v7);
    uint64_t v11 = (void *)swift_task_alloc(dword_10064ED9C);
    v0[8] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100322E00;
    return sub_100320848(v0[4], v9, v10);
  }

uint64_t sub_100322E00()
{
  uint64_t v3 = *(const char **)(*(void *)v1 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  *(void *)(*(void *)v1 + 72LL) = v0;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  if (v0) {
    uint64_t v4 = sub_100322F58;
  }
  else {
    uint64_t v4 = sub_100322E6C;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_100322E6C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100322EB8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80LL);
  *(void *)(*(void *)v1 + 88LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v3 = sub_100323140;
  }
  else {
    uint64_t v3 = sub_100322F1C;
  }
  return swift_task_switch(v3, 0LL, 0LL);
}

uint64_t sub_100322F1C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 48));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100322F58()
{
  uint64_t v1 = *(void *)(v0 + 72);
  if (qword_100644198 != -1) {
    swift_once(&qword_100644198, sub_100320530);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064EBC8);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain(v1);
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4, v6 + 12);
    *uint64_t v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%@", v6, 0xCu);
    uint64_t v9 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v7, 1LL, v9);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);

    swift_errorRelease(v1);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  uint64_t v10 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 48));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100323140()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if (qword_100644198 != -1) {
    swift_once(&qword_100644198, sub_100320530);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v2, (uint64_t)qword_10064EBC8);
  swift_errorRetain(v1);
  uint64_t v3 = swift_errorRetain(v1);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.error.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain(v1);
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError(v1);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v6 + 4, v6 + 12);
    *uint64_t v7 = v8;
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%@", v6, 0xCu);
    uint64_t v9 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v7, 1LL, v9);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);

    swift_errorRelease(v1);
  }

  else
  {
    swift_errorRelease(v1);
    swift_errorRelease(v1);
    swift_errorRelease(v1);
  }

  uint64_t v10 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 48));
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100323318()
{
  sub_100224FF8(*(void *)(v0 + 24), *(void *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_1001A4BC8( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role,  type metadata accessor for SDTempPairingConnection.Role);

  swift_release(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection));
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1003233B0()
{
  return type metadata accessor for SDTempPairingConnection(0LL);
}

uint64_t type metadata accessor for SDTempPairingConnection(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064EC28, (uint64_t)&nominal type descriptor for SDTempPairingConnection);
}

uint64_t sub_1003233CC(uint64_t a1)
{
  v5[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[1] = &unk_1004D5948;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v5[2] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for SDTempPairingConnection.Role(319LL);
    if (v4 <= 0x3F)
    {
      v5[3] = *(void *)(result - 8) + 64LL;
      v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[5] = (char *)&value witness table for Builtin.NativeObject + 64;
      uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v5, a1 + 80);
      if (!result) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t type metadata accessor for SDTempPairingConnection.Role(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064ED48, (uint64_t)&nominal type descriptor for SDTempPairingConnection.Role);
}

uint64_t *sub_100323494(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v7 = *a2;
      *a1 = *a2;
      swift_retain(v7);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 1LL;
    }

    else
    {
      uint64_t v12 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16LL))(a1, a2, v12);
      uint64_t v13 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20);
      os_log_type_t v14 = (uint64_t *)((char *)a1 + v13);
      uint64_t v15 = (char *)a2 + v13;
      unint64_t v16 = *(const char **)((char *)a2 + v13 + 8);
      void *v14 = *(uint64_t *)((char *)a2 + v13);
      v14[1] = v16;
      uint64_t v17 = *(uint64_t *)((char *)a2 + v13 + 16);
      unint64_t v18 = *(uint64_t *)((char *)a2 + v13 + 24);
      swift_bridgeObjectRetain(v16);
      sub_10019BA8C(v17, v18);
      v14[2] = v17;
      v14[3] = v18;
      uint64_t v19 = *((void *)v15 + 4);
      unint64_t v20 = *((void *)v15 + 5);
      sub_10019BA8C(v19, v20);
      v14[4] = v19;
      v14[5] = v20;
      uint64_t v21 = *(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48);
      unint64_t v22 = (uint64_t *)((char *)a1 + v21);
      os_log_type_t v23 = (uint64_t *)((char *)a2 + v21);
      uint64_t v24 = (const char *)v23[1];
      void *v22 = *v23;
      v22[1] = v24;
      swift_bridgeObjectRetain(v24);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }

  return a1;
}

__n128 sub_1003235CC(void *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {
    swift_release(*a1);
  }

  else
  {
    uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
    int v5 = (char *)a1 + *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20);
    swift_bridgeObjectRelease(*((const char **)v5 + 1));
    sub_100189B20(*((void *)v5 + 2), *((void *)v5 + 3));
    sub_100189B20(*((void *)v5 + 4), *((void *)v5 + 5));
    uint64_t v6 = *(const char **)((char *)a1 + *(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48) + 8);
    return swift_bridgeObjectRelease(v6);
  }

  return result;
}

uint64_t *sub_100323660(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    swift_retain(v6);
    uint64_t v7 = a1;
    uint64_t v8 = a3;
    uint64_t v9 = 1LL;
  }

  else
  {
    uint64_t v10 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16LL))(a1, a2, v10);
    uint64_t v11 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (char *)a2 + v11;
    os_log_type_t v14 = *(const char **)((char *)a2 + v11 + 8);
    *uint64_t v12 = *(uint64_t *)((char *)a2 + v11);
    v12[1] = v14;
    uint64_t v15 = *(uint64_t *)((char *)a2 + v11 + 16);
    unint64_t v16 = *(uint64_t *)((char *)a2 + v11 + 24);
    swift_bridgeObjectRetain(v14);
    sub_10019BA8C(v15, v16);
    v12[2] = v15;
    v12[3] = v16;
    uint64_t v17 = *((void *)v13 + 4);
    unint64_t v18 = *((void *)v13 + 5);
    sub_10019BA8C(v17, v18);
    v12[4] = v17;
    v12[5] = v18;
    uint64_t v19 = *(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48);
    unint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    unint64_t v22 = (const char *)v21[1];
    *unint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain(v22);
    uint64_t v7 = a1;
    uint64_t v8 = a3;
    uint64_t v9 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v7, v8, v9);
  return a1;
}

uint64_t *sub_10032376C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001A4BC8((uint64_t)a1, type metadata accessor for SDTempPairingConnection.Role);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      uint64_t v6 = *a2;
      *a1 = *a2;
      swift_retain(v6);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 1LL;
    }

    else
    {
      uint64_t v10 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16LL))(a1, a2, v10);
      uint64_t v11 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20);
      uint64_t v12 = (uint64_t *)((char *)a1 + v11);
      uint64_t v13 = (char *)a2 + v11;
      *uint64_t v12 = *(uint64_t *)((char *)a2 + v11);
      os_log_type_t v14 = *(const char **)((char *)a2 + v11 + 8);
      v12[1] = v14;
      uint64_t v15 = *(uint64_t *)((char *)a2 + v11 + 16);
      unint64_t v16 = *(uint64_t *)((char *)a2 + v11 + 24);
      swift_bridgeObjectRetain(v14);
      sub_10019BA8C(v15, v16);
      v12[2] = v15;
      v12[3] = v16;
      uint64_t v17 = *((void *)v13 + 4);
      unint64_t v18 = *((void *)v13 + 5);
      sub_10019BA8C(v17, v18);
      v12[4] = v17;
      v12[5] = v18;
      uint64_t v19 = *(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48);
      unint64_t v20 = (uint64_t *)((char *)a1 + v19);
      uint64_t v21 = (uint64_t *)((char *)a2 + v19);
      *unint64_t v20 = *v21;
      unint64_t v22 = (const char *)v21[1];
      v20[1] = v22;
      swift_bridgeObjectRetain(v22);
      uint64_t v7 = a1;
      uint64_t v8 = a3;
      uint64_t v9 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v7, v8, v9);
  }

  return a1;
}

char *sub_1003238A0(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
  }

  else
  {
    uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
    uint64_t v7 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    __int128 v10 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v10;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
    uint64_t v11 = sub_100183098((uint64_t *)&unk_10064BBC0);
    *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
    swift_storeEnumTagMultiPayload(a1, a3, 0LL);
  }

  return a1;
}

char *sub_100323964(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001A4BC8((uint64_t)a1, type metadata accessor for SDTempPairingConnection.Role);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
    }

    else
    {
      uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      uint64_t v7 = *(int *)(type metadata accessor for SDTempPairingEndpoint(0LL) + 20);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      __int128 v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      uint64_t v11 = sub_100183098((uint64_t *)&unk_10064BBC0);
      *(_OWORD *)&a1[*(int *)(v11 + 48)] = *(_OWORD *)&a2[*(int *)(v11 + 48)];
      swift_storeEnumTagMultiPayload(a1, a3, 0LL);
    }
  }

  return a1;
}

uint64_t sub_100323A40(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDTempPairingEndpoint(319LL);
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2(v4, *(void *)(result - 8) + 64LL, &unk_1004D5968);
    v5[0] = v4;
    v5[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256LL, 2LL, v5);
    return 0LL;
  }

  return result;
}

uint64_t sub_100323AC4(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064EDC0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_100324F08();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for SDTempPairingMessage.Request.CodingKeys,  &type metadata for SDTempPairingMessage.Request.CodingKeys,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  LOBYTE(v21) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v21, v5);
  if (!v2)
  {
    uint64_t v13 = v3[1];
    uint64_t v14 = v3[2];
    LOBYTE(v21) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v13, v14, &v21, v5);
    uint64_t v15 = v3[3];
    uint64_t v16 = v3[4];
    LOBYTE(v21) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v21, v5);
    __int128 v21 = *(_OWORD *)(v3 + 5);
    char v20 = 3;
    unint64_t v17 = sub_10020C2A8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
    __int128 v21 = *(_OWORD *)(v3 + 7);
    char v20 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100323C80(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064EDE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_100325A84();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for SDTempPairingMessage.Response.CodingKeys,  &type metadata for SDTempPairingMessage.Response.CodingKeys,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  LOBYTE(v21) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v21, v5);
  if (!v2)
  {
    uint64_t v13 = v3[1];
    uint64_t v14 = *((unsigned __int8 *)v3 + 16);
    LOBYTE(v21) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v13, v14, &v21, v5);
    uint64_t v15 = v3[3];
    uint64_t v16 = v3[4];
    LOBYTE(v21) = 2;
    KeyedEncodingContainer.encode(_:forKey:)(v15, v16, &v21, v5);
    __int128 v21 = *(_OWORD *)(v3 + 5);
    char v20 = 3;
    unint64_t v17 = sub_10020C2A8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
    __int128 v21 = *(_OWORD *)(v3 + 7);
    char v20 = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v21, &v20, v5, &type metadata for Data, v17);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100323E40(void *a1, void *a2)
{
  return static UUID.== infix(_:_:)( *a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier,  *a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_identifier);
}

uint64_t sub_100323E64()
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100323E94 + 4 * byte_1004D5900[*v0]))( 0x6E6F6973726576LL,  0xE700000000000000LL);
}

uint64_t sub_100323E94()
{
  return 1701667182LL;
}

uint64_t sub_100323EA4()
{
  return 0x696669746E656469LL;
}

uint64_t sub_100323EC0()
{
  return 0x654B63696C627570LL;
}

uint64_t sub_100323EDC()
{
  return 0x5249656369766564LL;
}

uint64_t sub_100323F00@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_100324F4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_100323F24(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_100323F30(uint64_t a1)
{
  unint64_t v2 = sub_100324F08();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100323F58(uint64_t a1)
{
  unint64_t v2 = sub_100324F08();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100323F80@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  }

  return result;
}

uint64_t sub_100323FD0(void *a1)
{
  return sub_100323AC4(a1);
}

uint64_t sub_100324010()
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100324040 + 4 * byte_1004D5905[*v0]))( 0x6E6F6973726576LL,  0xE700000000000000LL);
}

uint64_t sub_100324040()
{
  return 0x726F727265LL;
}

uint64_t sub_100324054()
{
  return 0x696669746E656469LL;
}

uint64_t sub_100324070()
{
  return 0x654B63696C627570LL;
}

uint64_t sub_10032408C()
{
  return 0x5249656369766564LL;
}

uint64_t sub_1003240B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_10032551C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003240D4(uint64_t a1)
{
  unint64_t v2 = sub_100325A84();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003240FC(uint64_t a1)
{
  unint64_t v2 = sub_100325A84();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100324124@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  }

  return result;
}

uint64_t sub_100324174(void *a1)
{
  return sub_100323C80(a1);
}

void *sub_1003241B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SDTempPairingEndpoint(0LL);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SDTempPairingConnection.Role(0LL);
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v18 = (uint64_t *)((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  v4[3] = 0LL;
  void v4[4] = 0LL;
  UUID.init()(v16);
  sub_1003244D8(a1, (uint64_t)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_role);
  *(void *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_temporaryIdentity) = a2;
  v4[2] = a3;
  sub_1003244D8(a1, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload(v18, v15) == 1)
  {
    *(void *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection) = *v18;
    id v19 = a2;
    id v20 = a3;
  }

  else
  {
    __int128 v21 = (char *)v18 + *(int *)(sub_100183098((uint64_t *)&unk_10064BBC0) + 48);
    uint64_t v36 = v8;
    unint64_t v22 = (const char *)*((void *)v21 + 1);
    id v23 = a2;
    uint64_t v24 = a3;
    swift_bridgeObjectRelease(v22);
    sub_10029881C((uint64_t)v18, (uint64_t)v14);
    uint64_t v25 = type metadata accessor for NWProtocolTCP.Options(0LL);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    uint64_t v26 = NWProtocolTCP.Options.init()();
    dispatch thunk of NWProtocolTCP.Options.enableKeepalive.setter(1LL);
    dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.setter(2LL);
    uint64_t v27 = type metadata accessor for NWProtocolTLS.Options(0LL);
    swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
    uint64_t v28 = NWProtocolTLS.Options.init()();
    unint64_t v29 = (sec_protocol_options *)dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter(v28);
    aBlock[4] = sub_100320604;
    aBlock[5] = 0LL;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100412B8C;
    aBlock[3] = &unk_1005DB320;
    uint64_t v30 = _Block_copy(aBlock);
    sec_protocol_options_set_verify_block(v29, v30, v24);
    _Block_release(v30);
    swift_unknownObjectRelease(v29);
    type metadata accessor for NWParameters(0LL);
    swift_retain(v28);
    swift_retain(v26);
    uint64_t v31 = NWParameters.__allocating_init(tls:tcp:)(v28, v26);
    NWParameters.includePeerToPeer.setter(1LL);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v36);
    uint64_t v32 = type metadata accessor for NWConnection(0LL);
    swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    uint64_t v33 = NWConnection.init(to:using:)(v11, v31);
    swift_release(v28);
    swift_release(v26);
    sub_1001A4BC8((uint64_t)v14, type metadata accessor for SDTempPairingEndpoint);
    *(void *)((char *)v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDTempPairingConnection_connection) = v33;
  }

  sub_100320628();
  sub_1001A4BC8(a1, type metadata accessor for SDTempPairingConnection.Role);
  return v4;
}

uint64_t sub_1003244D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDTempPairingConnection.Role(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032451C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10032452C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100324534()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100324558(uint64_t a1)
{
  return sub_1003228AC(a1, v1);
}

uint64_t sub_100324560()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10032458C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064ED84);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_100322C88(a1, v4, v5, v6);
}

unint64_t sub_1003245F8()
{
  unint64_t result = qword_10064EDA0;
  if (!qword_10064EDA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5B50, &type metadata for SDTempPairingMessage.Request);
    atomic_store(result, (unint64_t *)&qword_10064EDA0);
  }

  return result;
}

uint64_t sub_10032463C()
{
  *(void *)&double v1 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 32)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + 48), v1);
  sub_100189B20(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_100189B20(*(void *)(v0 + 72), *(void *)(v0 + 80));
  return swift_deallocObject(v0, 88LL);
}

uint64_t sub_100324678( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v24[1] = a8;
  uint64_t v10 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v13 = [objc_allocWithZone(CUPairedPeer) init];
  UUID.init(uuidString:)(a1, a2);
  uint64_t v14 = type metadata accessor for UUID(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  Class isa = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1LL, v14) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  }

  [v13 setIdentifier:isa];

  id v17 = [objc_allocWithZone(RPIdentity) initWithPairedPeer:v13 type:15];
  if (v17)
  {
    unint64_t v18 = v17;
    NSString v19 = String._bridgeToObjectiveC()();
    [v18 setName:v19];

    Class v20 = Data._bridgeToObjectiveC()().super.isa;
    [v18 setDeviceIRKData:v20];

    Class v21 = Data._bridgeToObjectiveC()().super.isa;
    [v18 setEdPKData:v21];

    Class v22 = Array._bridgeToObjectiveC()().super.isa;
    [v18 setAccessGroups:v22];

    return (uint64_t)v18;
  }

  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000026LL,  0x800000010050A9F0LL,  "DaemoniOSLibrary/SDTempPairingConnection.swift",  46LL,  2LL,  194LL,  0);
    __break(1u);
  }

  return result;
}

unint64_t sub_1003248C8()
{
  unint64_t result = qword_10064EDB0;
  if (!qword_10064EDB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5B00, &type metadata for SDTempPairingMessage.Response);
    atomic_store(result, (unint64_t *)&qword_10064EDB0);
  }

  return result;
}

uint64_t sub_10032490C()
{
  return swift_deallocObject(v0, 88LL);
}

uint64_t destroy for SDTempPairingMessage.Response(uint64_t a1)
{
  return sub_100189B20(*(void *)(a1 + 56), *(void *)(a1 + 64));
}

uint64_t initializeWithCopy for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v5 = *(const char **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  unint64_t v7 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain(v5);
  sub_10019BA8C(v6, v7);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  uint64_t v9 = *(void *)(a2 + 56);
  unint64_t v8 = *(void *)(a2 + 64);
  sub_10019BA8C(v9, v8);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(const char **)(a2 + 32);
  uint64_t v6 = *(const char **)(a1 + 32);
  *(void *)(a1 + 32) = v5;
  *(void *)&double v7 = swift_bridgeObjectRetain(v5).n128_u64[0];
  swift_bridgeObjectRelease(v6, v7);
  uint64_t v8 = *(void *)(a2 + 40);
  unint64_t v9 = *(void *)(a2 + 48);
  sub_10019BA8C(v8, v9);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  sub_100189B20(v10, v11);
  uint64_t v13 = *(void *)(a2 + 56);
  unint64_t v12 = *(void *)(a2 + 64);
  sub_10019BA8C(v13, v12);
  uint64_t v14 = *(void *)(a1 + 56);
  unint64_t v15 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v12;
  sub_100189B20(v14, v15);
  return a1;
}

__n128 initializeWithTake for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  __int128 v3 = *(_OWORD *)(a2 + 32);
  __int128 v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + swift_weakDestroy(v0 + 16) = result;
  return result;
}

uint64_t assignWithTake for SDTempPairingMessage.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(const char **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100189B20(v7, v8);
  uint64_t v9 = *(void *)(a1 + 56);
  unint64_t v10 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_100189B20(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingMessage.Response(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingMessage.Response(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Response()
{
  return &type metadata for SDTempPairingMessage.Response;
}

uint64_t storeEnumTagSinglePayload for SDTempPairingError(uint64_t a1, int a2, int a3)
{
  else {
    int v3 = 2;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2) {
    return ((uint64_t (*)(void))((char *)sub_100324BEC + 4 * byte_1004D590A[v4]))();
  }
  else {
    return ((uint64_t (*)(void))((char *)sub_100324C0C + 4 * byte_1004D590F[v4]))();
  }
}

_BYTE *sub_100324BEC(_BYTE *result, char a2)
{
  *__n128 result = a2;
  return result;
}

_BYTE *sub_100324C0C(_BYTE *result)
{
  *__n128 result = 0;
  return result;
}

_DWORD *sub_100324C14(_DWORD *result, int a2)
{
  *__n128 result = a2;
  return result;
}

_WORD *sub_100324C1C(_WORD *result, __int16 a2)
{
  *__n128 result = a2;
  return result;
}

_WORD *sub_100324C24(_WORD *result)
{
  *__n128 result = 0;
  return result;
}

_DWORD *sub_100324C2C(_DWORD *result)
{
  *__n128 result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingError()
{
  return &type metadata for SDTempPairingError;
}

uint64_t destroy for SDTempPairingMessage.Request(uint64_t a1)
{
  *(void *)&double v2 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + 16)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(a1 + 32), v2);
  sub_100189B20(*(void *)(a1 + 40), *(void *)(a1 + 48));
  return sub_100189B20(*(void *)(a1 + 56), *(void *)(a1 + 64));
}

uint64_t initializeWithCopy for SDTempPairingMessage.Request(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(const char **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(const char **)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  unint64_t v8 = *(void *)(a2 + 48);
  *(void *)&double v9 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRetain(v6, v9);
  sub_10019BA8C(v7, v8);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  uint64_t v11 = *(void *)(a2 + 56);
  unint64_t v10 = *(void *)(a2 + 64);
  sub_10019BA8C(v11, v10);
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v10;
  return a1;
}

void *assignWithCopy for SDTempPairingMessage.Request(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = (const char *)a2[2];
  uint64_t v5 = (const char *)a1[2];
  a1[2] = v4;
  *(void *)&double v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  *(void *)&double v7 = swift_bridgeObjectRelease(v5, v6).n128_u64[0];
  a1[3] = a2[3];
  unint64_t v8 = (const char *)a2[4];
  double v9 = (const char *)a1[4];
  a1[4] = v8;
  *(void *)&double v10 = swift_bridgeObjectRetain(v8, v7).n128_u64[0];
  swift_bridgeObjectRelease(v9, v10);
  uint64_t v11 = a2[5];
  unint64_t v12 = a2[6];
  sub_10019BA8C(v11, v12);
  uint64_t v13 = a1[5];
  unint64_t v14 = a1[6];
  a1[5] = v11;
  a1[6] = v12;
  sub_100189B20(v13, v14);
  uint64_t v16 = a2[7];
  unint64_t v15 = a2[8];
  sub_10019BA8C(v16, v15);
  uint64_t v17 = a1[7];
  unint64_t v18 = a1[8];
  a1[7] = v16;
  a1[8] = v15;
  sub_100189B20(v17, v18);
  return a1;
}

uint64_t assignWithTake for SDTempPairingMessage.Request(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(const char **)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)&double v5 = swift_bridgeObjectRelease(v4).n128_u64[0];
  uint64_t v6 = *(void *)(a2 + 32);
  double v7 = *(const char **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7, v5);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t v9 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_100189B20(v8, v9);
  uint64_t v10 = *(void *)(a1 + 56);
  unint64_t v11 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  sub_100189B20(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for SDTempPairingMessage.Request(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SDTempPairingMessage.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 72) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + swift_weakDestroy(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Request()
{
  return &type metadata for SDTempPairingMessage.Request;
}

unint64_t sub_100324EC4()
{
  unint64_t result = qword_10064EDB8;
  if (!qword_10064EDB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5AB0, &type metadata for SDTempPairingError);
    atomic_store(result, (unint64_t *)&qword_10064EDB8);
  }

  return result;
}

unint64_t sub_100324F08()
{
  unint64_t result = qword_10064EDC8;
  if (!qword_10064EDC8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5D44, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EDC8);
  }

  return result;
}

uint64_t sub_100324F4C(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6E6F6973726576LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v5 = 0xE700000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 1701667182 && a2 == 0xE400000000000000LL)
  {
    unint64_t v7 = 0xE400000000000000LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701667182LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x696669746E656469LL && a2 == 0xEA00000000007265LL)
  {
    unint64_t v8 = 0xEA00000000007265LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469LL, 0xEA00000000007265LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x654B63696C627570LL && a2 == 0xE900000000000079LL)
  {
    unint64_t v9 = 0xE900000000000079LL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x654B63696C627570LL, 0xE900000000000079LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
    goto LABEL_26;
  }

  if (a1 == 0x5249656369766564LL && a2 == 0xED0000617461444BLL)
  {
    swift_bridgeObjectRelease(0xED0000617461444BLL);
    return 4LL;
  }

  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5249656369766564LL, 0xED0000617461444BLL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

void sub_100325194(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100183098(&qword_10064EDE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_100324F08();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for SDTempPairingMessage.Request.CodingKeys,  &type metadata for SDTempPairingMessage.Request.CodingKeys,  v11,  v9,  v10);
  if (v2)
  {
    sub_10018709C(a1);
  }

  else
  {
    LOBYTE(v37) = 0;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    LOBYTE(v37) = 1;
    uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    unint64_t v15 = v14;
    uint64_t v35 = v13;
    uint64_t v36 = v12;
    LOBYTE(v37) = 2;
    swift_bridgeObjectRetain(v14);
    uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    unint64_t v18 = v17;
    uint64_t v32 = v16;
    uint64_t v33 = v15;
    char v39 = 3;
    unint64_t v19 = sub_10020C198();
    swift_bridgeObjectRetain(v18);
    uint64_t v34 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v37, &type metadata for Data, &v39, v5, &type metadata for Data, v19);
    char v39 = 4;
    uint64_t v20 = v37;
    unint64_t v31 = v38;
    sub_10019BA8C(v37, v38);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v37, &type metadata for Data, &v39, v5, &type metadata for Data, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = v37;
    unint64_t v22 = v38;
    id v23 = v33;
    *(void *)&double v24 = swift_bridgeObjectRetain(v33).n128_u64[0];
    uint64_t v25 = v34;
    swift_bridgeObjectRetain(v34, v24);
    unint64_t v26 = v31;
    sub_10019BA8C(v20, v31);
    sub_10019BA8C(v21, v22);
    sub_100189B20(v20, v26);
    *(void *)&double v27 = swift_bridgeObjectRelease(v23).n128_u64[0];
    swift_bridgeObjectRelease(v25, v27);
    sub_10018709C(a1);
    *(void *)&double v28 = swift_bridgeObjectRelease(v25).n128_u64[0];
    swift_bridgeObjectRelease(v23, v28);
    sub_100189B20(v20, v26);
    sub_100189B20(v21, v22);
    uint64_t v29 = v35;
    *a2 = v36;
    a2[1] = v29;
    uint64_t v30 = v32;
    a2[2] = (uint64_t)v23;
    a2[3] = v30;
    a2[4] = (uint64_t)v25;
    a2[5] = v20;
    a2[6] = v26;
    a2[7] = v21;
    a2[8] = v22;
  }

uint64_t sub_10032551C(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x6E6F6973726576LL && a2 == 0xE700000000000000LL)
  {
    unint64_t v5 = 0xE700000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6E6F6973726576LL, 0xE700000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x726F727265LL && a2 == 0xE500000000000000LL)
  {
    unint64_t v7 = 0xE500000000000000LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x726F727265LL, 0xE500000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x696669746E656469LL && a2 == 0xEA00000000007265LL)
  {
    unint64_t v8 = 0xEA00000000007265LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469LL, 0xEA00000000007265LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x654B63696C627570LL && a2 == 0xE900000000000079LL)
  {
    unint64_t v9 = 0xE900000000000079LL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x654B63696C627570LL, 0xE900000000000079LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
    goto LABEL_26;
  }

  if (a1 == 0x5249656369766564LL && a2 == 0xED0000617461444BLL)
  {
    swift_bridgeObjectRelease(0xED0000617461444BLL);
    return 4LL;
  }

  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(0x5249656369766564LL, 0xED0000617461444BLL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v10 & 1) != 0) {
      return 4LL;
    }
    else {
      return 5LL;
    }
  }

void sub_10032576C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098(&qword_10064EDD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_100325A84();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for SDTempPairingMessage.Response.CodingKeys,  &type metadata for SDTempPairingMessage.Response.CodingKeys,  v11,  v9,  v10);
  if (v2)
  {
    sub_10018709C(a1);
  }

  else
  {
    LOBYTE(v31) = 0;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    LOBYTE(v31) = 1;
    uint64_t v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v31, v5);
    int v33 = v14;
    LOBYTE(v31) = 2;
    uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)(&v31, v5);
    uint64_t v17 = v16;
    uint64_t v28 = v15;
    uint64_t v29 = v13;
    char v34 = 3;
    unint64_t v18 = sub_10020C198();
    swift_bridgeObjectRetain(v17);
    unint64_t v30 = v18;
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v31, &type metadata for Data, &v34, v5, &type metadata for Data, v18);
    double v27 = v17;
    char v34 = 4;
    uint64_t v19 = v31;
    unint64_t v26 = v32;
    sub_10019BA8C(v31, v32);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v31, &type metadata for Data, &v34, v5, &type metadata for Data, v30);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v20 = v31;
    unint64_t v21 = v32;
    unint64_t v22 = v27;
    swift_bridgeObjectRetain(v27);
    unint64_t v23 = v26;
    sub_10019BA8C(v19, v26);
    sub_10019BA8C(v20, v21);
    sub_100189B20(v19, v23);
    swift_bridgeObjectRelease(v22);
    sub_10018709C(a1);
    swift_bridgeObjectRelease(v22);
    sub_100189B20(v19, v23);
    sub_100189B20(v20, v21);
    uint64_t v24 = v29;
    *(void *)a2 = v12;
    *(void *)(a2 + 8) = v24;
    *(_BYTE *)(a2 + swift_weakDestroy(v0 + 16) = v33 & 1;
    *(void *)(a2 + 24) = v28;
    *(void *)(a2 + 32) = v22;
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v23;
    *(void *)(a2 + 56) = v20;
    *(void *)(a2 + 64) = v21;
  }

unint64_t sub_100325A84()
{
  unint64_t result = qword_10064EDD8;
  if (!qword_10064EDD8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5CF4, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EDD8);
  }

  return result;
}

unint64_t sub_100325AC8()
{
  unint64_t result = qword_10064EDF0;
  if (!qword_10064EDF0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5A38, &type metadata for SDTempPairingError);
    atomic_store(result, (unint64_t *)&qword_10064EDF0);
  }

  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Response.CodingKeys()
{
  return &type metadata for SDTempPairingMessage.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage()
{
  return &type metadata for SDTempPairingMessage;
}

uint64_t _s16DaemoniOSLibrary20SDTempPairingMessageV8ResponseV10CodingKeysOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_100325B80 + 4 * byte_1004D5919[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_100325BB4 + 4 * byte_1004D5914[v4]))();
}

uint64_t sub_100325BB4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100325BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100325BC4LL);
  }
  return result;
}

uint64_t sub_100325BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100325BD8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_100325BDC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100325BE4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDTempPairingMessage.Request.CodingKeys()
{
  return &type metadata for SDTempPairingMessage.Request.CodingKeys;
}

unint64_t sub_100325C04()
{
  unint64_t result = qword_10064EDF8;
  if (!qword_10064EDF8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5C14, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EDF8);
  }

  return result;
}

unint64_t sub_100325C4C()
{
  unint64_t result = qword_10064EE00;
  if (!qword_10064EE00)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5CCC, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EE00);
  }

  return result;
}

unint64_t sub_100325C94()
{
  unint64_t result = qword_10064EE08;
  if (!qword_10064EE08)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5C3C, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EE08);
  }

  return result;
}

unint64_t sub_100325CDC()
{
  unint64_t result = qword_10064EE10;
  if (!qword_10064EE10)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5C64, &type metadata for SDTempPairingMessage.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EE10);
  }

  return result;
}

unint64_t sub_100325D24()
{
  unint64_t result = qword_10064EE18;
  if (!qword_10064EE18)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5B84, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EE18);
  }

  return result;
}

unint64_t sub_100325D6C()
{
  unint64_t result = qword_10064EE20;
  if (!qword_10064EE20)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D5BAC, &type metadata for SDTempPairingMessage.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064EE20);
  }

  return result;
}

uint64_t sub_100325DBC(uint64_t a1)
{
  v7[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v7[1] = "\b";
  uint64_t v2 = type metadata accessor for Optional(255LL, *(void *)(a1 + 80));
  uint64_t v3 = sub_100183124(&qword_100645710);
  uint64_t v4 = type metadata accessor for CheckedContinuation(255LL, v2, v3, &protocol self-conformance witness table for Error);
  uint64_t result = type metadata accessor for Optional(319LL, v4);
  if (v6 <= 0x3F)
  {
    v7[2] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_initClassMetadata2(a1, 0LL, 3LL, v7, a1 + 88);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100325E78()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064EE30);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064EE30);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100325F08(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v2 = swift_isaMask & *v1;
  uint64_t v3 = type metadata accessor for Optional(255LL, *(void *)(v2 + 0x50));
  uint64_t v4 = sub_100183124(&qword_100645710);
  uint64_t v5 = type metadata accessor for CheckedContinuation(255LL, v3, v4, &protocol self-conformance witness table for Error);
  uint64_t v6 = type metadata accessor for Optional(0LL, v5);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = (os_unfair_lock_s *)(*(void *)((char *)v1 + *(void *)(v2 + 88)) + 16LL);
  os_unfair_lock_lock(v16);
  uint64_t v17 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x68LL);
  __n128 v18 = swift_beginAccess(v17, v27, 0LL, 0LL);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t, __n128))(v7 + 16);
  v19(v15, v17, v6, v18);
  uint64_t v20 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v13, 1LL, 1LL, v5);
  __n128 v21 = swift_beginAccess(v17, v26, 33LL, 0LL);
  (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 40))(v17, v13, v6, v21);
  swift_endAccess(v26);
  os_unfair_lock_unlock(v16);
  ((void (*)(char *, char *, uint64_t))v19)(v10, v15, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1LL, v5) == 1)
  {
    unint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
    v22(v15, v6);
    return ((uint64_t (*)(char *, uint64_t))v22)(v10, v6);
  }

  else
  {
    sub_10032612C(v25, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v5);
  }

uint64_t sub_10032612C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v6);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for Result(0LL, v4, v10, *(void *)(v14 + 32));
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v20 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v20 - v16, a1, v15);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    return CheckedContinuation.resume(throwing:)(v13, a2);
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v17, v4);
    return CheckedContinuation.resume(returning:)(v8, a2);
  }

void sub_10032628C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = qword_1006441A0;
  id v11 = a3;
  id v5 = a1;
  if (v4 != -1) {
    swift_once(&qword_1006441A0, sub_100325E78);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064EE30);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SDAirDropRemoteViewController did activate", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }
}

void sub_10032637C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1003266BC();
}

void sub_1003263C8(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6 = qword_1006441A0;
  id v7 = a3;
  id v14 = a1;
  id v8 = a4;
  if (v6 != -1) {
    swift_once(&qword_1006441A0, sub_100325E78);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064EE30);
  id v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SDAirDropRemoteViewController did invalidate", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }
}

id sub_1003264D0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v0);
  uint64_t v2 = swift_isaMask & *v0;
  uint64_t v3 = *(void *)(v2 + 0x58);
  uint64_t v4 = sub_100183098(&qword_10064EED0);
  uint64_t v5 = swift_allocObject(v4, 20LL, 7LL);
  *(_DWORD *)(v5 + swift_weakDestroy(v0 + 16) = 0;
  *(void *)((char *)v0 + v3) = v5;
  *(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60LL)) = 0LL;
  uint64_t v6 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x68LL);
  uint64_t v7 = type metadata accessor for Optional(255LL, *(void *)(v2 + 80));
  uint64_t v8 = sub_100183124(&qword_100645710);
  uint64_t v9 = type metadata accessor for CheckedContinuation(0LL, v7, v8, &protocol self-conformance witness table for Error);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v6, 1LL, 1LL, v9);
  v11.receiver = v0;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, "init");
}

id sub_1003265D0()
{
  return sub_1003264D0();
}

uint64_t sub_1003265F0(void *a1)
{
  uint64_t v2 = swift_isaMask & *a1;
  swift_release(*(void *)((char *)a1 + *(void *)(v2 + 0x58)));

  uint64_t v3 = (char *)a1 + *(void *)((swift_isaMask & *a1) + 0x68LL);
  uint64_t v4 = type metadata accessor for Optional(255LL, *(void *)(v2 + 80));
  uint64_t v5 = sub_100183124(&qword_100645710);
  uint64_t v6 = type metadata accessor for CheckedContinuation(255LL, v4, v5, &protocol self-conformance witness table for Error);
  uint64_t v7 = type metadata accessor for Optional(0LL, v6);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8LL))(v3, v7);
}

uint64_t type metadata accessor for SDAirDropRemoteViewController( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DFFC0(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SDAirDropRemoteViewController);
}

uint64_t sub_1003266BC()
{
  uint64_t v1 = type metadata accessor for Optional(255LL, *(void *)((swift_isaMask & *v0) + 0x50LL));
  uint64_t v2 = sub_100183124(&qword_100645710);
  uint64_t v3 = type metadata accessor for Result(0LL, v1, v2, &protocol self-conformance witness table for Error);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v17 - v5);
  if (qword_1006441A0 != -1) {
    swift_once(&qword_1006441A0, sub_100325E78);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_10064EE30);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    objc_super v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)objc_super v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "SDAirDropRemoteViewController did deactivate", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  uint64_t v12 = type metadata accessor for SFError(0LL);
  unint64_t v13 = sub_1002D138C();
  uint64_t v14 = swift_allocError(v12, v13, 0LL, 0LL);
  *uint64_t v15 = 0xD000000000000018LL;
  v15[1] = 0x800000010050AA60LL;
  v15[2] = 0xD000000000000064LL;
  v15[3] = 0x800000010050AA80LL;
  v15[4] = 114LL;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104LL))( v15,  enum case for SFError.unexpected(_:),  v12);
  uint64_t *v6 = v14;
  swift_storeEnumTagMultiPayload(v6, v3, 1LL);
  sub_100325F08((uint64_t)v6);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003268C8()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_1003268FC()
{
  return type metadata accessor for UserProfilesMonitor(0LL);
}

uint64_t type metadata accessor for UserProfilesMonitor(uint64_t a1)
{
  uint64_t result = qword_10064EF08;
  if (!qword_10064EF08) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UserProfilesMonitor);
  }
  return result;
}

void sub_100326940(uint64_t a1)
{
  v4[1] = &unk_1004D5E70;
  sub_1003269C0(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
  }

void sub_1003269C0(uint64_t a1)
{
  if (!qword_10064EF18)
  {
    uint64_t v2 = sub_100183124(&qword_100649B10);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_10064EF18);
    }
  }

ValueMetadata *type metadata accessor for UserProfile()
{
  return &type metadata for UserProfile;
}

uint64_t sub_100326A28(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_10064EFD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100326A68()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for NWBrowser.Descriptor(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser;
  if (!*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser))
  {
    sub_1003EA388(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
    id v11 = [objc_allocWithZone(RPClient) init];
    uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient) = v11;

    strcpy(v9, "_airdrop._tcp.");
    v9[15] = -18;
    *((void *)v9 + 2) = 0LL;
    *((void *)v9 + 3) = 0LL;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))( v9,  enum case for NWBrowser.Descriptor.bonjourWithTXTRecord(_:),  v5);
    type metadata accessor for NWParameters(0LL);
    uint64_t v13 = static NWParameters.tcp.getter();
    NWParameters.allowLocalEndpointReuse.setter(1LL);
    NWParameters.includePeerToPeer.setter(1LL);
    uint64_t v14 = type metadata accessor for NWBrowser(0LL);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    uint64_t v15 = NWBrowser.init(for:using:)(v9, v13);
    uint64_t v16 = *(void *)(v1 + v10);
    *(void *)(v1 + v10) = v15;
    swift_retain(v15);
    swift_release(v16);
    uint64_t v17 = swift_allocObject(&unk_1005DB968, 24LL, 7LL);
    swift_unknownObjectWeakInit(v17 + 16, v1);
    swift_retain(v17);
    NWBrowser.browseResultsChangedHandler.setter(sub_10032C62C, v17);
    swift_release(v17);
    uint64_t v18 = swift_allocObject(&unk_1005DB968, 24LL, 7LL);
    swift_unknownObjectWeakInit(v18 + 16, v1);
    uint64_t v19 = swift_allocObject(&unk_1005DB990, 24LL, 7LL);
    swift_weakInit(v19 + 16);
    uint64_t v20 = swift_allocObject(&unk_1005DB9B8, 32LL, 7LL);
    *(void *)(v20 + swift_weakDestroy(v0 + 16) = v18;
    *(void *)(v20 + 24) = v19;
    swift_retain(v18);
    swift_retain(v19);
    NWBrowser.stateUpdateHandler.setter(sub_10032C684, v20);
    swift_release(v18);
    swift_release(v19);
    NWBrowser.start(queue:)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue));
    uint64_t v21 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v4, 1LL, 1LL, v21);
    uint64_t v22 = swift_allocObject(&unk_1005DB968, 24LL, 7LL);
    swift_unknownObjectWeakInit(v22 + 16, v1);
    uint64_t v23 = qword_100643F28;
    swift_retain(v22);
    if (v23 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v24 = static AirDropActor.shared;
    uint64_t v25 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    unint64_t v26 = (void *)swift_allocObject(&unk_1005DB9E0, 40LL, 7LL);
    v26[2] = v24;
    v26[3] = v25;
    v26[4] = v22;
    swift_retain(v24);
    swift_release(v22);
    uint64_t v27 = sub_1001B341C((uint64_t)v4, (uint64_t)&unk_10064F0B0, (uint64_t)v26);
    swift_release(v15);
    return swift_release(v27);
  }

  return result;
}

void sub_100326DF0()
{
  int64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser;
  uint64_t v2 = *(uint64_t **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser);
  if (v2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger);
    swift_retain(v2);
    sub_1003EA3A4(v4);
    uint64_t v5 = (uint64_t *)OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient;
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
    if (v6) {
      [v6 invalidate];
    }
    NWBrowser.cancel()();
    uint64_t v7 = *(void *)(v4 + 24);
    if (v7)
    {
      if ((unint64_t)v7 >> 62)
      {
        if (v7 < 0) {
          uint64_t v11 = *(void *)(v4 + 24);
        }
        else {
          uint64_t v11 = v7 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(*(void *)(v4 + 24));
        if (_CocoaArrayWrapper.endIndex.getter(v11)) {
          goto LABEL_7;
        }
      }

      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        swift_bridgeObjectRetain(*(void *)(v4 + 24));
        if (v8)
        {
LABEL_7:
          if ((v7 & 0xC000000000000001LL) != 0) {
            goto LABEL_58;
          }
          if (!*(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10))
          {
            __break(1u);
            goto LABEL_60;
          }

          uint64_t v9 = (char *)*(id *)(v7 + 32);
          swift_bridgeObjectRelease(v7);
          unint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
          swift_bridgeObjectRetain(v10);

          while (1)
          {
LABEL_16:
            uint64_t v7 = (uint64_t)String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v10);
            uint64_t v4 = *(void *)(v4 + 24);
            unint64_t v38 = v2;
            if (!v4) {
              goto LABEL_27;
            }
            if ((unint64_t)v4 >> 62)
            {
              if (v4 < 0) {
                uint64_t v14 = v4;
              }
              else {
                uint64_t v14 = v4 & 0xFFFFFFFFFFFFFF8LL;
              }
              swift_bridgeObjectRetain(v4);
              if (!_CocoaArrayWrapper.endIndex.getter(v14))
              {
LABEL_26:
                swift_bridgeObjectRelease(v4);
                uint64_t v4 = 0LL;
                goto LABEL_27;
              }
            }

            else
            {
              uint64_t v12 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
              swift_bridgeObjectRetain(v4);
              if (!v12) {
                goto LABEL_26;
              }
            }

            if ((v4 & 0xC000000000000001LL) != 0)
            {
LABEL_60:
              uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v4);
              swift_bridgeObjectRelease(v4);
              uint64_t v4 = *(unsigned int *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid);
              swift_unknownObjectRelease(v36);
            }

            else
            {
              if (!*(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10))
              {
                __break(1u);
                return;
              }

              uint64_t v13 = (char *)*(id *)(v4 + 32);
              swift_bridgeObjectRelease(v4);
              uint64_t v4 = *(unsigned int *)&v13[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_pid];
            }

uint64_t sub_1003272DC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064EFE0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064EFE0);
  if (qword_100643FF0 != -1) {
    swift_once(&qword_100643FF0, sub_10023A46C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669640);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

char *sub_10032736C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  unint64_t v44 = a3;
  uint64_t v45 = a4;
  id v42 = a1;
  uint64_t v43 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v6);
  uint64_t v41 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v8 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  unint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v40 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue;
  v39[1] = sub_100237A04();
  uint64_t v17 = v7;
  static DispatchQoS.default.getter();
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v19 = sub_100183098(&qword_100650E60);
  uint64_t v20 = sub_1001CD538( (unint64_t *)&qword_100644430,  &qword_100650E60,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v19, v20, v11, v18);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))( v10,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v41);
  uint64_t v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000029LL,  0x800000010050ACA0LL,  v16,  v13,  v10,  0LL);
  *(void *)&v7[v40] = v21;
  int64_t v22 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate];
  *((void *)v22 + 1) = 0LL;
  swift_unknownObjectWeakInit(v22, 0LL);
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser] = 0LL;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient] = 0LL;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult] = &_swiftEmptyDictionarySingleton;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount] = &_swiftEmptyDictionarySingleton;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections] = &_swiftEmptyDictionarySingleton;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints] = &_swiftEmptyDictionarySingleton;
  id v24 = v42;
  unint64_t v23 = v43;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus] = v42;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_nearbyAgent] = v23;
  int64_t v25 = v44;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_bleController] = v44;
  unint64_t v26 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v42 = v24;
  id v27 = v23;
  id v28 = v25;
  id v29 = [v26 defaultCenter];
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_notificationCenter] = v29;
  uint64_t v31 = v45;
  uint64_t v30 = v46;
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger] = v45;
  uint64_t v32 = &v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler];
  uint64_t v33 = v47;
  *(void *)uint64_t v32 = v30;
  *((void *)v32 + 1) = v33;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v34 = sub_100183098(&qword_10064F0C8);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v31);
  swift_retain(v33);
  *(void *)&v17[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesNeedingDiscovery] = CurrentValueSubject.init(_:)(&v50);

  v49.receiver = v17;
  v49.super_class = ObjectType;
  uint64_t v35 = (char *)objc_msgSendSuper2(&v49, "init");
  uint64_t v36 = *(void **)&v35[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_notificationCenter];
  uint64_t v37 = v35;
  [v36 addObserver:v37 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessModeChanged" object:0];
  [v36 addObserver:v37 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.WirelessPowerChanged" object:0];
  [v36 addObserver:v37 selector:"wirelessBluetoothStateChangedWithNotification:" name:@"com.apple.sharingd.BluetoothPowerChanged" object:0];

  swift_release(v31);
  swift_release(v33);
  return v37;
}

uint64_t sub_100327780(const char *a1, const char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = a3 + 16;
  uint64_t v10 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v8, 1LL, 1LL, v10);
  uint64_t v11 = swift_allocObject(&unk_1005DB968, 24LL, 7LL);
  swift_beginAccess(v9, v21, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v9, v12);
  swift_unknownObjectWeakInit(v11 + 16, Strong);

  uint64_t v14 = qword_100643F28;
  swift_retain(v11);
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRetain(a2);
  if (v14 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v15 = static AirDropActor.shared;
  uint64_t v16 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v17 = (void *)swift_allocObject(&unk_1005DBAA8, 56LL, 7LL);
  v17[2] = v15;
  v17[3] = v16;
  v17[4] = v11;
  v17[5] = a1;
  v17[6] = a2;
  swift_retain(v15);
  swift_release(v11);
  uint64_t v18 = sub_1001B3808((uint64_t)v8, (uint64_t)&unk_10064F128, (uint64_t)v17);
  return swift_release(v18);
}

uint64_t sub_100327928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100327994, static AirDropActor.shared, 0LL);
}

uint64_t sub_100327994()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    sub_100327A04(*(const char **)(v0 + 56), *(void *)(v0 + 64));
  }

  **(_BYTE **)(v0 + 40) = Strong == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100327A04(const char *a1, uint64_t a2)
{
  v163 = a1;
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v165 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  v168 = (char *)&v135 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v5);
  v158 = (char *)&v135 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v148 = (char *)&v135 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v162 = (char *)&v135 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v136 = (char *)&v135 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v135 = (char *)&v135 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  v140 = (char *)&v135 - v18;
  __chkstk_darwin(v17);
  unint64_t v20 = (unint64_t)&v135 - v19;
  uint64_t v147 = type metadata accessor for NWBrowser.Result.Change.Flags(0LL);
  uint64_t v146 = *(void *)(v147 - 8);
  __chkstk_darwin(v147);
  uint64_t v145 = (uint64_t)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for NWBrowser.Result(0LL);
  uint64_t v171 = *(void *)(v22 - 8);
  uint64_t v23 = __chkstk_darwin(v22);
  uint64_t v169 = (uint64_t)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v23);
  v157 = (char *)&v135 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  id v29 = (char *)&v135 - v28;
  __chkstk_darwin(v27);
  v144 = (char *)&v135 - v30;
  uint64_t v31 = type metadata accessor for NWBrowser.Result.Change(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v135 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  v160 = (char *)&v135 - v36;
  v154 = v2;
  uint64_t v167 = sub_1002DF1E8();
  v156 = v37;
  uint64_t v38 = *(void *)(a2 + 56);
  uint64_t v151 = a2 + 56;
  uint64_t v39 = 1LL << *(_BYTE *)(a2 + 32);
  uint64_t v40 = -1LL;
  if (v39 < 64) {
    uint64_t v40 = ~(-1LL << v39);
  }
  unint64_t v41 = v40 & v38;
  int64_t v152 = (unint64_t)(v39 + 63) >> 6;
  int v159 = enum case for NWBrowser.Result.Change.removed(_:);
  int v143 = enum case for NWBrowser.Result.Change.changed(_:);
  int v166 = enum case for NWEndpoint.service(_:);
  uint64_t v161 = a2;
  __n128 v42 = swift_bridgeObjectRetain((const char *)a2);
  uint64_t v43 = 0LL;
  uint64_t v172 = v22;
  unint64_t v149 = v20;
  v150 = v29;
  uint64_t v153 = v31;
  v155 = v35;
  uint64_t v139 = v4;
  while (v41)
  {
    unint64_t v44 = __clz(__rbit64(v41));
    v41 &= v41 - 1;
    v170 = v43;
    unint64_t v45 = v44 | ((void)v43 << 6);
    uint64_t v46 = v162;
LABEL_21:
    uint64_t v52 = v160;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v32 + 16))( v160,  *(void *)(v161 + 48) + *(void *)(v32 + 72) * v45,  v31,  v42);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v52, v31);
    int v53 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v35, v31);
    if (v53 == v159)
    {
      unint64_t v164 = v41;
      (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
      uint64_t v54 = v171;
      uint64_t v55 = (*(uint64_t (**)(char *, char *, uint64_t))(v171 + 32))(v29, v35, v22);
      NWBrowser.Result.endpoint.getter(v55);
      uint64_t v56 = v165;
      uint64_t v57 = v148;
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v148, v46, v4);
      int v58 = (*(uint64_t (**)(char *, uint64_t))(v56 + 88))(v57, v4);
      if (v58 != v166) {
        goto LABEL_69;
      }
      (*(void (**)(char *, uint64_t))(v56 + 96))(v57, v4);
      uint64_t v60 = *(void *)v57;
      uint64_t v59 = (const char *)*((void *)v57 + 1);
      *(void *)&double v61 = swift_bridgeObjectRelease((const char *)*((void *)v57 + 3)).n128_u64[0];
      swift_bridgeObjectRelease(*((const char **)v57 + 5), v61);
      uint64_t v62 = sub_100183098(&qword_10064F0F8);
      sub_100187100((uint64_t)&v57[*(int *)(v62 + 80)], &qword_100654C30);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v46, v4);
      sub_100328DB4(v60, v59);
      __n128 v63 = swift_bridgeObjectRelease(v59);
      (*(void (**)(char *, uint64_t, __n128))(v54 + 8))(v29, v22, v63);
      unint64_t v20 = v149;
      uint64_t v31 = v153;
      uint64_t v35 = v155;
      uint64_t v43 = v170;
      unint64_t v41 = v164;
    }

    else if (v53 == v143)
    {
      unint64_t v164 = v41;
      (*(void (**)(char *, uint64_t))(v32 + 96))(v35, v31);
      uint64_t v64 = sub_100183098(&qword_10064F130);
      double v65 = &v35[*(int *)(v64 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v171 + 32))(v144, v35, v22);
      uint64_t v66 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v146 + 32))(v145, v65, v147);
      NWBrowser.Result.endpoint.getter(v66);
      uint64_t v67 = v165;
      uint64_t v68 = *(void (**)(char *, unint64_t, uint64_t))(v165 + 16);
      unint64_t v69 = v20;
      unint64_t v20 = (unint64_t)v140;
      v68(v140, v69, v4);
      unint64_t v70 = *(uint64_t (**)(unint64_t, uint64_t))(v67 + 88);
      int v71 = v70(v20, v4);
      if (v71 != v166) {
        goto LABEL_69;
      }
      v142 = &v35[*(int *)(v64 + 48)];
      uint64_t v72 = *(void (**)(unint64_t, uint64_t))(v67 + 96);
      v72(v20, v4);
      uint64_t v73 = v67;
      uint64_t v75 = *(void *)v20;
      unint64_t v74 = *(const char **)(v20 + 8);
      *(void *)&double v76 = swift_bridgeObjectRelease((const char *)*(void *)(v20 + 24)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v20 + 40), v76);
      uint64_t v141 = sub_100183098(&qword_10064F0F8);
      sub_100187100(v20 + *(int *)(v141 + 80), &qword_100654C30);
      unint64_t v77 = *(void (**)(unint64_t, uint64_t))(v73 + 8);
      v77(v69, v4);
      unint64_t v20 = v69;
      if (v75 == v167 && v74 == v156)
      {
        __n128 v78 = swift_bridgeObjectRelease(v156);
        id v29 = v150;
        uint64_t v79 = v144;
        unint64_t v41 = v164;
LABEL_34:
        (*(void (**)(uint64_t, uint64_t, __n128))(v146 + 8))(v145, v147, v78);
        uint64_t v22 = v172;
        uint64_t v88 = *(void (**)(char *, uint64_t))(v171 + 8);
        v88(v79, v172);
        v88(v142, v22);
        uint64_t v4 = v139;
        goto LABEL_37;
      }

      v137 = (void (*)(char *, uint64_t))v77;
      v138 = v72;
      char v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v74, v167, v156, 0LL);
      __n128 v78 = swift_bridgeObjectRelease(v74);
      id v29 = v150;
      uint64_t v79 = v144;
      unint64_t v41 = v164;
      if ((v86 & 1) != 0) {
        goto LABEL_34;
      }
      uint64_t v89 = v135;
      NWBrowser.Result.endpoint.getter(v87);
      unint64_t v20 = (unint64_t)v136;
      uint64_t v90 = (uint64_t)v79;
      uint64_t v4 = v139;
      v68(v136, (unint64_t)v89, v139);
      int v91 = v70(v20, v4);
      if (v91 != v166) {
        goto LABEL_69;
      }
      v138(v20, v4);
      uint64_t v92 = *(void *)v20;
      __n128 v93 = *(const char **)(v20 + 8);
      *(void *)&double v94 = swift_bridgeObjectRelease((const char *)*(void *)(v20 + 24)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v20 + 40), v94);
      sub_100187100(v20 + *(int *)(v141 + 80), &qword_100654C30);
      v137(v89, v4);
      uint64_t v95 = v145;
      sub_100328860(v90, v92, v93, v145);
      __n128 v96 = swift_bridgeObjectRelease(v93);
      (*(void (**)(uint64_t, uint64_t, __n128))(v146 + 8))(v95, v147, v96);
      uint64_t v22 = v172;
      uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
      v97(v90, v172);
      v97((uint64_t)v142, v22);
      unint64_t v20 = v149;
LABEL_37:
      uint64_t v31 = v153;
      uint64_t v35 = v155;
      uint64_t v43 = v170;
    }

    else
    {
      if (qword_1006441A8 != -1) {
        swift_once(&qword_1006441A8, sub_1003272DC);
      }
      uint64_t v80 = type metadata accessor for Logger(0LL);
      uint64_t v81 = sub_100186DE4(v80, (uint64_t)qword_10064EFE0);
      uint64_t v82 = (os_log_s *)Logger.logObject.getter(v81);
      os_log_type_t v83 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v82, v83))
      {
        uint64_t v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v84 = 0;
        _os_log_impl((void *)&_mh_execute_header, v82, v83, "Unknown bonjour result change", v84, 2u);
        unint64_t v85 = v84;
        uint64_t v35 = v155;
        swift_slowDealloc(v85, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
      uint64_t v43 = v170;
    }
  }

  int64_t v47 = (int64_t)(v43 + 1);
  uint64_t v46 = v162;
  if (__OFADD__(v43, 1LL))
  {
    __break(1u);
    goto LABEL_66;
  }

  unint64_t v48 = v156;
  if (v47 >= v152) {
    goto LABEL_38;
  }
  unint64_t v49 = *(void *)(v151 + 8 * v47);
  int64_t v50 = (int64_t)(v43 + 1);
  if (v49) {
    goto LABEL_20;
  }
  int64_t v50 = (int64_t)(v43 + 2);
  unint64_t v49 = *(void *)(v151 + 8 * v50);
  if (v49) {
    goto LABEL_20;
  }
  int64_t v50 = (int64_t)(v43 + 3);
  unint64_t v49 = *(void *)(v151 + 8 * v50);
  if (v49) {
    goto LABEL_20;
  }
  double v51 = v43 + 4;
  if ((uint64_t)(v43 + 4) >= v152)
  {
LABEL_38:
    swift_release(v161);
    uint64_t v98 = *((void *)v163 + 7);
    v170 = v163 + 56;
    uint64_t v99 = 1LL << v163[32];
    uint64_t v100 = -1LL;
    if (v99 < 64) {
      uint64_t v100 = ~(-1LL << v99);
    }
    unint64_t v20 = v100 & v98;
    int64_t v101 = (unint64_t)(v99 + 63) >> 6;
    __n128 v102 = swift_bridgeObjectRetain(v163);
    int64_t v103 = 0LL;
    uint64_t v104 = v171;
    uint64_t v105 = v165;
    uint64_t v106 = v168;
    if (v20) {
      goto LABEL_43;
    }
LABEL_44:
    int64_t v109 = v103 + 1;
    if (!__OFADD__(v103, 1LL))
    {
      if (v109 < v101)
      {
        unint64_t v110 = *(void *)&v170[8 * v109];
        ++v103;
        if (v110) {
          goto LABEL_57;
        }
        int64_t v103 = v109 + 1;
        if (v109 + 1 >= v101) {
          goto LABEL_64;
        }
        unint64_t v110 = *(void *)&v170[8 * v103];
        if (v110) {
          goto LABEL_57;
        }
        int64_t v103 = v109 + 2;
        if (v109 + 2 >= v101) {
          goto LABEL_64;
        }
        unint64_t v110 = *(void *)&v170[8 * v103];
        if (v110)
        {
LABEL_57:
          unint64_t v20 = (v110 - 1) & v110;
          for (unint64_t i = __clz(__rbit64(v110)) + (v103 << 6); ; unint64_t i = v107 | (v103 << 6))
          {
            uint64_t v112 = v157;
            uint64_t v113 = v172;
            (*(void (**)(char *, unint64_t, uint64_t, __n128))(v104 + 16))( v157,  *((void *)v163 + 6) + *(void *)(v104 + 72) * i,  v172,  v102);
            uint64_t v114 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v104 + 32))(v169, v112, v113);
            unint64_t v115 = v158;
            NWBrowser.Result.endpoint.getter(v114);
            uint64_t v116 = v115;
            uint64_t v117 = v168;
            (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v168, v115, v4);
            int v118 = (*(uint64_t (**)(char *, uint64_t))(v105 + 88))(v117, v4);
            if (v118 != v166) {
              break;
            }
            (*(void (**)(char *, uint64_t))(v105 + 96))(v106, v4);
            uint64_t v119 = *(void *)v106;
            uint64_t v120 = (const char *)*((void *)v106 + 1);
            *(void *)&double v121 = swift_bridgeObjectRelease((const char *)*((void *)v106 + 3)).n128_u64[0];
            swift_bridgeObjectRelease(*((const char **)v106 + 5), v121);
            uint64_t v122 = sub_100183098(&qword_10064F0F8);
            sub_100187100((uint64_t)&v106[*(int *)(v122 + 80)], &qword_100654C30);
            (*(void (**)(char *, uint64_t))(v105 + 8))(v116, v4);
            if (v119 == v167 && v120 == v48
              || (_stringCompareWithSmolCheck(_:_:expecting:)(v119, v120, v167, v48, 0LL) & 1) != 0)
            {
              uint64_t v104 = v171;
              (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v169, v172);
              __n128 v102 = swift_bridgeObjectRelease(v120);
              if (!v20) {
                goto LABEL_44;
              }
            }

            else
            {
              uint64_t v123 = v169;
              sub_1003290F4(v169, v119, v120);
              __n128 v124 = swift_bridgeObjectRelease(v120);
              uint64_t v104 = v171;
              uint64_t v125 = v123;
              unint64_t v48 = v156;
              (*(void (**)(uint64_t, uint64_t, __n128))(v171 + 8))(v125, v172, v124);
              if (!v20) {
                goto LABEL_44;
              }
            }

LABEL_66:
    __break(1u);
    goto LABEL_67;
  }

  unint64_t v49 = *(void *)(v151 + 8LL * (void)v51);
  if (v49)
  {
    int64_t v50 = (int64_t)(v43 + 4);
LABEL_20:
    unint64_t v41 = (v49 - 1) & v49;
    v170 = (const char *)v50;
    unint64_t v45 = __clz(__rbit64(v49)) + (v50 << 6);
    id v29 = v150;
    goto LABEL_21;
  }

  while (1)
  {
    int64_t v50 = (int64_t)(v51 + 1);
    if (__OFADD__(v51, 1LL)) {
      break;
    }
    if (v50 >= v152) {
      goto LABEL_38;
    }
    unint64_t v49 = *(void *)(v151 + 8 * v50);
    ++v51;
    if (v49) {
      goto LABEL_20;
    }
  }

                        __break(1u);
                        goto LABEL_67;
                      }

  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t sub_1003287D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0LL, 0LL);
  uint64_t result = swift_unknownObjectWeakLoadStrong(v5, v6);
  if (result)
  {
    uint64_t v8 = (void *)result;
    uint64_t v9 = a3 + 16;
    swift_beginAccess(v9, &v11, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v9);
    sub_10032DC20(a1);

    return swift_release(Strong);
  }

  return result;
}

void sub_100328860(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8 = sub_100183098(&qword_10064DB78);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for NWBrowser.Result.Change.Flags(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v43 - v16;
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v43 - v16, a4, v11);
  static NWBrowser.Result.Change.Flags.metadataChanged.getter(v18);
  uint64_t v19 = sub_100183F14( &qword_10064F138,  (uint64_t (*)(uint64_t))&type metadata accessor for NWBrowser.Result.Change.Flags,  (uint64_t)&protocol conformance descriptor for NWBrowser.Result.Change.Flags);
  LOBYTE(a4) = dispatch thunk of static Equatable.== infix(_:_:)(v15, v17, v11, v19);
  unint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v15, v11);
  v20(v17, v11);
  if ((a4 & 1) != 0)
  {
    if (sub_100413210())
    {
      if (qword_1006441A8 != -1) {
        swift_once(&qword_1006441A8, sub_1003272DC);
      }
      uint64_t v21 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v21, (uint64_t)qword_10064EFE0);
      swift_bridgeObjectRetain_n(a3, 2LL);
      uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v26 = swift_slowAlloc(32LL, -1LL);
        v44[0] = v26;
        *(_DWORD *)uint64_t v25 = 136315138;
        swift_bridgeObjectRetain(a3);
        uint64_t v45 = sub_10018CDB4(a2, (unint64_t)a3, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v25 + 4, v25 + 12);
        swift_bridgeObjectRelease_n(a3, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Bonjour TXT record change for service name %s", v25, 0xCu);
        swift_arrayDestroy(v26, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v26, -1LL, -1LL);
        swift_slowDealloc(v25, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a3, 2LL);
      }

      uint64_t v39 = v43[1];
      sub_100328DB4(a2, a3);
      uint64_t v40 = type metadata accessor for NWBrowser.Result(0LL);
      uint64_t v41 = *(void *)(v40 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v10, a1, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v10, 0LL, 1LL, v40);
      *(void *)&double v42 = swift_beginAccess( v39 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult,  v44,  33LL,  0LL).n128_u64[0];
      swift_bridgeObjectRetain(a3, v42);
      sub_1002E5D08((uint64_t)v10, a2, (uint64_t)a3);
      swift_endAccess(v44);
    }

    else
    {
      uint64_t v32 = a2;
      if (qword_1006441A8 != -1) {
        swift_once(&qword_1006441A8, sub_1003272DC);
      }
      uint64_t v33 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v33, (uint64_t)qword_10064EFE0);
      swift_bridgeObjectRetain_n(a3, 2LL);
      uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
      os_log_type_t v36 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v38 = swift_slowAlloc(32LL, -1LL);
        v44[0] = v38;
        *(_DWORD *)uint64_t v37 = 136315138;
        swift_bridgeObjectRetain(a3);
        uint64_t v45 = sub_10018CDB4(v32, (unint64_t)a3, v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v37 + 4, v37 + 12);
        swift_bridgeObjectRelease_n(a3, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "AWDL not yet available for serviceName %s", v37, 0xCu);
        swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v38, -1LL, -1LL);
        swift_slowDealloc(v37, -1LL, -1LL);
      }

      else
      {

        swift_bridgeObjectRelease_n(a3, 2LL);
      }
    }
  }

  else
  {
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL);
    uint64_t v28 = sub_100186DE4(v27, (uint64_t)qword_10064EFE0);
    id v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unhandled Bonjour service change", v31, 2u);
      swift_slowDealloc(v31, -1LL, -1LL);
    }
  }

uint64_t sub_100328DB4(uint64_t a1, const char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v6);
  uint64_t v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = sub_100183098(&qword_10064DB78);
  __chkstk_darwin(v9);
  uint64_t v11 = &v37[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = type metadata accessor for NWBrowser.Result(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
  *(void *)&double v13 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult,  v37,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(a2, v13);
  sub_1002E5D08((uint64_t)v11, a1, (uint64_t)a2);
  swift_endAccess(v37);
  *(void *)&double v14 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount,  v37,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(a2, v14);
  sub_1001CA798(a1, (uint64_t)a2);
  swift_endAccess(v37);
  swift_bridgeObjectRelease(a2);
  uint64_t v15 = (uint64_t *)(v3
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
  *(void *)&double v16 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections,  v37,  32LL,  0LL).n128_u64[0];
  uint64_t v17 = *v15;
  if (*(void *)(*v15 + 16))
  {
    swift_bridgeObjectRetain(a2, v16);
    uint64_t v18 = sub_1003AD53C(a1, (uint64_t)a2);
    if ((v19 & 1) != 0)
    {
      unint64_t v20 = *(void **)(*(void *)(v17 + 56) + 8 * v18);
      swift_endAccess(v37);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease(a2);
      uint64_t v22 = *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection];
      uint64_t v23 = v21;
      if (v22)
      {
        swift_retain(v22);
        NWConnection.forceCancel()();
        swift_release(v22);
      }

      uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection];
      if (v24)
      {
        swift_retain(*(void *)&v21[OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection]);
        NWConnection.forceCancel()();

        swift_release(v24);
      }

      else
      {
      }
    }

    else
    {
      swift_endAccess(v37);
      swift_bridgeObjectRelease(a2);
      uint64_t v21 = 0LL;
    }
  }

  else
  {
    swift_endAccess(v37);
    uint64_t v21 = 0LL;
  }

  *(void *)&double v25 = swift_beginAccess(v15, v37, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(a2, v25);
  uint64_t v26 = (void *)sub_1001CA78C(a1, (uint64_t)a2);
  swift_endAccess(v37);
  swift_bridgeObjectRelease(a2);

  uint64_t v27 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v8, 1LL, 1LL, v27);
  uint64_t v28 = (const char **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  *(void *)&double v29 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints,  v37,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(a2, v29);
  sub_1002E5D2C((uint64_t)v8, a1, (uint64_t)a2);
  swift_endAccess(v37);
  os_log_type_t v30 = *(void (**)(void *, __n128))(v3
                                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler);
  uint64_t v31 = *v28;
  swift_bridgeObjectRetain(*v28);
  uint64_t v33 = sub_10018D44C(v32);
  __n128 v34 = swift_bridgeObjectRelease(v31);
  v30(v33, v34);

  return swift_release(v33);
}

void sub_1003290F4(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100183098(&qword_10064DB78);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((sub_100329F54(a2, a3) & 1) != 0)
  {
    if (sub_100413210())
    {
      uint64_t v11 = type metadata accessor for NWBrowser.Result(0LL);
      uint64_t v12 = *(void *)(v11 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0LL, 1LL, v11);
      *(void *)&double v13 = swift_beginAccess( v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult,  v23,  33LL,  0LL).n128_u64[0];
      swift_bridgeObjectRetain(a3, v13);
      sub_1002E5D08((uint64_t)v10, a2, (uint64_t)a3);
      swift_endAccess(v23);
      return;
    }

    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v21 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v21, (uint64_t)qword_10064EFE0);
    swift_bridgeObjectRetain_n(a3, 2LL);
    double v16 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      v23[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain(a3, v23[0]);
      uint64_t v24 = sub_10018CDB4(a2, (unint64_t)a3, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(a3, 3LL);
      unint64_t v20 = "AWDL not yet available for serviceName %s";
      goto LABEL_12;
    }
  }

  else
  {
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v14, (uint64_t)qword_10064EFE0);
    swift_bridgeObjectRetain_n(a3, 2LL);
    double v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      v23[0] = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain(a3, v23[0]);
      uint64_t v24 = sub_10018CDB4(a2, (unint64_t)a3, v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(a3, 3LL);
      unint64_t v20 = "Already discovering/discovered %s";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v16, v17, v20, v18, 0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);

      return;
    }
  }

  swift_bridgeObjectRelease_n(a3, 2LL);
}

uint64_t sub_100329468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1003294D0, static AirDropActor.shared, 0LL);
}

void sub_1003294D0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger);
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    goto LABEL_12;
  }
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    *(void *)&double v4 = swift_bridgeObjectRetain((const char *)*(void *)(v1 + 24)).n128_u64[0];
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }

  if (v2 < 0) {
    uint64_t v3 = *(void *)(v1 + 24);
  }
  else {
    uint64_t v3 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(const char **)(v1 + 24));
  if (!_CocoaArrayWrapper.endIndex.getter(v3))
  {
LABEL_11:
    swift_bridgeObjectRelease((const char *)v2, v4);
LABEL_12:
    uint64_t v7 = (const char *)0xE000000000000000LL;
    goto LABEL_13;
  }

uint64_t sub_1003296FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  void v4[6] = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  void v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100329768, v5, 0LL);
}

uint64_t sub_100329768()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate,  v4);
    *(void *)(v0 + 64) = v6;

    if (v6) {
      return swift_task_switch(sub_100329810, static AirDropActor.shared, 0LL);
    }
  }

  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100329810()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1002E98F0();
  uint64_t v2 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser);
  if (v3)
  {
    id v4 = v3;
    sub_100326DF0();

    uint64_t v3 = *(void **)(v1 + v2);
  }

  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  *(void *)(v1 + v2) = 0LL;

  swift_unknownObjectRelease(v5);
  return swift_task_switch(sub_1002FDEF4, v6, 0LL);
}

id sub_100329890(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWBrowser.Result(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v75 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v68 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v68 - v14;
  NWBrowser.Result.endpoint.getter(v13);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v12, v15, v6);
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v12, v6) != enum case for NWEndpoint.service(_:))
  {
    id result = (id)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD00000000000001FLL,  0x800000010050AC80LL,  "DaemoniOSLibrary/Network+SFAirDrop.swift",  40LL,  2LL,  680LL,  0);
    __break(1u);
    return result;
  }

  (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
  double v16 = (const char *)*((void *)v12 + 1);
  uint64_t v77 = *(void *)v12;
  *(void *)&double v17 = swift_bridgeObjectRelease((const char *)*((void *)v12 + 3)).n128_u64[0];
  swift_bridgeObjectRelease(*((const char **)v12 + 5), v17);
  uint64_t v18 = sub_100183098(&qword_10064F0F8);
  sub_100187100((uint64_t)&v12[*(int *)(v18 + 80)], &qword_100654C30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
  uint64_t v19 = sub_100412C40();
  if ((v20 & 1) != 0)
  {
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v46 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v46, (uint64_t)qword_10064EFE0);
    swift_bridgeObjectRetain(v16);
    unint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.default.getter();
    BOOL v50 = os_log_type_enabled(v48, v49);
    uint64_t v51 = v77;
    if (v50)
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v53 = swift_slowAlloc(32LL, -1LL);
      uint64_t v79 = v53;
      *(_DWORD *)uint64_t v52 = 136315138;
      swift_bridgeObjectRetain(v16);
      uint64_t v78 = sub_10018CDB4(v51, (unint64_t)v16, &v79);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v52 + 4, v52 + 12);
      swift_bridgeObjectRelease_n(v16, 3LL);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Missing TXT record for Bonjour service %s", v52, 0xCu);
      swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1LL, -1LL);
      swift_slowDealloc(v52, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v16, 2LL);
    }

    return 0LL;
  }

  uint64_t v21 = v76;
  uint64_t v22 = *(void **)(v76 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_rpClient);
  if (!v22)
  {
    swift_bridgeObjectRelease(v16);
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v54 = type metadata accessor for Logger(0LL);
    uint64_t v55 = sub_100186DE4(v54, (uint64_t)qword_10064EFE0);
    uint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
    os_log_type_t v57 = static os_log_type_t.error.getter(v56);
    if (os_log_type_enabled(v56, v57))
    {
      int v58 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Missing RPClient for Bonjour browser", v58, 2u);
      swift_slowDealloc(v58, -1LL, -1LL);
    }

    return 0LL;
  }

  uint64_t v23 = v19;
  uint64_t v24 = qword_1006441A8;
  id v74 = v22;
  if (v24 != -1) {
    swift_once(&qword_1006441A8, sub_1003272DC);
  }
  uint64_t v25 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v25, (uint64_t)qword_10064EFE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  swift_bridgeObjectRetain_n(v16, 2LL);
  uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.default.getter();
  int v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v30 = swift_slowAlloc(22LL, -1LL);
    int v72 = v29;
    uint64_t v31 = v30;
    uint64_t v73 = swift_slowAlloc(64LL, -1LL);
    uint64_t v79 = v73;
    *(_DWORD *)uint64_t v31 = 136315394;
    os_log_t v71 = v27;
    swift_bridgeObjectRetain(v16);
    uint64_t v78 = sub_10018CDB4(v77, (unint64_t)v16, &v79);
    unint64_t v70 = &v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &v79, v31 + 4, v31 + 12);
    uint64_t v32 = swift_bridgeObjectRelease_n(v16, 3LL);
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v69 = v31 + 14;
    uint64_t v33 = (const char *)NWBrowser.Result.interfaces.getter(v32);
    uint64_t v34 = type metadata accessor for NWInterface(0LL);
    uint64_t v35 = v23;
    uint64_t v36 = Array.description.getter(v33, v34);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease(v33);
    uint64_t v39 = v36;
    uint64_t v23 = v35;
    uint64_t v78 = sub_10018CDB4(v39, (unint64_t)v38, &v79);
    uint64_t v21 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, v70, v69, v31 + 22);
    __n128 v40 = swift_bridgeObjectRelease(v38);
    uint64_t v41 = v5;
    uint64_t v42 = v77;
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v41, v2, v40);
    os_log_t v43 = v71;
    _os_log_impl( (void *)&_mh_execute_header,  v71,  (os_log_type_t)v72,  "Creating service %s from interfaces %s",  (uint8_t *)v31,  0x16u);
    uint64_t v44 = v73;
    swift_arrayDestroy(v73, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v44, -1LL, -1LL);
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(v16, 2LL);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

    uint64_t v42 = v77;
  }

  uint64_t v60 = (uint64_t)v75;
  NWBrowser.Result.endpoint.getter(v45);
  double v61 = *(void **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus);
  uint64_t v62 = *(void **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_nearbyAgent);
  __n128 v63 = *(void **)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browserQueue);
  id v64 = objc_allocWithZone((Class)type metadata accessor for SDAirDropBonjourDiscoverConnection(0LL));
  id v65 = v61;
  id v66 = v62;
  id v67 = v63;
  return sub_100261384(v42, (uint64_t)v16, v60, v23, (uint64_t)v65, (uint64_t)v66, (uint64_t)v74, (uint64_t)v67);
}

uint64_t sub_100329F54(uint64_t a1, const char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v6);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  *(void *)&double v10 = swift_beginAccess(v9, v29, 32LL, 0LL).n128_u64[0];
  uint64_t v11 = *v9;
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain(a2, v10);
    uint64_t v12 = sub_1003AD53C(a1, (uint64_t)a2);
    if ((v13 & 1) != 0)
    {
      uint64_t v14 = v12;
      uint64_t v15 = *(void *)(v11 + 56);
      uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      uint64_t v17 = *(void *)(v16 - 8);
      sub_10019140C(v15 + *(void *)(v17 + 72) * v14, (uint64_t)v8);
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0LL, 1LL, v16);
    }

    else
    {
      uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v8, 1LL, 1LL, v16);
    }

    swift_bridgeObjectRelease(a2);
  }

  else
  {
    uint64_t v16 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v8, 1LL, 1LL, v16);
  }

  swift_endAccess(v29);
  type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  int v18 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48LL))(v8, 1LL, v16);
  sub_100187100((uint64_t)v8, &qword_100649F58);
  if (v18 == 1)
  {
    uint64_t v19 = (uint64_t *)(v3
                    + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
    *(void *)&double v20 = swift_beginAccess( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections,  v29,  32LL,  0LL).n128_u64[0];
    uint64_t v21 = *v19;
    if (*(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain(a2, v20);
      uint64_t v22 = sub_1003AD53C(a1, (uint64_t)a2);
      char v24 = v23;
      if ((v23 & 1) != 0) {
        id v25 = *(id *)(*(void *)(v21 + 56) + 8 * v22);
      }
      else {
        id v25 = 0LL;
      }
      char v26 = v24 ^ 1;
      swift_bridgeObjectRelease(a2);
    }

    else
    {
      id v25 = 0LL;
      char v26 = 1;
    }

    swift_endAccess(v29);
  }

  else
  {
    char v26 = 0;
  }

  return v26 & 1;
}

uint64_t sub_10032A17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10032A1E4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10032A1E4()
{
  unsigned int v1 = objc_msgSend( *(id *)(*(void *)(v0 + 16)
                             + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_deviceStatus),
                       "bluetoothEnabled");
  uint64_t v2 = *(void *)(v0 + 16);
  if (v1)
  {
    if (*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_browser)) {
      sub_1003EA388(*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
    }
  }

  else
  {
    sub_1003EA3A4(*(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_sessionLogger));
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032A414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[33] = a3;
  v4[34] = v3;
  v4[31] = a1;
  _BYTE v4[32] = a2;
  uint64_t v5 = sub_100183098(&qword_10064DB78);
  v4[35] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100649F58);
  v4[36] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v4[37] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[38] = v8;
  v4[39] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v4[40] = static AirDropActor.shared;
  return swift_task_switch(sub_10032A4F4, v9, 0LL);
}

uint64_t sub_10032A4F4()
{
  id v1 = sub_100329890(*(void *)(v0 + 248));
  *(void *)(v0 + 328) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(const char **)(v0 + 264);
    uint64_t v3 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v6 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
    *(void *)(v0 + 336) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections;
    uint64_t v7 = (const char **)(v3 + v6);
    *(void *)&double v8 = swift_beginAccess(v3 + v6, v0 + 16, 33LL, 0LL).n128_u64[0];
    swift_bridgeObjectRetain(v4, v8);
    id v9 = v2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
    uint64_t v17 = *v7;
    *uint64_t v7 = (const char *)0x8000000000000000LL;
    sub_1003B3F5C((uint64_t)v9, v5, v4, isUniquelyReferenced_nonNull_native);
    uint64_t v11 = *v7;
    *uint64_t v7 = v17;
    *(void *)&double v12 = swift_bridgeObjectRelease(v11).n128_u64[0];
    swift_bridgeObjectRelease(v4, v12);
    swift_endAccess(v0 + 16);
    char v13 = (void *)swift_task_alloc(dword_10064A2D4);
    *(void *)(v0 + 344) = v13;
    void *v13 = v0;
    v13[1] = sub_10032A640;
    return sub_1002614C4(*(void *)(v0 + 312));
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 288);
    swift_task_dealloc(*(void *)(v0 + 312));
    swift_task_dealloc(v16);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10032A640()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 344);
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_10032AB8C;
  }
  else {
    uint64_t v4 = sub_10032A6A4;
  }
  return swift_task_switch(v4, *(void *)(v2 + 320), 0LL);
}

uint64_t sub_10032A6A4()
{
  uint64_t v52 = v0 + 112;
  uint64_t v53 = v0 + 64;
  uint64_t v1 = v0 + 136;
  uint64_t v51 = v0 + 160;
  if (qword_1006441A8 != -1) {
    swift_once(&qword_1006441A8, sub_1003272DC);
  }
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v3, (uint64_t)qword_10064EFE0);
  swift_bridgeObjectRetain_n(v2, 2LL);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  double v8 = *(const char **)(v0 + 264);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 256);
    double v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = swift_slowAlloc(32LL, -1LL);
    v54[0] = v11;
    *(_DWORD *)double v10 = 136315138;
    swift_bridgeObjectRetain(v8);
    *(void *)(v0 + 240) = sub_10018CDB4(v9, (unint64_t)v8, v54);
    uint64_t v1 = v0 + 136;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 240, v0 + 248, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease_n(v8, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Bonjour service %s completed discovery", v10, 0xCu);
    swift_arrayDestroy(v11, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(*(void *)(v0 + 264), 2LL);
  }

  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v50 = *(void *)(v0 + 312);
  uint64_t v14 = *(void *)(v0 + 288);
  uint64_t v13 = *(void *)(v0 + 296);
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v16 = *(void *)(v0 + 280);
  uint64_t v17 = *(void *)(v0 + 256);
  int v18 = *(const char **)(v0 + 264);
  sub_10019140C(v50, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0LL, 1LL, v13);
  uint64_t v19 = (const char **)(v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  *(void *)&double v20 = swift_beginAccess( v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints,  v51,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(v18, v20);
  sub_1002E5D2C(v14, v17, (uint64_t)v18);
  swift_endAccess(v51);
  *(void *)&double v21 = swift_beginAccess( v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount,  v1,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(v18, v21);
  sub_1001CA798(v17, (uint64_t)v18);
  swift_endAccess(v1);
  swift_bridgeObjectRelease(v18);
  uint64_t v22 = type metadata accessor for NWBrowser.Result(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v16, 1LL, 1LL, v22);
  *(void *)&double v23 = swift_beginAccess( v15 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult,  v52,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(v18, v23);
  sub_1002E5D08(v16, v17, (uint64_t)v18);
  swift_endAccess(v52);
  char v24 = *(void (**)(void *, __n128))(v15
                                                + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_endpointsUpdateHandler);
  id v25 = *v19;
  swift_bridgeObjectRetain(v25);
  uint64_t v27 = sub_10018D44C(v26);
  __n128 v28 = swift_bridgeObjectRelease(v25);
  v24(v27, v28);
  swift_release(v27);
  sub_100191450(v50);
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v30 = *(void *)(v0 + 328);
  uint64_t v31 = *(const char **)(v0 + 264);
  uint64_t v32 = *(void *)(v0 + 256);
  *(void *)&double v33 = swift_beginAccess(*(void *)(v0 + 272) + *(void *)(v0 + 336), v53, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(v31, v33);
  uint64_t v34 = (void *)sub_1001CA78C(v32, (uint64_t)v31);
  swift_endAccess(v53);
  swift_bridgeObjectRelease(v31);

  uint64_t v35 = *(void *)(v30 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection);
  if (v35)
  {
    swift_retain(*(void *)(v30
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection));
    NWConnection.forceCancel()();
    swift_release(v35);
  }

  uint64_t v36 = *(void *)(v0 + 328);
  uint64_t v37 = *(void *)(v36 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection);
  if (v37)
  {
    swift_retain(*(void *)(v36
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection));
    NWConnection.forceCancel()();
    swift_release(v37);
  }

  uint64_t v38 = *(char **)(v0 + 272);
  uint64_t v39 = (const char **)&v38[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult];
  *(void *)&double v40 = swift_beginAccess( &v38[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult],  v0 + 88,  0LL,  0LL).n128_u64[0];
  uint64_t v41 = *v39;
  swift_bridgeObjectRetain(*v39, v40);
  os_log_t v43 = sub_10018D564(v42);
  swift_bridgeObjectRelease(v41);
  v54[0] = (uint64_t)v43;
  uint64_t v44 = v38;
  swift_retain(v43);
  sub_10032DB8C(v54, v44);
  if (v29)
  {

    return swift_release(v54[0]);
  }

  else
  {
    uint64_t v46 = *(void **)(v0 + 328);

    swift_release(v43);
    uint64_t v47 = v54[0];
    *(void *)(v0 + 232) = v54[0];
    CurrentValueSubject.send(_:)(v0 + 232);
    swift_release(v47);

    sub_100224FF8(0LL, 0LL);
    uint64_t v48 = *(void *)(v0 + 280);
    uint64_t v49 = *(void *)(v0 + 288);
    swift_task_dealloc(*(void *)(v0 + 312));
    swift_task_dealloc(v49);
    swift_task_dealloc(v48);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10032AB8C()
{
  uint64_t v1 = *(const char **)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 256);
  *(void *)&double v4 = swift_beginAccess(v3, v0 + 40, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(v1, v4);
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v64[0] = (uint64_t)*v3;
  uint64_t v6 = v64[0];
  *uint64_t v3 = (const char *)0x8000000000000000LL;
  unint64_t v8 = sub_1003AD53C(v2, (uint64_t)v1);
  uint64_t v9 = *(void *)(v6 + 16);
  BOOL v10 = (v7 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  char v12 = v7;
  if (*(void *)(v6 + 24) >= v11)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1003AFE6C();
      uint64_t v6 = v64[0];
    }
  }

  else
  {
    uint64_t v14 = *(void *)(v0 + 256);
    uint64_t v13 = *(void *)(v0 + 264);
    sub_1003AB778(v11, isUniquelyReferenced_nonNull_native);
    uint64_t v6 = v64[0];
    uint64_t v15 = sub_1003AD53C(v14, v13);
    if ((v12 & 1) != (v16 & 1)) {
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    }
    unint64_t v8 = v15;
  }

  int v18 = *v3;
  *uint64_t v3 = (const char *)v6;
  *(void *)&double v19 = swift_bridgeObjectRelease(v18).n128_u64[0];
  double v20 = (char *)*v3;
  swift_bridgeObjectRetain(*v3, v19);
  if ((v12 & 1) == 0)
  {
    double v21 = *(const char **)(v0 + 264);
    sub_1003B4D20(v8, *(void *)(v0 + 256), (uint64_t)v21, 0LL, v20);
    swift_bridgeObjectRetain(v21);
  }

  uint64_t v22 = *((void *)v20 + 7);
  uint64_t v23 = *(void *)(v22 + 8 * v8);
  BOOL v24 = __OFADD__(v23, 1LL);
  uint64_t v25 = v23 + 1;
  if (v24) {
    goto LABEL_21;
  }
  uint64_t isUniquelyReferenced_nonNull_native = v0 + 64;
  uint64_t v26 = *(const char **)(v0 + 264);
  *(void *)(v22 + 8 * v8) = v25;
  swift_endAccess(v0 + 40);
  *(void *)&double v27 = swift_bridgeObjectRelease(v20).n128_u64[0];
  swift_bridgeObjectRelease(v26, v27);
  if (qword_1006441A8 != -1) {
LABEL_22:
  }
    swift_once(&qword_1006441A8, sub_1003272DC);
  uint64_t v28 = *(void *)(v0 + 352);
  uint64_t v29 = *(const char **)(v0 + 264);
  uint64_t v30 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v30, (uint64_t)qword_10064EFE0);
  swift_bridgeObjectRetain(v29);
  swift_errorRetain(v28);
  swift_bridgeObjectRetain(v29);
  uint64_t v31 = swift_errorRetain(v28);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.error.getter(v32);
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v35 = *(void *)(v0 + 352);
  uint64_t v36 = *(const char **)(v0 + 264);
  if (v34)
  {
    uint64_t v37 = *(void *)(v0 + 256);
    uint64_t v63 = isUniquelyReferenced_nonNull_native;
    uint64_t v38 = swift_slowAlloc(22LL, -1LL);
    uint64_t v39 = swift_slowAlloc(64LL, -1LL);
    v64[0] = v39;
    *(_DWORD *)uint64_t v38 = 136315394;
    swift_bridgeObjectRetain(v36);
    *(void *)(v0 + 224) = sub_10018CDB4(v37, (unint64_t)v36, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v38 + 4, v38 + 12);
    swift_bridgeObjectRelease_n(v36, 3LL);
    *(_WORD *)(v38 + 12) = 2080;
    swift_getErrorValue(v35, v0 + 216, v0 + 184);
    uint64_t v40 = Error.flatDescription.getter(*(void *)(v0 + 192), *(void *)(v0 + 200));
    uint64_t v42 = (const char *)v41;
    *(void *)(v0 + 208) = sub_10018CDB4(v40, v41, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v38 + 14, v38 + 22);
    swift_bridgeObjectRelease(v42);
    swift_errorRelease(v35);
    swift_errorRelease(v35);
    _os_log_impl( (void *)&_mh_execute_header,  v32,  v33,  "Bonjour service %s failed discovery -  %s",  (uint8_t *)v38,  0x16u);
    swift_arrayDestroy(v39, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    uint64_t v43 = v38;
    uint64_t isUniquelyReferenced_nonNull_native = v63;
    swift_slowDealloc(v43, -1LL, -1LL);

    swift_errorRelease(v35);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 352));
    swift_bridgeObjectRelease_n(v36, 2LL);
    swift_errorRelease(v35);
    swift_errorRelease(v35);
  }

  uint64_t v44 = *(void *)(v0 + 328);
  uint64_t v45 = *(const char **)(v0 + 264);
  uint64_t v46 = *(void *)(v0 + 256);
  *(void *)&double v47 = swift_beginAccess( *(void *)(v0 + 272) + *(void *)(v0 + 336),  isUniquelyReferenced_nonNull_native,  33LL,  0LL).n128_u64[0];
  swift_bridgeObjectRetain(v45, v47);
  uint64_t v48 = (void *)sub_1001CA78C(v46, (uint64_t)v45);
  swift_endAccess(isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(v45);

  uint64_t v49 = *(void *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection);
  if (v49)
  {
    swift_retain(*(void *)(v44
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_discoverConnection));
    NWConnection.forceCancel()();
    swift_release(v49);
  }

  uint64_t v50 = *(void *)(v0 + 328);
  uint64_t v51 = *(void *)(v50 + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection);
  if (v51)
  {
    swift_retain(*(void *)(v50
                           + OBJC_IVAR____TtC16DaemoniOSLibrary34SDAirDropBonjourDiscoverConnection_identityShareConnection));
    NWConnection.forceCancel()();
    swift_release(v51);
  }

  uint64_t v52 = *(char **)(v0 + 272);
  uint64_t v53 = (const char **)&v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult];
  *(void *)&double v54 = swift_beginAccess( &v52[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult],  v0 + 88,  0LL,  0LL).n128_u64[0];
  uint64_t v55 = *v53;
  swift_bridgeObjectRetain(*v53, v54);
  os_log_type_t v57 = sub_10018D564(v56);
  swift_bridgeObjectRelease(v55);
  v64[0] = (uint64_t)v57;
  int v58 = v52;
  swift_retain(v57);
  sub_10032DB8C(v64, v58);
  uint64_t v59 = *(void **)(v0 + 328);

  swift_release(v57);
  uint64_t v60 = v64[0];
  *(void *)(v0 + 232) = v64[0];
  CurrentValueSubject.send(_:)(v0 + 232);
  swift_release(v60);

  sub_100224FF8((uint64_t)sub_100183424, 0LL);
  uint64_t v61 = *(void *)(v0 + 280);
  uint64_t v62 = *(void *)(v0 + 288);
  swift_task_dealloc(*(void *)(v0 + 312));
  swift_task_dealloc(v62);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10032B108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = sub_100183098(&qword_10064F0B8);
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_10064F0C0);
  v4[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[16] = v8;
  v4[17] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v4[18] = static AirDropActor.shared;
  return swift_task_switch(sub_10032B1CC, v9, 0LL);
}

uint64_t sub_10032B1CC()
{
  uint64_t v1 = *(void *)(v0 + 88) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 152) = Strong;
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 96);
    *(void *)(v0 + 64) = *(void *)(Strong
                                     + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesNeedingDiscovery);
    uint64_t v8 = sub_100183098(&qword_10064F0C8);
    uint64_t v9 = sub_1001CD538( &qword_10064F0D0,  &qword_10064F0C8,  (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    Publisher<>.values.getter(v8, v9);
    AsyncPublisher.makeAsyncIterator()(v7);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    uint64_t v10 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
    *(void *)(v0 + 160) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
    swift_beginAccess(v4 + v10, v0 + 40, 0LL, 0LL);
    *(void *)(v0 + 168) = static AirDropActor.shared;
    *(void *)(v0 + 176) = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v11 = sub_1001CD538( &qword_10064F0D8,  &qword_10064F0C0,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    char v12 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(void *)(v0 + 184) = v12;
    *char v12 = v0;
    v12[1] = sub_10032B3AC;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 72, *(void *)(v0 + 120), v11);
  }

  else
  {
    uint64_t v14 = *(void *)(v0 + 112);
    swift_task_dealloc(*(void *)(v0 + 136));
    swift_task_dealloc(v14);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10032B3AC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 184);
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0)
  {
    if (v4)
    {
      uint64_t v5 = *(void *)(v2 + 176);
      uint64_t ObjectType = swift_getObjectType(v4);
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v5);
      uint64_t v9 = v8;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v13 = sub_10032B858;
  }

  else
  {
    if (v4)
    {
      uint64_t v10 = *(void *)(v2 + 176);
      uint64_t v11 = swift_getObjectType(v4);
      uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v11, v10);
      uint64_t v9 = v12;
    }

    else
    {
      uint64_t v7 = 0LL;
      uint64_t v9 = 0LL;
    }

    uint64_t v13 = sub_10032B478;
  }

  return swift_task_switch(v13, v7, v9);
}

uint64_t sub_10032B478()
{
  uint64_t v1 = v0[18];
  v0[25] = v0[9];
  return swift_task_switch(sub_10032B494, v1, 0LL);
}

uint64_t sub_10032B494()
{
  uint64_t v1 = *(const char **)(v0 + 200);
  if (v1)
  {
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v2, (uint64_t)qword_10064EFE0);
    swift_bridgeObjectRetain_n(v1, 2LL);
    uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc(12LL, -1LL);
      uint64_t v7 = swift_slowAlloc(32LL, -1LL);
      uint64_t v30 = v7;
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_bridgeObjectRetain(v1, v30);
      uint64_t v9 = Array.description.getter(v8, &type metadata for String);
      uint64_t v11 = v10;
      swift_bridgeObjectRelease(v1);
      *(void *)(v6 + 4) = sub_10018CDB4(v9, (unint64_t)v11, &v30);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease_n(v1, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Service names to discover %s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1LL, -1LL);
      swift_slowDealloc(v6, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(v1, 2LL);
    }

    uint64_t v15 = (os_log_s *)Logger.logObject.getter(*(id *)(v0 + 152));
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      int v18 = *(char **)(v0 + 152);
      uint64_t v17 = *(void *)(v0 + 160);
      uint64_t v19 = swift_slowAlloc(12LL, -1LL);
      uint64_t v20 = swift_slowAlloc(32LL, -1LL);
      uint64_t v30 = v20;
      *(_DWORD *)uint64_t v19 = 136315138;
      double v21 = *(const char **)&v18[v17];
      swift_bridgeObjectRetain(v21, v30);
      uint64_t v23 = Dictionary.description.getter( v22,  &type metadata for String,  &type metadata for Int,  &protocol witness table for String);
      uint64_t v25 = v24;
      swift_bridgeObjectRelease(v21);
      *(void *)(v19 + 4) = sub_10018CDB4(v23, (unint64_t)v25, &v30);
      swift_bridgeObjectRelease(v25);

      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Current service name timeouts %s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v20, -1LL, -1LL);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    else
    {
      uint64_t v26 = *(void **)(v0 + 152);
    }

    *(void *)&double v27 = sub_10032B8B8(v1).n128_u64[0];
    swift_bridgeObjectRelease(v1, v27);
    *(void *)(v0 + 168) = static AirDropActor.shared;
    *(void *)(v0 + 176) = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v28 = sub_1001CD538( &qword_10064F0D8,  &qword_10064F0C0,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>.Iterator);
    uint64_t v29 = (void *)swift_task_alloc(async function pointer to dispatch thunk of AsyncIteratorProtocol.next()[1]);
    *(void *)(v0 + 184) = v29;
    void *v29 = v0;
    v29[1] = sub_10032B3AC;
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 72, *(void *)(v0 + 120), v28);
  }

  else
  {
    uint64_t v12 = *(void **)(v0 + 152);
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8LL))(*(void *)(v0 + 136), *(void *)(v0 + 120));

    uint64_t v13 = *(void *)(v0 + 112);
    swift_task_dealloc(*(void *)(v0 + 136));
    swift_task_dealloc(v13);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10032B858()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 192);
  uint64_t v1 = sub_100183098(&qword_100645710);
  uint64_t v2 = swift_dynamicCast(v1, v0 + 80, v1, &type metadata for Never, 7LL);
  return swift_willThrowTypedImpl(v2, &type metadata for Never, &protocol witness table for Never);
}

__n128 sub_10032B8B8(const char *a1)
{
  uint64_t v3 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v3);
  os_log_type_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = v1;
  swift_bridgeObjectRetain(a1);
  sub_10032C6FC(v7, (uint64_t)v6);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease(a1);

  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10) {
    return swift_bridgeObjectRelease((const char *)v9);
  }
  uint64_t v52 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate];
  uint64_t v53 = &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections];
  swift_beginAccess( &v6[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections],  v57,  0LL,  0LL);
  uint64_t v49 = (const char *)v9;
  uint64_t v12 = (const char **)(v9 + 40);
  uint64_t v50 = (char *)&type metadata for () + 8;
  uint64_t v51 = v6;
  while (1)
  {
    uint64_t v15 = (uint64_t)*(v12 - 1);
    os_log_type_t v16 = *v12;
    unint64_t v17 = *(void *)(*(void *)v53 + 16LL);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong(v52, v11);
    if (!Strong) {
      break;
    }
    uint64_t v19 = Strong;
    uint64_t v20 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables;
    *(void *)&double v21 = swift_beginAccess( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,  v56,  0LL,  0LL).n128_u64[0];
    uint64_t v22 = *(void *)(*(void *)v20 + 16LL);
    swift_bridgeObjectRetain(v16, v21);
    swift_unknownObjectRelease(v19);
    if (!v22) {
      goto LABEL_10;
    }
    if (v17 > 2) {
      goto LABEL_21;
    }
LABEL_11:
    uint64_t v54 = v10;
    uint64_t v23 = type metadata accessor for TaskPriority(0LL);
    uint64_t v24 = *(void *)(v23 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v5, 1LL, 1LL, v23);
    uint64_t v25 = swift_allocObject(&unk_1005DB968, 24LL, 7LL);
    swift_unknownObjectWeakInit(v25 + 16, v6);
    uint64_t v26 = qword_100643F28;
    swift_bridgeObjectRetain(v16);
    swift_retain(v25);
    uint64_t v27 = (uint64_t)v5;
    if (v26 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v28 = static AirDropActor.shared;
    uint64_t v29 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v30 = (void *)swift_allocObject(&unk_1005DBA08, 56LL, 7LL);
    _OWORD v30[2] = v28;
    v30[3] = v29;
    v30[4] = v25;
    v30[5] = v15;
    v30[6] = v16;
    swift_retain(v28);
    swift_release(v25);
    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v27, 1LL, v23);
    if ((_DWORD)v31 == 1)
    {
      sub_100187100(v27, &qword_100646560);
      uint64_t v32 = 0LL;
      uint64_t v33 = v30[2];
      if (!v33) {
        goto LABEL_17;
      }
    }

    else
    {
      unsigned __int8 v39 = TaskPriority.rawValue.getter(v31);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v23);
      uint64_t v32 = v39;
      uint64_t v33 = v30[2];
      if (!v33)
      {
LABEL_17:
        uint64_t v36 = 0LL;
        uint64_t v38 = 0LL;
        goto LABEL_18;
      }
    }

    uint64_t v34 = v30[3];
    uint64_t ObjectType = swift_getObjectType(v33);
    swift_unknownObjectRetain(v33);
    uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v34);
    uint64_t v38 = v37;
    swift_unknownObjectRelease(v33);
LABEL_18:
    uint64_t v40 = swift_allocObject(&unk_1005DBA30, 32LL, 7LL);
    *(void *)(v40 + swift_weakDestroy(v0 + 16) = &unk_10064F0E8;
    *(void *)(v40 + 24) = v30;
    if (v38 | v36)
    {
      v55[0] = 0LL;
      v55[1] = 0LL;
      uint64_t v13 = v55;
      v55[2] = v36;
      v55[3] = v38;
    }

    else
    {
      uint64_t v13 = 0LL;
    }

    os_log_type_t v5 = (char *)v27;
    v12 += 2;
    uint64_t v14 = swift_task_create(v32 | 0x1C00, v13, v50, &unk_100649820, v40);
    swift_bridgeObjectRelease(v16);
    swift_release(v14);
    uint64_t v10 = v54 - 1;
    uint64_t v6 = v51;
    if (v54 == 1) {
      return swift_bridgeObjectRelease(v49);
    }
  }

  swift_bridgeObjectRetain(v16);
LABEL_10:
  if (v17 <= 5) {
    goto LABEL_11;
  }
LABEL_21:
  *(void *)&double v42 = swift_bridgeObjectRelease(v16).n128_u64[0];
  swift_bridgeObjectRelease(v49, v42);
  if (qword_1006441A8 != -1) {
    swift_once(&qword_1006441A8, sub_1003272DC);
  }
  uint64_t v43 = type metadata accessor for Logger(0LL);
  uint64_t v44 = sub_100186DE4(v43, (uint64_t)qword_10064EFE0);
  uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t v46 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v45, v46))
  {
    double v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)double v47 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v45,  v46,  "Discover requests maxed out, waiting for them to complete",  v47,  2u);
    swift_slowDealloc(v47, -1LL, -1LL);
  }

  return result;
}

uint64_t sub_10032BD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  uint64_t v7 = sub_100183098(&qword_10064DB78);
  v6[18] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for NWBrowser.Result(0LL);
  v6[19] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[20] = v9;
  v6[21] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  v6[22] = static AirDropActor.shared;
  return swift_task_switch(sub_10032BDD8, v10, 0LL);
}

uint64_t sub_10032BDD8()
{
  uint64_t v1 = *(void *)(v0 + 120) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 184) = Strong;
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    os_log_type_t v5 = (uint64_t *)(Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult);
    __n128 v6 = swift_beginAccess( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToBrowseResult,  v0 + 40,  32LL,  0LL);
    uint64_t v7 = *v5;
    if (!*(void *)(v7 + 16))
    {
      (*(void (**)(void, uint64_t, uint64_t, void, __n128))(*(void *)(v0 + 160) + 56LL))( *(void *)(v0 + 144),  1LL,  1LL,  *(void *)(v0 + 152),  v6);
      goto LABEL_8;
    }

    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(const char **)(v0 + 136);
    swift_bridgeObjectRetain(v8, v6.n128_f64[0]);
    uint64_t v10 = sub_1003AD53C(v9, (uint64_t)v8);
    if ((v11 & 1) != 0)
    {
      (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 160) + 16LL))( *(void *)(v0 + 144),  *(void *)(v7 + 56) + *(void *)(*(void *)(v0 + 160) + 72LL) * v10,  *(void *)(v0 + 152));
      uint64_t v12 = 0LL;
    }

    else
    {
      uint64_t v12 = 1LL;
    }

    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 160);
    os_log_type_t v16 = *(const char **)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 144);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v15, v12, 1LL, v13);
    __n128 v17 = swift_bridgeObjectRelease(v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(v15, 1LL, v13, v17) == 1)
    {
LABEL_8:
      sub_100187100(*(void *)(v0 + 144), &qword_10064DB78);
      swift_endAccess(v0 + 40);
      if (qword_1006441A8 != -1) {
        swift_once(&qword_1006441A8, sub_1003272DC);
      }
      uint64_t v18 = type metadata accessor for Logger(0LL);
      uint64_t v19 = sub_100186DE4(v18, (uint64_t)qword_10064EFE0);
      uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.error.getter(v20);
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "Missing browse result for service name, endpoint may have disappeared",  v22,  2u);
        swift_slowDealloc(v22, -1LL, -1LL);
      }

      else
      {
      }

      goto LABEL_29;
    }

    uint64_t v24 = *(void *)(v0 + 128);
    uint64_t v23 = *(const char **)(v0 + 136);
    (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32LL))( *(void *)(v0 + 168),  *(void *)(v0 + 144),  *(void *)(v0 + 152));
    swift_endAccess(v0 + 40);
    if ((sub_100329F54(v24, v23) & 1) == 0)
    {
      if (qword_1006441A8 != -1) {
        swift_once(&qword_1006441A8, sub_1003272DC);
      }
      uint64_t v34 = *(void *)(v0 + 136);
      uint64_t v35 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v35, (uint64_t)qword_10064EFE0);
      swift_bridgeObjectRetain_n(v34, 2LL);
      uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
      os_log_type_t v38 = static os_log_type_t.default.getter();
      BOOL v39 = os_log_type_enabled(v37, v38);
      uint64_t v41 = *(void *)(v0 + 160);
      uint64_t v40 = *(void *)(v0 + 168);
      uint64_t v42 = *(void *)(v0 + 152);
      uint64_t v43 = *(const char **)(v0 + 136);
      if (v39)
      {
        uint64_t v55 = *(void *)(v0 + 128);
        uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v56 = v42;
        uint64_t v45 = swift_slowAlloc(32LL, -1LL);
        uint64_t v57 = v45;
        *(_DWORD *)uint64_t v44 = 136315138;
        swift_bridgeObjectRetain(v43);
        *(void *)(v0 + 112) = sub_10018CDB4(v55, (unint64_t)v43, &v57);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v44 + 4, v44 + 12);
        swift_bridgeObjectRelease_n(v43, 3LL);
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Already discovering/discovered %s", v44, 0xCu);
        swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v45, -1LL, -1LL);
        swift_slowDealloc(v44, -1LL, -1LL);

        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v56);
      }

      else
      {

        swift_bridgeObjectRelease_n(v43, 2LL);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
      }

      goto LABEL_29;
    }

    uint64_t v25 = &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections];
    swift_beginAccess( &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections],  v0 + 64,  0LL,  0LL);
    unint64_t v26 = *(void *)(*(void *)v25 + 16LL);
    uint64_t v28 = swift_unknownObjectWeakLoadStrong( &v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_delegate],  v27);
    if (v28
      && (uint64_t v29 = v28,
          uint64_t v30 = v28 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,
          swift_beginAccess( v28 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,  v0 + 88,  0LL,  0LL),  uint64_t v31 = *(void *)(*(void *)v30 + 16LL),  swift_unknownObjectRelease(v29),  v31))
    {
      if (v26 <= 2)
      {
LABEL_17:
        uint64_t v32 = (void *)swift_task_alloc(dword_10064F0F4);
        *(void *)(v0 + 192) = v32;
        *uint64_t v32 = v0;
        v32[1] = sub_10032C384;
        return sub_10032A414(*(void *)(v0 + 168), *(void *)(v0 + 128), *(void *)(v0 + 136));
      }
    }

    else if (v26 <= 5)
    {
      goto LABEL_17;
    }

    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v46 = type metadata accessor for Logger(0LL);
    uint64_t v47 = sub_100186DE4(v46, (uint64_t)qword_10064EFE0);
    uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
    os_log_type_t v49 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v48,  v49,  "Discover requests maxed out, waiting for them to complete",  v50,  2u);
      swift_slowDealloc(v50, -1LL, -1LL);
    }

    uint64_t v52 = *(void *)(v0 + 160);
    uint64_t v51 = *(void *)(v0 + 168);
    uint64_t v53 = *(void *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
  }

uint64_t sub_10032C384()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 192LL));
  return swift_task_switch(sub_10032C3DC, v1, 0LL);
}

uint64_t sub_10032C3DC()
{
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 152);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 144);
  swift_task_dealloc(*(void *)(v0 + 168));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SDAirDropBonjourBrowser()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser);
}

uint64_t sub_10032C59C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064F09C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_10032A17C(a1, v4, v5, v6);
}

uint64_t sub_10032C608()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10032C62C(const char *a1, const char *a2)
{
  return sub_100327780(a1, a2, v2);
}

uint64_t sub_10032C634()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10032C658()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10032C684(uint64_t a1)
{
  return sub_1003287D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10032C690(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064F0AC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_10032B108(a1, v4, v5, v6);
}

void sub_10032C6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    uint64_t v46 = _swiftEmptyArrayStorage;
    return;
  }

  unint64_t v8 = 0LL;
  uint64_t v48 = (uint64_t *)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToAirDropEndpoints);
  os_log_type_t v49 = (uint64_t *)(a2
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToCurrentDiscoverConnections);
  uint64_t v9 = a1 + 40;
  uint64_t v10 = -(uint64_t)v7;
  uint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v11 = &qword_100649F58;
  uint64_t v44 = a1 + 40;
  unint64_t v45 = v7;
  do
  {
    if (v8 <= v7) {
      unint64_t v12 = v7;
    }
    else {
      unint64_t v12 = v8;
    }
    uint64_t v50 = -(uint64_t)v12;
    uint64_t v13 = (const char **)(v9 + 16 * v8++);
    uint64_t v14 = v48;
    while (1)
    {
      if (v50 + v8 == 1)
      {
        __break(1u);
        return;
      }

      uint64_t v15 = (uint64_t)*(v13 - 1);
      os_log_type_t v16 = *v13;
      swift_beginAccess(v14, v52, 32LL, 0LL);
      uint64_t v17 = *v14;
      uint64_t v18 = *(void *)(*v14 + 16);
      uint64_t v51 = v15;
      if (v18)
      {
        swift_bridgeObjectRetain_n(v16, 2LL);
        uint64_t v19 = sub_1003AD53C(v15, (uint64_t)v16);
        if ((v20 & 1) != 0)
        {
          uint64_t v21 = v19;
          uint64_t v22 = v11;
          uint64_t v23 = v10;
          uint64_t v24 = *(void *)(v17 + 56);
          uint64_t v25 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
          uint64_t v26 = *(void *)(v25 - 8);
          uint64_t v27 = v24 + *(void *)(v26 + 72) * v21;
          uint64_t v10 = v23;
          char v11 = v22;
          uint64_t v6 = v47;
          sub_10019140C(v27, (uint64_t)v47);
          uint64_t v28 = *(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
          uint64_t v14 = v48;
          v28(v6, 0LL, 1LL, v25);
        }

        else
        {
          uint64_t v25 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v6, 1LL, 1LL, v25);
        }

        swift_bridgeObjectRelease(v16);
      }

      else
      {
        uint64_t v25 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v6, 1LL, 1LL, v25);
        swift_bridgeObjectRetain(v16);
      }

      swift_endAccess(v52);
      type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48LL))(v6, 1LL, v25);
      sub_100187100((uint64_t)v6, v11);
      if (v29 == 1) {
        break;
      }
LABEL_7:
      swift_bridgeObjectRelease(v16);
      ++v8;
      v13 += 2;
      if (v10 + v8 == 1) {
        return;
      }
    }

    uint64_t v30 = v49;
    *(void *)&double v31 = swift_beginAccess(v49, v52, 32LL, 0LL).n128_u64[0];
    uint64_t v32 = *v30;
    if (!*(void *)(*v30 + 16)) {
      goto LABEL_20;
    }
    swift_bridgeObjectRetain(v16, v31);
    uint64_t v33 = sub_1003AD53C(v51, (uint64_t)v16);
    if ((v34 & 1) != 0)
    {
      id v35 = *(id *)(*(void *)(v32 + 56) + 8 * v33);
      swift_endAccess(v52);

      swift_bridgeObjectRelease(v16);
      goto LABEL_7;
    }

    swift_bridgeObjectRelease(v16);
LABEL_20:
    swift_endAccess(v52);
    uint64_t v36 = v46;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v46);
    uint64_t v53 = v36;
    uint64_t v43 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10018D82C(0, v36[2] + 1LL, 1);
      uint64_t v36 = v53;
    }

    uint64_t v9 = v44;
    unint64_t v7 = v45;
    unint64_t v39 = v36[2];
    unint64_t v38 = v36[3];
    uint64_t v40 = v36;
    if (v39 >= v38 >> 1)
    {
      sub_10018D82C(v38 > 1, v39 + 1, 1);
      uint64_t v40 = v53;
    }

    v40[2] = v39 + 1;
    uint64_t v46 = v40;
    uint64_t v41 = &v40[2 * v39];
    v41[4] = v51;
    v41[5] = v16;
    uint64_t v10 = v43;
  }

  while (v43 + v8);
}

uint64_t sub_10032CA68()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_10032CA9C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc(dword_10064F0E4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_10032BD1C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032CB1C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10032CB40(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4, char *a5)
{
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 15;
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  uint64_t v13 = v12 >> 4;
  id v64 = __src;
  uint64_t v63 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15) {
      goto LABEL_64;
    }
    if (a4 != a2 || &a2[2 * v13] <= a4) {
      memmove(a4, a2, 16 * v13);
    }
    uint64_t v33 = (char *)&a4[2 * v13];
    uint64_t v62 = v33;
    id v64 = v6;
    if (v7 >= v6 || v11 < 16)
    {
LABEL_63:
      sub_1002FAC58((void **)&v64, (const void **)&v63, &v62);
      return 1LL;
    }

    uint64_t v56 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount];
    uint64_t v57 = v7;
    char v34 = (uint64_t *)(a3 - 16);
    id v35 = v6;
    while (1)
    {
      unint64_t v60 = (unint64_t)v33;
      uint64_t v36 = *((void *)v33 - 2);
      unint64_t v38 = (const char *)*((void *)v33 - 1);
      uint64_t v37 = v33 - 16;
      uint64_t v40 = *(v35 - 2);
      unint64_t v39 = (const char *)*(v35 - 1);
      v35 -= 2;
      *(void *)&double v41 = swift_beginAccess(v56, v61, 32LL, 0LL).n128_u64[0];
      uint64_t v42 = *(void *)v56;
      uint64_t v43 = *(void *)(*(void *)v56 + 16LL);
      *(void *)&double v44 = swift_bridgeObjectRetain(v38, v41).n128_u64[0];
      swift_bridgeObjectRetain(v39, v44);
      if (v43)
      {
        uint64_t v45 = sub_1003AD53C(v36, (uint64_t)v38);
        if ((v46 & 1) != 0)
        {
          uint64_t v47 = *(void *)(*(void *)(v42 + 56) + 8 * v45);
          if (*(void *)(v42 + 16)) {
            goto LABEL_44;
          }
        }

        else
        {
          uint64_t v47 = 0LL;
          if (*(void *)(v42 + 16))
          {
LABEL_44:
            swift_bridgeObjectRetain(v39);
            uint64_t v48 = sub_1003AD53C(v40, (uint64_t)v39);
            if ((v49 & 1) != 0) {
              uint64_t v50 = *(void *)(*(void *)(v42 + 56) + 8 * v48);
            }
            else {
              uint64_t v50 = 0LL;
            }
            swift_bridgeObjectRelease(v39);
            goto LABEL_51;
          }
        }

        uint64_t v50 = 0LL;
      }

      else
      {
        uint64_t v47 = 0LL;
        uint64_t v50 = 0LL;
      }

void sub_10032CF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v27 = (uint64_t *)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount);
    uint64_t v30 = *a4;
    uint64_t v6 = (uint64_t *)(v30 + 16 * a3);
LABEL_5:
    uint64_t v7 = (uint64_t *)(v30 + 16 * v5);
    uint64_t v8 = *v7;
    int64_t v9 = (const char *)v7[1];
    uint64_t v10 = a1;
    uint64_t v26 = v6;
    while (1)
    {
      uint64_t v11 = *(v6 - 2);
      uint64_t v12 = (const char *)*(v6 - 1);
      *(void *)&double v13 = swift_beginAccess(v27, v29, 32LL, 0LL).n128_u64[0];
      uint64_t v14 = *v27;
      uint64_t v15 = *(void *)(*v27 + 16);
      *(void *)&double v16 = swift_bridgeObjectRetain(v9, v13).n128_u64[0];
      swift_bridgeObjectRetain(v12, v16);
      if (!v15)
      {
        uint64_t v19 = 0LL;
        uint64_t v22 = 0LL;
        goto LABEL_16;
      }

      uint64_t v28 = v11;
      uint64_t v17 = sub_1003AD53C(v8, (uint64_t)v9);
      if ((v18 & 1) != 0)
      {
        uint64_t v19 = *(void *)(*(void *)(v14 + 56) + 8 * v17);
        if (!*(void *)(v14 + 16)) {
          goto LABEL_13;
        }
      }

      else
      {
        uint64_t v19 = 0LL;
        if (!*(void *)(v14 + 16))
        {
LABEL_13:
          uint64_t v22 = 0LL;
          goto LABEL_16;
        }
      }

      swift_bridgeObjectRetain(v12);
      uint64_t v20 = sub_1003AD53C(v28, (uint64_t)v12);
      if ((v21 & 1) != 0) {
        uint64_t v22 = *(void *)(*(void *)(v14 + 56) + 8 * v20);
      }
      else {
        uint64_t v22 = 0LL;
      }
      swift_bridgeObjectRelease(v12);
LABEL_16:
      swift_endAccess(v29);
      *(void *)&double v23 = swift_bridgeObjectRelease(v9).n128_u64[0];
      swift_bridgeObjectRelease(v12, v23);
      if (v19 >= v22) {
        goto LABEL_4;
      }
      if (!v30)
      {
        __break(1u);
        return;
      }

      uint64_t v8 = *v6;
      int64_t v9 = (const char *)v6[1];
      *(_OWORD *)uint64_t v6 = *((_OWORD *)v6 - 1);
      *(v6 - 1) = (uint64_t)v9;
      *(v6 - 2) = v8;
      v6 -= 2;
      if (v5 == ++v10)
      {
LABEL_4:
        ++v5;
        uint64_t v6 = v26 + 2;
        if (v5 == a2) {
          return;
        }
        goto LABEL_5;
      }
    }
  }

void sub_10032D138(uint64_t *a1, void *a2)
{
  Swift::Int v3 = a1[1];
  unint64_t v4 = a2;
  Swift::Int v5 = _minimumMergeRunLength(_:)(v3);
  if (v5 >= v3)
  {
    if ((v3 & 0x8000000000000000LL) == 0)
    {
      if (v3)
      {
        id v9 = (id)v4;
        sub_10032CF8C(0LL, v3, 1LL, a1, (uint64_t)v9);
      }

      else
      {
      }

      goto LABEL_150;
    }

    goto LABEL_172;
  }

  if (v3 >= 0) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_180;
  }
  Swift::Int v150 = v3;
  Swift::Int v146 = v5;
  v154 = (void *)v4;
  v144 = a1;
  if (v3 < 2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    uint64_t v153 = &_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v4 = _swiftEmptyArrayStorage[2];
      double v13 = (char *)_swiftEmptyArrayStorage;
      if (v4 < 2)
      {
LABEL_148:
        swift_bridgeObjectRelease(v13);
        v10[2] = 0LL;
        unint64_t v4 = (unint64_t)v154;
        goto LABEL_149;
      }

LABEL_135:
      uint64_t v133 = *v144;
      uint64_t v147 = v10;
      uint64_t v163 = *v144;
      while (1)
      {
        unint64_t v134 = v4 - 2;
        if (v4 < 2) {
          goto LABEL_167;
        }
        if (!v133) {
          goto LABEL_179;
        }
        uint64_t v135 = v13;
        uint64_t v136 = *(void *)&v13[16 * v134 + 32];
        uint64_t v137 = *(void *)&v13[16 * v4 + 24];
        uint64_t v138 = *(void *)&v13[16 * v4 + 16];
        uint64_t v165 = (uint64_t *)(v133 + 16 * v136);
        uint64_t v139 = (uint64_t *)(v133 + 16 * v138);
        unint64_t v140 = v133 + 16 * v137;
        uint64_t v141 = v154;
        sub_10032CB40(v165, v139, v140, v153, v141);
        if (v161)
        {
          swift_bridgeObjectRelease(v135);
          goto LABEL_132;
        }

        if (v137 < v136) {
          goto LABEL_168;
        }
        if ((swift_isUniquelyReferenced_nonNull_native(v135) & 1) == 0) {
          uint64_t v135 = sub_1002FAD00((uint64_t)v135);
        }
        if (v134 >= *((void *)v135 + 2)) {
          goto LABEL_169;
        }
        v142 = &v135[16 * v134 + 32];
        *(void *)v142 = v136;
        *((void *)v142 + 1) = v137;
        unint64_t v143 = *((void *)v135 + 2);
        if (v4 > v143) {
          goto LABEL_170;
        }
        memmove(&v135[16 * v4 + 16], &v135[16 * v4 + 32], 16 * (v143 - v4));
        double v13 = v135;
        *((void *)v135 + 2) = v143 - 1;
        unint64_t v4 = v143 - 1;
        BOOL v112 = v143 > 2;
        uint64_t v10 = v147;
        uint64_t v133 = v163;
        if (!v112) {
          goto LABEL_148;
        }
      }
    }

    uint64_t v147 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6 >> 1, &type metadata for String);
    *(void *)(v8 + swift_weakDestroy(v0 + 16) = v7;
    uint64_t v147 = (void *)v8;
    uint64_t v153 = (uint64_t *)(v8 + 32);
  }

  int64_t v11 = 0LL;
  uint64_t v12 = (uint64_t *)*a1;
  unint64_t v162 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropBonjourBrowser_serviceNamesToRetryCount;
  uint64_t v145 = *a1 + 24;
  double v13 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v14 = v3;
  uint64_t v165 = (uint64_t *)*a1;
  while (2)
  {
    int64_t v15 = v11;
    unint64_t v4 = v11 + 1;
    int64_t v151 = v11;
    if (v11 + 1 >= v14) {
      goto LABEL_55;
    }
    v155 = v13;
    double v16 = &v12[2 * v4];
    uint64_t v17 = *v16;
    char v18 = (const char *)v16[1];
    uint64_t v19 = &v12[2 * v11];
    uint64_t v20 = *v19;
    char v21 = (const char *)v19[1];
    *(void *)&double v22 = swift_beginAccess(v162, v164, 32LL, 0LL).n128_u64[0];
    uint64_t v23 = *(void *)v162;
    uint64_t v24 = *(void *)(*(void *)v162 + 16LL);
    *(void *)&double v25 = swift_bridgeObjectRetain(v18, v22).n128_u64[0];
    swift_bridgeObjectRetain(v21, v25);
    if (v24)
    {
      uint64_t v26 = sub_1003AD53C(v17, (uint64_t)v18);
      if ((v27 & 1) != 0)
      {
        uint64_t v158 = *(void *)(*(void *)(v23 + 56) + 8 * v26);
        if (!*(void *)(v23 + 16)) {
          goto LABEL_25;
        }
LABEL_23:
        swift_bridgeObjectRetain(v21);
        uint64_t v28 = sub_1003AD53C(v20, (uint64_t)v21);
        if ((v29 & 1) != 0) {
          uint64_t v30 = *(void *)(*(void *)(v23 + 56) + 8 * v28);
        }
        else {
          uint64_t v30 = 0LL;
        }
        Swift::Int v31 = v150;
        swift_bridgeObjectRelease(v21);
        goto LABEL_28;
      }

      uint64_t v158 = 0LL;
      if (*(void *)(v23 + 16)) {
        goto LABEL_23;
      }
    }

    else
    {
      uint64_t v158 = 0LL;
    }

LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
      goto LABEL_175;
    }

void sub_10032DB8C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  id v4 = a2;
  if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0) {
    uint64_t v3 = sub_1002FAD3C(v3);
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v7[0] = v3 + 32;
  v7[1] = v5;
  id v6 = v4;
  sub_10032D138(v7, v6);

  *a1 = v3;
}

void sub_10032DC20(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  id v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for NWError(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v88 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v91 = (char *)&v88 - v14;
  __chkstk_darwin(v13);
  double v16 = (char *)&v88 - v15;
  uint64_t v17 = type metadata accessor for NWBrowser.State(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  int v21 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v21 == enum case for NWBrowser.State.failed(_:))
  {
    uint64_t v91 = v4;
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v20, v5);
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v22, (uint64_t)qword_10064EFE0);
    uint64_t v23 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v24 = v23(v9, v12, v5);
    double v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v28 = swift_slowAlloc(8LL, -1LL);
      uint64_t v90 = (uint8_t *)v12;
      char v29 = (void *)v28;
      *(_DWORD *)char v27 = 138412290;
      uint64_t v89 = v27 + 4;
      uint64_t v30 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v31 = swift_allocError(v5, v30, 0LL, 0LL);
      v23(v32, v9, v5);
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError(v31);
      uint64_t v93 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v89, v27 + 12);
      void *v29 = v33;
      uint64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "AirDrop bonjour browser failed with error %@", v27, 0xCu);
      uint64_t v35 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v29, 1LL, v35);
      uint64_t v36 = v29;
      uint64_t v12 = (char *)v90;
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    else
    {
      uint64_t v34 = *(void (**)(char *, uint64_t))(v6 + 8);
      v34(v9, v5);
    }

    uint64_t v52 = type metadata accessor for TaskPriority(0LL);
    uint64_t v53 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56LL))(v91, 1LL, 1LL, v52);
    uint64_t v54 = swift_allocObject(&unk_1005DB968, 24LL, 7LL);
    swift_unknownObjectWeakInit(v54 + 16, v92);
    uint64_t v55 = qword_100643F28;
    swift_retain(v54);
    if (v55 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v56 = static AirDropActor.shared;
    uint64_t v57 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v58 = (void *)swift_allocObject(&unk_1005DBA58, 40LL, 7LL);
    v58[2] = v56;
    v58[3] = v57;
    v58[4] = v54;
    swift_retain(v56);
    swift_release(v54);
    uint64_t v59 = sub_1001B3808(v53, (uint64_t)&unk_10064F108, (uint64_t)v58);
    swift_release(v59);
    v34(v12, v5);
    return;
  }

  if (v21 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    uint64_t v37 = v16;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v20, v5);
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v38 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v38, (uint64_t)qword_10064EFE0);
    unint64_t v39 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    uint64_t v40 = v91;
    uint64_t v41 = v39(v91, v37, v5);
    uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
    os_log_type_t v43 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v42, v43))
    {
      double v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v92 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)double v44 = 138412290;
      uint64_t v90 = v44 + 4;
      uint64_t v45 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v46 = swift_allocError(v5, v45, 0LL, 0LL);
      v39(v47, v40, v5);
      uint64_t v48 = _swift_stdlib_bridgeErrorToNSError(v46);
      uint64_t v93 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v90, v44 + 12);
      char v49 = v92;
      *uint64_t v92 = v48;
      uint64_t v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "AirDrop bonjour browser waiting with error %@", v44, 0xCu);
      uint64_t v51 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v49, 1LL, v51);
      swift_slowDealloc(v49, -1LL, -1LL);
      swift_slowDealloc(v44, -1LL, -1LL);
    }

    else
    {

      uint64_t v50 = *(void (**)(char *, uint64_t))(v6 + 8);
      v50(v40, v5);
    }

    v50(v37, v5);
    return;
  }

  if (v21 == enum case for NWBrowser.State.setup(_:))
  {
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v60 = type metadata accessor for Logger(0LL);
    uint64_t v61 = sub_100186DE4(v60, (uint64_t)qword_10064EFE0);
    uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v62, v63)) {
      goto LABEL_36;
    }
    id v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v64 = 0;
    int64_t v65 = "AirDrop bonjour browser setting up";
LABEL_35:
    _os_log_impl((void *)&_mh_execute_header, v62, v63, v65, v64, 2u);
    swift_slowDealloc(v64, -1LL, -1LL);
LABEL_36:

    return;
  }

  if (v21 == enum case for NWBrowser.State.ready(_:))
  {
    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v66 = type metadata accessor for Logger(0LL);
    uint64_t v67 = sub_100186DE4(v66, (uint64_t)qword_10064EFE0);
    uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = v4;
      uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "AirDrop bonjour browser ready", v71, 2u);
      double v72 = v71;
      id v4 = v70;
      swift_slowDealloc(v72, -1LL, -1LL);
    }

    uint64_t v73 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56LL))(v4, 1LL, 1LL, v73);
    uint64_t v74 = qword_100643F28;
    int64_t v75 = v92;
    uint64_t v76 = (uint64_t)v4;
    if (v74 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    uint64_t v77 = static AirDropActor.shared;
    uint64_t v78 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v79 = (void *)swift_allocObject(&unk_1005DBA80, 40LL, 7LL);
    v79[2] = v77;
    v79[3] = v78;
    v79[4] = v75;
    swift_retain(v77);
    uint64_t v80 = sub_1001B37E8(v76, (uint64_t)&unk_10064F118, (uint64_t)v79);
    swift_release(v80);
  }

  else
  {
    if (v21 == enum case for NWBrowser.State.cancelled(_:))
    {
      if (qword_1006441A8 != -1) {
        swift_once(&qword_1006441A8, sub_1003272DC);
      }
      uint64_t v81 = type metadata accessor for Logger(0LL);
      uint64_t v82 = sub_100186DE4(v81, (uint64_t)qword_10064EFE0);
      uint64_t v62 = (os_log_s *)Logger.logObject.getter(v82);
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v62, v63)) {
        goto LABEL_36;
      }
      id v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v64 = 0;
      int64_t v65 = "AirDrop bonjour browser cancelled";
      goto LABEL_35;
    }

    if (qword_1006441A8 != -1) {
      swift_once(&qword_1006441A8, sub_1003272DC);
    }
    uint64_t v83 = type metadata accessor for Logger(0LL);
    uint64_t v84 = sub_100186DE4(v83, (uint64_t)qword_10064EFE0);
    uint64_t v85 = (os_log_s *)Logger.logObject.getter(v84);
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "AirDrop bonjour browser in unknown state", v87, 2u);
      swift_slowDealloc(v87, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }

uint64_t sub_10032E628(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064F104);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_1003296FC(a1, v4, v5, v6);
}

uint64_t sub_10032E698(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10064F114);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_100329468(a1, v4, v5, v6);
}

uint64_t sub_10032E704()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_10032E740(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  id v9 = (void *)swift_task_alloc(dword_10064F124);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *id v9 = v2;
  v9[1] = sub_100195708;
  return sub_100327928(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10032E7C0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064F140);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064F140);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10032E850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Date(0LL);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL);
  v3(a1, 1LL, 1LL, v2);
  uint64_t v4 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  v3(a1 + v4[5], 1LL, 1LL, v2);
  v3(a1 + v4[6], 1LL, 1LL, v2);
  v3(a1 + v4[7], 1LL, 1LL, v2);
  v3(a1 + v4[8], 1LL, 1LL, v2);
  v3(a1 + v4[9], 1LL, 1LL, v2);
  v3(a1 + v4[10], 1LL, 1LL, v2);
  v3(a1 + v4[11], 1LL, 1LL, v2);
  v3(a1 + v4[12], 1LL, 1LL, v2);
  *(_BYTE *)(a1 + v4[13]) = 0;
  v3(a1 + v4[14], 1LL, 1LL, v2);
  v3(a1 + v4[15], 1LL, 1LL, v2);
  v3(a1 + v4[16], 1LL, 1LL, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(a1 + v4[17], 1LL, 1LL, v2);
  uint64_t v6 = a1 + v4[18];
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  *(_BYTE *)(a1 + v4[19]) = 2;
  uint64_t v7 = (void *)(a1 + v4[20]);
  *uint64_t v7 = 0LL;
  v7[1] = 0LL;
  uint64_t v8 = (void *)(a1 + v4[21]);
  *uint64_t v8 = 0LL;
  v8[1] = 0LL;
  return result;
}

void sub_10032EA10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v47 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v47 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  id v9 = (uint64_t *)((char *)&v47 - v8);
  uint64_t v10 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *double v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)(v16);
  uint64_t v19 = (*(uint64_t (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v20 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v21 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  BOOL v22 = v21 > 0xE;
  uint64_t v23 = (1LL << v21) & 0x658E;
  if (!v22 && v23 != 0)
  {
    Date.init()(v19);
    uint64_t v25 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v12, 0LL, 1LL, v25);
    uint64_t v26 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], v49, 33LL, 0LL);
    sub_1001C9860((uint64_t)v12, v26, &qword_1006457E8);
    uint64_t v27 = swift_endAccess(v49);
    unint64_t v28 = *(void *)&v1[v20];
    if (v28 < 0xF && ((0x4FE7u >> v28) & 1) != 0)
    {
      char v29 = (uint64_t *)((char *)&unk_1004D5FE0 + 8 * v28);
      goto LABEL_11;
    }

    if (qword_100643F68 == -1)
    {
LABEL_9:
      char v29 = &qword_100669510;
LABEL_11:
      uint64_t v30 = *v29;
      static Date.distantFuture.getter(v27);
      *id v9 = v30;
      uint64_t v31 = type metadata accessor for TaskPriority(0LL);
      uint64_t v32 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v48, 1LL, 1LL, v31);
      sub_1001A4B84((uint64_t)v9, (uint64_t)v7, type metadata accessor for AuthenticationSecurityRequest);
      uint64_t v33 = *(unsigned __int8 *)(v47 + 80);
      uint64_t v34 = (v33 + 40) & ~v33;
      uint64_t v35 = (void *)swift_allocObject(&unk_1005DBD68, v34 + v5, v33 | 7);
      v35[2] = 0LL;
      v35[3] = 0LL;
      v35[4] = v1;
      sub_1002DACBC((uint64_t)v7, (uint64_t)v35 + v34);
      uint64_t v36 = v1;
      uint64_t v37 = sub_1001B37E8(v32, (uint64_t)&unk_10064F2C8, (uint64_t)v35);
      swift_release(v37);
      sub_1001A4BC8((uint64_t)v9, type metadata accessor for AuthenticationSecurityRequest);
      return;
    }

uint64_t sub_10032EEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[28] = a4;
  v5[29] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v5[30] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[31] = v7;
  v5[32] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  v5[33] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[34] = v9;
  v5[35] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10032EF38, 0LL, 0LL);
}

uint64_t sub_10032EF38()
{
  uint64_t v1 = v0[28] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(v1, v0 + 21, 0LL, 0LL);
  sub_1001915A4(v1, (uint64_t)(v0 + 8), &qword_100650630);
  if (v0[11])
  {
    uint64_t v2 = v0[29];
    sub_10019A6C4((uint64_t)(v0 + 8), (uint64_t)(v0 + 13));
    sub_100187100((uint64_t)(v0 + 8), &qword_100650630);
    uint64_t v3 = (void *)(*sub_10019A708(v0 + 13, v0[16])
                  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager);
    swift_beginAccess(v3, v0 + 18, 0LL, 0LL);
    uint64_t v4 = *sub_10019A708(v3, v3[3]);
    uint64_t v5 = swift_task_alloc(32LL);
    v0[36] = v5;
    *(void *)(v5 + swift_weakDestroy(v0 + 16) = v4;
    *(void *)(v5 + 24) = v2;
    uint64_t v6 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    v0[37] = v6;
    void *v6 = v0;
    v6[1] = sub_10032F244;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)( v6,  0LL,  0LL,  0x6F6974616C6F6976LL,  0xEF293A726F66286ELL,  sub_100284668,  v5,  (char *)&type metadata for () + 8);
  }

  else
  {
    sub_100187100((uint64_t)(v0 + 8), &qword_100650630);
    uint64_t v8 = v0[35];
    uint64_t v9 = v0[32];
    uint64_t v19 = v0[34];
    uint64_t v20 = v0[33];
    uint64_t v10 = v0[30];
    uint64_t v18 = v0[31];
    uint64_t v11 = (void *)v0[28];
    uint64_t v12 = swift_allocObject(&unk_1005DBD90, 24LL, 7LL);
    *(void *)(v12 + swift_weakDestroy(v0 + 16) = v11;
    v0[6] = sub_10033CD78;
    v0[7] = v12;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256LL;
    v0[4] = sub_1001B9FE4;
    v0[5] = &unk_1005DBDA8;
    uint64_t v13 = _Block_copy(v0 + 2);
    static DispatchQoS.unspecified.getter(v11);
    v0[24] = _swiftEmptyArrayStorage;
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v15 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v16 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 24, v15, v16, v10, v14);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v9, v13);
    _Block_release(v13);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v8, v20);
    swift_release(v0[7]);
    uint64_t v17 = v0[32];
    swift_task_dealloc(v0[35]);
    swift_task_dealloc(v17);
    return ((uint64_t (*)(void))v0[1])();
  }

uint64_t sub_10032F244()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 296);
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10032F46C;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 288));
    uint64_t v4 = sub_10032F2B0;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_10032F2B0()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[32];
  uint64_t v13 = v0[34];
  uint64_t v14 = v0[33];
  uint64_t v3 = v0[30];
  uint64_t v12 = v0[31];
  uint64_t v4 = (void *)v0[28];
  uint64_t v5 = swift_allocObject(&unk_1005DBD90, 24LL, 7LL);
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = v4;
  v0[6] = sub_10033CD78;
  v0[7] = v5;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256LL;
  v0[4] = sub_1001B9FE4;
  v0[5] = &unk_1005DBDA8;
  uint64_t v6 = _Block_copy(v0 + 2);
  static DispatchQoS.unspecified.getter(v4);
  v0[24] = _swiftEmptyArrayStorage;
  uint64_t v7 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v9 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 24, v8, v9, v3, v7);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v1, v2, v6);
  _Block_release(v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v14);
  swift_release(v0[7]);
  uint64_t v10 = v0[32];
  swift_task_dealloc(v0[35]);
  swift_task_dealloc(v10);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_10032F46C()
{
  uint64_t v1 = *(void *)(v0 + 304);
  swift_task_dealloc(*(void *)(v0 + 288));
  sub_10018709C((void *)(v0 + 104));
  *(void *)(v0 + 200) = v1;
  swift_errorRetain(v1);
  uint64_t v2 = sub_100183098(&qword_100645710);
  type metadata accessor for SFAuthenticationError(0LL);
  if ((swift_dynamicCast(v0 + 312, v0 + 200, v2, v3, 0LL) & 1) != 0)
  {
    swift_errorRelease(*(void *)(v0 + 304));
    sub_100330178(*(unsigned int *)(v0 + 312));
    uint64_t v4 = *(void *)(v0 + 200);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 200));
    if (qword_1006441B0 != -1) {
      swift_once(&qword_1006441B0, sub_10032E7C0);
    }
    uint64_t v5 = *(void *)(v0 + 304);
    uint64_t v6 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v6, (uint64_t)qword_10064F140);
    swift_errorRetain(v5);
    uint64_t v7 = swift_errorRetain(v5);
    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.error.getter(v8);
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v0 + 304);
    if (v10)
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v13 = swift_slowAlloc(32LL, -1LL);
      uint64_t v20 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v0 + 208) = v11;
      swift_errorRetain(v11);
      uint64_t v14 = String.init<A>(describing:)(v0 + 208, v2);
      uint64_t v16 = (const char *)v15;
      *(void *)(v0 + 2swift_weakDestroy(v0 + 16) = sub_10018CDB4(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v16);
      swift_errorRelease(v11);
      swift_errorRelease(v11);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unexpected error: %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1LL, -1LL);
      swift_slowDealloc(v12, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(*(void *)(v0 + 304));
      swift_errorRelease(v11);
    }

    uint64_t v17 = *(void *)(v0 + 304);
    sub_100330178(10LL);
    uint64_t v4 = v17;
  }

  swift_errorRelease(v4);
  uint64_t v18 = *(void *)(v0 + 256);
  swift_task_dealloc(*(void *)(v0 + 280));
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10032F6F0()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_1006441B0, sub_10032E7C0);
    goto LABEL_4;
  }

  uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(64LL, &type metadata for Int8);
  *(void *)(v7 + swift_weakDestroy(v0 + 16) = 64LL;
  *(_OWORD *)(v7 + 32) = 0u;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  int v8 = SecRandomCopyBytes(kSecRandomDefault, 0x40uLL, (void *)(v7 + 32));
  if (!v8)
  {
    uint64_t v14 = sub_10033C9DC((_BYTE *)(v7 + 32), 64LL);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease((const char *)v7);
    uint64_t v17 = (uint64_t *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    unint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8);
    *uint64_t v17 = v14;
    v17[1] = v16;
    sub_100189B0C(v18, v19);
    return;
  }

  LODWORD(v1) = v8;
  swift_bridgeObjectRelease((const char *)v7);
  if (qword_1006441B0 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_10064F140);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v13 = 67109120;
    int v21 = v1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v13 + 4, v13 + 8);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error generating ranging key (status = %d)", v13, 8u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }
}

uint64_t sub_10032F914()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v59 - v6;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (unint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *(void *)unint64_t v15 = v16;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))( v15,  enum case for DispatchPredicate.onQueue(_:),  v12);
  id v17 = v16;
  uint64_t v18 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) != 0)
  {
    unint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8);
    if (v15 >> 60 == 15) {
      return sub_100330178(10LL);
    }
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken);
    id v20 = objc_allocWithZone((Class)&OBJC_CLASS___SDAuthenticationRequest);
    sub_10019BA8C(v13, v15);
    id v21 = [v20 init];
    uint64_t v18 = (uint64_t)v21;
    if (v21)
    {
      unint64_t v61 = v15;
      uint64_t v22 = v13;
      uint64_t v60 = (uint64_t)v21;
      id v23 = v21;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      [v23 setAwdlInfo:isa];

      [v23 setVersion:1];
      id v25 = v23;
      UUID.uuidString.getter(v25);
      uint64_t v27 = v26;
      NSString v28 = String._bridgeToObjectiveC()();
      objc_msgSend(v25, "setSessionID:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

      if (HIDWORD(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type)))
      {
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Not enough bits to represent the passed value",  45LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3455LL,  0);
        __break(1u);
        return result;
      }

      id v21 = objc_msgSend(v25, "setType:");
      uint64_t v59 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
      if ((unint64_t)(*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) - 3LL) < 0xC)
      {
        uint64_t v13 = v22;
        unint64_t v15 = v61;
        uint64_t v18 = v60;
        goto LABEL_16;
      }

      id v29 = v25;
      uint64_t v13 = v22;
      unint64_t v15 = v61;
      Class v30 = Data._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v29, "setRangingToken:", v30, v59);

      uint64_t v18 = v60;
    }

    else
    {
      uint64_t v59 = (unint64_t *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
    }

    uint64_t v31 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
    swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate,  v68,  0LL,  0LL);
    sub_1001915A4(v31, (uint64_t)v7, &qword_1006457E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1LL, v8) == 1)
    {
      id v21 = (id)sub_100187100((uint64_t)v7, &qword_1006457E8);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      if (v18)
      {
        uint64_t v32 = v18;
        id v33 = (id)v18;
        [v33 setUnlockDate:Date.timeIntervalSince1970.getter(v33)];

        uint64_t v18 = v32;
      }

      id v21 = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

uint64_t sub_100330178(uint64_t a1)
{
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (void *)((char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    Date.init()(result);
    uint64_t v13 = type metadata accessor for Date(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v5, 0LL, 1LL, v13);
    uint64_t v14 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], v23, 33LL, 0LL);
    uint64_t v15 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
    sub_1001C9860((uint64_t)v5, (uint64_t)&v14[*(int *)(v15 + 20)], &qword_1006457E8);
    uint64_t v16 = &v14[*(int *)(v15 + 72)];
    *(_DWORD *)uint64_t v16 = a1;
    v16[4] = 0;
    swift_endAccess(v23);
    sub_100335688();
    uint64_t v17 = (uint64_t)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
    swift_beginAccess(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v22, 0LL, 0LL);
    sub_1001915A4(v17, (uint64_t)v23, &qword_100650630);
    if (v24)
    {
      sub_10019A6C4((uint64_t)v23, (uint64_t)v21);
      sub_100187100((uint64_t)v23, &qword_100650630);
      uint64_t v18 = *sub_10019A708(v21, v21[3]);
      unint64_t v19 = v1;
      sub_1002D8E14(v19, a1, 0LL, 0xE000000000000000LL, v18);

      return sub_10018709C(v21);
    }

    else
    {
      return sub_100187100((uint64_t)v23, &qword_100650630);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

void sub_1003303B0(void *a1)
{
  id v188 = a1;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v165 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v180 = *(char **)(v5 - 8);
  __chkstk_darwin(v5);
  v179 = (char *)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v178 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  v176 = (char *)&v165 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v184 = type metadata accessor for UUID(0LL);
  unint64_t v183 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v182 = (uint64_t)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_1006457E8);
  uint64_t v10 = __chkstk_darwin(v9);
  v181 = (char *)&v165 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  v185 = (char *)&v165 - v12;
  uint64_t v13 = type metadata accessor for Date(0LL);
  uint64_t v186 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v187 = (char *)&v165 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (id *)((char *)&v165 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v19 = v1;
  id v20 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v18 = v20;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v21 = v20;
  char v22 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v22 & 1) != 0)
  {
    id v174 = v21;
    uint64_t v175 = v5;
    if (qword_1006441B0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1006441B0, sub_10032E7C0);
LABEL_3:
  uint64_t v23 = type metadata accessor for Logger(0LL);
  id v24 = (id)sub_100186DE4(v23, (uint64_t)qword_10064F140);
  id v25 = v188;
  uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
  os_log_type_t v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  v173 = v4;
  if (v28)
  {
    id v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v172 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v29 = 138412290;
    *(void *)&__int128 aBlock = v25;
    id v30 = v25;
    id v188 = v24;
    uint64_t v31 = v13;
    id v32 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 8, v29 + 4, v29 + 12);
    id v33 = v172;
    *uint64_t v172 = v25;

    uint64_t v34 = v19;
    uint64_t v35 = v31;
    id v24 = v188;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Handling authentication request %@", v29, 0xCu);
    uint64_t v36 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v33, 1LL, v36);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);
  }

  else
  {

    uint64_t v26 = (os_log_s *)v25;
    uint64_t v34 = v19;
    uint64_t v35 = v13;
  }

  uint64_t v37 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v38 = *(void *)&v34[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  if (v38 <= 0xE && ((1LL << v38) & 0x658E) != 0)
  {
    unint64_t v39 = v34;
    unint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      *(void *)&__int128 aBlock = v43;
      *(_DWORD *)uint64_t v42 = 136315138;
      unint64_t v44 = sub_10034F010(*(void *)&v34[v37]);
      uint64_t v46 = (const char *)v45;
      uint64_t v198 = sub_10018CDB4(v44, v45, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v198, v199, v42 + 4, v42 + 12);

      swift_bridgeObjectRelease(v46);
      _os_log_impl( (void *)&_mh_execute_header,  v40,  v41,  "Authentication type %s does not support handling this message",  v42,  0xCu);
      swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1LL, -1LL);
      swift_slowDealloc(v42, -1LL, -1LL);
    }

    else
    {
    }

    return;
  }

  uint64_t v47 = (uint64_t)&v34[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
  swift_beginAccess(&v34[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v197, 0LL, 0LL);
  sub_1001915A4(v47, (uint64_t)&aBlock, &qword_100654080);
  sub_1001915A4((uint64_t)&aBlock, (uint64_t)&v195, &qword_100654080);
  if (!v196)
  {
    sub_100187100((uint64_t)&v195, &qword_100654080);
    unint64_t v57 = sub_100187014();
    uint64_t v58 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v57, 0LL, 0LL);
    *(_DWORD *)uint64_t v59 = 10;
    strcpy((char *)(v59 + 8), "No peer device");
    *(_BYTE *)(v59 + 23) = -18;
    swift_willThrow(v58);
    sub_100187100((uint64_t)&aBlock, &qword_100654080);
    goto LABEL_29;
  }

  sub_1001CE0D0(&v195, (uint64_t)&v198);
  sub_100187100((uint64_t)&aBlock, &qword_100654080);
  id v48 = [v25 sessionStartDate];
  uint64_t v49 = v187;
  Date.init(timeIntervalSince1970:)(v48);
  uint64_t v50 = v186;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v186 + 16);
  uint64_t v52 = (uint64_t)v185;
  v51(v185, v49, v35);
  os_log_type_t v53 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56);
  v53(v52, 0LL, 1LL, v35);
  uint64_t v171 = v34;
  uint64_t v54 = (uint64_t)&v34[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
  swift_beginAccess(v54, &aBlock, 33LL, 0LL);
  sub_1001C9860(v52, v54, &qword_1006457E8);
  swift_endAccess(&aBlock);
  if ([v25 hasUnlockDate])
  {
    [v25 unlockDate];
    if (v55 == 0.0)
    {
      uint64_t v56 = v181;
      v51(v181, v187, v35);
    }

    else
    {
      id v60 = [v25 unlockDate];
      uint64_t v56 = v181;
      Date.init(timeIntervalSince1970:)(v60);
    }

    v53((uint64_t)v56, 0LL, 1LL, v35);
    swift_beginAccess(v54, &aBlock, 33LL, 0LL);
    uint64_t v61 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
    sub_1001C9860((uint64_t)v56, v54 + *(int *)(v61 + 68), &qword_1006457E8);
    swift_endAccess(&aBlock);
  }

  id v188 = v24;
  uint64_t v62 = (uint64_t)v185;
  v181 = (char *)v25;
  os_log_type_t v63 = v187;
  v51(v185, v187, v35);
  v53(v62, 0LL, 1LL, v35);
  swift_beginAccess(v54, &aBlock, 33LL, 0LL);
  id v64 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001C9860(v62, v54 + v64[7], &qword_1006457E8);
  uint64_t v65 = v54 + v64[8];
  sub_100187100(v65, &qword_1006457E8);
  uint64_t v66 = v63;
  uint64_t v67 = v181;
  v51((char *)v65, v66, v35);
  v53(v65, 0LL, 1LL, v35);
  uint64_t v68 = swift_endAccess(&aBlock);
  Date.init()(v68);
  v53(v62, 0LL, 1LL, v35);
  swift_beginAccess(v54, &aBlock, 33LL, 0LL);
  sub_1001C9860(v62, v54 + v64[9], &qword_1006457E8);
  swift_endAccess(&aBlock);
  os_log_type_t v69 = 0LL;
  uint64_t v70 = v171;
  uint64_t v71 = v184;
  if ((unint64_t)(*(void *)&v171[v37] - 1LL) <= 3)
  {
    uint64_t v72 = v35;
    id v73 = [v67 awdlInfo];
    if (v73)
    {
      uint64_t v74 = v73;
      uint64_t v75 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v73);
      unint64_t v77 = v76;

      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v79 = sub_100089EF4(isa);

      if (v79)
      {
        os_log_type_t v69 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v79,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
        sub_100189B20(v75, v77);

        uint64_t v35 = v72;
        uint64_t v70 = v171;
        goto LABEL_22;
      }

      sub_100189B20(v75, v77);
    }

    unint64_t v97 = sub_100187014();
    uint64_t v58 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v97, 0LL, 0LL);
    *(_DWORD *)uint64_t v98 = 10;
    *(void *)(v98 + 8) = 0xD00000000000001FLL;
    *(void *)(v98 + swift_weakDestroy(v0 + 16) = 0x8000000100509B20LL;
    swift_willThrow(v58);
    (*(void (**)(char *, uint64_t))(v186 + 8))(v187, v72);
LABEL_28:
    sub_10018709C(&v198);
LABEL_29:
    uint64_t v198 = v58;
    swift_errorRetain(v58);
    uint64_t v99 = sub_100183098(&qword_100645710);
    if (swift_dynamicCast(&aBlock, &v198, v99, &type metadata for SFAuthenticationErrorMessage, 0LL))
    {
      swift_errorRelease(v58);
      uint64_t v100 = (const char *)v191;
      sub_100332F68(aBlock, *((uint64_t *)&aBlock + 1), (const char *)v191);
      swift_bridgeObjectRelease(v100);
      swift_errorRelease(v198);
    }

    else
    {
      swift_errorRelease(v198);
      sub_100332F68(10, 0LL, (const char *)0xE000000000000000LL);
      swift_errorRelease(v58);
    }

    return;
  }

uint64_t sub_100331984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v11, 0LL, 0LL);
  sub_1001915A4(v8, (uint64_t)v12, &qword_100650630);
  if (!v13) {
    return sub_100187100((uint64_t)v12, &qword_100650630);
  }
  sub_10019A6C4((uint64_t)v12, (uint64_t)v10);
  sub_100187100((uint64_t)v12, &qword_100650630);
  sub_10019A708(v10, v10[3]);
  sub_1004641AC(a2, a3, a4, 1LL, *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type));
  return sub_10018709C(v10);
}

uint64_t sub_100331A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v7[17] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[18] = v9;
  v7[19] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  v7[20] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v7[21] = v11;
  v7[22] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100331AFC, 0LL, 0LL);
}

uint64_t sub_100331AFC()
{
  unint64_t v1 = 0xD000000000000012LL;
  uint64_t v2 = *(void *)(v0 + 104);
  if (v2)
  {
    uint64_t v3 = *(void *)(*(void *)(v0 + 112)
                   + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
    *(void *)(v0 + 184) = v3;
    if (v3)
    {
      uint64_t v4 = dword_10064CBDC;
      swift_retain(v3);
      uint64_t v5 = (void *)swift_task_alloc(v4);
      *(void *)(v0 + 192) = v5;
      void *v5 = v0;
      v5[1] = sub_100331CB0;
      return sub_1002C0EAC(v2, *(void *)(v0 + 120), *(void *)(v0 + 128));
    }

    uint64_t v7 = "No ranging session";
  }

  else
  {
    unint64_t v1 = 0xD00000000000004FLL;
    uint64_t v7 = "remoteAWDLInfo is missing for type that requires ranging. This shouldn't happen";
  }

  unint64_t v8 = (unint64_t)(v7 - 32) | 0x8000000000000000LL;
  unint64_t v9 = sub_100187014();
  uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
  *(_DWORD *)uint64_t v11 = 10;
  *(void *)(v11 + 8) = v1;
  *(void *)(v11 + swift_weakDestroy(v0 + 16) = v8;
  swift_willThrow(v10);
  *(void *)(v0 + 88) = v10;
  swift_errorRetain(v10);
  uint64_t v12 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v0 + 64, v0 + 88, v12, &type metadata for SFAuthenticationErrorMessage, 0LL))
  {
    swift_errorRelease(v10);
    uint64_t v13 = *(const char **)(v0 + 80);
    sub_100332F68(*(_DWORD *)(v0 + 64), *(void *)(v0 + 72), v13);
    swift_bridgeObjectRelease(v13);
    uint64_t v14 = *(void *)(v0 + 88);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 88));
    sub_100332F68(10, 0LL, (const char *)0xE000000000000000LL);
    uint64_t v14 = v10;
  }

  swift_errorRelease(v14);
  uint64_t v15 = *(void *)(v0 + 152);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100331CB0(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 192);
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = sub_100332060;
  }

  else
  {
    *(_BYTE *)(v4 + 208) = a1 & 1;
    uint64_t v6 = sub_100331D28;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100331D28()
{
  int v1 = *(unsigned __int8 *)(v0 + 208);
  *(_BYTE *)(*(void *)(v0 + 112) + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded) = v1;
  if (v1 == 1)
  {
    uint64_t v2 = *(void *)(v0 + 200);
    sub_10033213C();
    swift_release(*(void *)(v0 + 184));
    if (v2)
    {
      *(void *)(v0 + 88) = v2;
      swift_errorRetain(v2);
      uint64_t v3 = sub_100183098(&qword_100645710);
      if ((swift_dynamicCast(v0 + 64, v0 + 88, v3, &type metadata for SFAuthenticationErrorMessage, 0LL) & 1) != 0)
      {
        swift_errorRelease(v2);
        uint64_t v4 = *(const char **)(v0 + 80);
        sub_100332F68(*(_DWORD *)(v0 + 64), *(void *)(v0 + 72), v4);
        swift_bridgeObjectRelease(v4);
        uint64_t v5 = *(void *)(v0 + 88);
      }

      else
      {
        swift_errorRelease(*(void *)(v0 + 88));
        sub_100332F68(10, 0LL, (const char *)0xE000000000000000LL);
        uint64_t v5 = v2;
      }

      swift_errorRelease(v5);
    }
  }

  else
  {
    if (qword_1006441B0 != -1) {
      swift_once(&qword_1006441B0, sub_10032E7C0);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064F140);
    unint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Out of range", v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v24 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 160);
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v23 = *(void *)(v0 + 144);
    uint64_t v15 = *(void **)(v0 + 112);

    uint64_t v16 = swift_allocObject(&unk_1005DBC78, 24LL, 7LL);
    *(void *)(v16 + swift_weakDestroy(v0 + 16) = v15;
    *(void *)(v0 + 48) = sub_10033CBB8;
    *(void *)(v0 + 56) = v16;
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256LL;
    *(void *)(v0 + 32) = sub_1001B9FE4;
    *(void *)(v0 + 40) = &unk_1005DBC90;
    uint64_t v17 = _Block_copy((const void *)(v0 + 16));
    static DispatchQoS.unspecified.getter(v15);
    *(void *)(v0 + 96) = _swiftEmptyArrayStorage;
    uint64_t v18 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v19 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v20 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 96, v19, v20, v14, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v13, v17);
    swift_release(v12);
    _Block_release(v17);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    swift_release(*(void *)(v0 + 56));
  }

  uint64_t v21 = *(void *)(v0 + 152);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100332060()
{
  uint64_t v1 = *(void *)(v0 + 200);
  *(void *)(v0 + 88) = v1;
  swift_errorRetain(v1);
  uint64_t v2 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v0 + 64, v0 + 88, v2, &type metadata for SFAuthenticationErrorMessage, 0LL) & 1) != 0)
  {
    swift_errorRelease(v1);
    uint64_t v3 = *(const char **)(v0 + 80);
    sub_100332F68(*(_DWORD *)(v0 + 64), *(void *)(v0 + 72), v3);
    swift_bridgeObjectRelease(v3);
    uint64_t v4 = *(void *)(v0 + 88);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 88));
    sub_100332F68(10, 0LL, (const char *)0xE000000000000000LL);
    uint64_t v4 = v1;
  }

  swift_errorRelease(v4);
  uint64_t v5 = *(void *)(v0 + 152);
  swift_task_dealloc(*(void *)(v0 + 176));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10033213C()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8];
  if (v12 >> 60 == 15)
  {
    if (qword_1006441B0 != -1) {
      swift_once(&qword_1006441B0, sub_10032E7C0);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_10064F140);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Auth token not present yet", v17, 2u);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    goto LABEL_19;
  }

  uint64_t v55 = v9;
  int v18 = v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded];
  uint64_t v56 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken];
  sub_10019BA8C(v56, v12);
  if (v18 != 1)
  {
    if (qword_1006441B0 != -1) {
      swift_once(&qword_1006441B0, sub_10032E7C0);
    }
    uint64_t v29 = type metadata accessor for Logger(0LL);
    uint64_t v30 = sub_100186DE4(v29, (uint64_t)qword_10064F140);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v15, v31))
    {
      sub_100189B0C(v56, v12);
LABEL_19:

      return;
    }

    id v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v31, "Ranging not succeeded yet", v32, 2u);
    swift_slowDealloc(v32, -1LL, -1LL);

    uint64_t v33 = v56;
    goto LABEL_22;
  }

  uint64_t v53 = v4;
  uint64_t v54 = v1;
  if (qword_1006441B0 != -1) {
    swift_once(&qword_1006441B0, sub_10032E7C0);
  }
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v52 = sub_100186DE4(v19, (uint64_t)qword_10064F140);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v52);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    char v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Consuming auth token", v22, 2u);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  uint64_t v23 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession];
  uint64_t v24 = v56;
  if (!v23)
  {
    unint64_t v34 = sub_100187014();
    uint64_t v35 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v34, 0LL, 0LL);
    *(_DWORD *)uint64_t v36 = 10;
    *(void *)(v36 + 8) = 0xD000000000000013LL;
    *(void *)(v36 + swift_weakDestroy(v0 + 16) = 0x8000000100509AC0LL;
    swift_willThrow(v35);
    goto LABEL_21;
  }

  sub_1001A4C04(v56, v12);
  swift_retain(v23);
  uint64_t v25 = v54;
  sub_10043E438(v24, v12);
  uint64_t v26 = v24;
  BOOL v28 = v27;
  sub_100189B0C(v26, v12);
  if (v25)
  {
    swift_release(v23);
    uint64_t v24 = v56;
LABEL_21:
    uint64_t v33 = v24;
LABEL_22:
    sub_100189B0C(v33, v12);
    return;
  }

  uint64_t v51 = v23;
  uint64_t v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
  sub_100189B20(v37, v38);

  uint64_t v24 = v56;
  if (*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type] == 4LL)
  {
    uint64_t v39 = sub_100012570();
    if (!(_DWORD)v39)
    {
      unint64_t v48 = sub_100187014();
      uint64_t v49 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v48, 0LL, 0LL);
      *(_DWORD *)uint64_t v50 = 10;
      *(void *)(v50 + 8) = 0xD000000000000045LL;
      *(void *)(v50 + swift_weakDestroy(v0 + 16) = 0x800000010050AF90LL;
      swift_willThrow(v49);
      swift_release(v51);
      goto LABEL_21;
    }

    uint64_t v54 = 0LL;
    unint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "BIO ARM SUCCEEDED", v42, 2u);
      swift_slowDealloc(v42, -1LL, -1LL);
    }
  }

  uint64_t v54 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v43 = swift_allocObject(&unk_1005DBCC8, 24LL, 7LL);
  *(void *)(v43 + swift_weakDestroy(v0 + 16) = v2;
  aBlock[4] = sub_10033CBF0;
  uint64_t v58 = v43;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005DBCE0;
  uint64_t v52 = (uint64_t)_Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v2);
  uint64_t v59 = _swiftEmptyArrayStorage;
  uint64_t v44 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v45 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v46 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v45, v46, v3, v44);
  uint64_t v47 = (const void *)v52;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v6, v52);
  swift_release(v51);
  _Block_release(v47);
  sub_100189B0C(v56, v12);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v55);
  swift_release(v58);
}

void sub_100332784(unint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v12 = *(void **)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  char v14 = _dispatchPreconditionTest(_:)(v11);
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once(&qword_1006441B0, sub_10032E7C0);
    goto LABEL_12;
  }

  id v15 = [objc_allocWithZone((Class)SDAuthenticationConfirmation) init];
  uint64_t v2 = v15;
  if (v15)
  {
    [v15 setVersion:1];
    id v16 = v2;
    UUID.uuidString.getter(v16);
    int v18 = v17;
    NSString v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "setSessionID:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

    [v16 setSuccess:HIDWORD(a1) & 1];
    if ((a1 & 0x100000000LL) == 0) {
      [v16 setErrorCode:a1];
    }
    id v20 = [v16 data];
    if (v20)
    {
      os_log_type_t v21 = v20;
      uint64_t v63 = a1;
      uint64_t v22 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v20);
      unint64_t v24 = v23;

      if (qword_1006441B0 != -1) {
        swift_once(&qword_1006441B0, sub_10032E7C0);
      }
      uint64_t v25 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v25, (uint64_t)qword_10064F140);
      id v26 = v16;
      os_log_type_t v27 = (os_log_s *)Logger.logObject.getter(v26);
      os_log_type_t v28 = static os_log_type_t.default.getter();
      BOOL v29 = os_log_type_enabled(v27, v28);
      id v62 = v26;
      if (v29)
      {
        uint64_t v30 = swift_slowAlloc(12LL, -1LL);
        uint64_t v59 = v22;
        os_log_type_t v31 = (uint8_t *)v30;
        uint64_t v32 = swift_slowAlloc(8LL, -1LL);
        unint64_t v60 = v24;
        uint64_t v33 = (void *)v32;
        uint64_t v61 = v3;
        *(_DWORD *)os_log_type_t v31 = 138412290;
        id v70 = v26;
        id v34 = v26;
        uint64_t v3 = v61;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v31 + 4, v31 + 12);
        void *v33 = v2;

        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Sending confirmation: %@", v31, 0xCu);
        uint64_t v35 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v33, 1LL, v35);
        uint64_t v36 = v33;
        unint64_t v24 = v60;
        swift_slowDealloc(v36, -1LL, -1LL);
        uint64_t v37 = v31;
        uint64_t v22 = v59;
        swift_slowDealloc(v37, -1LL, -1LL);
      }

      else
      {

        os_log_type_t v27 = (os_log_s *)v26;
      }

      uint64_t v43 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v67, 0LL, 0LL);
      sub_1001915A4(v43, (uint64_t)&v68, &qword_100654080);
      uint64_t v44 = v63;
      if (v69)
      {
        sub_1001CE0D0(&v68, (uint64_t)&v70);
        uint64_t v45 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v65, 0LL, 0LL);
        sub_1001915A4(v45, (uint64_t)&v68, &qword_100650630);
        if (v69)
        {
          sub_10019A6C4((uint64_t)&v68, (uint64_t)v64);
          sub_100187100((uint64_t)&v68, &qword_100650630);
          sub_10019A708(v64, v64[3]);
          unint64_t v46 = sub_1004641AC( v22,  v24,  (uint64_t)&v70,  2LL,  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          uint64_t v47 = HIDWORD(v46) & 1;
          sub_10018709C(&v70);
          uint64_t v48 = sub_10018709C(v64);
          goto LABEL_24;
        }

        sub_10018709C(&v70);
        uint64_t v50 = &v68;
      }

      else
      {
        sub_100187100((uint64_t)&v68, &qword_100654080);
        uint64_t v49 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v64, 0LL, 0LL);
        sub_1001915A4(v49, (uint64_t)&v70, &qword_100650630);
        if (v72)
        {
          sub_10019A6C4((uint64_t)&v70, (uint64_t)&v68);
          sub_100187100((uint64_t)&v70, &qword_100650630);
          sub_10019A708(&v68, v69);
          unint64_t v46 = sub_1004775FC( v22,  v24,  2LL,  *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          uint64_t v47 = HIDWORD(v46) & 1;
          uint64_t v48 = sub_10018709C(&v68);
          goto LABEL_24;
        }

        uint64_t v50 = (__int128 *)&v70;
      }

      uint64_t v48 = sub_100187100((uint64_t)v50, &qword_100650630);
      unint64_t v46 = 0LL;
      LOBYTE(v47) = 1;
LABEL_24:
      v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent] = 1;
      if ((v44 & 0x100000000LL) != 0)
      {
        if ((v47 & 1) != 0)
        {
          Date.init()(v48);
          uint64_t v51 = type metadata accessor for Date(0LL);
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v7, 0LL, 1LL, v51);
          uint64_t v52 = &v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
          swift_beginAccess( &v3[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics],  &v70,  33LL,  0LL);
          uint64_t v53 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
          sub_1001C9860((uint64_t)v7, (uint64_t)&v52[*(int *)(v53 + 20)], &qword_1006457E8);
          swift_endAccess(&v70);
          sub_100335688();
          uint64_t v54 = (uint64_t)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
          swift_beginAccess(&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v66, 0LL, 0LL);
          sub_1001915A4(v54, (uint64_t)&v70, &qword_100650630);
          id v55 = v62;
          if (v72)
          {
            sub_10019A6C4((uint64_t)&v70, (uint64_t)&v68);
            sub_100187100((uint64_t)&v70, &qword_100650630);
            uint64_t v56 = (char *)*sub_10019A708(&v68, v69);
            unint64_t v57 = v3;
            sub_10033ABF8( v57,  v56,  type metadata accessor for SDAuthenticationLockSession,  (uint64_t (*)(uint64_t))sub_10033C900,  sub_1002DABCC,  (uint64_t (*)(uint64_t))sub_10033C900,  (uint64_t (*)(uint64_t))sub_10033C900);

            sub_100189B20(v22, v24);
            sub_10018709C(&v68);
          }

          else
          {

            sub_100189B20(v22, v24);
            sub_100187100((uint64_t)&v70, &qword_100650630);
          }

          return;
        }

        uint64_t v58 = v46;
      }

      else
      {
        uint64_t v58 = v44;
      }

      sub_100330178(v58);

      sub_100189B20(v22, v24);
      return;
    }
  }

  else
  {
    [0 setSuccess:HIDWORD(a1) & 1];
  }

  if (qword_1006441B0 != -1) {
    goto LABEL_33;
  }
LABEL_12:
  uint64_t v38 = type metadata accessor for Logger(0LL);
  uint64_t v39 = sub_100186DE4(v38, (uint64_t)qword_10064F140);
  unint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.error.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Error converting confirmation to data", v42, 2u);
    swift_slowDealloc(v42, -1LL, -1LL);
  }

  sub_100330178(10LL);
}

uint64_t sub_100332F68(int a1, uint64_t a2, const char *a3)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v23 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v22[1] = *(void *)&v3[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  uint64_t v14 = swift_allocObject(&unk_1005DBD18, 48LL, 7LL);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = v3;
  *(_DWORD *)(v14 + 24) = a1;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  aBlock[4] = sub_10033CC24;
  uint64_t v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005DBD30;
  id v15 = _Block_copy(aBlock);
  id v16 = v3;
  swift_bridgeObjectRetain(a3);
  static DispatchQoS.unspecified.getter(v17);
  unint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t v18 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v19 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v20 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release(v26);
}

void sub_10033317C(void *a1)
{
  uint64_t v3 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v83 = v1;
  id v13 = *(void **)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    if (qword_1006441B0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1006441B0, sub_10032E7C0);
LABEL_3:
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_10064F140);
  id v18 = a1;
  uint64_t v82 = v17;
  uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  id v81 = v5;
  if (v21)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v22 = 138412290;
    uint64_t v84 = (uint64_t)v18;
    id v24 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85, v22 + 4, v22 + 12);
    *uint64_t v23 = v18;

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Handling authentication response %@", v22, 0xCu);
    uint64_t v25 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v23, 1LL, v25);
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {

    uint64_t v19 = (os_log_s *)v18;
  }

  uint64_t v26 = v83;

  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v29 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type];
  if (v29 > 0xE || ((1LL << v29) & 0x658E) == 0)
  {
    uint64_t v48 = v26;
    uint64_t v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.error.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = v26;
      uint64_t v52 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v53 = swift_slowAlloc(32LL, -1LL);
      uint64_t v84 = v53;
      *(_DWORD *)uint64_t v52 = 136315138;
      unint64_t v54 = sub_10034F010(*(void *)&v51[v28]);
      uint64_t v56 = (const char *)v55;
      uint64_t v86 = sub_10018CDB4(v54, v55, &v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v52 + 4, v52 + 12);

      swift_bridgeObjectRelease(v56);
      _os_log_impl( (void *)&_mh_execute_header,  v49,  v50,  "Authentication type %s does not support handling this message",  v52,  0xCu);
      swift_arrayDestroy(v53, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v53, -1LL, -1LL);
      swift_slowDealloc(v52, -1LL, -1LL);
    }

    else
    {
    }

    return;
  }

  Date.init()(v27);
  uint64_t v30 = type metadata accessor for Date(0LL);
  os_log_type_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL);
  v31(v8, 0LL, 1LL, v30);
  uint64_t v32 = &v26[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics];
  swift_beginAccess(&v26[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics], &v84, 33LL, 0LL);
  uint64_t v33 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001C9860((uint64_t)v8, (uint64_t)&v32[*(int *)(v33 + 36)], &qword_1006457E8);
  swift_endAccess(&v84);
  sub_10034E730();
  if ([v18 hasErrorCode])
  {
    sub_100330178((uint64_t)[v18 errorCode]);
    return;
  }

  id v34 = [v18 awdlInfo];
  if (v34)
  {
    uint64_t v35 = v34;
    uint64_t v80 = v31;
    uint64_t v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v34);
    unint64_t v38 = v37;

    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v40 = sub_100089EF4(isa);

    if (v40)
    {
      uint64_t v78 = v36;
      unint64_t v79 = v38;
      os_log_type_t v41 = (const char *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v40,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

      uint64_t v42 = (uint64_t *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken];
      unint64_t v43 = *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8];
      if (v43 >> 60 == 15)
      {
        swift_bridgeObjectRelease(v41);
        uint64_t v45 = (os_log_s *)Logger.logObject.getter(v44);
        os_log_type_t v46 = static os_log_type_t.error.getter(v45);
        if (os_log_type_enabled(v45, v46))
        {
          uint64_t v47 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v47 = 0;
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "Could not find ranging token", v47, 2u);
          swift_slowDealloc(v47, -1LL, -1LL);
        }

        LOBYTE(v84) = 0;
        sub_100332784(0xAuLL);
        sub_100189B20(v78, v79);
      }

      else
      {
        uint64_t v60 = *v42;
        uint64_t v61 = sub_10019BA8C( *v42,  *(void *)&v26[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken + 8]);
        Date.init()(v61);
        v80(v8, 0LL, 1LL, v30);
        swift_beginAccess(v32, &v84, 33LL, 0LL);
        sub_1001C9860((uint64_t)v8, (uint64_t)&v32[*(int *)(v33 + 40)], &qword_1006457E8);
        swift_endAccess(&v84);
        id v62 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
        NSString v63 = String._bridgeToObjectiveC()();
        unsigned int v64 = [v62 BOOLForKey:v63];

        if (v64)
        {
          swift_bridgeObjectRelease(v41);
          uint64_t v66 = (os_log_s *)Logger.logObject.getter(v65);
          os_log_type_t v67 = static os_log_type_t.default.getter();
          BOOL v68 = os_log_type_enabled(v66, v67);
          uint64_t v70 = v78;
          unint64_t v69 = v79;
          if (v68)
          {
            uint64_t v71 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v71 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v66,  v67,  "Default classCUnlockSkipRanging is set. Skipping ranging",  v71,  2u);
            swift_slowDealloc(v71, -1LL, -1LL);
            sub_100189B20(v70, v69);

            sub_100189B0C(v60, v43);
          }

          else
          {
            sub_100189B20(v78, v79);
            sub_100189B0C(v60, v43);
          }

          v83[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded] = 1;
        }

        else
        {
          uint64_t v72 = type metadata accessor for TaskPriority(0LL);
          uint64_t v73 = (uint64_t)v81;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v81, 1LL, 1LL, v72);
          uint64_t v74 = (void *)swift_allocObject(&unk_1005DBB38, 64LL, 7LL);
          v74[2] = 0LL;
          v74[3] = 0LL;
          uint64_t v75 = v83;
          v74[4] = v83;
          v74[5] = v41;
          v74[6] = v60;
          v74[7] = v43;
          unint64_t v76 = v75;
          sub_1001A4C04(v60, v43);
          uint64_t v77 = sub_1001B37E8(v73, (uint64_t)&unk_10064F298, (uint64_t)v74);
          sub_100189B20(v78, v79);
          sub_100189B0C(v60, v43);
          swift_release(v77);
        }
      }

      return;
    }

    id v34 = (id)sub_100189B20(v36, v38);
  }

  unint64_t v57 = (os_log_s *)Logger.logObject.getter(v34);
  os_log_type_t v58 = static os_log_type_t.error.getter(v57);
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Message does not have AWDL info", v59, 2u);
    swift_slowDealloc(v59, -1LL, -1LL);
  }

  LOBYTE(v84) = 0;
  sub_100332784(0xAuLL);
}

uint64_t sub_100333A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  v7[20] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[21] = v9;
  v7[22] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for DispatchQoS(0LL);
  v7[23] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v7[24] = v11;
  v7[25] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100333AB4, 0LL, 0LL);
}

uint64_t sub_100333AB4()
{
  if (qword_1006441B0 != -1) {
    swift_once(&qword_1006441B0, sub_10032E7C0);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_10064F140);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Starting ranging as initiator", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = v0[16];

  uint64_t v7 = *(void *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  v0[26] = v7;
  if (v7)
  {
    uint64_t v8 = dword_10064CBDC;
    swift_retain(v7);
    uint64_t v9 = (void *)swift_task_alloc(v8);
    v0[27] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100333D90;
    return sub_1002C0EAC(v0[17], v0[18], v0[19]);
  }

  else
  {
    uint64_t v11 = v0[25];
    uint64_t v12 = v0[22];
    uint64_t v22 = v0[24];
    uint64_t v23 = v0[23];
    uint64_t v13 = v0[20];
    uint64_t v21 = v0[21];
    id v14 = (void *)v0[16];
    uint64_t v15 = swift_allocObject(&unk_1005DBBB0, 32LL, 7LL);
    *(_BYTE *)(v15 + swift_weakDestroy(v0 + 16) = 2;
    *(void *)(v15 + 24) = v14;
    v0[12] = sub_10033C8F4;
    v0[13] = v15;
    v0[8] = _NSConcreteStackBlock;
    v0[9] = 1107296256LL;
    v0[10] = sub_1001B9FE4;
    v0[11] = &unk_1005DBBC8;
    uint64_t v16 = _Block_copy(v0 + 8);
    static DispatchQoS.unspecified.getter(v14);
    v0[15] = _swiftEmptyArrayStorage;
    uint64_t v17 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v18 = sub_100183098((uint64_t *)&unk_1006460D0);
    uint64_t v19 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 15, v18, v19, v13, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v12, v16);
    _Block_release(v16);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v12, v13);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v11, v23);
    swift_release(v0[13]);
    uint64_t v20 = v0[22];
    swift_task_dealloc(v0[25]);
    swift_task_dealloc(v20);
    return ((uint64_t (*)(void))v0[1])();
  }

uint64_t sub_100333D90(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 216);
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    uint64_t v6 = sub_100333FCC;
  }

  else
  {
    swift_release(*(void *)(v4 + 208));
    *(_BYTE *)(v4 + 232) = a1 & 1;
    uint64_t v6 = sub_100333E10;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100333E10()
{
  char v1 = *(_BYTE *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v5 = *(void **)(v0 + 128);
  uint64_t v6 = swift_allocObject(&unk_1005DBBB0, 32LL, 7LL);
  *(_BYTE *)(v6 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  *(void *)(v0 + 96) = sub_10033C8F4;
  *(void *)(v0 + 104) = v6;
  *(void *)(v0 + 64) = _NSConcreteStackBlock;
  *(void *)(v0 + 72) = 1107296256LL;
  *(void *)(v0 + 80) = sub_1001B9FE4;
  *(void *)(v0 + 88) = &unk_1005DBBC8;
  uint64_t v7 = _Block_copy((const void *)(v0 + 64));
  static DispatchQoS.unspecified.getter(v5);
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  uint64_t v8 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v10 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 120, v9, v10, v4, v8);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v2, v3, v7);
  _Block_release(v7);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v15);
  swift_release(*(void *)(v0 + 104));
  uint64_t v11 = *(void *)(v0 + 176);
  swift_task_dealloc(*(void *)(v0 + 200));
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100333FCC()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[22];
  uint64_t v16 = v0[24];
  uint64_t v17 = v0[23];
  uint64_t v4 = v0[20];
  uint64_t v15 = v0[21];
  uint64_t v5 = (void *)v0[16];
  swift_release(v0[26]);
  uint64_t v6 = swift_allocObject(&unk_1005DBB60, 32LL, 7LL);
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  v0[6] = sub_10033C8B0;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256LL;
  v0[4] = sub_1001B9FE4;
  v0[5] = &unk_1005DBB78;
  uint64_t v7 = _Block_copy(v0 + 2);
  id v8 = v5;
  uint64_t v9 = swift_errorRetain(v1);
  static DispatchQoS.unspecified.getter(v9);
  v0[14] = _swiftEmptyArrayStorage;
  uint64_t v10 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v11 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v12 = sub_1001CD538( (unint64_t *)&qword_100646520,  (uint64_t *)&unk_1006460D0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 14, v11, v12, v4, v10);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v2, v3, v7);
  _Block_release(v7);
  swift_errorRelease(v1);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v2, v17);
  swift_release(v0[7]);
  uint64_t v13 = v0[22];
  swift_task_dealloc(v0[25]);
  swift_task_dealloc(v13);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_1003341A0(char a1)
{
  if ((a1 & 1) != 0) {
    unint64_t v1 = 0x100000000LL;
  }
  else {
    unint64_t v1 = 9LL;
  }
  sub_100332784(v1);
}

void sub_1003341F0(uint64_t a1)
{
  uint64_t v6 = a1;
  swift_errorRetain(a1);
  uint64_t v1 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v4, &v6, v1, &type metadata for SFAuthenticationErrorMessage, 6LL) & 1) != 0)
  {
    unint64_t v2 = v4[0];
    uint64_t v3 = v5;
    LOBYTE(v4[0]) = 0;
    sub_100332784(v2);
    swift_bridgeObjectRelease(v3);
  }

  else
  {
    LOBYTE(v4[0]) = 0;
    sub_100332784(0xAuLL);
  }

uint64_t sub_100334280(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1006441B0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1006441B0, sub_10032E7C0);
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v10, (uint64_t)qword_10064F140);
  id v11 = a1;
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v14 = 138412290;
    id v47 = v11;
    id v16 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48, v14 + 4, v14 + 12);
    *uint64_t v15 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Handling token %@", v14, 0xCu);
    uint64_t v17 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v15, 1LL, v17);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {

    uint64_t v12 = (os_log_s *)v11;
  }

  uint64_t v18 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  unint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
  BOOL v20 = v19 > 0xE;
  uint64_t v21 = (1LL << v19) & 0x658E;
  if (v20 || v21 == 0)
  {
    id v36 = [v11 aksToken];
    if (v36)
    {
      unint64_t v37 = v36;
      uint64_t v38 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v36);
      unint64_t v40 = v39;

      os_log_type_t v41 = (uint64_t *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken);
      uint64_t v42 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken);
      unint64_t v43 = *(void *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken + 8);
      uint64_t *v41 = v38;
      v41[1] = v40;
      sub_10019BA8C(v38, v40);
      sub_100189B0C(v42, v43);
      sub_10033213C();
      return sub_100189B20(v38, v40);
    }

    unint64_t v44 = sub_100187014();
    uint64_t v30 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v44, 0LL, 0LL);
    uint64_t v31 = v30;
    *(_DWORD *)uint64_t v45 = 10;
    *(void *)(v45 + 8) = 0xD000000000000024LL;
    *(void *)(v45 + swift_weakDestroy(v0 + 16) = 0x800000010050AFE0LL;
  }

  else
  {
    id v47 = 0LL;
    uint64_t v48 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(61LL);
    v23._object = (void *)0x800000010050B010LL;
    v23._countAndFlagsBits = 0xD000000000000014LL;
    String.append(_:)(v23);
    v24._countAndFlagsBits = sub_10034F010(*(void *)(v2 + v18));
    object = (const char *)v24._object;
    String.append(_:)(v24);
    swift_bridgeObjectRelease(object);
    v26._countAndFlagsBits = 0xD000000000000027LL;
    v26._object = (void *)0x800000010050B030LL;
    String.append(_:)(v26);
    id v27 = v47;
    uint64_t v28 = v48;
    unint64_t v29 = sub_100187014();
    uint64_t v30 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v29, 0LL, 0LL);
    uint64_t v31 = v30;
    *(_DWORD *)uint64_t v32 = 10;
    *(void *)(v32 + 8) = v27;
    *(void *)(v32 + swift_weakDestroy(v0 + 16) = v28;
  }

  swift_willThrow(v30);
  uint64_t v50 = v31;
  swift_errorRetain(v31);
  uint64_t v33 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(&v47, &v50, v33, &type metadata for SFAuthenticationErrorMessage, 6LL))
  {
    id v34 = v49;
    sub_100332F68((int)v47, v48, v49);
    swift_bridgeObjectRelease(v34);
  }

  else
  {
    sub_100332F68(10, 0LL, (const char *)0xE000000000000000LL);
  }

  LOBYTE(v47) = 0;
  sub_100332784(0xAuLL);
  return swift_errorRelease(v31);
}

void sub_1003346E4()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_1006441B0, sub_10032E7C0);
    goto LABEL_4;
  }

  sub_10034E730();
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent) & 1) == 0)
  {
    v12[12] = 0;
    sub_100332784(0xEuLL);
    return;
  }

  if (qword_1006441B0 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_10064F140);
  id v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Can't cancel session that is already finished", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }
}

void sub_10033487C()
{
  uint64_t v1 = (int *)type metadata accessor for RangingMetrics(0LL);
  __chkstk_darwin(v1);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_1001D7024();
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationAuthSession_rangingSession);
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics;
    swift_beginAccess(v4 + OBJC_IVAR____TtC16DaemoniOSLibrary30SDAuthenticationRangingSession_metrics, v10, 0LL, 0LL);
    sub_1001A4B84(v5, (uint64_t)v3, type metadata accessor for RangingMetrics);
    uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
    swift_beginAccess(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics, v9, 33LL, 0LL);
    uint64_t v7 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
    uint64_t v8 = v6 + v7[10];
    swift_retain(v4);
    sub_100224D6C((uint64_t)v3, v8);
    sub_100224D6C((uint64_t)&v3[v1[5]], v6 + v7[11]);
    sub_100224D6C((uint64_t)&v3[v1[6]], v6 + v7[12]);
    *(_BYTE *)(v6 + v7[13]) = v3[v1[7]];
    sub_100224D6C((uint64_t)&v3[v1[8]], v6 + v7[14]);
    sub_100224D6C((uint64_t)&v3[v1[9]], v6 + v7[15]);
    swift_endAccess(v9);
    swift_release(v4);
    sub_1001A4BC8((uint64_t)v3, type metadata accessor for RangingMetrics);
  }

  sub_100334A08();
}

void sub_100334A08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v122 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v121 = (uint64_t)&v117 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v120 = (uint64_t)&v117 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v119 = (uint64_t)&v117 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v117 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v117 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  unint64_t v19 = (char *)&v117 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v117 - v20;
  uint64_t v22 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  Swift::String v26 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  void *v25 = v26;
  (*(void (**)(void *, void, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  id v27 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)(v25);
  (*(void (**)(void *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    goto LABEL_43;
  }

  id v28 = [objc_allocWithZone(SFWatchAuthenticationEvent) init];
  if ((*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type) & 0x8000000000000000LL) != 0)
  {
LABEL_43:
    __break(1u);
    return;
  }

  unint64_t v29 = v28;
  uint64_t v118 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
  objc_msgSend(v28, "setAuthenticationType:");
  uint64_t v30 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  *(void *)&double v31 = swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics,  v126,  0LL,  0LL).n128_u64[0];
  uint64_t v32 = (unsigned int *)(v30 + *(int *)(v2 + 72));
  uint64_t v33 = *((unsigned __int8 *)v32 + 4);
  if ((v33 & 1) == 0) {
    objc_msgSend(v29, "setFailureReason:", *v32, v31);
  }
  objc_msgSend(v29, "setSucceeded:", v33, v31);
  [v29 setScreenOn:*(_BYTE *)(v30 + *(int *)(v2 + 76)) & 1];
  sub_1001A4B84(v30, (uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v34 = COERCE_DOUBLE(sub_100339D18());
  uint64_t v117 = v2;
  char v36 = v35;
  sub_1001A4BC8((uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v37 = *(double *)&v34;
  if ((v36 & 1) != 0) {
    double v37 = 0.0;
  }
  [v29 setDiscoveryDuration:v37];
  sub_1001A4B84(v30, (uint64_t)v19, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v38 = COERCE_DOUBLE(sub_100339F08());
  char v40 = v39;
  sub_1001A4BC8((uint64_t)v19, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v41 = *(double *)&v38;
  if ((v40 & 1) != 0) {
    double v41 = 0.0;
  }
  [v29 setKeyExchangeDuration:v41];
  sub_1001A4B84(v30, (uint64_t)v16, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v42 = COERCE_DOUBLE(sub_10033A0F8());
  char v44 = v43;
  sub_1001A4BC8((uint64_t)v16, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v45 = *(double *)&v42;
  if ((v44 & 1) != 0) {
    double v45 = 0.0;
  }
  [v29 setAwdlBringUpDuration:v45];
  sub_1001A4B84(v30, (uint64_t)v13, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v46 = COERCE_DOUBLE(sub_10033A518());
  char v48 = v47;
  sub_1001A4BC8((uint64_t)v13, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v49 = *(double *)&v46;
  if ((v48 & 1) != 0) {
    double v49 = 0.0;
  }
  [v29 setRangingDuration:v49];
  uint64_t v50 = v119;
  sub_1001A4B84(v30, v119, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v51 = COERCE_DOUBLE(sub_10033A2E8());
  char v53 = v52;
  sub_1001A4BC8(v50, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v54 = *(double *)&v51;
  if ((v53 & 1) != 0) {
    double v54 = 0.0;
  }
  [v29 setPeerFoundDuration:v54];
  uint64_t v55 = v120;
  sub_1001A4B84(v30, v120, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v56 = COERCE_DOUBLE(sub_100339B30());
  char v58 = v57;
  sub_1001A4BC8(v55, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v59 = *(double *)&v56;
  if ((v58 & 1) != 0) {
    double v59 = 0.0;
  }
  [v29 setTotalDuration:v59];
  uint64_t v60 = v121;
  sub_1001A4B84(v30, v121, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v61 = COERCE_DOUBLE(sub_10033A708());
  char v63 = v62;
  sub_1001A4BC8(v60, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v64 = *(double *)&v61;
  if ((v63 & 1) != 0) {
    double v64 = 0.0;
  }
  [v29 setTimeSinceBoot:v64];
  uint64_t v65 = v122;
  sub_1001A4B84(v30, v122, type metadata accessor for SDAuthenticationLockSession.Metrics);
  *(double *)&uint64_t v66 = COERCE_DOUBLE(sub_10033A8F0());
  char v68 = v67;
  sub_1001A4BC8(v65, type metadata accessor for SDAuthenticationLockSession.Metrics);
  double v69 = *(double *)&v66;
  if ((v68 & 1) != 0) {
    double v69 = 0.0;
  }
  [v29 setTimeSinceRemoteUnlocked:v69];
  uint64_t v70 = (const char *)sub_10034F210(*(void *)(v1 + v118));
  BOOL v71 = sub_1003A0674(1uLL, (uint64_t)v70);
  *(void *)&double v72 = swift_bridgeObjectRelease(v70).n128_u64[0];
  if (v71)
  {
    uint64_t v73 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate;
    swift_beginAccess(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate, v123, 0LL, 0LL);
    sub_1001915A4(v73, (uint64_t)v124, &qword_100650630);
    uint64_t v74 = v125;
    if (v125)
    {
      uint64_t v75 = sub_10019A708(v124, v125);
      uint64_t v76 = *(void *)(v74 - 8);
      __chkstk_darwin(v75);
      uint64_t v78 = (char *)&v117 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v76 + 16))(v78);
      uint64_t v79 = sub_100187100((uint64_t)v124, &qword_100650630);
      sub_100476E64(v79, v80);
      uint64_t v82 = v81;
      uint64_t v84 = v83;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v74);
      swift_bridgeObjectRelease(v84);
    }

    else
    {
      sub_100187100((uint64_t)v124, &qword_100650630);
      uint64_t v82 = (const char *)0xE000000000000000LL;
    }

    NSString v89 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setWatchHardwareModel:", v89, swift_bridgeObjectRelease(v82).n128_f64[0]);

    sub_1001915A4(v73, (uint64_t)v124, &qword_100650630);
    uint64_t v90 = v125;
    if (v125)
    {
      uint64_t v91 = sub_10019A708(v124, v125);
      uint64_t v92 = *(void *)(v90 - 8);
      __chkstk_darwin(v91);
      unint64_t v94 = (char *)&v117 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v92 + 16))(v94);
      uint64_t v95 = sub_100187100((uint64_t)v124, &qword_100650630);
      sub_100476E64(v95, v96);
      uint64_t v98 = v97;
      uint64_t v100 = v99;
      (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v90);
      swift_bridgeObjectRelease(v98);
    }

    else
    {
      sub_100187100((uint64_t)v124, &qword_100650630);
      uint64_t v100 = (const char *)0xE000000000000000LL;
    }

    NSString v105 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setWatchSoftwareVersion:", v105, swift_bridgeObjectRelease(v100).n128_f64[0]);

    NSString v106 = [v29 watchHardwareModel];
    if (!v106)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
      uint64_t v109 = v108;
      NSString v106 = String._bridgeToObjectiveC()();
      *(void *)&double v107 = swift_bridgeObjectRelease(v109).n128_u64[0];
    }

    objc_msgSend(v29, "setRemoteHardwareModel:", v106, v107);

    id v110 = [v29 watchSoftwareVersion];
    if (v110)
    {
      NSString v111 = v110;
    }

    else
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
      unint64_t v116 = v115;
      NSString v111 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v116);
    }

    uint64_t v114 = &selRef_setRemoteSoftwareVersion_;
  }

  else
  {
    uint64_t v85 = v117;
    uint64_t v86 = v30 + *(int *)(v117 + 80);
    uint64_t v87 = *(const char **)(v86 + 8);
    if (v87) {
      uint64_t v88 = *(const char **)(v86 + 8);
    }
    else {
      uint64_t v88 = (const char *)0xE000000000000000LL;
    }
    swift_bridgeObjectRetain(v87, v72);
    NSString v101 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setRemoteHardwareModel:", v101, swift_bridgeObjectRelease(v88).n128_f64[0]);

    uint64_t v102 = v30 + *(int *)(v85 + 84);
    unint64_t v103 = *(const char **)(v102 + 8);
    if (v103) {
      unint64_t v104 = *(const char **)(v102 + 8);
    }
    else {
      unint64_t v104 = (const char *)0xE000000000000000LL;
    }
    swift_bridgeObjectRetain(v103);
    NSString v112 = String._bridgeToObjectiveC()();
    objc_msgSend(v29, "setRemoteSoftwareVersion:", v112, swift_bridgeObjectRelease(v104).n128_f64[0]);

    NSString v113 = String._bridgeToObjectiveC()();
    [v29 setWatchHardwareModel:v113];

    NSString v111 = String._bridgeToObjectiveC()();
    uint64_t v114 = &selRef_setWatchSoftwareVersion_;
  }

  objc_msgSend(v29, *v114, v111);

  [v29 submitEvent];
}

uint64_t sub_1003352FC()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_1006441B0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1006441B0, sub_10032E7C0);
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_10064F140);
  uint64_t v8 = v0;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.error.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v20 = v12;
    uint64_t v13 = type metadata accessor for UUID(0LL);
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    uint64_t v17 = (const char *)v16;
    uint64_t v19 = sub_10018CDB4(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4, v11 + 12);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Response timer fired for %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
  }

  return sub_100330178(12LL);
}

void sub_100335570(_BYTE *a1, Swift::UInt a2)
{
  uint64_t v3 = v2;
  id v6 = (int *)type metadata accessor for StateMetrics(0LL);
  uint64_t v7 = (uint64_t)&a1[v6[5]];
  uint64_t v8 = (int *)type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_100224D6C(v7, v3 + v8[16]);
  *(_BYTE *)(v3 + v8[19]) = *a1;
  uint64_t v10 = *(void *)&a1[v6[7]];
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1003AD708(a2), (v12 & 1) != 0))
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v10 + 56) + 16 * v11);
    uint64_t v15 = *v13;
    uint64_t v14 = (const char *)v13[1];
    *(void *)&double v9 = swift_bridgeObjectRetain(v14).n128_u64[0];
  }

  else
  {
    uint64_t v15 = 0LL;
    uint64_t v14 = 0LL;
  }

  unint64_t v16 = (void *)(v3 + v8[20]);
  unint64_t v17 = swift_bridgeObjectRelease((const char *)v16[1], v9).n128_u64[0];
  *unint64_t v16 = v15;
  v16[1] = v14;
  uint64_t v18 = *(void *)&a1[v6[8]];
  if (*(void *)(v18 + 16) && (unint64_t v19 = sub_1003AD708(a2), (v20 & 1) != 0))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 16 * v19);
    uint64_t v23 = *v21;
    uint64_t v22 = (const char *)v21[1];
    unint64_t v17 = swift_bridgeObjectRetain(v22).n128_u64[0];
  }

  else
  {
    uint64_t v23 = 0LL;
    uint64_t v22 = 0LL;
  }

  uint64_t v24 = v3 + v8[21];
  swift_bridgeObjectRelease(*(const char **)(v24 + 8), *(double *)&v17);
  *(void *)uint64_t v24 = v23;
  *(void *)(v24 + 8) = v22;
}

void sub_100335688()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v176 = (uint64_t)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v182 = (uint64_t)&v175 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v181 = (uint64_t)&v175 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v175 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v180 = (uint64_t)&v175 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v179 = (uint64_t)&v175 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v175 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v175 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v175 - v22;
  uint64_t v24 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v27 = (char *)&v175 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v28 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue);
  *(void *)id v27 = v28;
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, enum case for DispatchPredicate.onQueue(_:), v24);
  id v29 = v28;
  LOBYTE(v28) = _dispatchPreconditionTest(_:)(v27);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if ((v28 & 1) != 0)
  {
    uint64_t v30 = sub_100183098(&qword_100645398);
    id v27 = (char *)swift_allocObject(v30, 48LL, 7LL);
    __int128 v183 = xmmword_1004CDCA0;
    *((_OWORD *)v27 + 1) = xmmword_1004CDCA0;
    *((void *)v27 + 4) = UUID.uuidString.getter(v27);
    *((void *)v27 + 5) = v31;
    if (qword_1006441B0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1006441B0, sub_10032E7C0);
LABEL_3:
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v178 = sub_100186DE4(v32, (uint64_t)qword_10064F140);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v178);
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    char v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Logging metrics", v35, 2u);
    swift_slowDealloc(v35, -1LL, -1LL);
  }

  uint64_t v36 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics;
  swift_beginAccess(v36, v187, 0LL, 0LL);
  int v37 = *(unsigned __int8 *)(v36 + *(int *)(v2 + 76));
  if (v37 != 2)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(24LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD000000000000016LL;
    v185 = (const char *)0x800000010050AE90LL;
    if ((v37 & 1) != 0) {
      uint64_t v38 = 1702195828LL;
    }
    else {
      uint64_t v38 = 0x65736C6166LL;
    }
    if ((v37 & 1) != 0) {
      char v39 = (const char *)0xE400000000000000LL;
    }
    else {
      char v39 = (const char *)0xE500000000000000LL;
    }
    char v40 = v39;
    String.append(_:)(*(Swift::String *)&v38);
    swift_bridgeObjectRelease(v39);
    uint64_t v41 = v184;
    uint64_t v42 = v185;
    unint64_t v44 = *((void *)v27 + 2);
    unint64_t v43 = *((void *)v27 + 3);
    if (v44 >= v43 >> 1) {
      id v27 = sub_10018BC54((char *)(v43 > 1), v44 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v44 + 1;
    double v45 = &v27[16 * v44];
    *((void *)v45 + 4) = v41;
    *((void *)v45 + 5) = v42;
  }

  uint64_t v177 = v11;
  sub_1001A4B84(v36, (uint64_t)v23, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v46 = sub_10033A708();
  char v48 = v47;
  sub_1001A4BC8((uint64_t)v23, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v48 & 1) == 0)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(33LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD00000000000001ELL;
    v185 = (const char *)0x800000010050AE70LL;
    uint64_t v49 = sub_100183098(&qword_1006483E0);
    uint64_t v50 = swift_allocObject(v49, 72LL, 7LL);
    *(_OWORD *)(v50 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v50 + 56) = &type metadata for Double;
    *(void *)(v50 + 64) = &protocol witness table for Double;
    *(void *)(v50 + 32) = v46;
    v51._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v50);
    object = (const char *)v51._object;
    String.append(_:)(v51);
    swift_bridgeObjectRelease(object);
    v53._countAndFlagsBits = 115LL;
    v53._object = (void *)0xE100000000000000LL;
    String.append(_:)(v53);
    uint64_t v54 = v184;
    uint64_t v55 = v185;
    unint64_t v57 = *((void *)v27 + 2);
    unint64_t v56 = *((void *)v27 + 3);
    if (v57 >= v56 >> 1) {
      id v27 = sub_10018BC54((char *)(v56 > 1), v57 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v57 + 1;
    char v58 = &v27[16 * v57];
    *((void *)v58 + 4) = v54;
    *((void *)v58 + 5) = v55;
  }

  sub_1001A4B84(v36, (uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v59 = sub_10033A8F0();
  char v61 = v60;
  sub_1001A4BC8((uint64_t)v21, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v61 & 1) == 0)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(44LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD000000000000029LL;
    v185 = (const char *)0x800000010050AE40LL;
    uint64_t v62 = sub_100183098(&qword_1006483E0);
    uint64_t v63 = swift_allocObject(v62, 72LL, 7LL);
    *(_OWORD *)(v63 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v63 + 56) = &type metadata for Double;
    *(void *)(v63 + 64) = &protocol witness table for Double;
    *(void *)(v63 + 32) = v59;
    v64._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v63);
    uint64_t v65 = (const char *)v64._object;
    String.append(_:)(v64);
    swift_bridgeObjectRelease(v65);
    v66._countAndFlagsBits = 115LL;
    v66._object = (void *)0xE100000000000000LL;
    String.append(_:)(v66);
    uint64_t v67 = v184;
    char v68 = v185;
    unint64_t v70 = *((void *)v27 + 2);
    unint64_t v69 = *((void *)v27 + 3);
    if (v70 >= v69 >> 1) {
      id v27 = sub_10018BC54((char *)(v69 > 1), v70 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v70 + 1;
    BOOL v71 = &v27[16 * v70];
    *((void *)v71 + 4) = v67;
    *((void *)v71 + 5) = v68;
  }

  sub_1001A4B84(v36, (uint64_t)v18, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v72 = sub_100339D18();
  char v74 = v73;
  sub_1001A4BC8((uint64_t)v18, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v74 & 1) != 0)
  {
    uint64_t v84 = (uint64_t)v177;
  }

  else
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(27LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD000000000000018LL;
    v185 = (const char *)0x800000010050AE20LL;
    uint64_t v75 = sub_100183098(&qword_1006483E0);
    uint64_t v76 = swift_allocObject(v75, 72LL, 7LL);
    *(_OWORD *)(v76 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v76 + 56) = &type metadata for Double;
    *(void *)(v76 + 64) = &protocol witness table for Double;
    *(void *)(v76 + 32) = v72;
    v77._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v76);
    uint64_t v78 = (const char *)v77._object;
    String.append(_:)(v77);
    swift_bridgeObjectRelease(v78);
    v79._countAndFlagsBits = 115LL;
    v79._object = (void *)0xE100000000000000LL;
    String.append(_:)(v79);
    uint64_t v80 = v184;
    id v81 = v185;
    unint64_t v83 = *((void *)v27 + 2);
    unint64_t v82 = *((void *)v27 + 3);
    uint64_t v84 = (uint64_t)v177;
    if (v83 >= v82 >> 1) {
      id v27 = sub_10018BC54((char *)(v82 > 1), v83 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v83 + 1;
    uint64_t v85 = &v27[16 * v83];
    *((void *)v85 + 4) = v80;
    *((void *)v85 + 5) = v81;
  }

  uint64_t v86 = v179;
  sub_1001A4B84(v36, v179, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v87 = sub_100339F08();
  char v89 = v88;
  sub_1001A4BC8(v86, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v89 & 1) == 0)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(30LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD00000000000001BLL;
    v185 = (const char *)0x800000010050AE00LL;
    uint64_t v90 = sub_100183098(&qword_1006483E0);
    uint64_t v91 = swift_allocObject(v90, 72LL, 7LL);
    *(_OWORD *)(v91 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v91 + 56) = &type metadata for Double;
    *(void *)(v91 + 64) = &protocol witness table for Double;
    *(void *)(v91 + 32) = v87;
    v92._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v91);
    uint64_t v93 = (const char *)v92._object;
    String.append(_:)(v92);
    swift_bridgeObjectRelease(v93);
    v94._countAndFlagsBits = 115LL;
    v94._object = (void *)0xE100000000000000LL;
    String.append(_:)(v94);
    uint64_t v95 = v184;
    uint64_t v96 = v185;
    unint64_t v98 = *((void *)v27 + 2);
    unint64_t v97 = *((void *)v27 + 3);
    if (v98 >= v97 >> 1) {
      id v27 = sub_10018BC54((char *)(v97 > 1), v98 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v98 + 1;
    uint64_t v99 = &v27[16 * v98];
    *((void *)v99 + 4) = v95;
    *((void *)v99 + 5) = v96;
  }

  uint64_t v100 = v180;
  sub_1001A4B84(v36, v180, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v101 = sub_10033A0F8();
  char v103 = v102;
  sub_1001A4BC8(v100, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v103 & 1) == 0)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(31LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD00000000000001CLL;
    v185 = (const char *)0x800000010050ADE0LL;
    uint64_t v104 = sub_100183098(&qword_1006483E0);
    uint64_t v105 = swift_allocObject(v104, 72LL, 7LL);
    *(_OWORD *)(v105 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v105 + 56) = &type metadata for Double;
    *(void *)(v105 + 64) = &protocol witness table for Double;
    *(void *)(v105 + 32) = v101;
    v106._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v105);
    double v107 = (const char *)v106._object;
    String.append(_:)(v106);
    swift_bridgeObjectRelease(v107);
    v108._countAndFlagsBits = 115LL;
    v108._object = (void *)0xE100000000000000LL;
    String.append(_:)(v108);
    uint64_t v109 = v184;
    id v110 = v185;
    unint64_t v112 = *((void *)v27 + 2);
    unint64_t v111 = *((void *)v27 + 3);
    if (v112 >= v111 >> 1) {
      id v27 = sub_10018BC54((char *)(v111 > 1), v112 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v112 + 1;
    NSString v113 = &v27[16 * v112];
    *((void *)v113 + 4) = v109;
    *((void *)v113 + 5) = v110;
  }

  sub_1001A4B84(v36, v84, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v114 = sub_10033A2E8();
  char v116 = v115;
  sub_1001A4BC8(v84, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v116 & 1) == 0)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(28LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD000000000000019LL;
    v185 = (const char *)0x800000010050ADC0LL;
    uint64_t v117 = sub_100183098(&qword_1006483E0);
    uint64_t v118 = swift_allocObject(v117, 72LL, 7LL);
    *(_OWORD *)(v118 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v118 + 56) = &type metadata for Double;
    *(void *)(v118 + 64) = &protocol witness table for Double;
    *(void *)(v118 + 32) = v114;
    v119._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v118);
    uint64_t v120 = (const char *)v119._object;
    String.append(_:)(v119);
    swift_bridgeObjectRelease(v120);
    v121._countAndFlagsBits = 115LL;
    v121._object = (void *)0xE100000000000000LL;
    String.append(_:)(v121);
    uint64_t v122 = v184;
    unint64_t v123 = v185;
    unint64_t v125 = *((void *)v27 + 2);
    unint64_t v124 = *((void *)v27 + 3);
    if (v125 >= v124 >> 1) {
      id v27 = sub_10018BC54((char *)(v124 > 1), v125 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v125 + 1;
    os_log_type_t v126 = &v27[16 * v125];
    *((void *)v126 + 4) = v122;
    *((void *)v126 + 5) = v123;
  }

  uint64_t v127 = v181;
  sub_1001A4B84(v36, v181, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v128 = sub_10033A518();
  char v130 = v129;
  sub_1001A4BC8(v127, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v130 & 1) == 0)
  {
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(25LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD000000000000016LL;
    v185 = (const char *)0x800000010050ADA0LL;
    uint64_t v131 = sub_100183098(&qword_1006483E0);
    uint64_t v132 = swift_allocObject(v131, 72LL, 7LL);
    *(_OWORD *)(v132 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v132 + 56) = &type metadata for Double;
    *(void *)(v132 + 64) = &protocol witness table for Double;
    *(void *)(v132 + 32) = v128;
    v133._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v132);
    unint64_t v134 = (const char *)v133._object;
    String.append(_:)(v133);
    swift_bridgeObjectRelease(v134);
    v135._countAndFlagsBits = 115LL;
    v135._object = (void *)0xE100000000000000LL;
    String.append(_:)(v135);
    uint64_t v136 = v184;
    uint64_t v137 = v185;
    unint64_t v139 = *((void *)v27 + 2);
    unint64_t v138 = *((void *)v27 + 3);
    if (v139 >= v138 >> 1) {
      id v27 = sub_10018BC54((char *)(v138 > 1), v139 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v139 + 1;
    uint64_t v140 = &v27[16 * v139];
    *((void *)v140 + 4) = v136;
    *((void *)v140 + 5) = v137;
  }

  uint64_t v141 = v182;
  sub_1001A4B84(v36, v182, type metadata accessor for SDAuthenticationLockSession.Metrics);
  uint64_t v142 = sub_100339B30();
  char v144 = v143;
  sub_1001A4BC8(v141, type metadata accessor for SDAuthenticationLockSession.Metrics);
  if ((v144 & 1) == 0)
  {
    uint64_t v145 = v176;
    sub_1001A4B84(v36, v176, type metadata accessor for SDAuthenticationLockSession.Metrics);
    sub_100339D18();
    char v147 = v146;
    sub_1001A4BC8(v145, type metadata accessor for SDAuthenticationLockSession.Metrics);
    if ((v147 & 1) != 0) {
      uint64_t v148 = 0LL;
    }
    else {
      uint64_t v148 = 0xD000000000000013LL;
    }
    if ((v147 & 1) != 0) {
      uint64_t v149 = (void *)0xE000000000000000LL;
    }
    else {
      uint64_t v149 = (void *)0x800000010050AD80LL;
    }
    uint64_t v184 = 0LL;
    v185 = (const char *)0xE000000000000000LL;
    _StringGuts.grow(_:)(31LL);
    swift_bridgeObjectRelease(v185);
    uint64_t v184 = 0xD000000000000017LL;
    v185 = (const char *)0x800000010050AD60LL;
    v150._countAndFlagsBits = v148;
    v150._object = v149;
    String.append(_:)(v150);
    swift_bridgeObjectRelease((const char *)v149);
    v151._countAndFlagsBits = 2112800LL;
    v151._object = (void *)0xE300000000000000LL;
    String.append(_:)(v151);
    uint64_t v152 = sub_100183098(&qword_1006483E0);
    uint64_t v153 = swift_allocObject(v152, 72LL, 7LL);
    *(_OWORD *)(v153 + swift_weakDestroy(v0 + 16) = v183;
    *(void *)(v153 + 56) = &type metadata for Double;
    *(void *)(v153 + 64) = &protocol witness table for Double;
    *(void *)(v153 + 32) = v142;
    v154._countAndFlagsBits = String.init(format:_:)(1714564645LL, 0xE400000000000000LL, v153);
    v155 = (const char *)v154._object;
    String.append(_:)(v154);
    swift_bridgeObjectRelease(v155);
    v156._countAndFlagsBits = 115LL;
    v156._object = (void *)0xE100000000000000LL;
    String.append(_:)(v156);
    uint64_t v157 = v184;
    uint64_t v158 = v185;
    unint64_t v160 = *((void *)v27 + 2);
    unint64_t v159 = *((void *)v27 + 3);
    if (v160 >= v159 >> 1) {
      id v27 = sub_10018BC54((char *)(v159 > 1), v160 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v160 + 1;
    unint64_t v161 = &v27[16 * v160];
    *((void *)v161 + 4) = v157;
    *((void *)v161 + 5) = v158;
  }

  uint64_t v184 = (uint64_t)v27;
  uint64_t v162 = sub_100183098((uint64_t *)&unk_10064D7D0);
  uint64_t v163 = sub_1001CD538( (unint64_t *)&qword_100649800,  (uint64_t *)&unk_10064D7D0,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v164 = BidirectionalCollection<>.joined(separator:)(10LL, 0xE100000000000000LL, v162, v163);
  unint64_t v166 = v165;
  swift_bridgeObjectRelease(v27);
  id v167 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v168 = String._bridgeToObjectiveC()();
  NSString v169 = String._bridgeToObjectiveC()();
  [v167 setObject:v168 forKey:v169];

  swift_bridgeObjectRetain(v166);
  uint64_t v171 = (os_log_s *)Logger.logObject.getter(v170);
  os_log_type_t v172 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v171, v172))
  {
    v173 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v174 = swift_slowAlloc(32LL, -1LL);
    uint64_t v184 = v174;
    *(_DWORD *)v173 = 136315138;
    swift_bridgeObjectRetain(v166);
    uint64_t v186 = sub_10018CDB4(v164, (unint64_t)v166, &v184);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v186, v187, v173 + 4, v173 + 12);
    swift_bridgeObjectRelease_n(v166, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v171, v172, "%s", v173, 0xCu);
    swift_arrayDestroy(v174, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v174, -1LL, -1LL);
    swift_slowDealloc(v173, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(v166, 2LL);
  }

void sub_10033652C(char *a1)
{
  if (qword_1006441B0 != -1) {
    swift_once(&qword_1006441B0, sub_10032E7C0);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_10064F140);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Sending confirmation", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  uint64_t v7 = (uint64_t)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
  swift_beginAccess(&a1[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v11, 0LL, 0LL);
  sub_1001915A4(v7, (uint64_t)v12, &qword_100650630);
  if (v13)
  {
    sub_10019A6C4((uint64_t)v12, (uint64_t)v10);
    sub_100187100((uint64_t)v12, &qword_100650630);
    uint64_t v8 = (char *)*sub_10019A708(v10, v10[3]);
    uint64_t v9 = a1;
    sub_10033ABF8( v9,  v8,  type metadata accessor for SDAuthenticationLockSession,  (uint64_t (*)(uint64_t))sub_10033C900,  sub_1002DABCC,  (uint64_t (*)(uint64_t))sub_10033C900,  (uint64_t (*)(uint64_t))sub_10033C900);

    sub_10018709C(v10);
  }

  else
  {
    sub_100187100((uint64_t)v12, &qword_100650630);
  }

  v12[0] = 1;
  sub_100332784(0x100000000uLL);
}

void sub_1003366E0(uint64_t a1, void *a2, const char *a3)
{
  uint64_t v4 = v3;
  id v8 = [objc_allocWithZone((Class)SDAuthenticationResponse) init];
  uint64_t v9 = v8;
  uint64_t v10 = &qword_100644000;
  if (v8)
  {
    [v8 setVersion:1];
    unint64_t v11 = a2;
    id v12 = v9;
    UUID.uuidString.getter(v12);
    uint64_t v14 = v13;
    NSString v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setSessionID:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

    [v12 setErrorCode:a1];
    uint64_t v16 = v12;
    a2 = v11;
    id v17 = [v16 data];
    if (v17)
    {
      uint64_t v18 = v17;
      uint64_t v19 = a1;
      uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v17);
      unint64_t v22 = v21;

      uint64_t v23 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice];
      swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice], v53, 0LL, 0LL);
      sub_1001915A4(v23, (uint64_t)&v54, &qword_100654080);
      if (v55)
      {
        sub_1001CE0D0(&v54, (uint64_t)&v56);
        uint64_t v24 = (uint64_t)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate];
        swift_beginAccess(&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate], v52, 0LL, 0LL);
        sub_1001915A4(v24, (uint64_t)&v54, &qword_100650630);
        if (v55)
        {
          sub_10019A6C4((uint64_t)&v54, (uint64_t)v51);
          sub_100187100((uint64_t)&v54, &qword_100650630);
          sub_10019A708(v51, v51[3]);
          sub_1004641AC( v20,  v22,  (uint64_t)&v56,  1LL,  *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type]);
          sub_100189B20(v20, v22);
          sub_10018709C(&v56);
          sub_10018709C(v51);
        }

        else
        {
          sub_10018709C(&v56);
          sub_100189B20(v20, v22);
          sub_100187100((uint64_t)&v54, &qword_100650630);
        }

        a1 = v19;
        goto LABEL_16;
      }

      sub_100189B20(v20, v22);
      sub_100187100((uint64_t)&v54, &qword_100654080);
      a1 = v19;
    }
  }

  uint64_t v49 = a2;
  if (qword_1006441B0 != -1) {
    swift_once(&qword_1006441B0, sub_10032E7C0);
  }
  uint64_t v25 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v25, (uint64_t)qword_10064F140);
  id v26 = v9;
  id v27 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v28 = static os_log_type_t.error.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    char v48 = a3;
    id v29 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v29 = 138412290;
    if (v9)
    {
      uint64_t v56 = (uint64_t)v26;
      id v31 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v29 + 4, v29 + 12);
      uint64_t v32 = v9;
    }

    else
    {
      uint64_t v56 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v29 + 4, v29 + 12);
      uint64_t v32 = 0LL;
    }

    void *v30 = v32;

    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Could not convert response to data: %@", v29, 0xCu);
    uint64_t v33 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v30, 1LL, v33);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v29, -1LL, -1LL);

    a3 = v48;
    a2 = v49;
    a1 = a1;
    uint64_t v10 = &qword_100644000;
  }

  else
  {

    uint64_t v10 = &qword_100644000;
  }

uint64_t sub_100336D50()
{
  return sub_1001A4BC8( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics,  type metadata accessor for SDAuthenticationLockSession.Metrics);
}

uint64_t sub_100336E4C()
{
  return type metadata accessor for SDAuthenticationLockSession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationLockSession(uint64_t a1)
{
  return sub_1001A4AD0(a1, (uint64_t *)&unk_10064F1B0, (uint64_t)&nominal type descriptor for SDAuthenticationLockSession);
}

void sub_100336E68(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = &unk_1004D5F20;
    void v6[2] = &unk_1004D5F38;
    v6[3] = &unk_1004D5F20;
    _OWORD v6[4] = &unk_1004D5F50;
    uint64_t v4 = type metadata accessor for SDAuthenticationLockSession.Metrics(319LL);
    if (v5 <= 0x3F)
    {
      v6[5] = *(void *)(v4 - 8) + 64LL;
      v6[6] = &unk_1004D5F50;
      swift_updateClassMetadata2(a1, 256LL, 7LL, v6, a1 + 344);
    }
  }

uint64_t type metadata accessor for SDAuthenticationLockSession.Metrics(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_10064F218, (uint64_t)&nominal type descriptor for SDAuthenticationLockSession.Metrics);
}

uint64_t *sub_100336F24(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1LL, v7))
    {
      uint64_t v10 = sub_100183098(&qword_1006457E8);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0LL, 1LL, v7);
    }

    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1LL, v7))
    {
      uint64_t v15 = sub_100183098(&qword_1006457E8);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0LL, 1LL, v7);
    }

    uint64_t v16 = a3[6];
    id v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)((char *)a2 + v16), 1LL, v7))
    {
      uint64_t v19 = sub_100183098(&qword_1006457E8);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0LL, 1LL, v7);
    }

    uint64_t v20 = a3[7];
    unint64_t v21 = (char *)a1 + v20;
    unint64_t v22 = (char *)a2 + v20;
    if (v9((uint64_t *)((char *)a2 + v20), 1LL, v7))
    {
      uint64_t v23 = sub_100183098(&qword_1006457E8);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v22, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v21, 0LL, 1LL, v7);
    }

    uint64_t v24 = a3[8];
    uint64_t v25 = (char *)a1 + v24;
    id v26 = (char *)a2 + v24;
    if (v9((uint64_t *)((char *)a2 + v24), 1LL, v7))
    {
      uint64_t v27 = sub_100183098(&qword_1006457E8);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v25, v26, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v25, 0LL, 1LL, v7);
    }

    uint64_t v28 = a3[9];
    id v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    if (v9((uint64_t *)((char *)a2 + v28), 1LL, v7))
    {
      uint64_t v31 = sub_100183098(&qword_1006457E8);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v29, v30, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v29, 0LL, 1LL, v7);
    }

    uint64_t v32 = a3[10];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    if (v9((uint64_t *)((char *)a2 + v32), 1LL, v7))
    {
      uint64_t v35 = sub_100183098(&qword_1006457E8);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v34, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v33, 0LL, 1LL, v7);
    }

    uint64_t v36 = a3[11];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    if (v9((uint64_t *)((char *)a2 + v36), 1LL, v7))
    {
      uint64_t v39 = sub_100183098(&qword_1006457E8);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v38, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v37, 0LL, 1LL, v7);
    }

    uint64_t v40 = a3[12];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    if (v9((uint64_t *)((char *)a2 + v40), 1LL, v7))
    {
      uint64_t v43 = sub_100183098(&qword_1006457E8);
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v41, v42, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0LL, 1LL, v7);
    }

    uint64_t v44 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    if (v9((uint64_t *)((char *)a2 + v44), 1LL, v7))
    {
      uint64_t v47 = sub_100183098(&qword_1006457E8);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v45, v46, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v45, 0LL, 1LL, v7);
    }

    uint64_t v48 = a3[15];
    uint64_t v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    if (v9((uint64_t *)((char *)a2 + v48), 1LL, v7))
    {
      uint64_t v51 = sub_100183098(&qword_1006457E8);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v49, v50, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v49, 0LL, 1LL, v7);
    }

    uint64_t v52 = a3[16];
    Swift::String v53 = (char *)a1 + v52;
    __int128 v54 = (char *)a2 + v52;
    if (v9((uint64_t *)((char *)a2 + v52), 1LL, v7))
    {
      uint64_t v55 = sub_100183098(&qword_1006457E8);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v53, v54, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v53, 0LL, 1LL, v7);
    }

    uint64_t v56 = a3[17];
    unint64_t v57 = (char *)a1 + v56;
    char v58 = (char *)a2 + v56;
    if (v9((uint64_t *)((char *)a2 + v56), 1LL, v7))
    {
      uint64_t v59 = sub_100183098(&qword_1006457E8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v57, v58, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v57, 0LL, 1LL, v7);
    }

    uint64_t v60 = a3[18];
    uint64_t v61 = a3[19];
    uint64_t v62 = (char *)a1 + v60;
    uint64_t v63 = (char *)a2 + v60;
    *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    *((_BYTE *)a1 + v61) = *((_BYTE *)a2 + v61);
    uint64_t v64 = a3[20];
    uint64_t v65 = a3[21];
    Swift::String v66 = (uint64_t *)((char *)a1 + v64);
    uint64_t v67 = (uint64_t *)((char *)a2 + v64);
    char v68 = (const char *)v67[1];
    void *v66 = *v67;
    v66[1] = v68;
    unint64_t v69 = (uint64_t *)((char *)a1 + v65);
    unint64_t v70 = (uint64_t *)((char *)a2 + v65);
    BOOL v71 = (const char *)v70[1];
    void *v69 = *v70;
    v69[1] = v71;
    *(void *)&double v72 = swift_bridgeObjectRetain(v68).n128_u64[0];
    swift_bridgeObjectRetain(v71, v72);
  }

  return a1;
}

uint64_t sub_1003375A4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + a2[5];
  if (!v6(v7, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + a2[6];
  if (!v6(v8, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = a1 + a2[7];
  if (!v6(v9, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v10 = a1 + a2[8];
  if (!v6(v10, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v11 = a1 + a2[9];
  if (!v6(v11, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  }
  uint64_t v12 = a1 + a2[10];
  if (!v6(v12, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  }
  uint64_t v13 = a1 + a2[11];
  if (!v6(v13, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v13, v4);
  }
  uint64_t v14 = a1 + a2[12];
  if (!v6(v14, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v14, v4);
  }
  uint64_t v15 = a1 + a2[14];
  if (!v6(v15, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
  }
  uint64_t v16 = a1 + a2[15];
  if (!v6(v16, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v16, v4);
  }
  uint64_t v17 = a1 + a2[16];
  if (!v6(v17, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v4);
  }
  uint64_t v18 = a1 + a2[17];
  if (!v6(v18, 1LL, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v4);
  }
  swift_bridgeObjectRelease(*(void *)(a1 + a2[20] + 8));
  return swift_bridgeObjectRelease(*(void *)(a1 + a2[21] + 8));
}

char *sub_100337838(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(&a2[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1LL, v6))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
  }

  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1LL, v6))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  }

  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (v8(&a2[v26], 1LL, v6))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0LL, 1LL, v6);
  }

  uint64_t v30 = a3[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (v8(&a2[v30], 1LL, v6))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
  }

  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v8(&a2[v34], 1LL, v6))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0LL, 1LL, v6);
  }

  uint64_t v38 = a3[12];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  if (v8(&a2[v38], 1LL, v6))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v39, v40, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v39, 0LL, 1LL, v6);
  }

  uint64_t v42 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  if (v8(&a2[v42], 1LL, v6))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0LL, 1LL, v6);
  }

  uint64_t v46 = a3[15];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  if (v8(&a2[v46], 1LL, v6))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v47, v48, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v47, 0LL, 1LL, v6);
  }

  uint64_t v50 = a3[16];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  if (v8(&a2[v50], 1LL, v6))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v51, v52, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v51, 0LL, 1LL, v6);
  }

  uint64_t v54 = a3[17];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  if (v8(&a2[v54], 1LL, v6))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v55, v56, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0LL, 1LL, v6);
  }

  uint64_t v58 = a3[18];
  uint64_t v59 = a3[19];
  uint64_t v60 = &a1[v58];
  uint64_t v61 = &a2[v58];
  *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  a1[v59] = a2[v59];
  uint64_t v62 = a3[20];
  uint64_t v63 = a3[21];
  uint64_t v64 = &a1[v62];
  uint64_t v65 = &a2[v62];
  Swift::String v66 = (const char *)*((void *)v65 + 1);
  *(void *)uint64_t v64 = *(void *)v65;
  *((void *)v64 + 1) = v66;
  uint64_t v67 = &a1[v63];
  char v68 = &a2[v63];
  unint64_t v69 = (const char *)*((void *)v68 + 1);
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = v69;
  *(void *)&double v70 = swift_bridgeObjectRetain(v66).n128_u64[0];
  swift_bridgeObjectRetain(v69, v70);
  return a1;
}

char *sub_100337E8C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1LL, v6);
  int v22 = v8(v20, 1LL, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1LL, v6);
  int v28 = v8(v26, 1LL, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1LL, v6);
  int v34 = v8(v32, 1LL, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1LL, v6);
  int v40 = v8(v38, 1LL, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v37, v38, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0LL, 1LL, v6);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_36:
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v37, v38, v6);
LABEL_37:
  uint64_t v42 = a3[10];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = v8(&a1[v42], 1LL, v6);
  int v46 = v8(v44, 1LL, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v44, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0LL, 1LL, v6);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_42:
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v43, v44, v6);
LABEL_43:
  uint64_t v48 = a3[11];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = v8(&a1[v48], 1LL, v6);
  int v52 = v8(v50, 1LL, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v49, v50, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v49, 0LL, 1LL, v6);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_48:
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v49, v50, v6);
LABEL_49:
  uint64_t v54 = a3[12];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  int v57 = v8(&a1[v54], 1LL, v6);
  int v58 = v8(v56, 1LL, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v55, v56, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0LL, 1LL, v6);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_54:
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v55, v56, v6);
LABEL_55:
  a1[a3[13]] = a2[a3[13]];
  uint64_t v60 = a3[14];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  int v63 = v8(&a1[v60], 1LL, v6);
  int v64 = v8(v62, 1LL, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v61, 0LL, 1LL, v6);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_60:
    uint64_t v65 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v61, v62, v6);
LABEL_61:
  uint64_t v66 = a3[15];
  uint64_t v67 = &a1[v66];
  char v68 = &a2[v66];
  int v69 = v8(&a1[v66], 1LL, v6);
  int v70 = v8(v68, 1LL, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v67, 0LL, 1LL, v6);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_66:
    uint64_t v71 = sub_100183098(&qword_1006457E8);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v67, v68, v6);
LABEL_67:
  uint64_t v72 = a3[16];
  char v73 = &a1[v72];
  char v74 = &a2[v72];
  int v75 = v8(&a1[v72], 1LL, v6);
  int v76 = v8(v74, 1LL, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v73, v74, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v73, 0LL, 1LL, v6);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_72:
    uint64_t v77 = sub_100183098(&qword_1006457E8);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v73, v74, v6);
LABEL_73:
  uint64_t v78 = a3[17];
  Swift::String v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  int v81 = v8(&a1[v78], 1LL, v6);
  int v82 = v8(v80, 1LL, v6);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v79, v80, v6);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
    goto LABEL_78;
  }

  if (v82)
  {
LABEL_78:
    uint64_t v83 = sub_100183098(&qword_1006457E8);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v79, v80, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v79, 0LL, 1LL, v6);
LABEL_79:
  uint64_t v84 = a3[18];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = &a2[v84];
  int v87 = *(_DWORD *)v86;
  v85[4] = v86[4];
  *(_DWORD *)uint64_t v85 = v87;
  a1[a3[19]] = a2[a3[19]];
  uint64_t v88 = a3[20];
  char v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  *(void *)char v89 = *(void *)v90;
  uint64_t v91 = (const char *)*((void *)v90 + 1);
  Swift::String v92 = (const char *)*((void *)v89 + 1);
  *((void *)v89 + 1) = v91;
  *(void *)&double v93 = swift_bridgeObjectRetain(v91).n128_u64[0];
  *(void *)&double v94 = swift_bridgeObjectRelease(v92, v93).n128_u64[0];
  uint64_t v95 = a3[21];
  uint64_t v96 = &a1[v95];
  unint64_t v97 = &a2[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  unint64_t v98 = (const char *)*((void *)v97 + 1);
  uint64_t v99 = (const char *)*((void *)v96 + 1);
  *((void *)v96 + 1) = v98;
  *(void *)&double v100 = swift_bridgeObjectRetain(v98, v94).n128_u64[0];
  swift_bridgeObjectRelease(v99, v100);
  return a1;
}

char *sub_10033888C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1LL, v6))
  {
    uint64_t v9 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
  }

  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  uint64_t v14 = a3[6];
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(&a2[v14], 1LL, v6))
  {
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0LL, 1LL, v6);
  }

  uint64_t v18 = a3[7];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  if (v8(&a2[v18], 1LL, v6))
  {
    uint64_t v21 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
  }

  uint64_t v22 = a3[8];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  if (v8(&a2[v22], 1LL, v6))
  {
    uint64_t v25 = sub_100183098(&qword_1006457E8);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v23, v24, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v23, 0LL, 1LL, v6);
  }

  uint64_t v26 = a3[9];
  int v27 = &a1[v26];
  int v28 = &a2[v26];
  if (v8(&a2[v26], 1LL, v6))
  {
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v27, v28, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v27, 0LL, 1LL, v6);
  }

  uint64_t v30 = a3[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  if (v8(&a2[v30], 1LL, v6))
  {
    uint64_t v33 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
  }

  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  if (v8(&a2[v34], 1LL, v6))
  {
    uint64_t v37 = sub_100183098(&qword_1006457E8);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v35, v36, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v35, 0LL, 1LL, v6);
  }

  uint64_t v38 = a3[12];
  int v39 = &a1[v38];
  int v40 = &a2[v38];
  if (v8(&a2[v38], 1LL, v6))
  {
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v39, v40, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v39, 0LL, 1LL, v6);
  }

  uint64_t v42 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  if (v8(&a2[v42], 1LL, v6))
  {
    uint64_t v45 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0LL, 1LL, v6);
  }

  uint64_t v46 = a3[15];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  if (v8(&a2[v46], 1LL, v6))
  {
    uint64_t v49 = sub_100183098(&qword_1006457E8);
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v47, v48, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v47, 0LL, 1LL, v6);
  }

  uint64_t v50 = a3[16];
  int v51 = &a1[v50];
  int v52 = &a2[v50];
  if (v8(&a2[v50], 1LL, v6))
  {
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v51, v52, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v51, 0LL, 1LL, v6);
  }

  uint64_t v54 = a3[17];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  if (v8(&a2[v54], 1LL, v6))
  {
    uint64_t v57 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0LL, 1LL, v6);
  }

  uint64_t v58 = a3[18];
  uint64_t v59 = a3[19];
  uint64_t v60 = &a1[v58];
  uint64_t v61 = &a2[v58];
  *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
  v60[4] = v61[4];
  a1[v59] = a2[v59];
  uint64_t v62 = a3[21];
  *(_OWORD *)&a1[a3[20]] = *(_OWORD *)&a2[a3[20]];
  *(_OWORD *)&a1[v62] = *(_OWORD *)&a2[v62];
  return a1;
}

char *sub_100338EC4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1LL, v6);
  int v10 = v8(a2, 1LL, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0LL, 1LL, v6);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100183098(&qword_1006457E8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1LL, v6);
  int v16 = v8(v14, 1LL, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0LL, 1LL, v6);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_100183098(&qword_1006457E8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
    goto LABEL_13;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1LL, v6);
  int v22 = v8(v20, 1LL, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0LL, 1LL, v6);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
LABEL_18:
    uint64_t v23 = sub_100183098(&qword_1006457E8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_19;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
LABEL_19:
  uint64_t v24 = a3[7];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  int v27 = v8(&a1[v24], 1LL, v6);
  int v28 = v8(v26, 1LL, v6);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v25, v26, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v25, 0LL, 1LL, v6);
      goto LABEL_25;
    }

    goto LABEL_24;
  }

  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
LABEL_24:
    uint64_t v29 = sub_100183098(&qword_1006457E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_25;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v25, v26, v6);
LABEL_25:
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  int v33 = v8(&a1[v30], 1LL, v6);
  int v34 = v8(v32, 1LL, v6);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v31, v32, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v31, 0LL, 1LL, v6);
      goto LABEL_31;
    }

    goto LABEL_30;
  }

  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v31, v6);
LABEL_30:
    uint64_t v35 = sub_100183098(&qword_1006457E8);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    goto LABEL_31;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v31, v32, v6);
LABEL_31:
  uint64_t v36 = a3[9];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  int v39 = v8(&a1[v36], 1LL, v6);
  int v40 = v8(v38, 1LL, v6);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v37, v38, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v37, 0LL, 1LL, v6);
      goto LABEL_37;
    }

    goto LABEL_36;
  }

  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v37, v6);
LABEL_36:
    uint64_t v41 = sub_100183098(&qword_1006457E8);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    goto LABEL_37;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v37, v38, v6);
LABEL_37:
  uint64_t v42 = a3[10];
  uint64_t v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  int v45 = v8(&a1[v42], 1LL, v6);
  int v46 = v8(v44, 1LL, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v44, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v43, 0LL, 1LL, v6);
      goto LABEL_43;
    }

    goto LABEL_42;
  }

  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_42:
    uint64_t v47 = sub_100183098(&qword_1006457E8);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64LL));
    goto LABEL_43;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v43, v44, v6);
LABEL_43:
  uint64_t v48 = a3[11];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  int v51 = v8(&a1[v48], 1LL, v6);
  int v52 = v8(v50, 1LL, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v49, v50, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v49, 0LL, 1LL, v6);
      goto LABEL_49;
    }

    goto LABEL_48;
  }

  if (v52)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
LABEL_48:
    uint64_t v53 = sub_100183098(&qword_1006457E8);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64LL));
    goto LABEL_49;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v49, v50, v6);
LABEL_49:
  uint64_t v54 = a3[12];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  int v57 = v8(&a1[v54], 1LL, v6);
  int v58 = v8(v56, 1LL, v6);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v55, v56, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v55, 0LL, 1LL, v6);
      goto LABEL_55;
    }

    goto LABEL_54;
  }

  if (v58)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v55, v6);
LABEL_54:
    uint64_t v59 = sub_100183098(&qword_1006457E8);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64LL));
    goto LABEL_55;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v55, v56, v6);
LABEL_55:
  uint64_t v60 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  int v63 = v8(&a1[v60], 1LL, v6);
  int v64 = v8(v62, 1LL, v6);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v61, v62, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v61, 0LL, 1LL, v6);
      goto LABEL_61;
    }

    goto LABEL_60;
  }

  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v61, v6);
LABEL_60:
    uint64_t v65 = sub_100183098(&qword_1006457E8);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64LL));
    goto LABEL_61;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v61, v62, v6);
LABEL_61:
  uint64_t v66 = a3[15];
  uint64_t v67 = &a1[v66];
  char v68 = &a2[v66];
  int v69 = v8(&a1[v66], 1LL, v6);
  int v70 = v8(v68, 1LL, v6);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v67, v68, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v67, 0LL, 1LL, v6);
      goto LABEL_67;
    }

    goto LABEL_66;
  }

  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v67, v6);
LABEL_66:
    uint64_t v71 = sub_100183098(&qword_1006457E8);
    memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64LL));
    goto LABEL_67;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v67, v68, v6);
LABEL_67:
  uint64_t v72 = a3[16];
  char v73 = &a1[v72];
  char v74 = &a2[v72];
  int v75 = v8(&a1[v72], 1LL, v6);
  int v76 = v8(v74, 1LL, v6);
  if (v75)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v73, v74, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v73, 0LL, 1LL, v6);
      goto LABEL_73;
    }

    goto LABEL_72;
  }

  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v73, v6);
LABEL_72:
    uint64_t v77 = sub_100183098(&qword_1006457E8);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64LL));
    goto LABEL_73;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v73, v74, v6);
LABEL_73:
  uint64_t v78 = a3[17];
  Swift::String v79 = &a1[v78];
  uint64_t v80 = &a2[v78];
  int v81 = v8(&a1[v78], 1LL, v6);
  int v82 = v8(v80, 1LL, v6);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v79, v80, v6);
      goto LABEL_79;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v79, v6);
    goto LABEL_78;
  }

  if (v82)
  {
LABEL_78:
    uint64_t v83 = sub_100183098(&qword_1006457E8);
    memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64LL));
    goto LABEL_79;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v79, v80, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v79, 0LL, 1LL, v6);
LABEL_79:
  uint64_t v84 = a3[18];
  uint64_t v85 = a3[19];
  uint64_t v86 = &a1[v84];
  int v87 = &a2[v84];
  *(_DWORD *)uint64_t v86 = *(_DWORD *)v87;
  v86[4] = v87[4];
  a1[v85] = a2[v85];
  uint64_t v88 = a3[20];
  char v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  uint64_t v92 = *(void *)v90;
  uint64_t v91 = *((void *)v90 + 1);
  double v93 = (const char *)*((void *)v89 + 1);
  *(void *)char v89 = v92;
  *((void *)v89 + 1) = v91;
  *(void *)&double v94 = swift_bridgeObjectRelease(v93).n128_u64[0];
  uint64_t v95 = a3[21];
  uint64_t v96 = &a1[v95];
  unint64_t v97 = &a2[v95];
  uint64_t v99 = *(void *)v97;
  uint64_t v98 = *((void *)v97 + 1);
  double v100 = (const char *)*((void *)v96 + 1);
  *(void *)uint64_t v96 = v99;
  *((void *)v96 + 1) = v98;
  swift_bridgeObjectRelease(v100, v94);
  return a1;
}

uint64_t sub_10033989C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003398A8);
}

uint64_t sub_1003398A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100183098(&qword_1006457E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 80) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100339938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100339944);
}

uint64_t sub_100339944(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100183098(&qword_1006457E8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 80) + 8) = a2;
  return result;
}

void sub_1003399C4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = v4[0];
    v4[2] = v4[0];
    void v4[3] = v4[0];
    _DWORD v4[4] = v4[0];
    v4[5] = v4[0];
    void v4[6] = v4[0];
    void v4[7] = v4[0];
    v4[8] = v4[0];
    v4[9] = &unk_1004D5F50;
    v4[10] = v4[0];
    v4[11] = v4[0];
    v4[12] = v4[0];
    v4[13] = v4[0];
    v4[14] = &unk_1004D5F70;
    v4[15] = &unk_1004D5F88;
    v4[16] = &unk_1004D5FA0;
    v4[17] = &unk_1004D5FA0;
    swift_initStructMetadata(a1, 256LL, 18LL, v4, a1 + 16);
  }

uint64_t sub_100339A6C(uint64_t a1)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_1001C9860(a1, v3, &qword_1006457E8);
  return swift_endAccess(v5);
}

void sub_100339AD0()
{
}

void sub_100339AF0(void *a1)
{
}

void sub_100339B10(void *a1)
{
}

uint64_t sub_100339B30()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  sub_1001915A4(v0, (uint64_t)v6, &qword_1006457E8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1LL, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v15, &qword_1006457E8);
    return 0LL;
  }

  int v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v17 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v17 + 20), (uint64_t)v4, &qword_1006457E8);
  if (v14(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }

  v16(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_100339D18()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 24), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0 + *(int *)(v14 + 28), (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_100339F08()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 32), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0 + *(int *)(v14 + 36), (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10033A0F8()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 40), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0 + *(int *)(v14 + 44), (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10033A2E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  if ((*(_BYTE *)(v1 + *(int *)(v15 + 52)) & 1) != 0)
  {
    *(double *)&uint64_t result = 0.0;
    return result;
  }

  uint64_t v17 = v15;
  sub_1001915A4(v1 + *(int *)(v15 + 48), (uint64_t)v7, &qword_1006457E8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v18(v7, 1LL, v8) == 1)
  {
    uint64_t v19 = (uint64_t)v7;
LABEL_7:
    sub_100187100(v19, &qword_1006457E8);
    *(double *)&uint64_t result = 0.0;
    return result;
  }

  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v20(v14, v7, v8);
  sub_1001915A4(v1 + *(int *)(v17 + 40), (uint64_t)v5, &qword_1006457E8);
  if (v18(v5, 1LL, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v19 = (uint64_t)v5;
    goto LABEL_7;
  }

  v20(v12, v5, v8);
  double v21 = Date.timeIntervalSince(_:)(v12);
  uint64_t v22 = sub_10033A0F8();
  char v24 = v23;
  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v12, v8);
  v25(v14, v8);
  double v26 = *(double *)&v22;
  if ((v24 & 1) != 0) {
    double v26 = 0.0;
  }
  *(double *)&uint64_t result = v21 - v26;
  return result;
}

uint64_t sub_10033A518()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 56), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0 + *(int *)(v14 + 60), (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10033A708()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v14 + 64), (uint64_t)v6, &qword_1006457E8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v15(v6, 1LL, v7) == 1)
  {
    uint64_t v16 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v16, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v17(v13, v6, v7);
  sub_1001915A4(v0, (uint64_t)v4, &qword_1006457E8);
  if (v15(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v16 = (uint64_t)v4;
    goto LABEL_5;
  }

  v17(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10033A8F0()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v21 - v12;
  sub_1001915A4(v0, (uint64_t)v6, &qword_1006457E8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1LL, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
LABEL_5:
    sub_100187100(v15, &qword_1006457E8);
    return 0LL;
  }

  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  uint64_t v17 = type metadata accessor for SDAuthenticationLockSession.Metrics(0LL);
  sub_1001915A4(v0 + *(int *)(v17 + 68), (uint64_t)v4, &qword_1006457E8);
  if (v14(v4, 1LL, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    uint64_t v15 = (uint64_t)v4;
    goto LABEL_5;
  }

  v16(v11, v4, v7);
  double v19 = Date.timeIntervalSince(_:)(v11);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  v20(v13, v7);
  return *(void *)&v19;
}

uint64_t sub_10033AAD8()
{
  swift_bridgeObjectRelease(*(const char **)(v0 + 40));
  sub_100189B20(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL);
}

uint64_t sub_10033AB14(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc(dword_10064F294);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100195708;
  return sub_100333A28(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10033ABA0(void *a1, char *a2)
{
  return sub_10033ABF8( a1,  a2,  type metadata accessor for SDAuthenticationPairingLockSession,  (uint64_t (*)(uint64_t))sub_10033CEEC,  sub_1002DB064,  (uint64_t (*)(uint64_t))sub_10033CEEC,  (uint64_t (*)(uint64_t))sub_10033CEEC);
}

uint64_t sub_10033ABCC(void *a1, char *a2)
{
  return sub_10033ABF8( a1,  a2,  type metadata accessor for SDAuthenticationKeySession,  (uint64_t (*)(uint64_t))sub_10033CEEC,  sub_1002DB064,  (uint64_t (*)(uint64_t))sub_10033CEEC,  (uint64_t (*)(uint64_t))sub_10033CEEC);
}

uint64_t sub_10033ABF8( void *a1, char *a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t (*a5)(void), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t))
{
  v282 = a7;
  v283 = a6;
  v287 = a4;
  uint64_t v11 = sub_100183098(&qword_10064DA60);
  uint64_t v12 = __chkstk_darwin(v11);
  v277 = (char *)&v274 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v274 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v275 = (uint64_t)&v274 - v18;
  __chkstk_darwin(v17);
  uint64_t v276 = (uint64_t)&v274 - v19;
  uint64_t v20 = sub_100183098(&qword_1006457E8);
  uint64_t v21 = __chkstk_darwin(v20);
  v280 = (char *)&v274 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21);
  uint64_t v279 = (uint64_t)&v274 - v23;
  uint64_t v289 = type metadata accessor for Logger(0LL);
  uint64_t v284 = *(void *)(v289 - 8);
  __chkstk_darwin(v289);
  v281 = (char *)&v274 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v292 = type metadata accessor for UUID(0LL);
  uint64_t v25 = *(void (***)(char *, uint64_t))(v292 - 8);
  uint64_t v26 = __chkstk_darwin(v292);
  v274 = (char *)&v274 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = __chkstk_darwin(v26);
  v290 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v274 - v29);
  __chkstk_darwin(v28);
  v291 = (char *)&v274 - v30;
  uint64_t v31 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  int v34 = (char **)((char *)&v274 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v35 = a3(0LL);
  v316[4] = &off_1005DC6D0;
  uint64_t v36 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  v316[3] = v35;
  v316[0] = a1;
  void *v34 = v36;
  (*(void (**)(void *, void, uint64_t))(v32 + 104))(v34, enum case for DispatchPredicate.onQueue(_:), v31);
  id v37 = a1;
  id v38 = v36;
  LOBYTE(a1) = _dispatchPreconditionTest(_:)(v34);
  (*(void (**)(void *, uint64_t))(v32 + 8))(v34, v31);
  if ((a1 & 1) != 0)
  {
    if (qword_100644408 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644408, sub_100458568);
LABEL_3:
  uint64_t v39 = sub_100186DE4(v289, (uint64_t)qword_100656748);
  uint64_t v40 = sub_10019A6C4((uint64_t)v316, (uint64_t)v313);
  uint64_t v285 = v39;
  uint64_t v41 = (os_log_s *)Logger.logObject.getter(v40);
  os_log_type_t v42 = static os_log_type_t.default.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  v286 = a5;
  v288 = a2;
  v278 = v16;
  if (v43)
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v45 = swift_slowAlloc(32LL, -1LL);
    *(void *)&__int128 v305 = v45;
    *(_DWORD *)uint64_t v44 = 136315138;
    sub_10019A6C4((uint64_t)v313, (uint64_t)&v308);
    uint64_t v46 = sub_100183098((uint64_t *)&unk_10064B7A0);
    uint64_t v47 = String.init<A>(describing:)(&v308, v46);
    uint64_t v49 = (const char *)v48;
    uint64_t v308 = sub_10018CDB4(v47, v48, (uint64_t *)&v305);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v308, &v309, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease(v49);
    sub_10018709C(v313);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Session did complete: %s", v44, 0xCu);
    swift_arrayDestroy(v45, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1LL, -1LL);
    uint64_t v50 = v44;
    a2 = v288;
    swift_slowDealloc(v50, -1LL, -1LL);
  }

  else
  {
    sub_10018709C(v313);
  }

  uint64_t v51 = v316[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v316[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice, v312, 0LL, 0LL);
  sub_1001915A4(v51, (uint64_t)v313, &qword_100654080);
  uint64_t v52 = v314;
  if (v314)
  {
    uint64_t v53 = v315;
    sub_10019A708(v313, v314);
    uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53);
    uint64_t v56 = v55;
    sub_10018709C(v313);
    if (v56)
    {
      uint64_t v57 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager];
      if (v57)
      {
        swift_retain(*(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager]);
        sub_10021F8C0(v54, v56);
        swift_release(v57);
      }

      swift_bridgeObjectRelease(v56);
    }
  }

  else
  {
    sub_100187100((uint64_t)v313, &qword_100654080);
  }

  sub_10019A6C4((uint64_t)v316, (uint64_t)&v308);
  uint64_t v58 = sub_100183098((uint64_t *)&unk_10064B7A0);
  uint64_t v59 = sub_100183098(&qword_1006452E0);
  if (swift_dynamicCast(&v305, &v308, v58, v59, 6LL))
  {
    uint64_t v60 = sub_1001CE0D0(&v305, (uint64_t)v313);
    __chkstk_darwin(v60);
    *(&v274 - 2) = (char *)v313;
    uint64_t v61 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions];
    swift_beginAccess(&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions], &v308, 33LL, 0LL);
    uint64_t v62 = 0LL;
    sub_1002D8C6C(v287, (uint64_t)(&v274 - 4));
    uint64_t v64 = *(void *)(*(void *)v61 + 16LL);
    if (v64 >= v63)
    {
      v287 = 0LL;
      sub_1003C0D5C(v63, v64);
      swift_endAccess(&v308);
      uint64_t v65 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions];
      *(void *)&double v66 = swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions],  &v297,  0LL,  0LL).n128_u64[0];
      uint64_t v67 = *(const char **)v65;
      uint64_t v68 = *(void *)(*(void *)v65 + 16LL);
      if (!v68)
      {
LABEL_33:
        uint64_t v107 = v314;
        uint64_t v106 = v315;
        sub_10019A708(v313, v314);
        (*(void (**)(uint64_t))(*(void *)(v106 + 8) + 88LL))(v107);
        a2 = v288;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong( &v288[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v108);
        if (!Strong)
        {
LABEL_90:
          uint64_t v97 = sub_10018709C(v313);
LABEL_91:
          uint64_t v252 = v316[0];
          uint64_t v253 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type;
          unint64_t v254 = *(void *)(v316[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
          Swift::UInt8 v255 = SFDeviceClassCodeGet(v97, v98);
          v256 = (const char *)sub_10034F1E0(v254);
          BOOL v257 = sub_1003A0760(8u, (uint64_t)v256);
          __n128 v258 = swift_bridgeObjectRelease(v256);
          if (v257)
          {
          }

          else
          {
            v259 = (const char *)sub_10034F1E0(v254);
            BOOL v260 = sub_1003A0760(v255, (uint64_t)v259);
            swift_bridgeObjectRelease(v259);
            if (!v260) {
              return sub_10018709C(v316);
            }
          }

          v261 = *(char **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager];
          char v262 = sub_10034E9D8(*(void *)(v252 + v253));
          uint64_t v263 = v252 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
          swift_beginAccess( v252 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice,  &v308,  0LL,  0LL);
          sub_1001915A4(v263, (uint64_t)v313, &qword_100654080);
          sub_1003F0DB4(v262);
          v265 = v264;
          uint64_t v267 = v266;
          uint64_t ObjectType = swift_getObjectType(v264);
          uint64_t v269 = (*(uint64_t (**)(uint64_t, uint64_t))(v267 + 56))(ObjectType, v267);
          __chkstk_darwin(v269);
          *(&v274 - 4) = v265;
          *(&v274 - 3) = (char *)v267;
          v271 = v270 + 4;
          *(&v274 - 2) = (char *)v313;
          *(&v274 - 1) = v261;
          os_unfair_lock_lock(v270 + 4);
          sub_1002737FC(v272, v286);
          os_unfair_lock_unlock(v271);
          swift_unknownObjectRelease(v265);
          sub_100187100((uint64_t)v313, &qword_100654080);
          return sub_10018709C(v316);
        }

        id v110 = (void *)Strong;
        uint64_t v112 = v314;
        uint64_t v111 = v315;
        sub_10019A708(v313, v314);
        NSString v113 = v291;
        (*(void (**)(uint64_t))(*(void *)(v111 + 8) + 32LL))(v112);
        v114.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        v25[1](v113, v292);
        [v110 manager:a2 didCompleteAuthenticationFor:v114.super.isa];
LABEL_35:

        swift_unknownObjectRelease(v110);
        goto LABEL_90;
      }

      uint64_t v289 = v65;
      swift_bridgeObjectRetain(v67, v66);
      uint64_t v69 = 0LL;
      unint64_t v70 = 0LL;
      uint64_t v62 = (char *)v25;
      uint64_t v71 = v291;
      while (1)
      {
        uint64_t v73 = *(void *)&v67[v69 + 56];
        uint64_t v72 = *(void *)&v67[v69 + 64];
        sub_10019A708(&v67[v69 + 32], v73);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v72 + 8) + 8LL) + 32LL))(v73);
        uint64_t v75 = v314;
        uint64_t v74 = v315;
        sub_10019A708(v313, v314);
        int v76 = v290;
        (*(void (**)(uint64_t))(*(void *)(v74 + 8) + 32LL))(v75);
        LOBYTE(v74) = static UUID.== infix(_:_:)(v71, v76);
        uint64_t v77 = (void (*)(uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t))*((void *)v62 + 1);
        uint64_t v78 = v76;
        uint64_t v79 = v292;
        v77(v78, v292);
        v77((uint64_t (**)(uint64_t, uint64_t, uint64_t))v71, v79);
        if ((v74 & 1) != 0) {
          break;
        }
        ++v70;
        v69 += 40LL;
        if (v68 == v70)
        {
          uint64_t v25 = (void (**)(char *, uint64_t))v62;
          swift_bridgeObjectRelease(v67);
          goto LABEL_33;
        }
      }

      swift_bridgeObjectRelease(v67);
      uint64_t v99 = v289;
      if (v70 < *(void *)(*(void *)v289 + 16LL))
      {
        sub_10019A6C4(*(void *)v289 + v69 + 32, (uint64_t)&v308);
        uint64_t v101 = v310;
        uint64_t v100 = v311;
        sub_10019A708(&v308, v310);
        uint64_t v25 = (void (**)(char *, uint64_t))v62;
        if ((*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v100 + 8) + 8LL) + 40LL))(v101) == 1)
        {
          char v102 = (os_log_s *)Logger.logObject.getter(1LL);
          os_log_type_t v103 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v102, v103))
          {
            uint64_t v104 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v104 = 0;
            _os_log_impl((void *)&_mh_execute_header, v102, v103, "Posting authenticated notification", v104, 2u);
            uint64_t v105 = v104;
            uint64_t v99 = v289;
            swift_slowDealloc(v105, -1LL, -1LL);
          }

          sub_100475930();
        }

        swift_beginAccess(v99, &v293, 33LL, 0LL);
        sub_1001C829C(v70, (uint64_t)&v305);
        swift_endAccess(&v293);
        sub_10018709C(&v305);
        sub_10018709C(&v308);
        goto LABEL_33;
      }

      goto LABEL_102;
    }

    __break(1u);
    goto LABEL_100;
  }

  uint64_t v307 = 0LL;
  __int128 v305 = 0u;
  __int128 v306 = 0u;
  sub_100187100((uint64_t)&v305, &qword_10064F2A0);
  sub_10019A6C4((uint64_t)v316, (uint64_t)&v308);
  uint64_t v80 = sub_100183098((uint64_t *)&unk_10064D7E0);
  if ((swift_dynamicCast(&v305, &v308, v58, v80, 6LL) & 1) == 0)
  {
    uint64_t v307 = 0LL;
    __int128 v305 = 0u;
    __int128 v306 = 0u;
    uint64_t v97 = sub_100187100((uint64_t)&v305, &qword_10064F2A8);
    v287 = 0LL;
    goto LABEL_91;
  }

  uint64_t v81 = sub_1001CE0D0(&v305, (uint64_t)v313);
  __chkstk_darwin(v81);
  *(&v274 - 2) = (char *)v313;
  int v82 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions];
  swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions],  &v308,  33LL,  0LL);
  uint64_t v62 = 0LL;
  sub_1002D89B0(v283, (uint64_t)(&v274 - 4));
  uint64_t v84 = *(void *)(*(void *)v82 + 16LL);
  if (v84 < v83)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }

  sub_1003C0D98(v83, v84);
  uint64_t v85 = swift_endAccess(&v308);
  __chkstk_darwin(v85);
  *(&v274 - 2) = (char *)v313;
  uint64_t v86 = &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions];
  swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions],  &v308,  33LL,  0LL);
  sub_1002D89D4(v282, (uint64_t)(&v274 - 4));
  uint64_t v88 = *(void *)(*(void *)v86 + 16LL);
  if (v88 < v87)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }

  v287 = 0LL;
  sub_1003C0D84(v87, v88);
  swift_endAccess(&v308);
  uint64_t v90 = v314;
  uint64_t v89 = v315;
  sub_10019A708(v313, v314);
  (*(void (**)(uint64_t))(*(void *)(v89 + 8) + 88LL))(v90);
  uint64_t v92 = v314;
  uint64_t v91 = v315;
  sub_10019A708(v313, v314);
  uint64_t v94 = v314;
  uint64_t v93 = v315;
  sub_10019A708(v313, v314);
  uint64_t v95 = (*(uint64_t (**)(uint64_t))(*(void *)(v93 + 8) + 40LL))(v94);
  sub_10019A6C4((uint64_t)v313, (uint64_t)&v308);
  uint64_t v96 = v284;
  if (v95 == 8)
  {
    sub_10018709C(&v308);
  }

  else
  {
    uint64_t v116 = v310;
    uint64_t v115 = v311;
    sub_10019A708(&v308, v310);
    uint64_t v117 = (*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8) + 40LL))(v116);
    sub_10018709C(&v308);
    if (v117 != 5)
    {
LABEL_59:
      uint64_t v177 = v314;
      uint64_t v176 = v315;
      sub_10019A708(v313, v314);
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v176 + 8) + 40LL))(v177) == 8)
      {
        char v179 = sub_10034F3D4( *(void *)(v316[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type),  v178);
        sub_10019A6C4((uint64_t)v313, (uint64_t)&v305);
        if ((v179 & 1) != 0)
        {
          sub_10018709C(&v305);
        }

        else
        {
          uint64_t v180 = *((void *)&v306 + 1);
          uint64_t v181 = v307;
          sub_10019A708(&v305, *((uint64_t *)&v306 + 1));
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v181 + 16))(v180, v181) & 1) != 0)
          {
            sub_10018709C(&v305);
LABEL_69:
            sub_10019A6C4((uint64_t)v313, (uint64_t)&v297);
            v197 = a2;
            uint64_t v198 = (os_log_s *)Logger.logObject.getter(v197);
            os_log_type_t v199 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v198, v199))
            {
              uint64_t v200 = swift_slowAlloc(14LL, -1LL);
              *(_DWORD *)uint64_t v200 = 67109376;
              v290 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v25;
              v201 = a2;
              uint64_t v202 = v298;
              uint64_t v203 = v299;
              sub_10019A708(&v297, v298);
              v204 = *(uint64_t (**)(uint64_t, uint64_t))(v203 + 16);
              uint64_t v205 = v203;
              a2 = v201;
              LODWORD(v202) = v204(v202, v205) & 1;
              sub_10018709C(&v297);
              LODWORD(v293) = v202;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v293, (char *)&v293 + 4, v200 + 4, v200 + 8);
              *(_WORD *)(v200 + 8) = 1024;
              uint64_t v206 = (uint64_t)&v197[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
              swift_beginAccess( &v197[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI],  &v293,  0LL,  0LL);
              uint64_t v207 = v275;
              sub_1001915A4(v206, v275, &qword_10064DA60);
              uint64_t v208 = v292;
              LODWORD(v201) = v290[6](v207, 1LL, v292) != 1;
              sub_100187100(v207, &qword_10064DA60);
              LODWORD(v297) = (_DWORD)v201;
              v209 = v290;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v297, (char *)&v297 + 4, v200 + 10, v200 + 14);

              _os_log_impl( (void *)&_mh_execute_header,  v198,  v199,  "Request arming UI as requested by Mac (%{BOOL}d) or ongoing unlock session during registration (%{BOOL}d)",  (uint8_t *)v200,  0xEu);
              swift_slowDealloc(v200, -1LL, -1LL);
            }

            else
            {
              sub_10018709C(&v297);

              uint64_t v208 = v292;
              v209 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v25;
            }

            uint64_t v25 = (void (**)(char *, uint64_t))v209;
            uint64_t v210 = (uint64_t)v278;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v209[7])(v278, 1LL, 1LL, v208);
            uint64_t v211 = (uint64_t)&v197[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
            swift_beginAccess( &v197[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI],  &v297,  33LL,  0LL);
            sub_1001C9860(v210, v211, &qword_10064DA60);
            swift_endAccess(&v297);
            goto LABEL_87;
          }

          uint64_t v195 = (uint64_t)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess( &a2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI],  v300,  0LL,  0LL);
          uint64_t v196 = v276;
          sub_1001915A4(v195, v276, &qword_10064DA60);
          LODWORD(v195) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v25[6])(v196, 1LL, v292);
          sub_100187100(v196, &qword_10064DA60);
          sub_10018709C(&v305);
          if ((_DWORD)v195 != 1) {
            goto LABEL_69;
          }
        }

        if ((sub_10034F3D4( *(void *)(v316[0] + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type),  v182) & 1) != 0)
        {
          v290 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))v25;
          __int128 v183 = a2;
          uint64_t v184 = (os_log_s *)Logger.logObject.getter(v183);
          os_log_type_t v185 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v184, v185))
          {
            uint64_t v186 = swift_slowAlloc(18LL, -1LL);
            uint64_t v289 = swift_slowAlloc(32LL, -1LL);
            *(void *)&__int128 v297 = v289;
            *(_DWORD *)uint64_t v186 = 67109378;
            uint64_t v188 = swift_unknownObjectWeakLoadStrong( &v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v187);

            swift_unknownObjectRelease(v188);
            LODWORD(v293) = v188 != 0;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v293, (char *)&v293 + 4, v186 + 4, v186 + 8);

            *(_WORD *)(v186 + 8) = 2080;
            v189 = &v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
            __n128 v190 = swift_beginAccess( &v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI],  &v301,  0LL,  0LL);
            v191 = v290;
            uint64_t v192 = v292;
            if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v290[6])(v189, 1LL, v292, v190))
            {
              uint64_t v193 = 7104878LL;
              v194 = (const char *)0xE300000000000000LL;
            }

            else
            {
              v215 = v291;
              uint64_t v216 = v191[2]((uint64_t)v291, (uint64_t)v189, v192);
              uint64_t v193 = UUID.uuidString.getter(v216);
              v194 = v217;
              ((void (*)(char *, uint64_t))v191[1])(v215, v192);
            }

            uint64_t v214 = (uint64_t)v277;
            uint64_t v293 = sub_10018CDB4(v193, (unint64_t)v194, (uint64_t *)&v297);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v293, v294, v186 + 10, v186 + 18);

            swift_bridgeObjectRelease(v194);
            _os_log_impl( (void *)&_mh_execute_header,  v184,  v185,  "Calling back to delegate (exists: %{BOOL}d), for sessionID: %s",  (uint8_t *)v186,  0x12u);
            uint64_t v218 = v289;
            swift_arrayDestroy(v289, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v218, -1LL, -1LL);
            swift_slowDealloc(v186, -1LL, -1LL);

            uint64_t v213 = v292;
          }

          else
          {

            uint64_t v213 = v292;
            uint64_t v214 = (uint64_t)v277;
          }

          v219 = &v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate];
          uint64_t v220 = swift_unknownObjectWeakLoadStrong( &v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_delegate],  v212);
          a2 = v288;
          if (!v220) {
            goto LABEL_79;
          }
          v221 = (void *)v220;
          uint64_t v222 = (uint64_t)&v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
          swift_beginAccess( &v183[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI],  &v293,  0LL,  0LL);
          sub_1001915A4(v222, v214, &qword_10064DA60);
          v223 = v290;
          if (v290[6](v214, 1LL, v213) == 1)
          {
            swift_unknownObjectRelease(v221);
            sub_100187100(v214, &qword_10064DA60);
LABEL_79:
            v224 = v183;
            v225 = (os_log_s *)Logger.logObject.getter(v224);
            os_log_type_t v226 = static os_log_type_t.error.getter(v225);
            if (os_log_type_enabled(v225, v226))
            {
              uint64_t v227 = swift_slowAlloc(18LL, -1LL);
              uint64_t v289 = swift_slowAlloc(32LL, -1LL);
              v304[0] = v289;
              *(_DWORD *)uint64_t v227 = 67109378;
              uint64_t v229 = swift_unknownObjectWeakLoadStrong(v219, v228);

              swift_unknownObjectRelease(v229);
              LODWORD(v297) = v229 != 0;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v297, (char *)&v297 + 4, v227 + 4, v227 + 8);

              *(_WORD *)(v227 + 8) = 2080;
              v230 = &v224[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
              __n128 v231 = swift_beginAccess( &v224[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI],  &v297,  0LL,  0LL);
              v232 = v290;
              uint64_t v233 = v292;
              if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v290[6])(v230, 1LL, v292, v231))
              {
                uint64_t v234 = 7104878LL;
                v235 = (const char *)0xE300000000000000LL;
              }

              else
              {
                v241 = v291;
                uint64_t v242 = v232[2]((uint64_t)v291, (uint64_t)v230, v233);
                uint64_t v234 = UUID.uuidString.getter(v242);
                v235 = v243;
                ((void (*)(char *, uint64_t))v232[1])(v241, v233);
              }

              uint64_t v303 = sub_10018CDB4(v234, (unint64_t)v235, v304);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v303, v304, v227 + 10, v227 + 18);

              swift_bridgeObjectRelease(v235);
              _os_log_impl( (void *)&_mh_execute_header,  v225,  v226,  "Could not call back to delegate (exists: %{BOOL}d), for sessionID: %s",  (uint8_t *)v227,  0x12u);
              uint64_t v244 = v289;
              swift_arrayDestroy(v289, 1LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v244, -1LL, -1LL);
              swift_slowDealloc(v227, -1LL, -1LL);
            }

            else
            {
            }

            a2 = v288;
            uint64_t v25 = (void (**)(char *, uint64_t))v290;
            goto LABEL_87;
          }

          v236 = v274;
          v223[4]((uint64_t)v274, v214, v213);
          uint64_t v237 = v213;
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          id v239 = sub_100487C98(11LL, 0LL, 0xE000000000000000LL);
          [v221 manager:v183 didFailAuthenticationFor:isa error:v239];
          swift_unknownObjectRelease(v221);

          ((void (*)(char *, uint64_t))v223[1])(v236, v237);
          uint64_t v240 = (uint64_t)v278;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v223[7])(v278, 1LL, 1LL, v237);
          swift_beginAccess(v222, &v297, 33LL, 0LL);
          sub_1001C9860(v240, v222, &qword_10064DA60);
          swift_endAccess(&v297);
          uint64_t v25 = (void (**)(char *, uint64_t))v223;
        }
      }

LABEL_105:
  uint64_t result = sub_10018709C(&v293);
  __break(1u);
  return result;
}

uint64_t sub_10033C858(void *a1, char *a2)
{
  return sub_10033ABF8( a1,  a2,  type metadata accessor for SDAuthenticationPairingKeySession,  (uint64_t (*)(uint64_t))sub_10033CEEC,  sub_1002DB064,  (uint64_t (*)(uint64_t))sub_10033CEEC,  (uint64_t (*)(uint64_t))sub_10033CEEC);
}

uint64_t sub_10033C884()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10033C8B0()
{
}

uint64_t sub_10033C8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10033C8C8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10033C8D0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10033C8F4()
{
}

uint64_t sub_10033C900(void *a1)
{
  return sub_100478FE8(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_10033C91C(_BYTE *__src, _BYTE *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0LL;
  }
  if ((v2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }

  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_10033C9DC(_BYTE *__src, uint64_t a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 <= 14) {
    return sub_10033C91C(__src, &__src[a2]);
  }
  uint64_t v4 = type metadata accessor for __DataStorage(0LL);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  __DataStorage.init(bytes:length:)(__src, a2);
  uint64_t v6 = type metadata accessor for Data.RangeReference(0LL);
  uint64_t result = swift_allocObject(v6, 32LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_10033CA88()
{
  sub_100189B20(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10018709C((void *)(v0 + 40));
  return swift_deallocObject(v0, 80LL);
}

uint64_t sub_10033CABC()
{
  return sub_100331984(v0[2], v0[3], v0[4], (uint64_t)(v0 + 5));
}

uint64_t sub_10033CACC()
{
  sub_100189B20(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL);
}

uint64_t sub_10033CB08(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc(dword_10064F2B4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100195708;
  return sub_100331A70(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10033CB94()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10033CBB8()
{
}

void sub_10033CBF0()
{
}

uint64_t sub_10033CBF8()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_10033CC24()
{
}

uint64_t sub_10033CC50()
{
  uint64_t v1 = type metadata accessor for AuthenticationSecurityRequest(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));

  unint64_t v5 = v0 + *(int *)(v1 + 20) + v3;
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10033CCE4(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for AuthenticationSecurityRequest(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_10064F2C4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1001943E8;
  return sub_10032EEB0(a1, v5, v6, v7, v8);
}

uint64_t sub_10033CD78()
{
  return sub_10032F914();
}

id sub_10033CD9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_lastUnlockDate;
  uint64_t v16 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  *(_OWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingToken) = xmmword_1004CD540;
  *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_aksAuthSession) = 0LL;
  *(_OWORD *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_authToken) = xmmword_1004CD540;
  *(_BYTE *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_rangingSucceeded) = 0;
  sub_10032E850(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_metrics);
  *(_BYTE *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAuthenticationLockSession_isConfirmationSent) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  id v17 = sub_1001D7414(a1, a2, a3, v14, a5);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a4, v11);
  return v17;
}

uint64_t sub_10033CEEC(void *a1)
{
  return sub_10033C900(a1) & 1;
}

uint64_t sub_10033CF3C()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropPlatformUISessionManagerUnsupported()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary44SDAirDropPlatformUISessionManagerUnsupported);
}

uint64_t sub_10033CF80()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropPlatformNotificationManagerUnsupported()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary47SDAirDropPlatformNotificationManagerUnsupported);
}

uint64_t sub_10033CFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)v2 + 16LL;
  *(void *)(*(void *)v2 + 24LL) = a2;
  swift_unknownObjectWeakAssign(v4, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_10033CFF8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100645EE0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10033D67C(a1, (uint64_t)v10);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1LL, v4);
  if ((_DWORD)result == 1)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }

  else
  {
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v13(v7, v10, v4);
    uint64_t v14 = sub_100183098(&qword_100646198);
    uint64_t v15 = *(void *)(v5 + 72);
    uint64_t v16 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v17 = (v16 + 32) & ~v16;
    uint64_t v12 = (void *)swift_allocObject(v14, v17 + v15, v16 | 7);
    *((_OWORD *)v12 + 1) = xmmword_1004CDCA0;
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v13)((char *)v12 + v17, v7, v4);
  }

  *a2 = v12;
  return result;
}

uint64_t sub_10033D130()
{
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropPlatformNearFieldServiceUnsupported()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary44SDAirDropPlatformNearFieldServiceUnsupported);
}

uint64_t sub_10033D17C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 16);
  *(void *)(v3 + sub_100195658(v0 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_10033D190(uint64_t a1)
{
  *(void *)(v1 + sub_100195658(v0 + 16) = a1;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  *(void *)(v1 + 24) = swift_task_alloc((*(void *)(*(void *)(v2 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10033D218, static AirDropActor.shared, 0LL);
}

uint64_t sub_10033D218(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 24);
  UUID.init()(a1);
  SFAirDropClient.BoopAtADistance.ServerInfo.init(applicationLabel:publicKeyData:bonjourUUID:)( 0LL,  0xE000000000000000LL,  0LL,  0xC000000000000000LL,  v2);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10033D274@<X0>(uint64_t a1@<X8>)
{
  v20[1] = a1;
  uint64_t v1 = sub_100183098(&qword_10064F910);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_100183098(&qword_10064F918);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_100645EE0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100183098(&qword_10064F920);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SFAirDrop.NearbySharingInteraction(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v10, 1LL, 1LL, v15);
  Just.init(_:)(v10, v8);
  uint64_t v16 = sub_100183098(&qword_100646178);
  Just.map<A>(_:)(sub_10033CFF8, 0LL, v11, v16);
  uint64_t v17 = sub_1001CD538(&qword_10064F928, &qword_10064F918, (uint64_t)&protocol conformance descriptor for Just<A>);
  Publisher<>.values.getter(v4, v17);
  uint64_t v18 = sub_1001CD538( &qword_10064F930,  &qword_10064F910,  (uint64_t)&protocol conformance descriptor for AsyncPublisher<A>);
  SFNoThrowAsyncSequence.init<A>(_:)(v3, v16, v1, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10033D490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerUnsupported()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary44SDAirDropPlatformLockStateManagerUnsupported);
}

uint64_t type metadata accessor for SDAirDropPlatformUISessionManagerFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary40SDAirDropPlatformUISessionManagerFactory);
}

uint64_t type metadata accessor for SDAirDropPlatformNotificationManagerFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary43SDAirDropPlatformNotificationManagerFactory);
}

uint64_t type metadata accessor for SDAirDropPlatformNearFieldServiceFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary40SDAirDropPlatformNearFieldServiceFactory);
}

uint64_t type metadata accessor for SDAirDropPlatformLockStateManagerFactory()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary40SDAirDropPlatformLockStateManagerFactory);
}

uint64_t sub_10033D56C()
{
  uint64_t v0 = type metadata accessor for SFPlatform(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  type metadata accessor for SFAirDropUserDefaults(0LL, v4);
  uint64_t v5 = static SFAirDropUserDefaults.shared.getter();
  int v6 = SFAirDropUserDefaults.walkAwayEnabled.getter();

  static SFPlatform.macOS.getter(v7);
  LOBYTE(v5) = static SFPlatform.isPlatform(_:)(v3);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v9 = v8(v3, v0);
  if ((v5 & 1) != 0
    || (static SFPlatform.iOS.getter(v9), v11 = static SFPlatform.isPlatform(_:)(v3), uint64_t v9 = v8(v3, v0), (v11 & 1) != 0))
  {
    int v12 = 1;
  }

  else
  {
    static SFPlatform.visionOS.getter(v9);
    int v12 = static SFPlatform.isPlatform(_:)(v3);
    uint64_t v9 = v8(v3, v0);
  }

  return v6 & v12 & (SFDeviceClassCodeGet(v9, v10) != 4);
}

uint64_t sub_10033D67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100645EE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

void *sub_10033D6C4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v49 = *a2;
    *a1 = *a2;
    a1 = (void *)(v49 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v49);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    char v11 = (void *)((char *)a2 + v8);
    int v12 = (const char *)v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v51 = (const char *)v14[1];
    void *v13 = *v14;
    v13[1] = v51;
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)((char *)a1 + v15);
    uint64_t v18 = (void *)((char *)a2 + v15);
    uint64_t v19 = (const char *)v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = (void *)((char *)a1 + v16);
    uint64_t v21 = (void *)((char *)a2 + v16);
    uint64_t v22 = (const char *)v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = a3[9];
    uint64_t v24 = a3[10];
    uint64_t v25 = (void *)((char *)a1 + v23);
    uint64_t v26 = (void *)((char *)a2 + v23);
    uint64_t v27 = (const char *)v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = (void *)((char *)a1 + v24);
    uint64_t v29 = (void *)((char *)a2 + v24);
    uint64_t v30 = (const char *)v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
    uint64_t v32 = a3[13];
    uint64_t v33 = (void *)((char *)a1 + v32);
    int v34 = (void *)((char *)a2 + v32);
    uint64_t v35 = *v34;
    unint64_t v36 = v34[1];
    *(void *)&double v37 = swift_bridgeObjectRetain(v12).n128_u64[0];
    *(void *)&double v38 = swift_bridgeObjectRetain(v51, v37).n128_u64[0];
    *(void *)&double v39 = swift_bridgeObjectRetain(v19, v38).n128_u64[0];
    *(void *)&double v40 = swift_bridgeObjectRetain(v22, v39).n128_u64[0];
    *(void *)&double v41 = swift_bridgeObjectRetain(v27, v40).n128_u64[0];
    swift_bridgeObjectRetain(v30, v41);
    sub_10019BA8C(v35, v36);
    uint64_t *v33 = v35;
    v33[1] = v36;
    uint64_t v42 = a3[14];
    BOOL v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    uint64_t v45 = type metadata accessor for UUID(0LL);
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16LL);
    v46(v43, v44, v45);
    v46((char *)a1 + a3[15], (char *)a2 + a3[15], v45);
    uint64_t v47 = a3[17];
    *((_BYTE *)a1 + a3[16]) = *((_BYTE *)a2 + a3[16]);
    *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
    uint64_t v48 = a3[19];
    *((_BYTE *)a1 + a3[18]) = *((_BYTE *)a2 + a3[18]);
    *((_BYTE *)a1 + v48) = *((_BYTE *)a2 + v48);
  }

  return a1;
}

uint64_t sub_10033D89C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  *(void *)&double v5 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[5] + 8)).n128_u64[0];
  *(void *)&double v6 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[6] + 8), v5).n128_u64[0];
  *(void *)&double v7 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[7] + 8), v6).n128_u64[0];
  *(void *)&double v8 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[8] + 8), v7).n128_u64[0];
  *(void *)&double v9 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + a2[9] + 8), v8).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(a1 + a2[10] + 8), v9);
  sub_100189B20(*(void *)(a1 + a2[13]), *(void *)(a1 + a2[13] + 8));
  uint64_t v10 = a1 + a2[14];
  uint64_t v11 = type metadata accessor for UUID(0LL);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL);
  v13(v10, v11);
  return ((uint64_t (*)(uint64_t, uint64_t))v13)(a1 + a2[15], v11);
}

uint64_t sub_10033D998(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  double v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = (const char *)v10[1];
  *double v9 = *v10;
  v9[1] = v11;
  int v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v49 = (const char *)v13[1];
  *int v12 = *v13;
  v12[1] = v49;
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v14);
  uint64_t v17 = (void *)(a2 + v14);
  uint64_t v18 = (const char *)v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (void *)(a1 + v15);
  uint64_t v20 = (void *)(a2 + v15);
  uint64_t v21 = (const char *)v20[1];
  void *v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = (void *)(a1 + v22);
  uint64_t v25 = (void *)(a2 + v22);
  uint64_t v26 = (const char *)v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = (void *)(a1 + v23);
  uint64_t v28 = (void *)(a2 + v23);
  uint64_t v29 = (const char *)v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  uint64_t v31 = a3[13];
  uint64_t v32 = (uint64_t *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  unint64_t v35 = v33[1];
  *(void *)&double v36 = swift_bridgeObjectRetain(v11).n128_u64[0];
  *(void *)&double v37 = swift_bridgeObjectRetain(v49, v36).n128_u64[0];
  *(void *)&double v38 = swift_bridgeObjectRetain(v18, v37).n128_u64[0];
  *(void *)&double v39 = swift_bridgeObjectRetain(v21, v38).n128_u64[0];
  *(void *)&double v40 = swift_bridgeObjectRetain(v26, v39).n128_u64[0];
  swift_bridgeObjectRetain(v29, v40);
  sub_10019BA8C(v34, v35);
  *uint64_t v32 = v34;
  v32[1] = v35;
  uint64_t v41 = a3[14];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = type metadata accessor for UUID(0LL);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16LL);
  v45(v42, v43, v44);
  v45(a1 + a3[15], a2 + a3[15], v44);
  uint64_t v46 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v46) = *(_BYTE *)(a2 + v46);
  uint64_t v47 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  return a1;
}

uint64_t sub_10033DB44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  double v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = (const char *)v9[1];
  uint64_t v11 = (const char *)v8[1];
  v8[1] = v10;
  *(void *)&double v12 = swift_bridgeObjectRetain(v10).n128_u64[0];
  *(void *)&double v13 = swift_bridgeObjectRelease(v11, v12).n128_u64[0];
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  uint64_t v17 = (const char *)v16[1];
  uint64_t v18 = (const char *)v15[1];
  v15[1] = v17;
  *(void *)&double v19 = swift_bridgeObjectRetain(v17, v13).n128_u64[0];
  *(void *)&double v20 = swift_bridgeObjectRelease(v18, v19).n128_u64[0];
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  void *v22 = *v23;
  uint64_t v24 = (const char *)v23[1];
  uint64_t v25 = (const char *)v22[1];
  v22[1] = v24;
  *(void *)&double v26 = swift_bridgeObjectRetain(v24, v20).n128_u64[0];
  *(void *)&double v27 = swift_bridgeObjectRelease(v25, v26).n128_u64[0];
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  uint64_t v31 = (const char *)v30[1];
  uint64_t v32 = (const char *)v29[1];
  v29[1] = v31;
  *(void *)&double v33 = swift_bridgeObjectRetain(v31, v27).n128_u64[0];
  *(void *)&double v34 = swift_bridgeObjectRelease(v32, v33).n128_u64[0];
  uint64_t v35 = a3[9];
  double v36 = (void *)(a1 + v35);
  double v37 = (void *)(a2 + v35);
  *double v36 = *v37;
  double v38 = (const char *)v37[1];
  double v39 = (const char *)v36[1];
  v36[1] = v38;
  *(void *)&double v40 = swift_bridgeObjectRetain(v38, v34).n128_u64[0];
  *(void *)&double v41 = swift_bridgeObjectRelease(v39, v40).n128_u64[0];
  uint64_t v42 = a3[10];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  *uint64_t v43 = *v44;
  uint64_t v45 = (const char *)v44[1];
  uint64_t v46 = (const char *)v43[1];
  v43[1] = v45;
  *(void *)&double v47 = swift_bridgeObjectRetain(v45, v41).n128_u64[0];
  swift_bridgeObjectRelease(v46, v47);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  uint64_t v48 = a3[13];
  uint64_t v49 = (uint64_t *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v51 = *v50;
  unint64_t v52 = v50[1];
  sub_10019BA8C(*v50, v52);
  uint64_t v53 = *v49;
  unint64_t v54 = v49[1];
  uint64_t *v49 = v51;
  v49[1] = v52;
  sub_100189B20(v53, v54);
  uint64_t v55 = a3[14];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = type metadata accessor for UUID(0LL);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 24LL);
  v59(v56, v57, v58);
  v59(a1 + a3[15], a2 + a3[15], v58);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + a3[19]) = *(_BYTE *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_10033DD60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for UUID(0LL);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32LL);
  v15(v12, v13, v14);
  v15(a1 + a3[15], a2 + a3[15], v14);
  uint64_t v16 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + vsub_100195658(v0 + 16) = *(_BYTE *)(a2 + v16);
  uint64_t v17 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  return a1;
}

uint64_t sub_10033DE84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = (const char *)v8[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  *(void *)&double v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
  uint64_t v14 = a3[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  double v19 = (const char *)v15[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  *(void *)&double v20 = swift_bridgeObjectRelease(v19, v13).n128_u64[0];
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  double v26 = (const char *)v22[1];
  void *v22 = v25;
  v22[1] = v24;
  *(void *)&double v27 = swift_bridgeObjectRelease(v26, v20).n128_u64[0];
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  double v33 = (const char *)v29[1];
  void *v29 = v32;
  v29[1] = v31;
  *(void *)&double v34 = swift_bridgeObjectRelease(v33, v27).n128_u64[0];
  uint64_t v35 = a3[9];
  double v36 = (void *)(a1 + v35);
  double v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  double v40 = (const char *)v36[1];
  *double v36 = v39;
  v36[1] = v38;
  *(void *)&double v41 = swift_bridgeObjectRelease(v40, v34).n128_u64[0];
  uint64_t v42 = a3[10];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  double v47 = (const char *)v43[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease(v47, v41);
  uint64_t v48 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  uint64_t v49 = a3[13];
  uint64_t v50 = *(void *)(a1 + v49);
  unint64_t v51 = *(void *)(a1 + v49 + 8);
  *(_OWORD *)(a1 + v49) = *(_OWORD *)(a2 + v49);
  sub_100189B20(v50, v51);
  uint64_t v52 = a3[14];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = type metadata accessor for UUID(0LL);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 40LL);
  v56(v53, v54, v55);
  v56(a1 + a3[15], a2 + a3[15], v55);
  uint64_t v57 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + v57) = *(_BYTE *)(a2 + v57);
  uint64_t v58 = a3[19];
  *(_BYTE *)(a1 + a3[18]) = *(_BYTE *)(a2 + a3[18]);
  *(_BYTE *)(a1 + v58) = *(_BYTE *)(a2 + v58);
  return a1;
}

uint64_t sub_10033E024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10033E030);
}

uint64_t sub_10033E030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
    return v9(v10, a2, v8);
  }

  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for UUID(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 56);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
    return v9(v10, a2, v8);
  }

  unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  return (v11 + 1);
}

uint64_t sub_10033E0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10033E0E8);
}

uint64_t sub_10033E0E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }

    uint64_t v10 = type metadata accessor for UUID(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 56);
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SDNearFieldTap(uint64_t a1)
{
  uint64_t result = qword_10064F9A8;
  if (!qword_10064F9A8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDNearFieldTap);
  }
  return result;
}

uint64_t sub_10033E1CC(uint64_t a1)
{
  uint64_t result = type metadata accessor for Date(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = &unk_1004D63D0;
    void v5[2] = &unk_1004D63E8;
    v5[3] = &unk_1004D63E8;
    v5[4] = &unk_1004D63E8;
    v5[5] = &unk_1004D63E8;
    void v5[6] = &unk_1004D63D0;
    v5[7] = &unk_1004D6400;
    v5[8] = &unk_1004D6400;
    v5[9] = &unk_1004D6418;
    uint64_t result = type metadata accessor for UUID(319LL);
    if (v4 <= 0x3F)
    {
      uint64_t v6 = *(void *)(result - 8) + 64LL;
      uint64_t v7 = v6;
      uint64_t v8 = &unk_1004D6400;
      uint64_t v9 = &unk_1004D6430;
      uint64_t v10 = &unk_1004D6430;
      unint64_t v11 = &unk_1004D6400;
      swift_initStructMetadata(a1, 256LL, 16LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10033E290@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v8 = [a1 date];
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v8);

  id v9 = [a1 identifier];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  uint64_t v12 = v11;

  double v13 = (int *)type metadata accessor for SDNearFieldTap(0LL);
  uint64_t v14 = (uint64_t *)(a4 + v13[5]);
  uint64_t *v14 = v10;
  v14[1] = v12;
  id v15 = [a1 contactID];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    uint64_t v19 = v18;
  }

  else
  {
    uint64_t v17 = 0LL;
    uint64_t v19 = 0LL;
  }

  double v20 = (uint64_t *)(a4 + v13[6]);
  *double v20 = v17;
  v20[1] = v19;
  id v21 = sub_1000EDDC8(a1);
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    uint64_t v25 = v24;
  }

  else
  {
    uint64_t v23 = 0LL;
    uint64_t v25 = 0LL;
  }

  double v26 = (uint64_t *)(a4 + v13[7]);
  uint64_t *v26 = v23;
  v26[1] = v25;
  id v27 = sub_1000EDE18(a1);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    uint64_t v31 = v30;
  }

  else
  {
    uint64_t v29 = 0LL;
    uint64_t v31 = 0LL;
  }

  uint64_t v32 = (uint64_t *)(a4 + v13[8]);
  *uint64_t v32 = v29;
  v32[1] = v31;
  id v33 = sub_1000EDE68(a1);
  if (v33)
  {
    double v34 = v33;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
    uint64_t v37 = v36;
  }

  else
  {
    uint64_t v35 = 0LL;
    uint64_t v37 = 0LL;
  }

  uint64_t v38 = (uint64_t *)(a4 + v13[9]);
  uint64_t *v38 = v35;
  v38[1] = v37;
  id v39 = [a1 applicationLabel];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  uint64_t v42 = v41;

  uint64_t v43 = (uint64_t *)(a4 + v13[10]);
  *uint64_t v43 = v40;
  v43[1] = v42;
  *(_BYTE *)(a4 + v13[12]) = [a1 isSameAccount];
  uint64_t v44 = sub_1000EDD5C(a1);
  uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v44);
  uint64_t v47 = v46;

  uint64_t v48 = (uint64_t *)(a4 + v13[13]);
  *uint64_t v48 = v45;
  v48[1] = v47;
  id v49 = sub_1000EDEB8(a1);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(v49);

  *(_BYTE *)(a4 + v13[16]) = [a1 shouldForceSingleBandAWDLMode];
  else {
    unsigned __int8 v50 = 2;
  }
  *(_BYTE *)(a4 + v13[17]) = v50;
  else {
    unsigned __int8 v51 = 2;
  }
  char v52 = a2 & 1;
  *(_BYTE *)(a4 + v13[18]) = v51;
  unsigned __int8 v53 = [a1 flags];

  *(_BYTE *)(a4 + v13[19]) = v53 & 1;
  *(_BYTE *)(a4 + v13[11]) = v52;
  uint64_t v54 = a4 + v13[15];
  uint64_t v55 = type metadata accessor for UUID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32LL))(v54, a3, v55);
}

uint64_t sub_10033E598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  double v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = SFAirDropClient.BoopAtADistance.TapEvent.date.getter(v11);
  uint64_t v15 = SFAirDropClient.BoopAtADistance.TapEvent.identifier.getter(v14);
  uint64_t v17 = v16;
  uint64_t v18 = (int *)type metadata accessor for SDNearFieldTap(0LL);
  uint64_t v19 = (uint64_t *)(a3 + v18[5]);
  uint64_t *v19 = v15;
  v19[1] = v17;
  uint64_t v20 = SFAirDropClient.BoopAtADistance.TapEvent.contactID.getter();
  id v21 = (uint64_t *)(a3 + v18[6]);
  uint64_t *v21 = v20;
  v21[1] = v22;
  uint64_t v23 = SFAirDropClient.BoopAtADistance.TapEvent.deviceName.getter();
  uint64_t v24 = (uint64_t *)(a3 + v18[7]);
  *uint64_t v24 = v23;
  v24[1] = v25;
  uint64_t v26 = SFAirDropClient.BoopAtADistance.TapEvent.deviceModel.getter();
  id v27 = (uint64_t *)(a3 + v18[8]);
  *id v27 = v26;
  v27[1] = v28;
  uint64_t v29 = SFAirDropClient.BoopAtADistance.TapEvent.accountID.getter();
  uint64_t v30 = (uint64_t *)(a3 + v18[9]);
  uint64_t *v30 = v29;
  v30[1] = v31;
  uint64_t v32 = SFAirDropClient.BoopAtADistance.TapEvent.applicationLabel.getter();
  id v33 = (uint64_t *)(a3 + v18[10]);
  uint64_t *v33 = v32;
  v33[1] = v34;
  *(_BYTE *)(a3 + v18[11]) = (SFAirDropClient.BoopAtADistance.Transaction.isInitiator.getter() & 1) == 0;
  *(_BYTE *)(a3 + v18[12]) = SFAirDropClient.BoopAtADistance.TapEvent.isSameAccount.getter() & 1;
  uint64_t v35 = SFAirDropClient.BoopAtADistance.Transaction.identifier.getter();
  uint64_t v36 = SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter(v35);
  uint64_t v37 = SFAirDropClient.BoopAtADistance.ServerInfo.publicKeyData.getter(v36);
  uint64_t v39 = v38;
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v41 = v40(v13, v9);
  uint64_t v42 = (uint64_t *)(a3 + v18[13]);
  uint64_t *v42 = v37;
  v42[1] = v39;
  uint64_t v43 = SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter(v41);
  SFAirDropClient.BoopAtADistance.ServerInfo.bonjourUUID.getter(v43);
  v40(v13, v9);
  uint64_t v44 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(a3 + v18[14], v8, v50);
  *(_BYTE *)(a3 + v18[16]) = SFAirDropClient.BoopAtADistance.TapEvent.shouldForceSingleBandAWDLMode.getter(v44) & 1;
  *(_BYTE *)(a3 + v18[17]) = SFAirDropClient.BoopAtADistance.TapEvent.isKnownIdentity.getter() & 1;
  LOBYTE(v37) = SFAirDropClient.BoopAtADistance.TapEvent.isUnsupportedApplicationLabel.getter();
  uint64_t v45 = type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8LL))(a2, v45);
  uint64_t v47 = type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction(0LL, v46);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8LL))(a1, v47);
  *(_BYTE *)(a3 + v18[18]) = v37 & 1;
  *(_BYTE *)(a3 + v18[19]) = 1;
  return result;
}

uint64_t sub_10033E804(uint64_t a1)
{
  uint64_t v85 = type metadata accessor for SDNearFieldTap(0LL);
  uint64_t v2 = __chkstk_darwin(v85);
  uint64_t v83 = (uint64_t)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  double v5 = (char *)&v81 - v4;
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v8);
  double v13 = (char *)&v81 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v81 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v81 - v17;
  sub_100219BB0(a1);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease(v19);
  id v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21(v18, a1, v6);
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }

  else
  {
    sub_100219BBC((uint64_t)v18);
    uint64_t v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v18, v6);
    swift_bridgeObjectRelease(v23);
    if (!v23)
    {
      if (qword_1006441B8 != -1) {
        swift_once(&qword_1006441B8, sub_10033F15C);
      }
      uint64_t v61 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v61, (uint64_t)qword_10064F938);
      v21(v16, a1, v6);
      v21(v13, a1, v6);
      uint64_t v62 = ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v10, a1, v6);
      uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
      os_log_type_t v64 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc(32LL, -1LL);
        uint64_t v66 = swift_slowAlloc(96LL, -1LL);
        uint64_t v88 = v66;
        *(_DWORD *)uint64_t v65 = 136315650;
        unint64_t v67 = sub_100219BC8((uint64_t)v16);
        uint64_t v85 = v66;
        if (v68)
        {
          unint64_t v69 = v68;
        }

        else
        {
          uint64_t v86 = 0LL;
          unint64_t v87 = 0xE000000000000000LL;
          _StringGuts.grow(_:)(17LL);
          swift_bridgeObjectRelease(v87);
          unint64_t v69 = 0x80000001005046B0LL;
          unint64_t v67 = 0xD000000000000015LL;
        }

        uint64_t v86 = sub_10018CDB4(v67, v69, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v65 + 4, v65 + 12);
        swift_bridgeObjectRelease(v69);
        v24(v16, v6);
        *(_WORD *)(v65 + 12) = 2080;
        unint64_t v74 = sub_100219BB0((uint64_t)v13);
        if (v75)
        {
          unint64_t v76 = v75;
        }

        else
        {
          uint64_t v86 = 0LL;
          unint64_t v87 = 0xE000000000000000LL;
          _StringGuts.grow(_:)(17LL);
          swift_bridgeObjectRelease(v87);
          unint64_t v76 = 0x80000001005046B0LL;
          unint64_t v74 = 0xD000000000000015LL;
        }

        uint64_t v86 = sub_10018CDB4(v74, v76, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v65 + 14, v65 + 22);
        swift_bridgeObjectRelease(v76);
        v24(v13, v6);
        *(_WORD *)(v65 + 22) = 2080;
        unint64_t v77 = sub_100219BBC((uint64_t)v10);
        if (v78)
        {
          unint64_t v79 = v78;
          uint64_t v80 = v85;
        }

        else
        {
          uint64_t v86 = 0LL;
          unint64_t v87 = 0xE000000000000000LL;
          _StringGuts.grow(_:)(17LL);
          swift_bridgeObjectRelease(v87);
          unint64_t v79 = 0x80000001005046B0LL;
          uint64_t v80 = v85;
          unint64_t v77 = 0xD000000000000015LL;
        }

        uint64_t v86 = sub_10018CDB4(v77, v79, &v88);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v65 + 24, v65 + 32);
        swift_bridgeObjectRelease(v79);
        v24(v10, v6);
        _os_log_impl( (void *)&_mh_execute_header,  v63,  v64,  "SDAirDropNearFieldService Failed to get endpoint identifier from endpoint.deviceName:%s endpoint.deviceIdentif ier:%s endpoint.contactID:%s ",  (uint8_t *)v65,  0x20u);
        swift_arrayDestroy(v80, 3LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v80, -1LL, -1LL);
        swift_slowDealloc(v65, -1LL, -1LL);
      }

      else
      {
        v24(v16, v6);
        v24(v13, v6);
        v24(v10, v6);
      }

      return 0LL;
    }
  }

  uint64_t v25 = sub_100219BB0(a1);
  uint64_t v28 = v84;
  uint64_t v27 = v85;
  if (v26)
  {
    uint64_t v29 = v25;
    unint64_t v30 = v26;
    if (qword_1006441B8 != -1) {
      swift_once(&qword_1006441B8, sub_10033F15C);
    }
    uint64_t v31 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v31, (uint64_t)qword_10064F938);
    sub_100340718(v28, (uint64_t)v5);
    uint64_t v32 = swift_bridgeObjectRetain_n(v30, 2LL);
    id v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc(22LL, -1LL);
      uint64_t v82 = swift_slowAlloc(64LL, -1LL);
      uint64_t v86 = v82;
      *(_DWORD *)uint64_t v35 = 136315394;
      uint64_t v36 = (uint64_t *)&v5[*(int *)(v27 + 20)];
      uint64_t v37 = v29;
      uint64_t v38 = *v36;
      unint64_t v39 = v36[1];
      swift_bridgeObjectRetain(v39);
      uint64_t v88 = sub_10018CDB4(v38, v39, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v35 + 4, v35 + 12);
      unint64_t v40 = v39;
      uint64_t v29 = v37;
      swift_bridgeObjectRelease(v40);
      sub_10034075C((uint64_t)v5);
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain(v30);
      uint64_t v88 = sub_10018CDB4(v37, v30, &v86);
      uint64_t v28 = v84;
      uint64_t v27 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v88, &v89, v35 + 14, v35 + 22);
      swift_bridgeObjectRelease_n(v30, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "SDAirDropNearFieldService Comparing tap with browser endpoint {tap: %s, endpointIdentifier: %s}",  (uint8_t *)v35,  0x16u);
      uint64_t v41 = v82;
      swift_arrayDestroy(v82, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    else
    {
      sub_10034075C((uint64_t)v5);

      swift_bridgeObjectRelease_n(v30, 2LL);
    }

    uint64_t v42 = (void *)(v28 + *(int *)(v27 + 20));
    uint64_t v43 = v42[1];
    if (*v42 == v29 && v30 == v43)
    {
      unint64_t v44 = v30;
LABEL_33:
      swift_bridgeObjectRelease(v44);
      return 1LL;
    }

    char v45 = _stringCompareWithSmolCheck(_:_:expecting:)(*v42, v43, v29, v30, 0LL);
    swift_bridgeObjectRelease(v30);
    if ((v45 & 1) != 0) {
      return 1LL;
    }
  }

  uint64_t v46 = sub_100219BBC(a1);
  if (v47)
  {
    uint64_t v48 = v46;
    unint64_t v49 = v47;
    if (qword_1006441B8 != -1) {
      swift_once(&qword_1006441B8, sub_10033F15C);
    }
    uint64_t v50 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v50, (uint64_t)qword_10064F938);
    uint64_t v51 = v83;
    sub_100340718(v28, v83);
    uint64_t v52 = swift_bridgeObjectRetain_n(v49, 2LL);
    unsigned __int8 v53 = (os_log_s *)Logger.logObject.getter(v52);
    os_log_type_t v54 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v84 = v48;
      uint64_t v55 = swift_slowAlloc(22LL, -1LL);
      uint64_t v56 = swift_slowAlloc(64LL, -1LL);
      uint64_t v88 = v56;
      *(_DWORD *)uint64_t v55 = 136315394;
      uint64_t v57 = (uint64_t *)(v51 + *(int *)(v27 + 24));
      uint64_t v58 = v57[1];
      if (v58)
      {
        uint64_t v59 = *v57;
        unint64_t v60 = v57[1];
      }

      else
      {
        uint64_t v59 = 0xD000000000000015LL;
        uint64_t v86 = 0LL;
        unint64_t v87 = 0xE000000000000000LL;
        _StringGuts.grow(_:)(17LL);
        swift_bridgeObjectRelease(v87);
        unint64_t v60 = 0x80000001005046B0LL;
      }

      swift_bridgeObjectRetain(v58);
      uint64_t v86 = sub_10018CDB4(v59, v60, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v55 + 4, v55 + 12);
      swift_bridgeObjectRelease(v60);
      sub_10034075C(v83);
      *(_WORD *)(v55 + 12) = 2080;
      swift_bridgeObjectRetain(v49);
      uint64_t v48 = v84;
      uint64_t v86 = sub_10018CDB4(v84, v49, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v55 + 14, v55 + 22);
      swift_bridgeObjectRelease_n(v49, 3LL);
      _os_log_impl( (void *)&_mh_execute_header,  v53,  v54,  "SDAirDropNearFieldService Comparing tap with browser endpoint {tap: %s, endpointContactID: %s}",  (uint8_t *)v55,  0x16u);
      swift_arrayDestroy(v56, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v56, -1LL, -1LL);
      swift_slowDealloc(v55, -1LL, -1LL);

      uint64_t v27 = v85;
    }

    else
    {
      sub_10034075C(v51);

      swift_bridgeObjectRelease_n(v49, 2LL);
    }

    unint64_t v70 = (void *)(v28 + *(int *)(v27 + 24));
    uint64_t v71 = v70[1];
    if (v71)
    {
      if (*v70 == v48 && v71 == v49)
      {
        unint64_t v44 = v49;
        goto LABEL_33;
      }

      char v73 = _stringCompareWithSmolCheck(_:_:expecting:)(*v70, v71, v48, v49, 0LL);
      swift_bridgeObjectRelease(v49);
      if ((v73 & 1) != 0) {
        return 1LL;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v49);
    }
  }

  return 0LL;
}

uint64_t sub_10033F15C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064F938);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064F938);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void *sub_10033F1EC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1LL) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_10033F20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100341280();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10033F268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100341280();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_10033F2B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OSLogDateFormatter.Style(0LL);
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v51 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for OSLogDateFormatter(0LL);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100183098(&qword_100646258);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = (int *)type metadata accessor for SDNearFieldTap(0LL);
  uint64_t v16 = (uint64_t *)(v0 + v15[10]);
  uint64_t v17 = (void *)v16[1];
  uint64_t v54 = *v16;
  sub_10025F338();
  uint64_t v18 = swift_bridgeObjectRetain(v17);
  uint64_t v19 = (void *)static NSUserDefaults.airdrop.getter(v18);
  SFAirDropUserDefaults.boopInteractionTypeOverride.getter();

  uint64_t v20 = type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType(0LL);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48LL))(v14, 1LL, v20);
  sub_100340798((uint64_t)v14);
  if ((_DWORD)v19 != 1)
  {
    uint64_t v56 = v54;
    unint64_t v57 = (unint64_t)v17;
    v21._countAndFlagsBits = 0x6469727265766F5BLL;
    v21._object = (void *)0xEB000000005D6E65LL;
    String.append(_:)(v21);
    uint64_t v17 = (void *)v57;
    uint64_t v54 = v56;
  }

  uint64_t v56 = 0LL;
  unint64_t v57 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(159LL);
  v22._countAndFlagsBits = 542130516LL;
  v22._object = (void *)0xE400000000000000LL;
  String.append(_:)(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v1, v8);
  uint64_t v24 = v50;
  uint64_t v23 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))( v4,  enum case for OSLogDateFormatter.Style.timeNoTimeZone(_:),  v51);
  static FormatStyle<>.oslog(_:)(v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v23);
  uint64_t v25 = sub_100183F14( &qword_10064FA18,  (uint64_t (*)(uint64_t))&type metadata accessor for OSLogDateFormatter,  (uint64_t)&protocol conformance descriptor for OSLogDateFormatter);
  uint64_t v26 = v53;
  Date.formatted<A>(_:)(&v55, v7, v53, v25);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v26);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  object = v55._object;
  String.append(_:)(v55);
  swift_bridgeObjectRelease(object);
  v28._countAndFlagsBits = 32LL;
  v28._object = (void *)0xE100000000000000LL;
  String.append(_:)(v28);
  uint64_t v29 = (uint64_t *)(v1 + v15[5]);
  uint64_t v30 = *v29;
  uint64_t v31 = (void *)v29[1];
  swift_bridgeObjectRetain(v31);
  v32._countAndFlagsBits = v30;
  v32._object = v31;
  String.append(_:)(v32);
  swift_bridgeObjectRelease(v31);
  v33._countAndFlagsBits = 0x20726F6620LL;
  v33._object = (void *)0xE500000000000000LL;
  String.append(_:)(v33);
  v34._countAndFlagsBits = v54;
  v34._object = v17;
  String.append(_:)(v34);
  swift_bridgeObjectRelease(v17);
  v35._countAndFlagsBits = 0x6F63206874697720LL;
  v35._object = (void *)0xEF203A746361746ELL;
  String.append(_:)(v35);
  Swift::String v55 = *(Swift::String *)(v1 + v15[6]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( &v55,  &type metadata for String,  &protocol witness table for String);
  v36._countAndFlagsBits = 0x203A6570797420LL;
  v36._object = (void *)0xE700000000000000LL;
  String.append(_:)(v36);
  LOBYTE(v55._countAndFlagsBits) = *(_BYTE *)(v1 + v15[11]);
  _print_unlocked<A, B>(_:_:)( &v55,  &v56,  &type metadata for SDNearFieldTapType,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v37._countAndFlagsBits = 0xD00000000000001BLL;
  v37._object = (void *)0x800000010050B300LL;
  String.append(_:)(v37);
  uint64_t v38 = type metadata accessor for UUID(0LL);
  uint64_t v39 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v38, v39);
  uint64_t v41 = v40._object;
  String.append(_:)(v40);
  swift_bridgeObjectRelease(v41);
  v42._countAndFlagsBits = 0xD000000000000012LL;
  v42._object = (void *)0x800000010050B320LL;
  String.append(_:)(v42);
  LOBYTE(v55._countAndFlagsBits) = *(_BYTE *)(v1 + v15[17]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v55, &type metadata for Bool, &protocol witness table for Bool);
  v43._object = (void *)0x800000010050B340LL;
  v43._countAndFlagsBits = 0xD000000000000020LL;
  String.append(_:)(v43);
  LOBYTE(v55._countAndFlagsBits) = *(_BYTE *)(v1 + v15[18]);
  DefaultStringInterpolation.appendInterpolation<A>(_:)(&v55, &type metadata for Bool, &protocol witness table for Bool);
  v44._object = (void *)0x800000010050B370LL;
  v44._countAndFlagsBits = 0xD000000000000020LL;
  String.append(_:)(v44);
  if (*(_BYTE *)(v1 + v15[16])) {
    uint64_t v45 = 1702195828LL;
  }
  else {
    uint64_t v45 = 0x65736C6166LL;
  }
  if (*(_BYTE *)(v1 + v15[16])) {
    unint64_t v46 = 0xE400000000000000LL;
  }
  else {
    unint64_t v46 = 0xE500000000000000LL;
  }
  unint64_t v47 = v46;
  String.append(_:)(*(Swift::String *)&v45);
  swift_bridgeObjectRelease(v46);
  return v56;
}

uint64_t sub_10033F7AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10033F7D8 + 4 * byte_1004D6390[a1]))( 1702125924LL,  0xE400000000000000LL);
}

uint64_t sub_10033F7D8()
{
  return 0x696669746E656469LL;
}

unint64_t sub_10033F7F8()
{
  return 0xD000000000000011LL;
}

uint64_t sub_10033F970(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064FA40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_1003407D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for SDNearFieldTap.CodingKeys,  &type metadata for SDNearFieldTap.CodingKeys,  v11,  v9,  v10);
  LOBYTE(v47) = 0;
  uint64_t v12 = type metadata accessor for Date(0LL);
  uint64_t v13 = sub_100183F14( &qword_10064E380,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v47, v5, v12, v13);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v14 = (int *)type metadata accessor for SDNearFieldTap(0LL);
  uint64_t v15 = (uint64_t *)(v3 + v14[5]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  LOBYTE(v47) = 1;
  KeyedEncodingContainer.encode(_:forKey:)(v16, v17, &v47, v5);
  uint64_t v18 = (uint64_t *)(v3 + v14[6]);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  LOBYTE(v47) = 2;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v19, v20, &v47, v5);
  Swift::String v21 = (uint64_t *)(v3 + v14[7]);
  uint64_t v22 = *v21;
  uint64_t v23 = v21[1];
  LOBYTE(v47) = 3;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v22, v23, &v47, v5);
  uint64_t v24 = (uint64_t *)(v3 + v14[8]);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  LOBYTE(v47) = 4;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v25, v26, &v47, v5);
  uint64_t v27 = (uint64_t *)(v3 + v14[9]);
  uint64_t v28 = *v27;
  uint64_t v29 = v27[1];
  LOBYTE(v47) = 5;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v28, v29, &v47, v5);
  uint64_t v30 = (uint64_t *)(v3 + v14[10]);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  LOBYTE(v47) = 6;
  KeyedEncodingContainer.encode(_:forKey:)(v31, v32, &v47, v5);
  LOBYTE(v47) = *(_BYTE *)(v3 + v14[11]);
  char v48 = 7;
  unint64_t v33 = sub_100340860();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v47, &v48, v5, &type metadata for SDNearFieldTapType, v33);
  uint64_t v34 = *(unsigned __int8 *)(v3 + v14[12]);
  LOBYTE(v47) = 8;
  KeyedEncodingContainer.encode(_:forKey:)(v34, &v47, v5);
  __int128 v47 = *(_OWORD *)(v3 + v14[13]);
  char v48 = 9;
  unint64_t v35 = sub_10020C2A8();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v47, &v48, v5, &type metadata for Data, v35);
  uint64_t v46 = v6;
  uint64_t v36 = v3 + v14[14];
  LOBYTE(v47) = 10;
  uint64_t v37 = type metadata accessor for UUID(0LL);
  uint64_t v38 = sub_100183F14( &qword_10064FA50,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v36, &v47, v5, v37, v38);
  uint64_t v39 = v3 + v14[15];
  LOBYTE(v47) = 11;
  KeyedEncodingContainer.encode<A>(_:forKey:)(v39, &v47, v5, v37, v38);
  uint64_t v40 = *(unsigned __int8 *)(v3 + v14[16]);
  LOBYTE(v47) = 12;
  KeyedEncodingContainer.encode(_:forKey:)(v40, &v47, v5);
  uint64_t v41 = *(unsigned __int8 *)(v3 + v14[17]);
  LOBYTE(v47) = 13;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v41, &v47, v5);
  uint64_t v42 = *(unsigned __int8 *)(v3 + v14[18]);
  LOBYTE(v47) = 14;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v42, &v47, v5);
  uint64_t v43 = *(unsigned __int8 *)(v3 + v14[19]);
  LOBYTE(v47) = 15;
  KeyedEncodingContainer.encode(_:forKey:)(v43, &v47, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v8, v5);
}

void sub_10033FDC4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v60 = type metadata accessor for UUID(0LL);
  uint64_t v56 = *(void *)(v60 - 8);
  uint64_t v3 = __chkstk_darwin(v60);
  uint64_t v5 = (void **)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v3);
  uint64_t v7 = (void **)((char *)&v51 - v6);
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v57 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v55 = sub_100183098(&qword_10064FA20);
  uint64_t v11 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = (int *)type metadata accessor for SDNearFieldTap(0LL);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v59 = a1;
  sub_10019A708(a1, v15);
  unint64_t v17 = sub_1003407D8();
  uint64_t v54 = v13;
  uint64_t v18 = v58;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for SDNearFieldTap.CodingKeys,  &type metadata for SDNearFieldTap.CodingKeys,  v17,  v15,  v16);
  if (v18)
  {
    sub_10018709C(v59);
  }

  else
  {
    uint64_t v51 = v5;
    uint64_t v52 = v7;
    uint64_t v58 = v11;
    LOBYTE(v63) = 0;
    uint64_t v19 = sub_100183F14( &qword_10064E370,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    uint64_t v20 = v55;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v10, v8, &v63, v55, v8, v19);
    Swift::String v21 = v61;
    (*(void (**)(char *, void *, uint64_t))(v57 + 32))(v61, v10, v8);
    LOBYTE(v63) = 1;
    uint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)(&v63, v20);
    uint64_t v23 = v62;
    uint64_t v24 = (uint64_t *)&v21[v62[5]];
    *uint64_t v24 = v22;
    v24[1] = v25;
    LOBYTE(v63) = 2;
    uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    uint64_t v27 = (uint64_t *)&v21[v23[6]];
    *uint64_t v27 = v26;
    v27[1] = v28;
    LOBYTE(v63) = 3;
    uint64_t v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    uint64_t v30 = (uint64_t *)&v21[v23[7]];
    uint64_t *v30 = v29;
    v30[1] = v31;
    LOBYTE(v63) = 4;
    uint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    unint64_t v33 = (uint64_t *)&v21[v23[8]];
    uint64_t *v33 = v32;
    v33[1] = v34;
    LOBYTE(v63) = 5;
    uint64_t v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v20);
    uint64_t v36 = (uint64_t *)&v21[v23[9]];
    *uint64_t v36 = v35;
    v36[1] = v37;
    LOBYTE(v63) = 6;
    uint64_t v38 = KeyedDecodingContainer.decode(_:forKey:)(&v63, v20);
    uint64_t v39 = (uint64_t *)&v21[v23[10]];
    *uint64_t v39 = v38;
    v39[1] = v40;
    char v64 = 7;
    unint64_t v41 = sub_10034081C();
    KeyedDecodingContainer.decode<A>(_:forKey:)( &v63,  &type metadata for SDNearFieldTapType,  &v64,  v20,  &type metadata for SDNearFieldTapType,  v41);
    v21[v23[11]] = v63;
    LOBYTE(v63) = 8;
    v21[v23[12]] = KeyedDecodingContainer.decode(_:forKey:)(&v63, v20) & 1;
    char v64 = 9;
    unint64_t v42 = sub_10020C198();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v63, &type metadata for Data, &v64, v20, &type metadata for Data, v42);
    *(_OWORD *)&v61[v62[13]] = v63;
    LOBYTE(v63) = 10;
    uint64_t v43 = sub_100183F14( &qword_10064FA38,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    KeyedDecodingContainer.decode<A>(_:forKey:)(v52, v60, &v63, v55, v60, v43);
    Swift::String v44 = *(void (**)(char *, void *, uint64_t))(v56 + 32);
    uint64_t v45 = v60;
    v44(&v61[v62[14]], v52, v60);
    LOBYTE(v63) = 11;
    KeyedDecodingContainer.decode<A>(_:forKey:)(v51, v45, &v63, v55, v45, v43);
    v44(&v61[v62[15]], v51, v60);
    LOBYTE(v63) = 12;
    char v46 = KeyedDecodingContainer.decode(_:forKey:)(&v63, v55);
    v61[v62[16]] = v46 & 1;
    LOBYTE(v63) = 13;
    char v47 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v55);
    v61[v62[17]] = v47;
    LOBYTE(v63) = 14;
    char v48 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v63, v55);
    v61[v62[18]] = v48;
    LOBYTE(v63) = 15;
    LOBYTE(v43) = KeyedDecodingContainer.decode(_:forKey:)(&v63, v55);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v54, v55);
    char v49 = v43 & 1;
    uint64_t v50 = (uint64_t)v61;
    v61[v62[19]] = v49;
    sub_100340718(v50, v53);
    sub_10018709C(v59);
    sub_10034075C(v50);
  }

uint64_t sub_100340664()
{
  return sub_10033F7AC(*v0);
}

uint64_t sub_10034066C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_100340BEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_100340690(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_10034069C(uint64_t a1)
{
  unint64_t v2 = sub_1003407D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003406C4(uint64_t a1)
{
  unint64_t v2 = sub_1003407D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1003406EC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_100340700(void *a1)
{
  return sub_10033F970(a1);
}

uint64_t sub_100340718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDNearFieldTap(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10034075C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDNearFieldTap(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100340798(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646258);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_1003407D8()
{
  unint64_t result = qword_10064FA28;
  if (!qword_10064FA28)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D668C, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064FA28);
  }

  return result;
}

unint64_t sub_10034081C()
{
  unint64_t result = qword_10064FA30;
  if (!qword_10064FA30)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6664, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_10064FA30);
  }

  return result;
}

unint64_t sub_100340860()
{
  unint64_t result = qword_10064FA48;
  if (!qword_10064FA48)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D663C, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_10064FA48);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for SDNearFieldTap.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }

uint64_t storeEnumTagSinglePayload for SDNearFieldTap.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF0) {
    return ((uint64_t (*)(void))((char *)&loc_100340980 + 4 * byte_1004D63A5[v4]))();
  }
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1003409B4 + 4 * byte_1004D63A0[v4]))();
}

uint64_t sub_1003409B4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003409BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1003409C4LL);
  }
  return result;
}

uint64_t sub_1003409D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1003409D8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 15;
  return result;
}

uint64_t sub_1003409DC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003409E4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDNearFieldTap.CodingKeys()
{
  return &type metadata for SDNearFieldTap.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SDNearFieldTapType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100340A4C + 4 * byte_1004D63AF[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100340A80 + 4 * byte_1004D63AA[v4]))();
}

uint64_t sub_100340A80(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100340A88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100340A90LL);
  }
  return result;
}

uint64_t sub_100340A9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100340AA4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100340AA8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100340AB0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDNearFieldTapType()
{
  return &type metadata for SDNearFieldTapType;
}

unint64_t sub_100340AD0()
{
  unint64_t result = qword_10064FA58;
  if (!qword_10064FA58)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D655C, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_10064FA58);
  }

  return result;
}

unint64_t sub_100340B18()
{
  unint64_t result = qword_10064FA60;
  if (!qword_10064FA60)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6614, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064FA60);
  }

  return result;
}

unint64_t sub_100340B60()
{
  unint64_t result = qword_10064FA68;
  if (!qword_10064FA68)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6584, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064FA68);
  }

  return result;
}

unint64_t sub_100340BA8()
{
  unint64_t result = qword_10064FA70;
  if (!qword_10064FA70)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D65AC, &type metadata for SDNearFieldTap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_10064FA70);
  }

  return result;
}

uint64_t sub_100340BEC(uint64_t a1, unint64_t a2)
{
  if (a1 == 1702125924 && a2 == 0xE400000000000000LL)
  {
    unint64_t v5 = 0xE400000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1702125924LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x696669746E656469LL && a2 == 0xEA00000000007265LL)
  {
    unint64_t v7 = 0xEA00000000007265LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469LL, 0xEA00000000007265LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0xD000000000000011LL && a2 == 0x800000010050B3A0LL)
  {
    unint64_t v8 = 0x800000010050B3A0LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000011LL, 0x800000010050B3A0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x614E656369766564LL && a2 == 0xEA0000000000656DLL)
  {
    unint64_t v9 = 0xEA0000000000656DLL;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x614E656369766564LL, 0xEA0000000000656DLL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v9 = a2;
    goto LABEL_26;
  }

  if (a1 == 0x6F4D656369766564LL && a2 == 0xEB000000006C6564LL)
  {
    unint64_t v10 = 0xEB000000006C6564LL;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6F4D656369766564LL, 0xEB000000006C6564LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v10 = a2;
    goto LABEL_32;
  }

  if (a1 == 0x49746E756F636361LL && a2 == 0xE900000000000044LL)
  {
    unint64_t v11 = 0xE900000000000044LL;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x49746E756F636361LL, 0xE900000000000044LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v11 = a2;
    goto LABEL_38;
  }

  if (a1 == 0xD000000000000010LL && a2 == 0x800000010050B3C0LL)
  {
    unint64_t v12 = 0x800000010050B3C0LL;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000010LL, 0x800000010050B3C0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v12 = a2;
    goto LABEL_44;
  }

  if (a1 == 1701869940 && a2 == 0xE400000000000000LL)
  {
    unint64_t v13 = 0xE400000000000000LL;
LABEL_50:
    swift_bridgeObjectRelease(v13);
    return 7LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701869940LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v13 = a2;
    goto LABEL_50;
  }

  if (a1 == 0x6341656D61537369LL && a2 == 0xED0000746E756F63LL)
  {
    unint64_t v14 = 0xED0000746E756F63LL;
LABEL_56:
    swift_bridgeObjectRelease(v14);
    return 8LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6341656D61537369LL, 0xED0000746E756F63LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v14 = a2;
    goto LABEL_56;
  }

  if (a1 == 0xD000000000000019LL && a2 == 0x800000010050B3E0LL)
  {
    unint64_t v15 = 0x800000010050B3E0LL;
LABEL_62:
    swift_bridgeObjectRelease(v15);
    return 9LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000019LL, 0x800000010050B3E0LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v15 = a2;
    goto LABEL_62;
  }

  if (a1 == 0xD000000000000018LL && a2 == 0x800000010050B400LL)
  {
    unint64_t v16 = 0x800000010050B400LL;
LABEL_68:
    swift_bridgeObjectRelease(v16);
    return 10LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD000000000000018LL, 0x800000010050B400LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v16 = a2;
    goto LABEL_68;
  }

  if (a1 == 0x746361736E617274LL && a2 == 0xED000044496E6F69LL)
  {
    unint64_t v17 = 0xED000044496E6F69LL;
LABEL_74:
    swift_bridgeObjectRelease(v17);
    return 11LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x746361736E617274LL, 0xED000044496E6F69LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v17 = a2;
    goto LABEL_74;
  }

  if (a1 == 0xD00000000000001DLL)
  {
    unint64_t v18 = 0x800000010050B420LL;
    if (a2 == 0x800000010050B420LL) {
      goto LABEL_79;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001DLL, 0x800000010050B420LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v18 = a2;
LABEL_79:
    swift_bridgeObjectRelease(v18);
    return 12LL;
  }

  if (a1 == 0x496E776F6E4B7369LL && a2 == 0xEF797469746E6564LL)
  {
    unint64_t v19 = 0xEF797469746E6564LL;
LABEL_85:
    swift_bridgeObjectRelease(v19);
    return 13LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x496E776F6E4B7369LL, 0xEF797469746E6564LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v19 = a2;
    goto LABEL_85;
  }

  if (a1 == 0xD00000000000001DLL)
  {
    unint64_t v20 = 0x800000010050B440LL;
    if (a2 == 0x800000010050B440LL) {
      goto LABEL_90;
    }
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001DLL, 0x800000010050B440LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v20 = a2;
LABEL_90:
    swift_bridgeObjectRelease(v20);
    return 14LL;
  }

  if (a1 == 0xD00000000000001BLL && a2 == 0x800000010050B460LL)
  {
    swift_bridgeObjectRelease(0x800000010050B460LL);
    return 15LL;
  }

  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(0xD00000000000001BLL, 0x800000010050B460LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v21 & 1) != 0) {
      return 15LL;
    }
    else {
      return 16LL;
    }
  }

unint64_t sub_100341280()
{
  unint64_t result = qword_10064FA78;
  if (!qword_10064FA78)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D64E4, &type metadata for SDNearFieldTapType);
    atomic_store(result, (unint64_t *)&qword_10064FA78);
  }

  return result;
}

uint64_t type metadata accessor for SDTempPairingStatusItemController()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDTempPairingStatusItemController);
}

uint64_t sub_1003412E4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064FB18);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064FB18);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_100341374(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for __DataStorage(0LL);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  __DataStorage.init(length:)(32LL);
  __asm { BR              X10 }

uint64_t sub_1003413F0()
{
  uint64_t v4 = v1;
  __int16 v5 = v2;
  char v6 = BYTE2(v2);
  char v7 = BYTE3(v2);
  char v8 = BYTE4(v2);
  char v9 = BYTE5(v2);
  sub_100342114((uint64_t)&v4, (uint64_t)&v4 + BYTE6(v2), v0, (uint64_t)&v10);
  return v10;
}

unint64_t sub_100341568()
{
  return sub_1003415A0(0xD00000000000002CLL, 0x8000000100505830LL);
}

unint64_t sub_100341584()
{
  return sub_1003415A0(0xD00000000000002ALL, 0x800000010050B840LL);
}

unint64_t sub_1003415A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100183098(&qword_100648080);
  uint64_t inited = swift_initStackObject(v5, v17);
  *(_OWORD *)(inited + sub_100195658(v0 + 16) = xmmword_1004CD1E0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString(0LL);
  *(void *)(inited + 40) = kSecClassGenericPassword;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = kSecAttrAccessGroup;
  *(void *)(inited + 80) = 0xD00000000000001BLL;
  *(void *)(inited + 88) = 0x8000000100503630LL;
  *(void *)(inited + 104) = &type metadata for String;
  *(void *)(inited + 112) = kSecAttrAccount;
  *(void *)(inited + 120) = a1;
  *(void *)(inited + 128) = a2;
  *(void *)(inited + 144) = &type metadata for String;
  *(void *)(inited + 152) = kSecAttrService;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void *)(v2 + 24);
  *(void *)(inited + 160) = v8;
  *(void *)(inited + 168) = v9;
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 192) = kSecUseDataProtectionKeychain;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(_BYTE *)(inited + 200) = 1;
  uint64_t v10 = (id)kSecClass;
  unint64_t v11 = (id)kSecClassGenericPassword;
  unint64_t v12 = (id)kSecAttrAccessGroup;
  unint64_t v13 = (id)kSecAttrAccount;
  unint64_t v14 = (id)kSecAttrService;
  swift_bridgeObjectRetain(v9);
  unint64_t v15 = (id)kSecUseDataProtectionKeychain;
  return sub_100391DD8(inited);
}

void *sub_1003416E0()
{
  unint64_t result = (void *)String.utf8CString.getter(0x6F6C6E556F747541LL, 0xEE006F666E496B63LL);
  off_10064FB30 = result;
  return result;
}

void *sub_10034171C()
{
  unint64_t result = (void *)String.utf8CString.getter(0x6F6C6E556F747541LL, 0xEE00746C61536B63LL);
  off_10064FB38 = result;
  return result;
}

void sub_100341758()
{
  uint64_t v0 = (const char *)sub_100341568();
  type metadata accessor for CFString(0LL);
  sub_100183F14( (unint64_t *)&qword_100644D10,  (uint64_t (*)(uint64_t))type metadata accessor for CFString,  (uint64_t)&unk_1004CCE0C);
  Class isa = (const __CFDictionary *)Dictionary._bridgeToObjectiveC()().super.isa;
  OSStatus v2 = SecItemDelete(isa);

  if (v2)
  {
    if (qword_1006441C0 != -1) {
      swift_once(&qword_1006441C0, sub_1003412E4);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v3, (uint64_t)qword_10064FB18);
    swift_bridgeObjectRetain(v0);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.error.getter(v5);
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc(18LL, -1LL);
      uint64_t v8 = (Class *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v7 = 138412546;
      Class v9 = Dictionary._bridgeToObjectiveC()().super.isa;
      Class v12 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v7 + 4, v7 + 12);
      *uint64_t v8 = v9;
      swift_bridgeObjectRelease_n(v0, 2LL);
      *(_WORD *)(v7 + 12) = 1024;
      OSStatus v11 = v2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v7 + 14, v7 + 18);
      _os_log_impl( (void *)&_mh_execute_header,  v5,  v6,  "Failed to delete keychain item: %@, error: %d",  (uint8_t *)v7,  0x12u);
      uint64_t v10 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v8, 1LL, v10);
      swift_slowDealloc(v8, -1LL, -1LL);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v0, 2LL);
    }
  }

  else
  {
    swift_bridgeObjectRelease(v0);
  }

void sub_100341998(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = (void *)v2;
  sub_10019BA8C(a1, a2);
  sub_100343830(a1, a2);
  sub_100189B20(a1, a2);
  uint64_t v7 = *(const char **)(v2 + 56);
  if (v7)
  {
    uint64_t v8 = v4[6];
    uint64_t v9 = sub_100183098(&qword_100648080);
    uint64_t inited = swift_initStackObject(v9, v24);
    *(_OWORD *)(inited + sub_100195658(v0 + 16) = xmmword_1004CE420;
    *(void *)(inited + 32) = kSecValueData;
    *(void *)(inited + 40) = a1;
    *(void *)(inited + 48) = a2;
    uint64_t v25 = v3;
    *(void *)(inited + 64) = &type metadata for Data;
    *(void *)(inited + 72) = kSecAttrAccessible;
    *(void *)(inited + 80) = v8;
    *(void *)(inited + 88) = v7;
    *(void *)(inited + 104) = &type metadata for String;
    *(void *)(inited + 112) = kSecAttrLabel;
    OSStatus v11 = (char *)v4[3];
    uint64_t v23 = v4[2];
    sub_10019BA8C(a1, a2);
    swift_bridgeObjectRetain(v7);
    Class v12 = (id)kSecValueData;
    uint64_t v13 = (id)kSecAttrAccessible;
    unint64_t v14 = (id)kSecAttrLabel;
    swift_bridgeObjectRetain(v11);
    v15._countAndFlagsBits = v23;
    v15._object = v11;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v11);
    *(void *)(inited + 120) = 0x3A676E69676E6172LL;
    *(void *)(inited + 128) = 0xE900000000000020LL;
    *(void *)(inited + 144) = &type metadata for String;
    *(void *)(inited + 152) = kSecAttrIsInvisible;
    *(void *)(inited + 184) = &type metadata for Bool;
    *(_BYTE *)(inited + 160) = 1;
    unint64_t v16 = (id)kSecAttrIsInvisible;
    unint64_t v17 = (const char *)sub_100391DD8(inited);
    unint64_t v18 = (const char *)sub_100341568();
    sub_100185BF4((uint64_t)v18, (uint64_t)v17);
    *(void *)&double v19 = swift_bridgeObjectRelease(v17).n128_u64[0];
    swift_bridgeObjectRelease(v18, v19);
  }

  else
  {
    unint64_t v20 = sub_100187014();
    uint64_t v21 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v20, 0LL, 0LL);
    *(_DWORD *)uint64_t v22 = 10;
    *(void *)(v22 + 8) = 0xD00000000000002CLL;
    *(void *)(v22 + sub_100195658(v0 + 16) = 0x800000010050B810LL;
    swift_willThrow(v21);
  }

void sub_100341BA8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v2 + 96);
  unint64_t v6 = *(void *)(v2 + 104);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  sub_10019BA8C(a1, a2);
  sub_100189B0C(v5, v6);
  id v7 = [objc_allocWithZone((Class)SDAutoUnlockEscrowSecretInfo) init];
  if (v7)
  {
    uint64_t v8 = v7;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v8 setSecret:isa];

    id v10 = [v8 data];
    if (v10)
    {
      OSStatus v11 = v10;
      uint64_t v12 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v10);
      unint64_t v14 = v13;
      unint64_t v33 = v13;

      uint64_t v15 = sub_100183098(&qword_100648080);
      uint64_t inited = swift_initStackObject(v15, v35);
      *(_OWORD *)(inited + sub_100195658(v0 + 16) = xmmword_1004CD550;
      *(void *)(inited + 32) = kSecValueData;
      *(void *)(inited + 40) = v12;
      *(void *)(inited + 48) = v14;
      uint64_t v36 = v3;
      *(void *)(inited + 64) = &type metadata for Data;
      *(void *)(inited + 72) = kSecAttrAccessible;
      type metadata accessor for CFString(0LL);
      *(void *)(inited + 80) = kSecAttrAccessibleAfterFirstUnlock;
      *(void *)(inited + 104) = v17;
      *(void *)(inited + 112) = kSecAttrLabel;
      unint64_t v18 = *(char **)(v4 + 24);
      uint64_t v34 = *(void *)(v4 + 16);
      double v19 = (id)kSecValueData;
      sub_10019BA8C(v12, v33);
      unint64_t v20 = (id)kSecAttrAccessible;
      uint64_t v21 = (id)kSecAttrAccessibleAfterFirstUnlock;
      uint64_t v22 = (id)kSecAttrLabel;
      swift_bridgeObjectRetain(v18);
      v23._countAndFlagsBits = v34;
      v23._object = v18;
      String.append(_:)(v23);
      swift_bridgeObjectRelease(v18);
      *(void *)(inited + 144) = &type metadata for String;
      *(void *)(inited + 120) = 0x203A776F72637365LL;
      *(void *)(inited + 128) = 0xE800000000000000LL;
      uint64_t v24 = (const char *)sub_100391DD8(inited);
      uint64_t v25 = (const char *)sub_100341584();
      sub_100185BF4((uint64_t)v25, (uint64_t)v24);
      *(void *)&double v26 = swift_bridgeObjectRelease(v24).n128_u64[0];
      swift_bridgeObjectRelease(v25, v26);
      sub_100189B20(v12, v33);
    }

    else
    {
      unint64_t v30 = sub_100187014();
      uint64_t v31 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v30, 0LL, 0LL);
      *(_DWORD *)uint64_t v32 = 10;
      *(void *)(v32 + 8) = 0xD000000000000036LL;
      *(void *)(v32 + sub_100195658(v0 + 16) = 0x800000010050B7D0LL;
      swift_willThrow(v31);
    }
  }

  else
  {
    unint64_t v27 = sub_100187014();
    uint64_t v28 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v27, 0LL, 0LL);
    *(_DWORD *)uint64_t v29 = 10;
    *(void *)(v29 + 8) = 0xD00000000000002DLL;
    *(void *)(v29 + sub_100195658(v0 + 16) = 0x800000010050B7A0LL;
    swift_willThrow(v28);
  }

void sub_100341E70()
{
  uint64_t v1 = v0;
  uint64_t v2 = (const void *)sub_100341584();
  uint64_t v3 = sub_100186A64(v2);
  unint64_t v5 = v4;
  swift_bridgeObjectRelease(v2);
  if (v5 >> 60 == 15)
  {
    Class isa = 0LL;
  }

  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100189B0C(v3, v5);
  }

  id v25 = [objc_allocWithZone((Class)SDAutoUnlockEscrowSecretInfo) initWithData:isa];

  if (v25 && (id v7 = [v25 secret]) != 0)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v7);
    unint64_t v11 = v10;
  }

  else
  {
    uint64_t v9 = 0LL;
    unint64_t v11 = 0xF000000000000000LL;
  }

  uint64_t v12 = *(void *)(v1 + 96);
  unint64_t v13 = *(void *)(v1 + 104);
  *(void *)(v1 + 96) = v9;
  *(void *)(v1 + 104) = v11;
  sub_100189B0C(v12, v13);
  if (qword_1006441C0 != -1) {
    swift_once(&qword_1006441C0, sub_1003412E4);
  }
  uint64_t v14 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v14, (uint64_t)qword_10064FB18);
  uint64_t v15 = swift_retain_n(v1, 2LL);
  unint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    unint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)unint64_t v18 = 136315138;
    uint64_t v28 = v19;
    unint64_t v20 = *(void *)(v1 + 104);
    uint64_t v26 = *(void *)(v1 + 96);
    unint64_t v27 = v20;
    sub_1001A4C04(v26, v20);
    uint64_t v21 = sub_100183098(&qword_100645150);
    uint64_t v22 = String.init<A>(describing:)(&v26, v21);
    unint64_t v24 = v23;
    uint64_t v26 = sub_10018CDB4(v22, v23, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v18 + 4, v18 + 12);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Loaded escrow: %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v1, 2LL);
  }

void sub_100342114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1006441D0 != -1) {
    swift_once(&qword_1006441D0, sub_10034171C);
  }
  if (qword_1006441C8 != -1) {
    swift_once(&qword_1006441C8, sub_1003416E0);
  }
  sub_100343438(a4);
}

uint64_t sub_1003421E8()
{
  *(void *)&double v1 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 24)).n128_u64[0];
  *(void *)&double v2 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 40), v1).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + 56), v2);
  sub_100189B20(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_100189B0C(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_100189B0C(*(void *)(v0 + 96), *(void *)(v0 + 104));
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 120)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + 136), v3);
  sub_100187100( v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate,  &qword_1006457E8);
  sub_100187100(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID, &qword_10064DA60);
  sub_100187100( v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate,  &qword_1006457E8);
  sub_100187100( v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID,  &qword_10064DA60);
  sub_100187100( v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate,  &qword_1006457E8);
  sub_100189B0C( *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey),  *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey + 8));
  return v0;
}

uint64_t sub_1003422D4()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_1003422F8()
{
  return _s9RemoteLTKCMa(0LL);
}

uint64_t _s9RemoteLTKCMa(uint64_t a1)
{
  uint64_t result = qword_10064FB70;
  if (!qword_10064FB70) {
    return swift_getSingletonMetadata(a1, &_s9RemoteLTKCMn);
  }
  return result;
}

void sub_10034233C(uint64_t a1)
{
  v7[0] = &unk_1004D6770;
  v7[1] = &unk_1004D6770;
  uint64_t v7[2] = &unk_1004D6788;
  void v7[3] = &unk_1004D67A0;
  v7[4] = &unk_1004D67B8;
  v7[5] = &unk_1004D67B8;
  v7[6] = &unk_1004D6788;
  v7[7] = &unk_1004D6788;
  sub_1001C1100( 319LL,  (unint64_t *)&qword_10064CB50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    v7[8] = v4;
    v7[9] = &unk_1004D67D0;
    sub_1001C1100( 319LL,  (unint64_t *)&qword_100645EF0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    if (v6 <= 0x3F)
    {
      uint64_t v8 = *(void *)(v5 - 8) + 64LL;
      uint64_t v9 = v4;
      uint64_t v10 = v8;
      uint64_t v11 = v4;
      uint64_t v12 = &unk_1004D67B8;
      swift_updateClassMetadata2(a1, 256LL, 15LL, v7, a1 + 80);
    }
  }

void sub_100342428()
{
  uint64_t v1 = sub_100183098(&qword_10064DA60);
  uint64_t v2 = __chkstk_darwin(v1);
  v22[5] = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v22[7] = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  void v22[2] = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  v22[0] = (char *)v22 - v7;
  uint64_t v8 = sub_100183098(&qword_1006457E8);
  uint64_t v9 = __chkstk_darwin(v8);
  v22[6] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = __chkstk_darwin(v9);
  v22[4] = (char *)v22 - v12;
  __chkstk_darwin(v11);
  uint64_t v13 = type metadata accessor for Date(0LL);
  v22[8] = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  v22[3] = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v14);
  v22[1] = (char *)v22 - v17;
  __chkstk_darwin(v16);
  unint64_t v23 = 0LL;
  unint64_t v24 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(44LL);
  swift_bridgeObjectRelease(v24);
  unint64_t v23 = 0xD000000000000015LL;
  unint64_t v24 = 0x800000010050B630LL;
  uint64_t v18 = *(void *)(v0 + 16);
  uint64_t v19 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v19);
  v20._countAndFlagsBits = v18;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = 0xD000000000000013LL;
  v21._object = (void *)0x800000010050B650LL;
  String.append(_:)(v21);
  __asm { BR              X13 }

uint64_t sub_1003426B8()
{
  *(void *)(v7 - 160) = BYTE6(v0);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = (const char *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  uint64_t v10 = *(void *)(v7 - 120);
  *(void *)(v7 - 104) = *(void *)(v7 - 128);
  *(void *)(v7 - 96) = v10;
  *(void *)(v7 - 128) = 0LL;
  *(void *)(v7 - 120) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(18LL);
  *(void *)&double v11 = swift_bridgeObjectRelease((const char *)*(void *)(v7 - 120)).n128_u64[0];
  *(void *)(v7 - 128) = 0xD000000000000010LL;
  *(void *)(v7 - 120) = 0x800000010050B670LL;
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(char **)(v2 + 40);
  swift_bridgeObjectRetain(v13, v11);
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = *(void *)(v7 - 128);
  uint64_t v16 = *(void **)(v7 - 120);
  v15._object = v16;
  String.append(_:)(v15);
  swift_bridgeObjectRelease((const char *)v16);
  *(void *)(v7 - 128) = 0LL;
  *(void *)(v7 - 120) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(45LL);
  uint64_t v17 = *(void *)(v7 - 120);
  *(void *)(v7 - 128) = *(void *)(v7 - 128);
  *(void *)(v7 - 120) = v17;
  v18._object = (void *)0x800000010050B690LL;
  v18._countAndFlagsBits = 0xD000000000000010LL;
  String.append(_:)(v18);
  unint64_t v19 = *(void *)(v2 + 88);
  if (v19 >> 60 != 15) {
    __asm { BR              X10 }
  }

  *(void *)(v7 - 160) = 0LL;
  *(_BYTE *)(v7 - 152) = 1;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v7 - 160,  &type metadata for Int,  &protocol witness table for Int);
  v20._countAndFlagsBits = 0x53776F7263736520LL;
  v20._object = (void *)0xEC0000003D657A69LL;
  String.append(_:)(v20);
  unint64_t v21 = *(void *)(v2 + 104);
  if (v21 >> 60 != 15) {
    __asm { BR              X10 }
  }

  *(void *)(v7 - 160) = 0LL;
  *(_BYTE *)(v7 - 152) = v21 >> 60 == 15;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v7 - 160,  &type metadata for Int,  &protocol witness table for Int);
  v22._countAndFlagsBits = 0x676E697269617020LL;
  v22._object = (void *)0xEB000000003D4449LL;
  String.append(_:)(v22);
  *(_OWORD *)(v7 - 160) = *(_OWORD *)(v2 + 112);
  DefaultStringInterpolation.appendInterpolation<A>(_:)( v7 - 160,  &type metadata for String,  &protocol witness table for String);
  v23._countAndFlagsBits = *(void *)(v7 - 128);
  unint64_t v24 = *(void **)(v7 - 120);
  v23._object = v24;
  String.append(_:)(v23);
  *(void *)&double v25 = swift_bridgeObjectRelease((const char *)v24).n128_u64[0];
  uint64_t v26 = *(char **)(v2 + 136);
  if (v26)
  {
    uint64_t v27 = *(void *)(v2 + 128);
    *(void *)(v7 - 128) = 0LL;
    *(void *)(v7 - 120) = 0xE000000000000000LL;
    swift_bridgeObjectRetain(v26, v25);
    _StringGuts.grow(_:)(18LL);
    swift_bridgeObjectRelease(*(const char **)(v7 - 120));
    *(void *)(v7 - 128) = 0xD000000000000010LL;
    *(void *)(v7 - 120) = 0x800000010050B780LL;
    v28._countAndFlagsBits = v27;
    v28._object = v26;
    String.append(_:)(v28);
    swift_bridgeObjectRelease(v26);
    v29._countAndFlagsBits = *(void *)(v7 - 128);
    unint64_t v30 = *(void **)(v7 - 120);
    v29._object = v30;
    String.append(_:)(v29);
    swift_bridgeObjectRelease((const char *)v30);
  }

  uint64_t v31 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  swift_beginAccess( v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate,  v7 - 128,  0LL,  0LL);
  sub_1001915A4(v31, v3, &qword_1006457E8);
  uint64_t v32 = *(void *)(v7 - 256);
  unint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v33(v3, 1LL, v1) == 1)
  {
    sub_100187100(v3, &qword_1006457E8);
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v6, v3, v1);
    *(void *)(v7 - 160) = 0LL;
    *(void *)(v7 - 152) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(20LL);
    swift_bridgeObjectRelease(*(const char **)(v7 - 152));
    *(void *)(v7 - 160) = 0xD000000000000012LL;
    *(void *)(v7 - 152) = 0x800000010050B760LL;
    uint64_t v34 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    v35._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v34);
    uint64_t v36 = (const char *)v35._object;
    String.append(_:)(v35);
    swift_bridgeObjectRelease(v36);
    v37._countAndFlagsBits = *(void *)(v7 - 160);
    uint64_t v38 = *(void **)(v7 - 152);
    v37._object = v38;
    String.append(_:)(v37);
    __n128 v39 = swift_bridgeObjectRelease((const char *)v38);
    (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v6, v1, v39);
  }

  *(void *)(v7 - 160) = 0LL;
  *(void *)(v7 - 152) = 0xE000000000000000LL;
  _StringGuts.grow(_:)(36LL);
  swift_bridgeObjectRelease(*(const char **)(v7 - 152));
  *(void *)(v7 - 160) = 0xD000000000000022LL;
  *(void *)(v7 - 152) = 0x800000010050B6B0LL;
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate)) {
    uint64_t v40 = 1702195828LL;
  }
  else {
    uint64_t v40 = 0x65736C6166LL;
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate)) {
    unint64_t v41 = (const char *)0xE400000000000000LL;
  }
  else {
    unint64_t v41 = (const char *)0xE500000000000000LL;
  }
  unint64_t v42 = v41;
  String.append(_:)(*(Swift::String *)&v40);
  swift_bridgeObjectRelease(v41);
  v43._countAndFlagsBits = *(void *)(v7 - 160);
  Swift::String v44 = *(void **)(v7 - 152);
  v43._object = v44;
  String.append(_:)(v43);
  swift_bridgeObjectRelease((const char *)v44);
  uint64_t v45 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  swift_beginAccess( v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID,  v7 - 160,  0LL,  0LL);
  uint64_t v46 = v45;
  uint64_t v47 = v5;
  sub_1001915A4(v46, v5, &qword_10064DA60);
  uint64_t v48 = *(void *)(v7 - 264);
  char v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v49(v5, 1LL, v4) == 1)
  {
    sub_100187100(v5, &qword_10064DA60);
  }

  else
  {
    uint64_t v50 = *(void *)(v7 - 320);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v50, v47, v4);
    *(void *)(v7 - 184) = 0LL;
    *(void *)(v7 - 176) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(19LL);
    swift_bridgeObjectRelease(*(const char **)(v7 - 176));
    *(void *)(v7 - 184) = 0xD000000000000011LL;
    *(void *)(v7 - 176) = 0x800000010050B740LL;
    uint64_t v51 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v51);
    uint64_t v53 = (const char *)v52._object;
    String.append(_:)(v52);
    swift_bridgeObjectRelease(v53);
    v54._countAndFlagsBits = *(void *)(v7 - 184);
    uint64_t v55 = *(void **)(v7 - 176);
    v54._object = v55;
    String.append(_:)(v54);
    uint64_t v56 = (const char *)v55;
    uint64_t v48 = *(void *)(v7 - 264);
    __n128 v57 = swift_bridgeObjectRelease(v56);
    (*(void (**)(uint64_t, uint64_t, __n128))(v48 + 8))(v50, v4, v57);
  }

  uint64_t v58 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate;
  swift_beginAccess( v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate,  v7 - 184,  0LL,  0LL);
  uint64_t v59 = v58;
  uint64_t v60 = *(void *)(v7 - 288);
  sub_1001915A4(v59, v60, &qword_1006457E8);
  unsigned int v61 = v33(v60, 1LL, v1);
  uint64_t v62 = *(void *)(v7 - 256);
  if (v61 == 1)
  {
    sub_100187100(v60, &qword_1006457E8);
  }

  else
  {
    uint64_t v63 = *(void *)(v7 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v63, v60, v1);
    *(void *)(v7 - 208) = 0LL;
    *(void *)(v7 - 200) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(26LL);
    swift_bridgeObjectRelease(*(const char **)(v7 - 200));
    *(void *)(v7 - 208) = 0xD000000000000018LL;
    *(void *)(v7 - 200) = 0x800000010050B720LL;
    uint64_t v64 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    v65._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v64);
    uint64_t v66 = (const char *)v65._object;
    String.append(_:)(v65);
    swift_bridgeObjectRelease(v66);
    v67._countAndFlagsBits = *(void *)(v7 - 208);
    unint64_t v68 = *(void **)(v7 - 200);
    v67._object = v68;
    String.append(_:)(v67);
    unint64_t v69 = (const char *)v68;
    uint64_t v48 = *(void *)(v7 - 264);
    __n128 v70 = swift_bridgeObjectRelease(v69);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v63, v1, v70);
  }

  uint64_t v71 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID;
  swift_beginAccess( v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID,  v7 - 208,  0LL,  0LL);
  uint64_t v72 = v71;
  uint64_t v73 = *(void *)(v7 - 280);
  sub_1001915A4(v72, v73, &qword_10064DA60);
  if (v49(v73, 1LL, v4) == 1)
  {
    sub_100187100(v73, &qword_10064DA60);
  }

  else
  {
    uint64_t v74 = *(void *)(v7 - 304);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v74, v73, v4);
    *(void *)(v7 - 232) = 0LL;
    *(void *)(v7 - 224) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(25LL);
    swift_bridgeObjectRelease(*(const char **)(v7 - 224));
    *(void *)(v7 - 232) = 0xD000000000000017LL;
    *(void *)(v7 - 224) = 0x800000010050B700LL;
    uint64_t v75 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    v76._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v4, v75);
    uint64_t v77 = v48;
    unint64_t v78 = (const char *)v76._object;
    String.append(_:)(v76);
    swift_bridgeObjectRelease(v78);
    v79._countAndFlagsBits = *(void *)(v7 - 232);
    uint64_t v80 = *(void **)(v7 - 224);
    v79._object = v80;
    String.append(_:)(v79);
    __n128 v81 = swift_bridgeObjectRelease((const char *)v80);
    (*(void (**)(uint64_t, uint64_t, __n128))(v77 + 8))(v74, v4, v81);
  }

  uint64_t v82 = v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate;
  swift_beginAccess( v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate,  v7 - 232,  0LL,  0LL);
  uint64_t v83 = v82;
  uint64_t v84 = *(void *)(v7 - 272);
  sub_1001915A4(v83, v84, &qword_1006457E8);
  if (v33(v84, 1LL, v1) == 1)
  {
    sub_100187100(v84, &qword_1006457E8);
  }

  else
  {
    uint64_t v85 = *(void *)(v7 - 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v85, v84, v1);
    *(void *)(v7 - 248) = 0LL;
    *(void *)(v7 - 240) = 0xE000000000000000LL;
    _StringGuts.grow(_:)(25LL);
    swift_bridgeObjectRelease(*(const char **)(v7 - 240));
    *(void *)(v7 - 248) = 0xD000000000000017LL;
    *(void *)(v7 - 240) = 0x800000010050B6E0LL;
    uint64_t v86 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
    v87._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v86);
    uint64_t v88 = (const char *)v87._object;
    String.append(_:)(v87);
    swift_bridgeObjectRelease(v88);
    v89._countAndFlagsBits = *(void *)(v7 - 248);
    uint64_t v90 = *(void **)(v7 - 240);
    v89._object = v90;
    String.append(_:)(v89);
    __n128 v91 = swift_bridgeObjectRelease((const char *)v90);
    (*(void (**)(uint64_t, uint64_t, __n128))(v62 + 8))(v85, v1, v91);
  }

  return *(void *)(v7 - 104);
}

uint64_t sub_1003430A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_10064FDD8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_1003443D8();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s9RemoteLTKC18FileRepresentationV10CodingKeysON,  &_s9RemoteLTKC18FileRepresentationV10CodingKeysON,  v11,  v9,  v10);
  uint64_t v12 = *v3;
  uint64_t v13 = v3[1];
  LOBYTE(v22) = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, v13, &v22, v5);
  if (!v2)
  {
    uint64_t v14 = v3[2];
    uint64_t v15 = v3[3];
    LOBYTE(v22) = 1;
    KeyedEncodingContainer.encode(_:forKey:)(v14, v15, &v22, v5);
    __int128 v22 = *((_OWORD *)v3 + 2);
    char v21 = 2;
    unint64_t v16 = sub_10020C2A8();
    KeyedEncodingContainer.encode<A>(_:forKey:)(&v22, &v21, v5, &type metadata for Data, v16);
    uint64_t v17 = v3[6];
    uint64_t v18 = v3[7];
    LOBYTE(v22) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, v18, &v22, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10034321C()
{
}

uint64_t sub_10034323C()
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100343270 + 4 * byte_1004D6710[*v0]))( 0x696669746E656469LL,  0xEA00000000007265LL);
}

uint64_t sub_100343270()
{
  return 0x4449656369766564LL;
}

uint64_t sub_100343288()
{
  return 0x654B64656E676973LL;
}

uint64_t sub_1003432AC()
{
  return 0x49676E6972696170LL;
}

uint64_t sub_1003432C8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_100343ECC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003432EC(uint64_t a1)
{
  unint64_t v2 = sub_1003443D8();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100343314(uint64_t a1)
{
  unint64_t v2 = sub_1003443D8();
  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10034333C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  if (!v2)
  {
    __int128 v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    __int128 v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }

  return result;
}

uint64_t sub_10034337C(void *a1)
{
  return sub_1003430A0(a1);
}

void sub_100343390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = __DataStorage._bytes.getter();
  if (v9)
  {
    uint64_t v10 = __DataStorage._offset.getter();
    if (__OFSUB__(a1, v10))
    {
LABEL_13:
      __break(1u);
      return;
    }

    v9 += a1 - v10;
  }

  BOOL v11 = __OFSUB__(a2, a1);
  uint64_t v12 = a2 - a1;
  if (v11)
  {
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v13 = __DataStorage._length.getter();
  if (v13 >= v12) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  uint64_t v15 = v9 + v14;
  if (v9) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = 0LL;
  }
  sub_100342114(v9, v16, a4, a5);
}

void sub_100343438(uint64_t a1)
{
  __asm { BR              X13 }

uint64_t sub_1003434A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v19 = v8;
  LOWORD(v20) = v7;
  BYTE2(v20) = BYTE2(v7);
  HIBYTE(v20) = BYTE3(v7);
  if (v12) {
    uint64_t v14 = v13 - v12;
  }
  else {
    uint64_t v14 = 0LL;
  }
  unsigned __int8 v21 = BYTE4(v7);
  unsigned __int8 v22 = BYTE5(v7);
  if (v11) {
    uint64_t v15 = a5 - v11;
  }
  else {
    uint64_t v15 = 0LL;
  }
  unsigned __int8 v23 = BYTE6(v7);
  if (v10) {
    uint64_t v16 = a7 - v10;
  }
  else {
    uint64_t v16 = 0LL;
  }
  uint64_t result = CryptoHKDF(kCryptoHashDescriptor_SHA512, v12, v14, v11, v15, v10, v16, BYTE6(v7), &v19);
  unint64_t v18 = v20 | ((unint64_t)v21 << 32) | ((unint64_t)v22 << 40) | ((unint64_t)v23 << 48);
  *uint64_t v9 = v19;
  v9[1] = v18;
  return result;
}

void sub_100343738(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  if ((int)v14 < (int)v13)
  {
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v25 = a7;
  uint64_t v15 = __DataStorage._bytes.getter();
  if (!v15)
  {
LABEL_19:
    __break(1u);
    return;
  }

  uint64_t v16 = v15;
  uint64_t v17 = __DataStorage._offset.getter();
  uint64_t v18 = v13 - v17;
  if (__OFSUB__(v13, v17))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  uint64_t v19 = v14 - v13;
  uint64_t v20 = __DataStorage._length.getter();
  if (v20 >= v19) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v20;
  }
  if (a2) {
    uint64_t v22 = a3 - a2;
  }
  else {
    uint64_t v22 = 0LL;
  }
  if (a4) {
    uint64_t v23 = a5 - a4;
  }
  else {
    uint64_t v23 = 0LL;
  }
  if (a6) {
    uint64_t v24 = v25 - a6;
  }
  else {
    uint64_t v24 = 0LL;
  }
  CryptoHKDF(kCryptoHashDescriptor_SHA512, a2, v22, a4, v23, a6, v24, v21, v16 + v18);
}

uint64_t sub_100343830(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 80);
  unint64_t v5 = *(void *)(v2 + 88);
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  sub_1001A4C04(a1, a2);
  sub_100189B0C(v4, v5);
  uint64_t v7 = *(void *)(v2 + 80);
  unint64_t v6 = *(void *)(v2 + 88);
  if (v6 >> 60 == 15)
  {
    uint64_t v8 = (uint64_t *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    unint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey + 8);
    *uint64_t v8 = v7;
    v8[1] = v6;
  }

  else
  {
    sub_10019BA8C(*(void *)(v2 + 80), *(void *)(v2 + 88));
    sub_100341374(v7, v6);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    sub_100189B0C(v7, v6);
    uint64_t v15 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey);
    unint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey + 8);
    *uint64_t v15 = v12;
    v15[1] = v14;
  }

  return sub_100189B0C(v9, v10);
}

uint64_t sub_1003438E0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 80) = xmmword_1004CD540;
  *(_OWORD *)(v3 + 96) = xmmword_1004CD540;
  *(_OWORD *)(v3 + 128) = 0u;
  *(_OWORD *)(v3 + 112) = 0u;
  uint64_t v6 = v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL);
  v8(v6, 1LL, 1LL, v7);
  *(_BYTE *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate) = 0;
  uint64_t v9 = v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  uint64_t v10 = type metadata accessor for UUID(0LL);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  v11(v9, 1LL, 1LL, v10);
  v8(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate, 1LL, 1LL, v7);
  v11(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID, 1LL, 1LL, v10);
  v8(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate, 1LL, 1LL, v7);
  *(_OWORD *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey) = xmmword_1004CD540;
  __int128 v12 = *a1;
  __int128 v23 = a1[1];
  __int128 v13 = v23;
  __int128 v24 = v12;
  *(_OWORD *)(v3 + sub_100195658(v0 + 16) = v12;
  *(_OWORD *)(v3 + 32) = v13;
  sub_100343AC0((uint64_t)(a1 + 3), (uint64_t)v22);
  uint64_t v14 = *(void *)(v3 + 120);
  sub_100343AC0((uint64_t)v22, v3 + 112);
  sub_100343B08((uint64_t)&v24);
  sub_100343B08((uint64_t)&v23);
  sub_100343B08((uint64_t)v22);
  swift_bridgeObjectRelease(v14);
  __int128 v21 = a1[2];
  *(_OWORD *)(v3 + 64) = v21;
  *(void *)(v3 + 48) = a2;
  *(void *)(v3 + 56) = a3;
  sub_100343B30((uint64_t)&v21);
  sub_100341E70();
  uint64_t v15 = (const void *)sub_100341568();
  uint64_t v16 = sub_100186A64(v15);
  unint64_t v18 = v17;
  swift_bridgeObjectRelease(v15);
  sub_100343830(v16, v18);
  sub_100189B0C(v16, v18);
  return v3;
}

uint64_t sub_100343AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_1006462D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100343B08(uint64_t a1)
{
  return a1;
}

uint64_t sub_100343B30(uint64_t a1)
{
  return a1;
}

__n128 _s9RemoteLTKC18FileRepresentationVwxx(uint64_t a1)
{
  *(void *)&double v2 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + 8)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(a1 + 24), v2);
  sub_100189B20(*(void *)(a1 + 32), *(void *)(a1 + 40));
  return swift_bridgeObjectRelease((const char *)*(void *)(a1 + 56));
}

void *_s9RemoteLTKC18FileRepresentationVwcp(void *a1, void *a2)
{
  uint64_t v4 = (const char *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  unint64_t v5 = (const char *)a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[4];
  unint64_t v7 = a2[5];
  *(void *)&double v8 = swift_bridgeObjectRetain(v4).n128_u64[0];
  swift_bridgeObjectRetain(v5, v8);
  sub_10019BA8C(v6, v7);
  a1[4] = v6;
  a1[5] = v7;
  uint64_t v9 = (const char *)a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRetain(v9);
  return a1;
}

void *_s9RemoteLTKC18FileRepresentationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (const char *)a2[1];
  unint64_t v5 = (const char *)a1[1];
  a1[1] = v4;
  *(void *)&double v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  *(void *)&double v7 = swift_bridgeObjectRelease(v5, v6).n128_u64[0];
  a1[2] = a2[2];
  double v8 = (const char *)a2[3];
  uint64_t v9 = (const char *)a1[3];
  a1[3] = v8;
  *(void *)&double v10 = swift_bridgeObjectRetain(v8, v7).n128_u64[0];
  swift_bridgeObjectRelease(v9, v10);
  uint64_t v11 = a2[4];
  unint64_t v12 = a2[5];
  sub_10019BA8C(v11, v12);
  uint64_t v13 = a1[4];
  unint64_t v14 = a1[5];
  a1[4] = v11;
  a1[5] = v12;
  sub_100189B20(v13, v14);
  a1[6] = a2[6];
  uint64_t v15 = (const char *)a2[7];
  uint64_t v16 = (const char *)a1[7];
  a1[7] = v15;
  *(void *)&double v17 = swift_bridgeObjectRetain(v15).n128_u64[0];
  swift_bridgeObjectRelease(v16, v17);
  return a1;
}

void *_s9RemoteLTKC18FileRepresentationVwta(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = (const char *)a1[1];
  *a1 = *(void *)a2;
  a1[1] = v4;
  *(void *)&double v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
  uint64_t v7 = *(void *)(a2 + 24);
  double v8 = (const char *)a1[3];
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v7;
  swift_bridgeObjectRelease(v8, v6);
  uint64_t v9 = a1[4];
  unint64_t v10 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  sub_100189B20(v9, v10);
  uint64_t v11 = *(void *)(a2 + 56);
  unint64_t v12 = (const char *)a1[7];
  a1[6] = *(void *)(a2 + 48);
  a1[7] = v11;
  swift_bridgeObjectRelease(v12);
  return a1;
}

ValueMetadata *_s9RemoteLTKC18FileRepresentationVMa()
{
  return &_s9RemoteLTKC18FileRepresentationVN;
}

uint64_t sub_100343D20( uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  *(_OWORD *)(v9 + 80) = xmmword_1004CD540;
  *(_OWORD *)(v9 + 96) = xmmword_1004CD540;
  *(_OWORD *)(v9 + 112) = 0u;
  *(_OWORD *)(v9 + 128) = 0u;
  uint64_t v14 = v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDate;
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL);
  v16(v14, 1LL, 1LL, v15);
  *(_BYTE *)(v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_lastRegistrationDateAsUnlockDate) = 0;
  uint64_t v17 = v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionID;
  uint64_t v18 = type metadata accessor for UUID(0LL);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL);
  v19(v17, 1LL, 1LL, v18);
  v16(v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_activeSessionStartDate, 1LL, 1LL, v15);
  v19(v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationSessionID, 1LL, 1LL, v18);
  v16(v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_registrationStartDate, 1LL, 1LL, v15);
  *(_OWORD *)(v9 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication9RemoteLTK_sessionKey) = xmmword_1004CD540;
  *(void *)(v9 + 32) = a1;
  *(void *)(v9 + 40) = a2;
  *(void *)(v9 + 48) = a7;
  *(void *)(v9 + 56) = a8;
  *(void *)(v9 + 64) = a5;
  *(void *)(v9 + 72) = a6;
  swift_bridgeObjectRetain(a2);
  sub_10019BA8C(a5, a6);
  v20._countAndFlagsBits = 95LL;
  v20._object = (void *)0xE100000000000000LL;
  String.append(_:)(v20);
  v21._countAndFlagsBits = a1;
  v21._object = a2;
  String.append(_:)(v21);
  *(void *)(v9 + sub_100195658(v0 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  return v9;
}

uint64_t sub_100343ECC(uint64_t a1, unint64_t a2)
{
  if (a1 == 0x696669746E656469LL && a2 == 0xEA00000000007265LL)
  {
    unint64_t v5 = 0xEA00000000007265LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x696669746E656469LL, 0xEA00000000007265LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 0x4449656369766564LL && a2 == 0xE800000000000000LL)
  {
    unint64_t v7 = 0xE800000000000000LL;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x4449656369766564LL, 0xE800000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v7 = a2;
    goto LABEL_14;
  }

  if (a1 == 0x654B64656E676973LL && a2 == 0xED00006174614479LL)
  {
    unint64_t v8 = 0xED00006174614479LL;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2LL;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x654B64656E676973LL, 0xED00006174614479LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v8 = a2;
    goto LABEL_20;
  }

  if (a1 == 0x49676E6972696170LL && a2 == 0xE900000000000044LL)
  {
    swift_bridgeObjectRelease(0xE900000000000044LL);
    return 3LL;
  }

  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x49676E6972696170LL, 0xE900000000000044LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v9 & 1) != 0) {
      return 3LL;
    }
    else {
      return 4LL;
    }
  }

void sub_1003440C0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100183098(&qword_10064FDC8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_1003443D8();
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s9RemoteLTKC18FileRepresentationV10CodingKeysON,  &_s9RemoteLTKC18FileRepresentationV10CodingKeysON,  v11,  v9,  v10);
  if (v2)
  {
    sub_10018709C(a1);
  }

  else
  {
    LOBYTE(v37) = 0;
    uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    uint64_t v14 = v13;
    uint64_t v35 = v12;
    LOBYTE(v37) = 1;
    swift_bridgeObjectRetain(v13);
    uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)(&v37, v5);
    uint64_t v36 = v16;
    uint64_t v17 = v16;
    uint64_t v34 = v15;
    char v39 = 2;
    unint64_t v18 = sub_10020C198();
    swift_bridgeObjectRetain(v17);
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v37, &type metadata for Data, &v39, v5, &type metadata for Data, v18);
    uint64_t v19 = v37;
    LOBYTE(v37) = 3;
    unint64_t v32 = v38;
    uint64_t v33 = v19;
    sub_10019BA8C(v19, v38);
    uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v37, v5);
    uint64_t v22 = v21;
    __int128 v23 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v24 = v20;
    v23(v8, v5);
    *(void *)&double v25 = swift_bridgeObjectRetain(v14).n128_u64[0];
    uint64_t v26 = v36;
    swift_bridgeObjectRetain(v36, v25);
    unint64_t v28 = v32;
    uint64_t v27 = v33;
    sub_10019BA8C(v33, v32);
    swift_bridgeObjectRetain(v22);
    sub_100189B20(v27, v28);
    *(void *)&double v29 = swift_bridgeObjectRelease(v14).n128_u64[0];
    swift_bridgeObjectRelease(v26, v29);
    sub_10018709C(a1);
    *(void *)&double v30 = swift_bridgeObjectRelease(v26).n128_u64[0];
    swift_bridgeObjectRelease(v14, v30);
    sub_100189B20(v27, v28);
    swift_bridgeObjectRelease(v22);
    *a2 = v35;
    a2[1] = (uint64_t)v14;
    a2[2] = v34;
    a2[3] = (uint64_t)v26;
    a2[4] = v27;
    a2[5] = v28;
    a2[6] = v24;
    a2[7] = (uint64_t)v22;
  }

unint64_t sub_1003443D8()
{
  unint64_t result = qword_10064FDD0;
  if (!qword_10064FDD0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6938, &_s9RemoteLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064FDD0);
  }

  return result;
}

uint64_t _s9RemoteLTKC18FileRepresentationV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_100344468 + 4 * byte_1004D6719[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10034449C + 4 * byte_1004D6714[v4]))();
}

uint64_t sub_10034449C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003444A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1003444ACLL);
  }
  return result;
}

uint64_t sub_1003444B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1003444C0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_1003444C4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003444CC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s9RemoteLTKC18FileRepresentationV10CodingKeysOMa()
{
  return &_s9RemoteLTKC18FileRepresentationV10CodingKeysON;
}

unint64_t sub_1003444EC()
{
  unint64_t result = qword_10064FDE0;
  if (!qword_10064FDE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6910, &_s9RemoteLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064FDE0);
  }

  return result;
}

unint64_t sub_100344534()
{
  unint64_t result = qword_10064FDE8;
  if (!qword_10064FDE8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6880, &_s9RemoteLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064FDE8);
  }

  return result;
}

unint64_t sub_10034457C()
{
  unint64_t result = qword_10064FDF0;
  if (!qword_10064FDF0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D68A8, &_s9RemoteLTKC18FileRepresentationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_10064FDF0);
  }

  return result;
}

uint64_t sub_1003445C0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_10064FE00);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_10064FE00);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100344650(uint64_t a1)
{
  v2[133] = v1;
  v2[132] = a1;
  uint64_t v3 = sub_100183098(&qword_100646560);
  v2[134] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  v2[135] = v4;
  unint64_t v5 = (*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[136] = swift_task_alloc(v5);
  v2[137] = swift_task_alloc(v5);
  return swift_task_switch(sub_1003446E4, v1, 0LL);
}

uint64_t sub_1003446E4()
{
  uint64_t v1 = (void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 1064);
  uint64_t v3 = OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer;
  *(void *)(v0 + 1104) = OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_timer;
  uint64_t v4 = *(void *)(v2 + v3);
  if (v4)
  {
    uint64_t v5 = qword_1006441D8;
    swift_retain();
    if (v5 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_10064FE00);
    unint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Response timer cancelled", v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    sub_100183098(&qword_100645710);
    Task.cancel()();
    swift_release(v4);
  }

  sub_1001915A4(*(void *)(v0 + 1056), v0 + 96, (uint64_t *)&unk_100650068);
  if (*(void *)(v0 + 120))
  {
    unint64_t v11 = (void *)(v0 + 56);
    uint64_t v12 = (void *)(v0 + 856);
    sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 56);
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v13, (uint64_t)qword_10064FE00);
    uint64_t v14 = sub_10019A6C4(v0 + 56, v0 + 416);
    uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v18 = swift_slowAlloc(32LL, -1LL);
      v83[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      sub_10019A6C4(v0 + 416, v0 + 136);
      uint64_t v19 = sub_100183098(&qword_1006500D0);
      uint64_t v20 = String.init<A>(describing:)(v0 + 136, v19);
      uint64_t v22 = (const char *)v21;
      *(void *)(v0 + 1048) = sub_10018CDB4(v20, v21, v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1048, v0 + 1056, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease(v22);
      sub_10018709C((void *)(v0 + 416));
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Received input %s)", v17, 0xCu);
      swift_arrayDestroy(v18, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1LL, -1LL);
      __int128 v23 = v17;
      uint64_t v12 = (void *)(v0 + 856);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      sub_10018709C((void *)(v0 + 416));
    }

    uint64_t v33 = *(void *)(v0 + 80);
    uint64_t v34 = sub_10019A708((void *)(v0 + 56), v33);
    *(void *)(v0 + 880) = v33;
    uint64_t v35 = sub_1001A4B04(v12);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16LL))(v35, v34, v33);
    sub_1003484C4((uint64_t)v12);
    uint64_t v36 = *(void *)(v0 + 1064);
    sub_10018709C(v12);
    sub_10019A6C4(v36 + 112, v0 + 376);
    uint64_t v37 = *(void *)(v0 + 400);
    uint64_t v38 = *(void *)(v0 + 408);
    sub_10019A708((void *)(v0 + 376), v37);
    uint64_t v39 = v36 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
    swift_beginAccess(v39, v0 + 912, 0LL, 0LL);
    sub_10019A6C4(v39, v0 + 296);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 80))(v0 + 56, v0 + 296, v37, v38);
    sub_10018709C((void *)(v0 + 296));
    uint64_t v1 = (void *)(v0 + 16);
    sub_1001CE0D0((__int128 *)(v0 + 336), v0 + 16);
    sub_10018709C((void *)(v0 + 376));
  }

  else
  {
    uint64_t v24 = *(void **)(v0 + 1064);
    sub_100187100(v0 + 96, (uint64_t *)&unk_100650068);
    uint64_t v25 = (uint64_t)(v24 + 14);
    uint64_t v26 = v24[17];
    uint64_t v27 = v24[18];
    unint64_t v28 = sub_10019A708(v24 + 14, v26);
    uint64_t v29 = *(void *)(v26 - 8);
    uint64_t v30 = swift_task_alloc((*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(uint64_t, void *, uint64_t))(v29 + 16))(v30, v28, v26);
    LOBYTE(v28) = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v26);
    swift_task_dealloc(v30);
    if ((v28 & 1) == 0)
    {
      uint64_t v40 = *(void *)(v0 + 1064);
      uint64_t v41 = *(void *)(v0 + 1056);
      v83[0] = 0LL;
      v83[1] = 0xE000000000000000LL;
      _StringGuts.grow(_:)(70LL);
      *(void *)(v0 + 984) = 0LL;
      *(void *)(v0 + 992) = 0xE000000000000000LL;
      v42._countAndFlagsBits = 0xD00000000000001CLL;
      v42._object = (void *)0x800000010050B920LL;
      String.append(_:)(v42);
      sub_10019A6C4(v25, v0 + 176);
      uint64_t v43 = *(void *)(v0 + 200);
      Swift::String v44 = sub_10019A708((void *)(v0 + 176), v43);
      uint64_t DynamicType = swift_getDynamicType(v44, v43, 1LL);
      sub_10018709C((void *)(v0 + 176));
      v46._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0LL);
      object = (const char *)v46._object;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(object);
      v48._object = (void *)0x800000010050B940LL;
      v48._countAndFlagsBits = 0xD000000000000010LL;
      String.append(_:)(v48);
      sub_1001915A4(v41, v0 + 216, (uint64_t *)&unk_100650068);
      uint64_t v49 = sub_100183098((uint64_t *)&unk_100650068);
      v50._countAndFlagsBits = String.init<A>(describing:)(v0 + 216, v49);
      uint64_t v51 = (const char *)v50._object;
      String.append(_:)(v50);
      swift_bridgeObjectRelease(v51);
      v52._countAndFlagsBits = 0xD000000000000014LL;
      v52._object = (void *)0x800000010050B960LL;
      String.append(_:)(v52);
      uint64_t v53 = v40 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
      swift_beginAccess( v40 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext,  v0 + 936,  0LL,  0LL);
      sub_10019A6C4(v53, v0 + 256);
      uint64_t v54 = sub_100183098(&qword_100645A28);
      _print_unlocked<A, B>(_:_:)( v0 + 256,  v0 + 984,  v54,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
      sub_10018709C((void *)(v0 + 256));
      uint64_t v55 = *(void *)(v0 + 984);
      uint64_t v56 = *(void *)(v0 + 992);
      unint64_t v57 = sub_100187014();
      uint64_t v58 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v57, 0LL, 0LL);
      *(_DWORD *)uint64_t v59 = 10;
      *(void *)(v59 + 8) = v55;
      *(void *)(v59 + sub_100195658(v0 + 16) = v56;
      swift_willThrow(v58);
      *(void *)(v0 + 1040) = v58;
      swift_errorRetain(v58);
      uint64_t v60 = sub_100183098(&qword_100645710);
      if (swift_dynamicCast( v0 + 960,  v0 + 1040,  v60,  &type metadata for SFAuthenticationErrorMessage,  0LL))
      {
        swift_errorRelease(v58);
        unsigned int v61 = *(const char **)(v0 + 976);
        sub_100346E2C(*(_DWORD *)(v0 + 960), *(void *)(v0 + 968), v61);
        swift_bridgeObjectRelease(v61);
        uint64_t v62 = *(void *)(v0 + 1040);
      }

      else
      {
        swift_errorRelease(*(void *)(v0 + 1040));
        *(void *)(v0 + 10sub_100195658(v0 + 16) = v58;
        swift_errorRetain(v58);
        type metadata accessor for SFAuthenticationError(0LL);
        if (swift_dynamicCast(v0 + 1144, v0 + 1016, v60, v63, 0LL))
        {
          swift_errorRelease(v58);
          sub_100346E2C(*(_DWORD *)(v0 + 1144), 0LL, (const char *)0xE000000000000000LL);
          uint64_t v62 = *(void *)(v0 + 1016);
        }

        else
        {
          swift_errorRelease(*(void *)(v0 + 1016));
          *(void *)(v0 + 1000) = 0LL;
          *(void *)(v0 + 1008) = 0xE000000000000000LL;
          *(void *)(v0 + 1032) = v58;
          _print_unlocked<A, B>(_:_:)( v0 + 1032,  v0 + 1000,  v60,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
          uint64_t v64 = *(const char **)(v0 + 1008);
          sub_100346E2C(0xAu, *(void *)(v0 + 1000), v64);
          swift_bridgeObjectRelease(v64);
          uint64_t v62 = v58;
        }
      }

      swift_errorRelease(v62);
      uint64_t v65 = *(void *)(v0 + 1088);
      uint64_t v66 = *(void *)(v0 + 1072);
      swift_task_dealloc(*(void *)(v0 + 1096));
      swift_task_dealloc(v65);
      swift_task_dealloc(v66);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }

    unint64_t v11 = (void *)(v0 + 576);
    sub_10019A6C4(v25, v0 + 576);
    uint64_t v31 = *(void *)(v0 + 600);
    uint64_t v32 = *(void *)(v0 + 608);
    sub_10019A708((void *)(v0 + 576), v31);
    (*(void (**)(uint64_t, uint64_t))(v32 + 72))(v31, v32);
  }

  sub_10018709C(v11);
  uint64_t v68 = *(void *)(v0 + 40);
  uint64_t v69 = *(void *)(v0 + 48);
  sub_10019A708(v1, v68);
  uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 16))(v68, v69);
  if ((v70 & 0x100000000LL) == 0)
  {
    int v71 = v70;
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v72 = type metadata accessor for Logger(0LL);
    uint64_t v73 = sub_100186DE4(v72, (uint64_t)qword_10064FE00);
    uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v75 = static os_log_type_t.default.getter(v74);
    if (os_log_type_enabled(v74, v75))
    {
      Swift::String v76 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)Swift::String v76 = 67109120;
      *(_DWORD *)(v0 + 1148) = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1148, v0 + 1152, v76 + 4, v76 + 8);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Using userID for keybag: %u", v76, 8u);
      swift_slowDealloc(v76, -1LL, -1LL);
    }
  }

  if (qword_100643F18 != -1) {
    swift_once(&qword_100643F18, sub_1001FC690);
  }
  uint64_t v77 = *(void *)(v0 + 1064);
  uint64_t v78 = *(void *)(v0 + 40);
  uint64_t v79 = *(void *)(v0 + 48);
  sub_10019A708(v1, v78);
  uint64_t v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 16))(v78, v79);
  *(_DWORD *)(v0 + 1136) = v80;
  *(_BYTE *)(v0 + 1140) = BYTE4(v80) & 1;
  uint64_t v81 = swift_task_alloc(32LL);
  *(void *)(v0 + 1112) = v81;
  *(void *)(v81 + sub_100195658(v0 + 16) = v1;
  *(void *)(v81 + 24) = v77;
  sub_100183F14(&qword_100650088, type metadata accessor for SDAuthenticationSessionExecutor, (uint64_t)&unk_1004D6A60);
  uint64_t v82 = (void *)swift_task_alloc(async function pointer to TaskLocal.withValue<A>(_:operation:isolation:file:line:)[1]);
  *(void *)(v0 + 1120) = v82;
  *uint64_t v82 = v0;
  v82[1] = sub_100345134;
  v83[14] = 54LL;
  v83[15] = (uint64_t)&type metadata for () + 8;
  return TaskLocal.withValue<A>(_:operation:isolation:file:line:)();
}

uint64_t sub_100345134()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1120);
  *(void *)(*v1 + 1128) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 1064);
    swift_task_dealloc(*(void *)(v2 + 1112));
    uint64_t v5 = sub_1003459A8;
  }

  else
  {
    uint64_t v4 = *(void *)(v2 + 1064);
    swift_task_dealloc(*(void *)(v2 + 1112));
    uint64_t v5 = sub_1003451B0;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_1003451B0()
{
  uint64_t v1 = (void *)(v0 + 16);
  uint64_t v73 = v0 + 1032;
  uint64_t v2 = *(void **)(v0 + 1064);
  uint64_t v3 = (void *)((char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext);
  swift_beginAccess( (char *)v2 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext,  v0 + 888,  33LL,  0LL);
  sub_10019DB24(v3, (void *)(v0 + 16));
  swift_endAccess(v0 + 888);
  uint64_t v4 = v2[17];
  uint64_t v5 = v2[18];
  uint64_t v6 = sub_10019A708(v2 + 14, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 16))(v8, v6, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v4);
  swift_task_dealloc(v8);
  sub_10019A6C4(v0 + 16, v0 + 736);
  uint64_t v9 = sub_100183098(&qword_100645A28);
  uint64_t v10 = sub_100183098(&qword_100650090);
  if ((swift_dynamicCast(v0 + 776, v0 + 736, v9, v10, 6LL) & 1) == 0)
  {
    *(void *)(v0 + 808) = 0LL;
    *(_OWORD *)(v0 + 776) = 0u;
    *(_OWORD *)(v0 + 792) = 0u;
    sub_100187100(v0 + 776, &qword_100650098);
    goto LABEL_7;
  }

  uint64_t v11 = *(void *)(v0 + 1128);
  uint64_t v12 = *(void *)(v0 + 1096);
  sub_1001CE0D0((__int128 *)(v0 + 776), v0 + 696);
  sub_10019A6C4(v12, v0 + 456);
  sub_10019A708((void *)(v0 + 456), *(void *)(v0 + 480));
  uint64_t v13 = *(void *)(v0 + 720);
  uint64_t v14 = *(void *)(v0 + 728);
  sub_1002499B4(v0 + 696, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v17 = *(void *)(v0 + 1096);
  if (!v11)
  {
    uint64_t v20 = v15;
    unint64_t v21 = v16;
    uint64_t v72 = *(void *)(v0 + 1080);
    uint64_t v22 = *(void *)(v0 + 720);
    uint64_t v23 = *(void *)(v0 + 728);
    sub_10019A708((void *)(v0 + 696), v22);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    sub_1004641AC(v20, v21, v17 + 40, v24, *(void *)(v17 + *(int *)(v72 + 28)));
    sub_100189B20(v20, v21);
    sub_10018709C((void *)(v0 + 456));
    sub_10018709C((void *)(v0 + 696));
    uint64_t v1 = (void *)(v0 + 16);
LABEL_7:
    sub_10019A6C4((uint64_t)v1, v0 + 816);
    uint64_t v25 = sub_100183098(&qword_1006500A0);
    if (swift_dynamicCast(v0 + 656, v0 + 816, v9, v25, 6LL))
    {
      sub_10018709C((void *)(v0 + 656));
      if (qword_1006441D8 != -1) {
        swift_once(&qword_1006441D8, sub_1003445C0);
      }
      uint64_t v26 = *(void *)(v0 + 1096);
      uint64_t v27 = *(void *)(v0 + 1088);
      uint64_t v28 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v28, (uint64_t)qword_10064FE00);
      uint64_t v29 = sub_100284ABC(v26, v27);
      uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
      os_log_type_t v31 = static os_log_type_t.default.getter(v30);
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v33 = *(void *)(v0 + 1088);
      if (v32)
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v35 = swift_slowAlloc(32LL, -1LL);
        uint64_t v74 = v35;
        *(_DWORD *)uint64_t v34 = 136315138;
        uint64_t v36 = v1;
        uint64_t v37 = type metadata accessor for UUID(0LL);
        uint64_t v38 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
        uint64_t v39 = v37;
        uint64_t v1 = v36;
        uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v39, v38);
        Swift::String v42 = (const char *)v41;
        *(void *)(v0 + 1024) = sub_10018CDB4(v40, v41, &v74);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1024, v73, v34 + 4, v34 + 12);
        swift_bridgeObjectRelease(v42);
        sub_1003482C4(v33);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "sessionDidComplete for %s", v34, 0xCu);
        swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1LL, -1LL);
        swift_slowDealloc(v34, -1LL, -1LL);
      }

      else
      {
        sub_1003482C4(*(void *)(v0 + 1088));
      }

      uint64_t v58 = *(void **)(v0 + 1096);
      uint64_t v59 = *(void *)(v0 + 1080);
      sub_10019A708(v58, v58[3]);
      sub_100477AA4((uint64_t)v58 + *(int *)(v59 + 24));
      uint64_t v60 = (uint64_t)v58;
    }

    else
    {
      sub_10019A6C4((uint64_t)v1, v0 + 536);
      uint64_t v43 = sub_100183098(&qword_1006500A8);
      int v44 = swift_dynamicCast(v0 + 496, v0 + 536, v9, v43, 6LL);
      uint64_t v45 = *(void *)(v0 + 1104);
      uint64_t v46 = *(void *)(v0 + 1096);
      uint64_t v47 = *(void *)(v0 + 1072);
      uint64_t v48 = *(void *)(v0 + 1064);
      if (v44)
      {
        sub_1001CE0D0((__int128 *)(v0 + 496), v0 + 616);
        uint64_t v49 = *(void *)(v0 + 640);
        uint64_t v50 = *(void *)(v0 + 648);
        sub_10019A708((void *)(v0 + 616), v49);
        int v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v49, v50);
        uint64_t v52 = *(void *)(v48 + 152);
        uint64_t v53 = type metadata accessor for TaskPriority(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v47, 1LL, 1LL, v53);
        uint64_t v54 = swift_allocObject(&unk_1005DC350, 24LL, 7LL);
        swift_weakInit(v54 + 16);
        uint64_t v55 = swift_allocObject(&unk_1005DC3A0, 52LL, 7LL);
        *(void *)(v55 + sub_100195658(v0 + 16) = 0LL;
        *(void *)(v55 + 24) = 0LL;
        *(void *)(v55 + 32) = v52;
        *(void *)(v55 + 40) = v54;
        *(_DWORD *)(v55 + 48) = v51;
        uint64_t v56 = sub_1001B341C(v47, (uint64_t)&unk_1006500C8, v55);
        uint64_t v57 = *(void *)(v48 + v45);
        *(void *)(v48 + v45) = v56;
        swift_release(v57);
        sub_1003482C4(v46);
        sub_10018709C((void *)(v0 + 616));
LABEL_18:
        sub_10018709C(v1);
        goto LABEL_19;
      }

      *(void *)(v0 + 528) = 0LL;
      *(_OWORD *)(v0 + 496) = 0u;
      *(_OWORD *)(v0 + 512) = 0u;
      sub_100187100(v0 + 496, &qword_1006500B0);
      uint64_t v61 = *(void *)(v48 + 152);
      uint64_t v62 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v47, 1LL, 1LL, v62);
      uint64_t v63 = swift_allocObject(&unk_1005DC350, 24LL, 7LL);
      swift_weakInit(v63 + 16);
      uint64_t v64 = swift_allocObject(&unk_1005DC378, 52LL, 7LL);
      *(void *)(v64 + sub_100195658(v0 + 16) = 0LL;
      *(void *)(v64 + 24) = 0LL;
      *(void *)(v64 + 32) = v61;
      *(void *)(v64 + 40) = v63;
      *(_DWORD *)(v64 + 48) = 12;
      uint64_t v65 = sub_1001B341C(v47, (uint64_t)&unk_1006500C0, v64);
      uint64_t v66 = *(void *)(v48 + v45);
      *(void *)(v48 + v45) = v65;
      swift_release(v66);
      uint64_t v60 = v46;
    }

    sub_1003482C4(v60);
    goto LABEL_18;
  }

  sub_1003482C4(*(void *)(v0 + 1096));
  sub_10018709C((void *)(v0 + 456));
  sub_10018709C((void *)(v0 + 696));
  sub_10018709C((void *)(v0 + 16));
  *(void *)(v0 + 1040) = v11;
  swift_errorRetain(v11);
  uint64_t v18 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v0 + 960, v0 + 1040, v18, &type metadata for SFAuthenticationErrorMessage, 0LL) & 1) != 0)
  {
    swift_errorRelease(v11);
    uint64_t v19 = *(const char **)(v0 + 976);
    sub_100346E2C(*(_DWORD *)(v0 + 960), *(void *)(v0 + 968), v19);
    swift_bridgeObjectRelease(v19);
    swift_errorRelease(*(void *)(v0 + 1040));
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 1040));
    *(void *)(v0 + 10sub_100195658(v0 + 16) = v11;
    swift_errorRetain(v11);
    type metadata accessor for SFAuthenticationError(0LL);
    if (swift_dynamicCast(v0 + 1144, v0 + 1016, v18, v70, 0LL))
    {
      swift_errorRelease(v11);
      sub_100346E2C(*(_DWORD *)(v0 + 1144), 0LL, (const char *)0xE000000000000000LL);
      swift_errorRelease(*(void *)(v0 + 1016));
    }

    else
    {
      swift_errorRelease(*(void *)(v0 + 1016));
      *(void *)(v0 + 1000) = 0LL;
      *(void *)(v0 + 1008) = 0xE000000000000000LL;
      *(void *)(v0 + 1032) = v11;
      _print_unlocked<A, B>(_:_:)( v73,  v0 + 1000,  v18,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
      int v71 = *(const char **)(v0 + 1008);
      sub_100346E2C(0xAu, *(void *)(v0 + 1000), v71);
      swift_bridgeObjectRelease(v71);
      swift_errorRelease(v11);
    }
  }

uint64_t sub_1003459A8()
{
  uint64_t v1 = *(void *)(v0 + 1128);
  *(void *)(v0 + 1040) = v1;
  swift_errorRetain(v1);
  uint64_t v2 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v0 + 960, v0 + 1040, v2, &type metadata for SFAuthenticationErrorMessage, 0LL) & 1) != 0)
  {
    swift_errorRelease(v1);
    uint64_t v3 = *(const char **)(v0 + 976);
    sub_100346E2C(*(_DWORD *)(v0 + 960), *(void *)(v0 + 968), v3);
    swift_bridgeObjectRelease(v3);
    uint64_t v4 = *(void *)(v0 + 1040);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 1040));
    *(void *)(v0 + 10sub_100195658(v0 + 16) = v1;
    swift_errorRetain(v1);
    type metadata accessor for SFAuthenticationError(0LL);
    if (swift_dynamicCast(v0 + 1144, v0 + 1016, v2, v5, 0LL))
    {
      swift_errorRelease(v1);
      sub_100346E2C(*(_DWORD *)(v0 + 1144), 0LL, (const char *)0xE000000000000000LL);
      uint64_t v4 = *(void *)(v0 + 1016);
    }

    else
    {
      swift_errorRelease(*(void *)(v0 + 1016));
      *(void *)(v0 + 1000) = 0LL;
      *(void *)(v0 + 1008) = 0xE000000000000000LL;
      *(void *)(v0 + 1032) = v1;
      _print_unlocked<A, B>(_:_:)( v0 + 1032,  v0 + 1000,  v2,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
      uint64_t v6 = *(const char **)(v0 + 1008);
      sub_100346E2C(0xAu, *(void *)(v0 + 1000), v6);
      swift_bridgeObjectRelease(v6);
      uint64_t v4 = v1;
    }
  }

  swift_errorRelease(v4);
  uint64_t v7 = *(void *)(v0 + 1088);
  uint64_t v8 = *(void *)(v0 + 1072);
  swift_task_dealloc(*(void *)(v0 + 1096));
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100345B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[22] = a2;
  v3[23] = a3;
  uint64_t v5 = type metadata accessor for UUID(0LL);
  v3[24] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[25] = v6;
  v3[26] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  v3[27] = v7;
  unint64_t v8 = (*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[28] = swift_task_alloc(v8);
  v3[29] = swift_task_alloc(v8);
  return swift_task_switch(sub_100345BE0, a3, 0LL);
}

uint64_t sub_100345BE0()
{
  uint64_t v1 = *(void **)(v0 + 176);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = sub_10019A708(v1, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t v6 = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(v6, v4, v2);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  *(void *)(v0 + 240) = v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v2);
  swift_task_dealloc(v6);
  uint64_t v8 = *(void *)(v7 + 16);
  *(void *)(v0 + 248) = v8;
  if (v8)
  {
    uint64_t v9 = (void *)(v0 + 16);
    *(void *)(v0 + 256) = 0LL;
    sub_10019A6C4(*(void *)(v0 + 240) + 32LL, v0 + 16);
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v11 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v11, (uint64_t)qword_10064FE00);
    sub_10019A6C4(v0 + 16, v0 + 56);
    uint64_t v12 = swift_retain_n(v10, 2LL);
    uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = *(void *)(v0 + 232);
      uint64_t v16 = *(void *)(v0 + 208);
      uint64_t v59 = *(void *)(v0 + 200);
      uint64_t v60 = *(void *)(v0 + 216);
      uint64_t v17 = *(void **)(v0 + 184);
      uint64_t v61 = *(void *)(v0 + 192);
      log = v13;
      uint64_t v18 = swift_slowAlloc(22LL, -1LL);
      uint64_t v63 = swift_slowAlloc(64LL, -1LL);
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v67 = v63;
      uint64_t v19 = v17[17];
      uint64_t v20 = v17[18];
      unint64_t v21 = sub_10019A708(v17 + 14, v19);
      uint64_t v22 = *(void *)(v19 - 8);
      os_log_type_t type = v14;
      uint64_t v23 = swift_task_alloc((*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(uint64_t, void *, uint64_t))(v22 + 16))(v23, v21, v19);
      (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v19);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v16, v15 + *(int *)(v60 + 24), v61);
      uint64_t v24 = sub_1003482C4(v15);
      uint64_t v25 = UUID.uuidString.getter(v24);
      unint64_t v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v16, v61);
      uint64_t v28 = sub_10037C5B0(8LL, v25, v27);
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      uint64_t v34 = v33;
      uint64_t v35 = (const char *)v27;
      uint64_t v9 = (void *)(v0 + 16);
      swift_bridgeObjectRelease(v35);
      swift_task_dealloc(v23);
      uint64_t v36 = static String._fromSubstring(_:)(v28, v30, v32, v34);
      uint64_t v38 = v37;
      swift_bridgeObjectRelease(v34);
      *(void *)(v18 + 4) = sub_10018CDB4(v36, (unint64_t)v38, &v67);
      swift_bridgeObjectRelease(v38);
      swift_release_n(v17, 2LL);
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v39 = *(void *)(v0 + 80);
      uint64_t v40 = sub_10019A708((void *)(v0 + 56), v39);
      uint64_t DynamicType = swift_getDynamicType(v40, v39, 1LL);
      uint64_t v42 = _typeName(_:qualified:)(DynamicType, 0LL);
      int v44 = (const char *)v43;
      *(void *)(v18 + 14) = sub_10018CDB4(v42, v43, &v67);
      swift_bridgeObjectRelease(v44);
      sub_10018709C((void *)(v0 + 56));
      uint64_t v13 = log;
      _os_log_impl((void *)&_mh_execute_header, log, type, "%s: Running step: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v63, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v63, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    else
    {
      swift_release_n(*(void *)(v0 + 184), 2LL);
      sub_10018709C((void *)(v0 + 56));
    }

    uint64_t v48 = *(void **)(v0 + 184);
    uint64_t v49 = v48 + 14;
    sub_10019A6C4(*(void *)(v0 + 176), v0 + 96);
    uint64_t v50 = *(void *)(v0 + 120);
    int v51 = sub_10019A708((void *)(v0 + 96), v50);
    uint64_t v52 = *(void *)(v0 + 40);
    uint64_t v64 = (uint64_t)v51;
    os_log_t loga = *(os_log_t *)(v0 + 48);
    uint64_t v53 = sub_10019A708(v9, v52);
    uint64_t v54 = v48[17];
    uint64_t v55 = v48[18];
    sub_10019A708(v49, v54);
    uint64_t v56 = *(void *)(v54 - 8);
    uint64_t v57 = swift_task_alloc((*(void *)(v56 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
    *(void *)(v0 + 264) = v57;
    (*(void (**)(void))(v56 + 16))();
    (*(void (**)(uint64_t, uint64_t))(v55 + 24))(v54, v55);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v54);
    uint64_t v58 = (void *)swift_task_alloc(dword_10064FE7C);
    *(void *)(v0 + 272) = v58;
    void *v58 = v0;
    v58[1] = sub_1003460CC;
    return sub_100346BD4(v0 + 136, v64, (uint64_t)v53, *(void *)(v0 + 224), v52, v50, (uint64_t)loga);
  }

  else
  {
    swift_bridgeObjectRelease((const char *)v7);
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v46 = *(void *)(v0 + 208);
    swift_task_dealloc(*(void *)(v0 + 232));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1003460CC()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 272LL);
  *(void *)(*(void *)v1 + 280LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[28];
  uint64_t v5 = v2[23];
  if (v0)
  {
    uint64_t v6 = (const char *)v2[30];
    sub_1003482C4(v4);
    swift_bridgeObjectRelease(v6);
    uint64_t v7 = sub_100346620;
  }

  else
  {
    uint64_t v8 = v2[33];
    sub_1003482C4(v4);
    swift_task_dealloc(v8);
    uint64_t v7 = sub_100346160;
  }

  return swift_task_switch(v7, v5, 0LL);
}

uint64_t sub_100346160()
{
  uint64_t v1 = *(void *)(v0 + 248);
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 256) + 1LL;
  sub_10018709C(v2);
  sub_1001CE0D0((__int128 *)(v0 + 136), (uint64_t)v2);
  sub_10018709C((void *)(v0 + 96));
  sub_10018709C((void *)(v0 + 16));
  if (v3 == v1)
  {
    swift_bridgeObjectRelease(*(const char **)(v0 + 240));
    uint64_t v4 = *(void *)(v0 + 224);
    uint64_t v5 = *(void *)(v0 + 208);
    swift_task_dealloc(*(void *)(v0 + 232));
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  else
  {
    uint64_t v7 = *(void *)(v0 + 256) + 1LL;
    *(void *)(v0 + 256) = v7;
    sub_10019A6C4(*(void *)(v0 + 240) + 40 * v7 + 32, v0 + 16);
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v9, (uint64_t)qword_10064FE00);
    sub_10019A6C4(v0 + 16, v0 + 56);
    uint64_t v10 = swift_retain_n(v8, 2LL);
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = *(void *)(v0 + 232);
      uint64_t v14 = *(void *)(v0 + 208);
      uint64_t v51 = *(void *)(v0 + 200);
      uint64_t v52 = *(void *)(v0 + 216);
      uint64_t v15 = *(void **)(v0 + 184);
      uint64_t v53 = *(void *)(v0 + 192);
      log = v11;
      uint64_t v54 = swift_slowAlloc(22LL, -1LL);
      uint64_t v57 = swift_slowAlloc(64LL, -1LL);
      uint64_t v61 = v57;
      *(_DWORD *)uint64_t v54 = 136315394;
      os_log_type_t type = v12;
      uint64_t v55 = v15;
      uint64_t v16 = v15[17];
      uint64_t v17 = v15[18];
      uint64_t v18 = sub_10019A708(v15 + 14, v16);
      uint64_t v19 = *(void *)(v16 - 8);
      uint64_t v20 = swift_task_alloc((*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(uint64_t, void *, uint64_t))(v19 + 16))(v20, v18, v16);
      (*(void (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v16);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v14, v13 + *(int *)(v52 + 24), v53);
      uint64_t v21 = sub_1003482C4(v13);
      uint64_t v22 = UUID.uuidString.getter(v21);
      uint64_t v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v14, v53);
      uint64_t v25 = sub_10037C5B0(8LL, v22, (unint64_t)v24);
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      swift_bridgeObjectRelease(v24);
      swift_task_dealloc(v20);
      uint64_t v32 = static String._fromSubstring(_:)(v25, v27, v29, v31);
      uint64_t v34 = v33;
      swift_bridgeObjectRelease(v31);
      *(void *)(v54 + 4) = sub_10018CDB4(v32, (unint64_t)v34, &v61);
      swift_bridgeObjectRelease(v34);
      swift_release_n(v55, 2LL);
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v35 = *(void *)(v0 + 80);
      uint64_t v36 = sub_10019A708((void *)(v0 + 56), v35);
      uint64_t DynamicType = swift_getDynamicType(v36, v35, 1LL);
      uint64_t v38 = _typeName(_:qualified:)(DynamicType, 0LL);
      uint64_t v40 = (const char *)v39;
      *(void *)(v54 + 14) = sub_10018CDB4(v38, v39, &v61);
      swift_bridgeObjectRelease(v40);
      sub_10018709C((void *)(v0 + 56));
      uint64_t v11 = log;
      _os_log_impl((void *)&_mh_execute_header, log, type, "%s: Running step: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy(v57, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);
    }

    else
    {
      swift_release_n(*(void *)(v0 + 184), 2LL);
      sub_10018709C((void *)(v0 + 56));
    }

    unint64_t v41 = *(void **)(v0 + 184);
    sub_10019A6C4(*(void *)(v0 + 176), v0 + 96);
    uint64_t v42 = *(void *)(v0 + 120);
    unint64_t v43 = sub_10019A708((void *)(v0 + 96), v42);
    uint64_t v44 = *(void *)(v0 + 40);
    uint64_t v58 = (uint64_t)v43;
    os_log_t loga = *(os_log_t *)(v0 + 48);
    uint64_t v45 = sub_10019A708((void *)(v0 + 16), v44);
    uint64_t v46 = v41[17];
    uint64_t v47 = v41[18];
    sub_10019A708(v41 + 14, v46);
    uint64_t v48 = *(void *)(v46 - 8);
    uint64_t v49 = swift_task_alloc((*(void *)(v48 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
    *(void *)(v0 + 264) = v49;
    (*(void (**)(void))(v48 + 16))();
    (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v46);
    uint64_t v50 = (void *)swift_task_alloc(dword_10064FE7C);
    *(void *)(v0 + 272) = v50;
    void *v50 = v0;
    v50[1] = sub_1003460CC;
    return sub_100346BD4(v0 + 136, v58, (uint64_t)v45, *(void *)(v0 + 224), v44, v42, (uint64_t)loga);
  }

uint64_t sub_100346620()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 208);
  swift_task_dealloc(*(void *)(v0 + 264));
  sub_10018709C((void *)(v0 + 96));
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034669C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v47 - v6;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1006441D8 != -1) {
    swift_once(&qword_1006441D8, sub_1003445C0);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v12, (uint64_t)qword_10064FE00);
  uint64_t v13 = swift_retain_n(v0, 2LL);
  uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter(v14);
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v48 = v9;
    uint64_t v17 = swift_slowAlloc(12LL, -1LL);
    int v53 = v16;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc(32LL, -1LL);
    uint64_t v52 = v19;
    uint64_t v54 = v5;
    uint64_t v51 = v18;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v50 = v18 + 12;
    v60[0] = v19;
    uint64_t v49 = v18 + 4;
    uint64_t v21 = v1[17];
    uint64_t v20 = v1[18];
    uint64_t v22 = sub_10019A708(v1 + 14, v21);
    uint64_t v47 = (uint64_t)&v47;
    uint64_t v23 = v2;
    uint64_t v24 = *(void *)(v21 - 8);
    __chkstk_darwin(v22);
    uint64_t v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v24 + 16))(v26);
    (*(void (**)(uint64_t, uint64_t))(v20 + 24))(v21, v20);
    uint64_t v27 = *(void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v2 = v23;
    v27(v26, v21);
    uint64_t v28 = v48;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v11, &v7[*(int *)(v23 + 24)], v8);
    sub_1003482C4((uint64_t)v7);
    uint64_t v29 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter(v8, v29);
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v8);
    *(void *)&__int128 v58 = sub_10018CDB4(v30, (unint64_t)v32, v60);
    uint64_t v5 = v54;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, (char *)&v58 + 8, v49, v50);
    swift_release_n(v1, 2LL);
    swift_bridgeObjectRelease(v32);
    uint64_t v33 = v51;
    _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v53, "Invalidating session %s", v51, 0xCu);
    uint64_t v34 = v52;
    swift_arrayDestroy(v52, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v34, -1LL, -1LL);
    swift_slowDealloc(v33, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v1, 2LL);
  }

  uint64_t v35 = (uint64_t)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
  swift_beginAccess( (char *)v1 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext,  v57,  0LL,  0LL);
  sub_10019A6C4(v35, (uint64_t)&v58);
  uint64_t v36 = sub_100183098(&qword_100645A28);
  uint64_t v37 = sub_100183098(&qword_100650050);
  if ((swift_dynamicCast(v55, &v58, v36, v37, 6LL) & 1) != 0)
  {
    sub_1001CE0D0(v55, (uint64_t)v60);
    uint64_t v38 = v61;
    uint64_t v39 = v62;
    sub_10019A708(v60, v61);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v39 + 16))(&v58, v38, v39);
    sub_10019A708(&v58, v59);
    sub_1002C3F90();
    sub_10018709C(&v58);
    sub_10018709C(v60);
  }

  else
  {
    uint64_t v56 = 0LL;
    memset(v55, 0, sizeof(v55));
    sub_100187100((uint64_t)v55, &qword_100650058);
  }

  uint64_t v40 = v1[17];
  uint64_t v41 = v1[18];
  uint64_t v42 = sub_10019A708(v1 + 14, v40);
  uint64_t v43 = *(void *)(v40 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v47 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v43 + 16))(v45);
  (*(void (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v40);
  sub_1001915A4((uint64_t)&v5[*(int *)(v2 + 36)], (uint64_t)&v58, &qword_100650060);
  if (v59)
  {
    sub_1001CE0D0(&v58, (uint64_t)v60);
    sub_1003482C4((uint64_t)v5);
    sub_10019A708(v60, v61);
    sub_10028534C();
    return sub_10018709C(v60);
  }

  else
  {
    sub_100187100((uint64_t)&v58, &qword_100650060);
    return sub_1003482C4((uint64_t)v5);
  }

uint64_t sub_100346BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  void v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness(0LL, a7);
  v8[10] = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  void v8[11] = v11;
  v8[12] = swift_task_alloc((*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = *(void *)(a6 - 8);
  v8[13] = v12;
  v8[14] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100346C7C, v7, 0LL);
}

uint64_t sub_100346C7C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  (*(void (**)(uint64_t, void, uint64_t))(v0[13] + 16LL))(v1, v0[3], v4);
  swift_dynamicCast(v2, v1, v4, v3, 7LL);
  uint64_t v6 = *(int **)(v5 + 16);
  uint64_t v9 = (int *)((char *)v6 + *v6);
  uint64_t v7 = (void *)swift_task_alloc(v6[1]);
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100346D34;
  return ((uint64_t (*)(void, void, void, void, void))v9)(v0[2], v0[12], v0[5], v0[6], v0[8]);
}

uint64_t sub_100346D34()
{
  uint64_t v2 = *(void *)(*v1 + 120);
  uint64_t v3 = *v1;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_100346DD8, *(void *)(v3 + 72), 0LL);
  }
  uint64_t v5 = *(void *)(v3 + 112);
  uint64_t v6 = *(void *)(v3 + 96);
  (*(void (**)(uint64_t, void))(*(void *)(v3 + 88) + 8LL))(v6, *(void *)(v3 + 80));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_100346DD8()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 88) + 8LL))(v2, *(void *)(v0 + 80));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100346E2C(unsigned int a1, uint64_t a2, const char *a3)
{
  uint64_t v4 = v3;
  uint64_t v142 = a2;
  uint64_t v140 = type metadata accessor for UUID(0LL);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v138 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v137 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v8 = __chkstk_darwin(v137);
  uint64_t v136 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v141 = (char *)&v129 - v10;
  unsigned __int8 v144 = 1;
  uint64_t v11 = (uint64_t)v3 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext;
  swift_beginAccess( (char *)v3 + OBJC_IVAR____TtC16DaemoniOSLibrary31SDAuthenticationSessionExecutor_previousContext,  v148,  0LL,  0LL);
  sub_10019A6C4(v11, (uint64_t)&v149);
  uint64_t v12 = sub_100183098(&qword_100645A28);
  uint64_t v13 = sub_100183098(&qword_100650030);
  if ((swift_dynamicCast(v146, &v149, v12, v13, 6LL) & 1) != 0)
  {
    sub_1001CE0D0(v146, (uint64_t)&v151);
    unsigned __int8 v144 = *(_BYTE *)sub_10019A708(&v151, v153);
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    uint64_t v15 = sub_100186DE4(v14, (uint64_t)qword_10064FE00);
    int v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v18 = 67109120;
      swift_beginAccess(&v144, v145, 0LL, 0LL);
      LODWORD(v149) = v144;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v149, (char *)&v149 + 4, v18 + 4, v18 + 8);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Should Send Timeout = %{BOOL}d", v18, 8u);
      swift_slowDealloc(v18, -1LL, -1LL);
    }

    sub_10018709C(&v151);
  }

  else
  {
    uint64_t v147 = 0LL;
    memset(v146, 0, sizeof(v146));
    sub_100187100((uint64_t)v146, &qword_100650038);
  }

  unsigned int v143 = a1;
  if (a1 == 12)
  {
    swift_beginAccess(&v144, v146, 0LL, 0LL);
    int v19 = v144;
  }

  else
  {
    int v19 = 1;
  }

  uint64_t v20 = v4 + 14;
  uint64_t v21 = v4[17];
  uint64_t v22 = v4[18];
  uint64_t v23 = sub_10019A708(v4 + 14, v21);
  uint64_t v24 = *(void *)(v21 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v129 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *))(v24 + 16))(v26);
  LOBYTE(v22) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v21);
  if ((v22 & 1) != 0)
  {
    if ((v19 & 1) != 0) {
      goto LABEL_40;
    }
    goto LABEL_22;
  }

  if (v19)
  {
    uint64_t v27 = (uint64_t *)[objc_allocWithZone((Class)SDAuthenticationResponse) init];
    uint64_t v28 = v27;
    unint64_t v134 = a3;
    if (v27)
    {
      [v27 setVersion:1];
      uint64_t v29 = v4[17];
      uint64_t v30 = v4[18];
      uint64_t v31 = sub_10019A708(v4 + 14, v29);
      __n128 v133 = &v129;
      uint64_t v32 = *(void *)(v29 - 8);
      __chkstk_darwin(v31);
      uint64_t v34 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v32 + 16))(v34);
      uint64_t v35 = *(void (**)(void, void))(v30 + 24);
      uint64_t v36 = v28;
      uint64_t v37 = v141;
      v35(v29, v30);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v29);
      uint64_t v38 = v139;
      uint64_t v39 = v138;
      uint64_t v40 = v140;
      (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v138, &v37[*(int *)(v137 + 24)], v140);
      uint64_t v41 = (uint64_t)v37;
      uint64_t v20 = v4 + 14;
      a3 = v134;
      uint64_t v42 = sub_1003482C4(v41);
      UUID.uuidString.getter(v42);
      uint64_t v44 = v43;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
      NSString v45 = String._bridgeToObjectiveC()();
      objc_msgSend(v36, "setSessionID:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

      [v36 setErrorCode:v143];
    }

    uint64_t v135 = v20;
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v46 = type metadata accessor for Logger(0LL);
    uint64_t v47 = sub_100186DE4(v46, (uint64_t)qword_10064FE00);
    uint64_t v48 = v28;
    swift_bridgeObjectRetain_n(a3, 2LL);
    uint64_t v49 = v48;
    uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
    uint64_t v51 = a3;
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v52))
    {
      uint64_t v131 = (uint64_t *)v47;
      __n128 v133 = v49;
      int v53 = v28;
      uint64_t v54 = swift_slowAlloc(22LL, -1LL);
      uint64_t v55 = (uint64_t *)swift_slowAlloc(16LL, -1LL);
      *(_DWORD *)uint64_t v54 = 138412546;
      unint64_t v56 = sub_100187014();
      uint64_t v57 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v56, 0LL, 0LL);
      *(_DWORD *)uint64_t v58 = v143;
      *(void *)(v58 + 8) = v142;
      *(void *)(v58 + sub_100195658(v0 + 16) = v51;
      swift_bridgeObjectRetain(v51);
      uint64_t v59 = _swift_stdlib_bridgeErrorToNSError(v57);
      uint64_t v151 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152, v54 + 4, v54 + 12);
      uint64_t v130 = v55;
      *uint64_t v55 = v59;
      swift_bridgeObjectRelease_n(v51, 2LL);
      *(_WORD *)(v54 + 12) = 2112;
      uint64_t v132 = v53;
      if (v53)
      {
        uint64_t v49 = v133;
        uint64_t v151 = (uint64_t)v133;
        uint64_t v60 = v133;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152, v54 + 14, v54 + 22);
        uint64_t v61 = v53;
        uint64_t v20 = v135;
      }

      else
      {
        uint64_t v151 = 0LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, v152, v54 + 14, v54 + 22);
        uint64_t v61 = 0LL;
        uint64_t v20 = v135;
        uint64_t v49 = v133;
      }

      Swift::String v76 = v130;
      v130[1] = (uint64_t)v61;

      _os_log_impl( (void *)&_mh_execute_header,  v50,  v52,  "Reporting error %@ to remote device as %@",  (uint8_t *)v54,  0x16u);
      uint64_t v77 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v76, 2LL, v77);
      swift_slowDealloc(v76, -1LL, -1LL);
      swift_slowDealloc(v54, -1LL, -1LL);

      uint64_t v28 = v132;
      if (!v132) {
        goto LABEL_33;
      }
    }

    else
    {

      swift_bridgeObjectRelease_n(v51, 2LL);
      uint64_t v20 = v135;
      if (!v28) {
        goto LABEL_33;
      }
    }

    id v78 = [v49 data];
    if (v78)
    {
      uint64_t v79 = v78;
      uint64_t v80 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v78);
      unint64_t v82 = v81;

      __n128 v133 = v49;
      uint64_t v83 = v4[17];
      uint64_t v84 = v4[18];
      uint64_t v85 = sub_10019A708(v20, v83);
      uint64_t v132 = &v129;
      uint64_t v86 = *(void *)(v83 - 8);
      __chkstk_darwin(v85);
      uint64_t v88 = (char *)&v129 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v86 + 16))(v88);
      uint64_t v89 = (uint64_t)v141;
      (*(void (**)(uint64_t, uint64_t))(v84 + 24))(v83, v84);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v88, v83);
      sub_10019A6C4(v89, (uint64_t)&v151);
      sub_1003482C4(v89);
      sub_10019A708(&v151, v153);
      uint64_t v90 = v4[17];
      uint64_t v91 = v4[18];
      uint64_t v92 = sub_10019A708(v20, v90);
      uint64_t v131 = &v129;
      uint64_t v93 = *(void *)(v90 - 8);
      __chkstk_darwin(v92);
      uint64_t v95 = (char *)&v129 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v93 + 16))(v95);
      uint64_t v96 = (uint64_t)v136;
      (*(void (**)(uint64_t, uint64_t))(v91 + 24))(v90, v91);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v90);
      sub_10019A6C4(v96 + 40, (uint64_t)&v149);
      sub_1003482C4(v96);
      uint64_t v97 = v4[17];
      uint64_t v98 = v4[18];
      uint64_t v99 = sub_10019A708(v20, v97);
      uint64_t v100 = *(void *)(v97 - 8);
      __chkstk_darwin(v99);
      char v102 = (char *)&v129 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0LL);
      (*(void (**)(char *))(v100 + 16))(v102);
      unint64_t v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 8))(v97, v98);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v102, v97);
      sub_1004641AC(v80, v82, (uint64_t)&v149, 1LL, v103);
      sub_100189B20(v80, v82);

      sub_10018709C(&v149);
      sub_10018709C(&v151);
      goto LABEL_37;
    }

uint64_t sub_100347D78(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(v6 + 104) = a6;
  *(void *)(v6 + 48) = a5;
  *(double *)(v6 + 40) = a1;
  uint64_t v7 = type metadata accessor for ContinuousClock(0LL);
  *(void *)(v6 + 56) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100347DE0, 0LL, 0LL);
}

uint64_t sub_100347DE0()
{
  uint64_t v1 = static Duration.seconds(_:)(*(double *)(v0 + 40));
  uint64_t v3 = v2;
  ContinuousClock.init()(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1006461D8 + dword_1006461D8);
  uint64_t v4 = (void *)swift_task_alloc(unk_1006461DC);
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100347EA4;
  return v6(v1, v3, 0LL, 0LL, 1);
}

uint64_t sub_100347EA4()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 72LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 80LL);
  uint64_t v4 = *(void *)(*(void *)v1 + 56LL);
  uint64_t v5 = *(void *)(*(void *)v1 + 64LL);
  *(void *)(*(void *)v1 + 88LL) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v0) {
    uint64_t v6 = sub_10034808C;
  }
  else {
    uint64_t v6 = sub_100347F24;
  }
  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100347F24()
{
  uint64_t v1 = *(void *)(v0 + 88);
  static Task<>.checkCancellation()();
  if (!v1)
  {
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_10064FE00);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Response timer fired", v7, 2u);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    uint64_t v8 = *(void *)(v0 + 48);

    swift_beginAccess(v8 + 16, v0 + 16, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v8 + 16);
    *(void *)(v0 + 96) = Strong;
    if (Strong) {
      return swift_task_switch(sub_1003480C0, Strong, 0LL);
    }
  }

  swift_task_dealloc(*(void *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10034808C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003480C0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  sub_100346E2C(*(_DWORD *)(v0 + 104), 0xD00000000000001ELL, (const char *)0x800000010050B9C0LL);
  swift_release(v1);
  swift_task_dealloc(*(void *)(v0 + 72));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100348120()
{
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_100348184()
{
  return type metadata accessor for SDAuthenticationSessionExecutor(0LL);
}

uint64_t type metadata accessor for SDAuthenticationSessionExecutor(uint64_t a1)
{
  uint64_t result = qword_10064FE60;
  if (!qword_10064FE60) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationSessionExecutor);
  }
  return result;
}

void sub_1003481C8(uint64_t a1)
{
  v4[1] = &unk_1004D6A18;
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  void v4[3] = &unk_1004D6A30;
  sub_10034826C(319LL);
  if (v3 <= 0x3F)
  {
    _DWORD v4[4] = *(void *)(v2 - 8) + 64LL;
    v4[5] = &unk_1004D6A30;
    void v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    void v4[7] = &unk_1004D6A18;
    swift_updateClassMetadata2(a1, 256LL, 8LL, v4, a1 + 80);
  }

void sub_10034826C(uint64_t a1)
{
  if (!qword_10064FE80[0])
  {
    uint64_t v2 = sub_100183124(&qword_1006493C8);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, qword_10064FE80);
    }
  }

uint64_t sub_1003482C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100348300(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  os_log_type_t v6 = (void *)swift_task_alloc(dword_10065007C);
  *(void *)(v2 + sub_100195658(v0 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100195708;
  return sub_100345B48(a1, v5, v4);
}

uint64_t sub_100348364()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10034838C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(_DWORD *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc(dword_1006500BC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  return sub_100347D78(v6, a1, v4, v5, v7, v8);
}

uint64_t sub_100348414()
{
  return swift_deallocObject(v0, 52LL, 7LL);
}

uint64_t sub_100348440(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(_DWORD *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc(dword_1006500BC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1001943E8;
  return sub_100347D78(v6, a1, v4, v5, v7, v8);
}

void sub_1003484C4(uint64_t a1)
{
  uint64_t v1 = sub_100183098(&qword_1006500D8);
  if (swift_dynamicCast(v21, v23, (char *)&type metadata for Any + 8, v1, 6LL))
  {
    sub_1001CE0D0(v21, (uint64_t)v24);
    uint64_t v2 = v25;
    uint64_t v3 = v26;
    sub_10019A708(v24, v25);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3) & 1) != 0)
    {
      uint64_t v4 = v25;
      uint64_t v5 = v26;
      sub_10019A708(v24, v25);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
      *(void *)&v21[0] = 0LL;
      *((void *)&v21[0] + 1) = 0xE000000000000000LL;
      _StringGuts.grow(_:)(32LL);
      swift_bridgeObjectRelease(*((const char **)&v21[0] + 1));
      *(void *)&v21[0] = 0xD00000000000001ELL;
      *((void *)&v21[0] + 1) = 0x8000000100506D60LL;
      id v7 = (id)SFAuthenticationErrorToString(v6);
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      uint64_t v10 = v9;

      v11._countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease((const char *)v10);
      __int128 v12 = v21[0];
      unint64_t v13 = sub_100187014();
      uint64_t v14 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v13, 0LL, 0LL);
      *(_DWORD *)uint64_t v15 = v6;
      *(_OWORD *)(v15 + 8) = v12;
      swift_willThrow(v14);
    }

    sub_10018709C(v24);
  }

  else
  {
    uint64_t v22 = 0LL;
    memset(v21, 0, sizeof(v21));
    sub_100187100((uint64_t)v21, &qword_1006500E0);
    if (qword_1006441D8 != -1) {
      swift_once(&qword_1006441D8, sub_1003445C0);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_10064FE00);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Message does not support error reporting", v20, 2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }
  }

uint64_t sub_10034870C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006500F0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006500F0);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10034879C(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock);
  void *v6 = 0LL;
  v6[1] = 0LL;
  id v7 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock);
  *id v7 = 0LL;
  v7[1] = 0LL;
  uint64_t v8 = OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock;
  uint64_t v9 = sub_100183098(&qword_10064EED0);
  uint64_t v10 = swift_allocObject(v9, 20LL, 7LL);
  *(_DWORD *)(v10 + swift_weakDestroy(v0 + 16) = 0;
  *(void *)(v3 + v8) = v10;
  *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID) = &_swiftEmptyDictionarySingleton;
  *(_BYTE *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltksLoaded) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_checkAndStartRegistration) = 1;
  *(_BYTE *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  v11._countAndFlagsBits = qword_1004D6B28[a1];
  v11._object = (void *)0xE100000000000000LL;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(0xE100000000000000LL);
  v12._countAndFlagsBits = 0xA3A734B544C20LL;
  v12._object = (void *)0xE700000000000000LL;
  String.append(_:)(v12);
  unint64_t v13 = (void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label);
  void *v13 = 0x207373616C43LL;
  v13[1] = 0xE600000000000000LL;
  uint64_t v14 = v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectory;
  uint64_t v15 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32LL))(v14, a2, v15);
  return v3;
}

void sub_1003488E4(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltksLoaded;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltksLoaded) & 1) == 0)
  {
    sub_100349FC8();
    if (v2)
    {
      if (qword_1006441E0 != -1) {
        swift_once(&qword_1006441E0, sub_10034870C);
      }
      uint64_t v6 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v6, (uint64_t)qword_1006500F0);
      swift_errorRetain(v2);
      uint64_t v7 = swift_errorRetain(v2);
      uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
      os_log_type_t v9 = static os_log_type_t.error.getter(v8);
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v14 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v10 = 138412290;
        swift_errorRetain(v2);
        uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v2);
        uint64_t v15 = v11;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
        uint64_t *v14 = v11;
        swift_errorRelease(v2);
        swift_errorRelease(v2);
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "failed to load LTKS, error:%@", v10, 0xCu);
        uint64_t v12 = sub_100183098(&qword_1006454E0);
        swift_arrayDestroy(v14, 1LL, v12);
        swift_slowDealloc(v14, -1LL, -1LL);
        swift_slowDealloc(v10, -1LL, -1LL);

        swift_errorRelease(v2);
      }

      else
      {
        swift_errorRelease(v2);
        swift_errorRelease(v2);
        swift_errorRelease(v2);
      }

      if (*(_BYTE *)(a1 + v5) != 1)
      {
        char v13 = 0;
        goto LABEL_14;
      }
    }

    else
    {
      *(_BYTE *)(a1 + v5) = 1;
    }
  }

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_checkAndStartRegistration) == 1)
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_checkAndStartRegistration) = 0;
    char v13 = 1;
  }

  else
  {
    char v13 = 0;
  }

uint64_t sub_100348B30@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v110 = a8;
  int v111 = a7;
  uint64_t v116 = a4;
  uint64_t v112 = a9;
  unsigned int v115 = a5 & 1;
  uint64_t v14 = type metadata accessor for UTType(0LL);
  uint64_t v118 = *(void *)(v14 - 8);
  uint64_t v119 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for URL.DirectoryHint(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v124 = type metadata accessor for URL(0LL);
  uint64_t v117 = *(void *)(v124 - 8);
  uint64_t v21 = __chkstk_darwin(v124);
  uint64_t v23 = (os_unfair_lock_s *)((char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v21);
  unint64_t v123 = (os_unfair_lock_s *)((char *)&v109 - v24);
  uint64_t v121 = a1;
  uint64_t v25 = (uint64_t *)(a1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID);
  swift_beginAccess(v25, v127, 0LL, 0LL);
  uint64_t v114 = v25;
  uint64_t v26 = *v25;
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v120 = a3;
  uint64_t v122 = (const __CFString *)a2;
  int v113 = a6;
  if (v27)
  {
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(v26);
    uint64_t v28 = sub_1003AD53C(a2, a3);
    if ((v29 & 1) != 0)
    {
      uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 8 * v28);
      swift_retain(v30);
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v26);
      uint64_t v31 = (os_unfair_lock_s *)(*(void *)(v30 + 112) + 16LL);
      swift_retain(v30);
      os_unfair_lock_lock(v31);
      uint64_t v109 = v30;
      uint64_t v32 = v125;
      sub_100271B1C((void *(*)(uint64_t *__return_ptr))sub_10034BF78, v126);
      uint64_t v125 = v32;
      if (v32)
      {
        os_unfair_lock_unlock(v31);
        __break(1u);
        goto LABEL_57;
      }

      os_unfair_lock_unlock(v31);
      if ((v126[0] & 1) != 0)
      {
        uint64_t v33 = v109;
        uint64_t v34 = v109;
        uint64_t v35 = v125;
        uint64_t v36 = v122;
        if ((a6 & 1) == 0) {
          goto LABEL_6;
        }
LABEL_36:
        uint64_t v72 = v120;
        if ((v111 & 1) != 0)
        {
          uint64_t v73 = v115;
        }

        else
        {
          uint64_t v88 = v36;
          uint64_t v23 = (os_unfair_lock_s *)(*(void *)(v33 + 112) + 16LL);
          os_unfair_lock_lock(v23);
          sub_100481EEC((void *(*)(uint64_t *__return_ptr))sub_10034BF48, v126);
          uint64_t v73 = v115;
          if (v35) {
            goto LABEL_57;
          }
          uint64_t v35 = 0LL;
          BOOL v89 = a10;
          os_unfair_lock_unlock(v23);
          uint64_t v90 = v126[0];
          if (a10) {
            BOOL v89 = (sub_1003A084C(v110, a10, v126[0]) & 1) != 0 && *(void *)(v90 + 16) == 1LL;
          }
          uint64_t v91 = *(void *)(v90 + 16);
          swift_bridgeObjectRelease(v90);
          if (v91 && !v89)
          {
            uint64_t v36 = v88;
            if (qword_1006441E0 != -1) {
              swift_once(&qword_1006441E0, sub_10034870C);
            }
            uint64_t v92 = type metadata accessor for Logger(0LL);
            sub_100186DE4(v92, (uint64_t)qword_1006500F0);
            uint64_t v93 = swift_retain_n(v33, 2LL);
            uint64_t v39 = (os_log_s *)Logger.logObject.getter(v93);
            os_log_type_t v40 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v39, v40))
            {
              uint64_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
              uint64_t v42 = swift_slowAlloc(32LL, -1LL);
              *(_DWORD *)uint64_t v41 = 136315138;
              uint64_t v125 = 0LL;
              v126[0] = v42;
              swift_retain(v33);
              sub_10020A668();
              uint64_t v95 = v94;
              uint64_t v124 = v34;
              unint64_t v97 = v96;
              swift_release(v33);
              uint64_t v128 = sub_10018CDB4(v95, v97, v126);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, &v129, v41 + 4, v41 + 12);
              swift_release_n(v33, 2LL);
              unint64_t v98 = v97;
              uint64_t v34 = v124;
              swift_bridgeObjectRelease(v98);
              uint64_t v50 = "Found loaded LocalLTK %s, return it for pairing";
              goto LABEL_10;
            }

void sub_1003498F0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  uint64_t v24 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v29 = [(id)objc_opt_self(SDAutoUnlockTransport) sharedTransport];
  if (v29)
  {
    if (qword_100644410 != -1) {
      goto LABEL_29;
    }
    while (qword_100669A30)
    {
      uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v0
                                          + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock)
                              + 16LL);
      id v20 = (id)qword_100669A30;
      os_unfair_lock_lock(v5);
      sub_10034BE8C(&aBlock);
      uint64_t v6 = aBlock;
      os_unfair_lock_unlock(v5);
      uint64_t v8 = 1LL << *(_BYTE *)(v6 + 32);
      uint64_t v9 = -1LL;
      if (v8 < 64) {
        uint64_t v9 = ~(-1LL << v8);
      }
      unint64_t v10 = v9 & *(void *)(v6 + 64);
      uint64_t v19 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue;
      int64_t v11 = (unint64_t)(v8 + 63) >> 6;
      *(void *)&__int128 v7 = 136315138LL;
      __int128 v18 = v7;
      v17[7] = (char *)&type metadata for Any + 8;
      v17[2] = v6;
      v17[1] = v6 + 64;
      v17[0] = v11;
      if (v10)
      {
        unint64_t v12 = __clz(__rbit64(v10));
        goto LABEL_20;
      }

      uint64_t v13 = 1LL;
      unint64_t v14 = *(void *)(v6 + 72);
      if (v14) {
        goto LABEL_19;
      }
      uint64_t v15 = 2LL;
      if (v11 <= 2) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v6 + 80);
      if (v14) {
        goto LABEL_18;
      }
      uint64_t v15 = 3LL;
      if (v11 <= 3) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v6 + 88);
      if (v14) {
        goto LABEL_18;
      }
      uint64_t v15 = 4LL;
      if (v11 <= 4) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v6 + 96);
      if (v14)
      {
LABEL_18:
        uint64_t v13 = v15;
LABEL_19:
        unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
LABEL_20:
        uint64_t v28 = *(void *)(*(void *)(v6 + 56) + 8 * v12);
        uint64_t v16 = *(unsigned __int8 *)(v28 + 32);
        uint64_t v27 = 8LL;
        __asm { BR              X9 }
      }

      uint64_t v15 = 5LL;
      if (v11 <= 5)
      {
LABEL_25:

        swift_release(v6);
        return;
      }

      unint64_t v14 = *(void *)(v6 + 104);
      if (v14) {
        goto LABEL_18;
      }
      while (1)
      {
        uint64_t v13 = v15 + 1;
        if (__OFADD__(v15, 1LL)) {
          break;
        }
        if (v13 >= v11) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v6 + 64 + 8 * v13);
        ++v15;
        if (v14) {
          goto LABEL_19;
        }
      }

      __break(1u);
LABEL_29:
      swift_once(&qword_100644410, sub_10045862C);
    }
  }

void sub_100349FC8()
{
  uint64_t isUniquelyReferenced_nonNull_native = v1;
  unint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for URL(0LL);
  unint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v76 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v7);
  uint64_t v73 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  os_unfair_lock_assert_owner((os_unfair_lock_t)(*(void *)(v0
                                                           + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock)
                                               + 16LL));
  if (qword_1006441E0 != -1) {
LABEL_36:
  }
    swift_once(&qword_1006441E0, sub_10034870C);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = sub_100186DE4(v9, (uint64_t)qword_1006500F0);
  uint64_t v11 = swift_retain(v3);
  uint64_t v74 = v10;
  unint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v75 = isUniquelyReferenced_nonNull_native;
    unint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v15 = (void *)swift_slowAlloc(32LL, -1LL);
    v78[0] = v15;
    uint64_t v72 = v4;
    *(_DWORD *)unint64_t v14 = 136315138;
    unint64_t v16 = v5;
    uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label);
    __int128 v18 = *(const char **)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label + 8);
    swift_bridgeObjectRetain(v18);
    uint64_t v77 = sub_10018CDB4(v17, (unint64_t)v18, (uint64_t *)v78);
    uint64_t isUniquelyReferenced_nonNull_native = v75;
    uint64_t v4 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v14 + 4, v14 + 12);
    swift_release(v3);
    uint64_t v19 = v18;
    unint64_t v5 = v16;
    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Loading %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {

    swift_release(v3);
  }

  id v20 = [(id)objc_opt_self(NSFileManager) defaultManager];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectory);
  uint64_t v22 = v21;
  v78[0] = 0LL;
  id v23 = [v20 contentsOfDirectoryAtURL:v21 includingPropertiesForKeys:0 options:0 error:v78];

  id v24 = v78[0];
  if (v23)
  {
    uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v4);
    id v26 = v24;

    uint64_t v27 = *(void *)(v25 + 16);
    char v66 = (const char *)v25;
    if (v27)
    {
      id v65 = v20;
      unint64_t v71 = v3;
      uint64_t v72 = v4;
      uint64_t v28 = (uint64_t *)(v3 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID);
      unint64_t v3 = v25 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v68 = *(void *)(v5 + 72);
      unint64_t v69 = v5;
      id v70 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      id v29 = v73;
      v70(v73, v3, v4);
      while (1)
      {
        uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v33(v29, 0LL, 1LL, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v29, 1LL, v4) == 1)
        {

          goto LABEL_33;
        }

        char v67 = v33;
        uint64_t v74 = v27;
        uint64_t v34 = (uint64_t)v76;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v76, v29, v4);
        uint64_t v35 = sub_10034A738(v34);
        if (isUniquelyReferenced_nonNull_native)
        {

          (*(void (**)(char *, uint64_t))(v5 + 8))(v76, v4);
          goto LABEL_33;
        }

        uint64_t v36 = v35;
        uint64_t v75 = 0LL;
        uint64_t v38 = *(void *)(v35 + 16);
        uint64_t v37 = *(const char **)(v35 + 24);
        *(void *)&double v39 = swift_beginAccess(v28, v78, 33LL, 0LL).n128_u64[0];
        swift_bridgeObjectRetain(v37, v39);
        swift_retain(v36);
        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v28);
        uint64_t v77 = *v28;
        uint64_t v40 = v77;
        *uint64_t v28 = 0x8000000000000000LL;
        unint64_t v5 = sub_1003AD53C(v38, (uint64_t)v37);
        uint64_t v42 = *(void *)(v40 + 16);
        BOOL v43 = (v41 & 1) == 0;
        uint64_t v44 = v42 + v43;
        if (__OFADD__(v42, v43))
        {
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }

        uint64_t v4 = v41;
        if (*(void *)(v40 + 24) >= v44)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            uint64_t isUniquelyReferenced_nonNull_native = v77;
            if ((v41 & 1) != 0) {
              goto LABEL_8;
            }
          }

          else
          {
            sub_1003B028C();
            uint64_t isUniquelyReferenced_nonNull_native = v77;
            if ((v4 & 1) != 0) {
              goto LABEL_8;
            }
          }
        }

        else
        {
          sub_1003ABDEC(v44, isUniquelyReferenced_nonNull_native);
          uint64_t v45 = sub_1003AD53C(v38, (uint64_t)v37);
          if ((v4 & 1) != (v46 & 1))
          {
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
            __break(1u);
            return;
          }

          unint64_t v5 = v45;
          uint64_t isUniquelyReferenced_nonNull_native = v77;
          if ((v4 & 1) != 0)
          {
LABEL_8:
            uint64_t v30 = *(void *)(isUniquelyReferenced_nonNull_native + 56);
            swift_release(*(void *)(v30 + 8 * v5));
            *(void *)(v30 + 8 * v5) = v36;
            goto LABEL_9;
          }
        }

        *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v5 >> 6) + 64) |= 1LL << v5;
        unint64_t v47 = (uint64_t *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v5);
        *unint64_t v47 = v38;
        v47[1] = (uint64_t)v37;
        *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v5) = v36;
        uint64_t v48 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
        BOOL v49 = __OFADD__(v48, 1LL);
        uint64_t v50 = v48 + 1;
        if (v49) {
          goto LABEL_35;
        }
        *(void *)(isUniquelyReferenced_nonNull_native + swift_weakDestroy(v0 + 16) = v50;
        swift_bridgeObjectRetain(v37);
LABEL_9:
        uint64_t v31 = (const char *)*v28;
        *uint64_t v28 = isUniquelyReferenced_nonNull_native;
        *(void *)&double v32 = swift_bridgeObjectRelease(v37).n128_u64[0];
        swift_bridgeObjectRelease(v31, v32);
        swift_endAccess(v78);
        swift_release(v36);
        unint64_t v5 = v69;
        uint64_t v4 = v72;
        (*(void (**)(char *, uint64_t))(v69 + 8))(v76, v72);
        v3 += v68;
        uint64_t isUniquelyReferenced_nonNull_native = v75;
        uint64_t v27 = v74 - 1;
        id v29 = v73;
        if (v74 == 1)
        {
          id v20 = v65;
          v67(v73, 1LL, 1LL, v4);
          goto LABEL_32;
        }

        v70(v73, v3, v4);
      }
    }

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v73, 1LL, 1LL, v4);
LABEL_32:

LABEL_33:
    swift_bridgeObjectRelease(v66);
  }

  else
  {
    id v51 = v78[0];
    uint64_t v52 = _convertNSErrorToError(_:)(v24);

    swift_willThrow(v53);
    swift_errorRelease(v52);
    uint64_t v54 = swift_retain_n(v3, 2LL);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.error.getter(v55);
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      id v58 = (void *)swift_slowAlloc(32LL, -1LL);
      unint64_t v71 = v3;
      uint64_t v59 = v58;
      v78[0] = v58;
      *(_DWORD *)uint64_t v57 = 136315138;
      uint64_t v76 = (char *)(v57 + 4);
      uint64_t v60 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter(v4, v60);
      uint64_t v63 = (const char *)v62;
      uint64_t v77 = sub_10018CDB4(v61, v62, (uint64_t *)v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v77, v78, v76, v57 + 12);
      swift_release_n(v71, 2LL);
      swift_bridgeObjectRelease(v63);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "Failed to list items in %s", v57, 0xCu);
      swift_arrayDestroy(v59, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v59, -1LL, -1LL);
      swift_slowDealloc(v57, -1LL, -1LL);
    }

    else
    {

      swift_release_n(v3, 2LL);
    }
  }

uint64_t sub_10034A738(uint64_t a1)
{
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = Data.init(contentsOf:options:)(a1, 0LL);
  if (!v2)
  {
    uint64_t v39 = v6;
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    uint64_t v13 = swift_allocObject(&unk_1005DC3E0, 24LL, 7LL);
    swift_weakInit(v13 + 16, v1);
    uint64_t v14 = swift_allocObject(&unk_1005DC3E0, 24LL, 7LL);
    swift_weakInit(v14 + 16, v1);
    sub_10019BA8C(v11, v12);
    uint64_t v3 = sub_10020AFC4(v11, v12, (uint64_t)sub_10034BE5C, v13, (uint64_t)sub_10034BE74, v14);
    uint64_t v37 = v11;
    unint64_t v38 = v12;
    if (qword_1006441E0 != -1) {
      swift_once(&qword_1006441E0, sub_10034870C);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v16, (uint64_t)qword_1006500F0);
    uint64_t v17 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v8, a1, v5);
    uint64_t v18 = swift_retain_n(v3, 2LL);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc(22LL, -1LL);
      uint64_t v36 = swift_slowAlloc(64LL, -1LL);
      uint64_t v42 = v36;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v33 = v22 + 4;
      swift_retain(v3);
      int v35 = v21;
      sub_10020A668();
      uint64_t v24 = v23;
      unint64_t v26 = v25;
      swift_release(v3);
      uint64_t v40 = sub_10018CDB4(v24, v26, &v42);
      uint64_t v34 = &v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41, v33, v22 + 12);
      swift_release_n(v3, 2LL);
      swift_bridgeObjectRelease(v26);
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v27 = sub_100183F14( (unint64_t *)&qword_100645408,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter(v5, v27);
      unint64_t v30 = v29;
      uint64_t v40 = sub_10018CDB4(v28, v29, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, v34, v22 + 14, v22 + 22);
      __n128 v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v17 + 8))(v8, v5, v31);
      _os_log_impl( (void *)&_mh_execute_header,  v19,  (os_log_type_t)v35,  "Loaded LocalLTK %s from %s",  (uint8_t *)v22,  0x16u);
      uint64_t v32 = v36;
      swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);

      sub_100189B20(v37, v38);
    }

    else
    {
      sub_100189B20(v37, v38);
      swift_release_n(v3, 2LL);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v5);
    }
  }

  return v3;
}

id sub_10034AAB0(const __CFString *a1, unint64_t a2, char a3, char a4)
{
  unint64_t v9 = sub_100186E3C(a1, a2);
  unint64_t v10 = (const void *)sub_100266DE4(v9);
  uint64_t v11 = sub_100186A64(v10);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease(v10);
  if (v13 >> 60 == 15)
  {
    if (qword_1006441E0 != -1) {
      swift_once(&qword_1006441E0, sub_10034870C);
    }
    uint64_t v14 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v14, (uint64_t)qword_1006500F0);
    uint64_t v15 = swift_bridgeObjectRetain(v9);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v19 = swift_slowAlloc(32LL, -1LL);
      uint64_t v83 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      type metadata accessor for CFString(0LL);
      uint64_t v21 = v20;
      uint64_t v22 = sub_100183F14( (unint64_t *)&qword_100644D10,  (uint64_t (*)(uint64_t))type metadata accessor for CFString,  (uint64_t)&unk_1004CCE0C);
      uint64_t v23 = swift_bridgeObjectRetain(v9);
      uint64_t v24 = Dictionary.description.getter(v23, v21, &type metadata for AnyHashable, v22);
      unint64_t v26 = v25;
      swift_bridgeObjectRelease(v9);
      uint64_t v81 = sub_10018CDB4(v24, v26, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease_n(v9, 2LL);
      swift_bridgeObjectRelease(v26);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to query keychain with %s", v18, 0xCu);
      swift_arrayDestroy(v19, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);
LABEL_27:

      return 0LL;
    }

    swift_bridgeObjectRelease_n(v9, 2LL);
    return 0LL;
  }

  char v78 = a3;
  swift_bridgeObjectRelease(v9);
  id v27 = objc_allocWithZone((Class)&OBJC_CLASS___SDAutoUnlockLTKInfo);
  sub_10019BA8C(v11, v13);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100189B0C(v11, v13);
  id v29 = [v27 initWithData:isa];

  if (!v29)
  {
    uint64_t v43 = v11;
    if (qword_1006441E0 != -1) {
      swift_once(&qword_1006441E0, sub_10034870C);
    }
    uint64_t v44 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v44, (uint64_t)qword_1006500F0);
    sub_1001A4C04(v11, v13);
    uint64_t v45 = sub_10019BA8C(v11, v13);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v46 = static os_log_type_t.error.getter(v16);
    if (!os_log_type_enabled(v16, v46))
    {
      sub_100189B0C(v43, v13);
      sub_100189B0C(v43, v13);
      sub_100189B20(v43, v13);
      goto LABEL_27;
    }

    unint64_t v47 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v80 = swift_slowAlloc(32LL, -1LL);
    uint64_t v83 = v80;
    *(_DWORD *)unint64_t v47 = 136315138;
    sub_10019BA8C(v43, v13);
    uint64_t v48 = Data.description.getter(v43, v13);
    unint64_t v50 = v49;
    sub_100189B0C(v43, v13);
    uint64_t v81 = sub_10018CDB4(v48, v50, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v47 + 4, v47 + 12);
    swift_bridgeObjectRelease(v50);
    sub_100189B0C(v43, v13);
    sub_100189B0C(v43, v13);
    _os_log_impl((void *)&_mh_execute_header, v16, v46, "Failed to deserialize SDAutoUnlockLTKInfo with %s", v47, 0xCu);
    swift_arrayDestroy(v80, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1LL, -1LL);
    swift_slowDealloc(v47, -1LL, -1LL);

    sub_100189B0C(v43, v13);
    return 0LL;
  }

  uint64_t v76 = v11;
  id v77 = v29;
  id result = [v29 ltk];
  if (!result)
  {
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  __n128 v31 = result;
  uint64_t v32 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
  unint64_t v34 = v33;

  sub_100200BEC(v78 == 2, v32, v34);
  if (v4)
  {
    sub_100189B20(v32, v34);
    if (qword_1006441E0 != -1) {
      swift_once(&qword_1006441E0, sub_10034870C);
    }
    uint64_t v35 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v35, (uint64_t)qword_1006500F0);
    swift_errorRetain(v4);
    uint64_t v36 = swift_errorRetain(v4);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v40 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v39 = 138412290;
      swift_errorRetain(v4);
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError(v4);
      uint64_t v83 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v39 + 4, v39 + 12);
      *uint64_t v40 = v41;
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl( (void *)&_mh_execute_header,  v37,  v38,  "Failed to validate previously saved local LTK, error: %@, will try to re-generate",  v39,  0xCu);
      uint64_t v42 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v40, 1LL, v42);
      swift_slowDealloc(v40, -1LL, -1LL);
      swift_slowDealloc(v39, -1LL, -1LL);

      swift_errorRelease(v4);
      sub_100189B0C(v76, v13);
    }

    else
    {
      sub_100189B0C(v76, v13);

      swift_errorRelease(v4);
      swift_errorRelease(v4);
      swift_errorRelease(v4);
    }

    return 0LL;
  }

  sub_100189B20(v32, v34);
  id result = [v77 ltk];
  if (!result) {
    goto LABEL_32;
  }
  id v51 = result;
  uint64_t v52 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
  uint64_t v74 = v53;
  uint64_t v75 = v52;

  id result = [v77 ltkID];
  if (result)
  {
    uint64_t v54 = result;
    char v73 = a4 & 1;
    uint64_t v55 = static Data._unconditionallyBridgeFromObjectiveC(_:)(result);
    uint64_t v72 = v56;

    uint64_t v57 = swift_allocObject(&unk_1005DC3E0, 24LL, 7LL);
    swift_weakInit(v57 + 16);
    uint64_t v58 = swift_allocObject(&unk_1005DC3E0, 24LL, 7LL);
    swift_weakInit(v58 + 16);
    uint64_t v59 = _s8LocalLTKCMa();
    swift_allocObject(v59, 121LL, 7LL);
    *(void *)&__int128 v71 = sub_10034BE5C;
    *((void *)&v71 + 1) = v57;
    uint64_t v60 = sub_1002063FC((uint64_t)a1, a2, v78, v73, v75, v74, v55, v72, v71, (uint64_t)sub_10034BE74, v58);
    uint64_t v61 = qword_1006441E0;
    swift_bridgeObjectRetain(a2);
    if (v61 != -1) {
      swift_once(&qword_1006441E0, sub_10034870C);
    }
    uint64_t v62 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v62, (uint64_t)qword_1006500F0);
    uint64_t v63 = swift_retain_n(v60, 2LL);
    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v63);
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v64, v65))
    {
      char v66 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v79 = swift_slowAlloc(32LL, -1LL);
      uint64_t v83 = v79;
      *(_DWORD *)char v66 = 136315138;
      swift_retain(v60);
      sub_10020A668();
      uint64_t v68 = v67;
      unint64_t v70 = v69;
      swift_release(v60);
      uint64_t v81 = sub_10018CDB4(v68, v70, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v66 + 4, v66 + 12);
      swift_release_n(v60, 2LL);
      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Loaded from keychain: %s", v66, 0xCu);
      swift_arrayDestroy(v79, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v79, -1LL, -1LL);
      swift_slowDealloc(v66, -1LL, -1LL);

      sub_100189B0C(v76, v13);
    }

    else
    {
      sub_100189B0C(v11, v13);

      swift_release_n(v60, 2LL);
    }

    return (id)v60;
  }

uint64_t sub_10034B430(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v69 = a2;
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v57 - v13;
  int v15 = a4 & 1;
  if ((a4 & 1) != 0) {
    uint64_t v16 = a3 == 2;
  }
  else {
    uint64_t v16 = 0x1020100u >> (8 * a3);
  }
  uint64_t v17 = sub_1001FFCA8(v16, 1);
  if (!v4)
  {
    unint64_t v19 = v18;
    uint64_t v64 = v12;
    uint64_t v65 = v9;
    int v66 = v15;
    uint64_t v67 = a1;
    uint64_t v68 = v17;
    sub_1001FC6E8();
    unint64_t v60 = v19;
    if (qword_1006441E0 != -1) {
      swift_once(&qword_1006441E0, sub_10034870C);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v20, (uint64_t)qword_1006500F0);
    uint64_t v21 = (uint64_t)v64;
    uint64_t v22 = v65;
    uint64_t v23 = *(uint64_t (**)(char *, char *, uint64_t))(v65 + 16);
    uint64_t v63 = v14;
    uint64_t v24 = v14;
    uint64_t v25 = v8;
    uint64_t v26 = v23(v64, v24, v8);
    id v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    int v29 = v28;
    BOOL v30 = os_log_type_enabled(v27, v28);
    int v62 = a3;
    uint64_t v61 = v25;
    if (v30)
    {
      int v59 = v29;
      __n128 v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v32 = swift_slowAlloc(32LL, -1LL);
      uint64_t v71 = v32;
      *(_DWORD *)__n128 v31 = 136315138;
      uint64_t v58 = v31 + 4;
      uint64_t v33 = UUID.uuidString.getter(v32);
      unint64_t v35 = v34;
      uint64_t v70 = sub_10018CDB4(v33, v34, &v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v58, v31 + 12);
      __n128 v36 = swift_bridgeObjectRelease(v35);
      uint64_t v65 = *(void *)(v22 + 8);
      ((void (*)(uint64_t, uint64_t, __n128))v65)(v21, v25, v36);
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v59, "Generated local LTK, keybagID: %s", v31, 0xCu);
      swift_arrayDestroy(v32, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      uint64_t v65 = *(void *)(v22 + 8);
      ((void (*)(uint64_t, uint64_t))v65)(v21, v25);
    }

    unint64_t v37 = v60;
    uint64_t v38 = v69;
    swift_bridgeObjectRetain(v69);
    uint64_t v39 = v68;
    uint64_t v40 = sub_10019BA8C(v68, v37);
    uint64_t v41 = v63;
    uint64_t v71 = UUID.uuid.getter(v40);
    char v72 = v42;
    char v73 = v43;
    char v74 = v44;
    char v75 = v45;
    char v76 = v46;
    char v77 = v47;
    char v78 = v48;
    char v79 = v49;
    uint64_t v64 = (char *)sub_1003A0AB8((uint64_t)&v71, (uint64_t)&v80);
    uint64_t v51 = v50;
    uint64_t v52 = swift_allocObject(&unk_1005DC3E0, 24LL, 7LL);
    swift_weakInit(v52 + 16);
    uint64_t v53 = swift_allocObject(&unk_1005DC3E0, 24LL, 7LL);
    swift_weakInit(v53 + 16);
    uint64_t v54 = _s8LocalLTKCMa();
    swift_allocObject(v54, 121LL, 7LL);
    *(void *)&__int128 v56 = sub_10034BE5C;
    *((void *)&v56 + 1) = v52;
    a4 = sub_1002063FC(v67, v38, v62, v66, v39, v37, (uint64_t)v64, v51, v56, (uint64_t)sub_10034BE74, v53);
    sub_100208B6C();
    ((void (*)(char *, uint64_t))v65)(v41, v61);
    sub_100189B20(v39, v37);
  }

  return a4;
}

uint64_t sub_10034B8C8@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a4 + 16;
  swift_beginAccess(a4 + 16, v16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v9);
  if (Strong
    && (uint64_t v11 = Strong,
        unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(Strong
                                                               + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock),
        uint64_t v13 = *(void *)(Strong
                        + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock
                        + 8),
        sub_100224F60((uint64_t)v12, v13),
        swift_release(v11),
        v12))
  {
    v12(a1, a2, a3);
    return sub_100224FF8((uint64_t)v12, v13);
  }

  else
  {
    uint64_t v15 = type metadata accessor for URL(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))( a5,  1LL,  1LL,  v15);
  }

uint64_t sub_10034B9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v3);
  if (!Strong) {
    return 0LL;
  }
  uint64_t v5 = Strong;
  uint64_t v7 = *(uint64_t (**)(uint64_t))(Strong
                                         + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock);
  uint64_t v6 = *(void *)(Strong + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock + 8);
  sub_100224F60((uint64_t)v7, v6);
  swift_release(v5);
  if (!v7) {
    return 0LL;
  }
  uint64_t v8 = v7(a1);
  sub_100224FF8((uint64_t)v7, v6);
  return v8;
}

uint64_t sub_10034BA58()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectory;
  uint64_t v2 = type metadata accessor for URL(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_100224FF8( *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock),  *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_cacheDirectoryBlock + 8));
  sub_100224FF8( *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock),  *(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_protectionClassBlock + 8));
  swift_release(*(void *)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_ltkLock));
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)*(void *)(v0
                                                                     + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID)).n128_u64[0];
  swift_bridgeObjectRelease( *(const char **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label + 8),  v3);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10034BB04()
{
  return _s13LTKCollectionCMa(0LL);
}

uint64_t _s13LTKCollectionCMa(uint64_t a1)
{
  uint64_t result = qword_100650158;
  if (!qword_100650158) {
    return swift_getSingletonMetadata(a1, &_s13LTKCollectionCMn);
  }
  return result;
}

uint64_t sub_10034BB48(uint64_t a1)
{
  v4[0] = &unk_1004D6AA0;
  uint64_t result = type metadata accessor for URL(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_1004D6AB8;
    void v4[3] = &unk_1004D6AB8;
    _DWORD v4[4] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[6] = &unk_1004D6AD0;
    void v4[7] = &unk_1004D6AE8;
    void v4[8] = &unk_1004D6AE8;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 9LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

void sub_10034BBFC()
{
  uint64_t v20 = *(const char **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_label + 8);
  uint64_t v1 = (const char **)(v0 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID);
  swift_beginAccess(v1, v21, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v3 = (uint64_t)(*v1 + 64);
  uint64_t v4 = 1LL << (*v1)[32];
  uint64_t v5 = -1LL;
  if (v4 < 64) {
    uint64_t v5 = ~(-1LL << v4);
  }
  uint64_t v6 = v5 & *((void *)*v1 + 8);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n(*v1, 2LL);
  int64_t v8 = 0LL;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }

    int64_t v15 = v8 + 1;
    if (__OFADD__(v8, 1LL))
    {
      __break(1u);
      goto LABEL_27;
    }

    if (v15 >= v7) {
      goto LABEL_25;
    }
    uint64_t v16 = *(void *)(v3 + 8 * v15);
    ++v8;
    if (!v16)
    {
      int64_t v8 = v15 + 1;
      if (v15 + 1 >= v7) {
        goto LABEL_25;
      }
      uint64_t v16 = *(void *)(v3 + 8 * v8);
      if (!v16)
      {
        int64_t v8 = v15 + 2;
        if (v15 + 2 >= v7) {
          goto LABEL_25;
        }
        uint64_t v16 = *(void *)(v3 + 8 * v8);
        if (!v16)
        {
          int64_t v8 = v15 + 3;
          if (v15 + 3 >= v7) {
            goto LABEL_25;
          }
          uint64_t v16 = *(void *)(v3 + 8 * v8);
          if (!v16)
          {
            int64_t v8 = v15 + 4;
            if (v15 + 4 >= v7) {
              goto LABEL_25;
            }
            uint64_t v16 = *(void *)(v3 + 8 * v8);
            if (!v16) {
              break;
            }
          }
        }
      }
    }

void sub_10034BE18()
{
}

uint64_t sub_10034BE38()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10034BE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_10034B8C8(a1, a2, a3, v4, a4);
}

uint64_t sub_10034BE74(uint64_t a1)
{
  return sub_10034B9AC(a1, v1);
}

uint64_t sub_10034BE8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCV16DaemoniOSLibrary16SDAuthentication13LTKCollection_localLTKByID);
  swift_beginAccess(v3, v6, 0LL, 0LL);
  uint64_t v4 = *v3;
  *a1 = *v3;
  return swift_bridgeObjectRetain(v4);
}

void sub_10034BEDC(void *a1@<X8>)
{
}

uint64_t sub_10034BEF4()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_10034BF20()
{
}

uint64_t sub_10034BF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10034BF40(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_10034BF48(void *a1@<X8>)
{
}

void sub_10034BF60()
{
}

uint64_t sub_10034BF78@<X0>(_BYTE *a1@<X8>)
{
  return sub_10020612C(v1, a1);
}

void sub_10034BF90(uint64_t a1)
{
  uint64_t v2 = sub_100183098((uint64_t *)&unk_100650430);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for URLComponents(0LL);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v38 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  unint64_t v37 = (char *)&v34 - v8;
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v13);
  int64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v40 = a1 + 56;
  uint64_t v17 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v18 = -1LL;
  if (v17 < 64) {
    uint64_t v18 = ~(-1LL << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v41 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v43 = a1;
  __n128 v20 = swift_bridgeObjectRetain((const char *)a1);
  int64_t v21 = 0LL;
  uint64_t v39 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    if (v19)
    {
      unint64_t v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v23 = v22 | (v21 << 6);
      goto LABEL_22;
    }

    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1LL))
    {
      __break(1u);
      goto LABEL_33;
    }

    if (v24 >= v41) {
      goto LABEL_30;
    }
    unint64_t v25 = *(void *)(v40 + 8 * v24);
    ++v21;
    if (!v25)
    {
      int64_t v21 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_30;
      }
      unint64_t v25 = *(void *)(v40 + 8 * v21);
      if (!v25)
      {
        int64_t v21 = v24 + 2;
        if (v24 + 2 >= v41) {
          goto LABEL_30;
        }
        unint64_t v25 = *(void *)(v40 + 8 * v21);
        if (!v25)
        {
          int64_t v21 = v24 + 3;
          if (v24 + 3 >= v41) {
            goto LABEL_30;
          }
          unint64_t v25 = *(void *)(v40 + 8 * v21);
          if (!v25) {
            break;
          }
        }
      }
    }

uint64_t sub_10034C3D8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  unint64_t v34 = a3;
  uint64_t v39 = a2;
  uint64_t v4 = type metadata accessor for URLComponents(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098((uint64_t *)&unk_100650430);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v33 = (const char *)a1;
  if (v11)
  {
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v36 = *(void *)(v5 + 72);
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
    __n128 v13 = swift_bridgeObjectRetain((const char *)a1);
    uint64_t v35 = v4;
    while (1)
    {
      v38(v10, v12, v4, v13);
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v16)(v10, 0LL, 1LL, v4);
      unint64_t v37 = *(uint64_t (**)(char *, char *, uint64_t))(v5 + 32);
      uint64_t v17 = v37(v7, v10, v4);
      URLComponents.scheme.getter(v17);
      if (v18)
      {
        unint64_t v19 = v18;
        Swift::String v20 = String.lowercased()();
        object = (const char *)v20._object;
        swift_bridgeObjectRelease(v19);
        uint64_t v22 = v39[4];
        unint64_t v23 = (void *)v39[5];
        if (v20._countAndFlagsBits == v22 && v20._object == v23
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v20._countAndFlagsBits, v20._object, v22, v23, 0LL) & 1) != 0
          || (uint64_t v24 = v39[6], v25 = (void *)v39[7], v20._countAndFlagsBits == v24) && v20._object == v25)
        {
          v15.n128_u64[0] = swift_bridgeObjectRelease(v33).n128_u64[0];
LABEL_17:
          __n128 v29 = swift_bridgeObjectRelease(object, v15.n128_f64[0]);
          unint64_t v30 = v34;
          uint64_t v31 = v35;
          ((void (*)(char *, char *, uint64_t, __n128))v37)(v34, v7, v35, v29);
          ((void (*)(char *, void, uint64_t, uint64_t))v16)(v30, 0LL, 1LL, v31);
          return swift_release(v39);
        }

        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v20._countAndFlagsBits, v20._object, v24, v25, 0LL);
        __n128 v15 = swift_bridgeObjectRelease((const char *)v20._object);
        uint64_t v4 = v35;
        if ((v14 & 1) != 0)
        {
          object = v33;
          goto LABEL_17;
        }
      }

      (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
      v12 += v36;
      if (!--v11) {
        goto LABEL_14;
      }
    }
  }

  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
  __n128 v13 = swift_bridgeObjectRetain((const char *)a1);
LABEL_14:
  v16(v10, 1LL, 1LL, v4, v13);
LABEL_15:
  int64_t v26 = v34;
  __n128 v27 = swift_bridgeObjectRelease(v33);
  v16(v26, 1LL, 1LL, v4, v27);
  return swift_release(v39);
}

unint64_t sub_10034C67C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100650430);
  __chkstk_darwin(v4);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = type metadata accessor for URLComponents(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v12 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v11);
  sub_10034BF90((uint64_t)v12);
  char v14 = v13;
  swift_bridgeObjectRelease(v12);
  swift_retain(v2);
  sub_10034C3D8((uint64_t)v14, v2, v6);
  __n128 v15 = swift_bridgeObjectRelease(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1LL, v7, v15) != 1)
  {
    uint64_t v17 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v18 = URLComponents.scheme.getter(v17);
    Swift::String v20 = v19;
    if (!v19)
    {
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
      return 0LL;
    }

    uint64_t v21 = v18;
    sub_10034C8FC(a1);
    char v23 = v22;
    uint64_t v24 = v2[4];
    unint64_t v25 = (const char *)v2[5];
    BOOL v26 = v21 == v24 && v20 == v25;
    if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, v24, v25, 0LL) & 1) != 0)
    {
      __n128 v27 = swift_bridgeObjectRelease(v20);
      if ((v23 & 1) != 0) {
        unint64_t v16 = 0xD00000000000001FLL;
      }
      else {
        unint64_t v16 = 0xD000000000000019LL;
      }
    }

    else
    {
      uint64_t v29 = v2[6];
      unint64_t v30 = (const char *)v2[7];
      if (v21 == v29 && v20 == v30)
      {
        __n128 v27 = swift_bridgeObjectRelease(v20);
      }

      else
      {
        char v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, v29, v30, 0LL);
        __n128 v27 = swift_bridgeObjectRelease(v20);
        if ((v32 & 1) == 0)
        {
          (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v27);
          return 0LL;
        }
      }

      if ((v23 & 1) != 0) {
        unint64_t v16 = 0xD00000000000001BLL;
      }
      else {
        unint64_t v16 = 0xD000000000000015LL;
      }
    }

    (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v27);
    return v16;
  }

  sub_100187100((uint64_t)v6, (uint64_t *)&unk_100650430);
  return 0LL;
}

void sub_10034C8FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100650430);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URLComponents(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_100650450);
  uint64_t v14 = swift_allocObject(v13, 48LL, 7LL);
  *(_OWORD *)(v14 + swift_weakDestroy(v0 + 16) = xmmword_1004D6B40;
  *(void *)(v14 + 32) = CNContactEmailAddressesKey;
  *(void *)(v14 + 40) = CNContactPhoneNumbersKey;
  uint64_t v57 = (const char *)v14;
  specialized Array._endMutation()(v14);
  __n128 v15 = v57;
  unint64_t v16 = CNContactEmailAddressesKey;
  uint64_t v17 = CNContactPhoneNumbersKey;
  uint64_t v53 = a1;
  unint64_t v19 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v18);
  sub_10034BF90((uint64_t)v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease(v19);
  swift_retain(v2);
  uint64_t v52 = v2;
  sub_10034C3D8((uint64_t)v21, v2, v8);
  __n128 v22 = swift_bridgeObjectRelease(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1LL, v9, v22) == 1)
  {
    char v23 = (uint64_t *)&unk_100650430;
    uint64_t v24 = (uint64_t)v8;
LABEL_5:
    sub_100187100(v24, v23);
LABEL_6:
    swift_bridgeObjectRelease(v15);
    return;
  }

  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v25 = URLComponents.scheme.setter(0LL, 0LL);
  BOOL v26 = v54;
  URLComponents.url.getter(v25);
  uint64_t v27 = type metadata accessor for URL(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1LL, v27);
  if ((_DWORD)v29 == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    char v23 = (uint64_t *)&unk_100645130;
    uint64_t v24 = (uint64_t)v26;
    goto LABEL_5;
  }

  uint64_t v30 = URL.absoluteString.getter(v29);
  char v32 = v31;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
  uint64_t v57 = (const char *)v30;
  uint64_t v58 = v32;
  v56[0] = 12079LL;
  v56[1] = 0xE200000000000000LL;
  v55[0] = 0LL;
  v55[1] = 0xE000000000000000LL;
  unint64_t v33 = sub_1001CCE8C();
  StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v56,  v55,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v33,  v33,  v33);
  uint64_t v35 = v34;
  __n128 v36 = swift_bridgeObjectRelease(v32);
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v36);
  uint64_t v38 = v53;
  SFAirDropReceive.AskRequest.contactIdentifier.getter(v37);
  if (!v39)
  {
    swift_bridgeObjectRelease(v35);
    goto LABEL_6;
  }

  swift_bridgeObjectRelease(v39);
  uint64_t v40 = (void *)v52[2];
  if (v40)
  {
    int64_t v41 = v15;
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    sub_100183098(&qword_10064B7C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v44 =  objc_msgSend( v40,  "contactsWithPhoneNumberOrEmail:keys:",  v42,  isa,  swift_bridgeObjectRelease(v41).n128_f64[0]);

    if (v44)
    {
      unint64_t v45 = sub_100240DFC();
      unint64_t v46 = sub_1002E28C8();
      char v47 = (const char *)static Set._unconditionallyBridgeFromObjectiveC(_:)(v44, v45, v46);

      __chkstk_darwin(v48);
      v51[2] = v38;
      sub_10028CBFC(sub_10034D51C, (uint64_t)v51, (uint64_t)v47);
      uint64_t v50 = v49;
      swift_bridgeObjectRelease(v47);
      if (v50) {
    }
      }
  }

  else
  {
    __break(1u);
  }

uint64_t sub_10034CCF8(void **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
  uint64_t v4 = v3;
  id v5 = [v1 identifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
  uint64_t v8 = v7;

  if (v4)
  {
    if (v2 == v6 && v4 == v8) {
      char v10 = 1;
    }
    else {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v6, v8, 0LL);
    }
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    char v10 = 0;
  }

  swift_bridgeObjectRelease(v8);
  return v10 & 1;
}

uint64_t sub_10034CDB8()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPhoneLinks()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary33SDAirDropContentHandlerPhoneLinks);
}

double sub_10034CE14@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerPhoneLinks();
  uint64_t v3 = swift_allocObject(v2, 64LL, 7LL);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = [(id)objc_opt_self(SDStatusMonitor) sharedMonitor];
  double result = 0.0;
  *(_OWORD *)(v3 + 24) = xmmword_1004D6B50;
  *(void *)(v3 + 40) = 0xE800000000000000LL;
  *(void *)(v3 + 48) = 7103860LL;
  *(void *)(v3 + 56) = 0xE300000000000000LL;
  *a1 = v3;
  return result;
}

uint64_t sub_10034CE94()
{
  return sub_10034D20C();
}

unint64_t sub_10034CEB4(uint64_t a1)
{
  return sub_10034C67C(a1);
}

uint64_t sub_10034CED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100183098((uint64_t *)&unk_1006563F0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = *(void **)(*(void *)v2 + 24LL);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  uint64_t v9 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v7, 1LL, 1LL, v9);
  id v10 = v8;
  sub_10026664C(a1, v8, 1, a2);

  return sub_100187100((uint64_t)v7, (uint64_t *)&unk_1006563F0);
}

void sub_10034CFB8(__n128 a1, uint64_t a2, char a3)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.urlItems.getter(a1);
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  uint64_t v6 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v6, v26);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x494C5F454E4F4850LL;
  uint64_t v8 = inited + 32;
  *(void *)(inited + 40) = 0xEA00000000004B4ELL;
  *(void *)(inited + 48) = v5;
  *(void *)&double v9 = swift_bridgeObjectRetain((const char *)0xEA00000000004B4ELL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v9);
  v10._countAndFlagsBits = 95LL;
  v10._object = (void *)0xE100000000000000LL;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 0x494C5F454E4F4850LL;
  v11._object = (void *)0xEA00000000004B4ELL;
  String.append(_:)(v11);
  swift_bridgeObjectRelease((const char *)0xEA00000000004B4ELL);
  if (v5 > 1)
  {
    v12._countAndFlagsBits = 0x4C4152554C505FLL;
    v12._object = (void *)0xE700000000000000LL;
    String.append(_:)(v12);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a3 & 1) != 0)
  {
    v13._countAndFlagsBits = 0x4C4154495041435FLL;
    v13._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v13);
  }

  v14._countAndFlagsBits = 0x545845545FLL;
  v14._object = (void *)0xE500000000000000LL;
  String.append(_:)(v14);
  swift_setDeallocating(inited);
  uint64_t v15 = *(void *)(inited + 16);
  uint64_t v16 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v8, v15, v16);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v19 = (id)SFLocalizedStringForKey(v17, v18);

  if (v19)
  {
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    __n128 v22 = v21;

    uint64_t v23 = sub_100183098(&qword_1006483E0);
    uint64_t v24 = swift_allocObject(v23, 72LL, 7LL);
    *(_OWORD *)(v24 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v24 + 56) = &type metadata for Int;
    *(void *)(v24 + 64) = &protocol witness table for Int;
    *(void *)(v24 + 32) = v5;
    static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
    *(void *)&double v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v24, v25);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_10034D20C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100183098((uint64_t *)&unk_100645130);
  __chkstk_darwin(v2);
  uint64_t v38 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for URLComponents(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098((uint64_t *)&unk_100650430);
  uint64_t v8 = __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v37 - v11;
  Swift::String v14 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v13);
  sub_10034BF90((uint64_t)v14);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease(v14);
  swift_retain(v0);
  sub_10034C3D8((uint64_t)v16, v0, v12);
  __n128 v17 = swift_bridgeObjectRelease(v16);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48);
  LODWORD(vswift_weakDestroy(v0 + 16) = v18(v12, 1LL, v4, v17);
  sub_100187100((uint64_t)v12, (uint64_t *)&unk_100650430);
  uint64_t v20 = 0LL;
  if ((_DWORD)v16 != 1)
  {
    uint64_t v21 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v19);
    sub_10034BF90((uint64_t)v21);
    uint64_t v23 = v22;
    swift_bridgeObjectRelease(v21);
    swift_retain(v1);
    sub_10034C3D8((uint64_t)v23, v1, v10);
    __n128 v24 = swift_bridgeObjectRelease(v23);
    if (v18(v10, 1LL, v4, v24) == 1)
    {
      double v25 = (uint64_t *)&unk_100650430;
    }

    else
    {
      BOOL v26 = v39;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v39, v10, v4);
      uint64_t v27 = URLComponents.scheme.setter(0LL, 0LL);
      Swift::String v10 = v38;
      URLComponents.url.getter(v27);
      uint64_t v28 = type metadata accessor for URL(0LL);
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v10, 1LL, v28);
      if ((_DWORD)v30 != 1)
      {
        uint64_t v31 = URL.absoluteString.getter(v30);
        unint64_t v33 = v32;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v28);
        v41[2] = v31;
        v41[3] = v33;
        v41[0] = 12079LL;
        v41[1] = 0xE200000000000000LL;
        v40[0] = 0LL;
        v40[1] = 0xE000000000000000LL;
        unint64_t v34 = sub_1001CCE8C();
        uint64_t v20 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)( v41,  v40,  0LL,  0LL,  0LL,  1LL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v34,  v34,  v34);
        __n128 v35 = swift_bridgeObjectRelease(v33);
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v26, v4, v35);
        return v20;
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v26, v4);
      double v25 = (uint64_t *)&unk_100645130;
    }

    sub_100187100((uint64_t)v10, v25);
    return 0LL;
  }

  return v20;
}

uint64_t sub_10034D51C(void **a1)
{
  return sub_10034CCF8(a1) & 1;
}

uint64_t sub_10034D538()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100650458);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100650458);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10034D5C8(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v2[6] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for SFPlatform(0LL);
  v2[9] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[10] = v6;
  v2[11] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  v2[12] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[13] = v8;
  v2[14] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[15] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[16] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[17] = swift_task_alloc(v11);
  v2[18] = swift_task_alloc(v11);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10034D6E0, static AirDropActor.shared, 0LL);
}

uint64_t sub_10034D6E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t v5 = *(void *)(v1 + 128);
  uint64_t v6 = SFAirDropReceive.AskRequest.files.getter(a1);
  uint64_t v7 = *(void *)(v6 + 16);
  __n128 v8 = swift_bridgeObjectRelease((const char *)v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v3, v2, v4, v8);
  uint64_t v10 = *(void *)(v1 + 144);
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v12 = *(void *)(v1 + 128);
  if (!v7)
  {
    (*(void (**)(void, void))(v12 + 8))(*(void *)(v1 + 144), *(void *)(v1 + 120));
    goto LABEL_11;
  }

  uint64_t v13 = SFAirDropReceive.AskRequest.urlItems.getter(v9);
  uint64_t v14 = *(void *)(v13 + 16);
  __n128 v15 = swift_bridgeObjectRelease((const char *)v13);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v12 + 8))(v10, v11, v15);
  if (v14)
  {
LABEL_11:
    BOOL v36 = 0LL;
    goto LABEL_12;
  }

  uint64_t v17 = SFAirDropReceive.AskRequest.files.getter(v16);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = *(void *)(v1 + 104);
    unint64_t v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v50 = (const char *)v17;
    *(void *)os_log_type_t type = *(void *)(v19 + 72);
    uint64_t v52 = *(uint64_t (**)(void, unint64_t, void))(v19 + 16);
    while (1)
    {
      uint64_t v21 = v52(*(void *)(v1 + 112), v20, *(void *)(v1 + 96));
      SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v21);
      uint64_t v23 = v22;
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v23);
      SFAirDropReceive.AskRequest.ItemInfo.fileName.getter(v25);
      uint64_t v27 = v26;
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v29 = objc_msgSend(v28, "pathExtension", swift_bridgeObjectRelease(v27).n128_f64[0]);

      if (!v29)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
        uint64_t v31 = v30;
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v31);
      }

      uint64_t v32 = *(void *)(v1 + 112);
      uint64_t v33 = *(void *)(v1 + 96);
      char v34 = SFIsPass(v24, v29);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v32, v33);
      if ((v34 & 1) == 0) {
        break;
      }
      v20 += *(void *)type;
      if (!--v18)
      {
        swift_bridgeObjectRelease(v50);
        goto LABEL_14;
      }
    }

    swift_bridgeObjectRelease(v50);
    goto LABEL_11;
  }

  swift_bridgeObjectRelease((const char *)v17);
LABEL_14:
  uint64_t v43 = *(void *)(v1 + 80);
  uint64_t v42 = *(void *)(v1 + 88);
  uint64_t v44 = *(void *)(v1 + 72);
  static SFPlatform.macOS.getter(v35);
  char v45 = static SFPlatform.isPlatform(_:)(v42);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  if ((v45 & 1) != 0)
  {
    BOOL v36 = 1LL;
  }

  else
  {
    id v46 = objc_allocWithZone(&OBJC_CLASS___LSApplicationRecord);
    id v47 = sub_10043C098(0xD000000000000012LL, 0x800000010050BBE0LL, 1);
    uint64_t v48 = *(void *)(v1 + 40);
    char v49 = *(void **)(v48 + 16);
    *(void *)(v48 + swift_weakDestroy(v0 + 16) = v47;

    BOOL v36 = *(void *)(*(void *)(v1 + 40) + 16LL) != 0LL;
  }

uint64_t type metadata accessor for SDAirDropContentHandlerWalletItems()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary34SDAirDropContentHandlerWalletItems);
}

uint64_t sub_10034DC3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerWalletItems();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

uint64_t sub_10034DC70(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10065049C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001C97A0;
  return sub_10034D5C8(a1);
}

void sub_10034DCC4(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 1397965136LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xE400000000000000LL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xE400000000000000LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 1397965136LL;
  v10._object = (void *)0xE400000000000000LL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE400000000000000LL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + swift_weakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

unint64_t sub_10034DEF8()
{
  unint64_t result = qword_100647620;
  if (!qword_100647620)
  {
    uint64_t v1 = type metadata accessor for SFAirDrop.TransferIdentifier(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for SFAirDrop.TransferIdentifier, v1);
    atomic_store(result, &qword_100647620);
  }

  return result;
}

uint64_t Optional.tryAuthUnwrap(_:)@<X0>( uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  Swift::String v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v10, v11);
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
  unint64_t v14 = sub_100187014();
  swift_allocError(&type metadata for SFAuthenticationErrorMessage, v14, 0LL, 0LL);
  *(_DWORD *)uint64_t v15 = 10;
  *(void *)(v15 + 8) = a1;
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = a2;
  swift_bridgeObjectRetain(a2);
  return swift_willThrow(v16);
}

uint64_t sub_10034E05C(uint64_t a1, int a2)
{
  unint64_t v4 = v2;
  int v63 = a2;
  double v62 = *(double *)&a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  __chkstk_darwin(v5);
  char v72 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  __chkstk_darwin(v7);
  uint64_t v69 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  int v66 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v57 - v12;
  uint64_t v14 = type metadata accessor for DispatchTime(0LL);
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v65 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v20 = type metadata accessor for OS_dispatch_source.TimerFlags(0LL);
  uint64_t v61 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  BOOL v26 = (uint64_t *)((char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v27 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  void *v26 = v27;
  (*(void (**)(void *, void, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  id v60 = v27;
  LOBYTE(v27) = _dispatchPreconditionTest(_:)(v26);
  (*(void (**)(void *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once(&qword_1006441F0, sub_10034F7C0);
    goto LABEL_8;
  }

  int v59 = v4;
  uint64_t v58 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer;
  uint64_t v28 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer];
  if (v28)
  {
    swift_getObjectType(*(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer]);
    swift_unknownObjectRetain(v28);
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease(v28);
  }

  if ((v63 & 1) != 0) {
    double v3 = 15.0;
  }
  else {
    double v3 = v62;
  }
  sub_1002BF858();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v29 = sub_100183F14( &qword_100646C88,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags,  (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  uint64_t v30 = sub_100183098(&qword_100646C90);
  uint64_t v31 = sub_1001CD538( (unint64_t *)&unk_100646C98,  &qword_100646C90,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v20, v29);
  BOOL v26 = (void *)static OS_dispatch_source.makeTimerSource(flags:queue:)(v22, v60);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v22, v20);
  uint64_t ObjectType = swift_getObjectType(v26);
  static DispatchTime.now()(ObjectType);
  + infix(_:_:)(v17, v3);
  uint64_t v33 = v65;
  char v34 = *(void (**)(char *, uint64_t))(v64 + 8);
  v34(v17, v65);
  uint64_t v36 = v67;
  uint64_t v35 = v68;
  (*(void (**)(char *, void, uint64_t))(v67 + 104))(v13, enum case for DispatchTimeInterval.never(_:), v68);
  uint64_t v37 = v66;
  sub_1001DB6D4(v66);
  OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v19, v13, v37, ObjectType);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v36 + 8);
  v38(v37, v35);
  v38(v13, v35);
  v34(v19, v33);
  uint64_t v39 = swift_allocObject(&unk_1005DC740, 24LL, 7LL);
  uint64_t v19 = v59;
  swift_unknownObjectWeakInit(v39 + 16, v59);
  aBlock[4] = (uint64_t)sub_100350610;
  uint64_t v77 = v39;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_1001B9FE4;
  aBlock[3] = (uint64_t)&unk_1005DC758;
  uint64_t v40 = _Block_copy(aBlock);
  swift_retain(v39);
  int64_t v41 = v69;
  j___s8Dispatch0A3QoSV11unspecifiedACvgZ(ObjectType);
  uint64_t v42 = v72;
  sub_1003D06B8();
  OS_dispatch_source.setEventHandler(qos:flags:handler:)(v41, v42, v40, ObjectType);
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v42, v74);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v41, v71);
  uint64_t v43 = v77;
  swift_release(v39);
  swift_release(v43);
  uint64_t v44 = *(void *)&v19[v58];
  *(void *)&v19[v58] = v26;
  swift_unknownObjectRetain(v26);
  swift_unknownObjectRelease(v44);
  if (qword_1006441F0 != -1) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v45 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v45, (uint64_t)qword_100650560);
  id v46 = v19;
  id v47 = (os_log_s *)Logger.logObject.getter(v46);
  os_log_type_t v48 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v47, v48))
  {
    uint64_t v49 = swift_slowAlloc(22LL, -1LL);
    uint64_t v50 = swift_slowAlloc(32LL, -1LL);
    aBlock[0] = v50;
    *(_DWORD *)uint64_t v49 = 136315394;
    uint64_t v51 = type metadata accessor for UUID(0LL);
    uint64_t v52 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter(v51, v52);
    uint64_t v55 = (const char *)v54;
    uint64_t v75 = sub_10018CDB4(v53, v54, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, aBlock, v49 + 4, v49 + 12);

    swift_bridgeObjectRelease(v55);
    *(_WORD *)(v49 + 12) = 2048;
    uint64_t v75 = *(void *)&v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, aBlock, v49 + 14, v49 + 22);
    _os_log_impl( (void *)&_mh_execute_header,  v47,  v48,  "Starting response timer for %s to fire in %f sec",  (uint8_t *)v49,  0x16u);
    swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1LL, -1LL);
    swift_slowDealloc(v49, -1LL, -1LL);
  }

  else
  {
  }

  OS_dispatch_source.activate()();
  return swift_unknownObjectRelease(v26);
}

uint64_t sub_10034E730()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint8_t **)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  void *v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v8 = v7;
  LOBYTE(v7) = _dispatchPreconditionTest(_:)(v6);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_1006441F0, sub_10034F7C0);
    goto LABEL_4;
  }

  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer];
  if (!v6) {
    return result;
  }
  uint64_t v10 = qword_1006441F0;
  swift_unknownObjectRetain(*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_responseTimer]);
  if (v10 != -1) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v11 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v11, (uint64_t)qword_100650560);
  uint64_t v12 = v2;
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    uint64_t v25 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v27 = v16;
    uint64_t v24 = v15 + 4;
    uint64_t v17 = type metadata accessor for UUID(0LL);
    uint64_t v18 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter(v17, v18);
    unint64_t v21 = v20;
    uint64_t v26 = sub_10018CDB4(v19, v20, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v24, v15 + 12);

    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Canceling response timer for %s", v15, 0xCu);
    uint64_t v22 = v25;
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
  }

  swift_getObjectType(v6);
  OS_dispatch_source.cancel()();
  uint64_t v23 = *(void *)&v2[v1];
  *(void *)&v2[v1] = 0LL;
  swift_unknownObjectRelease(v6);
  return swift_unknownObjectRelease(v23);
}

uint64_t sub_10034E9D8(unint64_t a1)
{
  if (a1 > 0xB) {
    return 3LL;
  }
  else {
    return byte_1004D74DA[a1];
  }
}

uint64_t sub_10034E9F8()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_queue];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (qword_1006441F0 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_1006441F0, sub_10034F7C0);
LABEL_3:
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v7, (uint64_t)qword_100650560);
  id v8 = v0;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v20 = v12;
    uint64_t v13 = type metadata accessor for UUID(0LL);
    uint64_t v14 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter(v13, v14);
    uint64_t v17 = (const char *)v16;
    uint64_t v19 = sub_10018CDB4(v15, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4, v11 + 12);

    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Invalidating %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
  }

  return sub_10034E730();
}

uint64_t sub_10034EC60(uint64_t a1)
{
  else {
    return qword_1004D74E8[a1 - 1];
  }
}

uint64_t sub_10034EC84(void *a1, int a2)
{
  int v22 = a2;
  uint64_t v3 = sub_100183098(&qword_100650670);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100183098(&qword_100650678);
  uint64_t v6 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098((uint64_t *)&unk_100650680);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_10019A708(a1, v13);
  unint64_t v15 = sub_100350514();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &type metadata for SDAuthenticationRole.CodingKeys,  &type metadata for SDAuthenticationRole.CodingKeys,  v15,  v13,  v14);
  if ((v22 & 1) != 0)
  {
    char v24 = 1;
    unint64_t v17 = sub_100350558();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for SDAuthenticationRole.KeyCodingKeys,  &v24,  v9,  &type metadata for SDAuthenticationRole.KeyCodingKeys,  v17);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v21);
  }

  else
  {
    char v23 = 0;
    unint64_t v16 = sub_10035059C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for SDAuthenticationRole.LockCodingKeys,  &v23,  v9,  &type metadata for SDAuthenticationRole.LockCodingKeys,  v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_10034EE54()
{
  if (*v0) {
    return 7955787LL;
  }
  else {
    return 1801678668LL;
  }
}

uint64_t sub_10034EE80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result = sub_100350104(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10034EEA4(uint64_t a1)
{
  unint64_t v2 = sub_100350514();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034EECC(uint64_t a1)
{
  unint64_t v2 = sub_100350514();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034EEF4()
{
  return 0LL;
}

uint64_t sub_10034EF00@<X0>(uint64_t a1@<X1>, _BYTE *a2@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease(a1);
  *a2 = 1;
  return result;
}

uint64_t sub_10034EF2C(uint64_t a1)
{
  unint64_t v2 = sub_100350558();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034EF54(uint64_t a1)
{
  unint64_t v2 = sub_100350558();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034EF7C(uint64_t a1)
{
  unint64_t v2 = sub_10035059C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10034EFA4(uint64_t a1)
{
  unint64_t v2 = sub_10035059C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10034EFCC@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_1003501D4(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_10034EFF8(void *a1)
{
  return sub_10034EC84(a1, *v1);
}

unint64_t sub_10034F010(uint64_t a1)
{
  unint64_t result = 1769105779LL;
  switch(a1)
  {
    case 0LL:
      unint64_t result = 0x6E776F6E6B6E75LL;
      break;
    case 1LL:
      return result;
    case 2LL:
      unint64_t result = 0x6C6C61576F6E616ELL;
      break;
    case 3LL:
      unint64_t result = 0xD000000000000013LL;
      break;
    case 4LL:
      unint64_t result = 0x6C436B636F6C6E75LL;
      break;
    case 5LL:
      unint64_t result = 0xD000000000000015LL;
      break;
    case 6LL:
      unint64_t result = 0x636F6C6E5563616DLL;
      break;
    case 7LL:
      unint64_t result = 0x6F7270704163616DLL;
      break;
    case 8LL:
      unint64_t result = 0x6172747369676572LL;
      break;
    case 9LL:
      unint64_t result = 0xD000000000000016LL;
      break;
    case 10LL:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11LL:
      unint64_t result = 0x646F4D7473657567LL;
      break;
    case 12LL:
      unint64_t result = 0xD000000000000019LL;
      break;
    case 13LL:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 14LL:
      unint64_t result = 0xD000000000000017LL;
      break;
    default:
      unint64_t result = 0LL;
      break;
  }

  return result;
}

Swift::Int sub_10034F1E0(unint64_t a1)
{
  if (a1 > 0xE) {
    return sub_1001DD1C4((uint64_t)&off_1005D1578);
  }
  else {
    return sub_1001DD1C4((uint64_t)off_1005DC8E0[a1]);
  }
}

int64_t sub_10034F204(uint64_t a1)
{
  return sub_10034F21C(a1, (uint64_t (*)(void))sub_10034F1E0);
}

int64_t sub_10034F210(uint64_t a1)
{
  return sub_10034F21C(a1, (uint64_t (*)(void))sub_10034F3B0);
}

int64_t sub_10034F21C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = a2();
  uint64_t v3 = v2;
  int64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    sub_10018D890(0, v4, 0);
    int64_t result = sub_10028F928(v3);
    int64_t v6 = result;
    int v8 = v7;
    char v10 = v9 & 1;
    while ((v10 & 1) == 0)
    {
      if (v6 < 0 || v6 >= 1LL << *(_BYTE *)(v3 + 32))
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        break;
      }

      if (*(_DWORD *)(v3 + 36) != v8) {
        goto LABEL_16;
      }
      uint64_t v11 = sub_10008AE9C(*(_BYTE *)(*(void *)(v3 + 48) + v6));
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_10018D890(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      _swiftEmptyArrayStorage[v13 + 4] = v11;
      int64_t result = sub_100350010(v6, v8, 0, v3);
      int64_t v6 = result;
      int v8 = v14;
      char v10 = v15 & 1;
      if (!--v4)
      {
        sub_1003505E0(result, v14, v10);
        swift_bridgeObjectRelease((const char *)v3);
        goto LABEL_13;
      }
    }

    __break(1u);
  }

  else
  {
    swift_bridgeObjectRelease((const char *)v2);
LABEL_13:
    uint64_t v16 = sub_100190098((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage);
    return v16;
  }

  return result;
}

Swift::Int sub_10034F3B0(unint64_t a1)
{
  if (a1 > 0xE) {
    return sub_1001DD1C4((uint64_t)&off_1005D1320);
  }
  else {
    return sub_1001DD1C4((uint64_t)off_1005DC958[a1]);
  }
}

uint64_t sub_10034F3D4(unint64_t a1, uint64_t a2)
{
  Swift::UInt8 v3 = SFDeviceClassCodeGet(a1, a2);
  Swift::Int v4 = sub_10034F1E0(a1);
  BOOL v5 = sub_1003A0760(8u, v4);
  __n128 v6 = swift_bridgeObjectRelease(v4);
  if (v5)
  {
  }

  else
  {
    Swift::Int v8 = sub_10034F1E0(a1);
    BOOL v9 = sub_1003A0760(v3, v8);
    swift_bridgeObjectRelease(v8);
    if (!v9)
    {
LABEL_3:
      if (a1 >= 0xF) {
        return 0LL;
      }
      else {
        return (0x658Eu >> a1) & 1;
      }
    }
  }

  if (a1 >= 0xF) {
    return 1LL;
  }
  else {
    return (0x1A71u >> a1) & 1;
  }
}

unint64_t sub_10034F488@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_1003500F4(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10034F4B8(void *a1@<X8>)
{
  *a1 = &off_1005D0F28;
}

unint64_t sub_10034F4C8()
{
  return sub_10034F010(*v0);
}

unint64_t static SFAuthenticationError._nsErrorDomain.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_10034F4EC(uint64_t a1)
{
  uint64_t v2 = sub_100183F14( &qword_100650690,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  return _BridgedNSError._domain.getter(a1, v2);
}

uint64_t sub_10034F52C(uint64_t a1)
{
  uint64_t v2 = sub_100183F14( &qword_100650690,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  return _BridgedNSError._code.getter(a1, v2);
}

uint64_t sub_10034F56C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183F14( &qword_100650690,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
  return _BridgedNSError.init(_bridgedNSError:)(a1, a2, v4);
}

Swift::Int sub_10034F5C4()
{
  int v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 2006);
  return Hasher._finalize()();
}

void sub_10034F608()
{
}

Swift::Int sub_10034F634()
{
  int v1 = *v0;
  Hasher.init(_seed:)(v3);
  Hasher._combine(_:)(v1 + 2006);
  return Hasher._finalize()();
}

uint64_t sub_10034F674@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_100350500(*a1);
  *a2 = result;
  return result;
}

void sub_10034F69C(_DWORD *a1@<X8>)
{
  *a1 = *v1 + 2006;
}

void sub_10034F6AC(void *a1@<X8>)
{
  *a1 = &off_1005D0FC0;
}

uint64_t sub_10034F6BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_10034F6F8 + 4 * byte_1004D6C4E[a1]))( 0xD000000000000016LL,  0x800000010050BEF0LL);
}

uint64_t sub_10034F6F8()
{
  return v0 - 7;
}

uint64_t sub_10034F7B8()
{
  return sub_10034F6BC(*v0);
}

uint64_t sub_10034F7C0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100650560);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100650560);
  if (qword_100644020 != -1) {
    swift_once(&qword_100644020, sub_10023A520);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_10034F850(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1, v2);
  if (Strong)
  {
    uint64_t v4 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x100LL))();
  }

id sub_10034F8E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SDAuthenticationSession(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10034F9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034FA80( a1,  a2,  a3,  &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_delegate,  &qword_100650630);
}

uint64_t sub_10034F9BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_sessionID;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t sub_10034FA04()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_type);
}

uint64_t sub_10034FA18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_10034FFC8(v3, a1);
}

uint64_t sub_10034FA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10034FA80( a1,  a2,  a3,  &OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationSession_peerDevice,  &qword_100654080);
}

uint64_t sub_10034FA80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v8 = *v5 + *a4;
  swift_beginAccess(v8, v10, 33LL, 0LL);
  sub_1001C9860(a1, v8, a5);
  return swift_endAccess(v10);
}

uint64_t sub_10034FAE8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xE8LL))();
}

uint64_t SFAuthenticationError.description.getter()
{
  id v0 = (id)SFAuthenticationErrorToString();
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v0);

  return v1;
}

uint64_t sub_10034FB68()
{
  return sub_100183F14( &qword_100650580,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
}

uint64_t sub_10034FB94()
{
  return sub_100183F14( &qword_100650588,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&unk_1004CC1F0);
}

uint64_t sub_10034FBC0()
{
  return sub_100183F14( &qword_100650590,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&unk_1004CC1B4);
}

unint64_t sub_10034FBF0()
{
  unint64_t result = qword_100650598;
  if (!qword_100650598)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UInt32, &type metadata for UInt32);
    atomic_store(result, (unint64_t *)&qword_100650598);
  }

  return result;
}

uint64_t sub_10034FC34()
{
  return sub_100183F14( &qword_1006505A0,  (uint64_t (*)(uint64_t))type metadata accessor for SFAuthenticationError,  (uint64_t)&protocol conformance descriptor for SFAuthenticationError);
}

uint64_t sub_10034FC60()
{
  id v1 = (id)SFAuthenticationErrorToString(*v0);
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v2;
}

uint64_t sub_10034FCAC()
{
  return type metadata accessor for SDAuthenticationSession(0LL);
}

uint64_t type metadata accessor for SDAuthenticationSession(uint64_t a1)
{
  uint64_t result = qword_1006505F8;
  if (!qword_1006505F8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAuthenticationSession);
  }
  return result;
}

uint64_t sub_10034FCF0(uint64_t a1)
{
  v4[0] = "(";
  v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[2] = "(";
  void v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    _DWORD v4[4] = *(void *)(result - 8) + 64LL;
    v4[5] = &unk_1004D6E90;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationType()
{
  return &type metadata for SDAuthenticationType;
}

ValueMetadata *type metadata accessor for SDAuthenticationRole()
{
  return &type metadata for SDAuthenticationRole;
}

uint64_t destroy for SFAuthenticationErrorMessage(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 16));
}

uint64_t _s16DaemoniOSLibrary28SFAuthenticationErrorMessageVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for SFAuthenticationErrorMessage(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for SFAuthenticationErrorMessage(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SFAuthenticationErrorMessage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SFAuthenticationErrorMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + swift_weakDestroy(v0 + 16) = 0LL;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + swift_weakDestroy(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SFAuthenticationErrorMessage()
{
  return &type metadata for SFAuthenticationErrorMessage;
}

unint64_t sub_10034FF10()
{
  unint64_t result = qword_100650608;
  if (!qword_100650608)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D6FC8, &type metadata for SDAuthenticationRole);
    atomic_store(result, (unint64_t *)&qword_100650608);
  }

  return result;
}

uint64_t sub_10034FF54()
{
  return sub_1001CD538(&qword_100650610, &qword_100650618, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_10034FF84()
{
  unint64_t result = qword_100650620;
  if (!qword_100650620)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D70C8, &type metadata for SDAuthenticationType);
    atomic_store(result, (unint64_t *)&qword_100650620);
  }

  return result;
}

uint64_t sub_10034FFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100654080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

int64_t sub_100350010(int64_t result, int a2, char a3, uint64_t a4)
{
  if ((a3 & 1) != 0) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1LL << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }

  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }

  unint64_t v8 = v7 & (-2LL << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0LL;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }

  return result;
}

unint64_t sub_1003500F4(unint64_t result)
{
  if (result > 0xE) {
    return 0LL;
  }
  return result;
}

uint64_t sub_100350104(uint64_t a1, unint64_t a2)
{
  if (a1 == 1801678668 && a2 == 0xE400000000000000LL)
  {
    unint64_t v5 = 0xE400000000000000LL;
    goto LABEL_8;
  }

  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1801678668LL, 0xE400000000000000LL, a1, a2, 0LL) & 1) != 0)
  {
    unint64_t v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0LL;
  }

  if (a1 == 7955787 && a2 == 0xE300000000000000LL)
  {
    swift_bridgeObjectRelease(0xE300000000000000LL);
    return 1LL;
  }

  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(7955787LL, 0xE300000000000000LL, a1, a2, 0LL);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0) {
      return 1LL;
    }
    else {
      return 2LL;
    }
  }

uint64_t sub_1003501D4(void *a1)
{
  uint64_t v34 = sub_100183098(&qword_100650638);
  uint64_t v32 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_100183098(&qword_100650640);
  uint64_t v3 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_100650648);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_10019A708(a1, v10);
  unint64_t v12 = sub_100350514();
  uint64_t v13 = v36;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &type metadata for SDAuthenticationRole.CodingKeys,  &type metadata for SDAuthenticationRole.CodingKeys,  v12,  v10,  v11);
  if (v13) {
    goto LABEL_7;
  }
  uint64_t v14 = v5;
  char v15 = v35;
  uint64_t v31 = a1;
  uint64_t v36 = v7;
  uint64_t v16 = KeyedDecodingContainer.allKeys.getter(v6);
  unint64_t v17 = (const char *)v16;
  uint64_t v18 = v6;
  if (*(void *)(v16 + 16) != 1LL)
  {
    uint64_t v21 = type metadata accessor for DecodingError(0LL);
    swift_allocError(v21, &protocol witness table for DecodingError, 0LL, 0LL);
    int v22 = v9;
    char v24 = v23;
    sub_100183098(&qword_100650658);
    *char v24 = &type metadata for SDAuthenticationRole;
    uint64_t v25 = KeyedDecodingContainer.codingPath.getter(v6);
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)( v25,  0xD00000000000002BLL,  0x800000010050BFA0LL,  0LL);
    uint64_t v26 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104LL))( v24,  enum case for DecodingError.typeMismatch(_:),  v21);
    swift_willThrow(v26);
    __n128 v27 = swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t, __n128))(v36 + 8))(v22, v6, v27);
    a1 = v31;
LABEL_7:
    sub_10018709C(a1);
    return v6;
  }

  uint64_t v6 = *(unsigned __int8 *)(v16 + 32);
  if ((v6 & 1) != 0)
  {
    char v38 = 1;
    unint64_t v19 = sub_100350558();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for SDAuthenticationRole.KeyCodingKeys,  &v38,  v18,  &type metadata for SDAuthenticationRole.KeyCodingKeys,  v19);
    uint64_t v20 = v36;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v34);
  }

  else
  {
    char v37 = 0;
    unint64_t v28 = sub_10035059C();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)( &type metadata for SDAuthenticationRole.LockCodingKeys,  &v37,  v18,  &type metadata for SDAuthenticationRole.LockCodingKeys,  v28);
    uint64_t v20 = v36;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v33);
  }

  __n128 v30 = swift_bridgeObjectRelease(v17);
  (*(void (**)(char *, uint64_t, __n128))(v20 + 8))(v9, v18, v30);
  sub_10018709C(v31);
  return v6;
}

uint64_t sub_100350500(int a1)
{
  else {
    return (a1 - 2006);
  }
}

unint64_t sub_100350514()
{
  unint64_t result = qword_100650650;
  if (!qword_100650650)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7488, &type metadata for SDAuthenticationRole.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_100650650);
  }

  return result;
}

unint64_t sub_100350558()
{
  unint64_t result = qword_100650660;
  if (!qword_100650660)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7438, &type metadata for SDAuthenticationRole.KeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100650660);
  }

  return result;
}

unint64_t sub_10035059C()
{
  unint64_t result = qword_100650668;
  if (!qword_100650668)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D73E8, &type metadata for SDAuthenticationRole.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_100650668);
  }

  return result;
}

uint64_t sub_1003505E0(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return swift_bridgeObjectRelease(result);
  }
  return result;
}

uint64_t sub_1003505EC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100350610()
{
}

uint64_t sub_100350618(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100350628(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t _s16DaemoniOSLibrary20SDAuthenticationRoleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_10035067C + 4 * byte_1004D6C5F[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003506B0 + 4 * byte_1004D6C5A[v4]))();
}

uint64_t sub_1003506B0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003506B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1003506C0LL);
  }
  return result;
}

uint64_t sub_1003506CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1003506D4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_1003506D8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003506E0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationRole.CodingKeys()
{
  return &type metadata for SDAuthenticationRole.CodingKeys;
}

ValueMetadata *type metadata accessor for SDAuthenticationRole.LockCodingKeys()
{
  return &type metadata for SDAuthenticationRole.LockCodingKeys;
}

ValueMetadata *type metadata accessor for SDAuthenticationRole.KeyCodingKeys()
{
  return &type metadata for SDAuthenticationRole.KeyCodingKeys;
}

uint64_t getEnumTagSinglePayload for SDAuthenticationTransportMessageType( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }

uint64_t storeEnumTagSinglePayload for SDAuthenticationTransportMessageType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF4) {
    return ((uint64_t (*)(void))((char *)&loc_1003507F8 + 4 * byte_1004D6C69[v4]))();
  }
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_10035082C + 4 * byte_1004D6C64[v4]))();
}

uint64_t sub_10035082C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100350834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10035083CLL);
  }
  return result;
}

uint64_t sub_100350848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100350850LL);
  }
  *(_BYTE *)unint64_t result = a2 + 11;
  return result;
}

uint64_t sub_100350854(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10035085C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SDAuthenticationTransportMessageType()
{
  return &type metadata for SDAuthenticationTransportMessageType;
}

uint64_t sub_100350878()
{
  return sub_1001CD538(&qword_100650698, &qword_1006506A0, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1003508A8()
{
  unint64_t result = qword_1006506A8;
  if (!qword_1006506A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7268, &type metadata for SDAuthenticationTransportMessageType);
    atomic_store(result, (unint64_t *)&qword_1006506A8);
  }

  return result;
}

unint64_t sub_1003508F0()
{
  unint64_t result = qword_1006506B0;
  if (!qword_1006506B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D73C0, &type metadata for SDAuthenticationRole.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506B0);
  }

  return result;
}

unint64_t sub_100350938()
{
  unint64_t result = qword_1006506B8;
  if (!qword_1006506B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D72E0, &type metadata for SDAuthenticationRole.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506B8);
  }

  return result;
}

unint64_t sub_100350980()
{
  unint64_t result = qword_1006506C0;
  if (!qword_1006506C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7308, &type metadata for SDAuthenticationRole.LockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506C0);
  }

  return result;
}

unint64_t sub_1003509C8()
{
  unint64_t result = qword_1006506C8;
  if (!qword_1006506C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7290, &type metadata for SDAuthenticationRole.KeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506C8);
  }

  return result;
}

unint64_t sub_100350A10()
{
  unint64_t result = qword_1006506D0;
  if (!qword_1006506D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D72B8, &type metadata for SDAuthenticationRole.KeyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506D0);
  }

  return result;
}

unint64_t sub_100350A58()
{
  unint64_t result = qword_1006506D8;
  if (!qword_1006506D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7330, &type metadata for SDAuthenticationRole.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506D8);
  }

  return result;
}

unint64_t sub_100350AA0()
{
  unint64_t result = qword_1006506E0;
  if (!qword_1006506E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7358, &type metadata for SDAuthenticationRole.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1006506E0);
  }

  return result;
}

uint64_t sub_100350AF4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo(0LL);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  v2[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100350B88, v5, 0LL);
}

uint64_t sub_100350B88()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_10064C4AC);
  *(void *)(v0 + 64) = v1;
  void *v1 = v0;
  v1[1] = sub_100350BDC;
  return sub_1002B53C8(*(void *)(v0 + 16));
}

uint64_t sub_100350BDC(char a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 56LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  *(_BYTE *)(*(void *)v1 + 72LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100350C38, v3, 0LL);
}

uint64_t sub_100350C38()
{
  if (*(_BYTE *)(v0 + 72) != 1)
  {
LABEL_9:
    uint64_t v13 = 0LL;
    goto LABEL_10;
  }

  uint64_t v1 = SFAirDropReceive.AskRequest.files.getter();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v15 = v1;
    unint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    unsigned int v6 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v8 = *(void *)(v0 + 32);
      uint64_t v9 = v6(v7, v4, v8);
      SFAirDropReceive.AskRequest.ItemInfo.fileType.getter(v9);
      uint64_t v11 = v10;
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
      LOBYTE(v11) = SFIsPDF(v12);

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v8);
      if ((v11 & 1) == 0) {
        break;
      }
      v4 += v5;
      if (!--v2)
      {
        uint64_t v1 = v15;
        goto LABEL_7;
      }
    }

    swift_bridgeObjectRelease(v15);
    goto LABEL_9;
  }

uint64_t sub_100350D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SFPlatform(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(v3 + 16);
  uint64_t v12 = swift_retain(v11);
  static SFPlatform.visionOS.getter(v12);
  char v13 = static SFPlatform.isPlatform(_:)(v10);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  uint64_t v15 = v14(v10, v7);
  if ((v13 & 1) == 0)
  {
    static SFPlatform.macOS.getter(v15);
    static SFPlatform.isPlatform(_:)(v10);
    v14(v10, v7);
  }

  swift_release(v11);
  type metadata accessor for SDAirDropContentHandlerUtilities();
  return sub_100266ABC(a1, a2, a3);
}

uint64_t type metadata accessor for SDAirDropContentHandlerPDFs()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary27SDAirDropContentHandlerPDFs);
}

uint64_t sub_100350E84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerPDFs();
  uint64_t v3 = swift_allocObject(v2, 24LL, 7LL);
  uint64_t v4 = type metadata accessor for SDAirDropContentHandlerGenericFiles();
  uint64_t result = swift_allocObject(v4, 25LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(result + 24) = 0;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  *a1 = v3;
  return result;
}

uint64_t sub_100350ED8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_10065071C);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001C97A0;
  return sub_100350AF4(a1);
}

uint64_t sub_100350F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_100350D44(a1, a2, a3);
}

void sub_100350F4C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

uint64_t sub_100350F70(uint64_t a1)
{
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100350FD8, static AirDropActor.shared, 0LL);
}

uint64_t sub_100350FD8()
{
  uint64_t v1 = static AirDropActor.shared;
  *(void *)(v0 + 24) = static AirDropActor.shared;
  return swift_task_switch(sub_1002B5C80, v1, 0LL);
}

void sub_100350FF8(uint64_t a1, char a2)
{
  uint64_t v4 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease((const char *)v4);
  if (v5 <= 1)
  {
    sub_10026B84C(a1, a2 & 1);
  }

  else
  {
    uint64_t v6 = sub_100183098((uint64_t *)&unk_100650440);
    uint64_t inited = swift_initStackObject(v6, v26);
    *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(inited + 32) = 4605008LL;
    uint64_t v8 = inited + 32;
    *(void *)(inited + 40) = 0xE300000000000000LL;
    *(void *)(inited + 48) = v5;
    *(void *)&double v9 = swift_bridgeObjectRetain((const char *)0xE300000000000000LL).n128_u64[0];
    swift_bridgeObjectRetain((const char *)inited, v9);
    v10._countAndFlagsBits = 95LL;
    v10._object = (void *)0xE100000000000000LL;
    String.append(_:)(v10);
    v11._countAndFlagsBits = 4605008LL;
    v11._object = (void *)0xE300000000000000LL;
    String.append(_:)(v11);
    swift_bridgeObjectRelease((const char *)0xE300000000000000LL);
    v12._countAndFlagsBits = 0x4C4152554C505FLL;
    v12._object = (void *)0xE700000000000000LL;
    String.append(_:)(v12);
    swift_bridgeObjectRelease((const char *)inited);
    if ((a2 & 1) != 0)
    {
      v13._countAndFlagsBits = 0x4C4154495041435FLL;
      v13._object = (void *)0xEC00000044455A49LL;
      String.append(_:)(v13);
    }

    v14._countAndFlagsBits = 0x545845545FLL;
    v14._object = (void *)0xE500000000000000LL;
    String.append(_:)(v14);
    swift_setDeallocating(inited);
    uint64_t v15 = *(void *)(inited + 16);
    uint64_t v16 = sub_100183098(&qword_100646EA0);
    swift_arrayDestroy(v8, v15, v16);
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
    id v19 = (id)SFLocalizedStringForKey(v17, v18);

    if (v19)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      int v22 = v21;

      uint64_t v23 = sub_100183098(&qword_1006483E0);
      uint64_t v24 = swift_allocObject(v23, 72LL, 7LL);
      *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
      *(void *)(v24 + 56) = &type metadata for Int;
      *(void *)(v24 + 64) = &protocol witness table for Int;
      *(void *)(v24 + 32) = v5;
      static String.localizedStringWithFormat(_:_:)(v20, v22, v24);
      *(void *)&double v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
      swift_bridgeObjectRelease((const char *)v24, v25);
    }

    else
    {
      __break(1u);
    }
  }

void sub_10035124C()
{
  uint64_t v1 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener;
  if (!*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener])
  {
    uint64_t v2 = v0;
    if (qword_1006441F8 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v3, (uint64_t)qword_1006507E0);
    uint64_t v4 = v0;
    unint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v8 = swift_slowAlloc(32LL, -1LL);
      *(_DWORD *)uint64_t v7 = 136315138;
      uint64_t v26 = v8;
      uint64_t v9 = type metadata accessor for UUID(0LL);
      uint64_t v10 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter(v9, v10);
      unint64_t v13 = v12;
      uint64_t v25 = sub_10018CDB4(v11, v12, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v7 + 4, v7 + 12);

      swift_bridgeObjectRelease(v13);
      _os_log_impl( (void *)&_mh_execute_header,  v5,  v6,  "Starting AirDrop Near Field Server for transaction %s",  v7,  0xCu);
      swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v8, -1LL, -1LL);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    else
    {
    }

    uint64_t v14 = sub_100417F18(*(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_localIdentity]);
    uint64_t v15 = (nw_parameters *)NWParameters.nw.getter();
    nw_listener_t v16 = nw_listener_create(v15);
    swift_unknownObjectRelease(v15);
    if (v16)
    {
      type metadata accessor for NWListener(0LL);
      uint64_t v17 = swift_unknownObjectRetain(v16);
      uint64_t v18 = NWListener.__allocating_init(_:)(v17);
      uint64_t v19 = *(void *)&v2[v1];
      *(void *)&v2[v1] = v18;
      swift_retain(v18);
      swift_release(v19);
      uint64_t v20 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener];
      *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener] = v16;
      swift_unknownObjectRetain(v16);
      swift_unknownObjectRelease(v20);
      uint64_t v21 = swift_allocObject(&unk_1005DCC60, 32LL, 7LL);
      *(void *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
      *(void *)(v21 + 24) = v18;
      int v22 = v4;
      swift_retain(v18);
      NWListener.stateUpdateHandler.setter(sub_100353984, v21);
      uint64_t v23 = swift_allocObject(&unk_1005DCC88, 24LL, 7LL);
      *(void *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
      uint64_t v24 = v22;
      NWListener.newConnectionHandler.setter(sub_1003539B0, v23);
      NWListener.start(queue:)(*(void *)&v24[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_queue]);
      swift_release(v14);
      swift_unknownObjectRelease(v16);
      swift_release(v18);
    }

    else
    {
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000033LL,  0x800000010050C130LL,  "DaemoniOSLibrary/SDAirDropNearFieldServer.swift",  47LL,  2LL,  61LL,  0);
      __break(1u);
    }
  }

void sub_10035159C()
{
}

void sub_1003515B0()
{
}

void sub_1003515C4(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for NWConnection.State(0LL);
  uint64_t v42 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v39 - v9;
  if (qword_100644050 != -1) {
    swift_once(&qword_100644050, sub_100249C84);
  }
  uint64_t v11 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v11, (uint64_t)qword_100649E20);
  unint64_t v12 = v2;
  unint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v41 = (unint64_t)a2;
    uint64_t v15 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    v44[0] = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    unint64_t v17 = 0xEE00726576726553LL;
    uint64_t v18 = 0x2072756F6A6E6F42LL;
    if (v12[*a1] != 1)
    {
      uint64_t v18 = 0x656946207261654ELL;
      unint64_t v17 = 0xEA0000000000646CLL;
    }

    if (v12[*a1]) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0xD00000000000001ALL;
    }
    if (v12[*a1]) {
      uint64_t v20 = (const char *)v17;
    }
    else {
      uint64_t v20 = (const char *)0x80000001005069C0LL;
    }
    uint64_t v43 = (const char *)sub_10018CDB4(v19, (unint64_t)v20, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, v44, v15 + 4, v15 + 12);

    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Cleaning up connections for %s", v15, 0xCu);
    swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);

    a2 = (void *)v41;
  }

  else
  {
  }

  uint64_t v21 = (const char **)&v12[*a2];
  *(void *)&double v22 = swift_beginAccess(v21, v44, 1LL, 0LL).n128_u64[0];
  uint64_t v23 = (uint64_t)*v21;
  uint64_t v43 = (const char *)_swiftEmptyArrayStorage;
  if (!((unint64_t)v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain((const char *)v23, v22);
    if (v24) {
      goto LABEL_16;
    }
LABEL_30:
    unint64_t v35 = swift_bridgeObjectRelease((const char *)v23).n128_u64[0];
    uint64_t v36 = (const char *)_swiftEmptyArrayStorage;
LABEL_31:
    char v38 = *v21;
    const char *v21 = v36;
    swift_bridgeObjectRelease(v38, *(double *)&v35);
    return;
  }

  if (v23 < 0) {
    uint64_t v37 = v23;
  }
  else {
    uint64_t v37 = v23 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v23, v22);
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v37);
  if (!v24) {
    goto LABEL_30;
  }
LABEL_16:
  if (v24 >= 1)
  {
    uint64_t v25 = 0LL;
    uint64_t v40 = v21;
    unint64_t v41 = v23 & 0xC000000000000001LL;
    uint64_t v26 = enum case for NWConnection.State.cancelled(_:);
    __n128 v27 = (const char *)v23;
    do
    {
      if (v41)
      {
        uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
      }

      else
      {
        uint64_t v30 = *(void *)(v23 + 8 * v25 + 32);
        swift_retain(v30);
      }

      NWConnection.state.getter();
      uint64_t v31 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v8, v26, v5);
      uint64_t v32 = sub_100183F14( &qword_100650890,  (uint64_t (*)(uint64_t))&type metadata accessor for NWConnection.State,  (uint64_t)&protocol conformance descriptor for NWConnection.State);
      char v33 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v5, v32);
      uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
      v34(v8, v5);
      v34(v10, v5);
      if ((v33 & 1) != 0)
      {
        swift_release(v30);
      }

      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v28 = *((void *)v43 + 2);
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v28);
        uint64_t v29 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v30);
        specialized ContiguousArray._endMutation()(v29);
      }

      ++v25;
      uint64_t v23 = (uint64_t)v27;
    }

    while (v24 != v25);
    unint64_t v35 = swift_bridgeObjectRelease(v27).n128_u64[0];
    uint64_t v36 = v43;
    uint64_t v21 = v40;
    goto LABEL_31;
  }

  __break(1u);
}

uint64_t sub_1003519E0()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006507E0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006507E0);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100351A70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NWListener.State(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  uint64_t v14 = swift_allocObject(&unk_1005DCCB0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v14 + 16, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v15 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (v15 + 40) & ~v15;
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v18 = (char *)swift_allocObject(&unk_1005DCD28, v17 + 8, v15 | 7);
  *((void *)v18 + 2) = 0LL;
  *((void *)v18 + 3) = 0LL;
  *((void *)v18 + 4) = v14;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v18[v16], v9, v6);
  *(void *)&v18[v17] = a3;
  swift_retain(a3);
  uint64_t v19 = sub_1001B3808((uint64_t)v12, (uint64_t)&unk_1006508A0, (uint64_t)v18);
  return swift_release(v19);
}

uint64_t sub_100351BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  return swift_task_switch(sub_100351C10, 0LL, 0LL);
}

uint64_t sub_100351C10()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    uint64_t v4 = (void *)swift_task_alloc(dword_1006508AC);
    *(void *)(v0 + 80) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100351CAC;
    return sub_100351D04(*(void *)(v0 + 56), *(void *)(v0 + 64));
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100351CAC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 72LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 80LL));

  return swift_task_switch(sub_10023413C, 0LL, 0LL);
}

uint64_t sub_100351D04(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  void v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for NWError(0LL);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  unint64_t v6 = (*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[12] = swift_task_alloc(v6);
  v3[13] = swift_task_alloc(v6);
  v3[14] = swift_task_alloc(v6);
  v3[15] = swift_task_alloc(v6);
  uint64_t v7 = type metadata accessor for NWListener.State(0LL);
  v3[16] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[17] = v8;
  v3[18] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v9 = static AirDropActor.shared;
  v3[19] = static AirDropActor.shared;
  return swift_task_switch(sub_100351DEC, v9, 0LL);
}

uint64_t sub_100351DEC()
{
  BOOL v89 = (uint64_t *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 128);
  (*(void (**)(uint64_t, void, uint64_t))(v1 + 16))(v2, *(void *)(v0 + 56), v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 88))(v2, v3);
  if (v4 == enum case for NWListener.State.waiting(_:))
  {
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 88);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 136) + 96LL))(v5, *(void *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    if (qword_1006441F8 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v13 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v13, (uint64_t)qword_1006507E0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    uint64_t v15 = v14(v10, v9, v12);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 112);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v20 = *(void *)(v0 + 88);
    if (v18)
    {
      uint64_t v88 = *(void *)(v0 + 88);
      double v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v86 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)double v22 = 138412290;
      uint64_t v23 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v24 = swift_allocError(v21, v23, 0LL, 0LL);
      v14(v25, v19, v21);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(v24);
      *BOOL v89 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v89, v0 + 56, v22 + 4, v22 + 12);
      uint64_t *v86 = v26;
      __n128 v27 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v27(v19, v21);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "AirDrop Near Field server waiting with error %@", v22, 0xCu);
      uint64_t v28 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v86, 1LL, v28);
      swift_slowDealloc(v86, -1LL, -1LL);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    else
    {

      __n128 v27 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v27(v19, v21);
    }

    v27(*(void *)(v0 + 120), *(void *)(v0 + 80));
    goto LABEL_41;
  }

  if (v4 == enum case for NWListener.State.failed(_:))
  {
    uint64_t v29 = *(void *)(v0 + 144);
    uint64_t v30 = *(void *)(v0 + 104);
    uint64_t v31 = *(void *)(v0 + 80);
    uint64_t v32 = *(void *)(v0 + 88);
    (*(void (**)(uint64_t, void))(*(void *)(v0 + 136) + 96LL))(v29, *(void *)(v0 + 128));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v30, v29, v31);
    if (qword_1006441F8 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v33 = *(void *)(v0 + 96);
    uint64_t v34 = *(void *)(v0 + 104);
    uint64_t v35 = *(void *)(v0 + 80);
    uint64_t v36 = *(void *)(v0 + 88);
    uint64_t v37 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v37, (uint64_t)qword_1006507E0);
    char v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    uint64_t v39 = v38(v33, v34, v35);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.error.getter(v40);
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v44 = *(void *)(v0 + 88);
    uint64_t v43 = *(void *)(v0 + 96);
    uint64_t v45 = *(void *)(v0 + 80);
    if (v42)
    {
      id v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      buf = (uint8_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)id v46 = 138412290;
      uint64_t v47 = sub_100183F14( &qword_100647680,  (uint64_t (*)(uint64_t))&type metadata accessor for NWError,  (uint64_t)&protocol conformance descriptor for NWError);
      uint64_t v48 = swift_allocError(v45, v47, 0LL, 0LL);
      v38(v49, v43, v45);
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError(v48);
      *(void *)(v0 + 40) = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v89, v46 + 4, v46 + 12);
      *(void *)buf = v50;
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(v43, v45);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "AirDrop Near Field server failed with error %@", v46, 0xCu);
      uint64_t v52 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(buf, 1LL, v52);
      swift_slowDealloc(buf, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    else
    {
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v51(*(void *)(v0 + 96), *(void *)(v0 + 80));
    }

    *(void *)(v0 + 168) = v51;
    uint64_t v59 = *(void *)(v0 + 72);
    NWListener.cancel()();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong( v59 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate,  v60);
    *(void *)(v0 + 176) = Strong;
    if (Strong)
    {
      double v62 = (void *)swift_task_alloc(dword_1006497E4);
      *(void *)(v0 + 184) = v62;
      void *v62 = v0;
      v62[1] = sub_100290B20;
      return sub_10022C4CC(0, *(void *)(v0 + 104));
    }

    (*(void (**)(void, void))(v0 + 168))(*(void *)(v0 + 104), *(void *)(v0 + 80));
    goto LABEL_41;
  }

  if (v4 == enum case for NWListener.State.setup(_:))
  {
    if (qword_1006441F8 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v53 = type metadata accessor for Logger(0LL);
    uint64_t v54 = sub_100186DE4(v53, (uint64_t)qword_1006507E0);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v54);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56)) {
      goto LABEL_35;
    }
    uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v57 = 0;
    uint64_t v58 = "AirDrop Near Field server setting up";
LABEL_34:
    _os_log_impl((void *)&_mh_execute_header, v55, v56, v58, v57, 2u);
    swift_slowDealloc(v57, -1LL, -1LL);
LABEL_35:

    goto LABEL_41;
  }

  if (v4 != enum case for NWListener.State.ready(_:))
  {
    if (v4 != enum case for NWListener.State.cancelled(_:))
    {
      if (qword_1006441F8 != -1) {
        swift_once(&qword_1006441F8, sub_1003519E0);
      }
      uint64_t v74 = type metadata accessor for Logger(0LL);
      uint64_t v75 = sub_100186DE4(v74, (uint64_t)qword_1006507E0);
      char v76 = (os_log_s *)Logger.logObject.getter(v75);
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        char v78 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)char v78 = 0;
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Unknown AirDrop Near Field server state", v78, 2u);
        swift_slowDealloc(v78, -1LL, -1LL);
      }

      uint64_t v80 = *(void *)(v0 + 136);
      uint64_t v79 = *(void *)(v0 + 144);
      uint64_t v81 = *(void *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v79, v81);
      goto LABEL_41;
    }

    if (qword_1006441F8 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v72 = type metadata accessor for Logger(0LL);
    uint64_t v73 = sub_100186DE4(v72, (uint64_t)qword_1006507E0);
    uint64_t v55 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v56 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v55, v56)) {
      goto LABEL_35;
    }
    uint64_t v57 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v57 = 0;
    uint64_t v58 = "AirDrop Near Field server stopped";
    goto LABEL_34;
  }

  if (qword_1006441F8 != -1) {
    swift_once(&qword_1006441F8, sub_1003519E0);
  }
  uint64_t v64 = type metadata accessor for Logger(0LL);
  uint64_t v65 = sub_100186DE4(v64, (uint64_t)qword_1006507E0);
  int v66 = (os_log_s *)Logger.logObject.getter(v65);
  os_log_type_t v67 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "AirDrop Near Field server ready", v68, 2u);
    swift_slowDealloc(v68, -1LL, -1LL);
  }

  uint64_t v69 = *(void *)(v0 + 72);

  sub_100352CF8();
  uint64_t v71 = swift_unknownObjectWeakLoadStrong( v69 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate,  v70);
  *(void *)(v0 + 160) = v71;
  if (v71) {
    return swift_task_switch(sub_100290A44, static AirDropActor.shared, 0LL);
  }
LABEL_41:
  uint64_t v82 = *(void *)(v0 + 112);
  uint64_t v83 = *(void *)(v0 + 120);
  uint64_t v85 = *(void *)(v0 + 96);
  uint64_t v84 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 144));
  swift_task_dealloc(v83);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035267C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = swift_allocObject(&unk_1005DCCB0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v8 + 16, a2);
  uint64_t v9 = (void *)swift_allocObject(&unk_1005DCCD8, 48LL, 7LL);
  v9[2] = 0LL;
  v9[3] = 0LL;
  v9[4] = v8;
  v9[5] = a1;
  swift_retain(a1);
  uint64_t v10 = sub_1001B3808((uint64_t)v6, (uint64_t)&unk_100650868, (uint64_t)v9);
  return swift_release(v10);
}

uint64_t sub_100352768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch(sub_100352784, 0LL, 0LL);
}

uint64_t sub_100352784()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v1, v2);
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    if (qword_100643F28 != -1) {
      swift_once(&qword_100643F28, sub_100205C24);
    }
    return swift_task_switch(sub_100352834, static AirDropActor.shared, 0LL);
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100352834()
{
  uint64_t v1 = *(void **)(v0 + 64);
  sub_100352874(*(void *)(v0 + 56));

  return swift_task_switch(sub_100239408, 0LL, 0LL);
}

uint64_t sub_100352874(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v8 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v8);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  sub_1003515C4( &OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType,  &OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections);
  uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections);
  swift_beginAccess(v11, v28, 33LL, 0LL);
  uint64_t v12 = swift_retain(a1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  unint64_t v14 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v13 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v14 >= v13 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1LL);
  }
  uint64_t v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, a1);
  specialized Array._endMutation()(v15);
  swift_endAccess(v28);
  uint64_t v16 = v2 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_transactionID;
  uint64_t v17 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v10, 1LL, 1LL, v17);
  uint64_t v18 = swift_allocObject(&unk_1005DCCB0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v18 + 16, v2);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8], v16, v4);
  uint64_t v19 = qword_100643F28;
  swift_retain(a1);
  swift_retain(v18);
  if (v19 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v20 = static AirDropActor.shared;
  uint64_t v21 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v22 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = (v22 + 48) & ~v22;
  uint64_t v24 = (char *)swift_allocObject(&unk_1005DCD00, v23 + v6, v22 | 7);
  *((void *)v24 + 2) = v20;
  *((void *)v24 + 3) = v21;
  *((void *)v24 + 4) = a1;
  *((void *)v24 + 5) = v18;
  (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 32))(&v24[v23], v7, v4);
  swift_retain(v20);
  swift_release(v18);
  uint64_t v25 = sub_1001B37E8((uint64_t)v10, (uint64_t)&unk_100650880, (uint64_t)v24);
  return swift_release(v25);
}

uint64_t sub_100352AE4()
{
  if (qword_1006441F8 != -1) {
    swift_once(&qword_1006441F8, sub_1003519E0);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v1, (uint64_t)qword_1006507E0);
  uint64_t v2 = v0;
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v17 = v6;
    uint64_t v7 = type metadata accessor for UUID(0LL);
    uint64_t v8 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter(v7, v8);
    uint64_t v11 = (const char *)v10;
    uint64_t v16 = sub_10018CDB4(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stopping AirDrop Near Field Server for transaction %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {
  }

  sub_1002397BC();
  uint64_t v12 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener;
  uint64_t v13 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener];
  if (v13)
  {
    swift_retain(*(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener]);
    NWListener.cancel()();
    swift_release(v13);
    uint64_t v14 = *(void *)&v2[v12];
  }

  else
  {
    uint64_t v14 = 0LL;
  }

  *(void *)&v2[v12] = 0LL;
  return swift_release(v14);
}

void sub_100352CF8()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener];
  if (v1)
  {
    uint64_t v2 = qword_1006441F8;
    swift_unknownObjectRetain(*(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener]);
    if (v2 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v3, (uint64_t)qword_1006507E0);
    os_log_type_t v4 = v0;
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v8 = (Class *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v7 = 138412290;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      Class v29 = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v7 + 4, v7 + 12);
      *uint64_t v8 = isa;

      _os_log_impl( (void *)&_mh_execute_header,  v5,  v6,  "Setting Near Field server advertised remote public keys to %@",  v7,  0xCu);
      uint64_t v10 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v8, 1LL, v10);
      swift_slowDealloc(v8, -1LL, -1LL);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    else
    {
    }

    uint64_t v16 = UUID.uuidString.getter(v11);
    uint64_t v18 = v17;
    uint64_t v19 = String.utf8CString.getter(v16, v17);
    swift_bridgeObjectRelease(v18);
    nw_endpoint_t bonjour_service = nw_endpoint_create_bonjour_service((const char *)(v19 + 32), "_asquic._udp", "local");
    swift_release(v19);
    uint64_t v21 = sub_100183098(&qword_1006508B0);
    uint64_t v22 = swift_allocObject(v21, 48LL, 7LL);
    *(_OWORD *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
    uint64_t v23 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_remotePublicKey];
    unint64_t v24 = *(void *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_remotePublicKey + 8];
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v24;
    sub_10019BA8C(v23, v24);
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    __n128 v26 = swift_bridgeObjectRelease((const char *)v22);
    nw_endpoint_set_public_keys(bonjour_service, v25, v26);

    uint64_t v27 = nw_array_create();
    sub_1000EDF28((uint64_t)bonjour_service, v27);
    nw_listener_set_advertise_endpoints(v1, v27);
    swift_unknownObjectRelease(v1);
    swift_unknownObjectRelease(bonjour_service);
    swift_unknownObjectRelease(v27);
  }

  else
  {
    if (qword_1006441F8 != -1) {
      swift_once(&qword_1006441F8, sub_1003519E0);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_1006507E0);
    oslog = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v14 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  oslog,  v14,  "No listener available to add advertised endpoints",  v15,  2u);
      swift_slowDealloc(v15, -1LL, -1LL);
    }
  }

uint64_t sub_100353054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[8] = a5;
  v6[9] = a6;
  void v6[7] = a4;
  uint64_t v7 = type metadata accessor for SDAirDropServerConnection(0LL);
  v6[10] = v7;
  v6[11] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1003530E4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1003530E4()
{
  uint64_t v1 = v0 + 16;
  if (qword_1006441F8 != -1) {
    swift_once(&qword_1006441F8, sub_1003519E0);
  }
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v3, (uint64_t)qword_1006507E0);
  uint64_t v4 = swift_retain_n(v2, 2LL);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 56);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v31 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    *(void *)(v0 + 40) = v8;
    uint64_t v11 = type metadata accessor for NWConnection(0LL);
    swift_retain(v8);
    uint64_t v12 = String.init<A>(describing:)(v0 + 40, v11);
    os_log_type_t v14 = (const char *)v13;
    *(void *)(v0 + 48) = sub_10018CDB4(v12, v13, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    swift_release_n(v8, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "AirDrop Near Field server received connection: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    uint64_t v15 = v9;
    uint64_t v1 = v0 + 16;
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  else
  {
    swift_release_n(*(void *)(v0 + 56), 2LL);
  }

  uint64_t v16 = *(void *)(v0 + 64) + 16LL;
  swift_beginAccess(v16, v1, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v16, v17);
  if (Strong
    && (uint64_t v20 = (void *)Strong,
        uint64_t v21 = swift_unknownObjectWeakLoadStrong( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate,  v19),  *(void *)(v0 + 96) = v21,  v20,  v21))
  {
    uint64_t v23 = *(void *)(v0 + 80);
    uint64_t v22 = *(void **)(v0 + 88);
    uint64_t v24 = *(void *)(v0 + 72);
    uint64_t v25 = *(void *)(v0 + 56);
    __n128 v26 = (char *)v22 + *(int *)(sub_100183098(&qword_100649710) + 48);
    void *v22 = v25;
    uint64_t v27 = type metadata accessor for UUID(0LL);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16LL))(v26, v24, v27);
    swift_storeEnumTagMultiPayload(v22, v23, 2LL);
    uint64_t v28 = dword_1006496FC;
    swift_retain(v25);
    Class v29 = (void *)swift_task_alloc(v28);
    *(void *)(v0 + 104) = v29;
    void *v29 = v0;
    v29[1] = sub_1003533C8;
    return sub_100228B74(*(void *)(v0 + 88));
  }

  else
  {
    swift_task_dealloc(*(void *)(v0 + 88));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1003533C8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 88);
  uint64_t v5 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 104));
  swift_unknownObjectRelease(v2);
  sub_10023A234(v3);
  swift_task_dealloc(*(void *)(v1 + 88));
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_100353530()
{
  return type metadata accessor for SDAirDropNearFieldServer(0LL);
}

uint64_t type metadata accessor for SDAirDropNearFieldServer(uint64_t a1)
{
  uint64_t result = qword_100650850;
  if (!qword_100650850) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropNearFieldServer);
  }
  return result;
}

uint64_t sub_100353574(uint64_t a1)
{
  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_1004D75E8;
  void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64LL;
    os_log_type_t v6 = &unk_1004D7600;
    BOOL v7 = &unk_1004D7618;
    uint64_t v8 = v5;
    uint64_t v9 = &unk_1004D7630;
    uint64_t v10 = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 10LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100353630()
{
  return swift_retain(*(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener));
}

uint64_t sub_100353640()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType);
}

id sub_100353654( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v45 = a6;
  unint64_t v46 = a7;
  uint64_t v43 = a3;
  uint64_t v44 = a5;
  uint64_t v47 = a4;
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v7);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v12);
  os_log_type_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listener] = 0LL;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_networkListener] = 0LL;
  v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_serverType] = 2;
  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_connections] = &_swiftEmptyArrayStorage;
  uint64_t v18 = &v8[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_delegate];
  *((void *)v18 + 1) = 0LL;
  swift_unknownObjectWeakInit(v18, 0LL);
  uint64_t v38 = OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_queue;
  sub_100237A04();
  uint64_t v19 = v8;
  static DispatchQoS.default.getter();
  uint64_t v50 = &_swiftEmptyArrayStorage;
  uint64_t v20 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v21 = sub_100183098(&qword_100650E60);
  unint64_t v22 = sub_1001830D8();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v21, v22, v12, v20);
  (*(void (**)(char *, void, uint64_t))(v39 + 104))( v11,  enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:),  v40);
  uint64_t v23 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000039LL,  0x800000010050C170LL,  v17,  v14,  v11,  0LL);
  *(void *)&v8[v38] = v23;
  uint64_t v24 = v42;
  *((void *)v18 + 1) = v41;
  swift_unknownObjectWeakAssign(v18, v24);
  uint64_t v25 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_transactionID];
  uint64_t v26 = type metadata accessor for UUID(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v29 = v43;
  v28(v25, v43, v26);
  uint64_t v31 = v44;
  uint64_t v30 = v45;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_localIdentity] = v44;
  uint64_t v32 = (uint64_t *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_remotePublicKey];
  unint64_t v33 = v46;
  uint64_t v34 = v47;
  *uint64_t v32 = v30;
  v32[1] = v33;
  v28(&v19[OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropNearFieldServer_listenerUUID], v34, v26);
  swift_unknownObjectRetain(v31);
  sub_10019BA8C(v30, v33);

  v49.receiver = v19;
  v49.super_class = ObjectType;
  id v35 = objc_msgSendSuper2(&v49, "init");
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v36(v34, v26);
  v36(v29, v26);
  return v35;
}

uint64_t sub_100353958()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100353984(uint64_t a1)
{
  return sub_100351A70(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10035398C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1003539B0(uint64_t a1)
{
  return sub_10035267C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003539B8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1003539DC()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100353A10(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc(dword_100650864);
  __int128 v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_100195708;
  *(_OWORD *)(v4 + 48) = v5;
  *(void *)(v4 + 40) = a1;
  return swift_task_switch(sub_100352784, 0LL, 0LL);
}

uint64_t sub_100353A78()
{
  uint64_t v1 = type metadata accessor for UUID(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease(*((void *)v0 + 2));
  swift_release(*((void *)v0 + 4));
  swift_release(*((void *)v0 + 5));
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v4], v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100353AFC(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  uint64_t v10 = (void *)swift_task_alloc(dword_100650874);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1001943E8;
  return sub_100353054(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100353B94()
{
  uint64_t v1 = type metadata accessor for NWListener.State(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(void *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100353C2C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for NWListener.State(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v9 = (void *)swift_task_alloc(dword_10065089C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100195708;
  v9[7] = v7;
  v9[8] = v8;
  v9[5] = a1;
  v9[6] = v6;
  return swift_task_switch(sub_100351C10, 0LL, 0LL);
}

Swift::Int sub_100353CCC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  unint64_t v6 = v0[5];
  Hasher.init(_seed:)(v8);
  String.hash(into:)(v8, v1, v2);
  String.hash(into:)(v8, v3, v4);
  if (v6 >> 60 == 15)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    Hasher._combine(_:)(1u);
    sub_10019BA8C(v5, v6);
    Data.hash(into:)(v8, v5, v6);
    sub_100189B0C(v5, v6);
  }

  return Hasher._finalize()();
}

void sub_100353D90(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  unint64_t v6 = v1[5];
  String.hash(into:)(a1, *v1, v1[1]);
  String.hash(into:)(a1, v3, v4);
  if (v6 >> 60 == 15)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    Hasher._combine(_:)(1u);
    sub_10019BA8C(v5, v6);
    Data.hash(into:)(a1, v5, v6);
    sub_100189B0C(v5, v6);
  }

Swift::Int sub_100353E38()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  unint64_t v6 = v0[5];
  Hasher.init(_seed:)(v8);
  String.hash(into:)(v8, v1, v2);
  String.hash(into:)(v8, v3, v4);
  if (v6 >> 60 == 15)
  {
    Hasher._combine(_:)(0);
  }

  else
  {
    Hasher._combine(_:)(1u);
    sub_10019BA8C(v5, v6);
    Data.hash(into:)(v8, v5, v6);
    sub_100189B0C(v5, v6);
  }

  return Hasher._finalize()();
}

BOOL sub_100353EF8(_OWORD *a1, __int128 *a2)
{
  __int128 v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  __int128 v3 = *a2;
  __int128 v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  __int128 v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100353F3C((uint64_t *)v7, v8);
}

BOOL sub_100353F3C(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a2[1];
  BOOL v7 = v4 == *a2 && v5 == v6;
  if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0LL), result = 0LL, (v8 & 1) != 0))
  {
    uint64_t v10 = a1[2];
    uint64_t v11 = a1[3];
    uint64_t v12 = a2[2];
    uint64_t v13 = a2[3];
    BOOL v14 = v10 == v12 && v11 == v13;
    if (v14
      || (char v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0LL), result = 0LL, (v15 & 1) != 0))
    {
      uint64_t v17 = a1[4];
      unint64_t v16 = a1[5];
      uint64_t v19 = a2[4];
      unint64_t v18 = a2[5];
      if (v16 >> 60 == 15)
      {
        if (v18 >> 60 == 15) {
          return 1LL;
        }
      }

      else if (v18 >> 60 != 15)
      {
        sub_1001A4C04(v17, v16);
        sub_1001A4C04(v19, v18);
        sub_100213838(v17, v16);
        char v21 = v20;
        sub_100189B0C(v19, v18);
        sub_100189B0C(v17, v16);
        return (v21 & 1) != 0;
      }

      sub_1001A4C04(v17, v16);
      sub_1001A4C04(v19, v18);
      sub_100189B0C(v17, v16);
      sub_100189B0C(v19, v18);
      return 0LL;
    }
  }

  return result;
}

void _s17ClassroomEndpointVwxx(uint64_t a1)
{
  *(void *)&double v2 = swift_bridgeObjectRelease((const char *)*(void *)(a1 + 8)).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(a1 + 24), v2);
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >> 60 != 15) {
    sub_100189B20(*(void *)(a1 + 32), v3);
  }
}

uint64_t _s17ClassroomEndpointVwcp(uint64_t a1, void *a2)
{
  unint64_t v3 = (const char *)a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = (const char *)a2[3];
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2 + 4;
  unint64_t v6 = a2[5];
  *(void *)&double v7 = swift_bridgeObjectRetain(v3).n128_u64[0];
  swift_bridgeObjectRetain(v4, v7);
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v5;
  }

  else
  {
    uint64_t v8 = *v5;
    sub_10019BA8C(*v5, v6);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v6;
  }

  return a1;
}

void *_s17ClassroomEndpointVwca(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (const char *)a2[1];
  uint64_t v5 = (const char *)a1[1];
  a1[1] = v4;
  *(void *)&double v6 = swift_bridgeObjectRetain(v4).n128_u64[0];
  *(void *)&double v7 = swift_bridgeObjectRelease(v5, v6).n128_u64[0];
  a1[2] = a2[2];
  uint64_t v8 = (const char *)a2[3];
  uint64_t v9 = (const char *)a1[3];
  a1[3] = v8;
  *(void *)&double v10 = swift_bridgeObjectRetain(v8, v7).n128_u64[0];
  swift_bridgeObjectRelease(v9, v10);
  uint64_t v11 = a2 + 4;
  unint64_t v12 = a2[5];
  if (a1[5] >> 60 != 15LL)
  {
    if (v12 >> 60 != 15)
    {
      uint64_t v14 = *v11;
      sub_10019BA8C(*v11, v12);
      uint64_t v15 = a1[4];
      unint64_t v16 = a1[5];
      a1[4] = v14;
      a1[5] = v12;
      sub_100189B20(v15, v16);
      return a1;
    }

    sub_10019DC8C((uint64_t)(a1 + 4));
    goto LABEL_6;
  }

  if (v12 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
    return a1;
  }

  uint64_t v13 = *v11;
  sub_10019BA8C(*v11, v12);
  a1[4] = v13;
  a1[5] = v12;
  return a1;
}

void *_s17ClassroomEndpointVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = (const char *)a1[1];
  *a1 = *a2;
  a1[1] = v4;
  *(void *)&double v6 = swift_bridgeObjectRelease(v5).n128_u64[0];
  uint64_t v7 = a2[3];
  uint64_t v8 = (const char *)a1[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease(v8, v6);
  uint64_t v9 = a2 + 4;
  unint64_t v10 = a1[5];
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = a2[5];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = a1[4];
      a1[4] = *v9;
      a1[5] = v11;
      sub_100189B20(v12, v10);
      return a1;
    }

    sub_10019DC8C((uint64_t)(a1 + 4));
  }

  *((_OWORD *)a1 + 2) = *(_OWORD *)v9;
  return a1;
}

ValueMetadata *_s17ClassroomEndpointVMa()
{
  return &_s17ClassroomEndpointVN;
}

unint64_t sub_1003542D8()
{
  unint64_t result = qword_1006508B8;
  if (!qword_1006508B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7684, &_s17ClassroomEndpointVN);
    atomic_store(result, (unint64_t *)&qword_1006508B8);
  }

  return result;
}

uint64_t sub_10035431C(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = a1 + 16;
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v4, 1LL, 1LL, v6);
  uint64_t v7 = swift_allocObject(&unk_1005DCF30, 24LL, 7LL);
  swift_beginAccess(v5, v16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v5);
  swift_weakInit(v7 + 16);
  swift_release(Strong);
  uint64_t v9 = qword_100643F28;
  swift_retain(v7);
  if (v9 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v10 = static AirDropActor.shared;
  uint64_t v11 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v12 = (void *)swift_allocObject(&unk_1005DCF58, 40LL, 7LL);
  v12[2] = v10;
  v12[3] = v11;
  v12[4] = v7;
  swift_retain(v10);
  swift_release(v7);
  uint64_t v13 = sub_1001B3808((uint64_t)v4, (uint64_t)&unk_100650CC8, (uint64_t)v12);
  return swift_release(v13);
}

uint64_t sub_1003544A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  void v4[6] = a4;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v5 = static AirDropActor.shared;
  void v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_100354510, v5, 0LL);
}

uint64_t sub_100354510()
{
  uint64_t v1 = *(void *)(v0 + 48) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    uint64_t v3 = (void *)swift_task_alloc(dword_100650CD4);
    *(void *)(v0 + 72) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003545A4;
    return sub_100354604();
  }

  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1003545A4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 56LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 72LL));
  swift_release(v1);
  return swift_task_switch(sub_100239408, v2, 0LL);
}

uint64_t sub_100354604()
{
  v1[3] = v0;
  uint64_t v2 = sub_100183098(&qword_10064B750);
  v1[4] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_100183098(&qword_1006451B0);
  v1[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[8] = v5;
  v1[9] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v1[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v1[11] = v7;
  v1[12] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v1[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v1[14] = v9;
  v1[15] = swift_task_alloc((*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v1[16] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v1[17] = v11;
  unint64_t v12 = (*(void *)(v11 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v1[18] = swift_task_alloc(v12);
  v1[19] = swift_task_alloc(v12);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v13 = static AirDropActor.shared;
  v1[20] = static AirDropActor.shared;
  return swift_task_switch(sub_100354750, v13, 0LL);
}

uint64_t sub_100354750()
{
  uint64_t v1 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v2 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  uint64_t v3 = swift_allocError(v1, v2, 0LL, 0LL);
  *(void *)(v0 + 168) = v3;
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104LL))( v4,  enum case for SFAirDropReceive.Failure.receiverCancelled(_:),  v1);
  uint64_t v5 = (void *)swift_task_alloc(dword_100654E5C);
  *(void *)(v0 + 176) = v5;
  void *v5 = v0;
  v5[1] = sub_100354814;
  return sub_100420620(v3);
}

uint64_t sub_100354814()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 160LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 176LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_100354874, v2, 0LL);
}

uint64_t sub_100354874(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 144);
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v4 = *(void *)(v1 + 128);
  uint64_t v5 = *(void *)(v1 + 136);
  CurrentValueSubject.value.getter(a1);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v1 + 120);
    uint64_t v75 = *(void *)(v1 + 136);
    uint64_t v76 = *(void *)(v1 + 128);
    uint64_t v10 = *(void *)(v1 + 104);
    uint64_t v72 = *(void *)(v1 + 112);
    uint64_t v73 = *(void *)(v1 + 144);
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v74 = swift_slowAlloc(32LL, -1LL);
    uint64_t v77 = v74;
    *(_DWORD *)uint64_t v11 = 136315138;
    SFAirDropReceive.Transfer.id.getter(v74);
    uint64_t v12 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter(v10, v12);
    uint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v9, v10);
    *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v13, (unint64_t)v15, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v11 + 4, v11 + 12);
    __n128 v16 = swift_bridgeObjectRelease(v15);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, __n128))(v75 + 8);
    v17(v73, v76, v16);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Receiver cancelled transfer %s", v11, 0xCu);
    swift_arrayDestroy(v74, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v74, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  else
  {
    uint64_t v20 = *(void *)(v1 + 136);
    uint64_t v19 = *(void *)(v1 + 144);
    uint64_t v21 = *(void *)(v1 + 128);

    uint64_t v17 = *(void (**)(uint64_t, uint64_t, __n128))(v20 + 8);
    uint64_t v18 = ((uint64_t (*)(uint64_t, uint64_t))v17)(v19, v21);
  }

  uint64_t v23 = *(void *)(v1 + 88);
  uint64_t v22 = *(void *)(v1 + 96);
  uint64_t v24 = *(void *)(v1 + 80);
  SFAirDropReceive.Transfer.state.getter(v18);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 88))(v22, v24);
  if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:)) {
    goto LABEL_9;
  }
  if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:))
  {
    uint64_t v26 = *(void *)(v1 + 152);
    uint64_t v27 = *(void *)(v1 + 128);
    uint64_t v28 = *(void *)(v1 + 96);
    uint64_t v30 = *(void *)(v1 + 40);
    uint64_t v29 = *(void *)(v1 + 48);
    uint64_t v31 = *(void *)(v1 + 32);
    (*(void (**)(uint64_t, void))(*(void *)(v1 + 88) + 96LL))(v28, *(void *)(v1 + 80));
    uint64_t v32 = &qword_10064B778;
LABEL_7:
    uint64_t v33 = sub_100183098(v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v29, v28 + *(int *)(v33 + 48), v31);
    SFAirDrop.PermissionRequest.cancel()();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    ((void (*)(uint64_t, uint64_t))v17)(v26, v27);
    uint64_t v34 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
LABEL_13:
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8LL))(v28, v34);
    goto LABEL_14;
  }

  if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitivePreviewIntervention(_:))
  {
LABEL_9:
    uint64_t v35 = *(void *)(v1 + 152);
    uint64_t v36 = *(void *)(v1 + 128);
    uint64_t v37 = *(void *)(v1 + 96);
    uint64_t v38 = *(void *)(v1 + 72);
    uint64_t v39 = *(void *)(v1 + 56);
    uint64_t v40 = *(void *)(v1 + 64);
    (*(void (**)(uint64_t, void))(*(void *)(v1 + 88) + 96LL))(v37, *(void *)(v1 + 80));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v38, v37, v39);
    SFAirDrop.PermissionRequest.cancel()();
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v38, v39);
    ((void (*)(uint64_t, uint64_t))v17)(v35, v36);
  }

  else
  {
    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentResponse(_:)
      || (_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForSensitiveContentIntervention(_:))
    {
      uint64_t v41 = *(void *)(v1 + 152);
      uint64_t v42 = *(void *)(v1 + 128);
      uint64_t v28 = *(void *)(v1 + 96);
      uint64_t v43 = *(void *)(v1 + 72);
      uint64_t v44 = *(void *)(v1 + 56);
      uint64_t v45 = *(void *)(v1 + 64);
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 88) + 96LL))(v28, *(void *)(v1 + 80));
      uint64_t v46 = sub_100183098(&qword_1006451C0);
      __n128 v47 = swift_bridgeObjectRelease((const char *)*(void *)(v28 + *(int *)(v46 + 48)));
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v45 + 32))(v43, v28 + *(int *)(v46 + 64), v44, v47);
      SFAirDrop.PermissionRequest.cancel()();
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
      ((void (*)(uint64_t, uint64_t))v17)(v41, v42);
      uint64_t v34 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
      goto LABEL_13;
    }

    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:)
      || (_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:))
    {
      uint64_t v54 = *(void *)(v1 + 152);
      uint64_t v55 = *(void *)(v1 + 128);
      uint64_t v56 = *(void *)(v1 + 96);
      uint64_t v57 = *(void *)(v1 + 72);
      uint64_t v58 = *(void *)(v1 + 56);
      uint64_t v59 = *(void *)(v1 + 64);
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 88) + 96LL))(v56, *(void *)(v1 + 80));
      uint64_t v60 = (int *)sub_100183098((uint64_t *)&unk_10064B760);
      *(void *)&double v61 = swift_bridgeObjectRelease((const char *)*(void *)(v56 + v60[12])).n128_u64[0];
      __n128 v62 = swift_bridgeObjectRelease((const char *)*(void *)(v56 + v60[16]), v61);
      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v59 + 32))(v57, v56 + v60[20], v58, v62);
      SFAirDrop.PermissionRequest.cancel()();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
      ((void (*)(uint64_t, uint64_t))v17)(v54, v55);
      uint64_t v63 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8LL))(v56, v63);
      goto LABEL_14;
    }

    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:))
    {
      uint64_t v26 = *(void *)(v1 + 152);
      uint64_t v27 = *(void *)(v1 + 128);
      uint64_t v28 = *(void *)(v1 + 96);
      uint64_t v29 = *(void *)(v1 + 72);
      uint64_t v31 = *(void *)(v1 + 56);
      uint64_t v30 = *(void *)(v1 + 64);
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 88) + 96LL))(v28, *(void *)(v1 + 80));
      uint64_t v32 = &qword_10064B758;
      goto LABEL_7;
    }

    if ((_DWORD)v25 == enum case for SFAirDropReceive.Transfer.State.waitingForContactShareBackResponse(_:))
    {
      uint64_t v26 = *(void *)(v1 + 152);
      uint64_t v27 = *(void *)(v1 + 128);
      uint64_t v28 = *(void *)(v1 + 96);
      uint64_t v30 = *(void *)(v1 + 40);
      uint64_t v29 = *(void *)(v1 + 48);
      uint64_t v31 = *(void *)(v1 + 32);
      (*(void (**)(uint64_t, void))(*(void *)(v1 + 88) + 96LL))(v28, *(void *)(v1 + 80));
      uint64_t v32 = &qword_10064B748;
      goto LABEL_7;
    }

    uint64_t v64 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v64, v65))
    {
      int v66 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v66 = 0;
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Nothing to cancel for transfer state", v66, 2u);
      swift_slowDealloc(v66, -1LL, -1LL);
    }

    uint64_t v67 = *(void *)(v1 + 152);
    uint64_t v68 = *(void *)(v1 + 128);
    uint64_t v70 = *(void *)(v1 + 88);
    uint64_t v69 = *(void *)(v1 + 96);
    uint64_t v71 = *(void *)(v1 + 80);

    ((void (*)(uint64_t, uint64_t))v17)(v67, v68);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
  }

uint64_t sub_100354EBC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_100183098(&qword_100650C70);
  v2[4] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v2[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[6] = v5;
  v2[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  v2[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[9] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[10] = swift_task_alloc(v8);
  v2[11] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AcceptContext(0LL);
  v2[12] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[13] = v10;
  uint64_t v11 = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v2[14] = v11;
  uint64_t v12 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v2[15] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v2[16] = v13;
  uint64_t v14 = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v2[17] = v14;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  v2[18] = static AirDropActor.shared;
  uint64_t v15 = (void *)swift_task_alloc(dword_100650C7C);
  v2[19] = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_10035502C;
  return sub_1003553E8(v14, v11);
}

uint64_t sub_10035502C()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 144LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 152LL);
  *(void *)(*(void *)v1 + 160LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v4 = sub_1003552C0;
  }
  else {
    uint64_t v4 = sub_100355090;
  }
  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_100355090()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 56);
  uint64_t v25 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v22 = *(void *)(v0 + 40);
  uint64_t v24 = *(void *)(v0 + 16);
  uint64_t v9 = v6 + *(int *)(sub_100183098(&qword_100646590) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v6, v2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, v19, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))( v6,  enum case for SFAirDropReceive.AskResponse.accept(_:),  v7);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v10(v8, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v8, 0LL, 1LL, v7);
  sub_10044EE60(v8, v21);
  sub_100187100(v8, &qword_100650C70);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v22);
  uint64_t v11 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v10)(v23, v6, v7);
  CurrentValueSubject.value.getter(v11);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v19, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v24, v23, v7);
  uint64_t v12 = _s6RunnerC19PreAcceptRunResultsVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v24 + *(int *)(v12 + 20), v21, v22);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 80);
  uint64_t v14 = *(void *)(v0 + 88);
  uint64_t v16 = *(void *)(v0 + 56);
  uint64_t v17 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003552C0()
{
  uint64_t v1 = (uint64_t **)swift_task_alloc(dword_100650C84);
  v0[21] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = (uint64_t *)sub_100355310;
  return sub_100359464(v0[2], v0[20]);
}

uint64_t sub_100355310()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 168LL));
  return swift_task_switch(sub_100355368, v1, 0LL);
}

uint64_t sub_100355368()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 136));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003553E8(uint64_t a1, uint64_t a2)
{
  v3[56] = a2;
  v3[57] = v2;
  v3[55] = a1;
  uint64_t v4 = sub_100183098(&qword_100646830);
  v3[58] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100646800);
  v3[59] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v3[60] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[61] = v7;
  v3[62] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v3[63] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[64] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[65] = swift_task_alloc(v10);
  v3[66] = swift_task_alloc(v10);
  v3[67] = swift_task_alloc(v10);
  v3[68] = swift_task_alloc(v10);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[69] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v3[70] = v12;
  unint64_t v13 = (*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[71] = swift_task_alloc(v13);
  v3[72] = swift_task_alloc(v13);
  v3[73] = swift_task_alloc(v13);
  v3[74] = swift_task_alloc(v13);
  v3[75] = swift_task_alloc(v13);
  uint64_t v14 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v3[76] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v3[77] = v15;
  v3[78] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v3[79] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v3[80] = v17;
  unint64_t v18 = (*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[81] = swift_task_alloc(v18);
  v3[82] = swift_task_alloc(v18);
  v3[83] = swift_task_alloc(v18);
  v3[84] = swift_task_alloc(v18);
  v3[85] = swift_task_alloc(v18);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v19 = static AirDropActor.shared;
  v3[86] = static AirDropActor.shared;
  return swift_task_switch(sub_1003555F8, v19, 0LL);
}

uint64_t sub_1003555F8(uint64_t a1)
{
  *(void *)(v1 + 696) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ask request START", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  v256 = (_BYTE *)(v1 + 908);
  uint64_t v5 = *(void *)(v1 + 456);

  unint64_t v6 = sub_10025F338();
  uint64_t v7 = (void *)static NSUserDefaults.airdrop.getter(v6);
  char v8 = SFAirDropUserDefaults.alwaysAutoAccept.getter();

  id v9 = [*(id *)(v5 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_deviceStatus) disableAutoAccept];
  int v229 = (int)v9;
  if ((v8 & 1) != 0)
  {
    char v251 = 1;
  }

  else
  {
    uint64_t v10 = *(void *)(v1 + 456)
        + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess(v10, v1 + 400, 0LL, 0LL);
    sub_10019A6C4(v10, v1 + 16);
    uint64_t v11 = *(void *)(v1 + 40);
    uint64_t v12 = *(void *)(v1 + 48);
    sub_10019A708((void *)(v1 + 16), v11);
    char v251 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    id v9 = (id)sub_10018709C((void *)(v1 + 16));
  }

  uint64_t v13 = *(void *)(v1 + 624);
  uint64_t v14 = *(void *)(v1 + 616);
  uint64_t v15 = *(void *)(v1 + 608);
  uint64_t v16 = *(void *)(v1 + 600);
  uint64_t v17 = *(void *)(v1 + 560);
  uint64_t v18 = *(void *)(v1 + 552);
  uint64_t v19 = *(void *)(v1 + 456);
  *(void *)(v1 + 704) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_askRequest;
  uint64_t v20 = SFAirDropReceive.AskRequest.type.getter(v9);
  char v244 = SFAirDrop.TransferType.isOnlyExchange.getter(v20);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
  *(void *)(v1 + 712) = v21;
  uint64_t v22 = v21(v13, v15);
  *(void *)(v1 + 720) = *(void *)(v19
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  uint64_t v23 = CurrentValueSubject.value.getter(v22);
  char v238 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v23);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  *(void *)(v1 + 728) = v24;
  uint64_t v25 = v18;
  uint64_t v26 = v24;
  v24(v16, v25);
  BOOL v27 = sub_10036F40C();
  BOOL v234 = v27;
  uint64_t v28 = SFAirDropReceive.AskRequest.type.getter(v27);
  char v29 = SFAirDrop.TransferType.isCustom.getter(v28);
  int v30 = v29 & 1;
  _BYTE *v256 = v29 & 1;
  uint64_t v31 = v21(v13, v15);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v34 = 67110144;
    *(_DWORD *)(v1 + 884) = v251 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 884, v1 + 888, v34 + 4, v34 + 8);
    *(_WORD *)(v34 + 8) = 1024;
    *(_DWORD *)(v1 + 888) = v244 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 888, v1 + 892, v34 + 10, v34 + 14);
    *(_WORD *)(v34 + 14) = 1024;
    *(_DWORD *)(v1 + 892) = v238 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 892, v1 + 896, v34 + 16, v34 + 20);
    *(_WORD *)(v34 + 20) = 1024;
    *(_DWORD *)(v1 + 896) = v234;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 896, v1 + 900, v34 + 22, v34 + 26);
    *(_WORD *)(v34 + 26) = 1024;
    *(_DWORD *)(v1 + 900) = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 900, v1 + 904, v34 + 28, v34 + 32);
    _os_log_impl( (void *)&_mh_execute_header,  v32,  v33,  "contentCanAutoAccept: %{BOOL}d isOnlyExchange: %{BOOL}d isPreviewSensitive: %{BOOL}d isDeviceLocked: %{BOOL}d isCustom: %{BOOL}d",  (uint8_t *)v34,  0x20u);
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  uint64_t v35 = *(void *)(v1 + 592);
  uint64_t v36 = *(void *)(v1 + 552);
  uint64_t v37 = *(void *)(v1 + 544);

  uint64_t v39 = CurrentValueSubject.value.getter(v38);
  SFAirDropReceive.Transfer.askRequest.getter(v39);
  v26(v35, v36);
  sub_10036B048(v37);
  uint64_t type = v1 + 96;
  uint64_t v50 = *(void *)(v1 + 584);
  uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t))v26;
  uint64_t v52 = *(void *)(v1 + 552);
  uint64_t v53 = *(void *)(v1 + 544);
  uint64_t v54 = *(void *)(v1 + 536);
  uint64_t v55 = *(void *)(v1 + 504);
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v1 + 512) + 8LL);
  *(void *)(v1 + 736) = v56;
  uint64_t v57 = v56(v53, v55);
  uint64_t v58 = CurrentValueSubject.value.getter(v57);
  SFAirDropReceive.Transfer.askRequest.getter(v58);
  uint64_t v59 = v51(v50, v52);
  char v60 = SFAirDropReceive.AskRequest.canAutoAccept.getter(v59);
  v56(v54, v55);
  uint64_t v61 = *(void *)(v1 + 456);
  if ((v60 & 1) != 0) {
    int v62 = 1;
  }
  else {
    int v62 = *(unsigned __int8 *)(v61
  }
                             + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_delegateCanAutoAccept);
  uint64_t v63 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(void *)(v1 + 744) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  uint64_t v64 = v61 + v63;
  swift_beginAccess(v61 + v63, v1 + 376, 0LL, 0LL);
  sub_10019A6C4(v64, type);
  uint64_t v65 = sub_100183098(&qword_100656430);
  *(void *)(v1 + 752) = v65;
  uint64_t v66 = sub_100183098(&qword_100650C88);
  if (swift_dynamicCast(v1 + 176, type, v65, v66, 6LL))
  {
    uint64_t v67 = sub_100187100(v1 + 176, &qword_100650C90);
    uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v70 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Content overrides canAutoAccept - checking...", v70, 2u);
      swift_slowDealloc(v70, -1LL, -1LL);
    }

    uint64_t v71 = *(void *)(v1 + 576);
    uint64_t v72 = *(void *)(v1 + 552);

    uint64_t v74 = CurrentValueSubject.value.getter(v73);
    SFAirDropReceive.Transfer.askRequest.getter(v74);
    v51(v71, v72);
    BOOL v260 = (uint64_t (*)(void))((char *)&dword_10064D4C8 + dword_10064D4C8);
    uint64_t v75 = (void *)swift_task_alloc(unk_10064D4CC);
    *(void *)(v1 + 760) = v75;
    *uint64_t v75 = v1;
    v75[1] = sub_1003569E8;
    return v260(*(void *)(v1 + 528));
  }

  *(void *)(v1 + 208) = 0LL;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  uint64_t v76 = sub_100187100(v1 + 176, &qword_100650C90);
  if (!((v229 | v62 ^ 1) & 1 | ((v251 & 1) == 0) | ((v244 | v238) | v234) & 1))
  {
    uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
    uint64_t v91 = *(void *)(v1 + 640);
    uint64_t v246 = *(void *)(v1 + 632);
    uint64_t v253 = *(void *)(v1 + 680);
    uint64_t v92 = *(void *)(v1 + 600);
    uint64_t v93 = *(void *)(v1 + 552);
    uint64_t v94 = *(void *)(v1 + 488);
    uint64_t v95 = *(void *)(v1 + 496);
    uint64_t v96 = *(void *)(v1 + 480);
    (*(void (**)(uint64_t, void, uint64_t))(v94 + 104))( v95,  enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:),  v96);
    sub_10044E6FC(v95, v92);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v95, v96);
    v90(v92, v93);
    (*(void (**)(uint64_t, void, uint64_t))(v91 + 104))( v253,  enum case for SFAirDropReceive.ItemDestination.default(_:),  v246);
    *(_DWORD *)(v1 + 904) = 1;
    uint64_t v97 = *(void *)(v1 + 752);
    sub_10019A6C4(*(void *)(v1 + 456) + *(void *)(v1 + 744), v1 + 296);
    uint64_t v98 = sub_100183098(&qword_100650CA0);
    if ((swift_dynamicCast(v1 + 336, v1 + 296, v97, v98, 6LL) & 1) != 0)
    {
      unint64_t v254 = *(void (**)(uint64_t, uint64_t))(v1 + 736);
      int v261 = *v256;
      uint64_t v99 = *(void *)(v1 + 680);
      uint64_t v100 = *(void *)(v1 + 664);
      uint64_t v101 = *(void *)(v1 + 640);
      uint64_t v236 = v101;
      uint64_t v240 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
      uint64_t v102 = *(void *)(v1 + 632);
      uint64_t v103 = *(void *)(v1 + 600);
      uint64_t v231 = *(void *)(v1 + 552);
      uint64_t v104 = *(void *)(v1 + 520);
      uint64_t v247 = *(void *)(v1 + 504);
      sub_1001CE0D0((__int128 *)(v1 + 336), v1 + 256);
      uint64_t v105 = *(void *)(v1 + 280);
      uint64_t v106 = *(void *)(v1 + 288);
      sub_10019A708((void *)(v1 + 256), v105);
      uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 16);
      uint64_t v108 = v107(v100, v99, v102);
      uint64_t v109 = CurrentValueSubject.value.getter(v108);
      SFAirDropReceive.Transfer.askRequest.getter(v109);
      v240(v103, v231);
      char v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 8))(v100, v104, v105, v106);
      v254(v104, v247);
      (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v100, v102);
      uint64_t v111 = sub_10018709C((void *)(v1 + 256));
      if (v261 == 1)
      {
        uint64_t v112 = *(void *)(v1 + 640);
        uint64_t v113 = v1 + 908;
LABEL_26:
        *(_BYTE *)(v113 + 2) = v110 & 1;
        uint64_t v115 = *(void *)(v1 + 656);
        uint64_t v116 = *(void *)(v1 + 632);
        v107(v115, *(void *)(v1 + 680), v116);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v112 + 88))(v115, v116) != enum case for SFAirDropReceive.ItemDestination.metadata(_:))
        {
          uint64_t v189 = *(void *)(v1 + 752);
          uint64_t v190 = *(void *)(v1 + 656);
          uint64_t v191 = *(void *)(v1 + 632);
          uint64_t v192 = *(void *)(v1 + 456) + *(void *)(v1 + 744);
          uint64_t v193 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 + 640) + 8LL);
          *(void *)(v1 + 824) = v193;
          v193(v190, v191);
          sub_10019A6C4(v192, v1 + 56);
          uint64_t v194 = sub_100183098(&qword_100650CB0);
          if ((swift_dynamicCast(v1 + 136, v1 + 56, v189, v194, 6LL) & 1) != 0)
          {
            uint64_t v195 = *(void *)(v1 + 704);
            uint64_t v196 = *(void *)(v1 + 456);
            sub_100187100(v1 + 136, &qword_100650CB8);
            uint64_t v263 = (uint64_t (*)(uint64_t))((char *)&dword_10064D4D0 + dword_10064D4D0);
            v197 = (void *)swift_task_alloc(unk_10064D4D4);
            *(void *)(v1 + 832) = v197;
            void *v197 = v1;
            v197[1] = sub_100358ABC;
            return v263(v196 + v195);
          }

          *(void *)(v1 + 168) = 0LL;
          *(_OWORD *)(v1 + 136) = 0u;
          *(_OWORD *)(v1 + 152) = 0u;
          sub_100187100(v1 + 136, &qword_100650CB8);
          uint64_t v118 = 0LL;
          unint64_t v119 = 0xF000000000000000LL;
          goto LABEL_46;
        }

        uint64_t v117 = *(uint64_t **)(v1 + 656);
        (*(void (**)(uint64_t *, void))(*(void *)(v1 + 640) + 96LL))(v117, *(void *)(v1 + 632));
        uint64_t v118 = *v117;
        unint64_t v119 = v117[1];
        uint64_t v120 = sub_1001A4C04(*v117, v119);
        uint64_t v121 = (os_log_s *)Logger.logObject.getter(v120);
        os_log_type_t v122 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v121, v122))
        {
          unint64_t v123 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)unint64_t v123 = 0;
          _os_log_impl((void *)&_mh_execute_header, v121, v122, "Retrieved receiverMetadata via destination", v123, 2u);
          swift_slowDealloc(v123, -1LL, -1LL);
        }

        sub_100189B0C(v118, v119);

        if (v119 >> 60 == 15)
        {
LABEL_46:
          uint64_t v198 = SFAirDropReceive.AskRequest.customPayload.getter();
          unint64_t v200 = v199;
          uint64_t v201 = sub_100189B0C(v198, v199);
          uint64_t v202 = (os_log_s *)Logger.logObject.getter(v201);
          os_log_type_t v203 = static os_log_type_t.error.getter(v202);
          if (os_log_type_enabled(v202, v203))
          {
            if (v200 >> 60 == 15) {
              v204 = "Failed to receive senderMetadata";
            }
            else {
              v204 = "Receiver metadata was not found";
            }
            uint64_t v205 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v205 = 0;
            _os_log_impl((void *)&_mh_execute_header, v202, v203, v204, v205, 2u);
            swift_slowDealloc(v205, -1LL, -1LL);
          }

          uint64_t v206 = *(void *)(v1 + 680);
          uint64_t v207 = *(void *)(v1 + 640);
          uint64_t v208 = *(void *)(v1 + 632);

          uint64_t v209 = type metadata accessor for SFAirDropReceive.Failure(0LL);
          uint64_t v210 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
          swift_allocError(v209, v210, 0LL, 0LL);
          uint64_t v212 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v209 - 8) + 104LL))( v211,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v209);
          swift_willThrow(v212);
          sub_100189B0C(v118, v119);
          (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v206, v208);
          uint64_t v40 = *(void *)(v1 + 672);
          uint64_t v41 = *(void *)(v1 + 664);
          uint64_t v42 = *(void *)(v1 + 656);
          uint64_t v43 = *(void *)(v1 + 648);
          uint64_t v44 = *(void *)(v1 + 624);
          uint64_t v45 = *(void *)(v1 + 600);
          uint64_t v46 = *(void *)(v1 + 592);
          uint64_t v47 = *(void *)(v1 + 584);
          uint64_t v48 = *(void *)(v1 + 576);
          *(void *)typec = *(void *)(v1 + 568);
          uint64_t v230 = *(void *)(v1 + 544);
          uint64_t v235 = *(void *)(v1 + 536);
          uint64_t v239 = *(void *)(v1 + 528);
          uint64_t v245 = *(void *)(v1 + 520);
          uint64_t v252 = *(void *)(v1 + 496);
          uint64_t v257 = *(void *)(v1 + 472);
          uint64_t v259 = *(void *)(v1 + 464);
          swift_task_dealloc(*(void *)(v1 + 680));
          swift_task_dealloc(v40);
          swift_task_dealloc(v41);
          swift_task_dealloc(v42);
          swift_task_dealloc(v43);
          swift_task_dealloc(v44);
          swift_task_dealloc(v45);
          swift_task_dealloc(v46);
          swift_task_dealloc(v47);
          swift_task_dealloc(v48);
          swift_task_dealloc(*(void *)typec);
          swift_task_dealloc(v230);
          swift_task_dealloc(v235);
          swift_task_dealloc(v239);
          swift_task_dealloc(v245);
          swift_task_dealloc(v252);
          swift_task_dealloc(v257);
          swift_task_dealloc(v259);
          uint64_t v188 = *(uint64_t (**)(void))(v1 + 8);
          return v188();
        }

uint64_t sub_1003569E8(char a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 760);
  *(_BYTE *)(v3 + 909) = a1;
  *(void *)(v3 + 768) = v1;
  swift_task_dealloc(v4);
  uint64_t v5 = *(void *)(v3 + 688);
  (*(void (**)(void, void))(v3 + 736))(*(void *)(v3 + 528), *(void *)(v3 + 504));
  if (v1) {
    unint64_t v6 = sub_10035792C;
  }
  else {
    unint64_t v6 = sub_100356A74;
  }
  return swift_task_switch(v6, v5, 0LL);
}

uint64_t sub_100356A74(uint64_t a1)
{
  uint64_t v2 = (void *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v2, v3))
  {
    int v21 = *(unsigned __int8 *)(v1 + 909);

    if (v21 != 1) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v195 = (unsigned __int8 *)(v1 + 908);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
    uint64_t v188 = *(void *)(v1 + 680);
    uint64_t v23 = *(void *)(v1 + 640);
    uint64_t v182 = *(void *)(v1 + 632);
    uint64_t v24 = *(void *)(v1 + 600);
    uint64_t v25 = *(void *)(v1 + 552);
    uint64_t v26 = *(void *)(v1 + 488);
    uint64_t v27 = *(void *)(v1 + 496);
    uint64_t v28 = *(void *)(v1 + 480);
    (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))( v27,  enum case for SFAirDropReceive.Transfer.State.autoAccepted(_:),  v28);
    sub_10044E6FC(v27, v24);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    v22(v24, v25);
    (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))( v188,  enum case for SFAirDropReceive.ItemDestination.default(_:),  v182);
    *(_DWORD *)(v1 + 904) = 1;
    uint64_t v29 = *(void *)(v1 + 752);
    sub_10019A6C4(*(void *)(v1 + 456) + *(void *)(v1 + 744), v1 + 296);
    uint64_t v30 = sub_100183098(&qword_100650CA0);
    if ((swift_dynamicCast(v1 + 336, v1 + 296, v29, v30, 6LL) & 1) != 0)
    {
      uint64_t v189 = *(void (**)(uint64_t, uint64_t))(v1 + 736);
      int v192 = *v195;
      uint64_t v31 = *(void *)(v1 + 680);
      uint64_t v32 = *(void *)(v1 + 664);
      uint64_t v33 = *(void *)(v1 + 640);
      uint64_t v174 = v33;
      uint64_t v177 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
      uint64_t v34 = *(void *)(v1 + 632);
      uint64_t v35 = *(void *)(v1 + 600);
      uint64_t v170 = *(void *)(v1 + 552);
      uint64_t v36 = *(void *)(v1 + 520);
      uint64_t v183 = *(void *)(v1 + 504);
      sub_1001CE0D0((__int128 *)(v1 + 336), v1 + 256);
      uint64_t v37 = *(void *)(v1 + 280);
      uint64_t v38 = *(void *)(v1 + 288);
      sub_10019A708((void *)(v1 + 256), v37);
      uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
      uint64_t v40 = v39(v32, v31, v34);
      uint64_t v41 = CurrentValueSubject.value.getter(v40);
      SFAirDropReceive.Transfer.askRequest.getter(v41);
      v177(v35, v170);
      char v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8))(v32, v36, v37, v38);
      v189(v36, v183);
      (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v32, v34);
      uint64_t v43 = sub_10018709C((void *)(v1 + 256));
      if (v192 == 1)
      {
        uint64_t v44 = *(void *)(v1 + 640);
        uint64_t v45 = v1 + 908;
LABEL_12:
        *(_BYTE *)(v45 + 2) = v42 & 1;
        uint64_t v47 = *(void *)(v1 + 656);
        uint64_t v48 = *(void *)(v1 + 632);
        v39(v47, *(void *)(v1 + 680), v48);
        if ((*(unsigned int (**)(uint64_t, uint64_t))(v44 + 88))(v47, v48) != enum case for SFAirDropReceive.ItemDestination.metadata(_:))
        {
          uint64_t v121 = *(void *)(v1 + 752);
          uint64_t v122 = *(void *)(v1 + 656);
          uint64_t v123 = *(void *)(v1 + 632);
          uint64_t v124 = *(void *)(v1 + 456) + *(void *)(v1 + 744);
          os_log_type_t v125 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 + 640) + 8LL);
          *(void *)(v1 + 824) = v125;
          v125(v122, v123);
          sub_10019A6C4(v124, v1 + 56);
          uint64_t v126 = sub_100183098(&qword_100650CB0);
          if ((swift_dynamicCast(v1 + 136, v1 + 56, v121, v126, 6LL) & 1) != 0)
          {
            uint64_t v127 = *(void *)(v1 + 704);
            uint64_t v128 = *(void *)(v1 + 456);
            sub_100187100(v1 + 136, &qword_100650CB8);
            v197 = (uint64_t (*)(uint64_t))((char *)&dword_10064D4D0 + dword_10064D4D0);
            uint64_t v129 = (void *)swift_task_alloc(unk_10064D4D4);
            *(void *)(v1 + 832) = v129;
            void *v129 = v1;
            v129[1] = sub_100358ABC;
            return v197(v128 + v127);
          }

          *(void *)(v1 + 168) = 0LL;
          *(_OWORD *)(v1 + 136) = 0u;
          *(_OWORD *)(v1 + 152) = 0u;
          sub_100187100(v1 + 136, &qword_100650CB8);
          uint64_t v50 = 0LL;
          unint64_t v51 = 0xF000000000000000LL;
          goto LABEL_32;
        }

        uint64_t v49 = *(uint64_t **)(v1 + 656);
        (*(void (**)(uint64_t *, void))(*(void *)(v1 + 640) + 96LL))(v49, *(void *)(v1 + 632));
        uint64_t v50 = *v49;
        unint64_t v51 = v49[1];
        uint64_t v52 = sub_1001A4C04(*v49, v51);
        uint64_t v53 = (os_log_s *)Logger.logObject.getter(v52);
        os_log_type_t v54 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v53, v54))
        {
          uint64_t v55 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v55 = 0;
          _os_log_impl((void *)&_mh_execute_header, v53, v54, "Retrieved receiverMetadata via destination", v55, 2u);
          swift_slowDealloc(v55, -1LL, -1LL);
        }

        sub_100189B0C(v50, v51);

        if (v51 >> 60 == 15)
        {
LABEL_32:
          uint64_t v130 = SFAirDropReceive.AskRequest.customPayload.getter();
          unint64_t v132 = v131;
          uint64_t v133 = sub_100189B0C(v130, v131);
          uint64_t v134 = (os_log_s *)Logger.logObject.getter(v133);
          os_log_type_t v135 = static os_log_type_t.error.getter(v134);
          if (os_log_type_enabled(v134, v135))
          {
            if (v132 >> 60 == 15) {
              uint64_t v136 = "Failed to receive senderMetadata";
            }
            else {
              uint64_t v136 = "Receiver metadata was not found";
            }
            uint64_t v137 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v137 = 0;
            _os_log_impl((void *)&_mh_execute_header, v134, v135, v136, v137, 2u);
            swift_slowDealloc(v137, -1LL, -1LL);
          }

          uint64_t v138 = *(void *)(v1 + 680);
          uint64_t v139 = *(void *)(v1 + 640);
          uint64_t v140 = *(void *)(v1 + 632);

          uint64_t v141 = type metadata accessor for SFAirDropReceive.Failure(0LL);
          uint64_t v142 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
          swift_allocError(v141, v142, 0LL, 0LL);
          uint64_t v144 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v141 - 8) + 104LL))( v143,  enum case for SFAirDropReceive.Failure.badRequest(_:),  v141);
          swift_willThrow(v144);
          sub_100189B0C(v50, v51);
          (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
          uint64_t v145 = *(void *)(v1 + 672);
          uint64_t v146 = *(void *)(v1 + 664);
          uint64_t v147 = *(void *)(v1 + 656);
          uint64_t v148 = *(void *)(v1 + 648);
          uint64_t v149 = *(void *)(v1 + 624);
          uint64_t v150 = *(void *)(v1 + 600);
          uint64_t v151 = *(void *)(v1 + 592);
          uint64_t v152 = *(void *)(v1 + 584);
          uint64_t v153 = *(void *)(v1 + 576);
          uint64_t v166 = *(void *)(v1 + 568);
          *(void *)typeb = *(void *)(v1 + 544);
          uint64_t v173 = *(void *)(v1 + 536);
          uint64_t v176 = *(void *)(v1 + 528);
          uint64_t v181 = *(void *)(v1 + 520);
          uint64_t v187 = *(void *)(v1 + 496);
          uint64_t v191 = *(void *)(v1 + 472);
          uint64_t v194 = *(void *)(v1 + 464);
          swift_task_dealloc(*(void *)(v1 + 680));
          swift_task_dealloc(v145);
          swift_task_dealloc(v146);
          swift_task_dealloc(v147);
          swift_task_dealloc(v148);
          swift_task_dealloc(v149);
          swift_task_dealloc(v150);
          swift_task_dealloc(v151);
          swift_task_dealloc(v152);
          swift_task_dealloc(v153);
          swift_task_dealloc(v166);
          swift_task_dealloc(*(void *)typeb);
          swift_task_dealloc(v173);
          swift_task_dealloc(v176);
          swift_task_dealloc(v181);
          swift_task_dealloc(v187);
          swift_task_dealloc(v191);
          swift_task_dealloc(v194);
          uint64_t v120 = *(uint64_t (**)(void))(v1 + 8);
          return v120();
        }

uint64_t sub_10035792C()
{
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 648);
  uint64_t v5 = *(void *)(v0 + 624);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 576);
  uint64_t v11 = *(void *)(v0 + 568);
  uint64_t v12 = *(void *)(v0 + 544);
  uint64_t v13 = *(void *)(v0 + 536);
  uint64_t v14 = *(void *)(v0 + 528);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  swift_task_dealloc(*(void *)(v0 + 680));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100357A64()
{
  uint64_t v2 = *v1;
  uint64_t v3 = (*v1)[97];
  (*v1)[98] = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = (void (*)(uint64_t, uint64_t))v2[91];
  uint64_t v5 = v2[86];
  uint64_t v6 = v2[71];
  uint64_t v7 = v2[69];
  sub_100187100(v2[58], &qword_100646830);
  v4(v6, v7);
  if (v0) {
    uint64_t v8 = sub_100359324;
  }
  else {
    uint64_t v8 = sub_100357B04;
  }
  return swift_task_switch(v8, v5, 0LL);
}

uint64_t sub_100357B04()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[91];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[69];
  uint64_t v5 = v0[61];
  uint64_t v4 = v0[62];
  uint64_t v7 = v0[59];
  uint64_t v6 = v0[60];
  sub_10018709C(v0 + 27);
  uint64_t v8 = sub_100183098(&qword_1006451B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(v4, v7, v8);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))( v4,  enum case for SFAirDropReceive.Transfer.State.waitingForAskResponse(_:),  v6);
  sub_10044E6FC(v4, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  return swift_task_switch(sub_100357BD8, 0LL, 0LL);
}

uint64_t sub_100357BD8()
{
  uint64_t v1 = v0[59];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[99] = v2;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[100] = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[101] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100357C80;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[84],  &unk_100650C98,  v2,  sub_10036F978,  v3,  0LL,  0LL,  v0[79]);
}

uint64_t sub_100357C80()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 808LL);
  *(void *)(*(void *)v1 + 816LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_100358928;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v6 = v2[100];
    uint64_t v7 = v2[99];
    uint64_t v8 = v2[86];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_100357D00;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_100357D00()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + 908);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = *(void *)(v0 + 640);
  uint64_t v5 = *(void *)(v0 + 632);
  sub_100187100(*(void *)(v0 + 472), &qword_100646800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v3, v5);
  *(_DWORD *)(v0 + 904) = 0;
  uint64_t v6 = *(void *)(v0 + 752);
  sub_10019A6C4(*(void *)(v0 + 456) + *(void *)(v0 + 744), v0 + 296);
  uint64_t v7 = sub_100183098(&qword_100650CA0);
  if (swift_dynamicCast(v0 + 336, v0 + 296, v6, v7, 6LL))
  {
    uint64_t v167 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
    int v170 = *v1;
    uint64_t v8 = *(void *)(v0 + 680);
    uint64_t v9 = *(void *)(v0 + 664);
    uint64_t v10 = *(void *)(v0 + 640);
    uint64_t v154 = v10;
    uint64_t v159 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
    uint64_t v11 = *(void *)(v0 + 632);
    uint64_t v12 = *(void *)(v0 + 600);
    uint64_t v151 = *(void *)(v0 + 552);
    uint64_t v13 = *(void *)(v0 + 520);
    uint64_t v164 = *(void *)(v0 + 504);
    sub_1001CE0D0((__int128 *)(v0 + 336), v0 + 256);
    uint64_t v14 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 288);
    sub_10019A708((void *)(v0 + 256), v14);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    uint64_t v17 = v16(v9, v8, v11);
    uint64_t v18 = CurrentValueSubject.value.getter(v17);
    SFAirDropReceive.Transfer.askRequest.getter(v18);
    v159(v12, v151);
    char v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(v9, v13, v14, v15);
    v167(v13, v164);
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v9, v11);
    uint64_t v20 = sub_10018709C((void *)(v0 + 256));
    if (v170 == 1)
    {
      uint64_t v21 = *(void *)(v0 + 640);
      uint64_t v1 = (unsigned __int8 *)(v0 + 908);
      goto LABEL_6;
    }

    uint64_t v29 = 0LL;
LABEL_13:
    unint64_t v30 = 0xF000000000000000LL;
    goto LABEL_14;
  }

  int v22 = *v1;
  *(_OWORD *)(v0 + 336) = 0u;
  *(_OWORD *)(v0 + 352) = 0u;
  *(void *)(v0 + 368) = 0LL;
  uint64_t v20 = sub_100187100(v0 + 336, &qword_100650CA8);
  if (v22 != 1)
  {
    uint64_t v29 = 0LL;
    char v19 = 0;
    goto LABEL_13;
  }

  char v19 = 0;
  uint64_t v21 = *(void *)(v0 + 640);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
LABEL_6:
  v1[2] = v19 & 1;
  uint64_t v23 = *(void *)(v0 + 656);
  uint64_t v24 = *(void *)(v0 + 632);
  v16(v23, *(void *)(v0 + 680), v24);
  int v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 88))(v23, v24);
  uint64_t v26 = *(uint64_t **)(v0 + 656);
  uint64_t v27 = *(void *)(v0 + 640);
  uint64_t v28 = *(void *)(v0 + 632);
  if (v25 != enum case for SFAirDropReceive.ItemDestination.metadata(_:))
  {
    uint64_t v100 = *(void *)(v0 + 752);
    uint64_t v101 = *(void *)(v0 + 456) + *(void *)(v0 + 744);
    uint64_t v102 = *(void (**)(uint64_t *, uint64_t))(v27 + 8);
    *(void *)(v0 + 824) = v102;
    v102(v26, v28);
    sub_10019A6C4(v101, v0 + 56);
    uint64_t v103 = sub_100183098(&qword_100650CB0);
    if ((swift_dynamicCast(v0 + 136, v0 + 56, v100, v103, 6LL) & 1) != 0)
    {
      uint64_t v104 = *(void *)(v0 + 704);
      uint64_t v105 = *(void *)(v0 + 456);
      sub_100187100(v0 + 136, &qword_100650CB8);
      uint64_t v172 = (uint64_t (*)(uint64_t))((char *)&dword_10064D4D0 + dword_10064D4D0);
      __n128 v106 = (void *)swift_task_alloc(unk_10064D4D4);
      *(void *)(v0 + 832) = v106;
      void *v106 = v0;
      v106[1] = sub_100358ABC;
      return v172(v105 + v104);
    }

    *(void *)(v0 + 168) = 0LL;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    sub_100187100(v0 + 136, &qword_100650CB8);
    uint64_t v29 = 0LL;
    unint64_t v30 = 0xF000000000000000LL;
    goto LABEL_26;
  }

  (*(void (**)(void, uint64_t))(v27 + 96))(*(void *)(v0 + 656), v28);
  uint64_t v29 = *v26;
  unint64_t v30 = v26[1];
  uint64_t v31 = sub_1001A4C04(*v26, v30);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Retrieved receiverMetadata via destination", v34, 2u);
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  sub_100189B0C(v29, v30);

  if (v30 >> 60 != 15)
  {
LABEL_14:
    unint64_t v168 = v30;
    uint64_t v171 = v29;
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      int v37 = *(_DWORD *)(v0 + 904);
      uint64_t v38 = swift_slowAlloc(14LL, -1LL);
      *(_DWORD *)uint64_t v38 = 67109376;
      *(_DWORD *)(v0 + 864) = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 864, v0 + 868, v38 + 4, v38 + 8);
      *(_WORD *)(v38 + 8) = 1024;
      *(_DWORD *)(v0 + 868) = v19 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 868, v0 + 872, v38 + 10, v38 + 14);
      _os_log_impl( (void *)&_mh_execute_header,  v35,  v36,  "Ask request END - Accept {didAutoAccept: %{BOOL}d, shouldExtractMedia: %{BOOL}d}",  (uint8_t *)v38,  0xEu);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    char v165 = v19;
    uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 736);
    uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 728);
    uint64_t v160 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 712);
    uint64_t v41 = *(void *)(v0 + 624);
    uint64_t v155 = *(void *)(v0 + 608);
    uint64_t v42 = *(void *)(v0 + 600);
    uint64_t v43 = *(void *)(v0 + 552);
    uint64_t v44 = *(void *)(v0 + 520);
    uint64_t v45 = *(void *)(v0 + 504);

    uint64_t v47 = CurrentValueSubject.value.getter(v46);
    SFAirDropReceive.Transfer.askRequest.getter(v47);
    uint64_t v48 = v40(v42, v43);
    SFAirDropReceive.AskRequest.type.getter(v48);
    uint64_t v49 = v39(v44, v45);
    char v50 = SFAirDrop.TransferType.isFiles.getter(v49);
    uint64_t v51 = v160(v41, v155);
    if ((v50 & 1) != 0)
    {
      uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 736);
      uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 728);
      uint64_t v54 = *(void *)(v0 + 600);
      uint64_t v55 = *(void *)(v0 + 552);
      uint64_t v56 = *(void *)(v0 + 520);
      uint64_t v57 = *(void *)(v0 + 504);
      uint64_t v58 = CurrentValueSubject.value.getter(v51);
      SFAirDropReceive.Transfer.askRequest.getter(v58);
      uint64_t v59 = v53(v54, v55);
      char v60 = SFAirDropReceive.AskRequest.senderIsMe.getter(v59);
      uint64_t v61 = v52(v56, v57);
      if ((v60 & 1) == 0)
      {
        uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
        uint64_t v63 = *(void *)(v0 + 600);
        uint64_t v64 = *(void *)(v0 + 552);
        uint64_t v65 = CurrentValueSubject.value.getter(v61);
        SFAirDropReceive.Transfer.isPreviewSensitive.getter(v65);
        v62(v63, v64);
      }
    }

    uint64_t v66 = *(void *)(v0 + 456);
    uint64_t v161 = *(void (**)(void, uint64_t, uint64_t))(*(void *)(v0 + 640) + 16LL);
    v161(*(void *)(v0 + 648), *(void *)(v0 + 680), *(void *)(v0 + 632));
    uint64_t v67 = swift_retain_n(v66, 2LL);
    uint64_t v68 = (os_log_s *)Logger.logObject.getter(v67);
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v0 + 728);
      uint64_t v156 = *(void *)(v0 + 640);
      uint64_t v140 = *(void *)(v0 + 632);
      uint64_t v142 = *(void *)(v0 + 648);
      uint64_t v71 = *(void *)(v0 + 600);
      uint64_t v72 = *(void *)(v0 + 552);
      uint64_t v73 = *(void *)(v0 + 520);
      uint64_t v132 = *(void *)(v0 + 504);
      uint64_t v134 = *(void *)(v0 + 456);
      uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v0 + 736);
      uint64_t v74 = swift_slowAlloc(34LL, -1LL);
      uint64_t v148 = swift_slowAlloc(64LL, -1LL);
      v173[0] = v148;
      *(_DWORD *)uint64_t v74 = 67109890;
      os_log_type_t type = v69;
      uint64_t v75 = CurrentValueSubject.value.getter(v148);
      char v76 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v75);
      v70(v71, v72);
      *(_DWORD *)(v0 + 876) = v76 & 1;
      uint64_t v77 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 876, v0 + 880, v74 + 4, v74 + 8);
      *(_WORD *)(v74 + 8) = 1024;
      uint64_t v78 = CurrentValueSubject.value.getter(v77);
      SFAirDropReceive.Transfer.askRequest.getter(v78);
      uint64_t v79 = ((uint64_t (*)(uint64_t, uint64_t))v70)(v71, v72);
      char v80 = SFAirDropReceive.AskRequest.senderIsMe.getter(v79);
      v136(v73, v132);
      swift_release(v134);
      *(_DWORD *)(v0 + 872) = v80 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 872, v0 + 876, v74 + 10, v74 + 14);
      swift_release(v134);
      *(_WORD *)(v74 + 14) = 2080;
      *(void *)(v0 + 424) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100507330LL, v173);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 424, v0 + 432, v74 + 16, v74 + 24);
      *(_WORD *)(v74 + 24) = 2080;
      uint64_t v81 = sub_100183F14( &qword_100650C20,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      uint64_t v82 = dispatch thunk of CustomStringConvertible.description.getter(v140, v81);
      uint64_t v84 = (const char *)v83;
      *(void *)(v0 + 432) = sub_10018CDB4(v82, v83, v173);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 432, v0 + 440, v74 + 26, v74 + 34);
      __n128 v85 = swift_bridgeObjectRelease(v84);
      uint64_t v86 = *(void (**)(uint64_t, uint64_t, __n128))(v156 + 8);
      v86(v142, v140, v85);
      _os_log_impl( (void *)&_mh_execute_header,  v68,  type,  "Ask sensitive preview SKIP. {transfer.isPreviewSensitive: %{BOOL}d, isSenderMe: %{BOOL}d, userSafetyMode: %s, as kStepDestination: %s}",  (uint8_t *)v74,  0x22u);
      swift_arrayDestroy(v148, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v148, -1LL, -1LL);
      swift_slowDealloc(v74, -1LL, -1LL);
    }

    else
    {
      uint64_t v87 = *(void *)(v0 + 648);
      uint64_t v88 = *(void *)(v0 + 640);
      uint64_t v89 = *(void *)(v0 + 632);
      uint64_t v90 = *(void *)(v0 + 456);

      swift_release_n(v90, 2LL);
      uint64_t v86 = *(void (**)(uint64_t, uint64_t, __n128))(v88 + 8);
      ((void (*)(uint64_t, uint64_t))v86)(v87, v89);
    }

    uint64_t v91 = v161;
    uint64_t v92 = *(void *)(v0 + 680);
    uint64_t v93 = *(void *)(v0 + 672);
    uint64_t v94 = *(void *)(v0 + 664);
    uint64_t v95 = *(void *)(v0 + 656);
    uint64_t v96 = *(void *)(v0 + 648);
    uint64_t v97 = *(void *)(v0 + 632);
    uint64_t v98 = *(void *)(v0 + 624);
    uint64_t v133 = *(void *)(v0 + 600);
    uint64_t v135 = *(void *)(v0 + 592);
    uint64_t v137 = *(void *)(v0 + 584);
    uint64_t v138 = *(void *)(v0 + 576);
    uint64_t v139 = *(void *)(v0 + 568);
    uint64_t v141 = *(void *)(v0 + 544);
    uint64_t v143 = *(void *)(v0 + 536);
    *(void *)os_log_type_t typea = *(void *)(v0 + 528);
    uint64_t v149 = *(void *)(v0 + 520);
    uint64_t v152 = *(void *)(v0 + 496);
    uint64_t v157 = *(void *)(v0 + 472);
    uint64_t v162 = *(void *)(v0 + 464);
    v91(*(void *)(v0 + 440), v92, v97);
    SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v165 & 1, v171, v168);
    ((void (*)(uint64_t, uint64_t))v86)(v92, v97);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v98);
    swift_task_dealloc(v133);
    swift_task_dealloc(v135);
    swift_task_dealloc(v137);
    swift_task_dealloc(v138);
    swift_task_dealloc(v139);
    swift_task_dealloc(v141);
    swift_task_dealloc(v143);
    swift_task_dealloc(*(void *)typea);
    swift_task_dealloc(v149);
    swift_task_dealloc(v152);
    swift_task_dealloc(v157);
    swift_task_dealloc(v162);
    uint64_t v99 = *(uint64_t (**)(void))(v0 + 8);
    return v99();
  }

uint64_t sub_100358928()
{
  uint64_t v1 = v0[99];
  uint64_t v2 = v0[86];
  swift_task_dealloc(v0[100]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100358974, v2, 0LL);
}

uint64_t sub_100358974()
{
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 648);
  uint64_t v5 = *(void *)(v0 + 624);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 576);
  uint64_t v11 = *(void *)(v0 + 568);
  uint64_t v12 = *(void *)(v0 + 544);
  uint64_t v13 = *(void *)(v0 + 536);
  uint64_t v14 = *(void *)(v0 + 528);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  swift_task_dealloc(*(void *)(v0 + 680));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100358ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 832LL);
  v4[105] = a1;
  v4[106] = a2;
  v4[107] = v2;
  swift_task_dealloc(v5);
  if (v2) {
    uint64_t v6 = sub_1003591DC;
  }
  else {
    uint64_t v6 = sub_100358B30;
  }
  return swift_task_switch(v6, v4[86], 0LL);
}

uint64_t sub_100358B30(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Retrieved receiverMetadata via content handler", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v95 = *(void *)(v1 + 840);
  uint64_t v96 = *(void *)(v1 + 848);
  unsigned int v5 = *(unsigned __int8 *)(v1 + 910);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    int v9 = *(_DWORD *)(v1 + 904);
    uint64_t v10 = swift_slowAlloc(14LL, -1LL);
    *(_DWORD *)uint64_t v10 = 67109376;
    *(_DWORD *)(v1 + 864) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 864, v1 + 868, v10 + 4, v10 + 8);
    *(_WORD *)(v10 + 8) = 1024;
    *(_DWORD *)(v1 + 868) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 868, v1 + 872, v10 + 10, v10 + 14);
    _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "Ask request END - Accept {didAutoAccept: %{BOOL}d, shouldExtractMedia: %{BOOL}d}",  (uint8_t *)v10,  0xEu);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  unsigned int v94 = v5;
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 736);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 728);
  uint64_t v13 = *(void *)(v1 + 624);
  uint64_t v89 = *(void *)(v1 + 608);
  uint64_t v92 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 712);
  uint64_t v14 = *(void *)(v1 + 600);
  uint64_t v15 = *(void *)(v1 + 552);
  uint64_t v16 = *(void *)(v1 + 520);
  uint64_t v17 = *(void *)(v1 + 504);

  uint64_t v19 = CurrentValueSubject.value.getter(v18);
  SFAirDropReceive.Transfer.askRequest.getter(v19);
  uint64_t v20 = v12(v14, v15);
  SFAirDropReceive.AskRequest.type.getter(v20);
  uint64_t v21 = v11(v16, v17);
  char v22 = SFAirDrop.TransferType.isFiles.getter(v21);
  uint64_t v23 = v92(v13, v89);
  if ((v22 & 1) != 0)
  {
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 736);
    int v25 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 728);
    uint64_t v26 = *(void *)(v1 + 600);
    uint64_t v27 = *(void *)(v1 + 552);
    uint64_t v28 = *(void *)(v1 + 520);
    uint64_t v29 = *(void *)(v1 + 504);
    uint64_t v30 = CurrentValueSubject.value.getter(v23);
    SFAirDropReceive.Transfer.askRequest.getter(v30);
    uint64_t v31 = v25(v26, v27);
    char v32 = SFAirDropReceive.AskRequest.senderIsMe.getter(v31);
    uint64_t v33 = v24(v28, v29);
    if ((v32 & 1) == 0)
    {
      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
      uint64_t v35 = *(void *)(v1 + 600);
      uint64_t v36 = *(void *)(v1 + 552);
      uint64_t v37 = CurrentValueSubject.value.getter(v33);
      SFAirDropReceive.Transfer.isPreviewSensitive.getter(v37);
      v34(v35, v36);
    }
  }

  uint64_t v38 = *(void *)(v1 + 456);
  uint64_t v93 = *(void (**)(void, uint64_t, uint64_t))(*(void *)(v1 + 640) + 16LL);
  v93(*(void *)(v1 + 648), *(void *)(v1 + 680), *(void *)(v1 + 632));
  uint64_t v39 = swift_retain_n(v38, 2LL);
  uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
    uint64_t v90 = *(void *)(v1 + 640);
    uint64_t v80 = *(void *)(v1 + 632);
    uint64_t v82 = *(void *)(v1 + 648);
    uint64_t v43 = *(void *)(v1 + 600);
    uint64_t v44 = *(void *)(v1 + 552);
    uint64_t v45 = *(void *)(v1 + 520);
    uint64_t v72 = *(void *)(v1 + 504);
    uint64_t v74 = *(void *)(v1 + 456);
    char v76 = *(void (**)(uint64_t, uint64_t))(v1 + 736);
    uint64_t v46 = swift_slowAlloc(34LL, -1LL);
    uint64_t v86 = swift_slowAlloc(64LL, -1LL);
    uint64_t v97 = v86;
    *(_DWORD *)uint64_t v46 = 67109890;
    os_log_type_t type = v41;
    uint64_t v47 = CurrentValueSubject.value.getter(v86);
    char v48 = SFAirDropReceive.Transfer.isPreviewSensitive.getter(v47);
    v42(v43, v44);
    *(_DWORD *)(v1 + 876) = v48 & 1;
    uint64_t v49 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 876, v1 + 880, v46 + 4, v46 + 8);
    *(_WORD *)(v46 + 8) = 1024;
    uint64_t v50 = CurrentValueSubject.value.getter(v49);
    SFAirDropReceive.Transfer.askRequest.getter(v50);
    uint64_t v51 = ((uint64_t (*)(uint64_t, uint64_t))v42)(v43, v44);
    char v52 = SFAirDropReceive.AskRequest.senderIsMe.getter(v51);
    v76(v45, v72);
    swift_release(v74);
    *(_DWORD *)(v1 + 872) = v52 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 872, v1 + 876, v46 + 10, v46 + 14);
    swift_release(v74);
    *(_WORD *)(v46 + 14) = 2080;
    *(void *)(v1 + 424) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100507330LL, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 424, v1 + 432, v46 + 16, v46 + 24);
    *(_WORD *)(v46 + 24) = 2080;
    uint64_t v53 = sub_100183F14( &qword_100650C20,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
    uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter(v80, v53);
    uint64_t v56 = (const char *)v55;
    *(void *)(v1 + 432) = sub_10018CDB4(v54, v55, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 432, v1 + 440, v46 + 26, v46 + 34);
    __n128 v57 = swift_bridgeObjectRelease(v56);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, __n128))(v90 + 8);
    v58(v82, v80, v57);
    _os_log_impl( (void *)&_mh_execute_header,  v40,  type,  "Ask sensitive preview SKIP. {transfer.isPreviewSensitive: %{BOOL}d, isSenderMe: %{BOOL}d, userSafetyMode: %s, askS tepDestination: %s}",  (uint8_t *)v46,  0x22u);
    swift_arrayDestroy(v86, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v86, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);
  }

  else
  {
    uint64_t v59 = *(void *)(v1 + 648);
    uint64_t v60 = *(void *)(v1 + 640);
    uint64_t v61 = *(void *)(v1 + 632);
    uint64_t v62 = *(void *)(v1 + 456);

    swift_release_n(v62, 2LL);
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, __n128))(v60 + 8);
    ((void (*)(uint64_t, uint64_t))v58)(v59, v61);
  }

  uint64_t v63 = *(void *)(v1 + 680);
  uint64_t v64 = *(void *)(v1 + 672);
  uint64_t v65 = *(void *)(v1 + 664);
  uint64_t v66 = *(void *)(v1 + 656);
  uint64_t v67 = *(void *)(v1 + 648);
  uint64_t v68 = *(void *)(v1 + 632);
  uint64_t v69 = *(void *)(v1 + 624);
  uint64_t v71 = *(void *)(v1 + 600);
  uint64_t v73 = *(void *)(v1 + 592);
  uint64_t v75 = *(void *)(v1 + 584);
  uint64_t v77 = *(void *)(v1 + 576);
  uint64_t v78 = *(void *)(v1 + 568);
  uint64_t v79 = *(void *)(v1 + 544);
  uint64_t v81 = *(void *)(v1 + 536);
  uint64_t v83 = *(void *)(v1 + 528);
  *(void *)os_log_type_t typea = *(void *)(v1 + 520);
  uint64_t v87 = *(void *)(v1 + 496);
  uint64_t v88 = *(void *)(v1 + 472);
  uint64_t v91 = *(void *)(v1 + 464);
  v93(*(void *)(v1 + 440), v63, v68);
  SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(v94, v95, v96);
  ((void (*)(uint64_t, uint64_t))v58)(v63, v68);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v69);
  swift_task_dealloc(v71);
  swift_task_dealloc(v73);
  swift_task_dealloc(v75);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(*(void *)typea);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v91);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1003591DC()
{
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 648);
  uint64_t v5 = *(void *)(v0 + 624);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 576);
  uint64_t v11 = *(void *)(v0 + 568);
  uint64_t v12 = *(void *)(v0 + 544);
  uint64_t v13 = *(void *)(v0 + 536);
  uint64_t v14 = *(void *)(v0 + 528);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  swift_task_dealloc(*(void *)(v0 + 680));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100359324()
{
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 648);
  uint64_t v5 = *(void *)(v0 + 624);
  uint64_t v6 = *(void *)(v0 + 600);
  uint64_t v7 = *(void *)(v0 + 592);
  uint64_t v8 = *(void *)(v0 + 584);
  uint64_t v9 = *(void *)(v0 + 576);
  uint64_t v11 = *(void *)(v0 + 568);
  uint64_t v12 = *(void *)(v0 + 544);
  uint64_t v13 = *(void *)(v0 + 536);
  uint64_t v14 = *(void *)(v0 + 528);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 496);
  uint64_t v17 = *(void *)(v0 + 472);
  uint64_t v18 = *(void *)(v0 + 464);
  swift_task_dealloc(*(void *)(v0 + 680));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100359464(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  v3[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v3[9] = v7;
  v3[10] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v8 = static AirDropActor.shared;
  v3[11] = static AirDropActor.shared;
  return swift_task_switch(sub_100359524, v8, 0LL);
}

uint64_t sub_100359524()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  swift_errorRetain(v1);
  SFAirDropReceive.Failure.init(_:)(v1);
  v0[12] = *(void *)(v2 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler);
  uint64_t v3 = (uint64_t **)swift_task_alloc(dword_100654E74);
  v0[13] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = (uint64_t *)sub_1003595A4;
  return sub_100420DE0(v0[3]);
}

uint64_t sub_1003595A4()
{
  return swift_task_switch(sub_100359600, static AirDropActor.shared, 0LL);
}

uint64_t sub_100359600()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  uint64_t v5 = swift_allocError(v3, v4, 0LL, 0LL);
  v0[14] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v1, v3);
  uint64_t v7 = (void *)swift_task_alloc(dword_100654E5C);
  v0[15] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003596A8;
  return sub_100420620(v5);
}

uint64_t sub_1003596A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (*v0)[14];
  uint64_t v3 = *v0;
  swift_task_dealloc((*v0)[15]);
  swift_errorRelease(v2);
  uint64_t v4 = (uint64_t **)swift_task_alloc(dword_1006561A4);
  v1[16] = (uint64_t)v4;
  *uint64_t v4 = v3;
  v4[1] = (uint64_t *)sub_100359724;
  return sub_100452C38(v1[7], v1[10]);
}

uint64_t sub_100359724()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 128LL));
  return swift_task_switch(sub_10035977C, v1, 0LL);
}

uint64_t sub_10035977C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 16);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 72) + 8LL))(v1, *(void *)(v0 + 64));
  uint64_t v6 = enum case for SFAirDropReceive.AskResponse.error(_:);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104LL))(v5, v6, v7);
  uint64_t v8 = _s6RunnerC19PreAcceptRunResultsVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5 + *(int *)(v8 + 20), v2, v3);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035982C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[8] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v3[9] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[10] = swift_task_alloc(v8);
  v3[11] = swift_task_alloc(v8);
  uint64_t v9 = sub_100183098(&qword_100650B10);
  v3[12] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100649F88);
  v3[13] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  v3[14] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v3[15] = v12;
  v3[16] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v3[17] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v3[18] = v14;
  unint64_t v15 = (*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[19] = swift_task_alloc(v15);
  v3[20] = swift_task_alloc(v15);
  v3[21] = swift_task_alloc(v15);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v16 = static AirDropActor.shared;
  v3[22] = static AirDropActor.shared;
  return swift_task_switch(sub_1003599B0, v16, 0LL);
}

uint64_t sub_1003599B0()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[3], v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3) == enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    uint64_t v4 = v0[21];
    uint64_t v5 = v0[17];
    uint64_t v6 = v0[18];
    uint64_t v7 = v0[16];
    (*(void (**)(uint64_t, void))(v0[15] + 96LL))(v7, v0[14]);
    uint64_t v8 = v7 + *(int *)(sub_100183098(&qword_100646590) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v7, v5);
    uint64_t v9 = type metadata accessor for SFAirDropReceive.AcceptContext(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
    uint64_t v10 = (void *)swift_task_alloc(dword_100650B24);
    v0[23] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100359C54;
    return sub_10035AA8C(v0[13]);
  }

  else
  {
    uint64_t v12 = v0[14];
    uint64_t v13 = v0[15];
    uint64_t v14 = type metadata accessor for SFError(0LL);
    uint64_t v15 = sub_100183F14( &qword_1006461A8,  (uint64_t (*)(uint64_t))&type metadata accessor for SFError,  (uint64_t)&protocol conformance descriptor for SFError);
    uint64_t v16 = swift_allocError(v14, v15, 0LL, 0LL);
    uint64_t v18 = v17;
    _StringGuts.grow(_:)(60LL);
    v19._object = (void *)0x800000010050C260LL;
    v19._countAndFlagsBits = 0xD000000000000039LL;
    String.append(_:)(v19);
    uint64_t v20 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v12, v20);
    object = (const char *)v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    v23._countAndFlagsBits = 125LL;
    v23._object = (void *)0xE100000000000000LL;
    String.append(_:)(v23);
    *uint64_t v18 = 0LL;
    v18[1] = 0xE000000000000000LL;
    v18[2] = 0xD00000000000006ALL;
    v18[3] = 0x800000010050C2A0LL;
    v18[4] = 97LL;
    uint64_t v24 = (*(uint64_t (**)(void *, void, uint64_t))(*(void *)(v14 - 8) + 104LL))( v18,  enum case for SFError.unexpected(_:),  v14);
    swift_willThrow(v24);
    int v25 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    uint64_t v26 = v0[16];
    uint64_t v27 = v0[14];
    v0[45] = v16;
    v25(v26, v27);
    swift_errorRetain(v16);
    SFAirDropReceive.Failure.init(_:)(v16);
    return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
  }

uint64_t sub_100359C54()
{
  uint64_t v2 = (*v1)[23];
  uint64_t v3 = *v1;
  v3[24] = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_10035A73C, v3[22], 0LL);
  }
  uint64_t v5 = (uint64_t **)swift_task_alloc(dword_100650B2C);
  v3[25] = (uint64_t)v5;
  uint8_t *v5 = v3;
  v5[1] = (uint64_t *)sub_100359CE8;
  return sub_10035BE38(v3[21]);
}

uint64_t sub_100359CE8(uint64_t a1, double a2)
{
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 200);
  *(void *)(v4 + 208) = a1;
  *(double *)(v4 + 2swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v4 + 224) = v2;
  swift_task_dealloc(v5);
  if (v2) {
    uint64_t v6 = sub_10035A7A8;
  }
  else {
    uint64_t v6 = sub_100359D5C;
  }
  return swift_task_switch(v6, *(void *)(v4 + 176), 0LL);
}

uint64_t sub_100359D5C(uint64_t a1)
{
  uint64_t v2 = _s6RunnerC19PreAcceptRunResultsVMa(0LL);
  SFAirDropReceive.Transfer.isPreviewSensitive.getter(v2);
  uint64_t v3 = (uint64_t **)swift_task_alloc(dword_100650B34);
  v1[29] = (uint64_t)v3;
  *uint64_t v3 = v1;
  v3[1] = (uint64_t *)sub_100359DD4;
  return sub_10035E738(v1[20], v1[26], v1[21]);
}

uint64_t sub_100359DD4(char a1)
{
  uint64_t v3 = *(void *)(*v2 + 232);
  uint64_t v4 = *v2;
  *(_BYTE *)(v4 + 392) = a1;
  *(void *)(v4 + 240) = v1;
  swift_task_dealloc(v3);
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 176);
    swift_bridgeObjectRelease(*(const char **)(v4 + 208));
    return swift_task_switch(sub_10035A828, v5, 0LL);
  }

  else
  {
    uint64_t v7 = (void *)swift_task_alloc(dword_100656184);
    *(void *)(v4 + 248) = v7;
    *uint64_t v7 = v4;
    v7[1] = sub_100359E84;
    return sub_10044EFB4(*(void *)(v4 + 208), *(void *)(v4 + 160));
  }

uint64_t sub_100359E84(uint64_t a1, double a2)
{
  uint64_t v6 = *(void *)(*v3 + 248);
  uint64_t v7 = *v3;
  *(void *)(v7 + 256) = a1;
  *(void *)(v7 + 264) = v2;
  swift_task_dealloc(v6);
  if (v2)
  {
    uint64_t v8 = *(void *)(v7 + 176);
    swift_bridgeObjectRelease(*(const char **)(v7 + 208));
    return swift_task_switch(sub_10035A8A8, v8, 0LL);
  }

  else
  {
    double v10 = *(double *)(v7 + 216) + a2;
    uint64_t v11 = (void *)swift_task_alloc(dword_100650B3C);
    *(void *)(v7 + 272) = v11;
    *uint64_t v11 = v7;
    v11[1] = sub_100359F54;
    return sub_10035E91C( *(void *)(v7 + 152),  *(void *)(v7 + 96),  *(_BYTE *)(v7 + 392),  *(void *)(v7 + 208),  a1,  *(void *)(v7 + 160),  v10);
  }

uint64_t sub_100359F54(char a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*v3 + 272);
  uint64_t v5 = *v3;
  *(_BYTE *)(v5 + 393) = a1;
  *(void *)(v5 + 280) = a2;
  *(void *)(v5 + 288) = v2;
  swift_task_dealloc(v4);
  if (v2)
  {
    uint64_t v6 = *(const char **)(v5 + 208);
    uint64_t v7 = *(void *)(v5 + 176);
    *(void *)&double v8 = swift_bridgeObjectRelease((const char *)*(void *)(v5 + 256)).n128_u64[0];
    swift_bridgeObjectRelease(v6, v8);
    return swift_task_switch(sub_10035A93C, v7, 0LL);
  }

  else
  {
    double v10 = (void *)swift_task_alloc(dword_100650B44);
    *(void *)(v5 + 296) = v10;
    *double v10 = v5;
    v10[1] = sub_10035A00C;
    return sub_100362DF8(*(void *)(v5 + 96), *(void *)(v5 + 104));
  }

uint64_t sub_10035A00C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*v3 + 296);
  uint64_t v6 = *v3;
  *(void *)(v6 + 304) = a2;
  *(void *)(v6 + 312) = v2;
  swift_task_dealloc(v5);
  if (v2)
  {
    uint64_t v7 = *(const char **)(v6 + 280);
    double v8 = *(const char **)(v6 + 208);
    uint64_t v9 = *(void *)(v6 + 176);
    *(void *)&double v10 = swift_bridgeObjectRelease((const char *)*(void *)(v6 + 256)).n128_u64[0];
    *(void *)&double v11 = swift_bridgeObjectRelease(v7, v10).n128_u64[0];
    swift_bridgeObjectRelease(v8, v11);
    return swift_task_switch(sub_10035A9D0, v9, 0LL);
  }

  else
  {
    *(void *)(v6 + 320) = static AirDropActor.shared;
    uint64_t v13 = (void *)swift_task_alloc(dword_100656194);
    *(void *)(v6 + 328) = v13;
    void *v13 = v6;
    v13[1] = sub_10035A10C;
    return sub_100451C44( *(void *)(v6 + 80),  *(void *)(v6 + 208),  *(void *)(v6 + 256),  *(void *)(v6 + 280),  *(unsigned __int8 *)(v6 + 392),  *(unsigned __int8 *)(v6 + 393),  *(void *)(v6 + 152),  a1);
  }

uint64_t sub_10035A10C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 328);
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_10035A3CC;
  }
  else {
    uint64_t v4 = sub_10035A170;
  }
  return swift_task_switch(v4, *(void *)(v2 + 320), 0LL);
}

uint64_t sub_10035A170()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_100654E5C);
  *(void *)(v0 + 344) = v1;
  void *v1 = v0;
  v1[1] = sub_10035A1C8;
  return sub_100420620(0LL);
}

uint64_t sub_10035A1C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 320LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 344LL));
  return swift_task_switch(sub_10035A220, v1, 0LL);
}

uint64_t sub_10035A220()
{
  uint64_t v1 = (const char *)v0[38];
  uint64_t v2 = (const char *)v0[35];
  uint64_t v3 = (const char *)v0[32];
  uint64_t v4 = (const char *)v0[26];
  uint64_t v5 = v0[22];
  uint64_t v7 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[8];
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 32LL);
  v0[44] = v9;
  v9(v6, v7, v8);
  *(void *)&double v10 = swift_bridgeObjectRelease(v3).n128_u64[0];
  *(void *)&double v11 = swift_bridgeObjectRelease(v2, v10).n128_u64[0];
  *(void *)&double v12 = swift_bridgeObjectRelease(v4, v11).n128_u64[0];
  swift_bridgeObjectRelease(v1, v12);
  return swift_task_switch(sub_10035A2AC, v5, 0LL);
}

uint64_t sub_10035A2AC()
{
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 16);
  sub_100187100(*(void *)(v0 + 96), &qword_100650B10);
  double v10 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v10(v3, v5);
  v10(v1, v5);
  sub_100187100(v6, &qword_100649F88);
  v10(v2, v5);
  v20(v9, v7, v8);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v12 = *(void *)(v0 + 152);
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v17 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 56);
  swift_task_dealloc(*(void *)(v0 + 168));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035A3CC()
{
  uint64_t v1 = (const char *)v0[38];
  uint64_t v2 = (const char *)v0[35];
  uint64_t v3 = (const char *)v0[26];
  uint64_t v4 = v0[22];
  *(void *)&double v5 = swift_bridgeObjectRelease((const char *)v0[32]).n128_u64[0];
  *(void *)&double v6 = swift_bridgeObjectRelease(v2, v5).n128_u64[0];
  *(void *)&double v7 = swift_bridgeObjectRelease(v3, v6).n128_u64[0];
  swift_bridgeObjectRelease(v1, v7);
  return swift_task_switch(sub_10035A438, v4, 0LL);
}

uint64_t sub_10035A438()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[13];
  sub_100187100(v0[12], &qword_100650B10);
  double v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v1, v3);
  v6(v2, v3);
  sub_100187100(v5, &qword_100649F88);
  uint64_t v7 = v0[42];
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[17];
  v0[45] = v7;
  v6(v8, v9);
  swift_errorRetain(v7);
  SFAirDropReceive.Failure.init(_:)(v7);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035A4F4()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  uint64_t v5 = swift_allocError(v3, v4, 0LL, 0LL);
  v0[46] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v1, v3);
  uint64_t v7 = (void *)swift_task_alloc(dword_100654E5C);
  v0[47] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_10035A5AC;
  return sub_100420620(v5);
}

uint64_t sub_10035A5AC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (*v0)[46];
  uint64_t v3 = *v0;
  swift_task_dealloc((*v0)[47]);
  swift_errorRelease(v2);
  uint64_t v4 = (uint64_t **)swift_task_alloc(dword_1006561A4);
  v1[48] = (uint64_t)v4;
  *uint64_t v4 = v3;
  v4[1] = (uint64_t *)sub_10035A628;
  return sub_100452C38(v1[2], v1[7]);
}

uint64_t sub_10035A628()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 384LL));
  return swift_task_switch(sub_10035A680, v1, 0LL);
}

uint64_t sub_10035A680()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_errorRelease(*(void *)(v0 + 360));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v11 = *(void *)(v0 + 56);
  swift_task_dealloc(*(void *)(v0 + 168));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035A73C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8LL);
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[21];
  v0[45] = v3;
  v2(v4, v1);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035A7A8()
{
  uint64_t v1 = v0[18];
  sub_100187100(v0[13], &qword_100649F88);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035A828()
{
  uint64_t v1 = v0[18];
  sub_100187100(v0[13], &qword_100649F88);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035A8A8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8LL);
  v2(v0[20], v0[17]);
  sub_100187100(v1, &qword_100649F88);
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035A93C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0[18] + 8LL);
  v2(v0[20], v0[17]);
  sub_100187100(v1, &qword_100649F88);
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[17];
  v0[45] = v3;
  v2(v4, v5);
  swift_errorRetain(v3);
  SFAirDropReceive.Failure.init(_:)(v3);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035A9D0()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[13];
  sub_100187100(v0[12], &qword_100650B10);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v1, v3);
  v6(v2, v3);
  sub_100187100(v5, &qword_100649F88);
  uint64_t v7 = v0[39];
  uint64_t v8 = v0[21];
  uint64_t v9 = v0[17];
  v0[45] = v7;
  v6(v8, v9);
  swift_errorRetain(v7);
  SFAirDropReceive.Failure.init(_:)(v7);
  return swift_task_switch(sub_10035A4F4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035AA8C(uint64_t a1)
{
  v2[13] = a1;
  v2[14] = v1;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  v2[15] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[16] = v4;
  v2[17] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100646560);
  v2[18] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  v2[19] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[20] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[21] = swift_task_alloc(v8);
  v2[22] = swift_task_alloc(v8);
  v2[23] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v2[24] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[25] = v10;
  v2[26] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(sub_100183098(&qword_10064A010) - 8);
  v2[27] = v11;
  uint64_t v12 = *(void *)(v11 + 64);
  v2[28] = v12;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v2[29] = swift_task_alloc(v13);
  v2[30] = swift_task_alloc(v13);
  uint64_t v14 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  v2[31] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v2[32] = v15;
  v2[33] = swift_task_alloc((*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
  v2[34] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v2[35] = v17;
  v2[36] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v2[37] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v2[38] = v19;
  unint64_t v20 = (*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[39] = swift_task_alloc(v20);
  v2[40] = swift_task_alloc(v20);
  uint64_t v21 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[41] = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  v2[42] = v22;
  unint64_t v23 = (*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[43] = swift_task_alloc(v23);
  v2[44] = swift_task_alloc(v23);
  uint64_t v24 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v2[45] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v2[46] = v25;
  unint64_t v26 = (*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[47] = swift_task_alloc(v26);
  v2[48] = swift_task_alloc(v26);
  v2[49] = swift_task_alloc(v26);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v27 = static AirDropActor.shared;
  v2[50] = static AirDropActor.shared;
  return swift_task_switch(sub_10035ACF0, v27, 0LL);
}

uint64_t sub_10035ACF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 392);
  uint64_t v3 = *(void *)(v1 + 360);
  uint64_t v4 = *(void *)(v1 + 368);
  uint64_t v5 = *(void *)(v1 + 352);
  uint64_t v7 = *(void *)(v1 + 328);
  uint64_t v6 = *(void *)(v1 + 336);
  uint64_t v8 = *(void *)(v1 + 320);
  uint64_t v9 = *(void *)(v1 + 304);
  *(void *)os_log_type_t typea = *(void *)(v1 + 296);
  uint64_t v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v10);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v12 = v11(v2, v3);
  SFAirDropReceive.AskRequest.type.getter(v12);
  unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v5, v7);
  int v14 = (*(uint64_t (**)(uint64_t, os_log_type_t *))(v9 + 88))(v8, *(os_log_type_t **)typea);
  uint64_t v15 = *(void *)(v1 + 320);
  uint64_t v16 = *(void *)(v1 + 296);
  uint64_t v17 = *(void *)(v1 + 304);
  if (v14 == enum case for SFAirDrop.TransferType.exchange(_:))
  {
    os_log_type_t type = (void (*)(uint8_t *, uint64_t))v11;
    uint64_t v18 = *(void *)(v1 + 256);
    uint64_t v19 = *(void **)(v1 + 264);
    uint64_t v20 = *(void *)(v1 + 248);
    (*(void (**)(uint64_t, uint64_t))(v17 + 96))(v15, v16);
    __n128 v21 = swift_bridgeObjectRelease((const char *)*(void *)(v15 + 8));
    void *v19 = 0xD000000000000012LL;
    v19[1] = 0x8000000100507360LL;
    (*(void (**)(void *, void, uint64_t, __n128))(v18 + 104))( v19,  enum case for SFAirDrop.ContactInfo.Handle.email(_:),  v20,  v21);
    uint64_t v22 = SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)( 0LL,  0LL,  0x65502064656B6146LL,  0xEC0000006E6F7372LL,  v19,  0LL,  0xC000000000000000LL);
    *(void *)(v1 + 408) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    unint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Share Contacts Permission START", v25, 2u);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    uint64_t v26 = *(void *)(v1 + 384);
    uint64_t v27 = *(void *)(v1 + 288);
    uint64_t v28 = *(void *)(v1 + 240);
    uint64_t v29 = *(void *)(v1 + 112);

    uint64_t v30 = v29 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess( v29 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler,  v1 + 56,  0LL,  0LL);
    sub_10019A6C4(v30, v1 + 16);
    uint64_t v31 = sub_10019A708((void *)(v1 + 16), *(void *)(v1 + 40));
    CurrentValueSubject.value.getter(v31);
    sub_1003C9654(v26, v27, v28);
    uint64_t v80 = *(void *)(v1 + 360);
    buf = *(uint8_t **)(v1 + 376);
    uint64_t v58 = *(void *)(v1 + 280);
    uint64_t v59 = *(void *)(v1 + 288);
    uint64_t v60 = *(void *)(v1 + 272);
    uint64_t v61 = *(void *)(v1 + 240);
    uint64_t v92 = *(void *)(v1 + 224);
    uint64_t v62 = *(void *)(v1 + 208);
    uint64_t v87 = *(void *)(v1 + 232);
    uint64_t v90 = *(void *)(v1 + 216);
    uint64_t v64 = *(void *)(v1 + 192);
    uint64_t v63 = *(void *)(v1 + 200);
    uint64_t v84 = *(void *)(v1 + 144);
    uint64_t v77 = *(void *)(v1 + 112);
    ((void (*)(void))type)(*(void *)(v1 + 384));
    sub_10018709C((void *)(v1 + 16));
    uint64_t v65 = v62 + *(int *)(sub_100183098(&qword_10064B778) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v62, v59, v60);
    uint64_t v66 = sub_100183098(&qword_10064B750);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16LL))(v65, v61, v66);
    (*(void (**)(uint64_t, void, uint64_t))(v63 + 104))( v62,  enum case for SFAirDropReceive.Transfer.State.waitingForShareContactPermissionResponse(_:),  v64);
    sub_10044E6FC(v62, (uint64_t)buf);
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
    type(buf, v80);
    uint64_t v67 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56LL))(v84, 1LL, 1LL, v67);
    sub_1001915A4(v61, v87, &qword_10064A010);
    uint64_t v68 = *(unsigned __int8 *)(v90 + 80);
    uint64_t v69 = (v68 + 16) & ~v68;
    uint64_t v70 = swift_allocObject(&unk_1005DCF08, v69 + v92, v68 | 7);
    *(void *)(v1 + 4swift_unknownObjectWeakDestroy(v0 + 16) = v70;
    sub_1001870BC(v87, v70 + v69, &qword_10064A010);
    uint64_t v71 = async function pointer to concurrentRace<A>(priority:operation:against:)[1];
    swift_retain(v77);
    uint64_t v72 = (void *)swift_task_alloc(v71);
    *(void *)(v1 + 424) = v72;
    void *v72 = v1;
    v72[1] = sub_10035B54C;
    return concurrentRace<A>(priority:operation:against:)( *(void *)(v1 + 176),  *(void *)(v1 + 144),  &unk_100650C38,  v70,  &unk_100650C48,  *(void *)(v1 + 112),  *(void *)(v1 + 152));
  }

  else
  {
    uint64_t v32 = *(void *)(v1 + 112);
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v33(*(void *)(v1 + 320), v16);
    uint64_t v34 = swift_retain_n(v32, 2LL);
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = *(void *)(v1 + 376);
      uint64_t v38 = *(void *)(v1 + 344);
      uint64_t v74 = *(void *)(v1 + 360);
      uint64_t v75 = *(void *)(v1 + 328);
      uint64_t v39 = v11;
      uint64_t v40 = *(void *)(v1 + 312);
      uint64_t v78 = *(void *)(v1 + 296);
      uint64_t v85 = *(void *)(v1 + 112);
      os_log_type_t typeb = v36;
      os_log_type_t v41 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v88 = swift_slowAlloc(32LL, -1LL);
      uint64_t v97 = v88;
      *(_DWORD *)os_log_type_t v41 = 136315138;
      uint64_t v42 = CurrentValueSubject.value.getter(v88);
      SFAirDropReceive.Transfer.askRequest.getter(v42);
      uint64_t v43 = v39(v37, v74);
      SFAirDropReceive.AskRequest.type.getter(v43);
      v13(v38, v75);
      uint64_t v44 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter(v78, v44);
      uint64_t v47 = v46;
      v33(v40, v78);
      *(void *)(v1 + 80) = sub_10018CDB4(v45, (unint64_t)v47, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 80, v1 + 88, v41 + 4, v41 + 12);
      swift_bridgeObjectRelease(v47);
      swift_release_n(v85, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v35, typeb, "Share Contacts Permission SKIP. {type: %s}", v41, 0xCu);
      swift_arrayDestroy(v88, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v88, -1LL, -1LL);
      swift_slowDealloc(v41, -1LL, -1LL);
    }

    else
    {
      uint64_t v48 = *(void *)(v1 + 112);

      swift_release_n(v48, 2LL);
    }

    uint64_t v50 = *(void *)(v1 + 384);
    uint64_t v49 = *(void *)(v1 + 392);
    uint64_t v51 = *(void *)(v1 + 376);
    uint64_t v53 = *(void *)(v1 + 344);
    uint64_t v52 = *(void *)(v1 + 352);
    uint64_t v55 = *(void *)(v1 + 312);
    uint64_t v54 = *(void *)(v1 + 320);
    uint64_t v56 = *(void *)(v1 + 288);
    uint64_t v57 = *(void *)(v1 + 264);
    uint64_t v76 = *(void *)(v1 + 240);
    uint64_t v79 = *(void *)(v1 + 232);
    bufa = *(uint8_t **)(v1 + 208);
    uint64_t v83 = *(void *)(v1 + 184);
    uint64_t v86 = *(void *)(v1 + 176);
    uint64_t v89 = *(void *)(v1 + 168);
    uint64_t v91 = *(void *)(v1 + 144);
    *(void *)typec = *(void *)(v1 + 136);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v1 + 160) + 56LL))( *(void *)(v1 + 104),  1LL,  1LL,  *(void *)(v1 + 152));
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    swift_task_dealloc(bufa);
    swift_task_dealloc(v83);
    swift_task_dealloc(v86);
    swift_task_dealloc(v89);
    swift_task_dealloc(v91);
    swift_task_dealloc(*(void *)typec);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_10035B54C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 424LL);
  *(void *)(*(void *)v1 + 432LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[52];
  uint64_t v5 = v2[50];
  uint64_t v6 = v2[18];
  uint64_t v7 = v2[14];
  sub_100187100(v6, &qword_100646560);
  swift_release(v7);
  swift_release(v4);
  if (v0) {
    uint64_t v8 = sub_10035B920;
  }
  else {
    uint64_t v8 = sub_10035B5E4;
  }
  return swift_task_switch(v8, v5, 0LL);
}

uint64_t sub_10035B5E4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v5 = *(void (**)(uint64_t, void, uint64_t))(v3 + 32);
  v5(v1, *(void *)(v0 + 176), v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v44 = *(void *)(v0 + 272);
    uint64_t v46 = *(void *)(v0 + 288);
    uint64_t v40 = *(void *)(v0 + 240);
    uint64_t v42 = *(void *)(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v48 = v5;
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v12 = swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter(v10, v13);
    uint64_t v16 = (const char *)v15;
    *(void *)(v0 + 96) = sub_10018CDB4(v14, v15, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 96, v0 + 104, v11 + 4, v11 + 12);
    __n128 v17 = swift_bridgeObjectRelease(v16);
    uint64_t v18 = v10;
    uint64_t v5 = v48;
    (*(void (**)(uint64_t, uint64_t, __n128))(v38 + 8))(v9, v18, v17);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Share Contacts Permission END {response: %s}", v11, 0xCu);
    swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);

    sub_100187100(v40, &qword_10064A010);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v46, v44);
  }

  else
  {
    uint64_t v20 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 272);
    uint64_t v22 = *(void *)(v0 + 240);
    uint64_t v24 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 168);
    uint64_t v25 = *(void *)(v0 + 152);

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    sub_100187100(v22, &qword_10064A010);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }

  v5(*(void *)(v0 + 104), *(void *)(v0 + 184), *(void *)(v0 + 152));
  uint64_t v27 = *(void *)(v0 + 384);
  uint64_t v26 = *(void *)(v0 + 392);
  uint64_t v28 = *(void *)(v0 + 376);
  uint64_t v30 = *(void *)(v0 + 344);
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v32 = *(void *)(v0 + 312);
  uint64_t v31 = *(void *)(v0 + 320);
  uint64_t v33 = *(void *)(v0 + 288);
  uint64_t v34 = *(void *)(v0 + 264);
  uint64_t v36 = *(void *)(v0 + 240);
  uint64_t v37 = *(void *)(v0 + 232);
  uint64_t v39 = *(void *)(v0 + 208);
  uint64_t v41 = *(void *)(v0 + 184);
  uint64_t v43 = *(void *)(v0 + 176);
  uint64_t v45 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 144);
  uint64_t v49 = *(void *)(v0 + 136);
  (*(void (**)(void, void, uint64_t, void))(*(void *)(v0 + 160) + 56LL))( *(void *)(v0 + 104),  0LL,  1LL,  *(void *)(v0 + 152));
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035B920()
{
  uint64_t v1 = *(void *)(v0 + 432);
  *(void *)(v0 + 88) = v1;
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if (!swift_dynamicCast(v2, v0 + 88, v4, v3, 0LL))
  {
    uint64_t v16 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 288);
    uint64_t v17 = *(void *)(v0 + 272);
    sub_100187100(*(void *)(v0 + 240), &qword_10064A010);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
LABEL_8:
    swift_errorRelease(*(void *)(v0 + 88));
    uint64_t v24 = *(void *)(v0 + 384);
    uint64_t v25 = *(void *)(v0 + 376);
    uint64_t v27 = *(void *)(v0 + 344);
    uint64_t v26 = *(void *)(v0 + 352);
    uint64_t v28 = *(void *)(v0 + 312);
    uint64_t v29 = *(void *)(v0 + 320);
    uint64_t v30 = *(void *)(v0 + 288);
    uint64_t v31 = *(void *)(v0 + 264);
    uint64_t v32 = *(void *)(v0 + 240);
    uint64_t v33 = *(void *)(v0 + 232);
    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 184);
    uint64_t v36 = *(void *)(v0 + 176);
    uint64_t v37 = *(void *)(v0 + 168);
    uint64_t v38 = *(void *)(v0 + 144);
    uint64_t v39 = *(void *)(v0 + 136);
    swift_task_dealloc(*(void *)(v0 + 392));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v29);
    swift_task_dealloc(v28);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  int v5 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 128) + 88LL))( *(void *)(v0 + 136),  *(void *)(v0 + 120));
  *(_DWORD *)(v0 + 456) = v5;
  if (v5 != enum case for SFAirDropReceive.Failure.receiverCancelled(_:))
  {
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 288);
    uint64_t v20 = *(void *)(v0 + 272);
    uint64_t v22 = *(void *)(v0 + 128);
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v23 = *(void *)(v0 + 120);
    sub_100187100(*(void *)(v0 + 240), &qword_10064A010);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    goto LABEL_8;
  }

  uint64_t v6 = swift_errorRelease(*(void *)(v0 + 432));
  uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Share Contacts Permission END - Cancelling exchange", v9, 2u);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  uint64_t v10 = type metadata accessor for CancellationError(0LL);
  uint64_t v11 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
  uint64_t v12 = swift_allocError(v10, v11, 0LL, 0LL);
  *(void *)(v0 + 440) = v12;
  CancellationError.init()();
  uint64_t v13 = (void *)swift_task_alloc(dword_100654E5C);
  *(void *)(v0 + 448) = v13;
  void *v13 = v0;
  v13[1] = sub_10035BC34;
  return sub_100420620(v12);
}

uint64_t sub_10035BC34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 440LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 400LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 448LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10035BC94, v2, 0LL);
}

uint64_t sub_10035BC94()
{
  uint64_t v1 = *(unsigned int *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v6, v8, 0LL, 0LL);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 104))(v9, v1, v6);
  swift_willThrow(v10);
  sub_100187100(v5, &qword_10064A010);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v4);
  swift_errorRelease(*(void *)(v0 + 88));
  uint64_t v11 = *(void *)(v0 + 384);
  uint64_t v12 = *(void *)(v0 + 376);
  uint64_t v14 = *(void *)(v0 + 344);
  uint64_t v13 = *(void *)(v0 + 352);
  uint64_t v15 = *(void *)(v0 + 312);
  uint64_t v16 = *(void *)(v0 + 320);
  uint64_t v17 = *(void *)(v0 + 288);
  uint64_t v18 = *(void *)(v0 + 264);
  uint64_t v19 = *(void *)(v0 + 240);
  uint64_t v21 = *(void *)(v0 + 232);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 176);
  uint64_t v25 = *(void *)(v0 + 168);
  uint64_t v26 = *(void *)(v0 + 144);
  uint64_t v27 = *(void *)(v0 + 136);
  swift_task_dealloc(*(void *)(v0 + 392));
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v15);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035BE38(uint64_t a1)
{
  v2[26] = a1;
  v2[27] = v1;
  uint64_t v3 = type metadata accessor for CancellationError(0LL);
  v2[28] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[29] = v4;
  v2[30] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100656450);
  v2[31] = v5;
  unint64_t v6 = (*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[32] = swift_task_alloc(v6);
  v2[33] = swift_task_alloc(v6);
  uint64_t v7 = sub_100183098(&qword_1006467E0);
  v2[34] = v7;
  unint64_t v8 = (*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[35] = swift_task_alloc(v8);
  v2[36] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SFNWInterfaceTypeCategory(0LL);
  v2[37] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v2[38] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[39] = swift_task_alloc(v11);
  v2[40] = swift_task_alloc(v11);
  uint64_t v12 = sub_100183098(&qword_100656490);
  v2[41] = swift_task_alloc((*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_100650B48);
  v2[42] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for SDAirDropServerConnection(0LL);
  v2[43] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v2[44] = v15;
  unint64_t v16 = (*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[45] = swift_task_alloc(v16);
  v2[46] = swift_task_alloc(v16);
  uint64_t v17 = type metadata accessor for SFAirDrop.Progress(0LL);
  v2[47] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v2[48] = v18;
  unint64_t v19 = (*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[49] = swift_task_alloc(v19);
  v2[50] = swift_task_alloc(v19);
  uint64_t v20 = sub_100183098(&qword_10064A0F0);
  v2[51] = swift_task_alloc((*(void *)(*(void *)(v20 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100183098(&qword_10064A0F8);
  v2[52] = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  v2[53] = v22;
  v2[54] = swift_task_alloc((*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v2[55] = v23;
  uint64_t v24 = *(void *)(v23 - 8);
  v2[56] = v24;
  v2[57] = swift_task_alloc((*(void *)(v24 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for SFNWInterfaceType(0LL);
  v2[58] = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  v2[59] = v26;
  unint64_t v27 = (*(void *)(v26 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[60] = swift_task_alloc(v27);
  v2[61] = swift_task_alloc(v27);
  v2[62] = swift_task_alloc(v27);
  uint64_t v28 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  v2[63] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v2[64] = v29;
  v2[65] = swift_task_alloc((*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_100183098(&qword_1006457E8);
  v2[66] = swift_task_alloc((*(void *)(*(void *)(v30 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = type metadata accessor for Date(0LL);
  v2[67] = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  v2[68] = v32;
  unint64_t v33 = (*(void *)(v32 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[69] = swift_task_alloc(v33);
  v2[70] = swift_task_alloc(v33);
  uint64_t v34 = sub_100183098(&qword_1006457D8);
  v2[71] = v34;
  uint64_t v35 = *(void *)(v34 - 8);
  v2[72] = v35;
  v2[73] = swift_task_alloc((*(void *)(v35 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_100183098(&qword_1006467E8);
  v2[74] = v36;
  uint64_t v37 = *(void *)(v36 - 8);
  v2[75] = v37;
  v2[76] = swift_task_alloc((*(void *)(v37 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v2[77] = v38;
  uint64_t v39 = *(void *)(v38 - 8);
  v2[78] = v39;
  unint64_t v40 = (*(void *)(v39 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[79] = swift_task_alloc(v40);
  v2[80] = swift_task_alloc(v40);
  uint64_t v41 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v2[81] = v41;
  uint64_t v42 = *(void *)(v41 - 8);
  v2[82] = v42;
  unint64_t v43 = (*(void *)(v42 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[83] = swift_task_alloc(v43);
  v2[84] = swift_task_alloc(v43);
  uint64_t v44 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v2[85] = v44;
  uint64_t v45 = *(void *)(v44 - 8);
  v2[86] = v45;
  unint64_t v46 = (*(void *)(v45 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[87] = swift_task_alloc(v46);
  v2[88] = swift_task_alloc(v46);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v47 = static AirDropActor.shared;
  v2[89] = static AirDropActor.shared;
  return swift_task_switch(sub_10035C26C, v47, 0LL);
}

uint64_t sub_10035C26C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 704);
  uint64_t v3 = *(void *)(v1 + 688);
  uint64_t v4 = *(void *)(v1 + 680);
  uint64_t v5 = *(void *)(v1 + 672);
  uint64_t v6 = *(void *)(v1 + 656);
  uint64_t v7 = *(void *)(v1 + 648);
  uint64_t v8 = *(void *)(v1 + 640);
  uint64_t v9 = *(void *)(v1 + 624);
  uint64_t v155 = *(void *)(v1 + 616);
  uint64_t v10 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v10);
  unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 720) = v11;
  uint64_t v12 = v11(v2, v4);
  SFAirDropReceive.AskRequest.type.getter(v12);
  uint64_t v159 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v13 = v159(v5, v7);
  char v14 = SFAirDrop.TransferType.isFiles.getter(v13);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v16 = v15(v8, v155);
  if ((v14 & 1) != 0) {
    goto LABEL_3;
  }
  uint64_t v17 = *(void *)(v1 + 696);
  uint64_t v18 = *(void *)(v1 + 680);
  uint64_t v19 = *(void *)(v1 + 664);
  uint64_t v20 = *(void *)(v1 + 648);
  uint64_t v21 = *(void *)(v1 + 632);
  uint64_t v22 = *(void *)(v1 + 616);
  uint64_t v23 = CurrentValueSubject.value.getter(v16);
  SFAirDropReceive.Transfer.askRequest.getter(v23);
  uint64_t v24 = v11(v17, v18);
  SFAirDropReceive.AskRequest.type.getter(v24);
  uint64_t v25 = v159(v19, v20);
  char v26 = SFAirDrop.TransferType.isCustom.getter(v25);
  uint64_t v16 = v15(v21, v22);
  if ((v26 & 1) != 0)
  {
LABEL_3:
    uint64_t v152 = (void (*)(uint64_t, uint64_t))v11;
    *(void *)(v1 + 728) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    unint64_t v27 = (os_log_s *)Logger.logObject.getter(v16);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Monitoring Transfer START", v29, 2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    uint64_t v30 = *(void *)(v1 + 584);
    uint64_t v31 = *(void *)(v1 + 576);
    uint64_t v32 = *(void *)(v1 + 568);
    uint64_t v33 = *(void *)(v1 + 544);
    uint64_t v34 = *(void *)(v1 + 536);
    uint64_t v35 = *(void *)(v1 + 528);
    uint64_t v36 = *(void *)(v1 + 216);

    uint64_t v37 = *(void *)(v36 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler);
    *(void *)(v1 + 736) = v37;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))( v30,  v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation,  v32);
    SFProgressContinuation.task.getter(v32);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    uint64_t v149 = v37;
    uint64_t v38 = v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart;
    swift_beginAccess( v37 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferStart,  v1 + 120,  0LL,  0LL);
    sub_1001915A4(v38, v35, &qword_1006457E8);
    int v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v35, 1LL, v34);
    uint64_t v40 = *(void *)(v1 + 560);
    if (v39 == 1)
    {
      uint64_t v41 = *(void *)(v1 + 528);
      static Date.now.getter(v40);
      sub_100187100(v41, &qword_1006457E8);
    }

    else
    {
      (*(void (**)(uint64_t, void, void))(*(void *)(v1 + 544) + 32LL))( v40,  *(void *)(v1 + 528),  *(void *)(v1 + 536));
    }

    uint64_t v42 = *(void *)(v1 + 696);
    uint64_t v156 = *(void *)(v1 + 680);
    uint64_t v117 = *(void *)(v1 + 664);
    uint64_t v121 = *(void *)(v1 + 648);
    uint64_t v161 = *(void *)(v1 + 608);
    uint64_t v43 = *(void *)(v1 + 520);
    uint64_t v132 = *(void *)(v1 + 512);
    uint64_t v134 = *(void *)(v1 + 504);
    uint64_t v123 = *(void *)(v1 + 496);
    uint64_t v139 = *(void *)(v1 + 440);
    uint64_t v144 = *(void *)(v1 + 592);
    uint64_t v44 = *(void *)(v1 + 376);
    uint64_t v130 = *(void *)(v1 + 384);
    uint64_t v119 = v44;
    uint64_t v136 = *(void *)(v1 + 448);
    uint64_t v126 = *(void *)(v1 + 456);
    uint64_t v128 = *(void *)(v1 + 208);
    uint64_t v45 = *(void *)(v1 + 216)
        + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
    swift_beginAccess(v45, v1 + 144, 0LL, 0LL);
    sub_10019A6C4(v45, v1 + 16);
    uint64_t v46 = *(void *)(v1 + 40);
    uint64_t v116 = *(void *)(v1 + 48);
    uint64_t v47 = sub_10019A708((void *)(v1 + 16), v46);
    CurrentValueSubject.value.getter(v47);
    uint64_t v48 = sub_100183098((uint64_t *)&unk_1006464E0);
    sub_1003C894C(v42, 0x726566736E617274LL, (void *)0xEC000000676E6972LL, v161, v46, v44, v48, v116, v43);
    v152(v42, v156);
    sub_10018709C((void *)(v1 + 16));
    sub_10019A6C4(v45, v1 + 56);
    uint64_t v49 = *(void *)(v1 + 80);
    uint64_t v50 = *(void *)(v1 + 88);
    uint64_t v51 = sub_10019A708((void *)(v1 + 56), v49);
    uint64_t v52 = CurrentValueSubject.value.getter(v51);
    SFAirDropReceive.Transfer.askRequest.getter(v52);
    v152(v42, v156);
    uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 64))(v117, v49, v50);
    uint64_t v55 = v54;
    *(void *)(v1 + 744) = v53;
    *(void *)(v1 + 752) = v54;
    v159(v117, v121);
    sub_10018709C((void *)(v1 + 56));
    sub_10041A534(v123);
    uint64_t v56 = (int *)sub_100183098(&qword_10064B770);
    *(void *)(v1 + 760) = v56;
    uint64_t v57 = v126 + v56[12];
    uint64_t v58 = (uint64_t *)(v126 + v56[16]);
    uint64_t v59 = v126 + v56[20];
    uint64_t v60 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
    *(void *)(v1 + 768) = v60;
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16LL);
    *(void *)(v1 + 776) = v61;
    v61(v126, v128, v60);
    uint64_t v62 = enum case for SFAirDrop.Progress.notStarted(_:);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 104);
    *(void *)(v1 + 784) = v63;
    v63(v57, v62, v119);
    uint64_t *v58 = sub_1002163A8(v53, v55);
    v58[1] = v64;
    uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16);
    *(void *)(v1 + 792) = v65;
    v65(v59, v43, v134);
    *(_DWORD *)(v1 + 880) = enum case for SFAirDropReceive.Transfer.State.transferring(_:);
    uint64_t v66 = *(void (**)(uint64_t))(v136 + 104);
    *(void *)(v1 + 800) = v66;
    v66(v126);
    sub_10044E6FC(v126, v42);
    uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
    *(void *)(v1 + 808) = v67;
    v67(v126, v139);
    v152(v42, v156);
    SFProgressTask.makeAsyncIterator()(v144);
    uint64_t v68 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    *(void *)(v1 + 8swift_unknownObjectWeakDestroy(v0 + 16) = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_uploadConnection;
    swift_beginAccess(v149 + v68, v1 + 96, 0LL, 0LL);
    *(_DWORD *)(v1 + 884) = enum case for SFNWInterfaceType.other(_:);
    *(_DWORD *)(v1 + 888) = enum case for SFAirDrop.Progress.completed(_:);
    *(_DWORD *)(v1 + 892) = enum case for SFNWInterfaceTypeCategory.regular(_:);
    uint64_t v69 = static AirDropActor.shared;
    uint64_t v70 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v71 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v1 + 824) = v71;
    *uint64_t v71 = v1;
    v71[1] = sub_10035CDB8;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF( *(void *)(v1 + 408),  v69,  v70,  *(void *)(v1 + 416),  v1 + 176);
  }

  else
  {
    uint64_t v73 = swift_retain_n(*(void *)(v1 + 216), 2LL);
    uint64_t v74 = (os_log_s *)Logger.logObject.getter(v73);
    os_log_type_t v75 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = *(void *)(v1 + 696);
      uint64_t v77 = *(void *)(v1 + 664);
      uint64_t v140 = *(void *)(v1 + 680);
      uint64_t v142 = *(void *)(v1 + 648);
      uint64_t v153 = v11;
      uint64_t v78 = *(void *)(v1 + 632);
      uint64_t v146 = *(void *)(v1 + 616);
      uint64_t v150 = *(void *)(v1 + 216);
      uint64_t v79 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v157 = swift_slowAlloc(32LL, -1LL);
      uint64_t v163 = v157;
      *(_DWORD *)uint64_t v79 = 136315138;
      uint64_t v80 = CurrentValueSubject.value.getter(v157);
      SFAirDropReceive.Transfer.askRequest.getter(v80);
      uint64_t v81 = v153(v76, v140);
      SFAirDropReceive.AskRequest.type.getter(v81);
      v159(v77, v142);
      uint64_t v82 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter(v146, v82);
      uint64_t v85 = v84;
      uint64_t v86 = v78;
      unint64_t v11 = v153;
      v15(v86, v146);
      *(void *)(v1 + 168) = sub_10018CDB4(v83, (unint64_t)v85, &v163);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 168, v1 + 176, v79 + 4, v79 + 12);
      swift_bridgeObjectRelease(v85);
      swift_release_n(v150, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Monitoring Transfer SKIP. {type: %s}", v79, 0xCu);
      swift_arrayDestroy(v157, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v157, -1LL, -1LL);
      swift_slowDealloc(v79, -1LL, -1LL);
    }

    else
    {
      uint64_t v88 = *(void *)(v1 + 216);

      uint64_t v87 = swift_release_n(v88, 2LL);
    }

    uint64_t v89 = *(void *)(v1 + 696);
    uint64_t v90 = *(void *)(v1 + 680);
    uint64_t v91 = *(void *)(v1 + 664);
    uint64_t v92 = *(void *)(v1 + 648);
    uint64_t v93 = *(void *)(v1 + 632);
    uint64_t v94 = *(void *)(v1 + 616);
    uint64_t v95 = CurrentValueSubject.value.getter(v87);
    SFAirDropReceive.Transfer.askRequest.getter(v95);
    uint64_t v96 = v11(v89, v90);
    SFAirDropReceive.AskRequest.type.getter(v96);
    uint64_t v97 = v159(v91, v92);
    char v98 = SFAirDrop.TransferType.isLinks.getter(v97);
    uint64_t v99 = v15(v93, v94);
    if ((v98 & 1) != 0)
    {
      uint64_t v100 = *(void *)(v1 + 696);
      uint64_t v101 = *(void *)(v1 + 680);
      uint64_t v102 = *(void *)(v1 + 664);
      uint64_t v103 = *(void *)(v1 + 648);
      uint64_t v104 = CurrentValueSubject.value.getter(v99);
      SFAirDropReceive.Transfer.askRequest.getter(v104);
      v105.n128_f64[0] = ((double (*)(uint64_t, uint64_t))v11)(v100, v101);
      __n128 v106 = (const char *)SFAirDropReceive.AskRequest.urlItems.getter(v105);
      v159(v102, v103);
      uint64_t v162 = sub_10018D21C((uint64_t)v106);
      swift_bridgeObjectRelease(v106);
    }

    else
    {
      uint64_t v162 = _swiftEmptyArrayStorage;
    }

    uint64_t v107 = *(void *)(v1 + 696);
    uint64_t v108 = *(void *)(v1 + 672);
    uint64_t v109 = *(void *)(v1 + 664);
    uint64_t v110 = *(void *)(v1 + 640);
    uint64_t v111 = *(void *)(v1 + 632);
    uint64_t v112 = *(void *)(v1 + 608);
    uint64_t v113 = *(void *)(v1 + 584);
    uint64_t v114 = *(void *)(v1 + 560);
    uint64_t v115 = *(void *)(v1 + 552);
    uint64_t v118 = *(void *)(v1 + 528);
    uint64_t v120 = *(void *)(v1 + 520);
    uint64_t v122 = *(void *)(v1 + 496);
    uint64_t v124 = *(void *)(v1 + 488);
    uint64_t v125 = *(void *)(v1 + 480);
    uint64_t v127 = *(void *)(v1 + 456);
    uint64_t v129 = *(void *)(v1 + 432);
    uint64_t v131 = *(void *)(v1 + 408);
    uint64_t v133 = *(void *)(v1 + 400);
    uint64_t v135 = *(void *)(v1 + 392);
    uint64_t v137 = *(void *)(v1 + 368);
    uint64_t v138 = *(void *)(v1 + 360);
    uint64_t v141 = *(void *)(v1 + 336);
    uint64_t v143 = *(void *)(v1 + 328);
    uint64_t v145 = *(void *)(v1 + 320);
    uint64_t v147 = *(void *)(v1 + 312);
    uint64_t v148 = *(void *)(v1 + 288);
    uint64_t v151 = *(void *)(v1 + 280);
    uint64_t v154 = *(void *)(v1 + 264);
    uint64_t v158 = *(void *)(v1 + 256);
    uint64_t v160 = *(void *)(v1 + 240);
    swift_task_dealloc(*(void *)(v1 + 704));
    swift_task_dealloc(v107);
    swift_task_dealloc(v108);
    swift_task_dealloc(v109);
    swift_task_dealloc(v110);
    swift_task_dealloc(v111);
    swift_task_dealloc(v112);
    swift_task_dealloc(v113);
    swift_task_dealloc(v114);
    swift_task_dealloc(v115);
    swift_task_dealloc(v118);
    swift_task_dealloc(v120);
    swift_task_dealloc(v122);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v127);
    swift_task_dealloc(v129);
    swift_task_dealloc(v131);
    swift_task_dealloc(v133);
    swift_task_dealloc(v135);
    swift_task_dealloc(v137);
    swift_task_dealloc(v138);
    swift_task_dealloc(v141);
    swift_task_dealloc(v143);
    swift_task_dealloc(v145);
    swift_task_dealloc(v147);
    swift_task_dealloc(v148);
    swift_task_dealloc(v151);
    swift_task_dealloc(v154);
    swift_task_dealloc(v158);
    swift_task_dealloc(v160);
    return (*(uint64_t (**)(void *, double))(v1 + 8))(v162, 0.0);
  }

uint64_t sub_10035CDB8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc(*(void *)(*v1 + 824));
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 712);
    swift_bridgeObjectRelease(*(const char **)(v2 + 752));
    uint64_t v4 = sub_10035E3E0;
    uint64_t v5 = v3;
  }

  else
  {
    uint64_t v5 = *(void *)(v2 + 712);
    uint64_t v4 = sub_10035CE28;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_10035CE28()
{
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v3 = *(void *)(v0 + 384);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1LL, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 424) + 8LL))(*(void *)(v0 + 432), *(void *)(v0 + 416));
    uint64_t v4 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
    *(void *)(v0 + 832) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10035D5F8;
    return SFProgressTask.finalValue.getter(v0 + 200, *(void *)(v0 + 592));
  }

  else
  {
    uint64_t v6 = *(void *)(v0 + 344);
    uint64_t v7 = *(void *)(v0 + 352);
    uint64_t v8 = *(void *)(v0 + 336);
    uint64_t v9 = *(void *)(v0 + 736) + *(void *)(v0 + 816);
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 400), v1, v2);
    sub_1001915A4(v9, v8, &qword_100650B48);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1LL, v6) == 1)
    {
      sub_100187100(*(void *)(v0 + 336), &qword_100650B48);
      if (qword_100644370 != -1) {
        swift_once(&qword_100644370, sub_10042322C);
      }
      uint64_t v10 = type metadata accessor for Logger(0LL);
      uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100654D20);
      uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
      os_log_type_t v13 = static os_log_type_t.error.getter(v12);
      if (os_log_type_enabled(v12, v13))
      {
        char v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)char v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "UPLOAD connection is not active", v14, 2u);
        swift_slowDealloc(v14, -1LL, -1LL);
      }

      uint64_t v15 = *(unsigned int *)(v0 + 884);
      uint64_t v16 = *(void *)(v0 + 488);
      uint64_t v17 = *(void *)(v0 + 464);
      uint64_t v18 = *(void *)(v0 + 472);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 104))(v16, v15, v17);
    }

    else
    {
      uint64_t v19 = *(void *)(v0 + 360);
      uint64_t v20 = *(void *)(v0 + 368);
      uint64_t v21 = *(void *)(v0 + 344);
      sub_1001A4B40(*(void *)(v0 + 336), v20, type metadata accessor for SDAirDropServerConnection);
      sub_10036EA94(v20, v19);
      if (swift_getEnumCaseMultiPayload(v19, v21) > 1)
      {
        uint64_t v23 = *(uint64_t **)(v0 + 360);
        uint64_t v22 = *v23;
        uint64_t v24 = (char *)v23 + *(int *)(sub_100183098(&qword_100649710) + 48);
        uint64_t v25 = type metadata accessor for UUID(0LL);
        (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8LL))(v24, v25);
      }

      else
      {
        uint64_t v22 = **(void **)(v0 + 360);
      }

      uint64_t v26 = *(void *)(v0 + 368);
      sub_100410970(*(void *)(v0 + 488));
      swift_release(v22);
      sub_1001A4BC8(v26, type metadata accessor for SDAirDropServerConnection);
    }

    int v27 = *(_DWORD *)(v0 + 888);
    uint64_t v28 = *(void *)(v0 + 392);
    uint64_t v29 = *(void *)(v0 + 376);
    uint64_t v30 = *(void *)(v0 + 384);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v31(v28, *(void *)(v0 + 400), v29);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v30 + 88))(v28, v29) == v27)
    {
      uint64_t v32 = *(const char ***)(v0 + 392);
      (*(void (**)(const char **, void))(*(void *)(v0 + 384) + 96LL))(v32, *(void *)(v0 + 376));
      swift_bridgeObjectRelease(*v32);
      uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
      os_log_type_t v35 = static os_log_type_t.default.getter();
      BOOL v36 = os_log_type_enabled(v34, v35);
      uint64_t v37 = *(void *)(v0 + 496);
      uint64_t v38 = *(void *)(v0 + 464);
      uint64_t v39 = *(void *)(v0 + 472);
      uint64_t v40 = *(void *)(v0 + 400);
      uint64_t v41 = *(void *)(v0 + 376);
      uint64_t v42 = *(void *)(v0 + 384);
      if (v36)
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Pipelined UPLOAD already complete", v43, 2u);
        swift_slowDealloc(v43, -1LL, -1LL);
      }

      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    }

    else
    {
      uint64_t v100 = *(void (**)(uint64_t, void, uint64_t))(v0 + 800);
      unsigned int v99 = *(_DWORD *)(v0 + 880);
      uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 792);
      uint64_t v44 = *(int **)(v0 + 760);
      uint64_t v94 = *(const char **)(v0 + 752);
      uint64_t v45 = *(void *)(v0 + 744);
      uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
      uint64_t v103 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
      uint64_t v98 = *(void *)(v0 + 696);
      uint64_t v101 = *(void *)(v0 + 680);
      uint64_t v95 = *(void *)(v0 + 504);
      uint64_t v96 = *(void *)(v0 + 520);
      uint64_t v106 = *(void *)(v0 + 496);
      uint64_t v104 = *(void *)(v0 + 488);
      uint64_t v46 = *(void *)(v0 + 456);
      uint64_t v105 = *(void *)(v0 + 464);
      uint64_t v47 = *(void *)(v0 + 440);
      uint64_t v48 = *(void *)(v0 + 400);
      uint64_t v49 = *(void *)(v0 + 376);
      uint64_t v50 = v46 + v44[12];
      uint64_t v51 = (uint64_t *)(v46 + v44[16]);
      uint64_t v52 = v46 + v44[20];
      (*(void (**)(uint64_t, void, void))(v0 + 776))(v46, *(void *)(v0 + 208), *(void *)(v0 + 768));
      v31(v50, v48, v49);
      *uint64_t v51 = sub_1002163A8(v45, v94);
      v51[1] = v53;
      v97(v52, v96, v95);
      v100(v46, v99, v47);
      sub_10044E6FC(v46, v98);
      v103(v46, v47);
      v102(v98, v101);
      uint64_t v54 = sub_100183F14( &qword_100649DD0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceType,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceType);
      uint64_t v55 = dispatch thunk of static Equatable.== infix(_:_:)(v104, v106, v105, v54);
      if ((v55 & 1) == 0)
      {
        uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 720);
        uint64_t v57 = *(void *)(v0 + 696);
        uint64_t v58 = *(void *)(v0 + 680);
        uint64_t v59 = *(void *)(v0 + 464);
        uint64_t v60 = *(void *)(v0 + 472);
        uint64_t v61 = *(void *)(v0 + 328);
        (*(void (**)(uint64_t, void, uint64_t))(v60 + 16))(v61, *(void *)(v0 + 488), v59);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v61, 0LL, 1LL, v59);
        sub_10044EAF0(v61, v57);
        sub_100187100(v61, &qword_100656490);
        uint64_t v55 = v56(v57, v58);
      }

      uint64_t v62 = *(unsigned int *)(v0 + 892);
      uint64_t v63 = *(void *)(v0 + 488);
      uint64_t v107 = *(void *)(v0 + 480);
      uint64_t v65 = *(void *)(v0 + 464);
      uint64_t v64 = *(void *)(v0 + 472);
      uint64_t v67 = *(void *)(v0 + 312);
      uint64_t v66 = *(void *)(v0 + 320);
      uint64_t v68 = *(void *)(v0 + 296);
      uint64_t v69 = *(void *)(v0 + 304);
      SFNWInterfaceType.category()(v55);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 104))(v67, v62, v68);
      uint64_t v70 = sub_100183F14( &qword_10064A110,  (uint64_t (*)(uint64_t))&type metadata accessor for SFNWInterfaceTypeCategory,  (uint64_t)&protocol conformance descriptor for SFNWInterfaceTypeCategory);
      char v71 = dispatch thunk of static Equatable.== infix(_:_:)(v66, v67, v68, v70);
      uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
      v72(v67, v68);
      v72(v66, v68);
      uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v107, v63, v65);
      if ((v71 & 1) != 0)
      {
        uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8LL);
        v74(*(void *)(v0 + 480), *(void *)(v0 + 464));
      }

      else
      {
        uint64_t v76 = *(void *)(v0 + 472);
        uint64_t v75 = *(void *)(v0 + 480);
        uint64_t v108 = *(void *)(v0 + 464);
        uint64_t v78 = *(void *)(v0 + 312);
        uint64_t v77 = *(void *)(v0 + 320);
        uint64_t v79 = *(void *)(v0 + 296);
        uint64_t v80 = SFNWInterfaceType.category()(v73);
        SFNWInterfaceType.category()(v80);
        char v81 = dispatch thunk of static Equatable.== infix(_:_:)(v77, v78, v79, v70);
        v72(v78, v79);
        v72(v77, v79);
        uint64_t v74 = *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8);
        uint64_t v82 = v74(v75, v108);
        if ((v81 & 1) == 0)
        {
          uint64_t v83 = (os_log_s *)Logger.logObject.getter(v82);
          os_log_type_t v84 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v83, v84))
          {
            uint64_t v85 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)uint64_t v85 = 0;
            _os_log_impl( (void *)&_mh_execute_header,  v83,  v84,  "AirDrop interface changed to high priority category",  v85,  2u);
            swift_slowDealloc(v85, -1LL, -1LL);
          }

          sub_10045349C(3.0);
        }
      }

      uint64_t v86 = *(void *)(v0 + 496);
      uint64_t v87 = *(void *)(v0 + 464);
      uint64_t v88 = *(void *)(v0 + 392);
      uint64_t v89 = *(void *)(v0 + 376);
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 384) + 8LL);
      v90(*(void *)(v0 + 400), v89);
      v74(v86, v87);
      v90(v88, v89);
    }

    (*(void (**)(void, void, void))(*(void *)(v0 + 472) + 32LL))( *(void *)(v0 + 496),  *(void *)(v0 + 488),  *(void *)(v0 + 464));
    uint64_t v91 = static AirDropActor.shared;
    uint64_t v92 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v93 = (void *)swift_task_alloc(_sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKFTu[1]);
    *(void *)(v0 + 824) = v93;
    void *v93 = v0;
    v93[1] = sub_10035CDB8;
    return _sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF( *(void *)(v0 + 408),  v91,  v92,  *(void *)(v0 + 416),  v0 + 176);
  }

uint64_t sub_10035D5F8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 832);
  *(void *)(*v1 + 840) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 712);
    swift_bridgeObjectRelease(*(const char **)(v2 + 752));
    uint64_t v5 = sub_10035E59C;
    uint64_t v6 = v4;
  }

  else
  {
    uint64_t v6 = *(void *)(v2 + 712);
    uint64_t v5 = sub_10035D66C;
  }

  return swift_task_switch(v5, v6, 0LL);
}

uint64_t sub_10035D66C()
{
  unsigned int v62 = *(_DWORD *)(v0 + 888);
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v0 + 808);
  uint64_t v68 = *(void (**)(uint64_t, void, uint64_t))(v0 + 800);
  unsigned int v66 = *(_DWORD *)(v0 + 880);
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 792);
  uint64_t v1 = *(int **)(v0 + 760);
  uint64_t v57 = *(void *)(v0 + 752);
  uint64_t v59 = *(void (**)(const char **, void, uint64_t))(v0 + 784);
  uint64_t v55 = *(void *)(v0 + 744);
  uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
  uint64_t v2 = *(void *)(v0 + 696);
  uint64_t v72 = *(void *)(v0 + 680);
  uint64_t v84 = *(void *)(v0 + 552);
  uint64_t v90 = *(void *)(v0 + 560);
  uint64_t v51 = *(void *)(v0 + 504);
  uint64_t v53 = *(void *)(v0 + 520);
  uint64_t v70 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v74 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 328);
  uint64_t v7 = (const char **)(v3 + v1[12]);
  uint64_t v8 = (void *)(v3 + v1[16]);
  uint64_t v9 = v3 + v1[20];
  uint64_t v10 = *(const char **)(v0 + 200);
  (*(void (**)(uint64_t, void, void))(v0 + 776))(v3, *(void *)(v0 + 208), *(void *)(v0 + 768));
  *uint64_t v7 = v10;
  v59(v7, v62, v5);
  *uint64_t v8 = v55;
  v8[1] = v57;
  v64(v9, v53, v51);
  v68(v3, v66, v4);
  uint64_t v69 = v10;
  swift_bridgeObjectRetain(v10);
  sub_10044E6FC(v3, v2);
  v80(v3, v4);
  v77(v2, v72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v6, 1LL, 1LL, v74);
  sub_10044EAF0(v6, v2);
  sub_100187100(v6, &qword_100656490);
  uint64_t v11 = ((uint64_t (*)(uint64_t, uint64_t))v77)(v2, v72);
  static Date.now.getter(v11);
  sub_100183F14( (unint64_t *)&unk_100656470,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)(v90, v84);
  if ((result & 1) != 0)
  {
    uint64_t v13 = *(void *)(v0 + 552);
    uint64_t v75 = *(void **)(v0 + 544);
    uint64_t v14 = *(void *)(v0 + 536);
    uint64_t v81 = *(void *)(v0 + 280);
    uint64_t v85 = *(void *)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 248);
    uint64_t v16 = *(void *)(v0 + 256);
    uint64_t v91 = *(void *)(v0 + 272);
    uint64_t v18 = v15 + *(int *)(v17 + 48);
    uint64_t v19 = (void (*)(uint64_t, uint64_t, uint64_t))v75[2];
    v19(v15, *(void *)(v0 + 560), v14);
    uint64_t v20 = (void (*)(uint64_t, uint64_t, uint64_t))v75[4];
    uint64_t v78 = v18;
    v20(v18, v13, v14);
    uint64_t v21 = v16 + *(int *)(v17 + 48);
    v19(v16, v15, v14);
    v19(v21, v18, v14);
    v20(v81, v16, v14);
    uint64_t v22 = (void (*)(uint64_t, uint64_t))v75[1];
    v22(v21, v14);
    uint64_t v23 = v16 + *(int *)(v17 + 48);
    v20(v16, v15, v14);
    v20(v23, v78, v14);
    v20(v81 + *(int *)(v91 + 36), v23, v14);
    uint64_t v92 = v22;
    v22(v16, v14);
    uint64_t v24 = sub_1001870BC(v81, v85, &qword_1006467E0);
    double v25 = ClosedRange<>.interval.getter(v24);
    uint64_t v26 = sub_100187100(v85, &qword_1006467E0);
    int v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Monitoring Transfer END", v29, 2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    uint64_t v82 = *(void *)(v0 + 600);
    uint64_t v86 = *(void *)(v0 + 592);
    uint64_t v88 = *(void *)(v0 + 608);
    uint64_t v30 = *(void *)(v0 + 560);
    uint64_t v31 = *(void *)(v0 + 536);
    uint64_t v32 = *(void *)(v0 + 520);
    uint64_t v34 = *(void *)(v0 + 504);
    uint64_t v33 = *(void *)(v0 + 512);
    uint64_t v35 = *(void *)(v0 + 496);
    uint64_t v37 = *(void *)(v0 + 464);
    uint64_t v36 = *(void *)(v0 + 472);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    v92(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v88, v86);
    uint64_t v38 = *(void *)(v0 + 696);
    uint64_t v39 = *(void *)(v0 + 672);
    uint64_t v40 = *(void *)(v0 + 664);
    uint64_t v41 = *(void *)(v0 + 640);
    uint64_t v42 = *(void *)(v0 + 632);
    uint64_t v43 = *(void *)(v0 + 608);
    uint64_t v44 = *(void *)(v0 + 584);
    uint64_t v45 = *(void *)(v0 + 560);
    uint64_t v46 = *(void *)(v0 + 552);
    uint64_t v47 = *(void *)(v0 + 528);
    uint64_t v48 = *(void *)(v0 + 520);
    uint64_t v49 = *(void *)(v0 + 496);
    uint64_t v50 = *(void *)(v0 + 488);
    uint64_t v52 = *(void *)(v0 + 480);
    uint64_t v54 = *(void *)(v0 + 456);
    uint64_t v56 = *(void *)(v0 + 432);
    uint64_t v58 = *(void *)(v0 + 408);
    uint64_t v60 = *(void *)(v0 + 400);
    uint64_t v61 = *(void *)(v0 + 392);
    uint64_t v63 = *(void *)(v0 + 368);
    uint64_t v65 = *(void *)(v0 + 360);
    uint64_t v67 = *(void *)(v0 + 336);
    uint64_t v71 = *(void *)(v0 + 328);
    uint64_t v73 = *(void *)(v0 + 320);
    uint64_t v76 = *(void *)(v0 + 312);
    uint64_t v79 = *(void *)(v0 + 288);
    uint64_t v83 = *(void *)(v0 + 280);
    uint64_t v87 = *(void *)(v0 + 264);
    uint64_t v89 = *(void *)(v0 + 256);
    uint64_t v93 = *(void *)(v0 + 240);
    swift_task_dealloc(*(void *)(v0 + 704));
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v54);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v63);
    swift_task_dealloc(v65);
    swift_task_dealloc(v67);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v76);
    swift_task_dealloc(v79);
    swift_task_dealloc(v83);
    swift_task_dealloc(v87);
    swift_task_dealloc(v89);
    swift_task_dealloc(v93);
    return (*(uint64_t (**)(const char *, double))(v0 + 8))(v69, v25);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10035DC54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 856LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 712LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 864LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10035DCB8, v2, 0LL);
}

uint64_t sub_10035DCB8()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 720);
  uint64_t v2 = *(void *)(v0 + 696);
  uint64_t v3 = *(void *)(v0 + 680);
  uint64_t v4 = *(void *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 472) + 56LL))( v4,  1LL,  1LL,  *(void *)(v0 + 464));
  sub_10044EAF0(v4, v2);
  sub_100187100(v4, &qword_100656490);
  uint64_t v5 = v1(v2, v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Monitoring Transfer END - Cancelled.", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v10 = *(void *)(v0 + 232);
  uint64_t v9 = *(void *)(v0 + 240);
  uint64_t v11 = *(void *)(v0 + 224);

  uint64_t v12 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v13 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
  swift_allocError(v12, v13, 0LL, 0LL);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104LL))( v14,  enum case for SFAirDropReceive.Failure.senderCancelled(_:),  v12);
  swift_willThrow(v15);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_errorRelease(*(void *)(v0 + 184));
  uint64_t v16 = *(void *)(v0 + 696);
  uint64_t v17 = *(void *)(v0 + 672);
  uint64_t v18 = *(void *)(v0 + 664);
  uint64_t v19 = *(void *)(v0 + 640);
  uint64_t v20 = *(void *)(v0 + 632);
  uint64_t v21 = *(void *)(v0 + 608);
  uint64_t v22 = *(void *)(v0 + 584);
  uint64_t v23 = *(void *)(v0 + 560);
  uint64_t v24 = *(void *)(v0 + 552);
  uint64_t v26 = *(void *)(v0 + 528);
  uint64_t v27 = *(void *)(v0 + 520);
  uint64_t v28 = *(void *)(v0 + 496);
  uint64_t v29 = *(void *)(v0 + 488);
  uint64_t v30 = *(void *)(v0 + 480);
  uint64_t v31 = *(void *)(v0 + 456);
  uint64_t v32 = *(void *)(v0 + 432);
  uint64_t v33 = *(void *)(v0 + 408);
  uint64_t v34 = *(void *)(v0 + 400);
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 368);
  uint64_t v37 = *(void *)(v0 + 360);
  uint64_t v38 = *(void *)(v0 + 336);
  uint64_t v39 = *(void *)(v0 + 328);
  uint64_t v40 = *(void *)(v0 + 320);
  uint64_t v41 = *(void *)(v0 + 312);
  uint64_t v42 = *(void *)(v0 + 288);
  uint64_t v43 = *(void *)(v0 + 280);
  uint64_t v44 = *(void *)(v0 + 264);
  uint64_t v45 = *(void *)(v0 + 256);
  uint64_t v46 = *(void *)(v0 + 240);
  swift_task_dealloc(*(void *)(v0 + 704));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035DFF4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 848LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 712LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 872LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10035E058, v2, 0LL);
}

uint64_t sub_10035E058()
{
  uint64_t v1 = *(void *)(v0 + 848);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 720);
  uint64_t v3 = *(void *)(v0 + 696);
  uint64_t v4 = *(void *)(v0 + 680);
  uint64_t v5 = *(void *)(v0 + 328);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0 + 472) + 56LL))( v5,  1LL,  1LL,  *(void *)(v0 + 464));
  sub_10044EAF0(v5, v3);
  sub_100187100(v5, &qword_100656490);
  v2(v3, v4);
  swift_errorRetain(v1);
  uint64_t v6 = swift_errorRetain(v1);
  os_log_type_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 848);
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain(v9);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(void *)(v0 + 192) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v10 + 4, v10 + 12);
    *uint64_t v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Monitoring Transfer END - Failure {%@}", v10, 0xCu);
    uint64_t v13 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v11, 1LL, v13);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    uint64_t v15 = *(void *)(v0 + 848);

    swift_errorRelease(v15);
    uint64_t v14 = swift_errorRelease(v15);
  }

  swift_willThrow(v14);
  uint64_t v16 = *(void *)(v0 + 696);
  uint64_t v17 = *(void *)(v0 + 672);
  uint64_t v18 = *(void *)(v0 + 664);
  uint64_t v19 = *(void *)(v0 + 640);
  uint64_t v20 = *(void *)(v0 + 632);
  uint64_t v21 = *(void *)(v0 + 608);
  uint64_t v22 = *(void *)(v0 + 584);
  uint64_t v23 = *(void *)(v0 + 560);
  uint64_t v24 = *(void *)(v0 + 552);
  uint64_t v26 = *(void *)(v0 + 528);
  uint64_t v27 = *(void *)(v0 + 520);
  uint64_t v28 = *(void *)(v0 + 496);
  uint64_t v29 = *(void *)(v0 + 488);
  uint64_t v30 = *(void *)(v0 + 480);
  uint64_t v31 = *(void *)(v0 + 456);
  uint64_t v32 = *(void *)(v0 + 432);
  uint64_t v33 = *(void *)(v0 + 408);
  uint64_t v34 = *(void *)(v0 + 400);
  uint64_t v35 = *(void *)(v0 + 392);
  uint64_t v36 = *(void *)(v0 + 368);
  uint64_t v37 = *(void *)(v0 + 360);
  uint64_t v38 = *(void *)(v0 + 336);
  uint64_t v39 = *(void *)(v0 + 328);
  uint64_t v40 = *(void *)(v0 + 320);
  uint64_t v41 = *(void *)(v0 + 312);
  uint64_t v42 = *(void *)(v0 + 288);
  uint64_t v43 = *(void *)(v0 + 280);
  uint64_t v44 = *(void *)(v0 + 264);
  uint64_t v45 = *(void *)(v0 + 256);
  uint64_t v46 = *(void *)(v0 + 240);
  swift_task_dealloc(*(void *)(v0 + 704));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035E3E0()
{
  uint64_t v21 = v0[75];
  uint64_t v22 = v0[74];
  uint64_t v23 = v0[76];
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  uint64_t v4 = v0[65];
  uint64_t v6 = v0[63];
  uint64_t v5 = v0[64];
  uint64_t v7 = v0[62];
  uint64_t v8 = v0[58];
  uint64_t v9 = v0[59];
  (*(void (**)(void, void))(v0[53] + 8LL))(v0[54], v0[52]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  uint64_t v10 = v0[22];
  v0[23] = v10;
  v0[106] = v10;
  uint64_t v11 = v0[30];
  uint64_t v12 = v0[28];
  swift_errorRetain(v10);
  uint64_t v13 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v11, v0 + 23, v13, v12, 0LL))
  {
    uint64_t v14 = v0[28];
    swift_errorRelease(v10);
    uint64_t v15 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
    uint64_t v16 = swift_allocError(v14, v15, 0LL, 0LL);
    v0[107] = v16;
    CancellationError.init()();
    uint64_t v17 = (void *)swift_task_alloc(dword_100654E5C);
    v0[108] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_10035DC54;
    uint64_t v18 = v16;
  }

  else
  {
    swift_errorRelease(v0[23]);
    swift_errorRetain(v10);
    uint64_t v19 = (void *)swift_task_alloc(dword_100654E5C);
    v0[109] = v19;
    void *v19 = v0;
    v19[1] = sub_10035DFF4;
    uint64_t v18 = v10;
  }

  return sub_100420620(v18);
}

uint64_t sub_10035E59C()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[70];
  uint64_t v5 = v0[68];
  uint64_t v6 = v0[67];
  uint64_t v7 = v0[65];
  uint64_t v8 = v0[63];
  uint64_t v9 = v0[64];
  (*(void (**)(void, void))(v0[59] + 8LL))(v0[62], v0[58]);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v10 = v0[105];
  v0[23] = v10;
  v0[106] = v10;
  uint64_t v11 = v0[30];
  uint64_t v12 = v0[28];
  swift_errorRetain(v10);
  uint64_t v13 = sub_100183098(&qword_100645710);
  if (swift_dynamicCast(v11, v0 + 23, v13, v12, 0LL))
  {
    uint64_t v14 = v0[28];
    swift_errorRelease(v10);
    uint64_t v15 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
    uint64_t v16 = swift_allocError(v14, v15, 0LL, 0LL);
    v0[107] = v16;
    CancellationError.init()();
    uint64_t v17 = (void *)swift_task_alloc(dword_100654E5C);
    v0[108] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_10035DC54;
    uint64_t v18 = v16;
  }

  else
  {
    swift_errorRelease(v0[23]);
    swift_errorRetain(v10);
    uint64_t v19 = (void *)swift_task_alloc(dword_100654E5C);
    v0[109] = v19;
    void *v19 = v0;
    v19[1] = sub_10035DFF4;
    uint64_t v18 = v10;
  }

  return sub_100420620(v18);
}

uint64_t sub_10035E738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[4] = a3;
  v4[5] = v3;
  void v4[3] = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10035E7A4, static AirDropActor.shared, 0LL);
}

uint64_t sub_10035E7A4(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v5 = swift_slowAlloc(32LL, -1LL);
    uint64_t v10 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100507330LL, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 16, v1 + 24, v4 + 4, v4 + 12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Analyzing full content SKIP {userSafetyMode: %s}", v4, 0xCu);
    swift_arrayDestroy(v5, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1LL, -1LL);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(v6, v7, v8);
  return (*(uint64_t (**)(void))(v1 + 8))(0LL);
}

uint64_t sub_10035E91C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  *(void *)(v8 + 632) = v7;
  *(void *)(v8 + 624) = a6;
  *(void *)(v8 + 6swift_unknownObjectWeakDestroy(v0 + 16) = a5;
  *(void *)(v8 + 608) = a4;
  *(double *)(v8 + 600) = a7;
  *(_BYTE *)(v8 + 1143) = a3;
  *(void *)(v8 + 592) = a2;
  *(void *)(v8 + 584) = a1;
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  *(void *)(v8 + 640) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 648) = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 656) = swift_task_alloc(v11);
  *(void *)(v8 + 664) = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for SFPlatform(0LL);
  *(void *)(v8 + 672) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v8 + 680) = v13;
  *(void *)(v8 + 688) = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100183098(&qword_100650B10);
  *(void *)(v8 + 696) = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  *(void *)(v8 + 704) = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  *(void *)(v8 + 712) = v16;
  unint64_t v17 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 720) = swift_task_alloc(v17);
  *(void *)(v8 + 728) = swift_task_alloc(v17);
  uint64_t v18 = sub_100183098(&qword_100646800);
  *(void *)(v8 + 736) = swift_task_alloc((*(void *)(*(void *)(v18 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100183098(&qword_1006467F8);
  *(void *)(v8 + 744) = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  *(void *)(v8 + 752) = v20;
  unint64_t v21 = (*(void *)(v20 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 760) = swift_task_alloc(v21);
  *(void *)(v8 + 768) = swift_task_alloc(v21);
  uint64_t v22 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  *(void *)(v8 + 776) = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  *(void *)(v8 + 784) = v23;
  unint64_t v24 = (*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 792) = swift_task_alloc(v24);
  *(void *)(v8 + 800) = swift_task_alloc(v24);
  *(void *)(v8 + 808) = swift_task_alloc(v24);
  *(void *)(v8 + 8swift_unknownObjectWeakDestroy(v0 + 16) = swift_task_alloc(v24);
  *(void *)(v8 + 824) = swift_task_alloc(v24);
  *(void *)(v8 + 832) = swift_task_alloc(v24);
  *(void *)(v8 + 840) = swift_task_alloc(v24);
  uint64_t v25 = type metadata accessor for SFAirDrop.TransferType(0LL);
  *(void *)(v8 + 848) = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  *(void *)(v8 + 856) = v26;
  unint64_t v27 = (*(void *)(v26 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 864) = swift_task_alloc(v27);
  *(void *)(v8 + 872) = swift_task_alloc(v27);
  uint64_t v28 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  *(void *)(v8 + 880) = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  *(void *)(v8 + 888) = v29;
  unint64_t v30 = (*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 896) = swift_task_alloc(v30);
  *(void *)(v8 + 904) = swift_task_alloc(v30);
  uint64_t v31 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  *(void *)(v8 + 912) = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  *(void *)(v8 + 920) = v32;
  unint64_t v33 = (*(void *)(v32 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v8 + 928) = swift_task_alloc(v33);
  *(void *)(v8 + 936) = swift_task_alloc(v33);
  *(void *)(v8 + 944) = swift_task_alloc(v33);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v34 = static AirDropActor.shared;
  *(void *)(v8 + 952) = static AirDropActor.shared;
  return swift_task_switch(sub_10035EBE8, v34, 0LL);
}

uint64_t sub_10035EBE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 944);
  uint64_t v3 = *(void *)(v1 + 936);
  uint64_t v4 = *(void *)(v1 + 920);
  uint64_t v5 = *(void *)(v1 + 912);
  uint64_t v6 = *(void *)(v1 + 904);
  uint64_t v7 = *(void *)(v1 + 896);
  uint64_t v174 = v1 + 528;
  uint64_t v178 = *(void *)(v1 + 888);
  uint64_t v183 = *(void *)(v1 + 880);
  uint64_t v188 = v5;
  uint64_t v8 = *(void *)(v1 + 872);
  uint64_t v199 = *(void *)(v1 + 864);
  uint64_t v192 = *(void *)(v1 + 856);
  uint64_t v194 = *(void *)(v1 + 848);
  *(void *)(v1 + 960) = *(void *)(*(void *)(v1 + 632)
                                    + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  uint64_t v9 = CurrentValueSubject.value.getter(a1);
  SFAirDropReceive.Transfer.askRequest.getter(v9);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 968) = v10;
  uint64_t v11 = v10(v2, v5);
  SFAirDropReceive.AskRequest.type.getter(v11);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v178 + 8);
  uint64_t v13 = v6;
  uint64_t v14 = v10;
  uint64_t v15 = v12(v13, v183);
  int v179 = SFAirDrop.TransferType.isPeerPayment.getter(v15);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v192 + 8);
  uint64_t v17 = v16(v8, v194);
  uint64_t v18 = CurrentValueSubject.value.getter(v17);
  SFAirDropReceive.Transfer.askRequest.getter(v18);
  uint64_t v19 = v10(v3, v188);
  SFAirDropReceive.AskRequest.type.getter(v19);
  uint64_t v20 = v12(v7, v183);
  char v21 = SFAirDrop.TransferType.isLinks.getter(v20);
  uint64_t v22 = v16(v199, v194);
  if ((v21 & 1) == 0)
  {
    uint64_t v23 = (void (*)(uint64_t, uint64_t))v16;
    uint64_t v24 = *(void *)(v1 + 944);
    uint64_t v25 = v12;
    uint64_t v26 = v14;
    uint64_t v27 = *(void *)(v1 + 912);
    uint64_t v28 = *(void *)(v1 + 904);
    uint64_t v29 = *(void *)(v1 + 880);
    uint64_t v30 = *(void *)(v1 + 872);
    uint64_t v200 = *(void *)(v1 + 848);
    uint64_t v31 = CurrentValueSubject.value.getter(v22);
    SFAirDropReceive.Transfer.askRequest.getter(v31);
    uint64_t v32 = v24;
    unint64_t v33 = v23;
    uint64_t v34 = v26(v32, v27);
    SFAirDropReceive.AskRequest.type.getter(v34);
    uint64_t v35 = v25(v28, v29);
    int v36 = SFAirDrop.TransferType.isFiles.getter(v35);
    v23(v30, v200);
    if (((v36 | v179) & 1) == 0)
    {
      uint64_t v76 = swift_retain_n(*(void *)(v1 + 632), 2LL);
      uint64_t v77 = (os_log_s *)Logger.logObject.getter(v76);
      os_log_type_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = *(void *)(v1 + 944);
        uint64_t v164 = *(void *)(v1 + 912);
        uint64_t v80 = *(void *)(v1 + 904);
        uint64_t v167 = *(void *)(v1 + 880);
        int v170 = (void (*)(uint64_t, uint64_t))v25;
        uint64_t v81 = *(void *)(v1 + 872);
        uint64_t v185 = *(void *)(v1 + 848);
        uint64_t v197 = *(void *)(v1 + 632);
        uint64_t v82 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v202 = swift_slowAlloc(32LL, -1LL);
        v205[0] = v202;
        *(_DWORD *)uint64_t v82 = 136315138;
        uint64_t v83 = CurrentValueSubject.value.getter(v202);
        SFAirDropReceive.Transfer.askRequest.getter(v83);
        uint64_t v84 = v26(v79, v164);
        SFAirDropReceive.AskRequest.type.getter(v84);
        v170(v80, v167);
        uint64_t v85 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter(v185, v85);
        uint64_t v88 = v87;
        v33(v81, v185);
        *(void *)(v1 + 520) = sub_10018CDB4(v86, (unint64_t)v88, v205);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 520, v174, v82 + 4, v82 + 12);
        swift_bridgeObjectRelease(v88);
        swift_release_n(v197, 2LL);
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Ask open/move SKIP. {type: %s}", v82, 0xCu);
        swift_arrayDestroy(v202, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v202, -1LL, -1LL);
        swift_slowDealloc(v82, -1LL, -1LL);

        goto LABEL_18;
      }

      uint64_t v92 = *(void *)(v1 + 632);

      uint64_t v91 = v92;
LABEL_17:
      swift_release_n(v91, 2LL);
      goto LABEL_18;
    }
  }

  uint64_t v37 = *(void *)(v1 + 632);
  uint64_t v38 = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  *(void *)(v1 + 976) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  uint64_t v39 = v37 + v38;
  swift_beginAccess(v37 + v38, v1 + 456, 0LL, 0LL);
  sub_10019A6C4(v39, v1 + 96);
  uint64_t v40 = sub_100183098(&qword_100656430);
  *(void *)(v1 + 984) = v40;
  uint64_t v41 = sub_100183098(&qword_100646808);
  if (!swift_dynamicCast(v1 + 176, v1 + 96, v40, v41, 6LL))
  {
    uint64_t v60 = *(void *)(v1 + 632);
    *(_OWORD *)(v1 + 176) = 0u;
    *(_OWORD *)(v1 + 192) = 0u;
    *(void *)(v1 + 208) = 0LL;
    sub_100187100(v1 + 176, &qword_100646810);
    uint64_t v61 = swift_retain_n(v60, 2LL);
    unsigned int v62 = (os_log_s *)Logger.logObject.getter(v61);
    os_log_type_t v63 = static os_log_type_t.default.getter();
    BOOL v64 = os_log_type_enabled(v62, v63);
    uint64_t v65 = *(void *)(v1 + 632);
    if (v64)
    {
      unsigned int v66 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v67 = swift_slowAlloc(32LL, -1LL);
      v205[0] = v67;
      *(_DWORD *)unsigned int v66 = 136315138;
      sub_10019A6C4(v39, v1 + 216);
      uint64_t v68 = *(void *)(v1 + 240);
      uint64_t v69 = sub_10019A708((void *)(v1 + 216), v68);
      uint64_t DynamicType = swift_getDynamicType(v69, v68, 1LL);
      uint64_t v71 = *(void *)(v1 + 248);
      sub_10018709C((void *)(v1 + 216));
      *(void *)(v1 + 504) = DynamicType;
      *(void *)(v1 + 512) = v71;
      uint64_t v72 = sub_100183098(&qword_100646818);
      uint64_t v73 = String.init<A>(describing:)(v1 + 504, v72);
      uint64_t v75 = (const char *)v74;
      *(void *)(v1 + 528) = sub_10018CDB4(v73, v74, v205);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v174, v1 + 536, v66 + 4, v66 + 12);
      swift_bridgeObjectRelease(v75);
      swift_release_n(v65, 2LL);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Ask open/move SKIP. {handler: %s}", v66, 0xCu);
      swift_arrayDestroy(v67, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1LL, -1LL);
      swift_slowDealloc(v66, -1LL, -1LL);

LABEL_18:
      uint64_t v93 = *(const char **)(v1 + 616);
      uint64_t v94 = *(void *)(v1 + 592);
      (*(void (**)(void, void, void))(*(void *)(v1 + 784) + 16LL))( *(void *)(v1 + 584),  *(void *)(v1 + 624),  *(void *)(v1 + 776));
      uint64_t v95 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56LL))(v94, 1LL, 1LL, v95);
      swift_bridgeObjectRetain(v93);
      unsigned int v161 = 0;
LABEL_19:
      uint64_t v160 = *(void *)(v1 + 616);
      uint64_t v96 = *(void *)(v1 + 936);
      uint64_t v97 = *(void *)(v1 + 928);
      uint64_t v98 = *(void *)(v1 + 904);
      uint64_t v99 = *(void *)(v1 + 896);
      uint64_t v100 = *(void *)(v1 + 872);
      uint64_t v101 = *(void *)(v1 + 864);
      uint64_t v102 = *(void *)(v1 + 840);
      uint64_t v103 = *(void *)(v1 + 832);
      uint64_t v104 = *(void *)(v1 + 824);
      uint64_t v162 = *(void *)(v1 + 816);
      uint64_t v163 = *(void *)(v1 + 808);
      uint64_t v165 = *(void *)(v1 + 800);
      uint64_t v166 = *(void *)(v1 + 792);
      uint64_t v168 = *(void *)(v1 + 768);
      uint64_t v171 = *(void *)(v1 + 760);
      uint64_t v176 = *(void *)(v1 + 736);
      uint64_t v181 = *(void *)(v1 + 728);
      uint64_t v186 = *(void *)(v1 + 720);
      uint64_t v189 = *(void *)(v1 + 696);
      uint64_t v193 = *(void *)(v1 + 688);
      uint64_t v198 = *(void *)(v1 + 664);
      uint64_t v203 = *(void *)(v1 + 656);
      swift_task_dealloc(*(void *)(v1 + 944));
      swift_task_dealloc(v96);
      swift_task_dealloc(v97);
      swift_task_dealloc(v98);
      swift_task_dealloc(v99);
      swift_task_dealloc(v100);
      swift_task_dealloc(v101);
      swift_task_dealloc(v102);
      swift_task_dealloc(v103);
      swift_task_dealloc(v104);
      swift_task_dealloc(v162);
      swift_task_dealloc(v163);
      swift_task_dealloc(v165);
      swift_task_dealloc(v166);
      swift_task_dealloc(v168);
      swift_task_dealloc(v171);
      swift_task_dealloc(v176);
      swift_task_dealloc(v181);
      swift_task_dealloc(v186);
      swift_task_dealloc(v189);
      swift_task_dealloc(v193);
      swift_task_dealloc(v198);
      swift_task_dealloc(v203);
      return (*(uint64_t (**)(void, uint64_t))(v1 + 8))(v161, v160);
    }

    uint64_t v91 = v65;
    goto LABEL_17;
  }

  uint64_t v42 = *(void *)(v1 + 624);
  double v43 = *(double *)(v1 + 600);
  int v195 = *(unsigned __int8 *)(v1 + 1143);
  sub_1001CE0D0((__int128 *)(v1 + 176), v1 + 56);
  *(_BYTE *)(v1 + 1140) = 0;
  sub_10019A6C4(v39, v1 + 376);
  uint64_t v44 = *(void *)(v1 + 400);
  uint64_t v45 = *(void *)(v1 + 408);
  sub_10019A708((void *)(v1 + 376), v44);
  LOBYTE(v44) = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
  *(_BYTE *)(v1 + 1144) = v44 & 1;
  sub_10018709C((void *)(v1 + 376));
  sub_10019A6C4(v39, v1 + 416);
  uint64_t v46 = *(void *)(v1 + 440);
  uint64_t v47 = *(void *)(v1 + 448);
  sub_10019A708((void *)(v1 + 416), v46);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
  uint64_t v201 = (char *)(v1 + 1140);
  *(_BYTE *)(v1 + 1145) = v48 & 1;
  sub_10018709C((void *)(v1 + 416));
  uint64_t v49 = sub_10026D764(v42, v43);
  if ((v44 & 1) != 0 || ((v48 | v195) & v49 & 1) != 0)
  {
    uint64_t v89 = (void *)swift_task_alloc(dword_100650BD4);
    *(void *)(v1 + 992) = v89;
    *uint64_t v89 = v1;
    v89[1] = sub_10035FEAC;
    return sub_10036C84C(*(void *)(v1 + 840), *(void *)(v1 + 608), *(void *)(v1 + 616), *(void *)(v1 + 624));
  }

  uint64_t v196 = (void *)(v1 + 336);
  uint64_t v175 = v1 + 1120;
  uint64_t v180 = v1 + 1116;
  uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = *(void *)(v1 + 600);
    int v53 = *(unsigned __int8 *)(v1 + 1143);
    uint64_t v54 = swift_slowAlloc(30LL, -1LL);
    *(_DWORD *)uint64_t v54 = 67109888;
    *(_DWORD *)(v1 + 1112) = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1112, v180, v54 + 4, v54 + 8);
    *(_WORD *)(v54 + 8) = 1024;
    *(_DWORD *)(v1 + 1132) = v48 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1132, v1 + 1136, v54 + 10, v54 + 14);
    *(_WORD *)(v54 + 14) = 1024;
    *(_DWORD *)(v1 + 1120) = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v175, v1 + 1124, v54 + 16, v54 + 20);
    *(_WORD *)(v54 + 20) = 2048;
    *(void *)(v1 + 552) = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 552, v1 + 560, v54 + 22, v54 + 30);
    _os_log_impl( (void *)&_mh_execute_header,  v50,  v51,  "Not auto-opening URLs {shouldEndAfterAutoOpen: %{BOOL}d, supportsAutoOpen: %{BOOL}d, requestedAutoOpen: %{BOOL}d, transferImportSeconds: %f}",  (uint8_t *)v54,  0x1Eu);
    swift_slowDealloc(v54, -1LL, -1LL);
  }

  uint64_t v55 = *(void *)(v1 + 984);
  sub_10019A6C4(*(void *)(v1 + 632) + *(void *)(v1 + 976), v1 + 136);
  uint64_t v56 = sub_100183098(&qword_100650BB8);
  if ((swift_dynamicCast(v1 + 296, v1 + 136, v55, v56, 6LL) & 1) != 0)
  {
    uint64_t v57 = *(void *)(v1 + 616);
    sub_1001CE0D0((__int128 *)(v1 + 296), v1 + 256);
    uint64_t v58 = *(void *)(v1 + 280);
    uint64_t v59 = *(void *)(v1 + 288);
    sub_10019A708((void *)(v1 + 256), v58);
    char v184 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 8))(v57, v58, v59);
    sub_10018709C((void *)(v1 + 256));
  }

  else
  {
    *(void *)(v1 + 328) = 0LL;
    *(_OWORD *)(v1 + 296) = 0u;
    *(_OWORD *)(v1 + 312) = 0u;
    sub_100187100(v1 + 296, &qword_100650BC0);
    char v184 = 0;
  }

  int v105 = *(unsigned __int8 *)(v1 + 1144);
  char v190 = *(void (**)(uint64_t, uint64_t))(v1 + 968);
  uint64_t v106 = *(void *)(v1 + 944);
  uint64_t v107 = *(void *)(v1 + 912);
  sub_10019A6C4(*(void *)(v1 + 632) + *(void *)(v1 + 976), (uint64_t)v196);
  uint64_t v108 = *(void *)(v1 + 360);
  uint64_t v109 = *(void *)(v1 + 368);
  uint64_t v110 = sub_10019A708(v196, v108);
  CurrentValueSubject.value.getter(v110);
  char v111 = sub_1003CA1CC(v106, v105, *v201, v184 & 1, v108, v109);
  v190(v106, v107);
  sub_10018709C(v196);
  if ((v111 & 1) == 0)
  {
    uint64_t v133 = *(const char **)(v1 + 616);
    uint64_t v134 = *(void *)(v1 + 592);
    unsigned int v161 = *v201;
    (*(void (**)(void, void, void))(*(void *)(v1 + 784) + 16LL))( *(void *)(v1 + 584),  *(void *)(v1 + 624),  *(void *)(v1 + 776));
    uint64_t v135 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56LL))(v134, 1LL, 1LL, v135);
    swift_bridgeObjectRetain(v133);
    sub_10018709C((void *)(v1 + 56));
    goto LABEL_19;
  }

  uint64_t v112 = (void *)(v1 + 16);
  uint64_t v113 = *(void *)(v1 + 832);
  uint64_t v114 = *(void *)(v1 + 784);
  uint64_t v115 = *(void *)(v1 + 776);
  uint64_t v116 = *(void *)(v1 + 624);
  *(void *)(v1 + 1024) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  int v117 = *v201;
  uint64_t v118 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 16);
  *(void *)(v1 + 1032) = v118;
  uint64_t v119 = v118(v113, v116, v115);
  uint64_t v120 = (os_log_s *)Logger.logObject.getter(v119);
  os_log_type_t v121 = static os_log_type_t.default.getter();
  BOOL v122 = os_log_type_enabled(v120, v121);
  uint64_t v123 = *(void *)(v1 + 832);
  uint64_t v187 = (void (*)(uint64_t, uint64_t, uint64_t))v118;
  if (v122)
  {
    uint64_t v124 = *(void *)(v1 + 824);
    uint64_t v169 = *(void *)(v1 + 784);
    uint64_t v125 = *(void *)(v1 + 776);
    uint64_t v126 = swift_slowAlloc(18LL, -1LL);
    uint64_t v172 = swift_slowAlloc(32LL, -1LL);
    v205[0] = v172;
    *(_DWORD *)uint64_t v126 = 67109378;
    *(_DWORD *)(v1 + 11swift_unknownObjectWeakDestroy(v0 + 16) = v117;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v180, v175, v126 + 4, v126 + 8);
    *(_WORD *)(v126 + 8) = 2080;
    v118(v124, v123, v125);
    uint64_t v127 = String.init<A>(describing:)(v124, v125);
    uint64_t v129 = (const char *)v128;
    *(void *)(v1 + 576) = sub_10018CDB4(v127, v128, v205);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 576, v1 + 584, v126 + 10, v126 + 18);
    __n128 v130 = swift_bridgeObjectRelease(v129);
    uint64_t v131 = *(void (**)(uint64_t, uint64_t, __n128))(v169 + 8);
    uint64_t v132 = v125;
    uint64_t v112 = (void *)(v1 + 16);
    v131(v123, v132, v130);
    _os_log_impl( (void *)&_mh_execute_header,  v120,  v121,  "Ask open/move START. {alreadyViewed: %{BOOL}d, destination: %s}",  (uint8_t *)v126,  0x12u);
    swift_arrayDestroy(v172, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v172, -1LL, -1LL);
    swift_slowDealloc(v126, -1LL, -1LL);
  }

  else
  {
    uint64_t v136 = *(void *)(v1 + 784);
    uint64_t v137 = *(void *)(v1 + 776);

    uint64_t v131 = *(void (**)(uint64_t, uint64_t, __n128))(v136 + 8);
    ((void (*)(uint64_t, uint64_t))v131)(v123, v137);
  }

  *(void *)(v1 + 1040) = v131;
  uint64_t v138 = *(void *)(v1 + 928);
  uint64_t v139 = *(void *)(v1 + 736);
  uint64_t v140 = *(const char **)(v1 + 624);
  uint64_t v141 = *(const char **)(v1 + 616);
  sub_10019A6C4(*(void *)(v1 + 632) + *(void *)(v1 + 976), (uint64_t)v112);
  uint64_t v142 = *(void *)(v1 + 40);
  uint64_t v143 = *(void *)(v1 + 48);
  uint64_t v144 = sub_10019A708(v112, v142);
  CurrentValueSubject.value.getter(v144);
  swift_beginAccess(v201, v1 + 480, 0LL, 0LL);
  sub_1003C8C9C(v138, v141, *v201, v140, v142, v143, v139);
  uint64_t v145 = *(void (**)(uint64_t, uint64_t))(v1 + 968);
  uint64_t v204 = *(void *)(v1 + 944);
  uint64_t v146 = *(void *)(v1 + 776);
  uint64_t v147 = *(void *)(v1 + 728);
  uint64_t v173 = *(void *)(v1 + 736);
  uint64_t v177 = *(void *)(v1 + 712);
  uint64_t v182 = *(void *)(v1 + 704);
  uint64_t v191 = *(void *)(v1 + 912);
  uint64_t v148 = *(void *)(v1 + 624);
  uint64_t v149 = *(const char **)(v1 + 616);
  uint64_t v150 = *(const char **)(v1 + 608);
  ((void (*)(void))v145)(*(void *)(v1 + 928));
  sub_10018709C((void *)(v1 + 16));
  uint64_t v151 = (int *)sub_100183098((uint64_t *)&unk_10064B760);
  uint64_t v152 = v151[12];
  uint64_t v153 = v151[16];
  uint64_t v154 = v147 + v151[20];
  v187(v147, v148, v146);
  *(void *)(v147 + v152) = v150;
  *(void *)(v147 + v153) = v149;
  uint64_t v155 = sub_100183098(&qword_1006451B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16LL))(v154, v173, v155);
  uint64_t v156 = enum case for SFAirDropReceive.Transfer.State.waitingForOpenResponse(_:);
  uint64_t v157 = *(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 104);
  *(void *)(v1 + 1048) = v157;
  v157(v147, v156, v182);
  *(void *)&double v158 = swift_bridgeObjectRetain(v150).n128_u64[0];
  swift_bridgeObjectRetain(v149, v158);
  sub_10044E6FC(v147, v204);
  v145(v204, v191);
  uint64_t v159 = (void *)swift_task_alloc(dword_100650BCC);
  *(void *)(v1 + 1056) = v159;
  *uint64_t v159 = v1;
  v159[1] = sub_100360BD8;
  return sub_10036D160(*(void *)(v1 + 816), *(void *)(v1 + 696), *(void *)(v1 + 736), *(void *)(v1 + 624));
}

uint64_t sub_10035FEAC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 992);
  *(void *)(*v1 + 1000) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_1003615F8;
  }
  else {
    uint64_t v4 = sub_10035FF10;
  }
  return swift_task_switch(v4, *(void *)(v2 + 952), 0LL);
}

uint64_t sub_10035FF10(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v1 + 1145);
    int v5 = *(unsigned __int8 *)(v1 + 1144);
    uint64_t v6 = *(void *)(v1 + 600);
    int v7 = *(unsigned __int8 *)(v1 + 1143);
    uint64_t v8 = swift_slowAlloc(30LL, -1LL);
    *(_DWORD *)uint64_t v8 = 67109888;
    *(_DWORD *)(v1 + 1136) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1136, v1 + 1140, v8 + 4, v8 + 8);
    *(_WORD *)(v8 + 8) = 1024;
    *(_DWORD *)(v1 + 1128) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1128, v1 + 1132, v8 + 10, v8 + 14);
    *(_WORD *)(v8 + 14) = 1024;
    *(_DWORD *)(v1 + 1124) = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 1124, v1 + 1128, v8 + 16, v8 + 20);
    *(_WORD *)(v8 + 20) = 2048;
    *(void *)(v1 + 568) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 568, v1 + 576, v8 + 22, v8 + 30);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Opening autoOpen URLs {shouldEndAfterAutoOpen: %{BOOL}d, supportsAutoOpen: %{BOOL}d, requestedAutoOpen: %{BOOL}d, transferImportSeconds: %f}",  (uint8_t *)v8,  0x1Eu);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v9 = *(void *)(v1 + 840);
  uint64_t v10 = *(void *)(v1 + 616);

  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  sub_10019A708((void *)(v1 + 56), v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(v10, v9, v11, v12);
  uint64_t v13 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  *(void *)(v1 + 1008) = v13;
  void *v13 = v1;
  v13[1] = sub_1003600F4;
  return SFProgressTask.finalValue.getter(v1 + 1142, *(void *)(v1 + 744));
}

uint64_t sub_1003600F4()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1008LL);
  *(void *)(*(void *)v1 + 1016LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[119];
  (*(void (**)(void, void))(v2[94] + 8LL))(v2[96], v2[93]);
  if (v0) {
    int v5 = sub_100361A58;
  }
  else {
    int v5 = sub_100360178;
  }
  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_100360178()
{
  uint64_t v1 = (char *)(v0 + 1140);
  (*(void (**)(void, void))(*(void *)(v0 + 784) + 8LL))(*(void *)(v0 + 840), *(void *)(v0 + 776));
  *(_BYTE *)(v0 + 1140) = *(_BYTE *)(v0 + 1142);
  uint64_t v2 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 984);
  sub_10019A6C4(*(void *)(v0 + 632) + *(void *)(v0 + 976), v0 + 136);
  uint64_t v4 = sub_100183098(&qword_100650BB8);
  uint64_t v128 = v2;
  uint64_t v132 = (void *)(v0 + 56);
  if ((swift_dynamicCast(v0 + 296, v0 + 136, v3, v4, 6LL) & 1) != 0)
  {
    uint64_t v5 = *(void *)(v0 + 616);
    sub_1001CE0D0((__int128 *)(v0 + 296), v0 + 256);
    uint64_t v6 = *(void *)(v0 + 280);
    uint64_t v7 = *(void *)(v0 + 288);
    sub_10019A708((void *)(v0 + 256), v6);
    char v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, v6, v7);
    sub_10018709C((void *)(v0 + 256));
  }

  else
  {
    *(void *)(v0 + 328) = 0LL;
    *(_OWORD *)(v0 + 296) = 0u;
    *(_OWORD *)(v0 + 312) = 0u;
    sub_100187100(v0 + 296, &qword_100650BC0);
    char v134 = 0;
  }

  int v8 = *(unsigned __int8 *)(v0 + 1144);
  uint64_t v139 = *(void (**)(uint64_t, uint64_t))(v0 + 968);
  uint64_t v9 = *(void *)(v0 + 944);
  uint64_t v10 = *(void *)(v0 + 912);
  sub_10019A6C4(*(void *)(v0 + 632) + *(void *)(v0 + 976), v0 + 336);
  uint64_t v11 = *(void *)(v0 + 360);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v13 = sub_10019A708((void *)(v0 + 336), v11);
  CurrentValueSubject.value.getter(v13);
  char v14 = sub_1003CA1CC(v9, v8, *v1, v134 & 1, v11, v12);
  v139(v9, v10);
  sub_10018709C((void *)(v0 + 336));
  if ((v14 & 1) == 0)
  {
    uint64_t v37 = *(const char **)(v0 + 616);
    uint64_t v38 = *(void *)(v0 + 592);
    unsigned int v103 = *v1;
    (*(void (**)(void, void, void))(*(void *)(v0 + 784) + 16LL))( *(void *)(v0 + 584),  *(void *)(v0 + 624),  *(void *)(v0 + 776));
    uint64_t v39 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v38, 1LL, 1LL, v39);
    swift_bridgeObjectRetain(v37);
    sub_10018709C(v132);
    uint64_t v40 = *(void **)(v0 + 616);
LABEL_8:
    uint64_t v101 = v40;
    uint64_t v41 = *(void *)(v0 + 936);
    uint64_t v42 = *(void *)(v0 + 928);
    uint64_t v43 = *(void *)(v0 + 904);
    uint64_t v44 = *(void *)(v0 + 896);
    uint64_t v45 = *(void *)(v0 + 872);
    uint64_t v46 = *(void *)(v0 + 864);
    uint64_t v47 = *(void *)(v0 + 840);
    uint64_t v48 = *(void *)(v0 + 832);
    uint64_t v49 = *(void *)(v0 + 824);
    uint64_t v105 = *(void *)(v0 + 816);
    uint64_t v107 = *(void *)(v0 + 808);
    uint64_t v109 = *(void *)(v0 + 800);
    uint64_t v111 = *(void *)(v0 + 792);
    uint64_t v113 = *(void *)(v0 + 768);
    uint64_t v115 = *(void *)(v0 + 760);
    uint64_t v119 = *(void *)(v0 + 736);
    uint64_t v123 = *(void *)(v0 + 728);
    uint64_t v125 = *(void *)(v0 + 720);
    uint64_t v129 = *(void *)(v0 + 696);
    uint64_t v133 = *(void *)(v0 + 688);
    uint64_t v136 = *(void *)(v0 + 664);
    uint64_t v141 = *(void *)(v0 + 656);
    swift_task_dealloc(*(void *)(v0 + 944));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v105);
    swift_task_dealloc(v107);
    swift_task_dealloc(v109);
    swift_task_dealloc(v111);
    swift_task_dealloc(v113);
    swift_task_dealloc(v115);
    swift_task_dealloc(v119);
    swift_task_dealloc(v123);
    swift_task_dealloc(v125);
    swift_task_dealloc(v129);
    swift_task_dealloc(v133);
    swift_task_dealloc(v136);
    swift_task_dealloc(v141);
    return (*(uint64_t (**)(void, void *))(v0 + 8))(v103, v101);
  }

  uint64_t v15 = v0 + 16;
  uint64_t v16 = *(void *)(v0 + 832);
  uint64_t v17 = *(void *)(v0 + 784);
  uint64_t v18 = *(void *)(v0 + 776);
  uint64_t v19 = *(void *)(v0 + 624);
  *(void *)(v0 + 1024) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v135 = (unsigned __int8 *)(v0 + 1140);
  int v20 = *v1;
  char v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  *(void *)(v0 + 1032) = v21;
  uint64_t v22 = v21(v16, v19, v18);
  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = *(void *)(v0 + 832);
  uint64_t v140 = (void *)(v0 + 16);
  BOOL v122 = (void (*)(uint64_t, uint64_t, uint64_t))v21;
  if (v25)
  {
    uint64_t v27 = *(void *)(v0 + 824);
    uint64_t v118 = *(void *)(v0 + 784);
    uint64_t v28 = *(void *)(v0 + 776);
    uint64_t v29 = swift_slowAlloc(18LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v143 = v30;
    *(_DWORD *)uint64_t v29 = 67109378;
    *(_DWORD *)(v0 + 11swift_unknownObjectWeakDestroy(v0 + 16) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1116, v0 + 1120, v29 + 4, v29 + 8);
    *(_WORD *)(v29 + 8) = 2080;
    v21(v27, v26, v28);
    uint64_t v31 = String.init<A>(describing:)(v27, v28);
    unint64_t v33 = (const char *)v32;
    *(void *)(v0 + 576) = sub_10018CDB4(v31, v32, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 576, v0 + 584, v29 + 10, v29 + 18);
    __n128 v34 = swift_bridgeObjectRelease(v33);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, __n128))(v118 + 8);
    v35(v26, v28, v34);
    _os_log_impl( (void *)&_mh_execute_header,  v23,  v24,  "Ask open/move START. {alreadyViewed: %{BOOL}d, destination: %s}",  (uint8_t *)v29,  0x12u);
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    uint64_t v36 = v29;
    uint64_t v15 = v0 + 16;
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  else
  {
    uint64_t v51 = *(void *)(v0 + 784);
    uint64_t v52 = *(void *)(v0 + 776);

    uint64_t v35 = *(void (**)(uint64_t, uint64_t, __n128))(v51 + 8);
    ((void (*)(uint64_t, uint64_t))v35)(v26, v52);
  }

  *(void *)(v0 + 1040) = v35;
  uint64_t v53 = *(void *)(v0 + 928);
  uint64_t v54 = *(void *)(v0 + 736);
  uint64_t v55 = *(const char **)(v0 + 624);
  uint64_t v56 = *(const char **)(v0 + 616);
  sub_10019A6C4(*(void *)(v0 + 632) + *(void *)(v0 + 976), v15);
  uint64_t v57 = (void *)v15;
  uint64_t v58 = *(void *)(v0 + 40);
  uint64_t v59 = *(void *)(v0 + 48);
  uint64_t v60 = sub_10019A708(v57, v58);
  CurrentValueSubject.value.getter(v60);
  swift_beginAccess(v135, v0 + 480, 0LL, 0LL);
  sub_1003C8C9C(v53, v56, *v135, v55, v58, v59, v54);
  uint64_t v61 = *(void (**)(void))(v0 + 968);
  if (v128)
  {
    ((void (*)(void, void))v61)(*(void *)(v0 + 928), *(void *)(v0 + 912));
    sub_10018709C(v140);
    uint64_t v62 = *(void *)(v0 + 656);
    uint64_t v63 = *(void *)(v0 + 640);
    *(void *)(v0 + 544) = v128;
    swift_errorRetain(v128);
    uint64_t v64 = sub_100183098(&qword_100645710);
    if ((swift_dynamicCast(v62, v0 + 544, v64, v63, 0LL) & 1) != 0)
    {
      int v65 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 648) + 88LL))( *(void *)(v0 + 656),  *(void *)(v0 + 640));
      if (v65 == enum case for SFAirDropReceive.Failure.declined(_:))
      {
        uint64_t v66 = swift_errorRelease(v128);
        uint64_t v67 = (os_log_s *)Logger.logObject.getter(v66);
        os_log_type_t v68 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v69 = 0;
          uint64_t v70 = "Ask open/move END - Declined. Not opening or moving";
LABEL_19:
          _os_log_impl((void *)&_mh_execute_header, v67, v68, v70, v69, 2u);
          swift_slowDealloc(v69, -1LL, -1LL);
          goto LABEL_20;
        }

        goto LABEL_20;
      }

      if (v65 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
      {
        uint64_t v85 = swift_errorRelease(v128);
        uint64_t v67 = (os_log_s *)Logger.logObject.getter(v85);
        os_log_type_t v68 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v67, v68))
        {
          uint64_t v69 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v69 = 0;
          uint64_t v70 = "Ask open/move END - Not handled. Not opening or moving";
          goto LABEL_19;
        }

uint64_t sub_100360BD8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1056);
  *(void *)(*v1 + 1064) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100361ECC;
  }
  else {
    uint64_t v4 = sub_100360C3C;
  }
  return swift_task_switch(v4, *(void *)(v2 + 952), 0LL);
}

uint64_t sub_100360C3C()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0 + 1032))( *(void *)(v0 + 808),  *(void *)(v0 + 816),  *(void *)(v0 + 776));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1040);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1032);
    uint64_t v4 = *(void *)(v0 + 824);
    uint64_t v5 = *(void *)(v0 + 808);
    uint64_t v6 = *(void *)(v0 + 776);
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v20 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v18(v4, v5, v6);
    uint64_t v9 = String.init<A>(describing:)(v4, v6);
    uint64_t v11 = (const char *)v10;
    *(void *)(v0 + 560) = sub_10018CDB4(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 560, v0 + 568, v7 + 4, v7 + 12);
    __n128 v12 = swift_bridgeObjectRelease(v11);
    v19(v5, v6, v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ask open/move END - accepted {destination: %s}", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1040);
    uint64_t v14 = *(void *)(v0 + 808);
    uint64_t v15 = *(void *)(v0 + 776);

    v13(v14, v15);
  }

  uint64_t v16 = (void *)swift_task_alloc(dword_100650BD4);
  *(void *)(v0 + 1072) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100360E30;
  return sub_10036C84C(*(void *)(v0 + 800), *(void *)(v0 + 608), *(void *)(v0 + 616), *(void *)(v0 + 816));
}

uint64_t sub_100360E30()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1072);
  *(void *)(*v1 + 1080) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_1003623B4;
  }
  else {
    uint64_t v4 = sub_100360E94;
  }
  return swift_task_switch(v4, *(void *)(v2 + 952), 0LL);
}

uint64_t sub_100360E94()
{
  uint64_t v1 = (_BYTE *)(v0 + 1140);
  uint64_t v2 = *(void *)(v0 + 792);
  uint64_t v3 = *(void *)(v0 + 784);
  uint64_t v4 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1032))(v2, *(void *)(v0 + 800), v4);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v4);
  if ((_DWORD)v5 == enum case for SFAirDropReceive.ItemDestination.customApp(_:))
  {
    uint64_t v6 = *(uint64_t **)(v0 + 792);
    (*(void (**)(uint64_t *, void))(*(void *)(v0 + 784) + 96LL))(v6, *(void *)(v0 + 776));
    uint64_t v7 = *v6;
    uint64_t v8 = (const char *)v6[1];
    if (v7 == 0xD000000000000034LL && v8 == (const char *)0x8000000100504BB0LL)
    {
      swift_bridgeObjectRelease((const char *)0x8000000100504BB0LL);
      char v9 = 0;
    }

    else
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0xD000000000000034LL, 0x8000000100504BB0LL, 0LL);
      swift_bridgeObjectRelease(v8);
      char v9 = v10 ^ 1;
    }
  }

  else
  {
    if ((_DWORD)v5 != enum case for SFAirDropReceive.ItemDestination.noItem(_:))
    {
      uint64_t v5 = (*(uint64_t (**)(void, void))(v0 + 1040))(*(void *)(v0 + 792), *(void *)(v0 + 776));
      if (*v1 != 1)
      {
LABEL_14:
        uint64_t v52 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1048);
        uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1032);
        uint64_t v57 = *(void *)(v0 + 944);
        uint64_t v60 = *(void *)(v0 + 912);
        uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v0 + 968);
        uint64_t v16 = *(void *)(v0 + 800);
        uint64_t v17 = *(void *)(v0 + 776);
        uint64_t v18 = *(void *)(v0 + 720);
        uint64_t v19 = *(void *)(v0 + 704);
        uint64_t v55 = *(void *)(v0 + 712);
        uint64_t v20 = *(const char **)(v0 + 616);
        char v21 = *(const char **)(v0 + 608);
        uint64_t v22 = sub_100183098((uint64_t *)&unk_1006451A0);
        uint64_t v23 = *(int *)(v22 + 48);
        uint64_t v24 = *(int *)(v22 + 64);
        v15(v18, v16, v17);
        *(void *)(v18 + v23) = v21;
        *(void *)(v18 + v24) = v20;
        v52(v18, enum case for SFAirDropReceive.Transfer.State.opening(_:), v19);
        *(void *)&double v25 = swift_bridgeObjectRetain(v21).n128_u64[0];
        swift_bridgeObjectRetain(v20, v25);
        sub_10044E6FC(v18, v57);
        uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
        *(void *)(v0 + 1088) = v26;
        v26(v18, v19);
        v62(v57, v60);
        uint64_t v27 = *(void *)(v0 + 80);
        uint64_t v28 = *(void *)(v0 + 88);
        sub_10019A708((void *)(v0 + 56), v27);
        (*(void (**)(const char *, uint64_t, uint64_t, uint64_t))(v28 + 8))(v20, v16, v27, v28);
        uint64_t v29 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
        *(void *)(v0 + 1096) = v29;
        void *v29 = v0;
        v29[1] = sub_10036135C;
        return SFProgressTask.finalValue.getter(v0 + 1141, *(void *)(v0 + 744));
      }

      char v9 = 1;
LABEL_12:
      uint64_t v11 = *(void *)(v0 + 688);
      uint64_t v12 = *(void *)(v0 + 680);
      uint64_t v13 = *(void *)(v0 + 672);
      static SFPlatform.macOS.getter(v5);
      char v14 = static SFPlatform.isPlatform(_:)(v11);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      if ((v14 & 1) == 0) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }

    char v9 = 0;
  }

  if ((*v1 & 1) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if ((v9 & 1) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v31 = *(void *)(v0 + 736);
  uint64_t v32 = *(void *)(v0 + 728);
  uint64_t v33 = *(void *)(v0 + 712);
  uint64_t v34 = *(void *)(v0 + 704);
  (*(void (**)(void, void))(v0 + 1040))(*(void *)(v0 + 816), *(void *)(v0 + 776));
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
  sub_100187100(v31, &qword_100646800);
  uint64_t v35 = *(void *)(v0 + 696);
  uint64_t v36 = *(const char **)(v0 + 616);
  uint64_t v37 = *(void *)(v0 + 592);
  (*(void (**)(void, void, void))(*(void *)(v0 + 784) + 32LL))( *(void *)(v0 + 584),  *(void *)(v0 + 800),  *(void *)(v0 + 776));
  sub_1001870BC(v35, v37, &qword_100650B10);
  swift_bridgeObjectRetain(v36);
  sub_10018709C((void *)(v0 + 56));
  uint64_t v65 = *(void *)(v0 + 616);
  uint64_t v38 = *(void *)(v0 + 936);
  uint64_t v39 = *(void *)(v0 + 928);
  uint64_t v40 = *(void *)(v0 + 904);
  uint64_t v41 = *(void *)(v0 + 896);
  uint64_t v42 = *(void *)(v0 + 872);
  uint64_t v43 = *(void *)(v0 + 864);
  uint64_t v44 = *(void *)(v0 + 840);
  uint64_t v45 = *(void *)(v0 + 832);
  uint64_t v46 = *(void *)(v0 + 824);
  uint64_t v47 = *(void *)(v0 + 816);
  uint64_t v48 = *(void *)(v0 + 808);
  uint64_t v49 = *(void *)(v0 + 800);
  uint64_t v50 = *(void *)(v0 + 792);
  uint64_t v51 = *(void *)(v0 + 768);
  uint64_t v53 = *(void *)(v0 + 760);
  uint64_t v54 = *(void *)(v0 + 736);
  uint64_t v56 = *(void *)(v0 + 728);
  uint64_t v58 = *(void *)(v0 + 720);
  uint64_t v59 = *(void *)(v0 + 696);
  uint64_t v61 = *(void *)(v0 + 688);
  uint64_t v63 = *(void *)(v0 + 664);
  uint64_t v64 = *(void *)(v0 + 656);
  swift_task_dealloc(*(void *)(v0 + 944));
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v61);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(1LL, v65);
}

uint64_t sub_10036135C()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1096LL);
  *(void *)(*(void *)v1 + 1104LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[119];
  (*(void (**)(void, void))(v2[94] + 8LL))(v2[95], v2[93]);
  if (v0) {
    uint64_t v5 = sub_1003628CC;
  }
  else {
    uint64_t v5 = sub_1003613E0;
  }
  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_1003613E0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1088);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void *)(v0 + 728);
  uint64_t v4 = *(void *)(v0 + 704);
  (*(void (**)(void, void))(v0 + 1040))(*(void *)(v0 + 816), *(void *)(v0 + 776));
  v1(v3, v4);
  sub_100187100(v2, &qword_100646800);
  unsigned int v32 = *(unsigned __int8 *)(v0 + 1141);
  uint64_t v5 = *(void *)(v0 + 696);
  uint64_t v6 = *(const char **)(v0 + 616);
  uint64_t v7 = *(void *)(v0 + 592);
  (*(void (**)(void, void, void))(*(void *)(v0 + 784) + 32LL))( *(void *)(v0 + 584),  *(void *)(v0 + 800),  *(void *)(v0 + 776));
  sub_1001870BC(v5, v7, &qword_100650B10);
  swift_bridgeObjectRetain(v6);
  sub_10018709C((void *)(v0 + 56));
  uint64_t v31 = *(void *)(v0 + 616);
  uint64_t v8 = *(void *)(v0 + 936);
  uint64_t v9 = *(void *)(v0 + 928);
  uint64_t v10 = *(void *)(v0 + 904);
  uint64_t v11 = *(void *)(v0 + 896);
  uint64_t v12 = *(void *)(v0 + 872);
  uint64_t v13 = *(void *)(v0 + 864);
  uint64_t v14 = *(void *)(v0 + 840);
  uint64_t v15 = *(void *)(v0 + 832);
  uint64_t v16 = *(void *)(v0 + 824);
  uint64_t v18 = *(void *)(v0 + 816);
  uint64_t v19 = *(void *)(v0 + 808);
  uint64_t v20 = *(void *)(v0 + 800);
  uint64_t v21 = *(void *)(v0 + 792);
  uint64_t v22 = *(void *)(v0 + 768);
  uint64_t v23 = *(void *)(v0 + 760);
  uint64_t v24 = *(void *)(v0 + 736);
  uint64_t v25 = *(void *)(v0 + 728);
  uint64_t v26 = *(void *)(v0 + 720);
  uint64_t v27 = *(void *)(v0 + 696);
  uint64_t v28 = *(void *)(v0 + 688);
  uint64_t v29 = *(void *)(v0 + 664);
  uint64_t v30 = *(void *)(v0 + 656);
  swift_task_dealloc(*(void *)(v0 + 944));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return (*(uint64_t (**)(void, uint64_t))(v0 + 8))(v32, v31);
}

uint64_t sub_1003615F8()
{
  uint64_t v1 = *(void *)(v0 + 1000);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 640);
  *(void *)(v0 + 536) = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 648) + 88LL))( *(void *)(v0 + 664),  *(void *)(v0 + 640)) != enum case for SFAirDropReceive.Failure.declined(_:))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 648) + 8LL))(*(void *)(v0 + 664), *(void *)(v0 + 640));
LABEL_7:
    swift_errorRelease(*(void *)(v0 + 536));
    uint64_t v25 = *(void *)(v0 + 944);
    uint64_t v26 = *(void *)(v0 + 936);
    uint64_t v27 = *(void *)(v0 + 928);
    uint64_t v28 = *(void *)(v0 + 904);
    uint64_t v29 = *(void *)(v0 + 896);
    uint64_t v30 = *(void *)(v0 + 872);
    uint64_t v31 = *(void *)(v0 + 864);
    uint64_t v32 = *(void *)(v0 + 840);
    uint64_t v33 = *(void *)(v0 + 832);
    uint64_t v34 = *(void *)(v0 + 824);
    uint64_t v35 = *(void *)(v0 + 816);
    uint64_t v37 = *(void *)(v0 + 808);
    uint64_t v39 = *(void *)(v0 + 800);
    uint64_t v41 = *(void *)(v0 + 792);
    uint64_t v43 = *(void *)(v0 + 768);
    uint64_t v45 = *(void *)(v0 + 760);
    uint64_t v47 = *(void *)(v0 + 736);
    uint64_t v49 = *(void *)(v0 + 728);
    uint64_t v51 = *(void *)(v0 + 720);
    uint64_t v53 = *(void *)(v0 + 696);
    uint64_t v55 = *(void *)(v0 + 688);
    uint64_t v57 = *(void *)(v0 + 664);
    uint64_t v59 = *(void *)(v0 + 656);
    sub_10018709C((void *)(v0 + 56));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))(0LL);
  }

  uint64_t v5 = swift_errorRelease(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ask open/move END - Declined. Not opening or moving", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v9 = *(void *)(v0 + 784);
  uint64_t v10 = *(void *)(v0 + 776);
  uint64_t v11 = *(void *)(v0 + 624);
  uint64_t v12 = *(void *)(v0 + 592);
  uint64_t v13 = *(void *)(v0 + 584);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v11, v10);
  uint64_t v14 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v12, 1LL, 1LL, v14);
  swift_errorRelease(*(void *)(v0 + 536));
  sub_10018709C((void *)(v0 + 56));
  uint64_t v15 = *(void *)(v0 + 936);
  uint64_t v16 = *(void *)(v0 + 928);
  uint64_t v17 = *(void *)(v0 + 904);
  uint64_t v18 = *(void *)(v0 + 896);
  uint64_t v19 = *(void *)(v0 + 872);
  uint64_t v20 = *(void *)(v0 + 864);
  uint64_t v21 = *(void *)(v0 + 840);
  uint64_t v22 = *(void *)(v0 + 832);
  uint64_t v23 = *(void *)(v0 + 824);
  uint64_t v36 = *(void *)(v0 + 816);
  uint64_t v38 = *(void *)(v0 + 808);
  uint64_t v40 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 792);
  uint64_t v44 = *(void *)(v0 + 768);
  uint64_t v46 = *(void *)(v0 + 760);
  uint64_t v48 = *(void *)(v0 + 736);
  uint64_t v50 = *(void *)(v0 + 728);
  uint64_t v52 = *(void *)(v0 + 720);
  uint64_t v54 = *(void *)(v0 + 696);
  uint64_t v56 = *(void *)(v0 + 688);
  uint64_t v58 = *(void *)(v0 + 664);
  uint64_t v60 = *(void *)(v0 + 656);
  swift_task_dealloc(*(void *)(v0 + 944));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void, void *))(v0 + 8))(0LL, _swiftEmptyArrayStorage);
}

uint64_t sub_100361A58()
{
  uint64_t v1 = *(void *)(v0 + 1016);
  uint64_t v2 = *(void *)(v0 + 664);
  uint64_t v3 = *(void *)(v0 + 640);
  *(void *)(v0 + 536) = v1;
  swift_errorRetain(v1);
  uint64_t v4 = sub_100183098(&qword_100645710);
  if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 648) + 88LL))( *(void *)(v0 + 664),  *(void *)(v0 + 640)) != enum case for SFAirDropReceive.Failure.declined(_:))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 648) + 8LL))(*(void *)(v0 + 664), *(void *)(v0 + 640));
LABEL_7:
    swift_errorRelease(*(void *)(v0 + 536));
    uint64_t v25 = *(void *)(v0 + 944);
    uint64_t v26 = *(void *)(v0 + 936);
    uint64_t v27 = *(void *)(v0 + 928);
    uint64_t v28 = *(void *)(v0 + 904);
    uint64_t v29 = *(void *)(v0 + 896);
    uint64_t v30 = *(void *)(v0 + 872);
    uint64_t v31 = *(void *)(v0 + 864);
    uint64_t v32 = *(void *)(v0 + 840);
    uint64_t v33 = *(void *)(v0 + 832);
    uint64_t v34 = *(void *)(v0 + 824);
    uint64_t v35 = *(void *)(v0 + 816);
    uint64_t v37 = *(void *)(v0 + 808);
    uint64_t v39 = *(void *)(v0 + 800);
    uint64_t v41 = *(void *)(v0 + 792);
    uint64_t v43 = *(void *)(v0 + 768);
    uint64_t v45 = *(void *)(v0 + 760);
    uint64_t v47 = *(void *)(v0 + 736);
    uint64_t v49 = *(void *)(v0 + 728);
    uint64_t v51 = *(void *)(v0 + 720);
    uint64_t v53 = *(void *)(v0 + 696);
    uint64_t v55 = *(void *)(v0 + 688);
    uint64_t v57 = *(void *)(v0 + 664);
    uint64_t v59 = *(void *)(v0 + 656);
    sub_10018709C((void *)(v0 + 56));
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v41);
    swift_task_dealloc(v43);
    swift_task_dealloc(v45);
    swift_task_dealloc(v47);
    swift_task_dealloc(v49);
    swift_task_dealloc(v51);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    return (*(uint64_t (**)(void))(v0 + 8))(0LL);
  }

  uint64_t v5 = swift_errorRelease(v1);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Ask open/move END - Declined. Not opening or moving", v8, 2u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  uint64_t v9 = *(void *)(v0 + 784);
  uint64_t v10 = *(void *)(v0 + 776);
  uint64_t v11 = *(void *)(v0 + 624);
  uint64_t v12 = *(void *)(v0 + 592);
  uint64_t v13 = *(void *)(v0 + 584);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v13, v11, v10);
  uint64_t v14 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v12, 1LL, 1LL, v14);
  swift_errorRelease(*(void *)(v0 + 536));
  sub_10018709C((void *)(v0 + 56));
  uint64_t v15 = *(void *)(v0 + 936);
  uint64_t v16 = *(void *)(v0 + 928);
  uint64_t v17 = *(void *)(v0 + 904);
  uint64_t v18 = *(void *)(v0 + 896);
  uint64_t v19 = *(void *)(v0 + 872);
  uint64_t v20 = *(void *)(v0 + 864);
  uint64_t v21 = *(void *)(v0 + 840);
  uint64_t v22 = *(void *)(v0 + 832);
  uint64_t v23 = *(void *)(v0 + 824);
  uint64_t v36 = *(void *)(v0 + 816);
  uint64_t v38 = *(void *)(v0 + 808);
  uint64_t v40 = *(void *)(v0 + 800);
  uint64_t v42 = *(void *)(v0 + 792);
  uint64_t v44 = *(void *)(v0 + 768);
  uint64_t v46 = *(void *)(v0 + 760);
  uint64_t v48 = *(void *)(v0 + 736);
  uint64_t v50 = *(void *)(v0 + 728);
  uint64_t v52 = *(void *)(v0 + 720);
  uint64_t v54 = *(void *)(v0 + 696);
  uint64_t v56 = *(void *)(v0 + 688);
  uint64_t v58 = *(void *)(v0 + 664);
  uint64_t v60 = *(void *)(v0 + 656);
  swift_task_dealloc(*(void *)(v0 + 944));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void, void *))(v0 + 8))(0LL, _swiftEmptyArrayStorage);
}

uint64_t sub_100361ECC()
{
  uint64_t v1 = *(void *)(v0 + 736);
  (*(void (**)(void, void))(*(void *)(v0 + 712) + 8LL))(*(void *)(v0 + 728), *(void *)(v0 + 704));
  sub_100187100(v1, &qword_100646800);
  uint64_t v2 = *(void *)(v0 + 1064);
  uint64_t v3 = *(void *)(v0 + 656);
  uint64_t v4 = *(void *)(v0 + 640);
  *(void *)(v0 + 544) = v2;
  swift_errorRetain(v2);
  uint64_t v5 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v3, v0 + 544, v5, v4, 0LL) & 1) != 0)
  {
    int v6 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 648) + 88LL))( *(void *)(v0 + 656),  *(void *)(v0 + 640));
    if (v6 == enum case for SFAirDropReceive.Failure.declined(_:))
    {
      uint64_t v7 = swift_errorRelease(v2);
      uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v10 = 0;
        uint64_t v11 = "Ask open/move END - Declined. Not opening or moving";
LABEL_8:
        _os_log_impl((void *)&_mh_execute_header, v8, v9, v11, v10, 2u);
        swift_slowDealloc(v10, -1LL, -1LL);
        goto LABEL_9;
      }

      goto LABEL_9;
    }

    if (v6 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      uint64_t v12 = swift_errorRelease(v2);
      uint64_t v8 = (os_log_s *)Logger.logObject.getter(v12);
      os_log_type_t v9 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v10 = 0;
        uint64_t v11 = "Ask open/move END - Not handled. Not opening or moving";
        goto LABEL_8;
      }

uint64_t sub_1003623B4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1040);
  uint64_t v2 = *(void *)(v0 + 816);
  uint64_t v3 = *(void *)(v0 + 776);
  uint64_t v4 = *(void *)(v0 + 736);
  uint64_t v5 = *(void *)(v0 + 728);
  uint64_t v6 = *(void *)(v0 + 712);
  uint64_t v7 = *(void *)(v0 + 704);
  sub_100187100(*(void *)(v0 + 696), &qword_100650B10);
  v1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_100187100(v4, &qword_100646800);
  uint64_t v8 = *(void *)(v0 + 1080);
  uint64_t v9 = *(void *)(v0 + 656);
  uint64_t v10 = *(void *)(v0 + 640);
  *(void *)(v0 + 544) = v8;
  swift_errorRetain(v8);
  uint64_t v11 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v9, v0 + 544, v11, v10, 0LL) & 1) != 0)
  {
    int v12 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 648) + 88LL))( *(void *)(v0 + 656),  *(void *)(v0 + 640));
    if (v12 == enum case for SFAirDropReceive.Failure.declined(_:))
    {
      uint64_t v13 = swift_errorRelease(v8);
      uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v16 = 0;
        uint64_t v17 = "Ask open/move END - Declined. Not opening or moving";
LABEL_8:
        _os_log_impl((void *)&_mh_execute_header, v14, v15, v17, v16, 2u);
        swift_slowDealloc(v16, -1LL, -1LL);
        goto LABEL_9;
      }

      goto LABEL_9;
    }

    if (v12 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      uint64_t v18 = swift_errorRelease(v8);
      uint64_t v14 = (os_log_s *)Logger.logObject.getter(v18);
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v16 = 0;
        uint64_t v17 = "Ask open/move END - Not handled. Not opening or moving";
        goto LABEL_8;
      }

uint64_t sub_1003628CC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1088);
  uint64_t v71 = (void *)(v0 + 56);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1040);
  uint64_t v3 = *(void *)(v0 + 816);
  uint64_t v4 = *(void *)(v0 + 776);
  uint64_t v5 = *(void *)(v0 + 736);
  uint64_t v6 = *(void *)(v0 + 728);
  uint64_t v7 = *(void *)(v0 + 704);
  uint64_t v8 = *(void *)(v0 + 696);
  v2(*(void *)(v0 + 800), v4);
  sub_100187100(v8, &qword_100650B10);
  v2(v3, v4);
  v1(v6, v7);
  sub_100187100(v5, &qword_100646800);
  uint64_t v9 = *(void *)(v0 + 1104);
  uint64_t v10 = *(void *)(v0 + 656);
  uint64_t v11 = *(void *)(v0 + 640);
  *(void *)(v0 + 544) = v9;
  swift_errorRetain(v9);
  uint64_t v12 = sub_100183098(&qword_100645710);
  if ((swift_dynamicCast(v10, v0 + 544, v12, v11, 0LL) & 1) != 0)
  {
    int v13 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 648) + 88LL))( *(void *)(v0 + 656),  *(void *)(v0 + 640));
    if (v13 == enum case for SFAirDropReceive.Failure.declined(_:))
    {
      uint64_t v14 = swift_errorRelease(v9);
      os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        uint64_t v18 = "Ask open/move END - Declined. Not opening or moving";
LABEL_8:
        _os_log_impl((void *)&_mh_execute_header, v15, v16, v18, v17, 2u);
        swift_slowDealloc(v17, -1LL, -1LL);
        goto LABEL_9;
      }

      goto LABEL_9;
    }

    if (v13 == enum case for SFAirDropReceive.Failure.askNotHandled(_:))
    {
      uint64_t v19 = swift_errorRelease(v9);
      os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        uint64_t v18 = "Ask open/move END - Not handled. Not opening or moving";
        goto LABEL_8;
      }

uint64_t sub_100362DF8(uint64_t a1, uint64_t a2)
{
  v3[96] = v2;
  v3[95] = a2;
  v3[94] = a1;
  unint64_t v4 = (*(void *)(*(void *)(sub_100183098(&qword_100650B48) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[97] = swift_task_alloc(v4);
  v3[98] = swift_task_alloc(v4);
  uint64_t v5 = type metadata accessor for SDAirDropServerConnection(0LL);
  v3[99] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[100] = v6;
  v3[101] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v3[102] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[103] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[104] = swift_task_alloc(v9);
  v3[105] = swift_task_alloc(v9);
  uint64_t v10 = sub_100183098(&qword_100646800);
  v3[106] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v3[107] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v12 = (*(void *)(*(void *)(_s14descr1005DEB71C16ExchangeResponseVMa(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[108] = swift_task_alloc(v12);
  v3[109] = swift_task_alloc(v12);
  v3[110] = swift_task_alloc(v12);
  unint64_t v13 = (*(void *)(*(void *)(sub_100183098(&qword_100649F88) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[111] = swift_task_alloc(v13);
  v3[112] = swift_task_alloc(v13);
  v3[113] = swift_task_alloc(v13);
  v3[114] = swift_task_alloc(v13);
  unint64_t v14 = (*(void *)(*(void *)(sub_100183098(&qword_100649F50) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[115] = swift_task_alloc(v14);
  v3[116] = swift_task_alloc(v14);
  v3[117] = swift_task_alloc(v14);
  v3[118] = swift_task_alloc(v14);
  v3[119] = swift_task_alloc(v14);
  v3[120] = swift_task_alloc(v14);
  v3[121] = swift_task_alloc(v14);
  uint64_t v15 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
  v3[122] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v3[123] = v16;
  unint64_t v17 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[124] = swift_task_alloc(v17);
  v3[125] = swift_task_alloc(v17);
  v3[126] = swift_task_alloc(v17);
  uint64_t v18 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v3[127] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v3[128] = v19;
  v3[129] = swift_task_alloc((*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v3[130] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v3[131] = v21;
  v3[132] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  v3[133] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v3[134] = v23;
  unint64_t v24 = (*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[135] = swift_task_alloc(v24);
  v3[136] = swift_task_alloc(v24);
  v3[137] = swift_task_alloc(v24);
  v3[138] = swift_task_alloc(v24);
  v3[139] = swift_task_alloc(v24);
  v3[140] = swift_task_alloc(v24);
  v3[141] = swift_task_alloc(v24);
  v3[142] = swift_task_alloc(v24);
  v3[143] = swift_task_alloc(v24);
  v3[144] = swift_task_alloc(v24);
  v3[145] = swift_task_alloc(v24);
  v3[146] = swift_task_alloc(v24);
  v3[147] = swift_task_alloc(v24);
  v3[148] = swift_task_alloc(v24);
  uint64_t v25 = sub_100183098(&qword_100650B10);
  v3[149] = swift_task_alloc((*(void *)(*(void *)(v25 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  v3[150] = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  v3[151] = v27;
  v3[152] = swift_task_alloc((*(void *)(v27 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v3[153] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v3[154] = v29;
  v3[155] = swift_task_alloc((*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v3[156] = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  v3[157] = v31;
  v3[158] = swift_task_alloc((*(void *)(v31 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_100183098(&qword_100650B50);
  v3[159] = swift_task_alloc((*(void *)(*(void *)(v32 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_100183098(&qword_100650B58);
  v3[160] = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  v3[161] = v34;
  unint64_t v35 = (*(void *)(v34 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v3[162] = swift_task_alloc(v35);
  v3[163] = swift_task_alloc(v35);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v36 = static AirDropActor.shared;
  v3[164] = static AirDropActor.shared;
  return swift_task_switch(sub_100363294, v36, 0LL);
}

uint64_t sub_100363294()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 768)
                 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler);
  uint64_t v2 = *(void *)(v0 + 1272);
  *(void *)(v0 + 1320) = v1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation,  v0 + 544,  0LL,  0LL);
  sub_1001915A4(v3, v2, &qword_100650B50);
  uint64_t v4 = sub_100183098(&qword_100650B60);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1LL, v4) == 1)
  {
    uint64_t v6 = sub_100187100(*(void *)(v0 + 1272), &qword_100650B50);
    uint64_t v7 = (os_log_s *)Logger.logObject.getter(v6);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v7,  v8,  "Exchange Contact Request SKIP - No contact request task",  v9,  2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }

    uint64_t v10 = *(void *)(v0 + 1296);
    uint64_t v11 = *(void *)(v0 + 1272);
    uint64_t v12 = *(void *)(v0 + 1264);
    uint64_t v13 = *(void *)(v0 + 1240);
    uint64_t v14 = *(void *)(v0 + 1216);
    uint64_t v15 = *(void *)(v0 + 1192);
    uint64_t v16 = *(void *)(v0 + 1184);
    uint64_t v17 = *(void *)(v0 + 1176);
    uint64_t v18 = *(void *)(v0 + 1168);
    uint64_t v233 = *(void *)(v0 + 1160);
    uint64_t v234 = *(void *)(v0 + 1152);
    uint64_t v235 = *(void *)(v0 + 1144);
    uint64_t v236 = *(void *)(v0 + 1136);
    uint64_t v237 = *(void *)(v0 + 1128);
    uint64_t v238 = *(void *)(v0 + 1120);
    uint64_t v239 = *(void *)(v0 + 1112);
    uint64_t v240 = *(void *)(v0 + 1104);
    uint64_t v241 = *(void *)(v0 + 1096);
    uint64_t v242 = *(void *)(v0 + 1088);
    uint64_t v243 = *(void *)(v0 + 1080);
    uint64_t v244 = *(void *)(v0 + 1056);
    uint64_t v245 = *(void *)(v0 + 1032);
    uint64_t v246 = *(void *)(v0 + 1008);
    uint64_t v247 = *(void *)(v0 + 1000);
    uint64_t v248 = *(void *)(v0 + 992);
    uint64_t v249 = *(void *)(v0 + 968);
    uint64_t v251 = *(void *)(v0 + 960);
    uint64_t v252 = *(void *)(v0 + 952);
    uint64_t v253 = *(void *)(v0 + 944);
    uint64_t v255 = *(void *)(v0 + 936);
    uint64_t v258 = *(void *)(v0 + 928);
    uint64_t v262 = *(void *)(v0 + 920);
    uint64_t v266 = *(void *)(v0 + 912);
    uint64_t v270 = *(void *)(v0 + 904);
    uint64_t v273 = *(void *)(v0 + 896);
    uint64_t v278 = *(void *)(v0 + 888);
    unint64_t v283 = *(void *)(v0 + 880);
    uint64_t v289 = *(void *)(v0 + 872);
    uint64_t v293 = *(void *)(v0 + 864);
    uint64_t v296 = *(void *)(v0 + 856);
    uint64_t v302 = *(void *)(v0 + 848);
    uint64_t v307 = *(void *)(v0 + 840);
    uint64_t v314 = *(void *)(v0 + 832);
    uint64_t v322 = *(void *)(v0 + 808);
    uint64_t v329 = *(void *)(v0 + 784);
    uint64_t v335 = *(void *)(v0 + 776);
    swift_task_dealloc(*(void *)(v0 + 1304));
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v233);
    swift_task_dealloc(v234);
    swift_task_dealloc(v235);
    swift_task_dealloc(v236);
    swift_task_dealloc(v237);
    swift_task_dealloc(v238);
    swift_task_dealloc(v239);
    swift_task_dealloc(v240);
    swift_task_dealloc(v241);
    swift_task_dealloc(v242);
    swift_task_dealloc(v243);
    swift_task_dealloc(v244);
    swift_task_dealloc(v245);
    swift_task_dealloc(v246);
    swift_task_dealloc(v247);
    swift_task_dealloc(v248);
    swift_task_dealloc(v249);
    swift_task_dealloc(v251);
    swift_task_dealloc(v252);
    swift_task_dealloc(v253);
    swift_task_dealloc(v255);
    swift_task_dealloc(v258);
    swift_task_dealloc(v262);
    swift_task_dealloc(v266);
    swift_task_dealloc(v270);
    swift_task_dealloc(v273);
    swift_task_dealloc(v278);
    swift_task_dealloc(v283);
    swift_task_dealloc(v289);
    swift_task_dealloc(v293);
    swift_task_dealloc(v296);
    swift_task_dealloc(v302);
    swift_task_dealloc(v307);
    swift_task_dealloc(v314);
    swift_task_dealloc(v322);
    swift_task_dealloc(v329);
    swift_task_dealloc(v335);
    return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
  }

  else
  {
    uint64_t v20 = *(void *)(v0 + 1304);
    uint64_t v21 = *(void *)(v0 + 1296);
    uint64_t v22 = *(void *)(v0 + 1288);
    uint64_t v23 = *(void *)(v0 + 1280);
    uint64_t v24 = *(void *)(v0 + 1272);
    SFProgressContinuation.task.getter(v4);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v24, v4);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v20, v21, v23);
    *(void *)(v0 + 1328) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Exchange Contact START", v28, 2u);
      swift_slowDealloc(v28, -1LL, -1LL);
    }

    uint64_t v29 = *(void *)(v0 + 1264);
    uint64_t v30 = *(void *)(v0 + 1256);
    uint64_t v31 = *(void *)(v0 + 1240);
    uint64_t v32 = *(void *)(v0 + 1232);
    uint64_t v33 = *(void *)(v0 + 1224);
    uint64_t v34 = *(void *)(v0 + 1208);
    uint64_t v330 = *(void *)(v0 + 1248);
    uint64_t v336 = *(void *)(v0 + 1200);
    uint64_t v35 = *(void *)(v0 + 752);

    uint64_t v36 = enum case for SFAirDropReceive.Transfer.State.waitingForContactExchangeRequest(_:);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 104);
    *(void *)(v0 + 1336) = v37;
    v37(v31, v36, v33);
    sub_10044E6FC(v31, v29);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
    *(void *)(v0 + 1344) = v38;
    v38(v31, v33);
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    *(void *)(v0 + 1352) = v39;
    v39(v29, v330);
    uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v40(v35, 1LL, v336) == 1)
    {
      uint64_t v41 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
      *(void *)(v0 + 1360) = v41;
      void *v41 = v0;
      v41[1] = sub_10036490C;
      return SFProgressTask.finalValue.getter(*(void *)(v0 + 1216), *(void *)(v0 + 1280));
    }

    else
    {
      uint64_t v42 = *(void *)(v0 + 1200);
      uint64_t v43 = *(void *)(v0 + 1192);
      sub_1001915A4(*(void *)(v0 + 752), v43, &qword_100650B10);
      uint64_t result = v40(v43, 1LL, v42);
      if ((_DWORD)result == 1)
      {
        __break(1u);
      }

      else
      {
        uint64_t v290 = v0 + 704;
        uint64_t v294 = v0 + 696;
        sub_1001A4B40(*(void *)(v0 + 1192), *(void *)(v0 + 1216), _s14descr1005DEB71C15ExchangeRequestVMa);
        uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
        uint64_t v45 = *(void *)(v0 + 1264);
        uint64_t v46 = *(void *)(v0 + 1248);
        uint64_t v47 = *(void *)(v0 + 1056);
        uint64_t v297 = *(void *)(v0 + 1048);
        uint64_t v303 = *(void *)(v0 + 1040);
        uint64_t v48 = *(void *)(v0 + 1032);
        uint64_t v308 = *(void *)(v0 + 1024);
        uint64_t v315 = *(void *)(v0 + 1016);
        uint64_t v323 = *(void *)(v0 + 984);
        uint64_t v331 = *(void *)(v0 + 976);
        uint64_t v49 = *(void *)(v0 + 968);
        uint64_t v50 = *(void *)(v0 + 768);
        uint64_t v51 = sub_1003C48B8(*(void *)(v0 + 1184));
        *(void *)(v0 + 1376) = *(void *)(v50
                                           + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
        uint64_t v52 = CurrentValueSubject.value.getter(v51);
        SFAirDropReceive.Transfer.askRequest.getter(v52);
        uint64_t v53 = v44(v45, v46);
        SFAirDropReceive.AskRequest.type.getter(v53);
        uint64_t v54 = v303;
        uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v297 + 8);
        *(void *)(v0 + 1384) = v55;
        v304 = v55;
        uint64_t v56 = ((uint64_t (*)(uint64_t, uint64_t))v55)(v47, v54);
        *(_BYTE *)(v0 + 1864) = SFAirDrop.TransferType.isOnlyExchange.getter(v56) & 1;
        uint64_t v57 = *(uint64_t (**)(uint64_t, uint64_t))(v308 + 8);
        *(void *)(v0 + 1392) = v57;
        uint64_t v58 = v57(v48, v315);
        SFAirDrop.ContactRequest.contact.getter(v58);
        uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v323 + 48);
        *(void *)(v0 + 1400) = v59;
        if (v59(v49, 1LL, v331) == 1)
        {
          uint64_t v60 = *(void *)(v0 + 1072);
          uint64_t v61 = *(void *)(v0 + 1064);
          uint64_t v62 = *(void *)(v0 + 888);
          uint64_t v63 = *(void *)(v0 + 760);
          sub_100187100(*(void *)(v0 + 968), &qword_100649F50);
          sub_1001915A4(v63, v62, &qword_100649F88);
          int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v62, 1LL, v61);
          uint64_t v65 = *(void *)(v0 + 1096);
          uint64_t v66 = *(void *)(v0 + 1072);
          uint64_t v67 = *(void *)(v0 + 1064);
          uint64_t v68 = *(void *)(v0 + 888);
          if (v64 == 1)
          {
            (*(void (**)(uint64_t, void, uint64_t))(v66 + 104))( v65,  enum case for SFAirDrop.ContactRequest.notNeeded(_:),  v67);
            sub_100187100(v68, &qword_100649F88);
          }

          else
          {
            (*(void (**)(uint64_t, void, uint64_t))(v66 + 32))(v65, *(void *)(v0 + 888), v67);
          }

          uint64_t v91 = *(void *)(v0 + 1096);
          uint64_t v92 = *(void *)(v0 + 1080);
          uint64_t v93 = *(void *)(v0 + 1064);
          uint64_t v94 = *(void *)(v0 + 768);
          uint64_t v95 = *(void (**)(void, void, uint64_t))(*(void *)(v0 + 1072) + 16LL);
          v95(*(void *)(v0 + 1088), *(void *)(v0 + 1184), v93);
          v333 = (uint64_t (*)(uint64_t, void, void))v95;
          v95(v92, v91, v93);
          uint64_t v96 = swift_retain_n(v94, 2LL);
          uint64_t v97 = (os_log_s *)Logger.logObject.getter(v96);
          os_log_type_t v98 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v97, v98))
          {
            uint64_t v259 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
            uint64_t v99 = *(void *)(v0 + 1264);
            uint64_t v256 = *(void *)(v0 + 1248);
            os_log_type_t v325 = v98;
            uint64_t v100 = *(void *)(v0 + 1088);
            unint64_t v285 = *(void *)(v0 + 1080);
            uint64_t v250 = *(void *)(v0 + 1072);
            uint64_t v101 = *(void *)(v0 + 1064);
            uint64_t v310 = (void (*)(uint64_t, uint64_t))v57;
            uint64_t v102 = *(void *)(v0 + 1056);
            uint64_t v263 = *(void *)(v0 + 1040);
            uint64_t v254 = *(void *)(v0 + 1032);
            uint64_t v267 = *(void *)(v0 + 1016);
            uint64_t v274 = *(void *)(v0 + 768);
            uint64_t v299 = v97;
            uint64_t v103 = swift_slowAlloc(52LL, -1LL);
            uint64_t v317 = swift_slowAlloc(96LL, -1LL);
            v338[0] = v317;
            *(_DWORD *)uint64_t v103 = 141559043;
            *(void *)(v0 + 696) = 1752392040LL;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v294, v290, v103 + 4, v103 + 12);
            *(_WORD *)(v103 + 12) = 2081;
            uint64_t v295 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
            uint64_t v104 = dispatch thunk of CustomStringConvertible.description.getter(v101, v295);
            uint64_t v106 = (const char *)v105;
            *(void *)(v0 + 592) = sub_10018CDB4(v104, v105, v338);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 592, v0 + 600, v103 + 14, v103 + 22);
            __n128 v107 = swift_bridgeObjectRelease(v106);
            uint64_t v108 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v250 + 8);
            uint64_t v109 = v108(v100, v101, v107);
            *(_WORD *)(v103 + 22) = 2080;
            uint64_t v110 = CurrentValueSubject.value.getter(v109);
            SFAirDropReceive.Transfer.askRequest.getter(v110);
            uint64_t v111 = v259(v99, v256);
            SFAirDropReceive.AskRequest.type.getter(v111);
            v304(v102, v263);
            uint64_t v112 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
            uint64_t v113 = dispatch thunk of CustomStringConvertible.description.getter(v267, v112);
            uint64_t v115 = v114;
            v310(v254, v267);
            *(void *)(v0 + 600) = sub_10018CDB4(v113, (unint64_t)v115, v338);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 600, v0 + 608, v103 + 24, v103 + 32);
            swift_bridgeObjectRelease(v115);
            swift_release_n(v274, 2LL);
            *(_WORD *)(v103 + 32) = 2160;
            *(void *)(v0 + 608) = 1752392040LL;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 608, v0 + 616, v103 + 34, v103 + 42);
            *(_WORD *)(v103 + 42) = 2081;
            uint64_t v116 = dispatch thunk of CustomStringConvertible.description.getter(v101, v295);
            uint64_t v118 = (const char *)v117;
            *(void *)(v0 + 6swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v116, v117, v338);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v0 + 624, v103 + 44, v103 + 52);
            __n128 v119 = swift_bridgeObjectRelease(v118);
            v108(v285, v101, v119);
            _os_log_impl( (void *)&_mh_execute_header,  v299,  v325,  "Exchange Contact END - Sender did not send contact {contactRequest: %{private,mask.hash}s, type: %s, conta ctToSend: %{private,mask.hash}s}",  (uint8_t *)v103,  0x34u);
            swift_arrayDestroy(v317, 3LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v317, -1LL, -1LL);
            swift_slowDealloc(v103, -1LL, -1LL);
          }

          else
          {
            uint64_t v124 = *(void *)(v0 + 1088);
            uint64_t v125 = *(void *)(v0 + 1080);
            uint64_t v126 = *(void *)(v0 + 1072);
            uint64_t v127 = *(void *)(v0 + 1064);
            uint64_t v128 = *(void *)(v0 + 768);

            uint64_t v108 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v126 + 8);
            ((void (*)(uint64_t, uint64_t))v108)(v124, v127);
            swift_release_n(v128, 2LL);
            ((void (*)(uint64_t, uint64_t))v108)(v125, v127);
          }

          *(void *)(v0 + 1824) = v108;
          uint64_t v129 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
          uint64_t v130 = *(void *)(v0 + 1264);
          uint64_t v131 = *(void *)(v0 + 1248);
          uint64_t v132 = *(void *)(v0 + 1152);
          uint64_t v133 = *(void *)(v0 + 864);
          uint64_t v134 = *(void *)(v0 + 856);
          uint64_t v135 = v333(v132, *(void *)(v0 + 1096), *(void *)(v0 + 1064));
          uint64_t v136 = CurrentValueSubject.value.getter(v135);
          SFAirDropReceive.Transfer.id.getter(v136);
          v129(v130, v131);
          *(void *)(v0 + 96) = 0LL;
          *(_OWORD *)(v0 + 64) = 0u;
          *(_OWORD *)(v0 + 80) = 0u;
          *(_OWORD *)(v0 + 32) = 0u;
          *(_OWORD *)(v0 + 48) = 0u;
          *(_OWORD *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
          sub_1003C4AE4(v132, v134, v0 + 16, v133);
          uint64_t v137 = (void *)swift_task_alloc(dword_100654E6C);
          *(void *)(v0 + 1832) = v137;
          *uint64_t v137 = v0;
          v137[1] = sub_100369B00;
          return sub_10042133C(*(void *)(v0 + 864));
        }

        else
        {
          v324 = v59;
          uint64_t v69 = *(void *)(v0 + 1184);
          uint64_t v70 = *(void *)(v0 + 1176);
          uint64_t v71 = *(void *)(v0 + 1072);
          uint64_t v72 = *(void *)(v0 + 1064);
          uint64_t v73 = *(void *)(v0 + 1008);
          uint64_t v74 = *(void *)(v0 + 976);
          uint64_t v75 = *(void *)(v0 + 968);
          uint64_t v76 = *(void *)(v0 + 768);
          uint64_t v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 984) + 32LL);
          *(void *)(v0 + 1408) = v77;
          v77(v73, v75, v74);
          uint64_t v78 = *(uint64_t (**)(void))(v71 + 16);
          *(void *)(v0 + 14swift_unknownObjectWeakDestroy(v0 + 16) = v78;
          ((void (*)(uint64_t, uint64_t, uint64_t))v78)(v70, v69, v72);
          uint64_t v79 = swift_retain_n(v76, 2LL);
          uint64_t v80 = (os_log_s *)Logger.logObject.getter(v79);
          os_log_type_t v81 = static os_log_type_t.default.getter();
          BOOL v82 = os_log_type_enabled(v80, v81);
          uint64_t v83 = *(void *)(v0 + 1176);
          v332 = v78;
          if (v82)
          {
            os_log_type_t v284 = v81;
            uint64_t v298 = v80;
            uint64_t v316 = v0 + 688;
            uint64_t v84 = *(void *)(v0 + 976);
            uint64_t v85 = *(void *)(v0 + 960);
            uint64_t v86 = swift_slowAlloc(32LL, -1LL);
            uint64_t v279 = swift_slowAlloc(64LL, -1LL);
            v338[0] = v279;
            *(_DWORD *)uint64_t v86 = 141558531;
            *(void *)(v0 + 704) = 1752392040LL;
            uint64_t v87 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v290, v0 + 712, v86 + 4, v86 + 12);
            *(_WORD *)(v86 + 12) = 2081;
            SFAirDrop.ContactRequest.contact.getter(v87);
            uint64_t v88 = v324(v85, 1LL, v84);
            uint64_t v309 = v57;
            if ((_DWORD)v88 == 1)
            {
              sub_100187100(*(void *)(v0 + 960), &qword_100649F50);
              uint64_t v89 = (const char *)0x800000010050C310LL;
              uint64_t v90 = 0xD000000000000020LL;
            }

            else
            {
              uint64_t v138 = *(void *)(v0 + 984);
              uint64_t v139 = *(void *)(v0 + 976);
              uint64_t v140 = *(void *)(v0 + 960);
              uint64_t v141 = SFAirDrop.ContactInfo.description.getter(v88);
              uint64_t v89 = v142;
              (*(void (**)(uint64_t, uint64_t))(v138 + 8))(v140, v139);
              uint64_t v90 = v141;
            }

            uint64_t v143 = *(void *)(v0 + 1264);
            uint64_t v260 = *(void *)(v0 + 1248);
            v264 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
            uint64_t v144 = *(void *)(v0 + 1176);
            uint64_t v145 = *(void *)(v0 + 1072);
            uint64_t v146 = *(void *)(v0 + 1064);
            uint64_t v147 = *(void *)(v0 + 1056);
            uint64_t v148 = *(void *)(v0 + 1032);
            uint64_t v268 = *(void *)(v0 + 1040);
            uint64_t v271 = *(void *)(v0 + 1016);
            uint64_t v291 = *(void *)(v0 + 768);
            *(void *)(v0 + 680) = sub_10018CDB4(v90, (unint64_t)v89, v338);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 680, v316, v86 + 14, v86 + 22);
            __n128 v149 = swift_bridgeObjectRelease(v89);
            uint64_t v150 = v146;
            uint64_t v123 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v145 + 8);
            uint64_t v151 = v123(v144, v150, v149);
            *(_WORD *)(v86 + 22) = 2080;
            uint64_t v152 = CurrentValueSubject.value.getter(v151);
            SFAirDropReceive.Transfer.askRequest.getter(v152);
            uint64_t v153 = v264(v143, v260);
            SFAirDropReceive.AskRequest.type.getter(v153);
            v304(v147, v268);
            uint64_t v154 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
            uint64_t v155 = dispatch thunk of CustomStringConvertible.description.getter(v271, v154);
            uint64_t v157 = v156;
            uint64_t v57 = v309;
            v309(v148, v271);
            *(void *)(v0 + 688) = sub_10018CDB4(v155, (unint64_t)v157, v338);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v316, v294, v86 + 24, v86 + 32);
            swift_bridgeObjectRelease(v157);
            swift_release_n(v291, 2LL);
            _os_log_impl( (void *)&_mh_execute_header,  v298,  v284,  "Exchange Contact CONTINUE {senderContact: %{private,mask.hash}s, type: %s}",  (uint8_t *)v86,  0x20u);
            swift_arrayDestroy(v279, 2LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v279, -1LL, -1LL);
            swift_slowDealloc(v86, -1LL, -1LL);

            uint64_t v78 = v332;
          }

          else
          {
            uint64_t v120 = *(void *)(v0 + 1072);
            uint64_t v121 = *(void *)(v0 + 1064);
            uint64_t v122 = *(void *)(v0 + 768);

            uint64_t v123 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v120 + 8);
            ((void (*)(uint64_t, uint64_t))v123)(v83, v121);
            swift_release_n(v122, 2LL);
          }

          *(void *)(v0 + 1424) = v123;
          uint64_t v158 = *(void *)(v0 + 1072);
          uint64_t v159 = *(void *)(v0 + 1064);
          uint64_t v160 = *(void *)(v0 + 912);
          sub_1001915A4(*(void *)(v0 + 760), v160, &qword_100649F88);
          unsigned int v161 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48);
          *(void *)(v0 + 1432) = v161;
          if (v161(v160, 1LL, v159) == 1)
          {
            sub_100187100(*(void *)(v0 + 912), &qword_100649F88);
            v318 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
            v326 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
            uint64_t v162 = *(void *)(v0 + 1264);
            uint64_t v334 = *(void *)(v0 + 1248);
            v337 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
            uint64_t v163 = *(void *)(v0 + 1240);
            uint64_t v164 = *(void *)(v0 + 1224);
            uint64_t v165 = *(void *)(v0 + 1008);
            uint64_t v166 = *(void *)(v0 + 984);
            uint64_t v167 = *(void *)(v0 + 976);
            uint64_t v168 = *(void *)(v0 + 848);
            sub_10036BA14(v165, v168);
            uint64_t v169 = v163 + *(int *)(sub_100183098(&qword_10064B758) + 48);
            int v170 = *(void (**)(uint64_t, uint64_t, uint64_t))(v166 + 16);
            *(void *)(v0 + 1544) = v170;
            v170(v163, v165, v167);
            uint64_t v171 = sub_100183098(&qword_1006451B0);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v171 - 8) + 16LL))(v169, v168, v171);
            v318(v163, enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:), v164);
            sub_10044E6FC(v163, v162);
            v326(v163, v164);
            v337(v162, v334);
            return swift_task_switch(sub_100365C38, 0LL, 0LL);
          }

          else
          {
            v300 = v123;
            uint64_t v172 = (void *)(v0 + 456);
            uint64_t v173 = *(void *)(v0 + 1168);
            uint64_t v174 = *(void *)(v0 + 1160);
            uint64_t v175 = *(void *)(v0 + 1064);
            uint64_t v176 = *(void *)(v0 + 768);
            (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1072) + 32LL))( v173,  *(void *)(v0 + 912),  v175);
            ((void (*)(uint64_t, uint64_t, uint64_t))v78)(v174, v173, v175);
            uint64_t v177 = swift_retain_n(v176, 2LL);
            uint64_t v178 = (os_log_s *)Logger.logObject.getter(v177);
            os_log_type_t v179 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v178, v179))
            {
              v265 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
              uint64_t v180 = *(void *)(v0 + 1264);
              uint64_t v261 = *(void *)(v0 + 1248);
              os_log_type_t v319 = v179;
              uint64_t v181 = *(void *)(v0 + 1160);
              uint64_t v311 = (void (*)(uint64_t, uint64_t))v57;
              uint64_t v182 = *(void *)(v0 + 1064);
              uint64_t v183 = *(void *)(v0 + 1056);
              uint64_t v269 = *(void *)(v0 + 1040);
              uint64_t v257 = *(void *)(v0 + 1032);
              uint64_t v275 = *(void *)(v0 + 1016);
              unint64_t v286 = *(void *)(v0 + 768);
              uint64_t v184 = swift_slowAlloc(32LL, -1LL);
              uint64_t v280 = swift_slowAlloc(64LL, -1LL);
              v338[0] = v280;
              *(_DWORD *)uint64_t v184 = 141558531;
              *(void *)(v0 + 736) = 1752392040LL;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744, v184 + 4, v184 + 12);
              *(_WORD *)(v184 + 12) = 2081;
              uint64_t v185 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
              uint64_t v186 = dispatch thunk of CustomStringConvertible.description.getter(v182, v185);
              uint64_t v188 = (const char *)v187;
              *(void *)(v0 + 744) = sub_10018CDB4(v186, v187, v338);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 744, v0 + 752, v184 + 14, v184 + 22);
              __n128 v189 = swift_bridgeObjectRelease(v188);
              uint64_t v190 = v300(v181, v182, v189);
              *(_WORD *)(v184 + 22) = 2080;
              uint64_t v191 = CurrentValueSubject.value.getter(v190);
              SFAirDropReceive.Transfer.askRequest.getter(v191);
              uint64_t v192 = v265(v180, v261);
              SFAirDropReceive.AskRequest.type.getter(v192);
              uint64_t v193 = v183;
              uint64_t v172 = (void *)(v0 + 456);
              v304(v193, v269);
              uint64_t v194 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
              uint64_t v195 = dispatch thunk of CustomStringConvertible.description.getter(v275, v194);
              uint64_t v197 = v196;
              v311(v257, v275);
              *(void *)(v0 + 728) = sub_10018CDB4(v195, (unint64_t)v197, v338);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 728, v0 + 736, v184 + 24, v184 + 32);
              swift_bridgeObjectRelease(v197);
              swift_release_n(v286, 2LL);
              _os_log_impl( (void *)&_mh_execute_header,  v178,  v319,  "Exchange Contact CONTINUE. Respond to sender {contactToSend: %{private,mask.hash}s, type: %s}",  (uint8_t *)v184,  0x20u);
              swift_arrayDestroy(v280, 2LL, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v280, -1LL, -1LL);
              swift_slowDealloc(v184, -1LL, -1LL);
            }

            else
            {
              uint64_t v199 = *(void *)(v0 + 1160);
              uint64_t v200 = *(void *)(v0 + 1064);
              uint64_t v201 = *(void *)(v0 + 768);

              ((void (*)(uint64_t, uint64_t))v300)(v199, v200);
              uint64_t v198 = swift_release_n(v201, 2LL);
            }

            uint64_t v202 = *(void *)(v0 + 976);
            uint64_t v203 = *(void *)(v0 + 952);
            SFAirDrop.ContactRequest.contact.getter(v198);
            if (v324(v203, 1LL, v202) == 1)
            {
              sub_100187100(*(void *)(v0 + 952), &qword_100649F50);
              uint64_t v204 = 0LL;
              uint64_t v205 = 0LL;
            }

            else
            {
              uint64_t v206 = *(void *)(v0 + 984);
              uint64_t v207 = *(void *)(v0 + 976);
              uint64_t v208 = *(void *)(v0 + 952);
              uint64_t v204 = SFAirDrop.ContactInfo.accountHandle.getter();
              uint64_t v205 = v209;
              (*(void (**)(uint64_t, uint64_t))(v206 + 8))(v208, v207);
            }

            uint64_t v210 = *(void *)(v0 + 1168);
            uint64_t v211 = *(void *)(v0 + 1152);
            uint64_t v212 = *(void *)(v0 + 1072);
            uint64_t v213 = *(void *)(v0 + 1064);
            sub_1002E03F4(v204, v205, v172);
            uint64_t v214 = *(void *)(v0 + 456);
            uint64_t v215 = *(const char **)(v0 + 464);
            uint64_t v216 = *(void *)(v0 + 472);
            unint64_t v320 = *(void *)(v0 + 496);
            uint64_t v327 = *(void *)(v0 + 488);
            unint64_t v305 = *(void *)(v0 + 512);
            uint64_t v312 = *(void *)(v0 + 504);
            uint64_t v281 = *(void *)(v0 + 520);
            unint64_t v287 = *(void *)(v0 + 480);
            uint64_t v272 = *(void *)(v0 + 536);
            uint64_t v276 = *(const char **)(v0 + 528);
            __n128 v217 = swift_bridgeObjectRelease(v205);
            (*(void (**)(uint64_t, void, uint64_t, __n128))(v212 + 104))( v211,  enum case for SFAirDrop.ContactRequest.notNeeded(_:),  v213,  v217);
            char v218 = static SFAirDrop.ContactRequest.== infix(_:_:)(v210, v211);
            ((void (*)(uint64_t, uint64_t))v300)(v211, v213);
            if ((v218 & 1) != 0)
            {
              uint64_t v214 = 0LL;
              uint64_t v215 = 0LL;
              uint64_t v216 = 0LL;
              unint64_t v219 = 0LL;
              uint64_t v220 = 0LL;
              unint64_t v221 = 0LL;
              uint64_t v222 = 0LL;
              unint64_t v223 = 0LL;
              uint64_t v224 = 0LL;
              v225 = 0LL;
              uint64_t v226 = 0LL;
            }

            else
            {
              sub_10025F56C( (void *)(v0 + 456),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F43C);
              uint64_t v224 = v281;
              unint64_t v219 = v287;
              unint64_t v221 = v320;
              uint64_t v220 = v327;
              unint64_t v223 = v305;
              uint64_t v222 = v312;
              uint64_t v226 = v272;
              v225 = v276;
            }

            unint64_t v321 = v221;
            uint64_t v328 = v220;
            unint64_t v306 = v223;
            uint64_t v313 = v222;
            *(void *)(v0 + 1520) = v226;
            *(void *)(v0 + 1512) = v225;
            *(void *)(v0 + 1504) = v224;
            *(void *)(v0 + 1496) = v223;
            *(void *)(v0 + 1488) = v222;
            *(void *)(v0 + 1480) = v221;
            *(void *)(v0 + 1472) = v220;
            *(void *)(v0 + 1464) = v219;
            *(void *)(v0 + 1456) = v216;
            *(void *)(v0 + 1448) = v215;
            *(void *)(v0 + 1440) = v214;
            uint64_t v227 = *(void *)(v0 + 1264);
            uint64_t v277 = v214;
            uint64_t v282 = *(void *)(v0 + 1248);
            uint64_t v288 = *(void *)(v0 + 1152);
            uint64_t v292 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
            uint64_t v301 = *(void *)(v0 + 880);
            uint64_t v228 = *(void *)(v0 + 856);
            *(void *)(v0 + 104) = v214;
            *(void *)(v0 + 112) = v215;
            *(void *)(v0 + 120) = v216;
            *(void *)(v0 + 128) = v219;
            *(void *)(v0 + 136) = v220;
            *(void *)(v0 + 144) = v221;
            *(void *)(v0 + 152) = v222;
            *(void *)(v0 + 160) = v223;
            *(void *)(v0 + 168) = v224;
            *(void *)(v0 + 176) = v225;
            *(void *)(v0 + 184) = v226;
            uint64_t v229 = v224;
            uint64_t v230 = v332();
            uint64_t v231 = CurrentValueSubject.value.getter(v230);
            SFAirDropReceive.Transfer.id.getter(v231);
            v292(v227, v282);
            sub_10025F43C(v277, v215, v216, v219, v328, v321, v313, v306, v229, v225);
            sub_1003C4AE4(v288, v228, v0 + 104, v301);
            uint64_t v232 = (void *)swift_task_alloc(dword_100654E6C);
            *(void *)(v0 + 1528) = v232;
            *uint64_t v232 = v0;
            v232[1] = sub_100365A34;
            return sub_10042133C(*(void *)(v0 + 880));
          }
        }
      }
    }
  }

  return result;
}

uint64_t sub_10036490C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1360);
  *(void *)(*v1 + 1368) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100369E9C;
  }
  else {
    uint64_t v4 = sub_100364970;
  }
  return swift_task_switch(v4, *(void *)(v2 + 1312), 0LL);
}

uint64_t sub_100364970()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
  os_log_t log = (os_log_t)(v0 + 704);
  uint64_t v219 = v0 + 696;
  uint64_t v2 = *(void *)(v0 + 1264);
  uint64_t v3 = *(void *)(v0 + 1248);
  uint64_t v4 = *(void *)(v0 + 1056);
  *(void *)os_log_type_t typeb = *(void *)(v0 + 1048);
  uint64_t v5 = *(void *)(v0 + 1032);
  uint64_t v229 = *(void *)(v0 + 1040);
  uint64_t v233 = *(void *)(v0 + 1024);
  uint64_t v240 = *(void *)(v0 + 1016);
  uint64_t v247 = *(void *)(v0 + 984);
  uint64_t v251 = *(void *)(v0 + 976);
  uint64_t v6 = *(void *)(v0 + 968);
  uint64_t v7 = *(void *)(v0 + 768);
  uint64_t v8 = sub_1003C48B8(*(void *)(v0 + 1184));
  *(void *)(v0 + 1376) = *(void *)(v7
                                     + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  uint64_t v9 = CurrentValueSubject.value.getter(v8);
  SFAirDropReceive.Transfer.askRequest.getter(v9);
  uint64_t v10 = v1(v2, v3);
  SFAirDropReceive.AskRequest.type.getter(v10);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)typeb + 8LL);
  *(void *)(v0 + 1384) = v11;
  uint64_t v12 = v229;
  uint64_t v230 = v11;
  uint64_t v13 = ((uint64_t (*)(uint64_t, uint64_t))v11)(v4, v12);
  *(_BYTE *)(v0 + 1864) = SFAirDrop.TransferType.isOnlyExchange.getter(v13) & 1;
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v233 + 8);
  *(void *)(v0 + 1392) = v14;
  uint64_t v15 = v14(v5, v240);
  SFAirDrop.ContactRequest.contact.getter(v15);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v247 + 48);
  *(void *)(v0 + 1400) = v16;
  if (v16(v6, 1LL, v251) == 1)
  {
    uint64_t v17 = *(void *)(v0 + 1072);
    uint64_t v18 = *(void *)(v0 + 1064);
    uint64_t v19 = *(void *)(v0 + 888);
    uint64_t v20 = *(void *)(v0 + 760);
    sub_100187100(*(void *)(v0 + 968), &qword_100649F50);
    sub_1001915A4(v20, v19, &qword_100649F88);
    int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1LL, v18);
    uint64_t v22 = *(void *)(v0 + 1096);
    uint64_t v23 = *(void *)(v0 + 1072);
    uint64_t v24 = *(void *)(v0 + 1064);
    uint64_t v25 = *(void *)(v0 + 888);
    if (v21 == 1)
    {
      (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))( v22,  enum case for SFAirDrop.ContactRequest.notNeeded(_:),  v24);
      sub_100187100(v25, &qword_100649F88);
    }

    else
    {
      (*(void (**)(uint64_t, void, uint64_t))(v23 + 32))(v22, *(void *)(v0 + 888), v24);
    }

    uint64_t v48 = *(void *)(v0 + 1096);
    uint64_t v49 = *(void *)(v0 + 1080);
    uint64_t v50 = *(void *)(v0 + 1064);
    uint64_t v51 = *(void *)(v0 + 768);
    uint64_t v52 = *(void (**)(void, void, uint64_t))(*(void *)(v0 + 1072) + 16LL);
    v52(*(void *)(v0 + 1088), *(void *)(v0 + 1184), v50);
    uint64_t v252 = (uint64_t (*)(uint64_t, void, void))v52;
    v52(v49, v48, v50);
    uint64_t v53 = swift_retain_n(v51, 2LL);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v194 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v56 = *(void *)(v0 + 1264);
      uint64_t v191 = *(void *)(v0 + 1248);
      os_log_type_t v249 = v55;
      uint64_t v57 = *(void *)(v0 + 1088);
      *(void *)typec = *(void *)(v0 + 1080);
      uint64_t v189 = *(void *)(v0 + 1072);
      uint64_t v58 = *(void *)(v0 + 1064);
      uint64_t v59 = *(void *)(v0 + 1056);
      uint64_t v60 = *(void *)(v0 + 1032);
      uint64_t v197 = *(void *)(v0 + 1040);
      uint64_t v200 = *(void *)(v0 + 1016);
      uint64_t v207 = *(void *)(v0 + 768);
      uint64_t v235 = (void (*)(uint64_t, uint64_t))v14;
      uint64_t v61 = swift_slowAlloc(52LL, -1LL);
      uint64_t v242 = swift_slowAlloc(96LL, -1LL);
      v256[0] = v242;
      *(_DWORD *)uint64_t v61 = 141559043;
      *(void *)(v0 + 696) = 1752392040LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v219, log, v61 + 4, v61 + 12);
      *(_WORD *)(v61 + 12) = 2081;
      os_log_t loga = v54;
      uint64_t v220 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
      uint64_t v62 = v58;
      uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter(v58, v220);
      uint64_t v65 = (const char *)v64;
      *(void *)(v0 + 592) = sub_10018CDB4(v63, v64, v256);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 592, v0 + 600, v61 + 14, v61 + 22);
      __n128 v66 = swift_bridgeObjectRelease(v65);
      uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v189 + 8);
      uint64_t v68 = v67(v57, v62, v66);
      *(_WORD *)(v61 + 22) = 2080;
      uint64_t v69 = CurrentValueSubject.value.getter(v68);
      SFAirDropReceive.Transfer.askRequest.getter(v69);
      uint64_t v70 = v194(v56, v191);
      SFAirDropReceive.AskRequest.type.getter(v70);
      v230(v59, v197);
      uint64_t v71 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter(v200, v71);
      uint64_t v74 = v73;
      v235(v60, v200);
      *(void *)(v0 + 600) = sub_10018CDB4(v72, (unint64_t)v74, v256);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 600, v0 + 608, v61 + 24, v61 + 32);
      swift_bridgeObjectRelease(v74);
      swift_release_n(v207, 2LL);
      *(_WORD *)(v61 + 32) = 2160;
      *(void *)(v0 + 608) = 1752392040LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 608, v0 + 616, v61 + 34, v61 + 42);
      *(_WORD *)(v61 + 42) = 2081;
      uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter(v62, v220);
      uint64_t v77 = (const char *)v76;
      *(void *)(v0 + 6swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v75, v76, v256);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 616, v0 + 624, v61 + 44, v61 + 52);
      __n128 v78 = swift_bridgeObjectRelease(v77);
      v67(*(void *)typec, v62, v78);
      _os_log_impl( (void *)&_mh_execute_header,  loga,  v249,  "Exchange Contact END - Sender did not send contact {contactRequest: %{private,mask.hash}s, type: %s, contactToSe nd: %{private,mask.hash}s}",  (uint8_t *)v61,  0x34u);
      swift_arrayDestroy(v242, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v242, -1LL, -1LL);
      swift_slowDealloc(v61, -1LL, -1LL);
    }

    else
    {
      uint64_t v82 = *(void *)(v0 + 1088);
      uint64_t v83 = *(void *)(v0 + 1080);
      uint64_t v84 = *(void *)(v0 + 1072);
      uint64_t v85 = *(void *)(v0 + 1064);
      uint64_t v86 = *(void *)(v0 + 768);

      uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v84 + 8);
      ((void (*)(uint64_t, uint64_t))v67)(v82, v85);
      swift_release_n(v86, 2LL);
      ((void (*)(uint64_t, uint64_t))v67)(v83, v85);
    }

    *(void *)(v0 + 1824) = v67;
    uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
    uint64_t v88 = *(void *)(v0 + 1264);
    uint64_t v89 = *(void *)(v0 + 1248);
    uint64_t v90 = *(void *)(v0 + 1152);
    uint64_t v91 = *(void *)(v0 + 864);
    uint64_t v92 = *(void *)(v0 + 856);
    uint64_t v93 = v252(v90, *(void *)(v0 + 1096), *(void *)(v0 + 1064));
    uint64_t v94 = CurrentValueSubject.value.getter(v93);
    SFAirDropReceive.Transfer.id.getter(v94);
    v87(v88, v89);
    *(void *)(v0 + 96) = 0LL;
    *(_OWORD *)(v0 + 64) = 0u;
    *(_OWORD *)(v0 + 80) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 48) = 0u;
    *(_OWORD *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
    sub_1003C4AE4(v90, v92, v0 + 16, v91);
    uint64_t v95 = (void *)swift_task_alloc(dword_100654E6C);
    *(void *)(v0 + 1832) = v95;
    *uint64_t v95 = v0;
    v95[1] = sub_100369B00;
    return sub_10042133C(*(void *)(v0 + 864));
  }

  else
  {
    uint64_t v26 = *(void *)(v0 + 1184);
    uint64_t v27 = *(void *)(v0 + 1176);
    uint64_t v28 = *(void *)(v0 + 1072);
    uint64_t v29 = *(void *)(v0 + 1064);
    uint64_t v30 = *(void *)(v0 + 1008);
    uint64_t v31 = *(void *)(v0 + 976);
    uint64_t v32 = *(void *)(v0 + 968);
    uint64_t v33 = *(void *)(v0 + 768);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 984) + 32LL);
    *(void *)(v0 + 1408) = v34;
    v34(v30, v32, v31);
    uint64_t v35 = *(uint64_t (**)(void))(v28 + 16);
    *(void *)(v0 + 14swift_unknownObjectWeakDestroy(v0 + 16) = v35;
    uint64_t v248 = v35;
    ((void (*)(uint64_t, uint64_t, uint64_t))v35)(v27, v26, v29);
    uint64_t v36 = swift_retain_n(v33, 2LL);
    uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
    os_log_type_t v38 = static os_log_type_t.default.getter();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = *(void *)(v0 + 1176);
    if (v39)
    {
      os_log_type_t v206 = v38;
      uint64_t v211 = v37;
      *(void *)os_log_type_t type = v0 + 688;
      uint64_t v41 = *(void *)(v0 + 976);
      uint64_t v42 = *(void *)(v0 + 960);
      uint64_t v43 = swift_slowAlloc(32LL, -1LL);
      uint64_t v203 = swift_slowAlloc(64LL, -1LL);
      v256[0] = v203;
      *(_DWORD *)uint64_t v43 = 141558531;
      *(void *)(v0 + 704) = 1752392040LL;
      uint64_t v44 = UnsafeMutableRawBufferPointer.copyMemory(from:)(log, v0 + 712, v43 + 4, v43 + 12);
      *(_WORD *)(v43 + 12) = 2081;
      SFAirDrop.ContactRequest.contact.getter(v44);
      uint64_t v45 = v16(v42, 1LL, v41);
      uint64_t v234 = v14;
      uint64_t v241 = v16;
      if ((_DWORD)v45 == 1)
      {
        sub_100187100(*(void *)(v0 + 960), &qword_100649F50);
        uint64_t v46 = (const char *)0x800000010050C310LL;
        uint64_t v47 = 0xD000000000000020LL;
      }

      else
      {
        uint64_t v97 = *(void *)(v0 + 984);
        uint64_t v98 = *(void *)(v0 + 976);
        uint64_t v99 = *(void *)(v0 + 960);
        uint64_t v100 = SFAirDrop.ContactInfo.description.getter(v45);
        uint64_t v46 = v101;
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v99, v98);
        uint64_t v47 = v100;
      }

      uint64_t v102 = *(void *)(v0 + 1264);
      uint64_t v192 = *(void *)(v0 + 1248);
      uint64_t v195 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v103 = *(void *)(v0 + 1176);
      uint64_t v104 = *(void *)(v0 + 1072);
      uint64_t v105 = *(void *)(v0 + 1064);
      uint64_t v106 = *(void *)(v0 + 1056);
      uint64_t v107 = *(void *)(v0 + 1032);
      uint64_t v198 = *(void *)(v0 + 1040);
      uint64_t v201 = *(void *)(v0 + 1016);
      os_log_t logb = *(os_log_t *)(v0 + 768);
      *(void *)(v0 + 680) = sub_10018CDB4(v47, (unint64_t)v46, v256);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 680, *(void *)type, v43 + 14, v43 + 22);
      __n128 v108 = swift_bridgeObjectRelease(v46);
      uint64_t v253 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v104 + 8);
      uint64_t v109 = v253(v103, v105, v108);
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t v110 = CurrentValueSubject.value.getter(v109);
      SFAirDropReceive.Transfer.askRequest.getter(v110);
      uint64_t v111 = v195(v102, v192);
      SFAirDropReceive.AskRequest.type.getter(v111);
      v230(v106, v198);
      uint64_t v112 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      uint64_t v113 = dispatch thunk of CustomStringConvertible.description.getter(v201, v112);
      uint64_t v115 = v114;
      uint64_t v14 = v234;
      v234(v107, v201);
      *(void *)(v0 + 688) = sub_10018CDB4(v113, (unint64_t)v115, v256);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(*(void *)type, v219, v43 + 24, v43 + 32);
      swift_bridgeObjectRelease(v115);
      swift_release_n(logb, 2LL);
      _os_log_impl( (void *)&_mh_execute_header,  v211,  v206,  "Exchange Contact CONTINUE {senderContact: %{private,mask.hash}s, type: %s}",  (uint8_t *)v43,  0x20u);
      swift_arrayDestroy(v203, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v203, -1LL, -1LL);
      swift_slowDealloc(v43, -1LL, -1LL);

      uint64_t v16 = v241;
    }

    else
    {
      uint64_t v79 = *(void *)(v0 + 1072);
      uint64_t v80 = *(void *)(v0 + 1064);
      uint64_t v81 = *(void *)(v0 + 768);

      uint64_t v253 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v79 + 8);
      ((void (*)(uint64_t, uint64_t))v253)(v40, v80);
      swift_release_n(v81, 2LL);
    }

    *(void *)(v0 + 1424) = v253;
    uint64_t v116 = *(void *)(v0 + 1072);
    uint64_t v117 = *(void *)(v0 + 1064);
    uint64_t v118 = *(void *)(v0 + 912);
    sub_1001915A4(*(void *)(v0 + 760), v118, &qword_100649F88);
    __n128 v119 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
    *(void *)(v0 + 1432) = v119;
    if (v119(v118, 1LL, v117) == 1)
    {
      sub_100187100(*(void *)(v0 + 912), &qword_100649F88);
      uint64_t v236 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
      uint64_t v243 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
      uint64_t v120 = *(void *)(v0 + 1264);
      uint64_t v250 = *(void *)(v0 + 1248);
      uint64_t v254 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v121 = *(void *)(v0 + 1240);
      uint64_t v122 = *(void *)(v0 + 1224);
      uint64_t v123 = *(void *)(v0 + 1008);
      uint64_t v124 = *(void *)(v0 + 984);
      uint64_t v125 = *(void *)(v0 + 976);
      uint64_t v126 = *(void *)(v0 + 848);
      sub_10036BA14(v123, v126);
      uint64_t v127 = v121 + *(int *)(sub_100183098(&qword_10064B758) + 48);
      uint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16);
      *(void *)(v0 + 1544) = v128;
      v128(v121, v123, v125);
      uint64_t v129 = sub_100183098(&qword_1006451B0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 16LL))(v127, v126, v129);
      v236(v121, enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:), v122);
      sub_10044E6FC(v121, v120);
      v243(v121, v122);
      v254(v120, v250);
      return swift_task_switch(sub_100365C38, 0LL, 0LL);
    }

    else
    {
      uint64_t v130 = *(void *)(v0 + 1168);
      uint64_t v131 = *(void *)(v0 + 1160);
      uint64_t v132 = *(void *)(v0 + 1064);
      uint64_t v133 = *(void *)(v0 + 768);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 1072) + 32LL))( v130,  *(void *)(v0 + 912),  v132);
      ((void (*)(uint64_t, uint64_t, uint64_t))v248)(v131, v130, v132);
      uint64_t v134 = swift_retain_n(v133, 2LL);
      uint64_t v135 = (os_log_s *)Logger.logObject.getter(v134);
      os_log_type_t v136 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v135, v136))
      {
        uint64_t v196 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
        uint64_t v244 = v16;
        uint64_t v137 = *(void *)(v0 + 1264);
        uint64_t v193 = *(void *)(v0 + 1248);
        os_log_type_t typed = v136;
        uint64_t v138 = *(void *)(v0 + 1160);
        uint64_t v237 = (void (*)(uint64_t, uint64_t))v14;
        uint64_t v139 = *(void *)(v0 + 1064);
        uint64_t v140 = *(void *)(v0 + 1056);
        uint64_t v199 = *(void *)(v0 + 1040);
        uint64_t v190 = *(void *)(v0 + 1032);
        uint64_t v204 = *(void *)(v0 + 1016);
        os_log_t v212 = *(os_log_t *)(v0 + 768);
        uint64_t v141 = swift_slowAlloc(32LL, -1LL);
        uint64_t v208 = swift_slowAlloc(64LL, -1LL);
        v256[0] = v208;
        *(_DWORD *)uint64_t v141 = 141558531;
        *(void *)(v0 + 736) = 1752392040LL;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 736, v0 + 744, v141 + 4, v141 + 12);
        *(_WORD *)(v141 + 12) = 2081;
        uint64_t v142 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
        uint64_t v143 = dispatch thunk of CustomStringConvertible.description.getter(v139, v142);
        uint64_t v145 = (const char *)v144;
        *(void *)(v0 + 744) = sub_10018CDB4(v143, v144, v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 744, v0 + 752, v141 + 14, v141 + 22);
        __n128 v146 = swift_bridgeObjectRelease(v145);
        uint64_t v147 = v253(v138, v139, v146);
        *(_WORD *)(v141 + 22) = 2080;
        uint64_t v148 = CurrentValueSubject.value.getter(v147);
        SFAirDropReceive.Transfer.askRequest.getter(v148);
        uint64_t v149 = v137;
        uint64_t v16 = v244;
        uint64_t v150 = v196(v149, v193);
        SFAirDropReceive.AskRequest.type.getter(v150);
        v230(v140, v199);
        uint64_t v151 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        uint64_t v152 = dispatch thunk of CustomStringConvertible.description.getter(v204, v151);
        uint64_t v154 = v153;
        v237(v190, v204);
        *(void *)(v0 + 728) = sub_10018CDB4(v152, (unint64_t)v154, v256);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 728, v0 + 736, v141 + 24, v141 + 32);
        swift_bridgeObjectRelease(v154);
        swift_release_n(v212, 2LL);
        _os_log_impl( (void *)&_mh_execute_header,  v135,  typed,  "Exchange Contact CONTINUE. Respond to sender {contactToSend: %{private,mask.hash}s, type: %s}",  (uint8_t *)v141,  0x20u);
        swift_arrayDestroy(v208, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v208, -1LL, -1LL);
        swift_slowDealloc(v141, -1LL, -1LL);
      }

      else
      {
        uint64_t v156 = *(void *)(v0 + 1160);
        uint64_t v157 = *(void *)(v0 + 1064);
        uint64_t v158 = *(void *)(v0 + 768);

        ((void (*)(uint64_t, uint64_t))v253)(v156, v157);
        uint64_t v155 = swift_release_n(v158, 2LL);
      }

      uint64_t v159 = *(void *)(v0 + 976);
      uint64_t v160 = *(void *)(v0 + 952);
      SFAirDrop.ContactRequest.contact.getter(v155);
      if (v16(v160, 1LL, v159) == 1)
      {
        sub_100187100(*(void *)(v0 + 952), &qword_100649F50);
        uint64_t v161 = 0LL;
        uint64_t v162 = 0LL;
      }

      else
      {
        uint64_t v163 = *(void *)(v0 + 984);
        uint64_t v164 = *(void *)(v0 + 976);
        uint64_t v165 = *(void *)(v0 + 952);
        uint64_t v161 = SFAirDrop.ContactInfo.accountHandle.getter();
        uint64_t v162 = v166;
        (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v165, v164);
      }

      uint64_t v167 = *(void *)(v0 + 1168);
      uint64_t v168 = *(void *)(v0 + 1152);
      uint64_t v169 = *(void *)(v0 + 1072);
      uint64_t v170 = *(void *)(v0 + 1064);
      sub_1002E03F4(v161, v162, (void *)(v0 + 456));
      uint64_t v172 = *(void *)(v0 + 456);
      uint64_t v171 = *(const char **)(v0 + 464);
      unint64_t v209 = *(void *)(v0 + 480);
      os_log_t v213 = *(os_log_t *)(v0 + 472);
      unint64_t v238 = *(void *)(v0 + 496);
      uint64_t v245 = *(void *)(v0 + 488);
      uint64_t v231 = *(void *)(v0 + 504);
      *(void *)os_log_type_t typea = *(void *)(v0 + 512);
      uint64_t v221 = *(void *)(v0 + 520);
      uint64_t v202 = *(void *)(v0 + 536);
      uint64_t v205 = *(const char **)(v0 + 528);
      __n128 v173 = swift_bridgeObjectRelease(v162);
      (*(void (**)(uint64_t, void, uint64_t, __n128))(v169 + 104))( v168,  enum case for SFAirDrop.ContactRequest.notNeeded(_:),  v170,  v173);
      char v174 = static SFAirDrop.ContactRequest.== infix(_:_:)(v167, v168);
      ((void (*)(uint64_t, uint64_t))v253)(v168, v170);
      if ((v174 & 1) != 0)
      {
        uint64_t v172 = 0LL;
        uint64_t v171 = 0LL;
        uint64_t v175 = 0LL;
        unint64_t v176 = 0LL;
        uint64_t v177 = 0LL;
        unint64_t v178 = 0LL;
        uint64_t v179 = 0LL;
        unint64_t v180 = 0LL;
        uint64_t v181 = 0LL;
        uint64_t v182 = 0LL;
        uint64_t v183 = 0LL;
      }

      else
      {
        sub_10025F56C( (void *)(v0 + 456),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F43C);
        unint64_t v176 = v209;
        uint64_t v175 = (uint64_t)v213;
        unint64_t v178 = v238;
        uint64_t v177 = v245;
        uint64_t v179 = v231;
        unint64_t v180 = *(void *)typea;
        uint64_t v181 = v221;
        uint64_t v183 = v202;
        uint64_t v182 = v205;
      }

      uint64_t v222 = v181;
      unint64_t v239 = v178;
      uint64_t v246 = v177;
      uint64_t v232 = v179;
      unint64_t typee = v180;
      *(void *)(v0 + 1520) = v183;
      *(void *)(v0 + 1512) = v182;
      *(void *)(v0 + 1504) = v181;
      *(void *)(v0 + 1496) = v180;
      *(void *)(v0 + 1488) = v179;
      *(void *)(v0 + 1480) = v178;
      *(void *)(v0 + 1472) = v177;
      *(void *)(v0 + 1464) = v176;
      *(void *)(v0 + 1456) = v175;
      *(void *)(v0 + 1448) = v171;
      *(void *)(v0 + 1440) = v172;
      uint64_t v184 = *(void *)(v0 + 1264);
      uint64_t v210 = *(void *)(v0 + 1248);
      os_log_t v214 = *(os_log_t *)(v0 + 1152);
      os_log_t logc = *(os_log_t *)(v0 + 1352);
      uint64_t v255 = *(void *)(v0 + 880);
      uint64_t v185 = *(void *)(v0 + 856);
      *(void *)(v0 + 104) = v172;
      *(void *)(v0 + 112) = v171;
      *(void *)(v0 + 120) = v175;
      *(void *)(v0 + 128) = v176;
      *(void *)(v0 + 136) = v177;
      *(void *)(v0 + 144) = v178;
      *(void *)(v0 + 152) = v179;
      *(void *)(v0 + 160) = v180;
      *(void *)(v0 + 168) = v181;
      *(void *)(v0 + 176) = v182;
      *(void *)(v0 + 184) = v183;
      uint64_t v186 = v248();
      uint64_t v187 = CurrentValueSubject.value.getter(v186);
      SFAirDropReceive.Transfer.id.getter(v187);
      ((void (*)(uint64_t, uint64_t))logc)(v184, v210);
      sub_10025F43C(v172, v171, v175, v176, v246, v239, v232, typee, v222, v182);
      sub_1003C4AE4((uint64_t)v214, v185, v0 + 104, v255);
      uint64_t v188 = (void *)swift_task_alloc(dword_100654E6C);
      *(void *)(v0 + 1528) = v188;
      *uint64_t v188 = v0;
      v188[1] = sub_100365A34;
      return sub_10042133C(*(void *)(v0 + 880));
    }
  }

uint64_t sub_100365A34()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1528);
  *(void *)(*v1 + 1536) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_10036A4DC;
  }
  else {
    uint64_t v4 = sub_100365A98;
  }
  return swift_task_switch(v4, *(void *)(v2 + 1312), 0LL);
}

uint64_t sub_100365A98()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
  uint64_t v2 = *(void *)(v0 + 1168);
  uint64_t v3 = *(void *)(v0 + 1064);
  uint64_t v4 = *(void *)(v0 + 880);
  sub_10025F4D4( *(void *)(v0 + 1440),  *(const char **)(v0 + 1448),  *(void *)(v0 + 1456),  *(void *)(v0 + 1464),  *(void *)(v0 + 1472),  *(void *)(v0 + 1480),  *(void *)(v0 + 1488),  *(void *)(v0 + 1496),  *(void *)(v0 + 1504),  *(const char **)(v0 + 1512));
  sub_10025F56C( (void *)(v0 + 456),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
  sub_1001A4BC8(v4, _s14descr1005DEB71C16ExchangeResponseVMa);
  v1(v2, v3);
  uint64_t v16 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
  uint64_t v5 = *(void *)(v0 + 1264);
  uint64_t v18 = *(void *)(v0 + 1248);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
  uint64_t v6 = *(void *)(v0 + 1240);
  uint64_t v7 = *(void *)(v0 + 1224);
  uint64_t v8 = *(void *)(v0 + 1008);
  uint64_t v9 = *(void *)(v0 + 984);
  uint64_t v10 = *(void *)(v0 + 976);
  uint64_t v11 = *(void *)(v0 + 848);
  sub_10036BA14(v8, v11);
  uint64_t v12 = v6 + *(int *)(sub_100183098(&qword_10064B758) + 48);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  *(void *)(v0 + 1544) = v13;
  v13(v6, v8, v10);
  uint64_t v14 = sub_100183098(&qword_1006451B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16LL))(v12, v11, v14);
  v16(v6, enum case for SFAirDropReceive.Transfer.State.waitingForShouldImportContactResponse(_:), v7);
  sub_10044E6FC(v6, v5);
  v17(v6, v7);
  v19(v5, v18);
  return swift_task_switch(sub_100365C38, 0LL, 0LL);
}

uint64_t sub_100365C38()
{
  uint64_t v1 = v0[106];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[194] = v2;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[195] = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[196] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100365CE0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[105],  &unk_100646820,  v2,  sub_10036EA64,  v3,  0LL,  0LL,  v0[102]);
}

uint64_t sub_100365CE0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 1568LL);
  *(void *)(*(void *)v1 + 1576LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_100366F50;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v6 = v2[195];
    uint64_t v7 = v2[194];
    uint64_t v8 = v2[164];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_100365D60;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_100365D60()
{
  uint64_t v1 = *(void *)(v0 + 840);
  uint64_t v2 = *(void *)(v0 + 832);
  uint64_t v3 = *(void *)(v0 + 824);
  uint64_t v4 = *(void *)(v0 + 816);
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))( v2,  enum case for SFAirDropReceive.ItemDestination.noItem(_:),  v4);
  uint64_t v5 = sub_100183F14( &qword_100646840,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  char v6 = dispatch thunk of static Equatable.== infix(_:_:)(v1, v2, v4, v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 1584) = v7;
  uint64_t v8 = v7(v2, v4);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v11 = 67109120;
    *(_DWORD *)(v0 + 1848) = (v6 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1848, v0 + 1852, v11 + 4, v11 + 8);
    _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Exchange Contact CONTINUE. Accept permission {shouldAcceptSenderContact: %{BOOL}d}",  v11,  8u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
  uint64_t v13 = *(void *)(v0 + 976);
  uint64_t v14 = *(void *)(v0 + 944);

  SFAirDrop.ContactRequest.contact.getter(v15);
  if (v12(v14, 1LL, v13) == 1)
  {
    char v239 = v6;
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
    uint64_t v17 = *(void *)(v0 + 1184);
    uint64_t v18 = *(void *)(v0 + 1128);
    uint64_t v19 = *(void *)(v0 + 1064);
    sub_100187100(*(void *)(v0 + 944), &qword_100649F50);
    uint64_t v20 = v16(v18, v17, v19);
    int v21 = (os_log_s *)Logger.logObject.getter(v20);
    os_log_type_t v22 = static os_log_type_t.default.getter();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1424);
    uint64_t v233 = v0 + 656;
    if (v23)
    {
      int v219 = *(unsigned __int8 *)(v0 + 1864);
      uint64_t v25 = *(void *)(v0 + 1128);
      uint64_t v26 = *(void *)(v0 + 1064);
      uint64_t v27 = swift_slowAlloc(34LL, -1LL);
      uint64_t v210 = swift_slowAlloc(32LL, -1LL);
      v253[0] = v210;
      *(_DWORD *)uint64_t v27 = 141558787;
      *(void *)(v0 + 664) = 1752392040LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 664, v0 + 672, v27 + 4, v27 + 12);
      *(_WORD *)(v27 + 12) = 2081;
      uint64_t v28 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
      uint64_t v29 = v26;
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter(v26, v28);
      uint64_t v32 = (const char *)v31;
      *(void *)(v0 + 672) = sub_10018CDB4(v30, v31, v253);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 672, v0 + 680, v27 + 14, v27 + 22);
      __n128 v33 = swift_bridgeObjectRelease(v32);
      v24(v25, v29, v33);
      *(_WORD *)(v27 + 22) = 1024;
      *(_DWORD *)(v0 + 1856) = (v239 & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1856, v0 + 1860, v27 + 24, v27 + 28);
      *(_WORD *)(v27 + 28) = 1024;
      *(_DWORD *)(v0 + 1860) = v219;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1860, v0 + 1864, v27 + 30, v27 + 34);
      _os_log_impl( (void *)&_mh_execute_header,  v21,  v22,  "Exchange Contact IMPORT SKIP {contactRequest: %{private,mask.hash}s, shouldAcceptSenderContact: %{BOOL}d, isExch angeType: %{BOOL}d}",  (uint8_t *)v27,  0x22u);
      swift_arrayDestroy(v210, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v210, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    else
    {
      uint64_t v54 = *(void *)(v0 + 1128);
      uint64_t v55 = *(void *)(v0 + 1064);

      ((void (*)(uint64_t, uint64_t))v24)(v54, v55);
    }

    uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1432);
    uint64_t v57 = *(void *)(v0 + 1064);
    uint64_t v58 = *(void *)(v0 + 896);
    sub_1001915A4(*(void *)(v0 + 760), v58, &qword_100649F88);
    LODWORD(v57) = v56(v58, 1LL, v57);
    uint64_t v59 = sub_100187100(v58, &qword_100649F88);
    if ((_DWORD)v57 == 1)
    {
      uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
      uint64_t v61 = *(void *)(v0 + 1184);
      uint64_t v62 = *(void *)(v0 + 1112);
      uint64_t v63 = *(void *)(v0 + 1064);
      uint64_t v64 = *(void *)(v0 + 936);
      SFAirDrop.ContactRequest.contact.getter(v59);
      sub_100187100(v64, &qword_100649F50);
      uint64_t v65 = v60(v62, v61, v63);
      __n128 v66 = (os_log_s *)Logger.logObject.getter(v65);
      os_log_type_t v67 = static os_log_type_t.default.getter();
      BOOL v68 = os_log_type_enabled(v66, v67);
      uint64_t v69 = *(void *)(v0 + 1112);
      if (v68)
      {
        uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
        uint64_t v71 = *(void *)(v0 + 976);
        uint64_t v72 = *(void *)(v0 + 928);
        uint64_t v73 = swift_slowAlloc(22LL, -1LL);
        uint64_t v246 = swift_slowAlloc(32LL, -1LL);
        v253[0] = v246;
        *(_DWORD *)uint64_t v73 = 141558275;
        *(void *)(v0 + 640) = 1752392040LL;
        uint64_t v74 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v73 + 4, v73 + 12);
        *(_WORD *)(v73 + 12) = 2081;
        SFAirDrop.ContactRequest.contact.getter(v74);
        uint64_t v75 = v70(v72, 1LL, v71);
        if ((_DWORD)v75 == 1)
        {
          sub_100187100(*(void *)(v0 + 928), &qword_100649F50);
          unint64_t v76 = (const char *)0x800000010050C310LL;
          uint64_t v77 = 0xD000000000000020LL;
        }

        else
        {
          uint64_t v124 = *(void *)(v0 + 984);
          uint64_t v125 = *(void *)(v0 + 976);
          uint64_t v126 = *(void *)(v0 + 928);
          uint64_t v77 = SFAirDrop.ContactInfo.description.getter(v75);
          unint64_t v76 = v127;
          (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v126, v125);
        }

        uint64_t v128 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1424);
        uint64_t v129 = *(void *)(v0 + 1112);
        uint64_t v130 = *(void *)(v0 + 1064);
        *(void *)(v0 + 648) = sub_10018CDB4(v77, (unint64_t)v76, v253);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v233, v73 + 14, v73 + 22);
        __n128 v131 = swift_bridgeObjectRelease(v76);
        v128(v129, v130, v131);
        _os_log_impl( (void *)&_mh_execute_header,  v66,  v67,  "Exchange Contact SHARE BACK PERMISSION SKIP. No senderContact or no receiverContact {senderContact: %{private,mask.hash}s}",  (uint8_t *)v73,  0x16u);
        swift_arrayDestroy(v246, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v246, -1LL, -1LL);
        swift_slowDealloc(v73, -1LL, -1LL);
      }

      else
      {
        uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
        uint64_t v102 = *(void *)(v0 + 1064);

        v101(v69, v102);
      }

      uint64_t v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
      uint64_t v202 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
      uint64_t v207 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
      uint64_t v133 = *(void *)(v0 + 1264);
      uint64_t v230 = *(void *)(v0 + 1248);
      uint64_t v236 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v134 = *(void *)(v0 + 1240);
      uint64_t v135 = *(void *)(v0 + 1224);
      uint64_t v136 = *(void *)(v0 + 1184);
      uint64_t v137 = *(void *)(v0 + 1120);
      uint64_t v138 = *(void *)(v0 + 1064);
      uint64_t v243 = *(void *)(v0 + 976);
      uint64_t v250 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
      uint64_t v225 = *(void *)(v0 + 920);
      unsigned int v217 = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
      os_log_t v213 = *(void (**)(uint64_t))(*(void *)(v0 + 1072) + 104LL);
      v213(v137);
      uint64_t v139 = v134 + *(int *)(sub_100183098(&qword_10064B740) + 48);
      v132(v134, v136, v138);
      v132(v139, v137, v138);
      v202(v134, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v135);
      sub_10044E6FC(v134, v133);
      v207(v134, v135);
      uint64_t v140 = v236(v133, v230);
      SFAirDrop.ContactRequest.contact.getter(v140);
      if (v250(v225, 1LL, v243) == 1)
      {
        sub_100187100(*(void *)(v0 + 920), &qword_100649F50);
        uint64_t v141 = 0LL;
        uint64_t v142 = 0LL;
      }

      else
      {
        uint64_t v143 = *(void *)(v0 + 984);
        uint64_t v144 = *(void *)(v0 + 976);
        uint64_t v145 = *(void *)(v0 + 920);
        uint64_t v141 = SFAirDrop.ContactInfo.accountHandle.getter();
        uint64_t v142 = v146;
        (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v145, v144);
      }

      uint64_t v147 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
      uint64_t v148 = *(void *)(v0 + 1152);
      uint64_t v149 = *(void *)(v0 + 1120);
      uint64_t v150 = *(void *)(v0 + 1064);
      sub_1002E03F4(v141, v142, (void *)(v0 + 368));
      uint64_t v151 = *(const char **)(v0 + 376);
      uint64_t v152 = *(void *)(v0 + 384);
      unint64_t v203 = *(void *)(v0 + 392);
      uint64_t v208 = *(void *)(v0 + 368);
      unint64_t v244 = *(void *)(v0 + 408);
      uint64_t v251 = *(void *)(v0 + 400);
      unint64_t v231 = *(void *)(v0 + 424);
      uint64_t v237 = *(void *)(v0 + 416);
      uint64_t v226 = *(void *)(v0 + 432);
      uint64_t v197 = *(void *)(v0 + 448);
      uint64_t v199 = *(const char **)(v0 + 440);
      __n128 v153 = swift_bridgeObjectRelease(v142);
      ((void (*)(uint64_t, void, uint64_t, __n128))v213)(v148, v217, v150, v153);
      char v154 = static SFAirDrop.ContactRequest.== infix(_:_:)(v149, v148);
      v147(v148, v150);
      if ((v154 & 1) != 0)
      {
        uint64_t v155 = 0LL;
        uint64_t v151 = 0LL;
        uint64_t v152 = 0LL;
        unint64_t v156 = 0LL;
        uint64_t v157 = 0LL;
        unint64_t v158 = 0LL;
        uint64_t v159 = 0LL;
        unint64_t v160 = 0LL;
        uint64_t v161 = 0LL;
        uint64_t v162 = 0LL;
        uint64_t v163 = 0LL;
      }

      else
      {
        sub_10025F56C( (void *)(v0 + 368),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F43C);
        unint64_t v156 = v203;
        uint64_t v155 = v208;
        unint64_t v158 = v244;
        uint64_t v157 = v251;
        unint64_t v160 = v231;
        uint64_t v159 = v237;
        uint64_t v161 = v226;
        uint64_t v163 = v197;
        uint64_t v162 = v199;
      }

      unint64_t v245 = v158;
      uint64_t v252 = v157;
      unint64_t v232 = v160;
      uint64_t v238 = v159;
      *(void *)(v0 + 1800) = v163;
      *(void *)(v0 + 1792) = v162;
      *(void *)(v0 + 1784) = v161;
      *(void *)(v0 + 1776) = v160;
      *(void *)(v0 + 1768) = v159;
      *(void *)(v0 + 1760) = v158;
      *(void *)(v0 + 1752) = v157;
      *(void *)(v0 + 1744) = v156;
      *(void *)(v0 + 1736) = v152;
      *(void *)(v0 + 1728) = v151;
      *(void *)(v0 + 1720) = v155;
      uint64_t v164 = v161;
      uint64_t v227 = v161;
      uint64_t v165 = *(uint64_t (**)(void))(v0 + 1416);
      uint64_t v166 = *(void *)(v0 + 1264);
      uint64_t v204 = *(void *)(v0 + 1248);
      uint64_t v209 = *(void *)(v0 + 1152);
      os_log_t v214 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v218 = *(void *)(v0 + 872);
      uint64_t v167 = *(void *)(v0 + 856);
      *(void *)(v0 + 280) = v155;
      *(void *)(v0 + 288) = v151;
      *(void *)(v0 + 296) = v152;
      *(void *)(v0 + 304) = v156;
      *(void *)(v0 + 312) = v157;
      *(void *)(v0 + 320) = v158;
      *(void *)(v0 + 328) = v159;
      *(void *)(v0 + 336) = v160;
      *(void *)(v0 + 344) = v164;
      *(void *)(v0 + 352) = v162;
      *(void *)(v0 + 360) = v163;
      uint64_t v168 = v165();
      uint64_t v169 = CurrentValueSubject.value.getter(v168);
      SFAirDropReceive.Transfer.id.getter(v169);
      v214(v166, v204);
      sub_10025F43C(v155, v151, v152, v156, v252, v245, v238, v232, v227, v162);
      sub_1003C4AE4(v209, v167, v0 + 280, v218);
      uint64_t v170 = (void *)swift_task_alloc(dword_100654E6C);
      *(void *)(v0 + 1808) = v170;
      void *v170 = v0;
      v170[1] = sub_1003693BC;
      return sub_10042133C(*(void *)(v0 + 872));
    }

    else
    {
      uint64_t v86 = swift_retain_n(*(void *)(v0 + 768), 2LL);
      uint64_t v87 = (os_log_s *)Logger.logObject.getter(v86);
      os_log_type_t v88 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v222 = *(void (**)(uint64_t, uint64_t))(v0 + 1392);
        uint64_t v89 = *(void *)(v0 + 1264);
        uint64_t v200 = *(void *)(v0 + 1248);
        uint64_t v205 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
        uint64_t v90 = *(void *)(v0 + 1056);
        uint64_t v211 = *(void *)(v0 + 1040);
        uint64_t v215 = *(void (**)(uint64_t, uint64_t))(v0 + 1384);
        uint64_t v91 = *(void *)(v0 + 1032);
        uint64_t v92 = *(void *)(v0 + 1016);
        uint64_t v240 = *(void *)(v0 + 768);
        uint64_t v93 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v247 = swift_slowAlloc(32LL, -1LL);
        v253[0] = v247;
        *(_DWORD *)uint64_t v93 = 136315138;
        uint64_t v94 = CurrentValueSubject.value.getter(v247);
        SFAirDropReceive.Transfer.askRequest.getter(v94);
        uint64_t v95 = v205(v89, v200);
        SFAirDropReceive.AskRequest.type.getter(v95);
        v215(v90, v211);
        uint64_t v96 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter(v92, v96);
        uint64_t v99 = v98;
        v222(v91, v92);
        *(void *)(v0 + 656) = sub_10018CDB4(v97, (unint64_t)v99, v253);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v233, v0 + 664, v93 + 4, v93 + 12);
        swift_bridgeObjectRelease(v99);
        swift_release_n(v240, 2LL);
        _os_log_impl( (void *)&_mh_execute_header,  v87,  v88,  "Exchange Contact SHARE BACK SKIP. Already responded with contact {type: %s}",  v93,  0xCu);
        swift_arrayDestroy(v247, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v247, -1LL, -1LL);
        swift_slowDealloc(v93, -1LL, -1LL);
      }

      else
      {
        uint64_t v103 = *(void *)(v0 + 768);

        uint64_t v100 = swift_release_n(v103, 2LL);
      }

      uint64_t v104 = (os_log_s *)Logger.logObject.getter(v100);
      os_log_type_t v105 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v104, v105))
      {
        uint64_t v106 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v106 = 0;
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "Exchange Contact END", v106, 2u);
        swift_slowDealloc(v106, -1LL, -1LL);
      }

      uint64_t v107 = *(void (**)(uint64_t, uint64_t))(v0 + 1584);
      uint64_t v228 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
      uint64_t v234 = *(void *)(v0 + 1288);
      uint64_t v241 = *(void *)(v0 + 1280);
      uint64_t v248 = *(void *)(v0 + 1304);
      uint64_t v220 = *(void *)(v0 + 1184);
      uint64_t v223 = *(void *)(v0 + 1216);
      uint64_t v108 = *(void *)(v0 + 1064);
      uint64_t v109 = *(void *)(v0 + 1008);
      uint64_t v110 = *(void *)(v0 + 984);
      uint64_t v111 = *(void *)(v0 + 976);
      uint64_t v112 = *(void *)(v0 + 848);
      uint64_t v113 = *(void *)(v0 + 840);
      uint64_t v114 = *(void *)(v0 + 816);

      v107(v113, v114);
      sub_100187100(v112, &qword_100646800);
      (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v109, v111);
      v228(v220, v108);
      sub_1001A4BC8(v223, _s14descr1005DEB71C15ExchangeRequestVMa);
      (*(void (**)(uint64_t, uint64_t))(v234 + 8))(v248, v241);
      uint64_t v115 = *(void *)(v0 + 1296);
      uint64_t v116 = *(void *)(v0 + 1272);
      uint64_t v117 = *(void *)(v0 + 1264);
      uint64_t v118 = *(void *)(v0 + 1240);
      uint64_t v119 = *(void *)(v0 + 1216);
      uint64_t v120 = *(void *)(v0 + 1192);
      uint64_t v121 = *(void *)(v0 + 1184);
      uint64_t v122 = *(void *)(v0 + 1176);
      uint64_t v123 = *(void *)(v0 + 1168);
      uint64_t v171 = *(void *)(v0 + 1160);
      uint64_t v172 = *(void *)(v0 + 1152);
      uint64_t v173 = *(void *)(v0 + 1144);
      uint64_t v174 = *(void *)(v0 + 1136);
      uint64_t v175 = *(void *)(v0 + 1128);
      uint64_t v176 = *(void *)(v0 + 1120);
      uint64_t v177 = *(void *)(v0 + 1112);
      uint64_t v178 = *(void *)(v0 + 1104);
      uint64_t v179 = *(void *)(v0 + 1096);
      uint64_t v180 = *(void *)(v0 + 1088);
      uint64_t v181 = *(void *)(v0 + 1080);
      uint64_t v182 = *(void *)(v0 + 1056);
      uint64_t v183 = *(void *)(v0 + 1032);
      uint64_t v184 = *(void *)(v0 + 1008);
      uint64_t v185 = *(void *)(v0 + 1000);
      uint64_t v186 = *(void *)(v0 + 992);
      uint64_t v187 = *(void *)(v0 + 968);
      uint64_t v188 = *(void *)(v0 + 960);
      uint64_t v189 = *(void *)(v0 + 952);
      uint64_t v190 = *(void *)(v0 + 944);
      uint64_t v191 = *(void *)(v0 + 936);
      uint64_t v192 = *(void *)(v0 + 928);
      uint64_t v193 = *(void *)(v0 + 920);
      uint64_t v194 = *(void *)(v0 + 912);
      uint64_t v195 = *(void *)(v0 + 904);
      uint64_t v196 = *(void *)(v0 + 896);
      uint64_t v198 = *(void *)(v0 + 888);
      uint64_t v201 = *(void *)(v0 + 880);
      uint64_t v206 = *(void *)(v0 + 872);
      uint64_t v212 = *(void *)(v0 + 864);
      uint64_t v216 = *(void *)(v0 + 856);
      uint64_t v221 = *(void *)(v0 + 848);
      uint64_t v224 = *(void *)(v0 + 840);
      uint64_t v229 = *(void *)(v0 + 832);
      uint64_t v235 = *(void *)(v0 + 808);
      uint64_t v242 = *(void *)(v0 + 784);
      uint64_t v249 = *(void *)(v0 + 776);
      swift_task_dealloc(*(void *)(v0 + 1304));
      swift_task_dealloc(v115);
      swift_task_dealloc(v116);
      swift_task_dealloc(v117);
      swift_task_dealloc(v118);
      swift_task_dealloc(v119);
      swift_task_dealloc(v120);
      swift_task_dealloc(v121);
      swift_task_dealloc(v122);
      swift_task_dealloc(v123);
      swift_task_dealloc(v171);
      swift_task_dealloc(v172);
      swift_task_dealloc(v173);
      swift_task_dealloc(v174);
      swift_task_dealloc(v175);
      swift_task_dealloc(v176);
      swift_task_dealloc(v177);
      swift_task_dealloc(v178);
      swift_task_dealloc(v179);
      swift_task_dealloc(v180);
      swift_task_dealloc(v181);
      swift_task_dealloc(v182);
      swift_task_dealloc(v183);
      swift_task_dealloc(v184);
      swift_task_dealloc(v185);
      swift_task_dealloc(v186);
      swift_task_dealloc(v187);
      swift_task_dealloc(v188);
      swift_task_dealloc(v189);
      swift_task_dealloc(v190);
      swift_task_dealloc(v191);
      swift_task_dealloc(v192);
      swift_task_dealloc(v193);
      swift_task_dealloc(v194);
      swift_task_dealloc(v195);
      swift_task_dealloc(v196);
      swift_task_dealloc(v198);
      swift_task_dealloc(v201);
      swift_task_dealloc(v206);
      swift_task_dealloc(v212);
      swift_task_dealloc(v216);
      swift_task_dealloc(v221);
      swift_task_dealloc(v224);
      swift_task_dealloc(v229);
      swift_task_dealloc(v235);
      swift_task_dealloc(v242);
      swift_task_dealloc(v249);
      return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
    }
  }

  else
  {
    char v34 = v6;
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1544);
    uint64_t v36 = *(void *)(v0 + 1000);
    uint64_t v37 = *(void *)(v0 + 992);
    uint64_t v38 = *(void *)(v0 + 976);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 1408))(v36, *(void *)(v0 + 944), v38);
    uint64_t v39 = v35(v37, v36, v38);
    uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
    os_log_type_t v41 = static os_log_type_t.default.getter();
    BOOL v42 = os_log_type_enabled(v40, v41);
    uint64_t v43 = *(void *)(v0 + 992);
    uint64_t v44 = *(void *)(v0 + 984);
    uint64_t v45 = *(void *)(v0 + 976);
    if (v42)
    {
      uint64_t v46 = swift_slowAlloc(28LL, -1LL);
      uint64_t v47 = swift_slowAlloc(32LL, -1LL);
      v253[0] = v47;
      *(_DWORD *)uint64_t v46 = 67109635;
      *(_DWORD *)(v0 + 1852) = (v34 & 1) == 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 1852, v0 + 1856, v46 + 4, v46 + 8);
      *(_WORD *)(v46 + 8) = 2160;
      *(void *)(v0 + 712) = 1752392040LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 712, v0 + 720, v46 + 10, v46 + 18);
      *(_WORD *)(v46 + 18) = 2081;
      uint64_t v48 = sub_100183F14( &qword_100650B70,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v45, v48);
      uint64_t v51 = (const char *)v50;
      *(void *)(v0 + 720) = sub_10018CDB4(v49, v50, v253);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 720, v0 + 728, v46 + 20, v46 + 28);
      __n128 v52 = swift_bridgeObjectRelease(v51);
      uint64_t v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
      v53(v43, v45, v52);
      _os_log_impl( (void *)&_mh_execute_header,  v40,  v41,  "Exchange Contact CONTINUE. Importing contact {shouldAcceptSenderContact: %{BOOL}d, senderContact: %{private,mask.hash}s}",  (uint8_t *)v46,  0x1Cu);
      swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    else
    {

      uint64_t v53 = *(void (**)(uint64_t, uint64_t, __n128))(v44 + 8);
      ((void (*)(uint64_t, uint64_t))v53)(v43, v45);
    }

    *(void *)(v0 + 1592) = v53;
    __n128 v78 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
    uint64_t v80 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
    uint64_t v81 = *(void *)(v0 + 1264);
    uint64_t v82 = *(void *)(v0 + 1248);
    uint64_t v83 = *(void *)(v0 + 1240);
    uint64_t v84 = *(void *)(v0 + 1224);
    (*(void (**)(uint64_t, void, void))(v0 + 1544))(v83, *(void *)(v0 + 1000), *(void *)(v0 + 976));
    v80(v83, enum case for SFAirDropReceive.Transfer.State.importingReceivedContact(_:), v84);
    sub_10044E6FC(v83, v81);
    v79(v83, v84);
    v78(v81, v82);
    return swift_task_switch(sub_1003672F0, static AirDropActor.shared, 0LL);
  }

uint64_t sub_100366F50()
{
  uint64_t v1 = v0[194];
  uint64_t v2 = v0[164];
  swift_task_dealloc(v0[195]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100366F9C, v2, 0LL);
}

uint64_t sub_100366F9C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
  uint64_t v2 = *(void *)(v0 + 1216);
  uint64_t v3 = *(void *)(v0 + 1184);
  uint64_t v4 = *(void *)(v0 + 1064);
  uint64_t v5 = *(void *)(v0 + 1008);
  uint64_t v6 = *(void *)(v0 + 984);
  uint64_t v7 = *(void *)(v0 + 976);
  sub_100187100(*(void *)(v0 + 848), &qword_100646800);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v1(v3, v4);
  sub_1001A4BC8(v2, _s14descr1005DEB71C15ExchangeRequestVMa);
  uint64_t v8 = *(void *)(v0 + 1304);
  uint64_t v9 = *(void *)(v0 + 1296);
  uint64_t v10 = *(void *)(v0 + 1272);
  uint64_t v11 = *(void *)(v0 + 1264);
  uint64_t v12 = *(void *)(v0 + 1240);
  uint64_t v13 = *(void *)(v0 + 1216);
  uint64_t v14 = *(void *)(v0 + 1192);
  uint64_t v15 = *(void *)(v0 + 1184);
  uint64_t v16 = *(void *)(v0 + 1176);
  uint64_t v18 = *(void *)(v0 + 1168);
  uint64_t v19 = *(void *)(v0 + 1160);
  uint64_t v20 = *(void *)(v0 + 1152);
  uint64_t v21 = *(void *)(v0 + 1144);
  uint64_t v22 = *(void *)(v0 + 1136);
  uint64_t v23 = *(void *)(v0 + 1128);
  uint64_t v24 = *(void *)(v0 + 1120);
  uint64_t v25 = *(void *)(v0 + 1112);
  uint64_t v26 = *(void *)(v0 + 1104);
  uint64_t v27 = *(void *)(v0 + 1096);
  uint64_t v28 = *(void *)(v0 + 1088);
  uint64_t v29 = *(void *)(v0 + 1080);
  uint64_t v34 = *(void *)(v0 + 1008);
  uint64_t v36 = *(void *)(v0 + 1000);
  uint64_t v38 = *(void *)(v0 + 992);
  uint64_t v39 = *(void *)(v0 + 968);
  uint64_t v41 = *(void *)(v0 + 960);
  uint64_t v30 = *(void *)(v0 + 1056);
  uint64_t v31 = *(void *)(v0 + 952);
  uint64_t v32 = *(void *)(v0 + 1032);
  uint64_t v33 = *(void *)(v0 + 944);
  uint64_t v35 = *(void *)(v0 + 936);
  uint64_t v37 = *(void *)(v0 + 928);
  uint64_t v40 = *(void *)(v0 + 920);
  uint64_t v42 = *(void *)(v0 + 912);
  uint64_t v43 = *(void *)(v0 + 904);
  uint64_t v44 = *(void *)(v0 + 896);
  uint64_t v45 = *(void *)(v0 + 888);
  uint64_t v46 = *(void *)(v0 + 880);
  uint64_t v47 = *(void *)(v0 + 872);
  uint64_t v48 = *(void *)(v0 + 864);
  uint64_t v49 = *(void *)(v0 + 856);
  uint64_t v50 = *(void *)(v0 + 848);
  uint64_t v51 = *(void *)(v0 + 840);
  uint64_t v52 = *(void *)(v0 + 832);
  uint64_t v53 = *(void *)(v0 + 808);
  uint64_t v54 = *(void *)(v0 + 784);
  uint64_t v55 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 1288) + 8LL))(v8, *(void *)(v0 + 1280));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003672F0()
{
  if (qword_100643F60 != -1) {
    swift_once(&qword_100643F60, sub_100220910);
  }
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100649288);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v3,  v4,  "SDAirDropContentHandlerExchange importContact is not implemented on this platform.",  v5,  2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v0 + 1312);

  return swift_task_switch(sub_1003673DC, v6, 0LL);
}

uint64_t sub_1003673DC()
{
  uint64_t v1 = *(void *)(v0 + 800);
  uint64_t v2 = *(void *)(v0 + 792);
  uint64_t v3 = *(void *)(v0 + 784);
  uint64_t v4 = *(void *)(v0 + 1320) + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeConnection;
  swift_beginAccess(v4, v0 + 568, 0LL, 0LL);
  sub_1001915A4(v4, v3, &qword_100650B48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1LL, v2) == 1)
  {
    uint64_t v5 = sub_100187100(*(void *)(v0 + 784), &qword_100650B48);
LABEL_7:
    uint64_t v27 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v27,  v28,  "Exchange Contact IDENTITY IMPORT SKIP. Not provided",  v29,  2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

LABEL_10:
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Exchange Contact CONTINUE. Imported contact", v33, 2u);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 1592);
    uint64_t v35 = *(void *)(v0 + 1000);
    uint64_t v36 = *(void *)(v0 + 976);

    v34(v35, v36);
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1432);
    uint64_t v38 = *(void *)(v0 + 1064);
    uint64_t v39 = *(void *)(v0 + 896);
    sub_1001915A4(*(void *)(v0 + 760), v39, &qword_100649F88);
    LODWORD(v38) = v37(v39, 1LL, v38);
    uint64_t v40 = sub_100187100(v39, &qword_100649F88);
    if ((_DWORD)v38 == 1)
    {
      uint64_t v229 = (void *)(v0 + 368);
      uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
      uint64_t v42 = *(void *)(v0 + 1184);
      uint64_t v43 = *(void *)(v0 + 1112);
      uint64_t v44 = *(void *)(v0 + 1064);
      uint64_t v45 = *(void *)(v0 + 936);
      SFAirDrop.ContactRequest.contact.getter(v40);
      sub_100187100(v45, &qword_100649F50);
      uint64_t v46 = v41(v43, v42, v44);
      uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
      os_log_type_t v48 = static os_log_type_t.default.getter();
      BOOL v49 = os_log_type_enabled(v47, v48);
      uint64_t v50 = *(void *)(v0 + 1112);
      if (v49)
      {
        uint64_t v242 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
        uint64_t v51 = *(void *)(v0 + 976);
        uint64_t v52 = *(void *)(v0 + 928);
        uint64_t v53 = swift_slowAlloc(22LL, -1LL);
        uint64_t v54 = swift_slowAlloc(32LL, -1LL);
        v270[0] = v54;
        *(_DWORD *)uint64_t v53 = 141558275;
        *(void *)(v0 + 640) = 1752392040LL;
        uint64_t v55 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v53 + 4, v53 + 12);
        *(_WORD *)(v53 + 12) = 2081;
        SFAirDrop.ContactRequest.contact.getter(v55);
        uint64_t v56 = v242(v52, 1LL, v51);
        uint64_t v257 = v54;
        if ((_DWORD)v56 == 1)
        {
          sub_100187100(*(void *)(v0 + 928), &qword_100649F50);
          uint64_t v57 = (const char *)0x800000010050C310LL;
          uint64_t v58 = 0xD000000000000020LL;
        }

        else
        {
          uint64_t v118 = *(void *)(v0 + 984);
          uint64_t v119 = *(void *)(v0 + 976);
          uint64_t v120 = *(void *)(v0 + 928);
          uint64_t v58 = SFAirDrop.ContactInfo.description.getter(v56);
          uint64_t v57 = v121;
          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v120, v119);
        }

        uint64_t v122 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1424);
        uint64_t v123 = *(void *)(v0 + 1112);
        uint64_t v124 = *(void *)(v0 + 1064);
        *(void *)(v0 + 648) = sub_10018CDB4(v58, (unint64_t)v57, v270);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v53 + 14, v53 + 22);
        __n128 v125 = swift_bridgeObjectRelease(v57);
        v122(v123, v124, v125);
        _os_log_impl( (void *)&_mh_execute_header,  v47,  v48,  "Exchange Contact SHARE BACK PERMISSION SKIP. No senderContact or no receiverContact {senderContact: %{private,mask.hash}s}",  (uint8_t *)v53,  0x16u);
        swift_arrayDestroy(v257, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v257, -1LL, -1LL);
        swift_slowDealloc(v53, -1LL, -1LL);
      }

      else
      {
        uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
        uint64_t v75 = *(void *)(v0 + 1064);

        v74(v50, v75);
      }

      uint64_t v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
      uint64_t v210 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
      os_log_t v214 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
      uint64_t v127 = *(void *)(v0 + 1264);
      uint64_t v246 = *(void *)(v0 + 1248);
      uint64_t v253 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v128 = *(void *)(v0 + 1240);
      uint64_t v129 = *(void *)(v0 + 1224);
      uint64_t v130 = *(void *)(v0 + 1184);
      uint64_t v131 = *(void *)(v0 + 1120);
      uint64_t v132 = *(void *)(v0 + 1064);
      uint64_t v261 = *(void *)(v0 + 976);
      uint64_t v267 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
      uint64_t v238 = *(void *)(v0 + 920);
      unsigned int v224 = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
      int v219 = *(void (**)(uint64_t))(*(void *)(v0 + 1072) + 104LL);
      v219(v131);
      uint64_t v133 = v128 + *(int *)(sub_100183098(&qword_10064B740) + 48);
      v126(v128, v130, v132);
      v126(v133, v131, v132);
      v210(v128, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v129);
      sub_10044E6FC(v128, v127);
      v214(v128, v129);
      uint64_t v134 = v253(v127, v246);
      SFAirDrop.ContactRequest.contact.getter(v134);
      if (v267(v238, 1LL, v261) == 1)
      {
        sub_100187100(*(void *)(v0 + 920), &qword_100649F50);
        uint64_t v135 = 0LL;
        uint64_t v136 = 0LL;
      }

      else
      {
        uint64_t v137 = *(void *)(v0 + 984);
        uint64_t v138 = *(void *)(v0 + 976);
        uint64_t v139 = *(void *)(v0 + 920);
        uint64_t v135 = SFAirDrop.ContactInfo.accountHandle.getter();
        uint64_t v136 = v140;
        (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v139, v138);
      }

      uint64_t v141 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
      uint64_t v142 = *(void *)(v0 + 1152);
      uint64_t v143 = *(void *)(v0 + 1120);
      uint64_t v144 = *(void *)(v0 + 1064);
      sub_1002E03F4(v135, v136, v229);
      uint64_t v145 = *(void *)(v0 + 368);
      uint64_t v146 = *(void *)(v0 + 384);
      unint64_t v211 = *(void *)(v0 + 392);
      uint64_t v215 = *(const char **)(v0 + 376);
      unint64_t v262 = *(void *)(v0 + 408);
      uint64_t v268 = *(void *)(v0 + 400);
      unint64_t v247 = *(void *)(v0 + 424);
      uint64_t v254 = *(void *)(v0 + 416);
      uint64_t v147 = *(const char **)(v0 + 440);
      uint64_t v239 = *(void *)(v0 + 432);
      uint64_t v207 = *(void *)(v0 + 448);
      __n128 v148 = swift_bridgeObjectRelease(v136);
      ((void (*)(uint64_t, void, uint64_t, __n128))v219)(v142, v224, v144, v148);
      char v149 = static SFAirDrop.ContactRequest.== infix(_:_:)(v143, v142);
      v141(v142, v144);
      if ((v149 & 1) != 0)
      {
        uint64_t v145 = 0LL;
        uint64_t v150 = 0LL;
        uint64_t v146 = 0LL;
        unint64_t v151 = 0LL;
        uint64_t v152 = 0LL;
        unint64_t v153 = 0LL;
        uint64_t v154 = 0LL;
        unint64_t v155 = 0LL;
        uint64_t v156 = 0LL;
        uint64_t v157 = 0LL;
        uint64_t v158 = 0LL;
      }

      else
      {
        sub_10025F56C( v229,  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F43C);
        uint64_t v157 = v147;
        unint64_t v151 = v211;
        uint64_t v150 = v215;
        unint64_t v153 = v262;
        uint64_t v152 = v268;
        unint64_t v155 = v247;
        uint64_t v154 = v254;
        uint64_t v156 = v239;
        uint64_t v158 = v207;
      }

      unint64_t v263 = v153;
      uint64_t v269 = v152;
      unint64_t v248 = v155;
      uint64_t v255 = v154;
      *(void *)(v0 + 1800) = v158;
      *(void *)(v0 + 1792) = v157;
      *(void *)(v0 + 1784) = v156;
      *(void *)(v0 + 1776) = v155;
      *(void *)(v0 + 1768) = v154;
      *(void *)(v0 + 1760) = v153;
      *(void *)(v0 + 1752) = v152;
      *(void *)(v0 + 1744) = v151;
      *(void *)(v0 + 1736) = v146;
      *(void *)(v0 + 1728) = v150;
      *(void *)(v0 + 1720) = v145;
      uint64_t v159 = v156;
      uint64_t v240 = v156;
      unint64_t v160 = *(uint64_t (**)(void))(v0 + 1416);
      uint64_t v161 = *(void *)(v0 + 1264);
      uint64_t v216 = *(void *)(v0 + 1248);
      uint64_t v220 = *(void *)(v0 + 1152);
      uint64_t v225 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v233 = *(void *)(v0 + 872);
      uint64_t v162 = *(void *)(v0 + 856);
      *(void *)(v0 + 280) = v145;
      *(void *)(v0 + 288) = v150;
      *(void *)(v0 + 296) = v146;
      *(void *)(v0 + 304) = v151;
      *(void *)(v0 + 312) = v152;
      *(void *)(v0 + 320) = v153;
      *(void *)(v0 + 328) = v154;
      *(void *)(v0 + 336) = v155;
      *(void *)(v0 + 344) = v159;
      *(void *)(v0 + 352) = v157;
      *(void *)(v0 + 360) = v158;
      uint64_t v163 = v160();
      uint64_t v164 = CurrentValueSubject.value.getter(v163);
      SFAirDropReceive.Transfer.id.getter(v164);
      v225(v161, v216);
      sub_10025F43C(v145, v150, v146, v151, v269, v263, v255, v248, v240, v157);
      sub_1003C4AE4(v220, v162, v0 + 280, v233);
      uint64_t v165 = (void *)swift_task_alloc(dword_100654E6C);
      *(void *)(v0 + 1808) = v165;
      *uint64_t v165 = v0;
      v165[1] = sub_1003693BC;
      return sub_10042133C(*(void *)(v0 + 872));
    }

    else
    {
      uint64_t v59 = swift_retain_n(*(void *)(v0 + 768), 2LL);
      uint64_t v60 = (os_log_s *)Logger.logObject.getter(v59);
      os_log_type_t v61 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v62 = *(void *)(v0 + 1264);
        uint64_t v217 = *(void *)(v0 + 1248);
        uint64_t v222 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
        uint64_t v63 = *(void *)(v0 + 1056);
        uint64_t v227 = *(void *)(v0 + 1040);
        uint64_t v230 = *(void (**)(uint64_t, uint64_t))(v0 + 1384);
        uint64_t v64 = *(void *)(v0 + 1032);
        uint64_t v65 = *(void *)(v0 + 1016);
        uint64_t v243 = *(void (**)(uint64_t, uint64_t))(v0 + 1392);
        uint64_t v250 = *(void *)(v0 + 768);
        __n128 v66 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v258 = swift_slowAlloc(32LL, -1LL);
        v270[0] = v258;
        *(_DWORD *)__n128 v66 = 136315138;
        uint64_t v67 = CurrentValueSubject.value.getter(v258);
        SFAirDropReceive.Transfer.askRequest.getter(v67);
        uint64_t v68 = v222(v62, v217);
        SFAirDropReceive.AskRequest.type.getter(v68);
        v230(v63, v227);
        uint64_t v69 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
        uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter(v65, v69);
        uint64_t v72 = v71;
        v243(v64, v65);
        *(void *)(v0 + 656) = sub_10018CDB4(v70, (unint64_t)v72, v270);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 656, v0 + 664, v66 + 4, v66 + 12);
        swift_bridgeObjectRelease(v72);
        swift_release_n(v250, 2LL);
        _os_log_impl( (void *)&_mh_execute_header,  v60,  v61,  "Exchange Contact SHARE BACK SKIP. Already responded with contact {type: %s}",  v66,  0xCu);
        swift_arrayDestroy(v258, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v258, -1LL, -1LL);
        swift_slowDealloc(v66, -1LL, -1LL);
      }

      else
      {
        uint64_t v76 = *(void *)(v0 + 768);

        uint64_t v73 = swift_release_n(v76, 2LL);
      }

      uint64_t v77 = (os_log_s *)Logger.logObject.getter(v73);
      os_log_type_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "Exchange Contact END", v79, 2u);
        swift_slowDealloc(v79, -1LL, -1LL);
      }

      uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v0 + 1584);
      unint64_t v244 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
      uint64_t v251 = *(void *)(v0 + 1288);
      uint64_t v259 = *(void *)(v0 + 1280);
      uint64_t v265 = *(void *)(v0 + 1304);
      uint64_t v231 = *(void *)(v0 + 1184);
      uint64_t v236 = *(void *)(v0 + 1216);
      uint64_t v81 = *(void *)(v0 + 1064);
      uint64_t v82 = *(void *)(v0 + 1008);
      uint64_t v83 = *(void *)(v0 + 984);
      uint64_t v84 = *(void *)(v0 + 976);
      uint64_t v85 = *(void *)(v0 + 848);
      uint64_t v86 = *(void *)(v0 + 840);
      uint64_t v87 = *(void *)(v0 + 816);

      v80(v86, v87);
      sub_100187100(v85, &qword_100646800);
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
      v244(v231, v81);
      sub_1001A4BC8(v236, _s14descr1005DEB71C15ExchangeRequestVMa);
      (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v265, v259);
      uint64_t v88 = *(void *)(v0 + 1296);
      uint64_t v89 = *(void *)(v0 + 1272);
      uint64_t v90 = *(void *)(v0 + 1264);
      uint64_t v91 = *(void *)(v0 + 1240);
      uint64_t v92 = *(void *)(v0 + 1216);
      uint64_t v93 = *(void *)(v0 + 1192);
      uint64_t v94 = *(void *)(v0 + 1184);
      uint64_t v95 = *(void *)(v0 + 1176);
      uint64_t v96 = *(void *)(v0 + 1168);
      uint64_t v179 = *(void *)(v0 + 1160);
      uint64_t v180 = *(void *)(v0 + 1152);
      uint64_t v181 = *(void *)(v0 + 1144);
      uint64_t v182 = *(void *)(v0 + 1136);
      uint64_t v183 = *(void *)(v0 + 1128);
      uint64_t v184 = *(void *)(v0 + 1120);
      uint64_t v185 = *(void *)(v0 + 1112);
      uint64_t v186 = *(void *)(v0 + 1104);
      uint64_t v187 = *(void *)(v0 + 1096);
      uint64_t v188 = *(void *)(v0 + 1088);
      uint64_t v189 = *(void *)(v0 + 1080);
      uint64_t v190 = *(void *)(v0 + 1056);
      uint64_t v191 = *(void *)(v0 + 1032);
      uint64_t v192 = *(void *)(v0 + 1008);
      uint64_t v193 = *(void *)(v0 + 1000);
      uint64_t v194 = *(void *)(v0 + 992);
      uint64_t v195 = *(void *)(v0 + 968);
      uint64_t v196 = *(void *)(v0 + 960);
      uint64_t v197 = *(void *)(v0 + 952);
      uint64_t v198 = *(void *)(v0 + 944);
      uint64_t v199 = *(void *)(v0 + 936);
      uint64_t v200 = *(void *)(v0 + 928);
      uint64_t v201 = *(void *)(v0 + 920);
      uint64_t v203 = *(void *)(v0 + 912);
      uint64_t v204 = *(void *)(v0 + 904);
      uint64_t v206 = *(void *)(v0 + 896);
      uint64_t v209 = *(void *)(v0 + 888);
      uint64_t v213 = *(void *)(v0 + 880);
      uint64_t v218 = *(void *)(v0 + 872);
      uint64_t v223 = *(void *)(v0 + 864);
      uint64_t v228 = *(void *)(v0 + 856);
      uint64_t v232 = *(void *)(v0 + 848);
      uint64_t v237 = *(void *)(v0 + 840);
      uint64_t v245 = *(void *)(v0 + 832);
      uint64_t v252 = *(void *)(v0 + 808);
      uint64_t v260 = *(void *)(v0 + 784);
      uint64_t v266 = *(void *)(v0 + 776);
      swift_task_dealloc(*(void *)(v0 + 1304));
      swift_task_dealloc(v88);
      swift_task_dealloc(v89);
      swift_task_dealloc(v90);
      swift_task_dealloc(v91);
      swift_task_dealloc(v92);
      swift_task_dealloc(v93);
      swift_task_dealloc(v94);
      swift_task_dealloc(v95);
      swift_task_dealloc(v96);
      swift_task_dealloc(v179);
      swift_task_dealloc(v180);
      swift_task_dealloc(v181);
      swift_task_dealloc(v182);
      swift_task_dealloc(v183);
      swift_task_dealloc(v184);
      swift_task_dealloc(v185);
      swift_task_dealloc(v186);
      swift_task_dealloc(v187);
      swift_task_dealloc(v188);
      swift_task_dealloc(v189);
      swift_task_dealloc(v190);
      swift_task_dealloc(v191);
      swift_task_dealloc(v192);
      swift_task_dealloc(v193);
      swift_task_dealloc(v194);
      swift_task_dealloc(v195);
      swift_task_dealloc(v196);
      swift_task_dealloc(v197);
      swift_task_dealloc(v198);
      swift_task_dealloc(v199);
      swift_task_dealloc(v200);
      swift_task_dealloc(v201);
      swift_task_dealloc(v203);
      swift_task_dealloc(v204);
      swift_task_dealloc(v206);
      swift_task_dealloc(v209);
      swift_task_dealloc(v213);
      swift_task_dealloc(v218);
      swift_task_dealloc(v223);
      swift_task_dealloc(v228);
      swift_task_dealloc(v232);
      swift_task_dealloc(v237);
      swift_task_dealloc(v245);
      swift_task_dealloc(v252);
      swift_task_dealloc(v260);
      swift_task_dealloc(v266);
      return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
    }
  }

  uint64_t v6 = *(void *)(v0 + 1216);
  uint64_t v7 = *(void *)(v0 + 1200);
  sub_1001A4B40(*(void *)(v0 + 784), *(void *)(v0 + 808), type metadata accessor for SDAirDropServerConnection);
  uint64_t v8 = (uint64_t *)(v6 + *(int *)(v7 + 36));
  uint64_t v9 = *v8;
  *(void *)(v0 + 1600) = *v8;
  uint64_t v10 = (const char *)v8[1];
  *(void *)(v0 + 1608) = v10;
  uint64_t v11 = v8[2];
  *(void *)(v0 + 16swift_unknownObjectWeakDestroy(v0 + 16) = v11;
  unint64_t v12 = v8[3];
  *(void *)(v0 + 1624) = v12;
  uint64_t v13 = v8[4];
  *(void *)(v0 + 1632) = v13;
  unint64_t v14 = v8[5];
  *(void *)(v0 + 1640) = v14;
  uint64_t v15 = v8[6];
  *(void *)(v0 + 1648) = v15;
  unint64_t v16 = v8[7];
  *(void *)(v0 + 1656) = v16;
  uint64_t v17 = v8[8];
  *(void *)(v0 + 1664) = v17;
  uint64_t v18 = (const char *)v8[9];
  *(void *)(v0 + 1672) = v18;
  uint64_t v19 = v8[10];
  *(void *)(v0 + 1680) = v19;
  v264 = v18;
  if (!v18)
  {
    uint64_t v5 = sub_1001A4BC8(*(void *)(v0 + 808), type metadata accessor for SDAirDropServerConnection);
    goto LABEL_7;
  }

  uint64_t v235 = v9;
  unint64_t v241 = v12;
  uint64_t v221 = v19;
  uint64_t v226 = v17;
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1432);
  uint64_t v21 = *(void *)(v0 + 1064);
  uint64_t v22 = *(void *)(v0 + 904);
  sub_1001915A4(*(void *)(v0 + 760), v22, &qword_100649F88);
  unint64_t v249 = v16;
  uint64_t v256 = v15;
  if (v20(v22, 1LL, v21) == 1)
  {
    uint64_t v23 = *(void *)(v0 + 904);
    uint64_t v202 = v10;
    swift_bridgeObjectRetain(v10);
    unint64_t v24 = v16;
    uint64_t v25 = v11;
    sub_1001A4C04(v11, v241);
    sub_10019BA8C(v13, v14);
    sub_10019BA8C(v15, v24);
    swift_bridgeObjectRetain(v264);
    uint64_t v26 = sub_100187100(v23, &qword_100649F88);
  }

  else
  {
    uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
    uint64_t v99 = *(void *)(v0 + 1144);
    uint64_t v100 = *(void *)(v0 + 1136);
    unint64_t v101 = v14;
    uint64_t v102 = v13;
    uint64_t v103 = *(void *)(v0 + 1072);
    uint64_t v104 = *(void *)(v0 + 1064);
    (*(void (**)(uint64_t, void, uint64_t))(v103 + 32))(v99, *(void *)(v0 + 904), v104);
    v98(v100, v99, v104);
    os_log_type_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v103 + 88);
    uint64_t v13 = v102;
    unint64_t v14 = v101;
    LODWORD(v99) = v105(v100, v104);
    LODWORD(v100) = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
    swift_bridgeObjectRetain(v10);
    sub_1001A4C04(v11, v241);
    sub_10019BA8C(v13, v101);
    sub_10019BA8C(v256, v249);
    __n128 v106 = swift_bridgeObjectRetain(v264);
    uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1424);
    if ((_DWORD)v99 == (_DWORD)v100)
    {
      uint64_t v108 = ((uint64_t (*)(void, void, __n128))v107)( *(void *)(v0 + 1136),  *(void *)(v0 + 1064),  v106);
      uint64_t v109 = (os_log_s *)Logger.logObject.getter(v108);
      os_log_type_t v110 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v109, v110))
      {
        uint64_t v111 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v111 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v109,  v110,  "Exchange Contact IDENTITY IMPORT SKIP. User chose to only receive",  v111,  2u);
        swift_slowDealloc(v111, -1LL, -1LL);
      }

      uint64_t v112 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1424);
      uint64_t v113 = *(void *)(v0 + 1144);
      uint64_t v114 = *(void *)(v0 + 1064);
      uint64_t v115 = v109;
      uint64_t v116 = *(void *)(v0 + 808);

      __n128 v117 = sub_10025F4D4(v235, v10, v11, v241, v13, v101, v256, v249, v226, v264);
      v112(v113, v114, v117);
      uint64_t v30 = sub_1001A4BC8(v116, type metadata accessor for SDAirDropServerConnection);
      goto LABEL_10;
    }

    uint64_t v25 = v11;
    uint64_t v202 = v10;
    uint64_t v166 = *(void *)(v0 + 1136);
    uint64_t v167 = *(void *)(v0 + 1064);
    ((void (*)(void, uint64_t, __n128))v107)(*(void *)(v0 + 1144), v167, v106);
    uint64_t v26 = v107(v166, v167);
  }

  unint64_t v234 = v14;
  uint64_t v168 = v13;
  uint64_t v169 = (os_log_s *)Logger.logObject.getter(v26);
  os_log_type_t v170 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v169, v170))
  {
    uint64_t v171 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v171 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v169,  v170,  "Exchange Contact CONTINUE. Attempting identity import",  v171,  2u);
    swift_slowDealloc(v171, -1LL, -1LL);
  }

  uint64_t v172 = *(void *)(v0 + 1216);
  uint64_t v173 = *(void *)(v0 + 1200);
  uint64_t v205 = *(void *)(v0 + 808);
  uint64_t v208 = *(void *)(v0 + 800);
  uint64_t v212 = *(void *)(v0 + 792);
  uint64_t v174 = *(void *)(v0 + 776);

  *(void *)(v0 + 192) = v235;
  *(void *)(v0 + 200) = v202;
  *(void *)(v0 + 208) = v25;
  *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v241;
  *(void *)(v0 + 224) = v168;
  *(void *)(v0 + 232) = v234;
  *(void *)(v0 + 240) = v256;
  *(void *)(v0 + 248) = v249;
  *(void *)(v0 + 256) = v226;
  *(void *)(v0 + 264) = v264;
  *(void *)(v0 + 272) = v221;
  uint64_t v175 = (uint64_t *)(v172 + *(int *)(v173 + 32));
  uint64_t v176 = *v175;
  *(void *)(v0 + 1688) = *v175;
  unint64_t v177 = v175[1];
  *(void *)(v0 + 1696) = v177;
  sub_10036EA94(v205, v174);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v208 + 56))(v174, 0LL, 1LL, v212);
  sub_10025F43C(v235, v202, v25, v241, v168, v234, v256, v249, v226, v264);
  sub_1001A4C04(v176, v177);
  uint64_t v178 = (void *)swift_task_alloc(dword_100654E64);
  *(void *)(v0 + 1704) = v178;
  *uint64_t v178 = v0;
  v178[1] = sub_1003685E4;
  return sub_100421B14(v0 + 192, v176, v177, 0LL, 0LL, *(void *)(v0 + 776));
}

uint64_t sub_1003685E4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1704);
  unint64_t v4 = *(void *)(*v1 + 1696);
  uint64_t v5 = *(void *)(*v1 + 1688);
  __int128 v13 = *(_OWORD *)(*v1 + 1664);
  uint64_t v16 = *(void *)(*v1 + 1648);
  unint64_t v17 = *(void *)(*v1 + 1656);
  unint64_t v15 = *(void *)(*v1 + 1640);
  uint64_t v14 = *(void *)(*v1 + 1632);
  unint64_t v6 = *(void *)(*v1 + 1624);
  uint64_t v7 = *(void *)(*v1 + 1616);
  uint64_t v8 = *(const char **)(*v1 + 1608);
  uint64_t v9 = *(void *)(*v1 + 1600);
  uint64_t v10 = *(void *)(*v1 + 776);
  *(void *)(*v1 + 1712) = v0;
  swift_task_dealloc(v3);
  sub_100187100(v10, &qword_100650B48);
  sub_100189B0C(v5, v4);
  sub_10025F4D4(v9, v8, v7, v6, v14, v15, v16, v17, v13, *((const char **)&v13 + 1));
  if (v0) {
    uint64_t v11 = sub_10036A890;
  }
  else {
    uint64_t v11 = sub_1003686F8;
  }
  return swift_task_switch(v11, *(void *)(v2 + 1312), 0LL);
}

uint64_t sub_1003686F8()
{
  uint64_t v1 = *(void *)(v0 + 808);
  sub_10025F4D4( *(void *)(v0 + 1600),  *(const char **)(v0 + 1608),  *(void *)(v0 + 1616),  *(void *)(v0 + 1624),  *(void *)(v0 + 1632),  *(void *)(v0 + 1640),  *(void *)(v0 + 1648),  *(void *)(v0 + 1656),  *(void *)(v0 + 1664),  *(const char **)(v0 + 1672));
  uint64_t v2 = sub_1001A4BC8(v1, type metadata accessor for SDAirDropServerConnection);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Exchange Contact CONTINUE. Imported contact", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1592);
  uint64_t v7 = *(void *)(v0 + 1000);
  uint64_t v8 = *(void *)(v0 + 976);

  v6(v7, v8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1432);
  uint64_t v10 = *(void *)(v0 + 1064);
  uint64_t v11 = *(void *)(v0 + 896);
  sub_1001915A4(*(void *)(v0 + 760), v11, &qword_100649F88);
  LODWORD(v10) = v9(v11, 1LL, v10);
  uint64_t v12 = sub_100187100(v11, &qword_100649F88);
  if ((_DWORD)v10 == 1)
  {
    __int128 v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
    uint64_t v14 = *(void *)(v0 + 1184);
    uint64_t v15 = *(void *)(v0 + 1112);
    uint64_t v16 = *(void *)(v0 + 1064);
    uint64_t v17 = *(void *)(v0 + 936);
    SFAirDrop.ContactRequest.contact.getter(v12);
    sub_100187100(v17, &qword_100649F50);
    uint64_t v18 = v13(v15, v14, v16);
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = *(void *)(v0 + 1112);
    if (v21)
    {
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
      uint64_t v24 = *(void *)(v0 + 976);
      uint64_t v25 = *(void *)(v0 + 928);
      uint64_t v26 = swift_slowAlloc(22LL, -1LL);
      uint64_t v183 = swift_slowAlloc(32LL, -1LL);
      v195[0] = v183;
      *(_DWORD *)uint64_t v26 = 141558275;
      *(void *)(v0 + 640) = 1752392040LL;
      uint64_t v27 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 640, v0 + 648, v26 + 4, v26 + 12);
      *(_WORD *)(v26 + 12) = 2081;
      SFAirDrop.ContactRequest.contact.getter(v27);
      uint64_t v28 = v23(v25, 1LL, v24);
      if ((_DWORD)v28 == 1)
      {
        sub_100187100(*(void *)(v0 + 928), &qword_100649F50);
        uint64_t v29 = (const char *)0x800000010050C310LL;
        uint64_t v30 = 0xD000000000000020LL;
      }

      else
      {
        uint64_t v70 = *(void *)(v0 + 984);
        uint64_t v71 = *(void *)(v0 + 976);
        uint64_t v72 = *(void *)(v0 + 928);
        uint64_t v30 = SFAirDrop.ContactInfo.description.getter(v28);
        uint64_t v29 = v73;
        (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v72, v71);
      }

      uint64_t v74 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1424);
      uint64_t v75 = *(void *)(v0 + 1112);
      uint64_t v76 = *(void *)(v0 + 1064);
      *(void *)(v0 + 648) = sub_10018CDB4(v30, (unint64_t)v29, v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 648, v0 + 656, v26 + 14, v26 + 22);
      __n128 v77 = swift_bridgeObjectRelease(v29);
      v74(v75, v76, v77);
      _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "Exchange Contact SHARE BACK PERMISSION SKIP. No senderContact or no receiverContact {senderContact: %{private,mask.hash}s}",  (uint8_t *)v26,  0x16u);
      swift_arrayDestroy(v183, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v183, -1LL, -1LL);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    else
    {
      uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
      uint64_t v47 = *(void *)(v0 + 1064);

      v46(v22, v47);
    }

    os_log_type_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1416);
    uint64_t v147 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1336);
    uint64_t v152 = *(void (**)(uint64_t, uint64_t))(v0 + 1344);
    uint64_t v79 = *(void *)(v0 + 1264);
    uint64_t v174 = *(void *)(v0 + 1248);
    uint64_t v180 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
    uint64_t v80 = *(void *)(v0 + 1240);
    uint64_t v81 = *(void *)(v0 + 1224);
    uint64_t v82 = *(void *)(v0 + 1184);
    uint64_t v83 = *(void *)(v0 + 1120);
    uint64_t v84 = *(void *)(v0 + 1064);
    uint64_t v187 = *(void *)(v0 + 976);
    uint64_t v192 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1400);
    uint64_t v168 = *(void *)(v0 + 920);
    unsigned int v161 = enum case for SFAirDrop.ContactRequest.notNeeded(_:);
    uint64_t v157 = *(void (**)(uint64_t))(*(void *)(v0 + 1072) + 104LL);
    v157(v83);
    uint64_t v85 = v80 + *(int *)(sub_100183098(&qword_10064B740) + 48);
    v78(v80, v82, v84);
    v78(v85, v83, v84);
    v147(v80, enum case for SFAirDropReceive.Transfer.State.sharingContactBack(_:), v81);
    sub_10044E6FC(v80, v79);
    v152(v80, v81);
    uint64_t v86 = v180(v79, v174);
    SFAirDrop.ContactRequest.contact.getter(v86);
    if (v192(v168, 1LL, v187) == 1)
    {
      sub_100187100(*(void *)(v0 + 920), &qword_100649F50);
      uint64_t v87 = 0LL;
      uint64_t v88 = 0LL;
    }

    else
    {
      uint64_t v89 = *(void *)(v0 + 984);
      uint64_t v90 = *(void *)(v0 + 976);
      uint64_t v91 = *(void *)(v0 + 920);
      uint64_t v87 = SFAirDrop.ContactInfo.accountHandle.getter();
      uint64_t v88 = v92;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v91, v90);
    }

    uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
    uint64_t v94 = *(void *)(v0 + 1152);
    uint64_t v95 = *(void *)(v0 + 1120);
    uint64_t v96 = *(void *)(v0 + 1064);
    sub_1002E03F4(v87, v88, (void *)(v0 + 368));
    uint64_t v97 = *(const char **)(v0 + 376);
    uint64_t v98 = *(void *)(v0 + 384);
    unint64_t v148 = *(void *)(v0 + 392);
    uint64_t v153 = *(void *)(v0 + 368);
    unint64_t v188 = *(void *)(v0 + 408);
    uint64_t v193 = *(void *)(v0 + 400);
    unint64_t v175 = *(void *)(v0 + 424);
    uint64_t v181 = *(void *)(v0 + 416);
    uint64_t v169 = *(void *)(v0 + 432);
    uint64_t v143 = *(void *)(v0 + 448);
    uint64_t v145 = *(const char **)(v0 + 440);
    __n128 v99 = swift_bridgeObjectRelease(v88);
    ((void (*)(uint64_t, void, uint64_t, __n128))v157)(v94, v161, v96, v99);
    char v100 = static SFAirDrop.ContactRequest.== infix(_:_:)(v95, v94);
    v93(v94, v96);
    if ((v100 & 1) != 0)
    {
      uint64_t v101 = 0LL;
      uint64_t v97 = 0LL;
      uint64_t v98 = 0LL;
      unint64_t v102 = 0LL;
      uint64_t v103 = 0LL;
      unint64_t v104 = 0LL;
      uint64_t v105 = 0LL;
      unint64_t v106 = 0LL;
      uint64_t v107 = 0LL;
      uint64_t v108 = 0LL;
      uint64_t v109 = 0LL;
    }

    else
    {
      sub_10025F56C( (void *)(v0 + 368),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F43C);
      unint64_t v102 = v148;
      uint64_t v101 = v153;
      unint64_t v104 = v188;
      uint64_t v103 = v193;
      unint64_t v106 = v175;
      uint64_t v105 = v181;
      uint64_t v107 = v169;
      uint64_t v109 = v143;
      uint64_t v108 = v145;
    }

    unint64_t v189 = v104;
    uint64_t v194 = v103;
    unint64_t v176 = v106;
    uint64_t v182 = v105;
    *(void *)(v0 + 1800) = v109;
    *(void *)(v0 + 1792) = v108;
    *(void *)(v0 + 1784) = v107;
    *(void *)(v0 + 1776) = v106;
    *(void *)(v0 + 1768) = v105;
    *(void *)(v0 + 1760) = v104;
    *(void *)(v0 + 1752) = v103;
    *(void *)(v0 + 1744) = v102;
    *(void *)(v0 + 1736) = v98;
    *(void *)(v0 + 1728) = v97;
    *(void *)(v0 + 1720) = v101;
    uint64_t v110 = v107;
    uint64_t v170 = v107;
    uint64_t v111 = *(uint64_t (**)(void))(v0 + 1416);
    uint64_t v112 = *(void *)(v0 + 1264);
    uint64_t v149 = *(void *)(v0 + 1248);
    uint64_t v154 = *(void *)(v0 + 1152);
    uint64_t v158 = *(void (**)(uint64_t, uint64_t))(v0 + 1352);
    uint64_t v162 = *(void *)(v0 + 872);
    uint64_t v113 = *(void *)(v0 + 856);
    *(void *)(v0 + 280) = v101;
    *(void *)(v0 + 288) = v97;
    *(void *)(v0 + 296) = v98;
    *(void *)(v0 + 304) = v102;
    *(void *)(v0 + 312) = v103;
    *(void *)(v0 + 320) = v104;
    *(void *)(v0 + 328) = v105;
    *(void *)(v0 + 336) = v106;
    *(void *)(v0 + 344) = v110;
    *(void *)(v0 + 352) = v108;
    *(void *)(v0 + 360) = v109;
    uint64_t v114 = v111();
    uint64_t v115 = CurrentValueSubject.value.getter(v114);
    SFAirDropReceive.Transfer.id.getter(v115);
    v158(v112, v149);
    sub_10025F43C(v101, v97, v98, v102, v194, v189, v182, v176, v170, v108);
    sub_1003C4AE4(v154, v113, v0 + 280, v162);
    uint64_t v116 = (void *)swift_task_alloc(dword_100654E6C);
    *(void *)(v0 + 1808) = v116;
    *uint64_t v116 = v0;
    v116[1] = sub_1003693BC;
    return sub_10042133C(*(void *)(v0 + 872));
  }

  else
  {
    uint64_t v31 = swift_retain_n(*(void *)(v0 + 768), 2LL);
    os_log_type_t v32 = (os_log_s *)Logger.logObject.getter(v31);
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 1264);
      uint64_t v150 = *(void *)(v0 + 1248);
      unint64_t v155 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1352);
      uint64_t v35 = *(void *)(v0 + 1056);
      uint64_t v159 = *(void *)(v0 + 1040);
      uint64_t v163 = *(void (**)(uint64_t, uint64_t))(v0 + 1384);
      uint64_t v36 = *(void *)(v0 + 1032);
      uint64_t v37 = *(void *)(v0 + 1016);
      uint64_t v171 = *(void (**)(uint64_t, uint64_t))(v0 + 1392);
      uint64_t v177 = *(void *)(v0 + 768);
      uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v184 = swift_slowAlloc(32LL, -1LL);
      v195[0] = v184;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v39 = CurrentValueSubject.value.getter(v184);
      SFAirDropReceive.Transfer.askRequest.getter(v39);
      uint64_t v40 = v155(v34, v150);
      SFAirDropReceive.AskRequest.type.getter(v40);
      v163(v35, v159);
      uint64_t v41 = sub_100183F14( (unint64_t *)&unk_100656460,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferType,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferType);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter(v37, v41);
      uint64_t v44 = v43;
      v171(v36, v37);
      *(void *)(v0 + 656) = sub_10018CDB4(v42, (unint64_t)v44, v195);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 656, v0 + 664, v38 + 4, v38 + 12);
      swift_bridgeObjectRelease(v44);
      swift_release_n(v177, 2LL);
      _os_log_impl( (void *)&_mh_execute_header,  v32,  v33,  "Exchange Contact SHARE BACK SKIP. Already responded with contact {type: %s}",  v38,  0xCu);
      swift_arrayDestroy(v184, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v184, -1LL, -1LL);
      swift_slowDealloc(v38, -1LL, -1LL);
    }

    else
    {
      uint64_t v48 = *(void *)(v0 + 768);

      uint64_t v45 = swift_release_n(v48, 2LL);
    }

    BOOL v49 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v50 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "Exchange Contact END", v51, 2u);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v0 + 1584);
    uint64_t v172 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
    uint64_t v178 = *(void *)(v0 + 1288);
    uint64_t v185 = *(void *)(v0 + 1280);
    uint64_t v190 = *(void *)(v0 + 1304);
    uint64_t v164 = *(void *)(v0 + 1184);
    uint64_t v166 = *(void *)(v0 + 1216);
    uint64_t v53 = *(void *)(v0 + 1064);
    uint64_t v54 = *(void *)(v0 + 1008);
    uint64_t v55 = *(void *)(v0 + 984);
    uint64_t v56 = *(void *)(v0 + 976);
    uint64_t v57 = *(void *)(v0 + 848);
    uint64_t v58 = *(void *)(v0 + 840);
    uint64_t v59 = *(void *)(v0 + 816);

    v52(v58, v59);
    sub_100187100(v57, &qword_100646800);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
    v172(v164, v53);
    sub_1001A4BC8(v166, _s14descr1005DEB71C15ExchangeRequestVMa);
    (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v190, v185);
    uint64_t v60 = *(void *)(v0 + 1296);
    uint64_t v61 = *(void *)(v0 + 1272);
    uint64_t v62 = *(void *)(v0 + 1264);
    uint64_t v63 = *(void *)(v0 + 1240);
    uint64_t v64 = *(void *)(v0 + 1216);
    uint64_t v65 = *(void *)(v0 + 1192);
    uint64_t v66 = *(void *)(v0 + 1184);
    uint64_t v67 = *(void *)(v0 + 1176);
    uint64_t v68 = *(void *)(v0 + 1168);
    uint64_t v117 = *(void *)(v0 + 1160);
    uint64_t v118 = *(void *)(v0 + 1152);
    uint64_t v119 = *(void *)(v0 + 1144);
    uint64_t v120 = *(void *)(v0 + 1136);
    uint64_t v121 = *(void *)(v0 + 1128);
    uint64_t v122 = *(void *)(v0 + 1120);
    uint64_t v123 = *(void *)(v0 + 1112);
    uint64_t v124 = *(void *)(v0 + 1104);
    uint64_t v125 = *(void *)(v0 + 1096);
    uint64_t v126 = *(void *)(v0 + 1088);
    uint64_t v127 = *(void *)(v0 + 1080);
    uint64_t v128 = *(void *)(v0 + 1056);
    uint64_t v129 = *(void *)(v0 + 1032);
    uint64_t v130 = *(void *)(v0 + 1008);
    uint64_t v131 = *(void *)(v0 + 1000);
    uint64_t v132 = *(void *)(v0 + 992);
    uint64_t v133 = *(void *)(v0 + 968);
    uint64_t v134 = *(void *)(v0 + 960);
    uint64_t v135 = *(void *)(v0 + 952);
    uint64_t v136 = *(void *)(v0 + 944);
    uint64_t v137 = *(void *)(v0 + 936);
    uint64_t v138 = *(void *)(v0 + 928);
    uint64_t v139 = *(void *)(v0 + 920);
    uint64_t v140 = *(void *)(v0 + 912);
    uint64_t v141 = *(void *)(v0 + 904);
    uint64_t v142 = *(void *)(v0 + 896);
    uint64_t v144 = *(void *)(v0 + 888);
    uint64_t v146 = *(void *)(v0 + 880);
    uint64_t v151 = *(void *)(v0 + 872);
    uint64_t v156 = *(void *)(v0 + 864);
    uint64_t v160 = *(void *)(v0 + 856);
    uint64_t v165 = *(void *)(v0 + 848);
    uint64_t v167 = *(void *)(v0 + 840);
    uint64_t v173 = *(void *)(v0 + 832);
    uint64_t v179 = *(void *)(v0 + 808);
    uint64_t v186 = *(void *)(v0 + 784);
    uint64_t v191 = *(void *)(v0 + 776);
    swift_task_dealloc(*(void *)(v0 + 1304));
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v121);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v127);
    swift_task_dealloc(v128);
    swift_task_dealloc(v129);
    swift_task_dealloc(v130);
    swift_task_dealloc(v131);
    swift_task_dealloc(v132);
    swift_task_dealloc(v133);
    swift_task_dealloc(v134);
    swift_task_dealloc(v135);
    swift_task_dealloc(v136);
    swift_task_dealloc(v137);
    swift_task_dealloc(v138);
    swift_task_dealloc(v139);
    swift_task_dealloc(v140);
    swift_task_dealloc(v141);
    swift_task_dealloc(v142);
    swift_task_dealloc(v144);
    swift_task_dealloc(v146);
    swift_task_dealloc(v151);
    swift_task_dealloc(v156);
    swift_task_dealloc(v160);
    swift_task_dealloc(v165);
    swift_task_dealloc(v167);
    swift_task_dealloc(v173);
    swift_task_dealloc(v179);
    swift_task_dealloc(v186);
    swift_task_dealloc(v191);
    return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
  }

uint64_t sub_1003693BC()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1808);
  *(void *)(*v1 + 18swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = *(void *)(v2 + 1312);
  if (v0)
  {
    swift_bridgeObjectRelease(0LL);
    uint64_t v5 = sub_10036AC5C;
  }

  else
  {
    uint64_t v5 = sub_10036942C;
  }

  return swift_task_switch(v5, v4, 0LL);
}

uint64_t sub_10036942C()
{
  uint64_t v103 = (void *)(v0 + 368);
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0 + 1416))( *(void *)(v0 + 1104),  *(void *)(v0 + 1120),  *(void *)(v0 + 1064));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  char v100 = v2;
  if (os_log_type_enabled(v2, v3))
  {
    __int128 v75 = *(_OWORD *)(v0 + 1784);
    unint64_t v92 = *(void *)(v0 + 1776);
    unint64_t v81 = *(void *)(v0 + 1760);
    uint64_t v84 = *(void *)(v0 + 1768);
    uint64_t v77 = *(void *)(v0 + 1752);
    uint64_t v71 = *(void *)(v0 + 1736);
    unint64_t v73 = *(void *)(v0 + 1744);
    uint64_t v67 = *(void *)(v0 + 1720);
    uint64_t v69 = *(const char **)(v0 + 1728);
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 1424);
    uint64_t v96 = *(void *)(v0 + 1120);
    uint64_t v5 = *(void *)(v0 + 1104);
    uint64_t v6 = *(void *)(v0 + 1064);
    uint64_t v88 = *(void *)(v0 + 872);
    uint64_t v7 = swift_slowAlloc(22LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v106 = v8;
    *(_DWORD *)uint64_t v7 = 141558275;
    *(void *)(v0 + 624) = 1752392040LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 624, v0 + 632, v7 + 4, v7 + 12);
    *(_WORD *)(v7 + 12) = 2081;
    uint64_t v9 = sub_100183F14( &qword_10064A038,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactRequest,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactRequest);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    uint64_t v12 = (const char *)v11;
    *(void *)(v0 + 632) = sub_10018CDB4(v10, v11, &v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 632, v0 + 640, v7 + 14, v7 + 22);
    __n128 v13 = swift_bridgeObjectRelease(v12);
    v4(v5, v6, v13);
    _os_log_impl( (void *)&_mh_execute_header,  v100,  v3,  "Exchange Contact CONTINUE. Shared back {contactToSend: %{private,mask.hash}s}",  (uint8_t *)v7,  0x16u);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);

    sub_10025F4D4(v67, v69, v71, v73, v77, v81, v84, v92, v75, *((const char **)&v75 + 1));
    sub_10025F56C( v103,  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
    sub_1001A4BC8(v88, _s14descr1005DEB71C16ExchangeResponseVMa);
    uint64_t v14 = ((uint64_t (*)(uint64_t, uint64_t))v4)(v96, v6);
  }

  else
  {
    __int128 v79 = *(_OWORD *)(v0 + 1784);
    unint64_t v82 = *(void *)(v0 + 1760);
    uint64_t v85 = *(void *)(v0 + 1768);
    uint64_t v15 = *(void *)(v0 + 1752);
    unint64_t v16 = *(void *)(v0 + 1744);
    uint64_t v17 = *(void *)(v0 + 1736);
    uint64_t v18 = *(const char **)(v0 + 1728);
    uint64_t v19 = *(void *)(v0 + 1720);
    os_log_type_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
    unint64_t v93 = *(void *)(v0 + 1776);
    uint64_t v97 = *(void *)(v0 + 1120);
    uint64_t v21 = *(void *)(v0 + 1104);
    uint64_t v22 = *(void *)(v0 + 1064);
    uint64_t v89 = *(void *)(v0 + 872);

    v20(v21, v22);
    sub_10025F4D4(v19, v18, v17, v16, v15, v82, v85, v93, v79, *((const char **)&v79 + 1));
    sub_10025F56C( v103,  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
    sub_1001A4BC8(v89, _s14descr1005DEB71C16ExchangeResponseVMa);
    uint64_t v14 = ((uint64_t (*)(uint64_t, uint64_t))v20)(v97, v22);
  }

  uint64_t v23 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Exchange Contact END", v25, 2u);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v0 + 1584);
  uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
  uint64_t v98 = *(void *)(v0 + 1288);
  uint64_t v101 = *(void *)(v0 + 1280);
  uint64_t v104 = *(void *)(v0 + 1304);
  uint64_t v86 = *(void *)(v0 + 1184);
  uint64_t v90 = *(void *)(v0 + 1216);
  uint64_t v27 = *(void *)(v0 + 1064);
  uint64_t v28 = *(void *)(v0 + 1008);
  uint64_t v29 = *(void *)(v0 + 984);
  uint64_t v30 = *(void *)(v0 + 976);
  uint64_t v31 = *(void *)(v0 + 848);
  uint64_t v32 = *(void *)(v0 + 840);
  uint64_t v33 = *(void *)(v0 + 816);

  v26(v32, v33);
  sub_100187100(v31, &qword_100646800);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  v94(v86, v27);
  sub_1001A4BC8(v90, _s14descr1005DEB71C15ExchangeRequestVMa);
  (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v104, v101);
  uint64_t v34 = *(void *)(v0 + 1296);
  uint64_t v35 = *(void *)(v0 + 1272);
  uint64_t v36 = *(void *)(v0 + 1264);
  uint64_t v37 = *(void *)(v0 + 1240);
  uint64_t v38 = *(void *)(v0 + 1216);
  uint64_t v39 = *(void *)(v0 + 1192);
  uint64_t v40 = *(void *)(v0 + 1184);
  uint64_t v41 = *(void *)(v0 + 1176);
  uint64_t v42 = *(void *)(v0 + 1168);
  uint64_t v44 = *(void *)(v0 + 1160);
  uint64_t v45 = *(void *)(v0 + 1152);
  uint64_t v46 = *(void *)(v0 + 1144);
  uint64_t v47 = *(void *)(v0 + 1136);
  uint64_t v48 = *(void *)(v0 + 1128);
  uint64_t v49 = *(void *)(v0 + 1120);
  uint64_t v50 = *(void *)(v0 + 1112);
  uint64_t v51 = *(void *)(v0 + 1104);
  uint64_t v52 = *(void *)(v0 + 1096);
  uint64_t v53 = *(void *)(v0 + 1088);
  uint64_t v54 = *(void *)(v0 + 1080);
  uint64_t v55 = *(void *)(v0 + 1056);
  uint64_t v56 = *(void *)(v0 + 1032);
  uint64_t v57 = *(void *)(v0 + 1008);
  uint64_t v58 = *(void *)(v0 + 1000);
  uint64_t v59 = *(void *)(v0 + 992);
  uint64_t v60 = *(void *)(v0 + 968);
  uint64_t v61 = *(void *)(v0 + 960);
  uint64_t v62 = *(void *)(v0 + 952);
  uint64_t v63 = *(void *)(v0 + 944);
  uint64_t v64 = *(void *)(v0 + 936);
  uint64_t v65 = *(void *)(v0 + 928);
  uint64_t v66 = *(void *)(v0 + 920);
  uint64_t v68 = *(void *)(v0 + 912);
  uint64_t v70 = *(void *)(v0 + 904);
  uint64_t v72 = *(void *)(v0 + 896);
  uint64_t v74 = *(void *)(v0 + 888);
  uint64_t v76 = *(void *)(v0 + 880);
  uint64_t v78 = *(void *)(v0 + 872);
  uint64_t v80 = *(void *)(v0 + 864);
  uint64_t v83 = *(void *)(v0 + 856);
  uint64_t v87 = *(void *)(v0 + 848);
  uint64_t v91 = *(void *)(v0 + 840);
  uint64_t v95 = *(void *)(v0 + 832);
  uint64_t v99 = *(void *)(v0 + 808);
  uint64_t v102 = *(void *)(v0 + 784);
  uint64_t v105 = *(void *)(v0 + 776);
  swift_task_dealloc(*(void *)(v0 + 1304));
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  swift_task_dealloc(v57);
  swift_task_dealloc(v58);
  swift_task_dealloc(v59);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  swift_task_dealloc(v62);
  swift_task_dealloc(v63);
  swift_task_dealloc(v64);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v70);
  swift_task_dealloc(v72);
  swift_task_dealloc(v74);
  swift_task_dealloc(v76);
  swift_task_dealloc(v78);
  swift_task_dealloc(v80);
  swift_task_dealloc(v83);
  swift_task_dealloc(v87);
  swift_task_dealloc(v91);
  swift_task_dealloc(v95);
  swift_task_dealloc(v99);
  swift_task_dealloc(v102);
  swift_task_dealloc(v105);
  return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
}

uint64_t sub_100369B00()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 1832);
  *(void *)(*v1 + 1840) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_10036A194;
  }
  else {
    uint64_t v4 = sub_100369B64;
  }
  return swift_task_switch(v4, *(void *)(v2 + 1312), 0LL);
}

uint64_t sub_100369B64()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1824);
  uint64_t v2 = *(void *)(v0 + 1304);
  uint64_t v3 = *(void *)(v0 + 1288);
  uint64_t v4 = *(void *)(v0 + 1280);
  uint64_t v5 = *(void *)(v0 + 1216);
  uint64_t v6 = *(void *)(v0 + 1184);
  uint64_t v7 = *(void *)(v0 + 1096);
  uint64_t v8 = *(void *)(v0 + 1064);
  sub_1001A4BC8(*(void *)(v0 + 864), _s14descr1005DEB71C16ExchangeResponseVMa);
  v1(v7, v8);
  v1(v6, v8);
  sub_1001A4BC8(v5, _s14descr1005DEB71C15ExchangeRequestVMa);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v9 = *(void *)(v0 + 1296);
  uint64_t v10 = *(void *)(v0 + 1272);
  uint64_t v11 = *(void *)(v0 + 1264);
  uint64_t v12 = *(void *)(v0 + 1240);
  uint64_t v13 = *(void *)(v0 + 1216);
  uint64_t v14 = *(void *)(v0 + 1192);
  uint64_t v15 = *(void *)(v0 + 1184);
  uint64_t v16 = *(void *)(v0 + 1176);
  uint64_t v17 = *(void *)(v0 + 1168);
  uint64_t v19 = *(void *)(v0 + 1160);
  uint64_t v20 = *(void *)(v0 + 1152);
  uint64_t v21 = *(void *)(v0 + 1144);
  uint64_t v22 = *(void *)(v0 + 1136);
  uint64_t v23 = *(void *)(v0 + 1128);
  uint64_t v24 = *(void *)(v0 + 1120);
  uint64_t v25 = *(void *)(v0 + 1112);
  uint64_t v26 = *(void *)(v0 + 1104);
  uint64_t v27 = *(void *)(v0 + 1096);
  uint64_t v28 = *(void *)(v0 + 1088);
  uint64_t v29 = *(void *)(v0 + 1080);
  uint64_t v30 = *(void *)(v0 + 1056);
  uint64_t v31 = *(void *)(v0 + 1032);
  uint64_t v32 = *(void *)(v0 + 1008);
  uint64_t v33 = *(void *)(v0 + 1000);
  uint64_t v34 = *(void *)(v0 + 992);
  uint64_t v35 = *(void *)(v0 + 968);
  uint64_t v36 = *(void *)(v0 + 960);
  uint64_t v37 = *(void *)(v0 + 952);
  uint64_t v38 = *(void *)(v0 + 944);
  uint64_t v39 = *(void *)(v0 + 936);
  uint64_t v40 = *(void *)(v0 + 928);
  uint64_t v41 = *(void *)(v0 + 920);
  uint64_t v42 = *(void *)(v0 + 912);
  uint64_t v43 = *(void *)(v0 + 904);
  uint64_t v44 = *(void *)(v0 + 896);
  uint64_t v45 = *(void *)(v0 + 888);
  uint64_t v46 = *(void *)(v0 + 880);
  uint64_t v47 = *(void *)(v0 + 872);
  uint64_t v48 = *(void *)(v0 + 864);
  uint64_t v49 = *(void *)(v0 + 856);
  uint64_t v50 = *(void *)(v0 + 848);
  uint64_t v51 = *(void *)(v0 + 840);
  uint64_t v52 = *(void *)(v0 + 832);
  uint64_t v53 = *(void *)(v0 + 808);
  uint64_t v54 = *(void *)(v0 + 784);
  uint64_t v55 = *(void *)(v0 + 776);
  swift_task_dealloc(*(void *)(v0 + 1304));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void, void))(v0 + 8))(0LL, 0LL);
}

uint64_t sub_100369E9C()
{
  uint64_t v1 = *(void *)(v0 + 1304);
  uint64_t v2 = *(void *)(v0 + 1296);
  uint64_t v3 = *(void *)(v0 + 1272);
  uint64_t v4 = *(void *)(v0 + 1264);
  uint64_t v5 = *(void *)(v0 + 1240);
  uint64_t v6 = *(void *)(v0 + 1216);
  uint64_t v7 = *(void *)(v0 + 1192);
  uint64_t v8 = *(void *)(v0 + 1184);
  uint64_t v9 = *(void *)(v0 + 1176);
  uint64_t v11 = *(void *)(v0 + 1168);
  uint64_t v12 = *(void *)(v0 + 1160);
  uint64_t v13 = *(void *)(v0 + 1152);
  uint64_t v14 = *(void *)(v0 + 1144);
  uint64_t v15 = *(void *)(v0 + 1136);
  uint64_t v16 = *(void *)(v0 + 1128);
  uint64_t v17 = *(void *)(v0 + 1120);
  uint64_t v18 = *(void *)(v0 + 1112);
  uint64_t v19 = *(void *)(v0 + 1104);
  uint64_t v20 = *(void *)(v0 + 1096);
  uint64_t v21 = *(void *)(v0 + 1088);
  uint64_t v22 = *(void *)(v0 + 1080);
  uint64_t v28 = *(void *)(v0 + 1008);
  uint64_t v30 = *(void *)(v0 + 1000);
  uint64_t v32 = *(void *)(v0 + 992);
  uint64_t v33 = *(void *)(v0 + 968);
  uint64_t v23 = *(void *)(v0 + 960);
  uint64_t v24 = *(void *)(v0 + 1056);
  uint64_t v25 = *(void *)(v0 + 952);
  uint64_t v26 = *(void *)(v0 + 1032);
  uint64_t v27 = *(void *)(v0 + 944);
  uint64_t v29 = *(void *)(v0 + 936);
  uint64_t v31 = *(void *)(v0 + 928);
  uint64_t v34 = *(void *)(v0 + 920);
  uint64_t v35 = *(void *)(v0 + 912);
  uint64_t v36 = *(void *)(v0 + 904);
  uint64_t v37 = *(void *)(v0 + 896);
  uint64_t v38 = *(void *)(v0 + 888);
  uint64_t v39 = *(void *)(v0 + 880);
  uint64_t v40 = *(void *)(v0 + 872);
  uint64_t v41 = *(void *)(v0 + 864);
  uint64_t v42 = *(void *)(v0 + 856);
  uint64_t v43 = *(void *)(v0 + 848);
  uint64_t v44 = *(void *)(v0 + 840);
  uint64_t v45 = *(void *)(v0 + 832);
  uint64_t v46 = *(void *)(v0 + 808);
  uint64_t v47 = *(void *)(v0 + 784);
  uint64_t v48 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 1288) + 8LL))(v1, *(void *)(v0 + 1280));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v23);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036A194()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1824);
  uint64_t v2 = *(void *)(v0 + 1216);
  uint64_t v3 = *(void *)(v0 + 1184);
  uint64_t v4 = *(void *)(v0 + 1096);
  uint64_t v5 = *(void *)(v0 + 1064);
  sub_1001A4BC8(*(void *)(v0 + 864), _s14descr1005DEB71C16ExchangeResponseVMa);
  v1(v4, v5);
  v1(v3, v5);
  sub_1001A4BC8(v2, _s14descr1005DEB71C15ExchangeRequestVMa);
  uint64_t v6 = *(void *)(v0 + 1304);
  uint64_t v7 = *(void *)(v0 + 1296);
  uint64_t v8 = *(void *)(v0 + 1272);
  uint64_t v9 = *(void *)(v0 + 1264);
  uint64_t v10 = *(void *)(v0 + 1240);
  uint64_t v11 = *(void *)(v0 + 1216);
  uint64_t v12 = *(void *)(v0 + 1192);
  uint64_t v13 = *(void *)(v0 + 1184);
  uint64_t v14 = *(void *)(v0 + 1176);
  uint64_t v16 = *(void *)(v0 + 1168);
  uint64_t v17 = *(void *)(v0 + 1160);
  uint64_t v18 = *(void *)(v0 + 1152);
  uint64_t v19 = *(void *)(v0 + 1144);
  uint64_t v20 = *(void *)(v0 + 1136);
  uint64_t v21 = *(void *)(v0 + 1128);
  uint64_t v22 = *(void *)(v0 + 1120);
  uint64_t v23 = *(void *)(v0 + 1112);
  uint64_t v24 = *(void *)(v0 + 1104);
  uint64_t v25 = *(void *)(v0 + 1096);
  uint64_t v26 = *(void *)(v0 + 1088);
  uint64_t v27 = *(void *)(v0 + 1080);
  uint64_t v32 = *(void *)(v0 + 1008);
  uint64_t v34 = *(void *)(v0 + 1000);
  uint64_t v36 = *(void *)(v0 + 992);
  uint64_t v37 = *(void *)(v0 + 968);
  uint64_t v39 = *(void *)(v0 + 960);
  uint64_t v28 = *(void *)(v0 + 1056);
  uint64_t v29 = *(void *)(v0 + 952);
  uint64_t v30 = *(void *)(v0 + 1032);
  uint64_t v31 = *(void *)(v0 + 944);
  uint64_t v33 = *(void *)(v0 + 936);
  uint64_t v35 = *(void *)(v0 + 928);
  uint64_t v38 = *(void *)(v0 + 920);
  uint64_t v40 = *(void *)(v0 + 912);
  uint64_t v41 = *(void *)(v0 + 904);
  uint64_t v42 = *(void *)(v0 + 896);
  uint64_t v43 = *(void *)(v0 + 888);
  uint64_t v44 = *(void *)(v0 + 880);
  uint64_t v45 = *(void *)(v0 + 872);
  uint64_t v46 = *(void *)(v0 + 864);
  uint64_t v47 = *(void *)(v0 + 856);
  uint64_t v48 = *(void *)(v0 + 848);
  uint64_t v49 = *(void *)(v0 + 840);
  uint64_t v50 = *(void *)(v0 + 832);
  uint64_t v51 = *(void *)(v0 + 808);
  uint64_t v52 = *(void *)(v0 + 784);
  uint64_t v53 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 1288) + 8LL))(v6, *(void *)(v0 + 1280));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v29);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036A4DC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
  uint64_t v57 = *(void *)(v0 + 1216);
  uint64_t v2 = *(void *)(v0 + 1184);
  uint64_t v3 = *(void *)(v0 + 1168);
  uint64_t v4 = *(void *)(v0 + 1064);
  uint64_t v5 = *(void *)(v0 + 1008);
  uint64_t v6 = *(void *)(v0 + 984);
  uint64_t v7 = *(void *)(v0 + 976);
  uint64_t v8 = *(void *)(v0 + 880);
  sub_10025F4D4( *(void *)(v0 + 1440),  *(const char **)(v0 + 1448),  *(void *)(v0 + 1456),  *(void *)(v0 + 1464),  *(void *)(v0 + 1472),  *(void *)(v0 + 1480),  *(void *)(v0 + 1488),  *(void *)(v0 + 1496),  *(void *)(v0 + 1504),  *(const char **)(v0 + 1512));
  sub_10025F56C( (void *)(v0 + 456),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
  sub_1001A4BC8(v8, _s14descr1005DEB71C16ExchangeResponseVMa);
  v1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v1(v2, v4);
  sub_1001A4BC8(v57, _s14descr1005DEB71C15ExchangeRequestVMa);
  uint64_t v9 = *(void *)(v0 + 1304);
  uint64_t v10 = *(void *)(v0 + 1296);
  uint64_t v11 = *(void *)(v0 + 1272);
  uint64_t v12 = *(void *)(v0 + 1264);
  uint64_t v13 = *(void *)(v0 + 1240);
  uint64_t v14 = *(void *)(v0 + 1216);
  uint64_t v15 = *(void *)(v0 + 1192);
  uint64_t v16 = *(void *)(v0 + 1184);
  uint64_t v17 = *(void *)(v0 + 1176);
  uint64_t v19 = *(void *)(v0 + 1168);
  uint64_t v20 = *(void *)(v0 + 1160);
  uint64_t v21 = *(void *)(v0 + 1152);
  uint64_t v22 = *(void *)(v0 + 1144);
  uint64_t v23 = *(void *)(v0 + 1136);
  uint64_t v24 = *(void *)(v0 + 1128);
  uint64_t v25 = *(void *)(v0 + 1120);
  uint64_t v26 = *(void *)(v0 + 1112);
  uint64_t v27 = *(void *)(v0 + 1104);
  uint64_t v28 = *(void *)(v0 + 1096);
  uint64_t v29 = *(void *)(v0 + 1088);
  uint64_t v30 = *(void *)(v0 + 1080);
  uint64_t v31 = *(void *)(v0 + 1056);
  uint64_t v33 = *(void *)(v0 + 1032);
  uint64_t v35 = *(void *)(v0 + 1008);
  uint64_t v37 = *(void *)(v0 + 1000);
  uint64_t v39 = *(void *)(v0 + 992);
  uint64_t v40 = *(void *)(v0 + 968);
  uint64_t v42 = *(void *)(v0 + 960);
  uint64_t v32 = *(void *)(v0 + 952);
  uint64_t v34 = *(void *)(v0 + 944);
  uint64_t v36 = *(void *)(v0 + 936);
  uint64_t v38 = *(void *)(v0 + 928);
  uint64_t v41 = *(void *)(v0 + 920);
  uint64_t v43 = *(void *)(v0 + 912);
  uint64_t v44 = *(void *)(v0 + 904);
  uint64_t v45 = *(void *)(v0 + 896);
  uint64_t v46 = *(void *)(v0 + 888);
  uint64_t v47 = *(void *)(v0 + 880);
  uint64_t v48 = *(void *)(v0 + 872);
  uint64_t v49 = *(void *)(v0 + 864);
  uint64_t v50 = *(void *)(v0 + 856);
  uint64_t v51 = *(void *)(v0 + 848);
  uint64_t v52 = *(void *)(v0 + 840);
  uint64_t v53 = *(void *)(v0 + 832);
  uint64_t v54 = *(void *)(v0 + 808);
  uint64_t v55 = *(void *)(v0 + 784);
  uint64_t v56 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 1288) + 8LL))(v9, *(void *)(v0 + 1280));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v55);
  swift_task_dealloc(v56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036A890()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1592);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1584);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
  uint64_t v61 = *(void *)(v0 + 1216);
  uint64_t v55 = *(void *)(v0 + 1064);
  uint64_t v57 = *(void *)(v0 + 1184);
  uint64_t v3 = *(void *)(v0 + 1008);
  uint64_t v4 = *(void *)(v0 + 1000);
  uint64_t v5 = *(void *)(v0 + 976);
  uint64_t v6 = *(void *)(v0 + 848);
  uint64_t v7 = *(void *)(v0 + 840);
  uint64_t v8 = *(void *)(v0 + 816);
  uint64_t v9 = *(void *)(v0 + 808);
  sub_10025F4D4( *(void *)(v0 + 1600),  *(const char **)(v0 + 1608),  *(void *)(v0 + 1616),  *(void *)(v0 + 1624),  *(void *)(v0 + 1632),  *(void *)(v0 + 1640),  *(void *)(v0 + 1648),  *(void *)(v0 + 1656),  *(void *)(v0 + 1664),  *(const char **)(v0 + 1672));
  sub_1001A4BC8(v9, type metadata accessor for SDAirDropServerConnection);
  v1(v4, v5);
  v2(v7, v8);
  sub_100187100(v6, &qword_100646800);
  v1(v3, v5);
  v59(v57, v55);
  sub_1001A4BC8(v61, _s14descr1005DEB71C15ExchangeRequestVMa);
  uint64_t v10 = *(void *)(v0 + 1304);
  uint64_t v11 = *(void *)(v0 + 1296);
  uint64_t v12 = *(void *)(v0 + 1272);
  uint64_t v13 = *(void *)(v0 + 1264);
  uint64_t v14 = *(void *)(v0 + 1240);
  uint64_t v15 = *(void *)(v0 + 1216);
  uint64_t v16 = *(void *)(v0 + 1192);
  uint64_t v17 = *(void *)(v0 + 1184);
  uint64_t v18 = *(void *)(v0 + 1176);
  uint64_t v20 = *(void *)(v0 + 1168);
  uint64_t v21 = *(void *)(v0 + 1160);
  uint64_t v22 = *(void *)(v0 + 1152);
  uint64_t v23 = *(void *)(v0 + 1144);
  uint64_t v24 = *(void *)(v0 + 1136);
  uint64_t v25 = *(void *)(v0 + 1128);
  uint64_t v26 = *(void *)(v0 + 1120);
  uint64_t v27 = *(void *)(v0 + 1112);
  uint64_t v28 = *(void *)(v0 + 1104);
  uint64_t v29 = *(void *)(v0 + 1096);
  uint64_t v30 = *(void *)(v0 + 1088);
  uint64_t v31 = *(void *)(v0 + 1080);
  uint64_t v32 = *(void *)(v0 + 1056);
  uint64_t v34 = *(void *)(v0 + 1032);
  uint64_t v36 = *(void *)(v0 + 1008);
  uint64_t v38 = *(void *)(v0 + 1000);
  uint64_t v40 = *(void *)(v0 + 992);
  uint64_t v41 = *(void *)(v0 + 968);
  uint64_t v43 = *(void *)(v0 + 960);
  uint64_t v33 = *(void *)(v0 + 952);
  uint64_t v35 = *(void *)(v0 + 944);
  uint64_t v37 = *(void *)(v0 + 936);
  uint64_t v39 = *(void *)(v0 + 928);
  uint64_t v42 = *(void *)(v0 + 920);
  uint64_t v44 = *(void *)(v0 + 912);
  uint64_t v45 = *(void *)(v0 + 904);
  uint64_t v46 = *(void *)(v0 + 896);
  uint64_t v47 = *(void *)(v0 + 888);
  uint64_t v48 = *(void *)(v0 + 880);
  uint64_t v49 = *(void *)(v0 + 872);
  uint64_t v50 = *(void *)(v0 + 864);
  uint64_t v51 = *(void *)(v0 + 856);
  uint64_t v52 = *(void *)(v0 + 848);
  uint64_t v53 = *(void *)(v0 + 840);
  uint64_t v54 = *(void *)(v0 + 832);
  uint64_t v56 = *(void *)(v0 + 808);
  uint64_t v58 = *(void *)(v0 + 784);
  uint64_t v60 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 1288) + 8LL))(v10, *(void *)(v0 + 1280));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v53);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036AC5C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1584);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 1424);
  uint64_t v59 = *(void *)(v0 + 1184);
  uint64_t v61 = *(void *)(v0 + 1216);
  uint64_t v3 = *(void *)(v0 + 1120);
  uint64_t v4 = *(void *)(v0 + 1064);
  uint64_t v53 = *(void *)(v0 + 984);
  uint64_t v55 = *(void *)(v0 + 976);
  uint64_t v57 = *(void *)(v0 + 1008);
  uint64_t v5 = *(void *)(v0 + 872);
  uint64_t v6 = *(void *)(v0 + 848);
  uint64_t v7 = *(void *)(v0 + 840);
  uint64_t v8 = *(void *)(v0 + 816);
  sub_10025F4D4( *(void *)(v0 + 1720),  *(const char **)(v0 + 1728),  *(void *)(v0 + 1736),  *(void *)(v0 + 1744),  *(void *)(v0 + 1752),  *(void *)(v0 + 1760),  *(void *)(v0 + 1768),  *(void *)(v0 + 1776),  *(void *)(v0 + 1784),  *(const char **)(v0 + 1792));
  sub_10025F56C( (void *)(v0 + 368),  (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_10025F4D4);
  sub_1001A4BC8(v5, _s14descr1005DEB71C16ExchangeResponseVMa);
  v2(v3, v4);
  v1(v7, v8);
  sub_100187100(v6, &qword_100646800);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v57, v55);
  v2(v59, v4);
  sub_1001A4BC8(v61, _s14descr1005DEB71C15ExchangeRequestVMa);
  uint64_t v9 = *(void *)(v0 + 1304);
  uint64_t v10 = *(void *)(v0 + 1296);
  uint64_t v11 = *(void *)(v0 + 1272);
  uint64_t v12 = *(void *)(v0 + 1264);
  uint64_t v13 = *(void *)(v0 + 1240);
  uint64_t v14 = *(void *)(v0 + 1216);
  uint64_t v15 = *(void *)(v0 + 1192);
  uint64_t v16 = *(void *)(v0 + 1184);
  uint64_t v17 = *(void *)(v0 + 1176);
  uint64_t v19 = *(void *)(v0 + 1168);
  uint64_t v20 = *(void *)(v0 + 1160);
  uint64_t v21 = *(void *)(v0 + 1152);
  uint64_t v22 = *(void *)(v0 + 1144);
  uint64_t v23 = *(void *)(v0 + 1136);
  uint64_t v24 = *(void *)(v0 + 1128);
  uint64_t v25 = *(void *)(v0 + 1120);
  uint64_t v26 = *(void *)(v0 + 1112);
  uint64_t v27 = *(void *)(v0 + 1104);
  uint64_t v28 = *(void *)(v0 + 1096);
  uint64_t v29 = *(void *)(v0 + 1088);
  uint64_t v30 = *(void *)(v0 + 1080);
  uint64_t v31 = *(void *)(v0 + 1056);
  uint64_t v33 = *(void *)(v0 + 1032);
  uint64_t v35 = *(void *)(v0 + 1008);
  uint64_t v37 = *(void *)(v0 + 1000);
  uint64_t v39 = *(void *)(v0 + 992);
  uint64_t v40 = *(void *)(v0 + 968);
  uint64_t v42 = *(void *)(v0 + 960);
  uint64_t v32 = *(void *)(v0 + 952);
  uint64_t v34 = *(void *)(v0 + 944);
  uint64_t v36 = *(void *)(v0 + 936);
  uint64_t v38 = *(void *)(v0 + 928);
  uint64_t v41 = *(void *)(v0 + 920);
  uint64_t v43 = *(void *)(v0 + 912);
  uint64_t v44 = *(void *)(v0 + 904);
  uint64_t v45 = *(void *)(v0 + 896);
  uint64_t v46 = *(void *)(v0 + 888);
  uint64_t v47 = *(void *)(v0 + 880);
  uint64_t v48 = *(void *)(v0 + 872);
  uint64_t v49 = *(void *)(v0 + 864);
  uint64_t v50 = *(void *)(v0 + 856);
  uint64_t v51 = *(void *)(v0 + 848);
  uint64_t v52 = *(void *)(v0 + 840);
  uint64_t v54 = *(void *)(v0 + 832);
  uint64_t v56 = *(void *)(v0 + 808);
  uint64_t v58 = *(void *)(v0 + 784);
  uint64_t v60 = *(void *)(v0 + 776);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 1288) + 8LL))(v9, *(void *)(v0 + 1280));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v45);
  swift_task_dealloc(v46);
  swift_task_dealloc(v47);
  swift_task_dealloc(v48);
  swift_task_dealloc(v49);
  swift_task_dealloc(v50);
  swift_task_dealloc(v51);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10036B048(uint64_t a1)
{
  uint64_t v56 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  uint64_t v59 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = type metadata accessor for SFPlatform(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v52 - v13;
  SFAirDropReceive.AskRequest.type.getter(v12);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v8 + 88);
  uint64_t v57 = v7;
  uint64_t v16 = v15(v14, v7);
  if ((_DWORD)v16 == enum case for SFAirDrop.TransferType.peerPayment(_:))
  {
    static SFPlatform.macOS.getter(v16);
    char v17 = static SFPlatform.isPlatform(_:)(v6);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v17 & 1) != 0)
    {
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000022LL,  0x800000010050C3A0LL,  "DaemoniOSLibrary/SDAirDropReceiveStateMachine+Runner.swift",  58LL,  2LL,  224LL,  0);
      __break(1u);
    }

    else
    {
      uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Verifying peerPayment support", v21, 2u);
        swift_slowDealloc(v21, -1LL, -1LL);
      }

      id v22 =  [(id)objc_opt_self(SDNearbyPeerPaymentReceiverCoordinator) verifyReceiverEligibility];
      if (v22)
      {
        uint64_t v23 = v22;
        uint64_t v24 = type metadata accessor for SFAirDropReceive.Failure(0LL);
        uint64_t v25 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        swift_allocError(v24, v25, 0LL, 0LL);
        uint64_t v27 = v26;
        id v28 = v23;
        CodableError.init(_:)(v28);
        uint64_t v29 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104LL))( v27,  enum case for SFAirDropReceive.Failure.unexpected(_:),  v24);
        swift_willThrow(v29);
      }

      else
      {
        uint64_t v49 = (os_log_s *)Logger.logObject.getter(0LL);
        os_log_type_t v50 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v51 = 0;
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "Device supports peerPayment", v51, 2u);
          swift_slowDealloc(v51, -1LL, -1LL);
        }
      }
    }
  }

  else
  {
    uint64_t v30 = v55;
    uint64_t v31 = v56;
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16))(v55, a1, v56);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.default.getter();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      LODWORD(v58) = v35;
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      uint64_t v54 = v37;
      uint64_t v62 = v37;
      uint64_t v53 = v36;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v52 = v36 + 4;
      uint64_t v38 = SFAirDropReceive.AskRequest.type.getter(v37);
      uint64_t v39 = SFAirDrop.TransferType.description.getter(v38);
      uint64_t v41 = v40;
      uint64_t v42 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v43 = v11;
      uint64_t v44 = v30;
      uint64_t v45 = v57;
      v42(v43, v57);
      uint64_t v60 = sub_10018CDB4(v39, (unint64_t)v41, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61, v52, v36 + 12);
      __n128 v46 = swift_bridgeObjectRelease(v41);
      (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v44, v31, v46);
      uint64_t v47 = v53;
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v58, "Transfer type %s is supported", v53, 0xCu);
      uint64_t v48 = v54;
      swift_arrayDestroy(v54, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v48, -1LL, -1LL);
      swift_slowDealloc(v47, -1LL, -1LL);
    }

    else
    {

      (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v31);
      uint64_t v42 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v45 = v57;
    }

    v42(v14, v45);
  }

uint64_t sub_10036B564(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10036B5C4, 0LL, 0LL);
}

uint64_t sub_10036B5C4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[4] = v2;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[5] = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  *uint64_t v4 = v0;
  v4[1] = sub_10036B674;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[2],  &unk_10064A020,  v2,  sub_10036F3DC,  v3,  0LL,  0LL,  v5);
}

uint64_t sub_10036B674()
{
  uint64_t v2 = *(void *)(*v1 + 48);
  uint64_t v3 = *v1;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    return swift_task_switch(sub_10036B6F4, 0LL, 0LL);
  }
  uint64_t v5 = *(void *)(v3 + 32);
  swift_task_dealloc(*(void *)(v3 + 40));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10036B6F4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_task_dealloc(*(void *)(v0 + 40));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036B730(uint64_t a1, uint64_t a2)
{
  v2[2] = a2;
  uint64_t v3 = sub_100183098(&qword_100650C50);
  v2[3] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[4] = v4;
  v2[5] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100650C58);
  v2[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[7] = v6;
  v2[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  v2[9] = static AirDropActor.shared;
  return swift_task_switch(sub_10036B7F4, v7, 0LL);
}

uint64_t sub_10036B7F4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))( v1,  *(void *)(v0[2] + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler)
  + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_handlerContinuation,
    v3);
  SFProgressContinuation.task.getter(v3);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10036B8B4;
  return SFProgressTask.finalValue.getter(v0 + 12, v0[3]);
}

uint64_t sub_10036B8B4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(*v1 + 32);
  uint64_t v4 = *(void *)(*v1 + 40);
  uint64_t v6 = *(void *)(*v1 + 24);
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v0) {
    uint64_t v7 = sub_10036B9D4;
  }
  else {
    uint64_t v7 = sub_10036B940;
  }
  return swift_task_switch(v7, *(void *)(v2 + 72), 0LL);
}

uint64_t sub_10036B940()
{
  uint64_t v1 = type metadata accessor for CancellationError(0LL);
  uint64_t v2 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
  swift_allocError(v1, v2, 0LL, 0LL);
  uint64_t v3 = CancellationError.init()();
  swift_willThrow(v3);
  uint64_t v4 = *(void *)(v0 + 40);
  swift_task_dealloc(*(void *)(v0 + 64));
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036B9D4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc(*(void *)(v0 + 64));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036BA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v128 = a1;
  uint64_t v138 = a2;
  uint64_t v2 = sub_100183098(&qword_100646560);
  __chkstk_darwin(v2);
  uint64_t v137 = (char *)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v4);
  uint64_t v134 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for UUID(0LL);
  __chkstk_darwin(v6);
  uint64_t v132 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v136 = sub_100183098(&qword_1006451B0);
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  unint64_t v155 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v118 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v127 = *(void *)(v10 - 8);
  uint64_t v150 = v10;
  __chkstk_darwin(v10);
  uint64_t v144 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100183098(&qword_100650B78);
  uint64_t v153 = *(void *)(v12 - 8);
  uint64_t v154 = v12;
  __chkstk_darwin(v12);
  uint64_t v159 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v143 = (void (*)(uint64_t, char *, uint64_t))type metadata accessor for SFAirDrop.ButtonConfiguration(0LL);
  uint64_t v147 = *((void *)v143 - 1);
  __chkstk_darwin(v143);
  uint64_t v124 = (uint64_t *)((char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v133 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  uint64_t v152 = *(void *)(v133 - 8);
  uint64_t v15 = __chkstk_darwin(v133);
  uint64_t v130 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15);
  uint64_t v151 = (char *)&v117 - v17;
  uint64_t v157 = type metadata accessor for SFAirDrop.TransferType(0LL);
  uint64_t v146 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v19 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  uint64_t v20 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  id v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v141 = v23;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v149 = sub_100183098(&qword_100650B80);
  uint64_t v27 = *(void *)(v149 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v29 = __chkstk_darwin(v149);
  uint64_t v156 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v117 - v30;
  unint64_t v148 = (char *)&v117 - v30;
  uint64_t v33 = SFProgressContinuation.init(_:initialProgress:file:line:)( 0xD00000000000001ELL,  0x800000010050C340LL,  v32,  0xD00000000000006ALL,  0x800000010050C2A0LL,  429LL,  (char *)&type metadata for () + 8,  v10);
  uint64_t v142 = *(void *)(v158 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
  uint64_t v34 = CurrentValueSubject.value.getter(v33);
  SFAirDropReceive.Transfer.askRequest.getter(v34);
  uint64_t v140 = *(uint64_t (**)(char *, uint64_t))(v24 + 8);
  uint64_t v35 = v140(v26, v23);
  SFAirDropReceive.AskRequest.type.getter(v35);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t))(v20 + 8);
  uint64_t v37 = v36(v22, v139);
  uint64_t v123 = v36;
  char v38 = SFAirDrop.TransferType.isOnlyExchange.getter(v37);
  unint64_t v158 = *(void *)(v146 + 8);
  ((void (*)(char *, uint64_t))v158)(v19, v157);
  uint64_t v39 = 1885693259LL;
  if ((v38 & 1) == 0) {
    uint64_t v39 = 0x656E696C636544LL;
  }
  unint64_t v40 = 0xE700000000000000LL;
  if ((v38 & 1) != 0) {
    unint64_t v40 = 0xE400000000000000LL;
  }
  uint64_t v41 = v124;
  *uint64_t v124 = v39;
  v41[1] = v40;
  unsigned int v122 = enum case for SFAirDrop.ButtonConfiguration.text(_:);
  uint64_t v121 = *(void (**)(uint64_t *))(v147 + 104);
  v121(v41);
  uint64_t v145 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
  uint64_t v42 = v156;
  uint64_t v43 = v31;
  uint64_t v44 = v149;
  v145(v156, v43, v149);
  uint64_t v45 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v129 = v28;
  uint64_t v125 = ((v45 + 16) & ~v45) + v28;
  uint64_t v46 = (v45 + 16) & ~v45;
  uint64_t v126 = v46;
  uint64_t v146 = v45;
  uint64_t v147 = v45 | 7;
  uint64_t v47 = swift_allocObject(&unk_1005DCE40, v125, v45 | 7);
  uint64_t v131 = v27;
  uint64_t v48 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v48(v47 + v46, v42, v44);
  uint64_t v49 = SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)( 0x656E696C636544LL,  0xE700000000000000LL,  v41,  0LL,  sub_10036EADC,  v47);
  uint64_t v50 = CurrentValueSubject.value.getter(v49);
  SFAirDropReceive.Transfer.askRequest.getter(v50);
  uint64_t v51 = v140(v26, v141);
  SFAirDropReceive.AskRequest.type.getter(v51);
  uint64_t v52 = v139;
  uint64_t v53 = v36(v22, v139);
  LOBYTE(v47) = SFAirDrop.TransferType.isOnlyExchange.getter(v53);
  ((void (*)(char *, uint64_t))v158)(v19, v157);
  uint64_t v54 = 0x747065636341LL;
  if ((v47 & 1) != 0) {
    uint64_t v54 = 0x6574656C6544LL;
  }
  uint64_t v55 = v41;
  uint64_t *v41 = v54;
  v41[1] = 0xE600000000000000LL;
  ((void (*)(uint64_t *, void, void))v121)(v41, v122, v143);
  uint64_t v56 = v150;
  (*(void (**)(char *, void, uint64_t))(v127 + 104))( v144,  enum case for SFAirDropReceive.ItemDestination.default(_:),  v150);
  uint64_t v57 = v156;
  v145(v156, v148, v44);
  uint64_t v58 = swift_allocObject(&unk_1005DCE68, v125, v147);
  uint64_t v143 = v48;
  v48(v58 + v126, v57, v44);
  uint64_t v59 = sub_100183F14( &qword_100650B88,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  uint64_t v60 = sub_100183F14( &qword_100650B90,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  uint64_t v125 = sub_100183F14( &qword_100646840,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  uint64_t v126 = v60;
  uint64_t v127 = v59;
  uint64_t v61 = v56;
  uint64_t v62 = v141;
  uint64_t v63 = SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)( 0x747065636341LL,  0xE600000000000000LL,  v55,  0LL,  0LL,  v144,  sub_10036EB74,  v58,  v61,  v59,  v60,  v125);
  uint64_t v64 = CurrentValueSubject.value.getter(v63);
  SFAirDropReceive.Transfer.askRequest.getter(v64);
  uint64_t v65 = v140;
  uint64_t v66 = v140(v26, v62);
  SFAirDropReceive.AskRequest.type.getter(v66);
  uint64_t v67 = v52;
  uint64_t v68 = v52;
  uint64_t v69 = v123;
  uint64_t v70 = v123(v22, v68);
  LOBYTE(v58) = SFAirDrop.TransferType.isOnlyExchange.getter(v70);
  uint64_t v71 = v157;
  uint64_t v72 = ((uint64_t (*)(char *))v158)(v19);
  if ((v58 & 1) != 0)
  {
    uint64_t v144 = (char *)0x80000001005072B0LL;
    uint64_t v124 = (uint64_t *)0xD000000000000012LL;
  }

  else
  {
    uint64_t v72 = SFAirDrop.ContactInfo.fullName.getter(v72);
    uint64_t v124 = (uint64_t *)v72;
    uint64_t v144 = v73;
  }

  uint64_t v74 = CurrentValueSubject.value.getter(v72);
  SFAirDropReceive.Transfer.askRequest.getter(v74);
  uint64_t v75 = v65(v26, v62);
  SFAirDropReceive.AskRequest.type.getter(v75);
  uint64_t v76 = v69(v22, v67);
  char v77 = SFAirDrop.TransferType.isOnlyExchange.getter(v76);
  uint64_t v78 = ((uint64_t (*)(char *, uint64_t))v158)(v19, v71);
  __int128 v79 = v156;
  if ((v77 & 1) != 0)
  {
    uint64_t v160 = SFAirDrop.ContactInfo.fullName.getter(v78);
    unint64_t v161 = v80;
    v81._countAndFlagsBits = 10LL;
    v81._object = (void *)0xE100000000000000LL;
    String.append(_:)(v81);
    unint64_t v82 = v118;
    SFAirDrop.ContactInfo.handle.getter();
    uint64_t v83 = sub_100183F14( &qword_10064A068,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.ContactInfo.Handle,  (uint64_t)&protocol conformance descriptor for SFAirDrop.ContactInfo.Handle);
    uint64_t v84 = v120;
    v85._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v120, v83);
    object = (const char *)v85._object;
    String.append(_:)(v85);
    __n128 v87 = swift_bridgeObjectRelease(object);
    uint64_t v78 = (*(uint64_t (**)(char *, uint64_t, __n128))(v119 + 8))(v82, v84, v87);
    unint64_t v88 = v161;
    uint64_t v157 = v160;
  }

  else
  {
    uint64_t v157 = 0xD000000000000013LL;
    unint64_t v88 = 0x80000001005072D0LL;
  }

  uint64_t v89 = v154;
  unint64_t v158 = ~v146;
  uint64_t v90 = v132;
  uint64_t v91 = UUID.init()(v78);
  unint64_t v92 = v134;
  static Date.now.getter(v91);
  uint64_t v93 = sub_100183098(&qword_1006451E0);
  uint64_t v94 = sub_100183098(&qword_1006451E8);
  uint64_t v95 = *(void *)(v94 - 8);
  uint64_t v96 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v97 = (v96 + 32) & ~v96;
  uint64_t v98 = swift_allocObject(v93, v97 + *(void *)(v95 + 72), v96 | 7);
  *(_OWORD *)(v98 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1004CDCA0;
  uint64_t v99 = v98 + v97;
  sub_100183098(&qword_100650B98);
  uint64_t v100 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v153 + 16))(v99, v159, v89);
  UUID.init()(v100);
  (*(void (**)(uint64_t, void, uint64_t))(v95 + 104))( v99,  enum case for SFAirDrop.AcceptAction.single<A>(_:),  v94);
  uint64_t v101 = v151;
  uint64_t v102 = v130;
  uint64_t v103 = v133;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v130, v151, v133);
  SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)( v90,  v92,  v124,  v144,  v157,  v88,  v98,  v102,  0,  v150,  v127,  v126,  v125);
  uint64_t v104 = type metadata accessor for TaskPriority(0LL);
  uint64_t v105 = (uint64_t)v137;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56LL))(v137, 1LL, 1LL, v104);
  uint64_t v106 = v79;
  uint64_t v107 = v79;
  uint64_t v108 = v148;
  uint64_t v109 = v149;
  v145(v107, v148, v149);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v110 = static AirDropActor.shared;
  uint64_t v111 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v112 = (v146 + 32) & v158;
  uint64_t v113 = swift_allocObject(&unk_1005DCE90, v112 + v129, v147);
  *(void *)(v113 + swift_unknownObjectWeakDestroy(v0 + 16) = v110;
  *(void *)(v113 + 24) = v111;
  v143(v113 + v112, v106, v109);
  swift_retain(v110);
  uint64_t v114 = sub_1001B342C(v105, (uint64_t)&unk_100650BA8, v113);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v159, v154);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v101, v103);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v108, v109);
  uint64_t v115 = v138;
  (*(void (**)(uint64_t, char *, uint64_t))(v135 + 32))(v138, v155, v136);
  uint64_t result = sub_100183098(&qword_100646800);
  *(void *)(v115 + *(int *)(result + 52)) = v114;
  return result;
}

uint64_t sub_10036C69C()
{
  uint64_t v0 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))( v3,  enum case for SFAirDropReceive.ItemDestination.noItem(_:),  v0);
  uint64_t v4 = sub_100183098(&qword_100650B80);
  SFProgressContinuation.finish(with:)(v3, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10036C740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  void v4[3] = a4;
  uint64_t v5 = sub_100183098(&qword_100650BB0);
  void v4[4] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[5] = v6;
  void v4[6] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v7 = static AirDropActor.shared;
  void v4[7] = static AirDropActor.shared;
  return swift_task_switch(sub_10036C7D8, v7, 0LL);
}

uint64_t sub_10036C7D8()
{
  uint64_t v1 = sub_100183098(&qword_100650B80);
  SFProgressContinuation.task.getter(v1);
  uint64_t v2 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10025D3A8;
  return SFProgressTask.finalValue.getter(v0[2], v0[4]);
}

uint64_t sub_10036C84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE v5[24] = a4;
  v5[25] = v4;
  v5[22] = a2;
  v5[23] = a3;
  v5[21] = a1;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v5[26] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[27] = v7;
  unint64_t v8 = (*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[28] = swift_task_alloc(v8);
  v5[29] = swift_task_alloc(v8);
  v5[30] = swift_task_alloc(v8);
  uint64_t v9 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v5[31] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[32] = v10;
  v5[33] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v5[34] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v5[35] = v12;
  v5[36] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_100646800);
  v5[37] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v14 = static AirDropActor.shared;
  v5[38] = static AirDropActor.shared;
  return swift_task_switch(sub_10036C978, v14, 0LL);
}

uint64_t sub_10036C978()
{
  uint64_t v1 = *(void *)(v0 + 200)
     + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_contentHandler;
  swift_beginAccess(v1, v0 + 136, 0LL, 0LL);
  sub_10019A6C4(v1, v0 + 56);
  uint64_t v2 = sub_100183098(&qword_100656430);
  uint64_t v3 = sub_100183098(&qword_100650BD8);
  if ((swift_dynamicCast(v0 + 96, v0 + 56, v2, v3, 6LL) & 1) == 0)
  {
    *(void *)(v0 + 128) = 0LL;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_100187100(v0 + 96, &qword_100650BE0);
LABEL_8:
    (*(void (**)(void, void, void))(*(void *)(v0 + 216) + 16LL))( *(void *)(v0 + 168),  *(void *)(v0 + 192),  *(void *)(v0 + 208));
    uint64_t v17 = *(void *)(v0 + 288);
    uint64_t v18 = *(void *)(v0 + 264);
    uint64_t v20 = *(void *)(v0 + 232);
    uint64_t v19 = *(void *)(v0 + 240);
    uint64_t v21 = *(void *)(v0 + 224);
    swift_task_dealloc(*(void *)(v0 + 296));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  sub_1001CE0D0((__int128 *)(v0 + 96), v0 + 16);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, v4, v6, v7);
  if ((v8 & 1) == 0)
  {
    sub_10018709C((void *)(v0 + 16));
    goto LABEL_8;
  }

  *(void *)(v0 + 312) = OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Ask open destination START", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  uint64_t v12 = *(void *)(v0 + 184);

  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = *(void *)(v0 + 48);
  sub_10019A708((void *)(v0 + 16), v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v13, v14);
  uint64_t v15 = *(void *)(v0 + 288);
  uint64_t v16 = *(void *)(v0 + 296);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v38 = *(void *)(v0 + 280);
  uint64_t v39 = *(void *)(v0 + 272);
  uint64_t v36 = *(void *)(v0 + 256);
  uint64_t v37 = *(void *)(v0 + 248);
  uint64_t v23 = *(void *)(v0 + 216);
  uint64_t v35 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v26 = *(const char **)(v0 + 176);
  uint64_t v25 = *(const char **)(v0 + 184);
  uint64_t v27 = (int *)sub_100183098((uint64_t *)&unk_10064B760);
  uint64_t v28 = v27[12];
  uint64_t v29 = v27[16];
  uint64_t v34 = v22 + v27[20];
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  *(void *)(v0 + 320) = v30;
  v30(v22, v24, v35);
  *(void *)(v22 + v28) = v26;
  *(void *)(v22 + v29) = v25;
  uint64_t v31 = sub_100183098(&qword_1006451B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16LL))(v34, v16, v31);
  (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))( v22,  enum case for SFAirDropReceive.Transfer.State.waitingForOpenDestinationResponse(_:),  v37);
  *(void *)&double v32 = swift_bridgeObjectRetain(v26).n128_u64[0];
  swift_bridgeObjectRetain(v25, v32);
  sub_10044E6FC(v22, v15);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v22, v37);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v15, v39);
  return swift_task_switch(sub_10036CD28, 0LL, 0LL);
}

uint64_t sub_10036CD28()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[41] = v2;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[42] = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[43] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10036CDD0;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[30],  &unk_100650BE8,  v2,  sub_10036F978,  v3,  0LL,  0LL,  v0[26]);
}

uint64_t sub_10036CDD0()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 344LL);
  *(void *)(*(void *)v1 + 352LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10036CE4C;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v7 = v2[41];
    uint64_t v6 = v2[42];
    uint64_t v8 = v2[38];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_10036CF34;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_10036CE4C()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[38];
  swift_task_dealloc(v0[42]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10036CE94, v2, 0LL);
}

uint64_t sub_10036CE94()
{
  uint64_t v2 = *(void *)(v0 + 288);
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 264);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 224);
  sub_10018709C((void *)(v0 + 16));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036CF34()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0 + 320))( *(void *)(v0 + 232),  *(void *)(v0 + 240),  *(void *)(v0 + 208));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v23 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 224);
    uint64_t v4 = *(void *)(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 320);
    uint64_t v22 = *(void *)(v0 + 216);
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v24 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    v21(v5, v4, v6);
    uint64_t v9 = String.init<A>(describing:)(v5, v6);
    uint64_t v11 = (const char *)v10;
    *(void *)(v0 + 160) = sub_10018CDB4(v9, v10, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v7 + 4, v7 + 12);
    __n128 v12 = swift_bridgeObjectRelease(v11);
    (*(void (**)(uint64_t, uint64_t, __n128))(v22 + 8))(v4, v6, v12);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Ask open destination END {destination: %s}", v7, 0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);

    uint64_t v13 = v23;
  }

  else
  {
    uint64_t v14 = *(void *)(v0 + 296);
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8LL))(*(void *)(v0 + 232), *(void *)(v0 + 208));

    uint64_t v13 = v14;
  }

  sub_100187100(v13, &qword_100646800);
  (*(void (**)(void, void, void))(*(void *)(v0 + 216) + 32LL))( *(void *)(v0 + 168),  *(void *)(v0 + 240),  *(void *)(v0 + 208));
  sub_10018709C((void *)(v0 + 16));
  uint64_t v15 = *(void *)(v0 + 288);
  uint64_t v16 = *(void *)(v0 + 264);
  uint64_t v18 = *(void *)(v0 + 232);
  uint64_t v17 = *(void *)(v0 + 240);
  uint64_t v19 = *(void *)(v0 + 224);
  swift_task_dealloc(*(void *)(v0 + 296));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036D160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  void v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  void v5[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[11] = v7;
  uint64_t v8 = *(void *)(v7 + 64);
  v5[12] = v8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v5[13] = swift_task_alloc(v9);
  v5[14] = swift_task_alloc(v9);
  uint64_t v10 = *(void *)(sub_100183098(&qword_100646800) - 8);
  v5[15] = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  v5[16] = v11;
  v5[17] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100183098(&qword_100646560);
  v5[18] = swift_task_alloc((*(void *)(*(void *)(v12 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_100650BF0);
  v5[19] = v13;
  v5[20] = swift_task_alloc((*(void *)(*(void *)(v13 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100183098(&qword_100650B50);
  v5[21] = swift_task_alloc((*(void *)(*(void *)(v14 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100183098(&qword_100650B58);
  v5[22] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v5[23] = v16;
  uint64_t v17 = *(void *)(v16 + 64);
  _BYTE v5[24] = v17;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v5[25] = swift_task_alloc(v18);
  v5[26] = swift_task_alloc(v18);
  v5[27] = swift_task_alloc(v18);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v19 = static AirDropActor.shared;
  v5[28] = static AirDropActor.shared;
  return swift_task_switch(sub_10036D2F8, v19, 0LL);
}

uint64_t sub_10036D2F8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = *(void *)(v0[9] + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler)
     + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_exchangeContinuation;
  swift_beginAccess(v2, v0 + 2, 0LL, 0LL);
  sub_1001915A4(v2, v1, &qword_100650B50);
  uint64_t v3 = sub_100183098(&qword_100650B60);
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1LL, v3) == 1)
  {
    sub_100187100(v0[21], &qword_100650B50);
    return swift_task_switch(sub_10036D790, 0LL, 0LL);
  }

  else
  {
    uint64_t v6 = v0[26];
    uint64_t v7 = v0[27];
    uint64_t v8 = v0[23];
    uint64_t v9 = v0[21];
    uint64_t v10 = v0[22];
    uint64_t v11 = v0[17];
    uint64_t v35 = v0[25];
    uint64_t v36 = v0[16];
    uint64_t v29 = v0[18];
    uint64_t v30 = v0[15];
    uint64_t v39 = v0[12];
    uint64_t v40 = v0[24];
    uint64_t v31 = v0[11];
    uint64_t v33 = v0[10];
    uint64_t v34 = v0[14];
    uint64_t v41 = v0[9];
    uint64_t v12 = v0[7];
    uint64_t v32 = v0[8];
    SFProgressContinuation.task.getter(v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    uint64_t v13 = v7;
    uint64_t v14 = v7;
    uint64_t v15 = v10;
    uint64_t v28 = v10;
    v38(v14, v6, v10);
    uint64_t v16 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v29, 1LL, 1LL, v16);
    sub_1001915A4(v12, v11, &qword_100646800);
    uint64_t v17 = *(unsigned __int8 *)(v30 + 80);
    uint64_t v18 = (v17 + 16) & ~v17;
    uint64_t v37 = swift_allocObject(&unk_1005DCEB8, v18 + v36, v17 | 7);
    v0[29] = v37;
    sub_1001870BC(v11, v37 + v18, &qword_100646800);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v35, v13, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v34, v32, v33);
    uint64_t v19 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v20 = (v19 + 16) & ~v19;
    unint64_t v21 = (v40 + v20 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v22 = *(unsigned __int8 *)(v31 + 80);
    uint64_t v23 = (v22 + v21 + 8) & ~v22;
    uint64_t v24 = swift_allocObject(&unk_1005DCEE0, v23 + v39, v19 | v22 | 7);
    v0[30] = v24;
    v38(v24 + v20, v35, v28);
    *(void *)(v24 + v21) = v41;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
    v0[31] = v25;
    v25(v24 + v23, v34, v33);
    uint64_t v26 = async function pointer to concurrentRace<A>(priority:operation:against:)[1];
    swift_retain(v41);
    uint64_t v27 = (void *)swift_task_alloc(v26);
    v0[32] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_10036D60C;
    return concurrentRace<A>(priority:operation:against:)( v0[20],  v0[18],  &unk_100650C08,  v37,  &unk_100650C18,  v24,  v0[19]);
  }

uint64_t sub_10036D60C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 256);
  uint64_t v5 = *(void *)(*v1 + 232);
  uint64_t v4 = *(void *)(*v1 + 240);
  uint64_t v6 = *(void *)(*v1 + 144);
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc(v3);
  sub_100187100(v6, &qword_100646560);
  swift_release(v4);
  swift_release(v5);
  if (v0) {
    uint64_t v7 = sub_10036DA74;
  }
  else {
    uint64_t v7 = sub_10036D6A8;
  }
  return swift_task_switch(v7, *(void *)(v2 + 224), 0LL);
}

uint64_t sub_10036D6A8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(*(void *)(v0 + 184) + 8LL))(*(void *)(v0 + 216), *(void *)(v0 + 176));
  uint64_t v7 = v2 + *(int *)(v3 + 48);
  v1(v6, v2, v4);
  sub_1001870BC(v7, v5, &qword_100650B10);
  uint64_t v8 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 104);
  uint64_t v14 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 216));
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036D790()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[34] = v2;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[35] = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[36] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10036D838;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[13],  &unk_100650BF8,  v2,  sub_10036F978,  v3,  0LL,  0LL,  v0[10]);
}

uint64_t sub_10036D838()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 288LL);
  *(void *)(*(void *)v1 + 296LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10036D988;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v7 = v2[34];
    uint64_t v6 = v2[35];
    uint64_t v8 = v2[28];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_10036D8B4;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_10036D8B4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 32LL))( *(void *)(v0 + 40),  *(void *)(v0 + 104),  *(void *)(v0 + 80));
  uint64_t v2 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v9 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 216));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036D988()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[28];
  swift_task_dealloc(v0[35]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10036D9D0, v2, 0LL);
}

uint64_t sub_10036D9D0()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036DA74()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 216));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036DB28(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  v2[7] = static AirDropActor.shared;
  return swift_task_switch(sub_10036DBC0, 0LL, 0LL);
}

uint64_t sub_10036DBC0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc(32LL);
  v0[8] = v2;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v3 = swift_task_alloc(32LL);
  v0[9] = v3;
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc(async function pointer to withTaskCancellationHandler<A>(operation:onCancel:isolation:)[1]);
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10036DC68;
  return withTaskCancellationHandler<A>(operation:onCancel:isolation:)( v0[6],  &unk_100650C28,  v2,  sub_10036F978,  v3,  0LL,  0LL,  v0[4]);
}

uint64_t sub_10036DC68()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80LL);
  *(void *)(*(void *)v1 + 88LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_10036DD80;
    uint64_t v5 = 0LL;
  }

  else
  {
    uint64_t v7 = v2[8];
    uint64_t v6 = v2[9];
    uint64_t v8 = v2[7];
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    uint64_t v4 = sub_10036DCE4;
    uint64_t v5 = v8;
  }

  return swift_task_switch(v4, v5, 0LL);
}

uint64_t sub_10036DCE4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v4 + *(int *)(sub_100183098(&qword_100650BF0) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v1, v3);
  uint64_t v6 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036DD80()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[7];
  swift_task_dealloc(v0[9]);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10036DDC8, v2, 0LL);
}

uint64_t sub_10036DDC8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[4] = a3;
  v4[5] = a4;
  void v4[3] = a1;
  uint64_t v5 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  void v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v4[7] = v6;
  void v4[8] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
  void v4[9] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[10] = v8;
  uint64_t v9 = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  v4[11] = v9;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  v4[12] = static AirDropActor.shared;
  uint64_t v10 = (void *)swift_task_alloc(async function pointer to SFProgressTask.finalValue.getter[1]);
  v4[13] = v10;
  uint64_t v11 = sub_100183098(&qword_100650B58);
  *uint64_t v10 = v4;
  v10[1] = sub_10036DEFC;
  return SFProgressTask.finalValue.getter(v9, v11);
}

uint64_t sub_10036DEFC()
{
  uint64_t v3 = *(void *)(*(void *)v1 + 96LL);
  uint64_t v2 = *(void *)(*(void *)v1 + 104LL);
  *(void *)(*(void *)v1 + 112LL) = v0;
  swift_task_dealloc(v2);
  if (v0) {
    uint64_t v4 = sub_10036E1A4;
  }
  else {
    uint64_t v4 = sub_10036DF60;
  }
  return swift_task_switch(v4, v3, 0LL);
}

uint64_t sub_10036DF60()
{
  uint64_t v1 = *(uint64_t (**)(void, void, void))(*(void *)(v0 + 56) + 16LL);
  uint64_t v2 = v1(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48));
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v30 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_100183F14( &qword_100650C20,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
    uint64_t v10 = v5;
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    uint64_t v12 = v1;
    uint64_t v14 = (const char *)v13;
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10018CDB4(v11, v13, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v7 + 4, v7 + 12);
    uint64_t v15 = v14;
    uint64_t v1 = v12;
    __n128 v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v10, v6, v16);
    _os_log_impl( (void *)&_mh_execute_header,  v3,  v4,  "Got contact exchange request before user chose to open/move, picking default destination: %s",  v7,  0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v17 = *(void *)(v0 + 64);
    uint64_t v19 = *(void *)(v0 + 48);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }

  uint64_t v21 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 64);
  uint64_t v22 = *(void *)(v0 + 72);
  uint64_t v25 = *(void *)(v0 + 40);
  uint64_t v24 = *(void *)(v0 + 48);
  uint64_t v26 = *(void *)(v0 + 24);
  uint64_t v27 = v26 + *(int *)(sub_100183098(&qword_100650BF0) + 48);
  v1(v26, v25, v24);
  sub_1001A4B40(v20, v27, _s14descr1005DEB71C15ExchangeRequestVMa);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v27, 0LL, 1LL, v22);
  swift_task_dealloc(v20);
  swift_task_dealloc(v23);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10036E1A4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10036E1E4()
{
}

uint64_t sub_10036E210()
{
  uint64_t v0 = sub_10044E5F0();

  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10036E260()
{
  return _s6RunnerCMa_0(0LL);
}

uint64_t _s6RunnerCMa_0(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006508E8, (uint64_t)&_s6RunnerCMn_0);
}

uint64_t sub_10036E27C(uint64_t a1)
{
  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = &unk_1004D7748;
  return swift_updateClassMetadata2(a1, 256LL, 3LL, v2, a1 + 472);
}

uint64_t _s6RunnerC19PreAcceptRunResultsVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100650D30, (uint64_t)&_s6RunnerC19PreAcceptRunResultsVMn);
}

uint64_t sub_10036E2E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_10036E2F8, 0LL, 0LL);
}

uint64_t sub_10036E2F8()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + *(int *)(sub_100183098(&qword_100646800) + 52));
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[4] = v3;
  uint64_t v4 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v5 = sub_100183098(&qword_100645710);
  *uint64_t v3 = v0;
  v3[1] = sub_10036E394;
  return Task.value.getter(v0[2], v2, v4, v5, &protocol self-conformance witness table for Error);
}

uint64_t sub_10036E394()
{
  uint64_t v2 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10036E3DC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_task_switch(sub_10036E3F4, 0LL, 0LL);
}

uint64_t sub_10036E3F4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + *(int *)(sub_100183098(&qword_10064A010) + 52));
  uint64_t v3 = (void *)swift_task_alloc(async function pointer to Task.value.getter[1]);
  v0[4] = v3;
  uint64_t v4 = type metadata accessor for SFAirDrop.ContactRequest(0LL);
  uint64_t v5 = sub_100183098(&qword_100645710);
  *uint64_t v3 = v0;
  v3[1] = sub_10036F974;
  return Task.value.getter(v0[2], v2, v4, v5, &protocol self-conformance witness table for Error);
}

void sub_10036E490(uint64_t a1)
{
}

void sub_10036E4AC(uint64_t a1)
{
}

void sub_10036E4C8(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v32 = a3;
  uint64_t v7 = type metadata accessor for UUID(0LL);
  uint64_t v33 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(a2);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644208 != -1) {
    swift_once(&qword_100644208, sub_10037848C);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_100650F68);
  uint64_t v14 = sub_1001915A4(a1, (uint64_t)v12, a2);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.error.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc(12LL, -1LL);
    uint64_t v30 = v10;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v29 = swift_slowAlloc(32LL, -1LL);
    uint64_t v35 = v29;
    uint64_t v31 = a1;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v28 = v18 + 4;
    uint64_t v19 = sub_100183098(v32);
    SFAirDrop.PermissionRequest.id.getter(v19);
    uint64_t v20 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter(v7, v20);
    uint64_t v22 = v7;
    uint64_t v23 = a4;
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v22);
    uint64_t v34 = sub_10018CDB4(v21, v25, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v28, v18 + 12);
    uint64_t v26 = (const char *)v25;
    a4 = v23;
    swift_bridgeObjectRelease(v26);
    sub_100187100((uint64_t)v12, a2);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "SDAirDropPermissionRequestTask[%s] was cancelled", v18, 0xCu);
    uint64_t v27 = v29;
    swift_arrayDestroy(v29, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {
    sub_100187100((uint64_t)v12, a2);
  }

  a4(0LL);
  sub_100183098(&qword_100645710);
  Task.cancel()();
}

void sub_10036E7A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100183098(&qword_10064A000);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644208 != -1) {
    swift_once(&qword_100644208, sub_10037848C);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v9, (uint64_t)qword_100650F68);
  uint64_t v10 = sub_1001915A4(a1, (uint64_t)v8, &qword_10064A000);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc(12LL, -1LL);
    uint64_t v24 = a1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v26 = v23;
    uint64_t v21 = v3;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v22 = v14 + 4;
    uint64_t v15 = sub_100183098(&qword_10064A048);
    SFAirDrop.PermissionRequest.id.getter(v15);
    uint64_t v16 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter(v2, v16);
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v2);
    uint64_t v25 = sub_10018CDB4(v17, (unint64_t)v19, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v22, v14 + 12);
    swift_bridgeObjectRelease(v19);
    sub_100187100((uint64_t)v8, &qword_10064A000);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "SDAirDropPermissionRequestTask[%s] was cancelled", v14, 0xCu);
    uint64_t v20 = v23;
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1LL, -1LL);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {
    sub_100187100((uint64_t)v8, &qword_10064A000);
  }

  sub_100183098(&qword_100645710);
  Task.cancel()();
}

void sub_10036EA64()
{
}

uint64_t sub_10036EA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropServerConnection(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036EADC()
{
  return sub_10036C69C();
}

uint64_t sub_10036EB10()
{
  uint64_t v1 = sub_100183098(&qword_100650B80);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10036EB74(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100650B80);
  return SFProgressContinuation.finish(with:)(a1, v2);
}

uint64_t sub_10036EBBC()
{
  uint64_t v1 = sub_100183098(&qword_100650B80);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject(v0, v4);
}

uint64_t sub_10036EC34(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_100650B80) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((v4 + 32) & ~v4);
  uint64_t v8 = (void *)swift_task_alloc(dword_100650BA4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100195708;
  return sub_10036C740(a1, v5, v6, v7);
}

uint64_t sub_10036ECBC(uint64_t a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v34 = a6;
  id v36 = a5;
  uint64_t v32 = a3;
  uint64_t v43 = a2;
  uint64_t v38 = a1;
  uint64_t v40 = type metadata accessor for SFAirDrop.ButtonConfiguration(0LL);
  uint64_t v37 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t v42 = v11;
  __chkstk_darwin(v11);
  uint64_t v35 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v33 = *(void *)(v13 - 8);
  uint64_t v14 = v33;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  uint64_t v39 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(_BYTE *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_delegateCanAutoAccept) = 0;
  *(void *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_nearbyAgent) = a4;
  uint64_t v20 = v32;
  *(void *)(v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_receiveHandler) = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, a1, v17);
  sub_10019A6C4((uint64_t)v43, (uint64_t)v44);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v23 = v34;
  v22(v16, v34, v13);
  id v24 = a4;
  id v25 = v20;
  uint64_t v26 = sub_10044E2D0((uint64_t)v19, v44, v36, (uint64_t)v16);
  *uint64_t v10 = 0x662E657261757173LL;
  v10[1] = 0xEB000000006C6C69LL;
  (*(void (**)(void *, void, uint64_t))(v37 + 104))( v10,  enum case for SFAirDrop.ButtonConfiguration.symbol(_:),  v40);
  uint64_t v27 = swift_allocObject(&unk_1005DCF30, 24LL, 7LL);
  swift_weakInit(v27 + 16);
  swift_retain(v26);
  uint64_t v28 = (uint64_t)v35;
  SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)( 0xD000000000000017LL,  0x800000010050C3D0LL,  v10,  1LL,  sub_10036F454,  v27);
  swift_retain(v26);
  sub_10044EADC(v28, (uint64_t)v19);
  swift_release_n(v26, 2LL);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v23, v13);
  sub_10018709C(v43);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  v29(v38, v17);
  v29((uint64_t)v19, v17);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v28, v42);
  return v26;
}

uint64_t sub_10036EFA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_100650B6C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1001943E8;
  void v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_10036E2F8, 0LL, 0LL);
}

uint64_t sub_10036F008(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc(dword_100650B6C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100195708;
  void v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_10036E2F8, 0LL, 0LL);
}

uint64_t sub_10036F06C()
{
  return sub_10036F28C(&qword_100646800, &qword_1006451B0);
}

uint64_t sub_10036F080(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_100646800) - 8) + 80LL);
  uint64_t v5 = v1 + ((v4 + 16) & ~v4);
  uint64_t v6 = (void *)swift_task_alloc(dword_100650C04);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100195708;
  return sub_10036DB28(a1, v5);
}

uint64_t sub_10036F0F4()
{
  uint64_t v1 = sub_100183098(&qword_100650B58);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v5 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(void *)(v0 + v4));
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject(v0, v8);
}

uint64_t sub_10036F1C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098(&qword_100650B58) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SFAirDropReceive.ItemDestination(0LL) - 8) + 80LL);
  uint64_t v8 = v6 + v7 + 8;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = v1 + (v8 & ~v7);
  uint64_t v12 = (void *)swift_task_alloc(dword_100650C14);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_100195708;
  return sub_10036DDFC(a1, v9, v10, v11);
}

uint64_t sub_10036F278()
{
  return sub_10036F28C(&qword_10064A010, &qword_10064B750);
}

uint64_t sub_10036F28C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_100183098(a1);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = sub_100183098(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v8, v9);
  swift_release(*(void *)(v8 + *(int *)(v4 + 52)));
  return swift_deallocObject(v2, v7);
}

uint64_t sub_10036F314(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(sub_100183098(&qword_10064A010) - 8) + 80LL);
  uint64_t v5 = v1 + ((v4 + 16) & ~v4);
  unint64_t v6 = (void *)swift_task_alloc(dword_100650C34);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100195708;
  return sub_10036B564(a1, v5);
}

uint64_t sub_10036F388(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_100650C44);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100195708;
  return sub_10036B730(a1, v1);
}

void sub_10036F3DC()
{
}

BOOL sub_10036F40C()
{
  return MKBGetDeviceLockState(0LL) - 1 < 2;
}

uint64_t sub_10036F430()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10036F454()
{
  return sub_10035431C(v0);
}

uint64_t sub_10036F45C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10036F488(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc(dword_100650CC4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_1001943E8;
  return sub_1003544A4(a1, v4, v5, v6);
}

uint64_t *sub_10036F4F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  }

  return a1;
}

uint64_t sub_10036F59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
}

uint64_t sub_10036F5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10036F674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10036F6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10036F76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10036F7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036F7F4);
}

uint64_t sub_10036F7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10036F868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10036F874);
}

uint64_t sub_10036F874(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_10036F8F0(uint64_t a1)
{
  uint64_t result = type metadata accessor for SFAirDropReceive.AskResponse(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for SFAirDropReceive.Transfer(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 2LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10036F97C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100650D70);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100650D70);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10036FA0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v12 = sub_100237A04();
  v21[1] = v12;
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(v1 + 24) = 0LL;
  *(_BYTE *)(v1 + 32) = 0;
  static DispatchQoS.unspecified.getter(v12);
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v13 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v14 = sub_100183098(&qword_100650E60);
  uint64_t v15 = sub_1001DFF80((unint64_t *)&qword_100644430, &qword_100650E60);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v14, v15, v6, v13);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v5,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v2);
  uint64_t v16 = (dispatch_queue_s *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000035LL,  0x800000010050C480LL,  v11,  v8,  v5,  0LL);
  *(void *)(v1 + 40) = v16;
  uint64_t v17 = nw_path_monitor_create();
  *(void *)(v1 + 48) = v17;
  *(_BYTE *)(v1 + 56) = 2;
  nw_path_monitor_set_queue(v17, v16);
  aBlock[4] = sub_10037028C;
  uint64_t v23 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_10036FCE0;
  aBlock[3] = &unk_1005DD038;
  uint64_t v18 = _Block_copy(aBlock);
  uint64_t v19 = v23;
  swift_unknownObjectRetain(v17);
  swift_retain(v1);
  swift_release(v19);
  nw_path_monitor_set_update_handler(v17, v18);
  _Block_release(v18);
  swift_unknownObjectRelease(v17);
  return v1;
}

uint64_t sub_10036FC70(nw_path *a1, uint64_t a2)
{
  uint64_t result = nw_path_get_status(a1);
  int v4 = result;
  uint64_t v5 = *(void (**)(uint64_t))(a2 + 16);
  if (v5) {
    BOOL v6 = (_DWORD)result == 1;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6 && (*(_BYTE *)(a2 + 56) & 1) == 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = swift_retain(v7);
    v5(v8);
    uint64_t result = sub_100224FF8((uint64_t)v5, v7);
  }

  *(_BYTE *)(a2 + 56) = v4 == 1;
  return result;
}

uint64_t sub_10036FCE0(uint64_t a1, uint64_t a2)
{
  int v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  uint64_t v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

uint64_t sub_10036FD28()
{
  return sub_10036FEC4((uint64_t)sub_100370264, (uint64_t)&unk_1005DCFE8);
}

void sub_10036FD3C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    if (qword_100644200 != -1) {
      swift_once(&qword_100644200, sub_10036F97C);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100650D70);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      int v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v4 = 0;
      uint64_t v5 = "Network path monitor already started";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, v5, v4, 2u);
      swift_slowDealloc(v4, -1LL, -1LL);
    }
  }

  else
  {
    nw_path_monitor_start(*(nw_path_monitor_t *)(a1 + 48));
    *(_BYTE *)(a1 + 32) = 1;
    if (qword_100644200 != -1) {
      swift_once(&qword_100644200, sub_10036F97C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_100650D70);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v3 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      int v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)int v4 = 0;
      uint64_t v5 = "Network path monitor started";
      goto LABEL_10;
    }
  }
}

uint64_t sub_10036FEB0()
{
  return sub_10036FEC4((uint64_t)sub_100370284, (uint64_t)&unk_1005DD010);
}

uint64_t sub_10036FEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = *(void *)(v2 + 40);
  aBlock[4] = a1;
  uint64_t v22 = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = a2;
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_retain();
  static DispatchQoS.unspecified.getter(v14);
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v15 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v16 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v17 = sub_1001DFF80((unint64_t *)&qword_100646520, (uint64_t *)&unk_1006460D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v12, v8, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release(v22);
}

void sub_100370088(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    nw_path_monitor_cancel(*(nw_path_monitor_t *)(a1 + 48));
    *(_BYTE *)(a1 + 32) = 0;
    if (qword_100644200 != -1) {
      swift_once(&qword_100644200, sub_10036F97C);
    }
    uint64_t v2 = type metadata accessor for Logger(0LL);
    uint64_t v3 = sub_100186DE4(v2, (uint64_t)qword_100650D70);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v3);
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Network path monitor stopped";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, v6, v5, 2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }
  }

  else
  {
    if (qword_100644200 != -1) {
      swift_once(&qword_100644200, sub_10036F97C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_100650D70);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      uint64_t v6 = "Network path monitor already stopped";
      goto LABEL_10;
    }
  }
}

uint64_t sub_1003701F8()
{
  swift_unknownObjectRelease(*(void *)(v0 + 48));
  return swift_deallocClassInstance(v0, 57LL, 7LL);
}

uint64_t type metadata accessor for SDPseudonymNetworkPathMonitor()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary29SDPseudonymNetworkPathMonitor);
}

uint64_t sub_10037024C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 16);
  uint64_t v5 = *(void *)(*v2 + 24);
  *(void *)(v3 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return sub_100224FF8(v4, v5);
}

void sub_100370264()
{
}

uint64_t sub_10037026C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10037027C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_100370284()
{
}

uint64_t sub_10037028C(nw_path *a1)
{
  return sub_10036FC70(a1, v1);
}

uint64_t sub_1003702A4@<X0>( uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, const char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v161 = a6;
  unint64_t v155 = a5;
  uint64_t v156 = a4;
  uint64_t v159 = a3;
  uint64_t v172 = a1;
  uint64_t v9 = sub_100183098((uint64_t *)&unk_10064DC20);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v153 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  uint64_t v151 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v152 = (char *)&v137 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_100656490);
  __chkstk_darwin(v13);
  uint64_t v149 = (char *)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v146 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  uint64_t v15 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  unint64_t v148 = (char *)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  uint64_t v143 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  uint64_t v147 = (char *)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v18);
  uint64_t v145 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v168 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v137 - v25;
  uint64_t v157 = v27;
  __chkstk_darwin(v24);
  uint64_t v169 = (char *)&v137 - v28;
  uint64_t v29 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v174 = *(void *)(v29 - 8);
  uint64_t v175 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v167 = (char *)&v137 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v154 = v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v137 - v32;
  uint64_t v173 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v34 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v177 = (char *)&v137 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v170 = type metadata accessor for Logger(0LL);
  uint64_t v158 = *(void *)(v170 - 8);
  uint64_t v36 = __chkstk_darwin(v170);
  uint64_t v166 = (char *)&v137 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v150 = v37;
  __chkstk_darwin(v36);
  unint64_t v176 = (char *)&v137 - v38;
  uint64_t v39 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v39);
  uint64_t v41 = (uint64_t *)((char *)&v137 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v165 = a2;
  sub_10028CA8C((uint64_t)a2, (uint64_t)v41);
  uint64_t v42 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  int v43 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48LL))(v41, 1LL, v42);
  uint64_t v171 = v21;
  if (v43 == 1)
  {
    uint64_t v139 = v15;
    uint64_t v164 = v26;
    uint64_t v140 = v20;
    uint64_t v141 = v11;
    uint64_t v142 = a7;
    uint64_t v44 = sub_100187100((uint64_t)v41, &qword_100649F58);
  }

  else
  {
    if (swift_getEnumCaseMultiPayload(v41, v42) == 3)
    {
      uint64_t v45 = (const char *)v41[1];
      uint64_t v46 = (const char *)v41[3];
      uint64_t v47 = v41[4];
      unint64_t v48 = v41[5];
      *(void *)&double v49 = swift_bridgeObjectRelease(v46).n128_u64[0];
      swift_bridgeObjectRelease(v45, v49);
      sub_100189B0C(v47, v48);
      return sub_1003712E8(v172, v165, 0LL, 0LL, v161, a7);
    }

    uint64_t v139 = v15;
    uint64_t v164 = v26;
    uint64_t v140 = v20;
    uint64_t v141 = v11;
    uint64_t v142 = a7;
    uint64_t v44 = sub_100191450((uint64_t)v41);
  }

  uint64_t v51 = v177;
  uint64_t v52 = v172;
  uint64_t v53 = SFAirDropSend.Request.id.getter(v44);
  uint64_t v54 = SFAirDrop.TransferIdentifier.stringValue.getter(v53);
  uint64_t v56 = (const char *)v55;
  uint64_t v57 = sub_10037C5B0(8LL, v54, v55);
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  swift_bridgeObjectRelease(v56);
  uint64_t v64 = static String._fromSubstring(_:)(v57, v59, v61, v63);
  uint64_t v66 = v65;
  swift_bridgeObjectRelease(v63);
  strcpy((char *)v179, "AirDrop.");
  BYTE1(v179[1]) = 0;
  WORD1(v179[1]) = 0;
  HIDWORD(v179[1]) = -402653184;
  v67._countAndFlagsBits = v64;
  v67._object = v66;
  String.append(_:)(v67);
  swift_bridgeObjectRelease((const char *)v66);
  Logger.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100505BA0LL, v179[0], v179[1]);
  uint64_t v160 = *(void (**)(char *, uint64_t))(v34 + 8);
  v160(v51, v173);
  uint64_t v68 = v174;
  uint64_t v69 = v52;
  uint64_t v70 = v175;
  uint64_t v163 = *(void (**)(char *, uint64_t, uint64_t))(v174 + 16);
  v163(v33, v69, v175);
  uint64_t v71 = v165;
  uint64_t v72 = swift_bridgeObjectRetain_n(v165, 2LL);
  unint64_t v73 = (os_log_s *)Logger.logObject.getter(v72);
  os_log_type_t v74 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v73, v74))
  {
    uint64_t v75 = swift_slowAlloc(22LL, -1LL);
    uint64_t v76 = swift_slowAlloc(64LL, -1LL);
    uint64_t v138 = v76;
    v179[0] = v76;
    *(_DWORD *)uint64_t v75 = 136315394;
    uint64_t v77 = SFAirDropSend.Request.id.getter(v76);
    uint64_t v78 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v77);
    uint64_t v79 = v70;
    unint64_t v81 = v80;
    v160(v177, v173);
    uint64_t v178 = sub_10018CDB4(v78, v81, v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v75 + 4, v75 + 12);
    unint64_t v82 = (const char *)v81;
    uint64_t v70 = v79;
    uint64_t v71 = v165;
    __n128 v83 = swift_bridgeObjectRelease(v82);
    (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v33, v70, v83);
    *(_WORD *)(v75 + 12) = 2080;
    uint64_t v84 = sub_100183F14( &qword_1006453A0,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF398);
    swift_bridgeObjectRetain(v71);
    uint64_t v86 = Set.description.getter(v85, v42, v84);
    unint64_t v88 = v87;
    swift_bridgeObjectRelease(v71);
    uint64_t v178 = sub_10018CDB4(v86, (unint64_t)v88, v179);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v178, v179, v75 + 14, v75 + 22);
    swift_bridgeObjectRelease_n(v71, 2LL);
    uint64_t v51 = v177;
    swift_bridgeObjectRelease(v88);
    _os_log_impl( (void *)&_mh_execute_header,  v73,  v74,  "Send StateMachine START %s {initialEndpoints: %s}",  (uint8_t *)v75,  0x16u);
    uint64_t v89 = v138;
    swift_arrayDestroy(v138, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v89, -1LL, -1LL);
    swift_slowDealloc(v75, -1LL, -1LL);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v68 + 8))(v33, v70);
    swift_bridgeObjectRelease_n(v71, 2LL);
  }

  uint64_t v90 = v172;
  uint64_t v165 = (const char *)sub_100374C9C(v172, v71);
  uint64_t v92 = v91;
  SFAirDropSend.Request.id.getter(v165);
  uint64_t v93 = v167;
  uint64_t v94 = ((uint64_t (*)(char *, uint64_t, uint64_t))v163)(v167, v90, v70);
  uint64_t v95 = v145;
  static Date.now.getter(v94);
  uint64_t v96 = v147;
  (*(void (**)(char *, void, uint64_t))(v143 + 104))( v147,  enum case for SFAirDropSend.Transfer.State.created(_:),  v144);
  uint64_t v97 = v148;
  (*(void (**)(char *, void, uint64_t))(v139 + 104))( v148,  enum case for SFAirDrop.DisplayPriority.normal(_:),  v146);
  uint64_t v98 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v99 = v149;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56LL))(v149, 1LL, 1LL, v98);
  uint64_t v100 = v152;
  (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v152, v161, v153);
  __n128 v101 = swift_bridgeObjectRetain(v155);
  uint64_t v136 = v99;
  uint64_t v102 = v169;
  uint64_t v103 = v93;
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)( v51,  v93,  v165,  v92,  v95,  v96,  v97,  v156,  v101,  v104,  v136,  v100);
  v179[0] = 0LL;
  v179[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(17LL);
  swift_bridgeObjectRelease((const char *)v179[1]);
  strcpy((char *)v179, "AirDrop Send [");
  HIBYTE(v179[1]) = -18;
  SFAirDropSend.Request.id.getter(v105);
  uint64_t v106 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  uint64_t v107 = v173;
  v108._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v173, v106);
  object = (const char *)v108._object;
  String.append(_:)(v108);
  __n128 v110 = swift_bridgeObjectRelease(object);
  ((void (*)(char *, uint64_t, __n128))v160)(v51, v107, v110);
  v111._countAndFlagsBits = 93LL;
  v111._object = (void *)0xE100000000000000LL;
  String.append(_:)(v111);
  uint64_t v173 = v179[0];
  uint64_t v165 = (const char *)v179[1];
  uint64_t v112 = v171;
  uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v171 + 16);
  uint64_t v114 = v140;
  v113(v164, v102, v140);
  v113(v168, v102, v114);
  v163(v103, v90, v175);
  uint64_t v115 = v158;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v166, v176, v170);
  sub_100374F60(v159, (uint64_t)v179);
  uint64_t v116 = *(unsigned __int8 *)(v112 + 80);
  uint64_t v117 = (v116 + 24) & ~v116;
  uint64_t v118 = v174;
  uint64_t v119 = *(unsigned __int8 *)(v174 + 80);
  uint64_t v120 = (v157 + v119 + v117) & ~v119;
  uint64_t v121 = *(unsigned __int8 *)(v115 + 80);
  uint64_t v122 = (v154 + v121 + v120) & ~v121;
  unint64_t v123 = (v150 + v122 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v124 = swift_allocObject(&unk_1005DD070, v123 + 40, v116 | v119 | v121 | 7);
  uint64_t v125 = v162;
  *(void *)(v124 + swift_weakDestroy(v0 + 16) = v162;
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 32))(v124 + v117, v168, v114);
  (*(void (**)(uint64_t, char *, uint64_t))(v118 + 32))(v124 + v120, v167, v175);
  uint64_t v126 = v124 + v122;
  uint64_t v127 = v115;
  uint64_t v128 = v170;
  (*(void (**)(uint64_t, char *, uint64_t))(v115 + 32))(v126, v166, v170);
  sub_1003750C4((uint64_t)v179, v124 + v123);
  swift_retain(v125);
  uint64_t v129 = v142;
  uint64_t v130 = SFProgressTask.init(_:initialProgress:operation:file:line:)( v173,  v165,  v164,  &unk_100650F40,  v124,  0xD000000000000060LL,  0x800000010050C540LL,  59LL,  v114,  v114);
  uint64_t v131 = (uint64_t)v177;
  uint64_t v132 = v169;
  SFAirDropSend.Transfer.id.getter(v130);
  uint64_t v133 = sub_100183098((uint64_t *)&unk_1006463F0);
  uint64_t v134 = *(void *)(v133 - 8);
  uint64_t v135 = (uint64_t)v141;
  (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v141, v129, v133);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v134 + 56))(v135, 0LL, 1LL, v133);
  swift_beginAccess(v125 + 72, v179, 33LL, 0LL);
  sub_1002E53D8(v135, v131);
  swift_endAccess(v179);
  (*(void (**)(char *, uint64_t))(v171 + 8))(v132, v114);
  return (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v176, v128);
}

uint64_t sub_100370ED0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098((uint64_t *)&unk_1006463F0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v49 - v12;
  swift_beginAccess(v1 + 72, &v54, 32LL, 0LL);
  uint64_t v14 = *(void *)(v1 + 72);
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1003AD580(a1), (v16 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))( v11,  *(void *)(v14 + 56) + *(void *)(v8 + 72) * v15,  v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v11, v7);
    swift_endAccess(&v54);
    SFProgressTask.cancel(_:)(0LL, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }

  else
  {
    uint64_t v18 = swift_endAccess(&v54);
    uint64_t v19 = SFAirDrop.TransferIdentifier.stringValue.getter(v18);
    uint64_t v21 = (const char *)v20;
    uint64_t v22 = sub_10037C5B0(8LL, v19, v20);
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    swift_bridgeObjectRelease(v21);
    uint64_t v29 = static String._fromSubstring(_:)(v22, v24, v26, v28);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease(v28);
    uint64_t v54 = 0x2E706F7244726941LL;
    unint64_t v55 = 0xE800000000000000LL;
    v32._countAndFlagsBits = v29;
    v32._object = v31;
    String.append(_:)(v32);
    swift_bridgeObjectRelease((const char *)v31);
    Logger.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100505BA0LL, v54, v55);
    uint64_t v33 = swift_retain_n(v2, 2LL);
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v51 = swift_slowAlloc(32LL, -1LL);
      uint64_t v54 = v51;
      *(_DWORD *)uint64_t v36 = 136315138;
      uint64_t v50 = v36 + 4;
      uint64_t v37 = *(const char **)(v2 + 72);
      uint64_t v38 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v39 = sub_100183F14( &qword_100646250,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
      swift_bridgeObjectRetain(v37);
      uint64_t v41 = Dictionary.Keys.description.getter(v40, v38, v7, v39);
      int v43 = v42;
      swift_bridgeObjectRelease(v37);
      uint64_t v56 = sub_10018CDB4(v41, (unint64_t)v43, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57, v50, v36 + 12);
      swift_release_n(v2, 2LL);
      swift_bridgeObjectRelease(v43);
      _os_log_impl( (void *)&_mh_execute_header,  v34,  v35,  "No send transfer to cancel. Current transfer IDs: %s",  v36,  0xCu);
      uint64_t v44 = v51;
      swift_arrayDestroy(v51, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1LL, -1LL);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    else
    {

      swift_release_n(v2, 2LL);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v6, v53);
    uint64_t v45 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v46 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    swift_allocError(v45, v46, 0LL, 0LL);
    uint64_t v48 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v45 - 8) + 104LL))( v47,  enum case for SFAirDropSend.Failure.badRequest(_:),  v45);
    return swift_willThrow(v48);
  }

uint64_t sub_1003712E8@<X0>( uint64_t a1@<X0>, const char *a2@<X1>, uint64_t a3@<X2>, const char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v141 = a5;
  uint64_t v159 = a4;
  uint64_t v160 = a3;
  uint64_t v163 = a2;
  uint64_t v148 = a1;
  uint64_t v144 = a6;
  uint64_t v6 = sub_100183098((uint64_t *)&unk_10064DC20);
  __chkstk_darwin(v6);
  uint64_t v145 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  uint64_t v136 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v137 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_100656490);
  __chkstk_darwin(v9);
  uint64_t v135 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v131 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v134 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v132 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Date(0LL);
  __chkstk_darwin(v13);
  uint64_t v129 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v143 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v158 = *(void *)(v143 - 8);
  uint64_t v15 = __chkstk_darwin(v143);
  uint64_t v142 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v155 = (char *)&v123 - v18;
  uint64_t v140 = v19;
  __chkstk_darwin(v17);
  uint64_t v157 = (char *)&v123 - v20;
  uint64_t v21 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v151 = (char *)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v139 = v24;
  __chkstk_darwin(v23);
  uint64_t v126 = (char *)&v123 - v25;
  uint64_t v26 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v162 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = type metadata accessor for Logger(0LL);
  uint64_t v154 = *(void *)(v156 - 8);
  uint64_t v29 = __chkstk_darwin(v156);
  uint64_t v150 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v123 - v32;
  uint64_t v34 = SFAirDropSend.Request.id.getter(v31);
  uint64_t v35 = SFAirDrop.TransferIdentifier.stringValue.getter(v34);
  uint64_t v37 = (const char *)v36;
  uint64_t v38 = sub_10037C5B0(8LL, v35, v36);
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  swift_bridgeObjectRelease(v37);
  uint64_t v45 = static String._fromSubstring(_:)(v38, v40, v42, v44);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease(v44);
  uint64_t v165 = 0x2E706F7244726941LL;
  uint64_t v166 = (const char *)0xE800000000000000LL;
  v48._countAndFlagsBits = v45;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease((const char *)v47);
  Logger.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100505BA0LL, v165, v166);
  uint64_t v49 = *(const char **)(v162 + 8);
  uint64_t v147 = v26;
  uint64_t v146 = v49;
  ((void (*)(char *, uint64_t))v49)(v28, v26);
  uint64_t v152 = v22;
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16);
  uint64_t v51 = v126;
  uint64_t v52 = v148;
  uint64_t v162 = v21;
  uint64_t v149 = v50;
  ((void (*)(char *))v50)(v126);
  uint64_t v53 = swift_bridgeObjectRetain_n(v163, 2LL);
  uint64_t v153 = v33;
  uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc(22LL, -1LL);
    uint64_t v57 = swift_slowAlloc(64LL, -1LL);
    uint64_t v124 = v57;
    uint64_t v165 = v57;
    *(_DWORD *)uint64_t v56 = 136315394;
    uint64_t v58 = SFAirDropSend.Request.id.getter(v57);
    uint64_t v59 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v58);
    uint64_t v61 = v60;
    ((void (*)(char *, uint64_t))v146)(v28, v147);
    uint64_t v164 = sub_10018CDB4(v59, (unint64_t)v61, &v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165, v56 + 4, v56 + 12);
    __n128 v62 = swift_bridgeObjectRelease(v61);
    (*(void (**)(char *, uint64_t, __n128))(v152 + 8))(v51, v162, v62);
    *(_WORD *)(v56 + 12) = 2080;
    uint64_t v63 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
    uint64_t v64 = sub_100183F14( &qword_1006453A0,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF398);
    uint64_t v65 = v163;
    swift_bridgeObjectRetain(v163);
    uint64_t v67 = Set.description.getter(v66, v63, v64);
    uint64_t v69 = v68;
    swift_bridgeObjectRelease(v65);
    uint64_t v164 = sub_10018CDB4(v67, (unint64_t)v69, &v165);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v164, &v165, v56 + 14, v56 + 22);
    swift_bridgeObjectRelease_n(v65, 2LL);
    uint64_t v52 = v148;
    swift_bridgeObjectRelease(v69);
    _os_log_impl( (void *)&_mh_execute_header,  v54,  v55,  "Classroom Send StateMachine START %s {initialEndpoints: %s}",  (uint8_t *)v56,  0x16u);
    uint64_t v70 = v124;
    swift_arrayDestroy(v124, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v70, -1LL, -1LL);
    swift_slowDealloc(v56, -1LL, -1LL);
  }

  else
  {

    (*(void (**)(char *, uint64_t))(v152 + 8))(v51, v162);
    swift_bridgeObjectRelease_n(v163, 2LL);
  }

  uint64_t v71 = v52;
  uint64_t v126 = (char *)sub_100374C9C(v52, v163);
  uint64_t v124 = v72;
  SFAirDropSend.Request.id.getter(v126);
  unint64_t v73 = v151;
  uint64_t v74 = v149(v151, v52, v162);
  uint64_t v75 = v129;
  static Date.now.getter(v74);
  uint64_t v76 = v132;
  (*(void (**)(char *, void, uint64_t))(v127 + 104))( v132,  enum case for SFAirDropSend.Transfer.State.created(_:),  v128);
  uint64_t v77 = v134;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))( v134,  enum case for SFAirDrop.DisplayPriority.normal(_:),  v131);
  uint64_t v78 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v79 = v135;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56LL))(v135, 1LL, 1LL, v78);
  unint64_t v80 = v137;
  (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v137, v141, v138);
  __n128 v81 = swift_bridgeObjectRetain(v159);
  unint64_t v82 = v157;
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)( v28,  v73,  v126,  v124,  v75,  v76,  v77,  v160,  v81,  v83,  v79,  v80);
  uint64_t v165 = 0LL;
  uint64_t v166 = (const char *)0xE000000000000000LL;
  _StringGuts.grow(_:)(27LL);
  swift_bridgeObjectRelease(v166);
  uint64_t v165 = 0xD000000000000018LL;
  uint64_t v166 = (const char *)0x800000010050C5B0LL;
  SFAirDropSend.Request.id.getter(v84);
  uint64_t v85 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  uint64_t v125 = v28;
  uint64_t v86 = v147;
  v87._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v147, v85);
  object = (const char *)v87._object;
  String.append(_:)(v87);
  __n128 v89 = swift_bridgeObjectRelease(object);
  ((void (*)(char *, uint64_t, __n128))v146)(v28, v86, v89);
  v90._countAndFlagsBits = 93LL;
  v90._object = (void *)0xE100000000000000LL;
  String.append(_:)(v90);
  uint64_t v147 = v165;
  uint64_t v146 = v166;
  uint64_t v91 = v158;
  uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v158 + 16);
  uint64_t v93 = v143;
  v92(v155, v82, v143);
  uint64_t v94 = v142;
  v92(v142, v82, v93);
  v149(v73, v71, v162);
  uint64_t v95 = v154;
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v150, v153, v156);
  uint64_t v96 = *(unsigned __int8 *)(v91 + 80);
  uint64_t v97 = (v96 + 24) & ~v96;
  unint64_t v98 = (v140 + v97 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v99 = v152;
  uint64_t v100 = *(unsigned __int8 *)(v152 + 80);
  uint64_t v101 = (v100 + v98 + 8) & ~v100;
  unint64_t v102 = (v139 + v101 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v103 = *(unsigned __int8 *)(v95 + 80);
  uint64_t v104 = (v103 + v102 + 16) & ~v103;
  uint64_t v105 = swift_allocObject(&unk_1005DD098, v104 + v133, v96 | v100 | v103 | 7);
  *(void *)(v105 + swift_weakDestroy(v0 + 16) = v161;
  (*(void (**)(uint64_t, char *, uint64_t))(v91 + 32))(v105 + v97, v94, v93);
  uint64_t v106 = v162;
  uint64_t v107 = v163;
  *(void *)(v105 + v98) = v163;
  (*(void (**)(uint64_t, char *, uint64_t))(v99 + 32))(v105 + v101, v151, v106);
  Swift::String v108 = (void *)(v105 + v102);
  uint64_t v109 = v159;
  *Swift::String v108 = v160;
  v108[1] = v109;
  uint64_t v110 = v154;
  uint64_t v111 = v156;
  (*(void (**)(uint64_t, char *, uint64_t))(v154 + 32))(v105 + v104, v150, v156);
  *(void *)&double v112 = swift_bridgeObjectRetain(v107).n128_u64[0];
  swift_bridgeObjectRetain(v109, v112);
  uint64_t v113 = v161;
  swift_retain(v161);
  uint64_t v114 = v93;
  uint64_t v115 = v144;
  uint64_t v116 = SFProgressTask.init(_:initialProgress:operation:file:line:)( v147,  v146,  v155,  &unk_100650F50,  v105,  0xD000000000000060LL,  0x800000010050C540LL,  129LL,  v93,  v93);
  uint64_t v117 = (uint64_t)v125;
  uint64_t v118 = v157;
  SFAirDropSend.Transfer.id.getter(v116);
  uint64_t v119 = sub_100183098((uint64_t *)&unk_1006463F0);
  uint64_t v120 = *(void *)(v119 - 8);
  uint64_t v121 = (uint64_t)v145;
  (*(void (**)(char *, uint64_t, uint64_t))(v120 + 16))(v145, v115, v119);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v120 + 56))(v121, 0LL, 1LL, v119);
  swift_beginAccess(v113 + 72, &v165, 33LL, 0LL);
  sub_1002E53D8(v121, v117);
  swift_endAccess(&v165);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v118, v114);
  return (*(uint64_t (**)(char *, uint64_t))(v110 + 8))(v153, v111);
}

uint64_t sub_100371E2C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[38] = a7;
  v8[39] = a8;
  v8[36] = a5;
  v8[37] = a6;
  v8[34] = a3;
  v8[35] = a4;
  v8[32] = a1;
  v8[33] = a2;
  uint64_t v9 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  v8[40] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100656490);
  v8[41] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  v8[42] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v8[43] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[44] = v13;
  v8[45] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v14 = (*(void *)(*(void *)(type metadata accessor for Date(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[46] = swift_task_alloc(v14);
  v8[47] = swift_task_alloc(v14);
  uint64_t v15 = sub_100183098((uint64_t *)&unk_10064DC20);
  v8[48] = swift_task_alloc((*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for UUID(0LL);
  v8[49] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v8[50] = v17;
  v8[51] = swift_task_alloc((*(void *)(v17 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v8[52] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v8[53] = v19;
  unint64_t v20 = (*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[54] = swift_task_alloc(v20);
  v8[55] = swift_task_alloc(v20);
  uint64_t v21 = type metadata accessor for Logger(0LL);
  v8[56] = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  v8[57] = v22;
  v8[58] = swift_task_alloc((*(void *)(v22 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100183098(&qword_100649F50);
  v8[59] = swift_task_alloc((*(void *)(*(void *)(v23 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  v8[60] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v8[61] = v25;
  unint64_t v26 = (*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[62] = swift_task_alloc(v26);
  v8[63] = swift_task_alloc(v26);
  uint64_t v27 = sub_100183098(&qword_100650F58);
  v8[64] = swift_task_alloc((*(void *)(*(void *)(v27 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for SFAirDropSend.Request(0LL);
  v8[65] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v8[66] = v29;
  unint64_t v30 = (*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v8[67] = swift_task_alloc(v30);
  v8[68] = swift_task_alloc(v30);
  v8[69] = swift_task_alloc(v30);
  v8[70] = swift_task_alloc(v30);
  v8[71] = swift_task_alloc(v30);
  v8[72] = swift_task_alloc(v30);
  v8[73] = swift_task_alloc(v30);
  v8[74] = swift_task_alloc(v30);
  v8[75] = swift_task_alloc(v30);
  uint64_t v31 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v8[76] = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  v8[77] = v32;
  v8[78] = swift_task_alloc((*(void *)(v32 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v33 = static AirDropActor.shared;
  v8[79] = static AirDropActor.shared;
  return swift_task_switch(sub_100372140, v33, 0LL);
}

uint64_t sub_100372140(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 624);
  uint64_t v3 = *(void *)(v1 + 616);
  uint64_t v4 = *(void *)(v1 + 608);
  uint64_t v5 = SFAirDropSend.Request.type.getter(a1);
  char v6 = SFAirDrop.TransferType.isOnlyExchange.getter(v5);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 640) = v7;
  uint64_t v8 = v7(v2, v4);
  if ((v6 & 1) != 0)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v1 + 528) + 16LL);
    goto LABEL_6;
  }

  uint64_t v10 = *(void *)(v1 + 600);
  uint64_t v11 = *(void *)(v1 + 528);
  uint64_t v12 = *(void *)(v1 + 520);
  uint64_t v13 = *(void *)(v1 + 296);
  unint64_t v14 = (const char *)SFAirDropSend.Request.urls.getter(v8);
  __n128 v15 = swift_bridgeObjectRelease(v14);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 16);
  uint64_t v16 = v9(v10, v13, v12, v15);
  uint64_t v17 = *(void *)(v1 + 600);
  if (v14)
  {
    uint64_t v18 = *(void *)(v1 + 584);
    uint64_t v19 = *(void *)(v1 + 520);
    uint64_t v20 = *(void *)(v1 + 296);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(*(void *)(v1 + 528) + 8LL);
    v21(*(void *)(v1 + 600), v19);
    ((void (*)(uint64_t, uint64_t, uint64_t))v9)(v18, v20, v19);
LABEL_5:
    v21(*(void *)(v1 + 584), *(void *)(v1 + 520));
    goto LABEL_6;
  }

  uint64_t v75 = *(void *)(v1 + 592);
  uint64_t v76 = *(void *)(v1 + 520);
  uint64_t v77 = *(void *)(v1 + 512);
  SFAirDropSend.Request.urlsPromise.getter(v16);
  uint64_t v78 = sub_100183098(&qword_100650F60);
  int v79 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48LL))(v77, 1LL, v78);
  sub_100187100(v77, &qword_100650F58);
  uint64_t v80 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v75, v17, v76);
  uint64_t v81 = *(void *)(v1 + 600);
  uint64_t v82 = *(void *)(v1 + 592);
  uint64_t v83 = *(void *)(v1 + 584);
  uint64_t v84 = *(void *)(v1 + 528);
  uint64_t v85 = *(void *)(v1 + 520);
  uint64_t v86 = *(void *)(v1 + 296);
  if (v79 == 1)
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v21(*(void *)(v1 + 592), *(void *)(v1 + 520));
    v21(v81, v85);
    uint64_t v87 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v83, v86, v85);
  }

  else
  {
    unint64_t v88 = (const char *)SFAirDropSend.Request.urlsMetadata.getter(v80);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v21(v82, v85);
    v21(v81, v85);
    __n128 v89 = swift_bridgeObjectRelease(v88);
    uint64_t v87 = v9(v83, v86, v85, v89);
    if (v88) {
      goto LABEL_5;
    }
  }

  uint64_t v90 = *(void *)(v1 + 584);
  uint64_t v91 = *(void *)(v1 + 520);
  uint64_t v92 = SFAirDropSend.Request.customPayload.getter(v87);
  unint64_t v94 = v93;
  v21(v90, v91);
  sub_100189B0C(v92, v94);
  if (v94 >> 60 != 15)
  {
LABEL_6:
    *(void *)(v1 + 648) = v9;
    uint64_t v194 = (uint64_t *)(v1 + 248);
    uint64_t v184 = *(void *)(v1 + 576);
    uint64_t v22 = (void (*)(void))v9;
    uint64_t v23 = *(void *)(v1 + 504);
    uint64_t v175 = v23;
    uint64_t v24 = *(void *)(v1 + 480);
    uint64_t v25 = *(void *)(v1 + 488);
    uint64_t v26 = *(void *)(v1 + 464);
    uint64_t v27 = *(void *)(v1 + 472);
    uint64_t v164 = v26;
    uint64_t v28 = *(void *)(v1 + 456);
    uint64_t v160 = *(void *)(v1 + 448);
    uint64_t v29 = *(void *)(v1 + 304);
    uint64_t v190 = *(void *)(v1 + 312);
    uint64_t v30 = *(void *)(v1 + 288);
    uint64_t v31 = *(void **)(v1 + 280);
    uint64_t v170 = *(void *)(v1 + 272);
    uint64_t v179 = *(void *)(v1 + 264);
    uint64_t v157 = v22;
    v22();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, v30, v24);
    uint64_t v32 = type metadata accessor for SFAirDrop.ContactInfo(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))(v27, 1LL, 1LL, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v26, v29, v160);
    uint64_t v33 = v31[7];
    uint64_t v161 = v31[8];
    uint64_t v34 = v31[5];
    uint64_t v35 = (void *)v31[6];
    uint64_t v37 = (void *)v31[2];
    unint64_t v36 = (void *)v31[3];
    uint64_t v38 = (void *)v31[4];
    *(void *)(v1 + 656) = v38;
    id v39 = objc_allocWithZone((Class)_s6RunnerCMa(0LL));
    swift_unknownObjectRetain(v33);
    id v40 = v36;
    swift_retain(v34);
    uint64_t v41 = v35;
    id v42 = v37;
    id v43 = v38;
    swift_retain(v170);
    id v44 = sub_10025E764(&_swiftEmptySetSingleton, v184, v175, v27, v164, v33, v161, v40, v34, v41, v179, v170, v42, v43);
    *(void *)(v1 + 664) = v44;

    uint64_t v45 = v1 + 56;
    swift_release(v170);

    swift_release(v34);
    swift_unknownObjectRelease(v33);
    sub_100374F60(v190, v1 + 56);
    if (*(void *)(v1 + 80))
    {
      uint64_t v46 = sub_100183098((uint64_t *)&unk_10064DA90);
      uint64_t v47 = type metadata accessor for SDAirDropDiscoveredPerson(0LL);
      if ((swift_dynamicCast(v1 + 184, v45, v46, v47, 6LL) & 1) != 0)
      {
        uint64_t v48 = *(void *)(v1 + 184);
        uint64_t v49 = v48 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredPerson_connectableUUID;
        id v50 = v44;
        sub_100374774((uint64_t)v50, v49, (uint64_t)v43);

        swift_release(v48);
        uint64_t v51 = ((uint64_t (*)(void, void, void))v157)( *(void *)(v1 + 568),  *(void *)(v1 + 296),  *(void *)(v1 + 520));
LABEL_15:
        uint64_t v57 = (os_log_s *)Logger.logObject.getter(v51);
        os_log_type_t v58 = static os_log_type_t.default.getter();
        BOOL v59 = os_log_type_enabled(v57, v58);
        uint64_t v60 = *(void *)(v1 + 568);
        uint64_t v61 = *(void *)(v1 + 528);
        uint64_t v62 = *(void *)(v1 + 520);
        if (v59)
        {
          uint64_t v63 = *(void *)(v1 + 440);
          uint64_t v176 = *(void *)(v1 + 424);
          uint64_t v180 = *(void *)(v1 + 416);
          uint64_t v187 = *(void *)(v1 + 528);
          uint64_t v64 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v65 = swift_slowAlloc(32LL, -1LL);
          v197[0] = v65;
          *(_DWORD *)uint64_t v64 = 136315138;
          uint64_t v66 = SFAirDropSend.Request.id.getter(v65);
          uint64_t v67 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v66);
          uint64_t v171 = v62;
          uint64_t v69 = v68;
          (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v63, v180);
          *(void *)(v1 + 240) = sub_10018CDB4(v67, (unint64_t)v69, v197);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 240, v194, v64 + 4, v64 + 12);
          __n128 v70 = swift_bridgeObjectRelease(v69);
          uint64_t v71 = *(void (**)(uint64_t, uint64_t, __n128))(v187 + 8);
          v71(v60, v171, v70);
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s Starting to resolve endpoints", v64, 0xCu);
          swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v65, -1LL, -1LL);
          swift_slowDealloc(v64, -1LL, -1LL);
        }

        else
        {

          uint64_t v71 = *(void (**)(uint64_t, uint64_t, __n128))(v61 + 8);
          uint64_t v72 = ((uint64_t (*)(uint64_t, uint64_t))v71)(v60, v62);
        }

        *(void *)(v1 + 672) = v71;
        SFAirDropSend.Request.endpointID.getter(v72);
        unint64_t v73 = (void *)swift_task_alloc(dword_10064DC34);
        *(void *)(v1 + 680) = v73;
        void *v73 = v1;
        v73[1] = sub_100372DE0;
        return sub_1002F3560(*(void *)(v1 + 408));
      }
    }

    else
    {
      sub_100187100(v45, &qword_10064DBB0);
    }

    sub_100374F60(*(void *)(v1 + 312), v1 + 16);
    if (*(void *)(v1 + 40))
    {
      uint64_t v52 = sub_100183098((uint64_t *)&unk_10064DA90);
      uint64_t v53 = type metadata accessor for SDAirDropDiscoveredDevice(0LL);
      if ((swift_dynamicCast(v194, v1 + 16, v52, v53, 6LL) & 1) != 0)
      {
        uint64_t v54 = *v194;
        uint64_t v55 = *v194 + OBJC_IVAR____TtC16DaemoniOSLibrary25SDAirDropDiscoveredDevice_connectableUUID;
        id v56 = v44;
        sub_100374774((uint64_t)v56, v55, (uint64_t)v43);

        swift_release(v54);
      }
    }

    else
    {
      sub_100187100(v1 + 16, &qword_10064DBB0);
    }

    uint64_t v51 = ((uint64_t (*)(void, void, void))v157)( *(void *)(v1 + 568),  *(void *)(v1 + 296),  *(void *)(v1 + 520));
    goto LABEL_15;
  }

  uint64_t v95 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v96 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v97 = swift_allocError(v95, v96, 0LL, 0LL);
  uint64_t v99 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v95 - 8) + 104LL))( v98,  enum case for SFAirDropSend.Failure.badRequest(_:),  v95);
  swift_willThrow(v99);
  ((void (*)(void, void, void))v9)(*(void *)(v1 + 536), *(void *)(v1 + 296), *(void *)(v1 + 520));
  swift_errorRetain(v97);
  uint64_t v100 = swift_errorRetain(v97);
  uint64_t v101 = (os_log_s *)Logger.logObject.getter(v100);
  os_log_type_t v102 = static os_log_type_t.default.getter();
  BOOL v103 = os_log_type_enabled(v101, v102);
  uint64_t v104 = *(void *)(v1 + 536);
  uint64_t v105 = *(void *)(v1 + 520);
  if (v103)
  {
    uint64_t v106 = *(void *)(v1 + 440);
    uint64_t v167 = *(void *)(v1 + 424);
    uint64_t v172 = *(void *)(v1 + 416);
    os_log_type_t v191 = v102;
    uint64_t v107 = swift_slowAlloc(22LL, -1LL);
    uint64_t v185 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v195 = swift_slowAlloc(32LL, -1LL);
    v197[0] = v195;
    *(_DWORD *)uint64_t v107 = 136315394;
    uint64_t v181 = v101;
    uint64_t v108 = SFAirDropSend.Request.id.getter(v195);
    uint64_t v109 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v108);
    uint64_t v111 = v110;
    (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v106, v172);
    *(void *)(v1 + 192) = sub_10018CDB4(v109, (unint64_t)v111, v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 192, v1 + 200, v107 + 4, v107 + 12);
    __n128 v112 = swift_bridgeObjectRelease(v111);
    ((void (*)(uint64_t, uint64_t, __n128))v21)(v104, v105, v112);
    *(_WORD *)(v107 + 12) = 2112;
    swift_errorRetain(v97);
    uint64_t v113 = _swift_stdlib_bridgeErrorToNSError(v97);
    *(void *)(v1 + 144) = v113;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v107 + 14, v107 + 22);
    uint64_t *v185 = v113;
    swift_errorRelease(v97);
    swift_errorRelease(v97);
    _os_log_impl( (void *)&_mh_execute_header,  v181,  v191,  "Send StateMachine FAILED %s {error: %@}",  (uint8_t *)v107,  0x16u);
    uint64_t v114 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v185, 1LL, v114);
    swift_slowDealloc(v185, -1LL, -1LL);
    swift_arrayDestroy(v195, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v195, -1LL, -1LL);
    swift_slowDealloc(v107, -1LL, -1LL);
  }

  else
  {

    v21(v104, v105);
    swift_errorRelease(v97);
    uint64_t v115 = swift_errorRelease(v97);
  }

  uint64_t v149 = v97;
  uint64_t v116 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 640);
  uint64_t v117 = *(void *)(v1 + 624);
  uint64_t v118 = *(void *)(v1 + 608);
  uint64_t v168 = *(void *)(v1 + 576);
  uint64_t v173 = *(void *)(v1 + 440);
  uint64_t v148 = *(void *)(v1 + 432);
  uint64_t v192 = *(void *)(v1 + 384);
  uint64_t v119 = *(void *)(v1 + 368);
  uint64_t v147 = *(void *)(v1 + 360);
  uint64_t v151 = *(void *)(v1 + 352);
  uint64_t v153 = *(void *)(v1 + 344);
  uint64_t v155 = *(void *)(v1 + 336);
  uint64_t v158 = *(void *)(v1 + 376);
  uint64_t v177 = *(void *)(v1 + 328);
  uint64_t v188 = *(void *)(v1 + 280);
  uint64_t v182 = *(void *)(v1 + 320);
  uint64_t v120 = SFAirDropSend.Request.type.getter(v115);
  SFAirDrop.TransferType.isOnlyExchange.getter(v120);
  uint64_t v121 = v116(v117, v118);
  uint64_t v122 = SFAirDropSend.Transfer.id.getter(v121);
  uint64_t v123 = SFAirDropSend.Transfer.sendRequest.getter(v122);
  uint64_t v124 = SFAirDropSend.Transfer.receiverName.getter(v123);
  uint64_t v162 = v125;
  uint64_t v165 = v124;
  SFAirDropSend.Transfer.startDate.getter(v124);
  uint64_t v126 = sub_100183098(&qword_100648568);
  uint64_t v127 = SFAirDropSend.Transfer.id.getter(v126);
  SFAirDropSend.Transfer.startDate.getter(v127);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v148, v119);
  swift_errorRetain(v149);
  SFAirDropSend.Failure.init(_:)(v149);
  uint64_t v128 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v151 + 104))( v147,  enum case for SFAirDropSend.Transfer.State.transferFailed(_:),  v153);
  uint64_t v129 = SFAirDropSend.Transfer.displayPriority.getter(v128);
  uint64_t v130 = SFAirDropSend.Transfer.bundleIdentifier.getter(v129);
  uint64_t v132 = v131;
  uint64_t v133 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56LL))( v177,  1LL,  1LL,  v133);
  v135.n128_f64[0] = SFAirDropSend.Transfer.presenter.getter(v134);
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)( v173,  v168,  v165,  v162,  v158,  v147,  v155,  v130,  v135,  v132,  v177,  v182);
  uint64_t v136 = swift_errorRelease(v149);
  SFAirDropSend.Transfer.id.getter(v136);
  uint64_t v137 = sub_100183098((uint64_t *)&unk_1006463F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56LL))(v192, 1LL, 1LL, v137);
  swift_beginAccess(v188 + 72, v1 + 96, 33LL, 0LL);
  sub_1002E53D8(v192, v173);
  swift_endAccess(v1 + 96);
  uint64_t v138 = *(void *)(v1 + 600);
  uint64_t v139 = *(void *)(v1 + 592);
  uint64_t v140 = *(void *)(v1 + 584);
  uint64_t v141 = *(void *)(v1 + 576);
  uint64_t v142 = *(void *)(v1 + 568);
  uint64_t v143 = *(void *)(v1 + 560);
  uint64_t v144 = *(void *)(v1 + 552);
  uint64_t v145 = *(void *)(v1 + 544);
  uint64_t v146 = *(void *)(v1 + 536);
  uint64_t v150 = *(void *)(v1 + 512);
  uint64_t v152 = *(void *)(v1 + 504);
  uint64_t v154 = *(void *)(v1 + 496);
  uint64_t v156 = *(void *)(v1 + 472);
  uint64_t v159 = *(void *)(v1 + 464);
  uint64_t v163 = *(void *)(v1 + 440);
  uint64_t v166 = *(void *)(v1 + 432);
  uint64_t v169 = *(void *)(v1 + 408);
  uint64_t v174 = *(void *)(v1 + 384);
  uint64_t v178 = *(void *)(v1 + 376);
  uint64_t v183 = *(void *)(v1 + 368);
  uint64_t v186 = *(void *)(v1 + 360);
  uint64_t v189 = *(void *)(v1 + 336);
  uint64_t v193 = *(void *)(v1 + 328);
  uint64_t v196 = *(void *)(v1 + 320);
  swift_task_dealloc(*(void *)(v1 + 624));
  swift_task_dealloc(v138);
  swift_task_dealloc(v139);
  swift_task_dealloc(v140);
  swift_task_dealloc(v141);
  swift_task_dealloc(v142);
  swift_task_dealloc(v143);
  swift_task_dealloc(v144);
  swift_task_dealloc(v145);
  swift_task_dealloc(v146);
  swift_task_dealloc(v150);
  swift_task_dealloc(v152);
  swift_task_dealloc(v154);
  swift_task_dealloc(v156);
  swift_task_dealloc(v159);
  swift_task_dealloc(v163);
  swift_task_dealloc(v166);
  swift_task_dealloc(v169);
  swift_task_dealloc(v174);
  swift_task_dealloc(v178);
  swift_task_dealloc(v183);
  swift_task_dealloc(v186);
  swift_task_dealloc(v189);
  swift_task_dealloc(v193);
  swift_task_dealloc(v196);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100372DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 680);
  uint64_t v5 = *(void *)(*v2 + 632);
  uint64_t v7 = *(void *)(*v2 + 400);
  uint64_t v6 = *(void *)(*v2 + 408);
  uint64_t v8 = *(void *)(*v2 + 392);
  *(void *)(v3 + 688) = a1;
  *(void *)(v3 + 696) = a2;
  swift_task_dealloc(v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  return swift_task_switch(sub_100372E64, v5, 0LL);
}

uint64_t sub_100372E64()
{
  sub_1002767E4( *(void *)(v0 + 296),  *(void *)(v0 + 688),  *(void *)(*(void *)(v0 + 656) + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_bonjourBrowser) != 0LL);
  char v1 = static Task<>.isCancelled.getter();
  uint64_t v2 = *(const char **)(v0 + 696);
  uint64_t v3 = *(void *)(v0 + 688);
  if ((v1 & 1) != 0)
  {
    *(void *)&double v4 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 688)).n128_u64[0];
    swift_bridgeObjectRelease(v2, v4);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Transfer cancelled at resolve step", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void **)(v0 + 664);

    uint64_t v10 = type metadata accessor for CancellationError(0LL);
    uint64_t v11 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
    uint64_t v12 = swift_allocError(v10, v11, 0LL, 0LL);
    uint64_t v13 = CancellationError.init()();
  }

  else
  {
    (*(void (**)(void, void, void))(v0 + 648))( *(void *)(v0 + 560),  *(void *)(v0 + 296),  *(void *)(v0 + 520));
    swift_bridgeObjectRetain_n(v3, 2LL);
    swift_bridgeObjectRetain_n(v2, 2LL);
    __n128 v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.default.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = *(void *)(v0 + 696);
    uint64_t v19 = *(const char **)(v0 + 688);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 672);
    uint64_t v21 = *(void *)(v0 + 560);
    uint64_t v22 = *(void *)(v0 + 520);
    if (v17)
    {
      uint64_t v174 = *(void *)(v0 + 696);
      uint64_t v23 = *(void *)(v0 + 440);
      uint64_t v150 = *(void *)(v0 + 424);
      uint64_t v155 = *(void *)(v0 + 416);
      os_log_type_t v170 = v16;
      uint64_t v24 = swift_slowAlloc(22LL, -1LL);
      uint64_t v165 = swift_slowAlloc(64LL, -1LL);
      v180[0] = v165;
      *(_DWORD *)uint64_t v24 = 136315394;
      os_log_t log = v15;
      uint64_t v25 = SFAirDropSend.Request.id.getter(v165);
      uint64_t v26 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v25);
      uint64_t v28 = v27;
      (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v23, v155);
      *(void *)(v0 + 224) = sub_10018CDB4(v26, (unint64_t)v28, v180);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v24 + 4, v24 + 12);
      __n128 v29 = swift_bridgeObjectRelease(v28);
      v20(v21, v22, v29);
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v30 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      uint64_t v31 = sub_100183F14( &qword_1006453A0,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF398);
      swift_bridgeObjectRetain(v19);
      uint64_t v33 = Set.description.getter(v32, v30, v31);
      uint64_t v35 = v34;
      swift_bridgeObjectRelease(v19);
      *(void *)(v0 + 232) = sub_10018CDB4(v33, (unint64_t)v35, v180);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 232, v0 + 240, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease(v35);
      swift_bridgeObjectRelease_n(v19, 2LL);
      swift_bridgeObjectRelease_n(v174, 2LL);
      _os_log_impl((void *)&_mh_execute_header, log, v170, "%s Resolved endpoints to %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v165, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v165, -1LL, -1LL);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    else
    {

      ((void (*)(uint64_t, uint64_t))v20)(v21, v22);
      swift_bridgeObjectRelease_n(v19, 2LL);
      swift_bridgeObjectRelease_n(v18, 2LL);
    }

    uint64_t v36 = *(void *)(v0 + 696);
    uint64_t v37 = *(void *)(v0 + 688);
    (*(void (**)(void, void, void))(v0 + 648))( *(void *)(v0 + 552),  *(void *)(v0 + 296),  *(void *)(v0 + 520));
    swift_bridgeObjectRetain_n(v37, 2LL);
    swift_bridgeObjectRetain_n(v36, 2LL);
    id v39 = (os_log_s *)Logger.logObject.getter(v38);
    os_log_type_t v40 = static os_log_type_t.default.getter();
    BOOL v41 = os_log_type_enabled(v39, v40);
    id v42 = *(const char **)(v0 + 696);
    uint64_t v43 = *(void *)(v0 + 688);
    id v44 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 672);
    uint64_t v45 = *(void *)(v0 + 552);
    uint64_t v46 = *(void *)(v0 + 520);
    if (v41)
    {
      uint64_t v171 = *(void *)(v0 + 688);
      uint64_t v47 = *(void *)(v0 + 440);
      uint64_t v146 = *(void *)(v0 + 424);
      uint64_t v151 = *(void *)(v0 + 416);
      uint64_t v48 = swift_slowAlloc(22LL, -1LL);
      uint64_t v175 = swift_slowAlloc(64LL, -1LL);
      v180[0] = v175;
      *(_DWORD *)uint64_t v48 = 136315394;
      os_log_type_t v166 = v40;
      os_log_t loga = v39;
      uint64_t v49 = SFAirDropSend.Request.id.getter(v175);
      uint64_t v50 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v49);
      uint64_t v52 = v51;
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v47, v151);
      *(void *)(v0 + 208) = sub_10018CDB4(v50, (unint64_t)v52, v180);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v48 + 4, v48 + 12);
      __n128 v53 = swift_bridgeObjectRelease(v52);
      v44(v45, v46, v53);
      *(_WORD *)(v48 + 12) = 2080;
      uint64_t v54 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
      uint64_t v55 = sub_100183F14( &qword_1006453A0,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF398);
      swift_bridgeObjectRetain(v42);
      uint64_t v57 = Set.description.getter(v56, v54, v55);
      BOOL v59 = v58;
      swift_bridgeObjectRelease(v42);
      *(void *)(v0 + 2swift_weakDestroy(v0 + 16) = sub_10018CDB4(v57, (unint64_t)v59, v180);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v48 + 14, v48 + 22);
      swift_bridgeObjectRelease(v59);
      swift_bridgeObjectRelease_n(v171, 2LL);
      swift_bridgeObjectRelease_n(v42, 2LL);
      _os_log_impl((void *)&_mh_execute_header, loga, v166, "%s Resolved backup endpoints to %s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy(v175, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v175, -1LL, -1LL);
      swift_slowDealloc(v48, -1LL, -1LL);
    }

    else
    {

      ((void (*)(uint64_t, uint64_t))v44)(v45, v46);
      swift_bridgeObjectRelease_n(v43, 2LL);
      swift_bridgeObjectRelease_n(v42, 2LL);
    }

    uint64_t v60 = *(void *)(v0 + 688);
    if (*(void *)(v60 + 16))
    {
      uint64_t v61 = *(const char **)(v0 + 696);
      uint64_t v62 = *(void *)(v0 + 664);
      uint64_t v63 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints;
      uint64_t v64 = *(void *)(v62 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_endpoints);
      uint64_t v65 = swift_retain(v64);
      CurrentValueSubject.value.getter(v65);
      swift_release(v64);
      uint64_t v66 = *(void *)(v62 + v63);
      uint64_t v67 = *(void *)(v0 + 152);
      swift_bridgeObjectRetain((const char *)v60);
      swift_retain(v66);
      uint64_t v68 = (const char *)sub_100456F0C(v60, v67);
      *(void *)(v0 + 160) = v68;
      CurrentValueSubject.send(_:)(v0 + 160);
      swift_release(v66);
      swift_bridgeObjectRelease(v68);
      uint64_t v69 = OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints;
      uint64_t v70 = *(void *)(v62 + OBJC_IVAR____TtCC16DaemoniOSLibrary25SDAirDropSendStateMachine10BaseRunner_backupEndpoints);
      uint64_t v71 = swift_retain(v70);
      CurrentValueSubject.value.getter(v71);
      swift_release(v70);
      uint64_t v72 = *(void *)(v62 + v69);
      uint64_t v73 = *(void *)(v0 + 168);
      swift_bridgeObjectRetain(v61);
      swift_retain(v72);
      uint64_t v74 = (const char *)sub_100456F0C((uint64_t)v61, v73);
      *(void *)(v0 + 176) = v74;
      CurrentValueSubject.send(_:)(v0 + 176);
      swift_release(v72);
      *(void *)&double v75 = swift_bridgeObjectRelease(v74).n128_u64[0];
      *(void *)&double v76 = swift_bridgeObjectRelease((const char *)v60, v75).n128_u64[0];
      swift_bridgeObjectRelease(v61, v76);
      uint64_t v77 = (void *)swift_task_alloc(dword_100649F6C);
      *(void *)(v0 + 704) = v77;
      void *v77 = v0;
      v77[1] = sub_100373BD4;
      return sub_10024ABBC(*(void *)(v0 + 496));
    }

    int v79 = *(const char **)(v0 + 696);
    uint64_t v9 = *(void **)(v0 + 664);
    *(void *)&double v80 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 688)).n128_u64[0];
    swift_bridgeObjectRelease(v79, v80);
    uint64_t v81 = type metadata accessor for SFAirDropSend.Failure(0LL);
    uint64_t v82 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
    uint64_t v12 = swift_allocError(v81, v82, 0LL, 0LL);
    *uint64_t v83 = 0;
    uint64_t v13 = (*(uint64_t (**)(_BYTE *, void, uint64_t))(*(void *)(v81 - 8) + 104LL))( v83,  enum case for SFAirDropSend.Failure.resolveFailure(_:),  v81);
  }

  swift_willThrow(v13);

  uint64_t v84 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 672);
  (*(void (**)(void, void, void))(v0 + 648))( *(void *)(v0 + 536),  *(void *)(v0 + 296),  *(void *)(v0 + 520));
  swift_errorRetain(v12);
  uint64_t v85 = swift_errorRetain(v12);
  uint64_t v86 = (os_log_s *)Logger.logObject.getter(v85);
  os_log_type_t v87 = static os_log_type_t.default.getter();
  BOOL v88 = os_log_type_enabled(v86, v87);
  uint64_t v89 = *(void *)(v0 + 536);
  uint64_t v90 = *(void *)(v0 + 520);
  uint64_t v178 = v12;
  if (v88)
  {
    uint64_t v91 = *(void *)(v0 + 440);
    uint64_t v147 = *(void *)(v0 + 424);
    uint64_t v152 = *(void *)(v0 + 416);
    uint64_t v158 = v84;
    uint64_t v92 = swift_slowAlloc(22LL, -1LL);
    uint64_t v167 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v176 = swift_slowAlloc(32LL, -1LL);
    v180[0] = v176;
    *(_DWORD *)uint64_t v92 = 136315394;
    os_log_type_t logb = v87;
    uint64_t v93 = SFAirDropSend.Request.id.getter(v176);
    uint64_t v94 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v93);
    uint64_t v96 = v95;
    (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v91, v152);
    *(void *)(v0 + 192) = sub_10018CDB4(v94, (unint64_t)v96, v180);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v92 + 4, v92 + 12);
    __n128 v97 = swift_bridgeObjectRelease(v96);
    v158(v89, v90, v97);
    *(_WORD *)(v92 + 12) = 2112;
    swift_errorRetain(v12);
    uint64_t v98 = _swift_stdlib_bridgeErrorToNSError(v12);
    *(void *)(v0 + 144) = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v92 + 14, v92 + 22);
    *uint64_t v167 = v98;
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl( (void *)&_mh_execute_header,  v86,  logb,  "Send StateMachine FAILED %s {error: %@}",  (uint8_t *)v92,  0x16u);
    uint64_t v99 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v167, 1LL, v99);
    swift_slowDealloc(v167, -1LL, -1LL);
    swift_arrayDestroy(v176, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v176, -1LL, -1LL);
    swift_slowDealloc(v92, -1LL, -1LL);
  }

  else
  {

    ((void (*)(uint64_t, uint64_t))v84)(v89, v90);
    swift_errorRelease(v12);
    uint64_t v100 = swift_errorRelease(v12);
  }

  uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 640);
  uint64_t v102 = *(void *)(v0 + 624);
  uint64_t v103 = *(void *)(v0 + 608);
  uint64_t v148 = *(void *)(v0 + 576);
  uint64_t v153 = *(void *)(v0 + 440);
  uint64_t v133 = *(void *)(v0 + 432);
  uint64_t v172 = *(void *)(v0 + 384);
  uint64_t v104 = *(void *)(v0 + 368);
  uint64_t v132 = *(void *)(v0 + 360);
  uint64_t v134 = *(void *)(v0 + 352);
  uint64_t v136 = *(void *)(v0 + 344);
  uint64_t v138 = *(void *)(v0 + 336);
  uint64_t v140 = *(void *)(v0 + 376);
  uint64_t v156 = *(void *)(v0 + 328);
  uint64_t v159 = *(void *)(v0 + 320);
  uint64_t v168 = *(void *)(v0 + 280);
  uint64_t v105 = SFAirDropSend.Request.type.getter(v100);
  SFAirDrop.TransferType.isOnlyExchange.getter(v105);
  uint64_t v106 = v101(v102, v103);
  uint64_t v107 = SFAirDropSend.Transfer.id.getter(v106);
  uint64_t v108 = SFAirDropSend.Transfer.sendRequest.getter(v107);
  uint64_t v109 = SFAirDropSend.Transfer.receiverName.getter(v108);
  uint64_t v142 = v110;
  uint64_t v144 = v109;
  SFAirDropSend.Transfer.startDate.getter(v109);
  uint64_t v111 = sub_100183098(&qword_100648568);
  uint64_t v112 = SFAirDropSend.Transfer.id.getter(v111);
  SFAirDropSend.Transfer.startDate.getter(v112);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v133, v104);
  swift_errorRetain(v178);
  SFAirDropSend.Failure.init(_:)(v178);
  uint64_t v113 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v134 + 104))( v132,  enum case for SFAirDropSend.Transfer.State.transferFailed(_:),  v136);
  uint64_t v114 = SFAirDropSend.Transfer.displayPriority.getter(v113);
  uint64_t v115 = SFAirDropSend.Transfer.bundleIdentifier.getter(v114);
  uint64_t v117 = v116;
  uint64_t v118 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v119 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56LL))( v156,  1LL,  1LL,  v118);
  v120.n128_f64[0] = SFAirDropSend.Transfer.presenter.getter(v119);
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)( v153,  v148,  v144,  v142,  v140,  v132,  v138,  v115,  v120,  v117,  v156,  v159);
  uint64_t v121 = swift_errorRelease(v178);
  SFAirDropSend.Transfer.id.getter(v121);
  uint64_t v122 = sub_100183098((uint64_t *)&unk_1006463F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56LL))(v172, 1LL, 1LL, v122);
  swift_beginAccess(v168 + 72, v0 + 96, 33LL, 0LL);
  sub_1002E53D8(v172, v153);
  swift_endAccess(v0 + 96);
  uint64_t v123 = *(void *)(v0 + 600);
  uint64_t v124 = *(void *)(v0 + 592);
  uint64_t v125 = *(void *)(v0 + 584);
  uint64_t v126 = *(void *)(v0 + 576);
  uint64_t v127 = *(void *)(v0 + 568);
  uint64_t v128 = *(void *)(v0 + 560);
  uint64_t v129 = *(void *)(v0 + 552);
  uint64_t v130 = *(void *)(v0 + 544);
  uint64_t v131 = *(void *)(v0 + 536);
  uint64_t v135 = *(void *)(v0 + 512);
  uint64_t v137 = *(void *)(v0 + 504);
  uint64_t v139 = *(void *)(v0 + 496);
  uint64_t v141 = *(void *)(v0 + 472);
  uint64_t v143 = *(void *)(v0 + 464);
  uint64_t v145 = *(void *)(v0 + 440);
  uint64_t v149 = *(void *)(v0 + 432);
  uint64_t v154 = *(void *)(v0 + 408);
  uint64_t v157 = *(void *)(v0 + 384);
  uint64_t v160 = *(void *)(v0 + 376);
  os_log_t logc = *(os_log_t *)(v0 + 368);
  uint64_t v169 = *(void *)(v0 + 360);
  uint64_t v173 = *(void *)(v0 + 336);
  uint64_t v177 = *(void *)(v0 + 328);
  uint64_t v179 = *(void *)(v0 + 320);
  swift_task_dealloc(*(void *)(v0 + 624));
  swift_task_dealloc(v123);
  swift_task_dealloc(v124);
  swift_task_dealloc(v125);
  swift_task_dealloc(v126);
  swift_task_dealloc(v127);
  swift_task_dealloc(v128);
  swift_task_dealloc(v129);
  swift_task_dealloc(v130);
  swift_task_dealloc(v131);
  swift_task_dealloc(v135);
  swift_task_dealloc(v137);
  swift_task_dealloc(v139);
  swift_task_dealloc(v141);
  swift_task_dealloc(v143);
  swift_task_dealloc(v145);
  swift_task_dealloc(v149);
  swift_task_dealloc(v154);
  swift_task_dealloc(v157);
  swift_task_dealloc(v160);
  swift_task_dealloc(logc);
  swift_task_dealloc(v169);
  swift_task_dealloc(v173);
  swift_task_dealloc(v177);
  swift_task_dealloc(v179);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100373BD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 632LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 704LL));
  return swift_task_switch(sub_100373C2C, v1, 0LL);
}

uint64_t sub_100373C2C()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0 + 648))( *(void *)(v0 + 544),  *(void *)(v0 + 296),  *(void *)(v0 + 520));
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, __n128))(v0 + 672);
    uint64_t v47 = *(void *)(v0 + 544);
    uint64_t v51 = *(void *)(v0 + 520);
    uint64_t v4 = *(void *)(v0 + 440);
    uint64_t v45 = *(void *)(v0 + 424);
    uint64_t v49 = *(void *)(v0 + 416);
    uint64_t v5 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v6 = swift_slowAlloc(32LL, -1LL);
    uint64_t v56 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = SFAirDropSend.Request.id.getter(v6);
    uint64_t v8 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v7);
    uint64_t v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v4, v49);
    *(void *)(v0 + 200) = sub_10018CDB4(v8, (unint64_t)v10, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v5 + 4, v5 + 12);
    __n128 v11 = swift_bridgeObjectRelease(v10);
    v54(v47, v51, v11);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Send StateMachine END %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1LL, -1LL);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
    uint64_t v13 = *(void *)(v0 + 544);
    uint64_t v14 = *(void *)(v0 + 520);

    v12(v13, v14);
  }

  __n128 v15 = *(void **)(v0 + 664);
  uint64_t v16 = *(void *)(v0 + 488);
  uint64_t v17 = *(void *)(v0 + 496);
  uint64_t v18 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 440);
  uint64_t v20 = *(void *)(v0 + 384);
  uint64_t v52 = *(void *)(v0 + 280);
  uint64_t v21 = *(void *)(v0 + 256);
  *(_BYTE *)(v0 + 712) = 1;
  uint64_t v22 = CurrentValueSubject.send(completion:)(v0 + 712);
  sub_100218B40(v22);

  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v21, v17, v18);
  SFAirDropSend.Transfer.id.getter(v23);
  uint64_t v24 = sub_100183098((uint64_t *)&unk_1006463F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v20, 1LL, 1LL, v24);
  swift_beginAccess(v52 + 72, v0 + 120, 33LL, 0LL);
  sub_1002E53D8(v20, v19);
  swift_endAccess(v0 + 120);
  uint64_t v25 = *(void *)(v0 + 600);
  uint64_t v26 = *(void *)(v0 + 592);
  uint64_t v27 = *(void *)(v0 + 584);
  uint64_t v28 = *(void *)(v0 + 576);
  uint64_t v29 = *(void *)(v0 + 568);
  uint64_t v30 = *(void *)(v0 + 560);
  uint64_t v31 = *(void *)(v0 + 552);
  uint64_t v32 = *(void *)(v0 + 544);
  uint64_t v33 = *(void *)(v0 + 536);
  uint64_t v35 = *(void *)(v0 + 512);
  uint64_t v36 = *(void *)(v0 + 504);
  uint64_t v37 = *(void *)(v0 + 496);
  uint64_t v38 = *(void *)(v0 + 472);
  uint64_t v39 = *(void *)(v0 + 464);
  uint64_t v40 = *(void *)(v0 + 440);
  uint64_t v41 = *(void *)(v0 + 432);
  uint64_t v42 = *(void *)(v0 + 408);
  uint64_t v43 = *(void *)(v0 + 384);
  uint64_t v44 = *(void *)(v0 + 376);
  uint64_t v46 = *(void *)(v0 + 368);
  uint64_t v48 = *(void *)(v0 + 360);
  uint64_t v50 = *(void *)(v0 + 336);
  uint64_t v53 = *(void *)(v0 + 328);
  uint64_t v55 = *(void *)(v0 + 320);
  swift_task_dealloc(*(void *)(v0 + 624));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v39);
  swift_task_dealloc(v40);
  swift_task_dealloc(v41);
  swift_task_dealloc(v42);
  swift_task_dealloc(v43);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100374010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void v7[10] = a7;
  v7[11] = v22;
  v7[8] = a4;
  v7[9] = a5;
  v7[7] = a1;
  uint64_t v8 = sub_100183098((uint64_t *)&unk_10064DC20);
  v7[12] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  v7[13] = swift_task_alloc((*(void *)(*(void *)(v9 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_100656490);
  v7[14] = swift_task_alloc((*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  v7[15] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  v7[16] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v7[17] = v13;
  v7[18] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v14 = (*(void *)(*(void *)(type metadata accessor for Date(0LL) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v7[19] = swift_task_alloc(v14);
  v7[20] = swift_task_alloc(v14);
  uint64_t v15 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v7[21] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v7[22] = v16;
  unint64_t v17 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v7[23] = swift_task_alloc(v17);
  v7[24] = swift_task_alloc(v17);
  uint64_t v18 = type metadata accessor for SFAirDropSend.Request(0LL);
  v7[25] = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  v7[26] = v19;
  unint64_t v20 = (*(void *)(v19 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v7[27] = swift_task_alloc(v20);
  v7[28] = swift_task_alloc(v20);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_1003741D4, static AirDropActor.shared, 0LL);
}

uint64_t sub_1003741D4()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v6 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
  uint64_t v7 = swift_allocError(v5, v6, 0LL, 0LL);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104LL))( v8,  enum case for SFAirDropSend.Failure.unsupportedConnection(_:),  v5);
  swift_willThrow(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  swift_errorRetain(v7);
  swift_errorRetain(v7);
  uint64_t v10 = swift_errorRetain(v7);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = *(void *)(v0 + 224);
    uint64_t v60 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 192);
    uint64_t v61 = *(void *)(v0 + 200);
    uint64_t v15 = *(void *)(v0 + 176);
    uint64_t v58 = *(void *)(v0 + 168);
    uint64_t v16 = swift_slowAlloc(22LL, -1LL);
    uint64_t v63 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v65 = swift_slowAlloc(32LL, -1LL);
    uint64_t v67 = v65;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = SFAirDropSend.Request.id.getter(v65);
    uint64_t v18 = SFAirDrop.TransferIdentifier.shortIdentifier.getter(v17);
    unint64_t v20 = v19;
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v58);
    *(void *)(v0 + 40) = sub_10018CDB4(v18, (unint64_t)v20, &v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48, v16 + 4, v16 + 12);
    __n128 v21 = swift_bridgeObjectRelease(v20);
    (*(void (**)(uint64_t, uint64_t, __n128))(v60 + 8))(v13, v61, v21);
    *(_WORD *)(v16 + 12) = 2112;
    swift_errorRetain(v7);
    uint64_t v22 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(void *)(v0 + 48) = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v16 + 14, v16 + 22);
    *uint64_t v63 = v22;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "Classroom Send StateMachine FAILED %s {error: %@}",  (uint8_t *)v16,  0x16u);
    uint64_t v23 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v63, 1LL, v23);
    swift_slowDealloc(v63, -1LL, -1LL);
    swift_arrayDestroy(v65, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v65, -1LL, -1LL);
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  else
  {
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 208);

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    swift_errorRelease(v7);
    uint64_t v24 = swift_errorRelease(v7);
  }

  uint64_t v62 = *(void *)(v0 + 224);
  uint64_t v55 = *(void *)(v0 + 216);
  uint64_t v28 = *(void *)(v0 + 184);
  uint64_t v29 = *(void *)(v0 + 192);
  uint64_t v30 = *(void *)(v0 + 152);
  uint64_t v32 = *(void *)(v0 + 136);
  uint64_t v31 = *(void *)(v0 + 144);
  uint64_t v50 = *(void *)(v0 + 128);
  uint64_t v51 = *(void *)(v0 + 120);
  uint64_t v52 = *(void *)(v0 + 160);
  uint64_t v64 = *(void *)(v0 + 112);
  uint64_t v66 = *(void *)(v0 + 104);
  uint64_t v56 = *(void *)(v0 + 96);
  uint64_t v59 = *(void *)(v0 + 64);
  uint64_t v33 = SFAirDropSend.Transfer.id.getter(v24);
  uint64_t v34 = SFAirDropSend.Transfer.sendRequest.getter(v33);
  uint64_t v35 = SFAirDropSend.Transfer.receiverName.getter(v34);
  uint64_t v53 = v36;
  uint64_t v54 = v35;
  SFAirDropSend.Transfer.startDate.getter(v35);
  uint64_t v37 = sub_100183098(&qword_100648568);
  uint64_t v38 = SFAirDropSend.Transfer.id.getter(v37);
  uint64_t v57 = v30;
  SFAirDropSend.Transfer.startDate.getter(v38);
  SFAirDropSend.Transfer.Metrics.init(id:startDate:)(v28, v30);
  swift_errorRetain(v7);
  SFAirDropSend.Failure.init(_:)(v7);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v32 + 104))( v31,  enum case for SFAirDropSend.Transfer.State.transferFailed(_:),  v50);
  uint64_t v40 = SFAirDropSend.Transfer.displayPriority.getter(v39);
  uint64_t v41 = SFAirDropSend.Transfer.bundleIdentifier.getter(v40);
  uint64_t v43 = v42;
  uint64_t v44 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))( v64,  1LL,  1LL,  v44);
  v46.n128_f64[0] = SFAirDropSend.Transfer.presenter.getter(v45);
  SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)( v29,  v55,  v54,  v53,  v52,  v31,  v51,  v41,  v46,  v43,  v64,  v66);
  swift_errorRelease(v7);
  uint64_t v47 = swift_errorRelease(v7);
  SFAirDropSend.Transfer.id.getter(v47);
  uint64_t v48 = sub_100183098((uint64_t *)&unk_1006463F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56LL))(v56, 1LL, 1LL, v48);
  swift_beginAccess(v59 + 72, v0 + 16, 33LL, 0LL);
  sub_1002E53D8(v56, v29);
  swift_endAccess(v0 + 16);
  swift_task_dealloc(v62);
  swift_task_dealloc(v55);
  swift_task_dealloc(v29);
  swift_task_dealloc(v28);
  swift_task_dealloc(v52);
  swift_task_dealloc(v57);
  swift_task_dealloc(v31);
  swift_task_dealloc(v51);
  swift_task_dealloc(v64);
  swift_task_dealloc(v66);
  swift_task_dealloc(v56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003746E8()
{
  swift_release(*(void *)(v0 + 40));
  swift_unknownObjectRelease(*(void *)(v0 + 56));
  swift_bridgeObjectRelease(*(void *)(v0 + 72));
  return v0;
}

uint64_t sub_100374734()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropSendStateMachine()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary25SDAirDropSendStateMachine);
}

void sub_100374774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  os_log_type_t v12 = (char *)&v36 - v11;
  uint64_t v13 = (const char **)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables);
  *(void *)&double v14 = swift_beginAccess( a3 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_transferringConnectables,  v43,  0LL,  0LL).n128_u64[0];
  uint64_t v15 = *v13;
  swift_bridgeObjectRetain(v15, v14);
  char v16 = sub_1003A036C(a2, (uint64_t)v15);
  swift_bridgeObjectRelease(v15);
  if ((v16 & 1) != 0)
  {
    uint64_t v40 = a3;
    if (qword_100644138 != -1) {
      swift_once(&qword_100644138, sub_1002E9860);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v17, (uint64_t)qword_10064D970);
    uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v18(v12, a2, v6);
    unint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = v18;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      v42[0] = v37;
      uint64_t v39 = a1;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v36 = v23 + 4;
      uint64_t v24 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter(v6, v24);
      uint64_t v27 = (const char *)v26;
      uint64_t v41 = sub_10018CDB4(v25, v26, v42);
      a1 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42, v36, v23 + 12);
      __n128 v28 = swift_bridgeObjectRelease(v27);
      uint64_t v29 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      v29(v12, v6, v28);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Adding delegate for connectable: %s", v23, 0xCu);
      uint64_t v30 = v37;
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1LL, -1LL);
      uint64_t v31 = v23;
      uint64_t v18 = v38;
      swift_slowDealloc(v31, -1LL, -1LL);
    }

    else
    {
      uint64_t v29 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
      ((void (*)(char *, uint64_t))v29)(v12, v6);
    }

    v18(v10, a2, v6);
    uint64_t v32 = (uint64_t *)(v40 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID);
    swift_beginAccess( v40 + OBJC_IVAR____TtC16DaemoniOSLibrary24SDAirDropEndpointService_delegateByConnectableID,  v42,  33LL,  0LL);
    swift_unknownObjectRetain(a1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
    uint64_t v41 = *v32;
    *uint64_t v32 = 0x8000000000000000LL;
    sub_100374A94(a1, (uint64_t)v10, isUniquelyReferenced_nonNull_native, &v41);
    uint64_t v34 = (const char *)*v32;
    *uint64_t v32 = v41;
    __n128 v35 = swift_bridgeObjectRelease(v34);
    v29(v10, v6, v35);
    swift_endAccess(v42);
  }

uint64_t sub_100374A94(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v8 = type metadata accessor for UUID(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  os_log_type_t v12 = (void *)*a4;
  unint64_t v14 = sub_1003AD618(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = (void *)*a4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      os_log_type_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_unknownObjectRelease(*v21);
      uint64_t *v21 = a1;
      v21[1] = (uint64_t)&off_1005D6838;
      return result;
    }

    goto LABEL_11;
  }

  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1003AEC38();
    goto LABEL_7;
  }

  sub_1003A9B58(v17, a3 & 1);
  unint64_t v23 = sub_1003AD618(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v8);
    __break(1u);
    return result;
  }

  unint64_t v14 = v23;
  unint64_t v20 = (void *)*a4;
  if ((v18 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100374BF8(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_100374BF8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1LL << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID(0LL);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32LL))( v8 + *(void *)(*(void *)(v9 - 8) + 72LL) * a1,  a2,  v9);
  uint64_t v11 = (void *)(a4[7] + 16 * a1);
  *uint64_t v11 = a3;
  v11[1] = &off_1005D6838;
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1LL);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_100374C9C(uint64_t a1, const char *a2)
{
  uint64_t v3 = sub_100183098(&qword_100649F58);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10028CA8C((uint64_t)a2, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100187100((uint64_t)v5, &qword_100649F58);
    if (qword_100643FD0 != -1) {
      swift_once(&qword_100643FD0, sub_10023A3F4);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v10, (uint64_t)qword_1006695E0);
    uint64_t v11 = swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.error.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v15 = swift_slowAlloc(32LL, -1LL);
      uint64_t v24 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v16 = sub_100183F14( &qword_1006453A0,  type metadata accessor for SDAirDropDiscoveredEndpoint,  (uint64_t)&unk_1004CF398);
      swift_bridgeObjectRetain(a2);
      uint64_t v18 = Set.description.getter(v17, v6, v16);
      unint64_t v20 = v19;
      swift_bridgeObjectRelease(a2);
      uint64_t v23 = sub_10018CDB4(v18, (unint64_t)v20, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v14 + 4, v14 + 12);
      swift_bridgeObjectRelease_n(a2, 2LL);
      swift_bridgeObjectRelease(v20);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Could not find endpoint. Current endpoints: %s", v14, 0xCu);
      swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    return 0LL;
  }

  else
  {
    sub_10028CA30((uint64_t)v5, (uint64_t)v9);
    uint64_t v21 = sub_10029197C();
    sub_100191450((uint64_t)v9);
  }

  return v21;
}

uint64_t sub_100374F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064DBB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100374FA8()
{
  uint64_t v13 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v1 = *(void *)(v13 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v12 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v4 = *(void *)(v12 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v13);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v12);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  if (*(void *)(v0 + v10 + 24)) {
    sub_10018709C((void *)(v0 + v10));
  }
  return swift_deallocObject(v0, v10 + 40);
}

uint64_t sub_1003750C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100183098(&qword_10064DBB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037510C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)(type metadata accessor for SFAirDropSend.Transfer(0LL) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(type metadata accessor for SFAirDropSend.Request(0LL) - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(type metadata accessor for Logger(0LL) - 8);
  unint64_t v15 = (v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(v3 + 16);
  uint64_t v17 = v3 + v9;
  uint64_t v18 = v3 + v12;
  uint64_t v19 = v3 + v15;
  uint64_t v20 = v3 + ((*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v21 = (void *)swift_task_alloc(dword_100650F3C);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v21;
  void *v21 = v4;
  v21[1] = sub_100195708;
  return sub_100371E2C(a1, a2, a3, v16, v17, v18, v19, v20);
}

uint64_t sub_100375214()
{
  uint64_t v19 = type metadata accessor for SFAirDropSend.Transfer(0LL);
  uint64_t v1 = *(void *)(v19 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  unint64_t v15 = v4;
  uint64_t v18 = type metadata accessor for SFAirDropSend.Request(0LL);
  uint64_t v5 = *(void *)(v18 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v4 + v6 + 8) & ~v6;
  unint64_t v8 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v11 + v8 + 16) & ~v11;
  uint64_t v16 = v12 + *(void *)(v10 + 64);
  uint64_t v17 = v9;
  uint64_t v13 = v2 | v6 | v11 | 7;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v19);
  swift_bridgeObjectRelease(*(void *)(v0 + v15));
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v18);
  swift_bridgeObjectRelease(*(void *)(v0 + v8 + 8));
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v17);
  return swift_deallocObject(v0, v16, v13);
}

uint64_t sub_100375344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for SFAirDropSend.Transfer(0LL) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v10 = *(void *)(type metadata accessor for SFAirDropSend.Request(0LL) - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  type metadata accessor for Logger(0LL);
  uint64_t v12 = *(void *)(v3 + 16);
  uint64_t v13 = *(void *)(v3 + v9);
  uint64_t v14 = (void *)swift_task_alloc(dword_100650F4C);
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = v14;
  void *v14 = v4;
  v14[1] = sub_1001943E8;
  return sub_100374010(a1, a2, a3, v12, v3 + v8, v13, v3 + v11);
}

uint64_t sub_100375468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[32] = a5;
  v6[33] = v5;
  v6[30] = a3;
  v6[31] = a4;
  v6[28] = a1;
  v6[29] = a2;
  uint64_t v7 = sub_100183098(&qword_100646560);
  v6[34] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v6[35] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[36] = v9;
  uint64_t v10 = *(void *)(v9 + 64);
  v6[37] = v10;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v6[38] = swift_task_alloc(v11);
  v6[39] = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  v6[40] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v6[41] = v13;
  unint64_t v14 = (*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[42] = swift_task_alloc(v14);
  v6[43] = swift_task_alloc(v14);
  v6[44] = swift_task_alloc(v14);
  v6[45] = swift_task_alloc(v14);
  uint64_t v15 = sub_100183098(&qword_10064DBF0);
  v6[46] = swift_task_alloc((*(void *)(*(void *)(v15 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100183098(&qword_1006457D8);
  v6[47] = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  v6[48] = v17;
  uint64_t v18 = *(void *)(v17 + 64);
  v6[49] = v18;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v6[50] = swift_task_alloc(v19);
  v6[51] = swift_task_alloc(v19);
  v6[52] = swift_task_alloc(v19);
  uint64_t v20 = sub_100183098(&qword_100649D40);
  v6[53] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v6[54] = v21;
  v6[55] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_100183098(&qword_100656490);
  v6[56] = swift_task_alloc((*(void *)(*(void *)(v22 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100183098(&qword_100649E10);
  v6[57] = swift_task_alloc((*(void *)(*(void *)(v23 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_100183098(&qword_100650C70);
  v6[58] = swift_task_alloc((*(void *)(*(void *)(v24 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v6[59] = v25;
  uint64_t v26 = *(void *)(v25 - 8);
  v6[60] = v26;
  uint64_t v27 = *(void *)(v26 + 64);
  v6[61] = v27;
  v6[62] = swift_task_alloc((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  v6[63] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v6[64] = v29;
  v6[65] = swift_task_alloc((*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v6[66] = v30;
  uint64_t v31 = *(void *)(v30 - 8);
  v6[67] = v31;
  v6[68] = swift_task_alloc((*(void *)(v31 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = type metadata accessor for UUID(0LL);
  v6[69] = swift_task_alloc((*(void *)(*(void *)(v32 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v6[70] = v33;
  uint64_t v34 = *(void *)(v33 - 8);
  v6[71] = v34;
  unint64_t v35 = (*(void *)(v34 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[72] = swift_task_alloc(v35);
  v6[73] = swift_task_alloc(v35);
  v6[74] = swift_task_alloc(v35);
  uint64_t v36 = type metadata accessor for SFPlatform(0LL);
  v6[75] = v36;
  uint64_t v37 = *(void *)(v36 - 8);
  v6[76] = v37;
  v6[77] = swift_task_alloc((*(void *)(v37 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  v6[78] = v38;
  uint64_t v39 = *(void *)(v38 - 8);
  v6[79] = v39;
  unint64_t v40 = (*(void *)(v39 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[80] = swift_task_alloc(v40);
  v6[81] = swift_task_alloc(v40);
  uint64_t v41 = type metadata accessor for Date(0LL);
  v6[82] = v41;
  uint64_t v42 = *(void *)(v41 - 8);
  v6[83] = v42;
  unint64_t v43 = (*(void *)(v42 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[84] = swift_task_alloc(v43);
  v6[85] = swift_task_alloc(v43);
  uint64_t v44 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v6[86] = v44;
  uint64_t v45 = *(void *)(v44 - 8);
  v6[87] = v45;
  v6[88] = swift_task_alloc((*(void *)(v45 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v46 = type metadata accessor for Logger(0LL);
  v6[89] = v46;
  uint64_t v47 = *(void *)(v46 - 8);
  v6[90] = v47;
  unint64_t v48 = (*(void *)(v47 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v6[91] = swift_task_alloc(v48);
  v6[92] = swift_task_alloc(v48);
  v6[93] = swift_task_alloc(v48);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v49 = static AirDropActor.shared;
  v6[94] = static AirDropActor.shared;
  return swift_task_switch(sub_100375878, v49, 0LL);
}

uint64_t sub_100375878()
{
  uint64_t v1 = *(void *)(v0 + 704);
  uint64_t v2 = *(void *)(v0 + 696);
  uint64_t v3 = *(void *)(v0 + 688);
  uint64_t v4 = SFAirDropReceive.AskRequest.id.getter();
  uint64_t v5 = SFAirDrop.TransferIdentifier.stringValue.getter(v4);
  unint64_t v7 = v6;
  uint64_t v8 = sub_10037C5B0(8LL, v5, v6);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  swift_bridgeObjectRelease(v7);
  uint64_t v15 = static String._fromSubstring(_:)(v8, v10, v12, v14);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease(v14);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100505BA0LL,  0x2E706F7244726941LL,  0xE800000000000000LL);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v20 = static Date.now.getter(v19);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "ClassroomReceive StateMachine PreChecks START", v23, 2u);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v24 = *(void *)(v0 + 264);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v24 + 16, v25);
  *(void *)(v0 + 760) = Strong;
  if (Strong)
  {
    uint64_t v75 = *(void *)(v0 + 680);
    uint64_t v65 = *(void *)(v0 + 664);
    uint64_t v67 = *(void *)(v0 + 672);
    uint64_t v71 = *(void *)(v0 + 656);
    uint64_t v27 = *(void *)(v0 + 648);
    uint64_t v99 = *(void *)(v0 + 640);
    uint64_t v28 = *(void *)(v0 + 632);
    uint64_t v29 = *(void *)(v0 + 624);
    uint64_t v30 = *(void *)(v0 + 616);
    uint64_t v31 = *(void *)(v0 + 608);
    uint64_t v32 = *(void *)(v0 + 600);
    uint64_t v33 = *(void *)(v0 + 552);
    uint64_t v34 = *(void *)(v0 + 536);
    uint64_t v63 = *(void *)(v0 + 544);
    uint64_t v64 = *(void *)(v0 + 528);
    uint64_t v69 = *(void *)(v0 + 512);
    uint64_t v77 = *(void *)(v0 + 520);
    uint64_t v79 = *(void *)(v0 + 504);
    uint64_t v81 = *(void *)(v0 + 480);
    uint64_t v85 = *(void *)(v0 + 496);
    uint64_t v87 = *(void *)(v0 + 472);
    uint64_t v91 = *(void *)(v0 + 464);
    uint64_t v95 = *(void *)(v0 + 456);
    uint64_t v97 = *(void *)(v0 + 448);
    uint64_t v83 = *(void *)(v0 + 328);
    uint64_t v89 = *(void *)(v0 + 320);
    uint64_t v73 = *(void *)(v0 + 240);
    static SFPlatform.iOS.getter(Strong);
    char v35 = static SFPlatform.isPlatform(_:)(v30);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    uint64_t v36 = (unsigned int *)&enum case for SFAirDropClient.Identifier.airdropUI(_:);
    if ((v35 & 1) == 0) {
      uint64_t v36 = (unsigned int *)&enum case for SFAirDropClient.Identifier.daemon(_:);
    }
    uint64_t v37 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v28 + 104))(v27, *v36, v29);
    UUID.init()(v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v67, v75, v71);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))( v63,  enum case for SFAirDropReceive.Transfer.State.created(_:),  v64);
    (*(void (**)(uint64_t, void, uint64_t))(v69 + 104))( v77,  enum case for SFAirDrop.DisplayPriority.normal(_:),  v79);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
    *(void *)(v0 + 768) = v38;
    v38(v85, v73, v87);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v91, 1LL, 1LL, v89);
    uint64_t v39 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v95, 1LL, 1LL, v39);
    uint64_t v40 = type metadata accessor for SFNWInterfaceType(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56LL))(v97, 1LL, 1LL, v40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v99, v27, v29);
    SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)( v33,  v67,  v63,  v77,  v85,  0LL,  v91,  0LL,  v95,  v97,  v99);
    type metadata accessor for SDAirDropContentHandlerFactory();
    uint64_t v41 = (void *)swift_task_alloc(dword_1006528FC);
    *(void *)(v0 + 776) = v41;
    void *v41 = v0;
    v41[1] = sub_100375F30;
    return sub_1003C61C0(v0 + 56, *(void *)(v0 + 592));
  }

  else
  {
    unint64_t v43 = (os_log_s *)Logger.logObject.getter(0LL);
    os_log_type_t v44 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v43,  v44,  "ClassroomReceive StateMachine PreChecks FAILED. Delegate is nil - returning .error",  v45,  2u);
      swift_slowDealloc(v45, -1LL, -1LL);
    }

    uint64_t v46 = *(void *)(v0 + 744);
    uint64_t v47 = *(void *)(v0 + 720);
    uint64_t v48 = *(void *)(v0 + 712);
    uint64_t v49 = *(void *)(v0 + 680);
    uint64_t v50 = *(void *)(v0 + 664);
    uint64_t v51 = *(void *)(v0 + 656);
    uint64_t v52 = *(void *)(v0 + 328);
    uint64_t v102 = *(void *)(v0 + 320);
    uint64_t v53 = *(void *)(v0 + 224);

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
    (*(void (**)(uint64_t, void, uint64_t))(v52 + 104))( v53,  enum case for SFAirDropReceive.AskResponse.error(_:),  v102);
    uint64_t v54 = *(void *)(v0 + 736);
    uint64_t v55 = *(void *)(v0 + 728);
    uint64_t v56 = *(void *)(v0 + 704);
    uint64_t v57 = *(void *)(v0 + 680);
    uint64_t v58 = *(void *)(v0 + 672);
    uint64_t v59 = *(void *)(v0 + 648);
    uint64_t v60 = *(void *)(v0 + 640);
    uint64_t v61 = *(void *)(v0 + 616);
    uint64_t v62 = *(void *)(v0 + 592);
    uint64_t v66 = *(void *)(v0 + 584);
    uint64_t v68 = *(void *)(v0 + 576);
    uint64_t v70 = *(void *)(v0 + 552);
    uint64_t v72 = *(void *)(v0 + 544);
    uint64_t v74 = *(void *)(v0 + 520);
    uint64_t v76 = *(void *)(v0 + 496);
    uint64_t v78 = *(void *)(v0 + 464);
    uint64_t v80 = *(void *)(v0 + 456);
    uint64_t v82 = *(void *)(v0 + 448);
    uint64_t v84 = *(void *)(v0 + 440);
    uint64_t v86 = *(void *)(v0 + 416);
    uint64_t v88 = *(void *)(v0 + 408);
    uint64_t v90 = *(void *)(v0 + 400);
    uint64_t v92 = *(void *)(v0 + 368);
    uint64_t v93 = *(void *)(v0 + 360);
    uint64_t v94 = *(void *)(v0 + 352);
    uint64_t v96 = *(void *)(v0 + 344);
    uint64_t v98 = *(void *)(v0 + 336);
    uint64_t v100 = *(void *)(v0 + 312);
    uint64_t v101 = *(void *)(v0 + 304);
    uint64_t v103 = *(void *)(v0 + 272);
    swift_task_dealloc(*(void *)(v0 + 744));
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v74);
    swift_task_dealloc(v76);
    swift_task_dealloc(v78);
    swift_task_dealloc(v80);
    swift_task_dealloc(v82);
    swift_task_dealloc(v84);
    swift_task_dealloc(v86);
    swift_task_dealloc(v88);
    swift_task_dealloc(v90);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    swift_task_dealloc(v96);
    swift_task_dealloc(v98);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v103);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100375F30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 752LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 776LL));
  return swift_task_switch(sub_100375F88, v1, 0LL);
}

uint64_t sub_100375F88()
{
  uint64_t v1 = (__int128 *)(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v49 = *(void *)(v0 + 736);
    uint64_t v51 = *(void *)(v0 + 744);
    uint64_t v69 = *(void *)(v0 + 728);
    uint64_t v2 = *(void *)(v0 + 720);
    uint64_t v3 = *(void *)(v0 + 712);
    uint64_t v4 = *(void *)(v0 + 592);
    uint64_t v5 = *(void *)(v0 + 584);
    uint64_t v76 = *(void *)(v0 + 576);
    uint64_t v6 = *(void *)(v0 + 568);
    uint64_t v7 = *(void *)(v0 + 560);
    uint64_t v8 = *(void *)(v0 + 264);
    uint64_t v58 = *(void *)(v0 + 248);
    uint64_t v60 = *(void *)(v0 + 256);
    uint64_t v56 = *(void **)(v0 + 232);
    sub_1001CE0D0(v1, v0 + 16);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v9(v5, v4, v7);
    sub_10019A6C4(v0 + 16, v0 + 96);
    uint64_t v62 = *(void **)(v8 + 32);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
    v54(v49, v51, v3);
    uint64_t v10 = _s15ClassroomRunnerCMa(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    *(void *)(v11 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine15ClassroomRunner_classroomHandler) = v56;
    uint64_t v12 = (void *)(v11 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine15ClassroomRunner_recordID);
    *uint64_t v12 = v58;
    v12[1] = v60;
    v9(v76, v5, v7);
    sub_10019A6C4(v0 + 96, v0 + 136);
    v54(v69, v49, v3);
    id v13 = v56;
    swift_bridgeObjectRetain(v60);
    uint64_t v14 = sub_10044E2D0(v76, (void *)(v0 + 136), v62, v69);
    *(void *)(v0 + 784) = v14;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    *(void *)(v0 + 792) = v15;
    v15(v49, v3);
    sub_10018709C((void *)(v0 + 96));
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    *(void *)(v0 + 800) = v16;
    v16(v5, v7);
    uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
    *(void *)(v0 + 200) = v17;
    swift_retain(v17);
    uint64_t v18 = sub_100183098(&qword_1006563B0);
    unint64_t v19 = sub_10037C8FC();
    SFNoThrowAsyncSequence.init<A>(_:)(v0 + 200, v7, v18, v19);
    uint64_t v79 = (char *)&dword_100649D38 + dword_100649D38;
    uint64_t v20 = (void *)swift_task_alloc(unk_100649D3C);
    *(void *)(v0 + 808) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1003764F0;
    return ((uint64_t (*)(void, void))v79)(*(void *)(v0 + 592), *(void *)(v0 + 440));
  }

  else
  {
    uint64_t v22 = sub_100187100((uint64_t)v1, &qword_100651048);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v23,  v24,  "ClassroomReceive StateMachine PreChecks FAILED. Mixed types - returning .mixedTypes",  v25,  2u);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    uint64_t v26 = *(void *)(v0 + 760);
    uint64_t v74 = *(void *)(v0 + 720);
    uint64_t v77 = *(void *)(v0 + 712);
    uint64_t v80 = *(void *)(v0 + 744);
    uint64_t v27 = *(void *)(v0 + 664);
    uint64_t v63 = *(void *)(v0 + 656);
    uint64_t v65 = *(void *)(v0 + 680);
    uint64_t v28 = *(void *)(v0 + 648);
    uint64_t v29 = *(void *)(v0 + 632);
    uint64_t v30 = *(void *)(v0 + 624);
    uint64_t v31 = *(void *)(v0 + 592);
    uint64_t v32 = *(void *)(v0 + 568);
    uint64_t v33 = *(void *)(v0 + 560);
    uint64_t v70 = *(void *)(v0 + 328);
    uint64_t v72 = *(void *)(v0 + 320);
    uint64_t v67 = *(void *)(v0 + 224);

    swift_unknownObjectRelease(v26);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v65, v63);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v80, v77);
    (*(void (**)(uint64_t, void, uint64_t))(v70 + 104))( v67,  enum case for SFAirDropReceive.AskResponse.mixedTypes(_:),  v72);
    uint64_t v34 = *(void *)(v0 + 736);
    uint64_t v35 = *(void *)(v0 + 728);
    uint64_t v36 = *(void *)(v0 + 704);
    uint64_t v37 = *(void *)(v0 + 680);
    uint64_t v38 = *(void *)(v0 + 672);
    uint64_t v39 = *(void *)(v0 + 648);
    uint64_t v40 = *(void *)(v0 + 640);
    uint64_t v41 = *(void *)(v0 + 616);
    uint64_t v42 = *(void *)(v0 + 592);
    uint64_t v43 = *(void *)(v0 + 584);
    uint64_t v44 = *(void *)(v0 + 576);
    uint64_t v45 = *(void *)(v0 + 552);
    uint64_t v46 = *(void *)(v0 + 544);
    uint64_t v47 = *(void *)(v0 + 520);
    uint64_t v48 = *(void *)(v0 + 496);
    uint64_t v50 = *(void *)(v0 + 464);
    uint64_t v52 = *(void *)(v0 + 456);
    uint64_t v53 = *(void *)(v0 + 448);
    uint64_t v55 = *(void *)(v0 + 440);
    uint64_t v57 = *(void *)(v0 + 416);
    uint64_t v59 = *(void *)(v0 + 408);
    uint64_t v61 = *(void *)(v0 + 400);
    uint64_t v64 = *(void *)(v0 + 368);
    uint64_t v66 = *(void *)(v0 + 360);
    uint64_t v68 = *(void *)(v0 + 352);
    uint64_t v71 = *(void *)(v0 + 344);
    uint64_t v73 = *(void *)(v0 + 336);
    uint64_t v75 = *(void *)(v0 + 312);
    uint64_t v78 = *(void *)(v0 + 304);
    uint64_t v81 = *(void *)(v0 + 272);
    swift_task_dealloc(*(void *)(v0 + 744));
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v55);
    swift_task_dealloc(v57);
    swift_task_dealloc(v59);
    swift_task_dealloc(v61);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v71);
    swift_task_dealloc(v73);
    swift_task_dealloc(v75);
    swift_task_dealloc(v78);
    swift_task_dealloc(v81);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1003764F0(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 808);
  *(void *)(*v2 + 8swift_weakDestroy(v0 + 16) = v1;
  swift_task_dealloc(v5);
  uint64_t v6 = *(void *)(v4 + 752);
  if (v1)
  {
    uint64_t v7 = sub_100377538;
  }

  else
  {
    *(_BYTE *)(v4 + 848) = a1 & 1;
    uint64_t v7 = sub_100376568;
  }

  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_100376568(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 848);
  uint64_t v3 = (os_log_s *)Logger.logObject.getter(a1);
  uint64_t v227 = (void *)(v1 + 16);
  if (v2 != 1)
  {
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v19 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v3,  v18,  "ClassroomReceive StateMachine PreChecks FAILED. Delegate.shouldStart returned false - returning .decline",  v19,  2u);
      swift_slowDealloc(v19, -1LL, -1LL);
    }

    uint64_t v175 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
    uint64_t v20 = *(void *)(v1 + 784);
    uint64_t v21 = *(void *)(v1 + 760);
    uint64_t v217 = *(void *)(v1 + 744);
    uint64_t v221 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
    uint64_t v211 = *(void *)(v1 + 712);
    uint64_t v180 = *(void *)(v1 + 664);
    uint64_t v185 = *(void *)(v1 + 656);
    uint64_t v22 = *(void *)(v1 + 632);
    uint64_t v165 = *(void *)(v1 + 624);
    uint64_t v170 = *(void *)(v1 + 648);
    uint64_t v23 = *(void *)(v1 + 592);
    uint64_t v24 = *(void *)(v1 + 560);
    uint64_t v26 = *(void *)(v1 + 432);
    uint64_t v25 = *(void *)(v1 + 440);
    uint64_t v27 = *(void *)(v1 + 424);
    uint64_t v195 = *(void *)(v1 + 328);
    uint64_t v200 = *(void *)(v1 + 680);
    uint64_t v205 = *(void *)(v1 + 320);
    uint64_t v190 = *(void *)(v1 + 224);

    swift_unknownObjectRelease(v21);
    swift_release(v20);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    sub_10018709C(v227);
    v175(v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v170, v165);
    (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v200, v185);
    v221(v217, v211);
    (*(void (**)(uint64_t, void, uint64_t))(v195 + 104))( v190,  enum case for SFAirDropReceive.AskResponse.decline(_:),  v205);
    goto LABEL_16;
  }

  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "ClassroomReceive StateMachine PreChecks END", v5, 2u);
    swift_slowDealloc(v5, -1LL, -1LL);
  }

  uint64_t v6 = *(void *)(v1 + 232);

  uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations);
  swift_beginAccess( v6 + OBJC_IVAR____TtC16DaemoniOSLibrary32SDAirDropReceiveClassroomHandler_continuations,  v1 + 176,  0LL,  0LL);
  uint64_t v8 = *v7;
  if (!*(void *)(v8 + 16))
  {
    uint64_t v28 = *(void *)(v1 + 368);
    uint64_t v29 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v28, 1LL, 1LL, v29);
LABEL_13:
    uint64_t v32 = sub_100187100(*(void *)(v1 + 368), &qword_10064DBF0);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "Missing transfer continuation for classroom transfer",  v35,  2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    uint64_t v176 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
    uint64_t v36 = *(void *)(v1 + 784);
    uint64_t v37 = *(void *)(v1 + 760);
    uint64_t v218 = *(void *)(v1 + 744);
    uint64_t v222 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
    uint64_t v212 = *(void *)(v1 + 712);
    uint64_t v181 = *(void *)(v1 + 664);
    uint64_t v186 = *(void *)(v1 + 656);
    uint64_t v38 = *(void *)(v1 + 632);
    uint64_t v166 = *(void *)(v1 + 624);
    uint64_t v171 = *(void *)(v1 + 648);
    uint64_t v39 = *(void *)(v1 + 592);
    uint64_t v40 = *(void *)(v1 + 560);
    uint64_t v41 = *(void *)(v1 + 432);
    uint64_t v42 = *(void *)(v1 + 440);
    uint64_t v43 = *(void *)(v1 + 424);
    uint64_t v196 = *(void *)(v1 + 328);
    uint64_t v201 = *(void *)(v1 + 680);
    uint64_t v206 = *(void *)(v1 + 320);
    uint64_t v191 = *(void *)(v1 + 224);

    swift_unknownObjectRelease(v37);
    swift_release(v36);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    sub_10018709C(v227);
    v176(v39, v40);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v171, v166);
    (*(void (**)(uint64_t, uint64_t))(v181 + 8))(v201, v186);
    v222(v218, v212);
    (*(void (**)(uint64_t, void, uint64_t))(v196 + 104))( v191,  enum case for SFAirDropReceive.AskResponse.error(_:),  v206);
    goto LABEL_16;
  }

  uint64_t v10 = *(void *)(v1 + 248);
  uint64_t v9 = *(void *)(v1 + 256);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v8);
  uint64_t v11 = sub_1003AD53C(v10, v9);
  uint64_t v12 = *(void *)(v1 + 368);
  if ((v13 & 1) != 0)
  {
    uint64_t v14 = v11;
    uint64_t v15 = *(void *)(v8 + 56);
    uint64_t v16 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    sub_1001A4B84( v15 + *(void *)(v17 + 72) * v14,  v12,  type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v12, 0LL, 1LL, v16);
  }

  else
  {
    uint64_t v16 = type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v12, 1LL, 1LL, v16);
  }

  uint64_t v30 = *(void *)(v1 + 368);
  uint64_t v31 = *(void *)(v1 + 256);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v31);
  type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation(0LL);
  uint64_t v55 = *(void *)(v1 + 408);
  uint64_t v54 = *(void *)(v1 + 416);
  uint64_t v57 = *(void *)(v1 + 376);
  uint64_t v56 = *(void *)(v1 + 384);
  uint64_t v58 = *(void *)(v1 + 368);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
  *(void *)(v1 + 824) = v59;
  v59(v55, v58, v57);
  sub_1001A4BC8(v58, type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation);
  uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 32);
  *(void *)(v1 + 832) = v60;
  uint64_t v61 = v60(v54, v55, v57);
  uint64_t v62 = (os_log_s *)Logger.logObject.getter(v61);
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v64 = 0;
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "ClassroomReceive StateMachine PreAccept START", v64, 2u);
    swift_slowDealloc(v64, -1LL, -1LL);
  }

  if ((SFAirDropReceive.AskRequest.canAutoAccept.getter() & 1) != 0)
  {
    uint64_t v65 = *(void *)(v1 + 360);
    uint64_t v67 = *(void *)(v1 + 320);
    uint64_t v66 = *(void *)(v1 + 328);
    uint64_t v69 = *(void *)(v1 + 280);
    uint64_t v68 = *(void *)(v1 + 288);
    sub_100183098(&qword_100646590);
    (*(void (**)(uint64_t, void, uint64_t))(v68 + 104))( v65,  enum case for SFAirDropReceive.ItemDestination.default(_:),  v69);
    SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)(1LL, 0LL, 0xF000000000000000LL);
    LODWORD(v68) = enum case for SFAirDropReceive.AskResponse.accept(_:);
    (*(void (**)(uint64_t, void, uint64_t))(v66 + 104))( v65,  enum case for SFAirDropReceive.AskResponse.accept(_:),  v67);
    uint64_t v70 = *(uint64_t (**)(void, void, void))(*(void *)(v1 + 328) + 16LL);
    uint64_t v71 = v70(*(void *)(v1 + 352), *(void *)(v1 + 360), *(void *)(v1 + 320));
    uint64_t v72 = (os_log_s *)Logger.logObject.getter(v71);
    os_log_type_t v73 = static os_log_type_t.default.getter();
    BOOL v74 = os_log_type_enabled(v72, v73);
    uint64_t v75 = *(void *)(v1 + 352);
    uint64_t v77 = *(void *)(v1 + 320);
    uint64_t v76 = *(void *)(v1 + 328);
    int v224 = v68;
    if (v74)
    {
      os_log_t v214 = v70;
      uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v208 = swift_slowAlloc(32LL, -1LL);
      uint64_t v229 = v208;
      *(_DWORD *)uint64_t v78 = 136315138;
      uint64_t v79 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
      uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter(v77, v79);
      unint64_t v82 = v81;
      *(void *)(v1 + 2swift_weakDestroy(v0 + 16) = sub_10018CDB4(v80, v81, &v229);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 216, v1 + 224, v78 + 4, v78 + 12);
      unint64_t v83 = v82;
      uint64_t v70 = v214;
      swift_bridgeObjectRelease(v83);
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v84(v75, v77);
      _os_log_impl( (void *)&_mh_execute_header,  v72,  v73,  "ClassroomReceive StateMachine PreAccept END {response: %s",  v78,  0xCu);
      swift_arrayDestroy(v208, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v208, -1LL, -1LL);
      swift_slowDealloc(v78, -1LL, -1LL);
    }

    else
    {

      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v84(v75, v77);
    }

    uint64_t v86 = *(void *)(v1 + 344);
    uint64_t v88 = *(void *)(v1 + 320);
    uint64_t v87 = *(void *)(v1 + 328);
    v70(v86, *(void *)(v1 + 360), v88);
    int v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 88))(v86, v88);
    uint64_t v90 = *(void *)(v1 + 344);
    if (v89 == v224)
    {
      uint64_t v91 = v70;
      uint64_t v93 = *(void *)(v1 + 304);
      uint64_t v92 = *(void *)(v1 + 312);
      uint64_t v95 = *(void *)(v1 + 280);
      uint64_t v94 = *(void *)(v1 + 288);
      (*(void (**)(void, void))(*(void *)(v1 + 328) + 96LL))( *(void *)(v1 + 344),  *(void *)(v1 + 320));
      uint64_t v96 = v90 + *(int *)(sub_100183098(&qword_100646590) + 48);
      uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
      v97(v92, v90, v95);
      uint64_t v98 = type metadata accessor for SFAirDropReceive.AcceptContext(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v98 - 8) + 8LL))(v96, v98);
      (*(void (**)(uint64_t, void, uint64_t))(v94 + 104))( v93,  enum case for SFAirDropReceive.ItemDestination.noItem(_:),  v95);
      uint64_t v99 = sub_100183F14( &qword_100646840,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
      LOBYTE(v92) = dispatch thunk of static Equatable.== infix(_:_:)(v92, v93, v95, v99);
      uint64_t v100 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
      v100(v93, v95);
      if ((v92 & 1) == 0)
      {
        uint64_t v215 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 832);
        uint64_t v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 824);
        uint64_t v203 = *(void *)(v1 + 784);
        uint64_t v173 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 768);
        uint64_t v158 = *(void *)(v1 + 496);
        uint64_t v188 = *(void *)(v1 + 480);
        uint64_t v193 = *(void *)(v1 + 488);
        uint64_t v225 = v100;
        uint64_t v118 = *(void *)(v1 + 472);
        uint64_t v168 = v118;
        uint64_t v147 = *(void *)(v1 + 416);
        uint64_t v119 = *(void *)(v1 + 400);
        uint64_t v183 = *(void *)(v1 + 392);
        uint64_t v120 = *(void *)(v1 + 376);
        uint64_t v153 = *(void *)(v1 + 384);
        uint64_t v122 = *(void *)(v1 + 304);
        uint64_t v121 = *(void *)(v1 + 312);
        uint64_t v163 = v122;
        uint64_t v123 = *(void *)(v1 + 288);
        uint64_t v178 = *(void *)(v1 + 296);
        uint64_t v124 = *(void *)(v1 + 272);
        uint64_t v144 = *(void *)(v1 + 280);
        uint64_t v209 = v124;
        uint64_t v198 = v97;
        uint64_t v125 = *(void *)(v1 + 240);
        uint64_t v115 = type metadata accessor for TaskPriority(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))( v124,  1LL,  1LL,  v115);
        v150(v119, v147, v120);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v122, v121, v144);
        v173(v158, v125, v118);
        uint64_t v126 = *(unsigned __int8 *)(v153 + 80);
        uint64_t v127 = (v126 + 24) & ~v126;
        uint64_t v128 = *(unsigned __int8 *)(v123 + 80);
        uint64_t v129 = (v183 + v128 + v127) & ~v128;
        uint64_t v130 = *(unsigned __int8 *)(v188 + 80);
        uint64_t v131 = (v178 + v130 + v129) & ~v130;
        uint64_t v132 = swift_allocObject(&unk_1005DD150, v131 + v193, v126 | v128 | v130 | 7);
        *(void *)(v132 + swift_weakDestroy(v0 + 16) = v203;
        v215(v132 + v127, v119, v120);
        v198(v132 + v129, v163, v144);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v188 + 32))(v132 + v131, v158, v168);
        uint64_t v133 = _s10BaseRunnerC11FinishTokenVMa(0LL);
        swift_retain(v203);
        uint64_t v117 = static Task<>.noThrow(priority:operation:)(v209, &unk_1006510B8, v132, v133);
        swift_release(v132);
        sub_100187100(v209, &qword_100646560);
        v225(v121, v144);
LABEL_33:
        uint64_t v184 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
        uint64_t v226 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
        uint64_t v148 = *(void *)(v1 + 784);
        uint64_t v134 = *(void *)(v1 + 760);
        uint64_t v216 = *(void *)(v1 + 712);
        uint64_t v220 = *(void *)(v1 + 744);
        uint64_t v210 = *(void *)(v1 + 680);
        uint64_t v194 = *(void *)(v1 + 664);
        uint64_t v204 = *(void *)(v1 + 656);
        uint64_t v164 = *(void *)(v1 + 624);
        uint64_t v169 = *(void *)(v1 + 648);
        uint64_t v159 = *(void *)(v1 + 592);
        uint64_t v161 = *(void *)(v1 + 632);
        uint64_t v154 = *(void *)(v1 + 440);
        uint64_t v156 = *(void *)(v1 + 560);
        uint64_t v145 = *(void *)(v1 + 432);
        uint64_t v135 = *(void *)(v1 + 416);
        uint64_t v151 = *(void *)(v1 + 424);
        uint64_t v137 = *(void *)(v1 + 376);
        uint64_t v136 = *(void *)(v1 + 384);
        uint64_t v199 = *(void *)(v1 + 360);
        uint64_t v189 = *(void *)(v1 + 320);
        uint64_t v138 = *(void *)(v1 + 272);
        uint64_t v174 = *(void *)(v1 + 224);
        uint64_t v179 = *(void *)(v1 + 328);
        type metadata accessor for TaskPriority(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))( v138,  1LL,  1LL,  v115);
        uint64_t v139 = static AirDropActor.shared;
        uint64_t v140 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
        uint64_t v141 = (void *)swift_allocObject(&unk_1005DD128, 40LL, 7LL);
        v141[2] = v139;
        v141[3] = v140;
        v141[4] = v117;
        swift_retain(v117);
        swift_retain(v139);
        uint64_t v142 = sub_1001B37E8(v138, (uint64_t)&unk_1006510A8, (uint64_t)v141);
        swift_release(v142);
        swift_unknownObjectRelease(v134);
        swift_release(v148);
        swift_release(v117);
        (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v135, v137);
        (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v154, v151);
        sub_10018709C(v227);
        v184(v159, v156);
        (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v169, v164);
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v210, v204);
        v226(v220, v216);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v179 + 32))(v174, v199, v189);
LABEL_16:
        uint64_t v44 = *(void *)(v1 + 736);
        uint64_t v45 = *(void *)(v1 + 728);
        uint64_t v46 = *(void *)(v1 + 704);
        uint64_t v47 = *(void *)(v1 + 680);
        uint64_t v48 = *(void *)(v1 + 672);
        uint64_t v49 = *(void *)(v1 + 648);
        uint64_t v50 = *(void *)(v1 + 640);
        uint64_t v51 = *(void *)(v1 + 616);
        uint64_t v52 = *(void *)(v1 + 592);
        uint64_t v143 = *(void *)(v1 + 584);
        uint64_t v146 = *(void *)(v1 + 576);
        uint64_t v149 = *(void *)(v1 + 552);
        uint64_t v152 = *(void *)(v1 + 544);
        uint64_t v155 = *(void *)(v1 + 520);
        uint64_t v157 = *(void *)(v1 + 496);
        uint64_t v160 = *(void *)(v1 + 464);
        uint64_t v162 = *(void *)(v1 + 456);
        uint64_t v167 = *(void *)(v1 + 448);
        uint64_t v172 = *(void *)(v1 + 440);
        uint64_t v177 = *(void *)(v1 + 416);
        uint64_t v182 = *(void *)(v1 + 408);
        uint64_t v187 = *(void *)(v1 + 400);
        uint64_t v192 = *(void *)(v1 + 368);
        uint64_t v197 = *(void *)(v1 + 360);
        uint64_t v202 = *(void *)(v1 + 352);
        uint64_t v207 = *(void *)(v1 + 344);
        uint64_t v213 = *(void *)(v1 + 336);
        uint64_t v219 = *(void *)(v1 + 312);
        uint64_t v223 = *(void *)(v1 + 304);
        uint64_t v228 = *(void *)(v1 + 272);
        swift_task_dealloc(*(void *)(v1 + 744));
        swift_task_dealloc(v44);
        swift_task_dealloc(v45);
        swift_task_dealloc(v46);
        swift_task_dealloc(v47);
        swift_task_dealloc(v48);
        swift_task_dealloc(v49);
        swift_task_dealloc(v50);
        swift_task_dealloc(v51);
        swift_task_dealloc(v52);
        swift_task_dealloc(v143);
        swift_task_dealloc(v146);
        swift_task_dealloc(v149);
        swift_task_dealloc(v152);
        swift_task_dealloc(v155);
        swift_task_dealloc(v157);
        swift_task_dealloc(v160);
        swift_task_dealloc(v162);
        swift_task_dealloc(v167);
        swift_task_dealloc(v172);
        swift_task_dealloc(v177);
        swift_task_dealloc(v182);
        swift_task_dealloc(v187);
        swift_task_dealloc(v192);
        swift_task_dealloc(v197);
        swift_task_dealloc(v202);
        swift_task_dealloc(v207);
        swift_task_dealloc(v213);
        swift_task_dealloc(v219);
        swift_task_dealloc(v223);
        swift_task_dealloc(v228);
        return (*(uint64_t (**)(void))(v1 + 8))();
      }

      v100(*(void *)(v1 + 312), *(void *)(v1 + 280));
      uint64_t v101 = v91(*(void *)(v1 + 336), *(void *)(v1 + 360), *(void *)(v1 + 320));
    }

    else
    {
      v84(*(void *)(v1 + 344), *(void *)(v1 + 320));
      uint64_t v101 = v70(*(void *)(v1 + 336), *(void *)(v1 + 360), *(void *)(v1 + 320));
    }

    uint64_t v102 = (os_log_s *)Logger.logObject.getter(v101);
    os_log_type_t v103 = static os_log_type_t.default.getter();
    BOOL v104 = os_log_type_enabled(v102, v103);
    uint64_t v105 = *(void *)(v1 + 336);
    uint64_t v106 = *(void *)(v1 + 320);
    if (v104)
    {
      uint64_t v107 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v108 = swift_slowAlloc(32LL, -1LL);
      uint64_t v229 = v108;
      *(_DWORD *)uint64_t v107 = 136315138;
      uint64_t v109 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
      uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter(v106, v109);
      unint64_t v112 = v111;
      *(void *)(v1 + 208) = sub_10018CDB4(v110, v111, &v229);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 208, v1 + 216, v107 + 4, v107 + 12);
      swift_bridgeObjectRelease(v112);
      v84(v105, v106);
      _os_log_impl( (void *)&_mh_execute_header,  v102,  v103,  "ClassroomReceive StateMachine PostAccept SKIPPED. {askResult.response: %s}",  v107,  0xCu);
      swift_arrayDestroy(v108, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v108, -1LL, -1LL);
      swift_slowDealloc(v107, -1LL, -1LL);
    }

    else
    {

      v84(v105, v106);
    }

    uint64_t v113 = *(void *)(v1 + 784);
    uint64_t v114 = *(void *)(v1 + 272);
    uint64_t v115 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v114, 1LL, 1LL, v115);
    uint64_t v116 = _s10BaseRunnerC11FinishTokenVMa(0LL);
    swift_retain(v113);
    uint64_t v117 = static Task<>.noThrow(priority:operation:)(v114, &unk_100651098, v113, v116);
    swift_release(v113);
    sub_100187100(v114, &qword_100646560);
    goto LABEL_33;
  }

  uint64_t v85 = (void *)swift_task_alloc(dword_10064682C);
  *(void *)(v1 + 840) = v85;
  *uint64_t v85 = v1;
  v85[1] = sub_100377884;
  return sub_1001D2B28(*(void *)(v1 + 360));
}

uint64_t sub_100377538(uint64_t a1)
{
  int v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "ClassroomReceive StateMachine PreCheck FAILED. Delegate.shouldStart threw and error - returning .error",  v4,  2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v1 + 800);
  uint64_t v5 = *(void *)(v1 + 784);
  uint64_t v6 = *(void *)(v1 + 760);
  uint64_t v52 = *(void *)(v1 + 744);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
  uint64_t v50 = *(void *)(v1 + 712);
  uint64_t v46 = *(void *)(v1 + 680);
  uint64_t v38 = *(void *)(v1 + 664);
  uint64_t v40 = *(void *)(v1 + 656);
  uint64_t v7 = *(void *)(v1 + 632);
  uint64_t v31 = *(void *)(v1 + 624);
  uint64_t v33 = *(void *)(v1 + 648);
  uint64_t v8 = *(void *)(v1 + 592);
  uint64_t v9 = *(void *)(v1 + 560);
  uint64_t v10 = *(void *)(v1 + 432);
  uint64_t v11 = *(void *)(v1 + 440);
  uint64_t v12 = *(void *)(v1 + 424);
  uint64_t v44 = *(void *)(v1 + 328);
  uint64_t v48 = *(void *)(v1 + 320);
  uint64_t v42 = *(void *)(v1 + 224);
  swift_errorRelease(*(void *)(v1 + 816));

  swift_unknownObjectRelease(v6);
  swift_release(v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  sub_10018709C((void *)(v1 + 16));
  v36(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v33, v31);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v46, v40);
  v54(v52, v50);
  (*(void (**)(uint64_t, void, uint64_t))(v44 + 104))( v42,  enum case for SFAirDropReceive.AskResponse.error(_:),  v48);
  uint64_t v13 = *(void *)(v1 + 736);
  uint64_t v14 = *(void *)(v1 + 728);
  uint64_t v15 = *(void *)(v1 + 704);
  uint64_t v16 = *(void *)(v1 + 680);
  uint64_t v17 = *(void *)(v1 + 672);
  uint64_t v18 = *(void *)(v1 + 648);
  uint64_t v19 = *(void *)(v1 + 640);
  uint64_t v20 = *(void *)(v1 + 616);
  uint64_t v21 = *(void *)(v1 + 592);
  uint64_t v23 = *(void *)(v1 + 584);
  uint64_t v24 = *(void *)(v1 + 576);
  uint64_t v25 = *(void *)(v1 + 552);
  uint64_t v26 = *(void *)(v1 + 544);
  uint64_t v27 = *(void *)(v1 + 520);
  uint64_t v28 = *(void *)(v1 + 496);
  uint64_t v29 = *(void *)(v1 + 464);
  uint64_t v30 = *(void *)(v1 + 456);
  uint64_t v32 = *(void *)(v1 + 448);
  uint64_t v34 = *(void *)(v1 + 440);
  uint64_t v35 = *(void *)(v1 + 416);
  uint64_t v37 = *(void *)(v1 + 408);
  uint64_t v39 = *(void *)(v1 + 400);
  uint64_t v41 = *(void *)(v1 + 368);
  uint64_t v43 = *(void *)(v1 + 360);
  uint64_t v45 = *(void *)(v1 + 352);
  uint64_t v47 = *(void *)(v1 + 344);
  uint64_t v49 = *(void *)(v1 + 336);
  uint64_t v51 = *(void *)(v1 + 312);
  uint64_t v53 = *(void *)(v1 + 304);
  uint64_t v55 = *(void *)(v1 + 272);
  swift_task_dealloc(*(void *)(v1 + 744));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  swift_task_dealloc(v55);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100377884()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 752LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 840LL));
  return swift_task_switch(sub_1003778DC, v1, 0LL);
}

uint64_t sub_1003778DC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 328) + 16LL);
  uint64_t v2 = v1(*(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 320));
  os_log_type_t v3 = (os_log_s *)Logger.logObject.getter(v2);
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = *(void *)(v0 + 352);
    uint64_t v6 = *(void *)(v0 + 320);
    uint64_t v135 = *(void *)(v0 + 328);
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v8 = swift_slowAlloc(32LL, -1LL);
    uint64_t v142 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v9 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter(v6, v9);
    unint64_t v12 = v11;
    *(void *)(v0 + 2swift_weakDestroy(v0 + 16) = sub_10018CDB4(v10, v11, &v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 216, v0 + 224, v7 + 4, v7 + 12);
    swift_bridgeObjectRelease(v12);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
    v13(v5, v6);
    _os_log_impl( (void *)&_mh_execute_header,  v3,  v4,  "ClassroomReceive StateMachine PreAccept END {response: %s",  v7,  0xCu);
    swift_arrayDestroy(v8, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
    uint64_t v14 = *(void *)(v0 + 352);
    uint64_t v15 = *(void *)(v0 + 320);
    uint64_t v16 = *(void *)(v0 + 328);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }

  uint64_t v17 = *(void *)(v0 + 344);
  uint64_t v18 = *(void *)(v0 + 320);
  uint64_t v19 = *(void *)(v0 + 328);
  v1(v17, *(void *)(v0 + 360), v18);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 88))(v17, v18);
  uint64_t v21 = *(void *)(v0 + 344);
  if (v20 == enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    uint64_t v22 = *(void *)(v0 + 304);
    uint64_t v23 = *(void *)(v0 + 312);
    uint64_t v24 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 288);
    (*(void (**)(void, void))(*(void *)(v0 + 328) + 96LL))( *(void *)(v0 + 344),  *(void *)(v0 + 320));
    uint64_t v26 = v21 + *(int *)(sub_100183098(&qword_100646590) + 48);
    uint64_t v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32);
    v139(v23, v21, v24);
    uint64_t v27 = type metadata accessor for SFAirDropReceive.AcceptContext(0LL);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8LL))(v26, v27);
    (*(void (**)(uint64_t, void, uint64_t))(v25 + 104))( v22,  enum case for SFAirDropReceive.ItemDestination.noItem(_:),  v24);
    uint64_t v28 = sub_100183F14( &qword_100646840,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
    char v29 = dispatch thunk of static Equatable.== infix(_:_:)(v23, v22, v24, v28);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v30(v22, v24);
    if ((v29 & 1) == 0)
    {
      uint64_t v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 832);
      uint64_t v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 824);
      uint64_t v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
      uint64_t v100 = *(void *)(v0 + 496);
      uint64_t v122 = *(void *)(v0 + 488);
      uint64_t v125 = *(void *)(v0 + 784);
      uint64_t v119 = *(void *)(v0 + 480);
      uint64_t v136 = v30;
      uint64_t v48 = *(void *)(v0 + 472);
      uint64_t v108 = v48;
      uint64_t v85 = *(void *)(v0 + 416);
      uint64_t v49 = *(void *)(v0 + 400);
      uint64_t v116 = *(void *)(v0 + 392);
      uint64_t v50 = *(void *)(v0 + 376);
      uint64_t v94 = *(void *)(v0 + 384);
      uint64_t v97 = v50;
      uint64_t v52 = *(void *)(v0 + 304);
      uint64_t v51 = *(void *)(v0 + 312);
      uint64_t v105 = v52;
      uint64_t v53 = *(void *)(v0 + 288);
      uint64_t v113 = *(void *)(v0 + 296);
      uint64_t v54 = *(void *)(v0 + 272);
      uint64_t v55 = *(void *)(v0 + 280);
      uint64_t v88 = *(void *)(v0 + 240);
      uint64_t v45 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v54, 1LL, 1LL, v45);
      v91(v49, v85, v50);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v52, v51, v55);
      v110(v100, v88, v48);
      uint64_t v56 = *(unsigned __int8 *)(v94 + 80);
      uint64_t v57 = (v56 + 24) & ~v56;
      uint64_t v58 = *(unsigned __int8 *)(v53 + 80);
      uint64_t v59 = (v116 + v58 + v57) & ~v58;
      uint64_t v60 = *(unsigned __int8 *)(v119 + 80);
      uint64_t v61 = (v113 + v60 + v59) & ~v60;
      uint64_t v62 = swift_allocObject(&unk_1005DD150, v61 + v122, v56 | v58 | v60 | 7);
      *(void *)(v62 + swift_weakDestroy(v0 + 16) = v125;
      v130(v62 + v57, v49, v97);
      v139(v62 + v59, v105, v55);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 32))(v62 + v61, v100, v108);
      uint64_t v63 = _s10BaseRunnerC11FinishTokenVMa(0LL);
      swift_retain(v125);
      uint64_t v47 = static Task<>.noThrow(priority:operation:)(v54, &unk_1006510B8, v62, v63);
      swift_release(v62);
      sub_100187100(v54, &qword_100646560);
      v136(v51, v55);
      goto LABEL_13;
    }

    v30(*(void *)(v0 + 312), *(void *)(v0 + 280));
  }

  else
  {
    v13(*(void *)(v0 + 344), *(void *)(v0 + 320));
  }

  uint64_t v31 = v1(*(void *)(v0 + 336), *(void *)(v0 + 360), *(void *)(v0 + 320));
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v35 = *(void *)(v0 + 336);
  uint64_t v36 = *(void *)(v0 + 320);
  if (v34)
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v38 = swift_slowAlloc(32LL, -1LL);
    uint64_t v142 = v38;
    *(_DWORD *)uint64_t v37 = 136315138;
    uint64_t v39 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter(v36, v39);
    unint64_t v42 = v41;
    *(void *)(v0 + 208) = sub_10018CDB4(v40, v41, &v142);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v37 + 4, v37 + 12);
    swift_bridgeObjectRelease(v42);
    v13(v35, v36);
    _os_log_impl( (void *)&_mh_execute_header,  v32,  v33,  "ClassroomReceive StateMachine PostAccept SKIPPED. {askResult.response: %s}",  v37,  0xCu);
    swift_arrayDestroy(v38, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1LL, -1LL);
    swift_slowDealloc(v37, -1LL, -1LL);
  }

  else
  {

    v13(v35, v36);
  }

  uint64_t v43 = *(void *)(v0 + 784);
  uint64_t v44 = *(void *)(v0 + 272);
  uint64_t v45 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v44, 1LL, 1LL, v45);
  uint64_t v46 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  swift_retain(v43);
  uint64_t v47 = static Task<>.noThrow(priority:operation:)(v44, &unk_100651098, v43, v46);
  swift_release(v43);
  sub_100187100(v44, &qword_100646560);
LABEL_13:
  uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v0 + 800);
  uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v0 + 792);
  uint64_t v86 = *(void *)(v0 + 784);
  uint64_t v64 = *(void *)(v0 + 760);
  uint64_t v133 = *(void *)(v0 + 712);
  uint64_t v137 = *(void *)(v0 + 744);
  uint64_t v131 = *(void *)(v0 + 680);
  uint64_t v123 = *(void *)(v0 + 664);
  uint64_t v128 = *(void *)(v0 + 656);
  uint64_t v103 = *(void *)(v0 + 624);
  uint64_t v106 = *(void *)(v0 + 648);
  uint64_t v98 = *(void *)(v0 + 592);
  uint64_t v101 = *(void *)(v0 + 632);
  uint64_t v92 = *(void *)(v0 + 440);
  uint64_t v95 = *(void *)(v0 + 560);
  uint64_t v83 = *(void *)(v0 + 432);
  uint64_t v65 = *(void *)(v0 + 416);
  uint64_t v89 = *(void *)(v0 + 424);
  uint64_t v67 = *(void *)(v0 + 376);
  uint64_t v66 = *(void *)(v0 + 384);
  uint64_t v126 = *(void *)(v0 + 360);
  uint64_t v120 = *(void *)(v0 + 320);
  uint64_t v68 = *(void *)(v0 + 272);
  uint64_t v111 = *(void *)(v0 + 224);
  uint64_t v114 = *(void *)(v0 + 328);
  type metadata accessor for TaskPriority(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v68, 1LL, 1LL, v45);
  uint64_t v69 = static AirDropActor.shared;
  uint64_t v70 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v71 = (void *)swift_allocObject(&unk_1005DD128, 40LL, 7LL);
  v71[2] = v69;
  v71[3] = v70;
  v71[4] = v47;
  swift_retain(v47);
  swift_retain(v69);
  uint64_t v72 = sub_1001B37E8(v68, (uint64_t)&unk_1006510A8, (uint64_t)v71);
  swift_release(v72);
  swift_unknownObjectRelease(v64);
  swift_release(v86);
  swift_release(v47);
  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v92, v89);
  sub_10018709C((void *)(v0 + 16));
  v117(v98, v95);
  (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v106, v103);
  (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v131, v128);
  v140(v137, v133);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 32))(v111, v126, v120);
  uint64_t v73 = *(void *)(v0 + 736);
  uint64_t v74 = *(void *)(v0 + 728);
  uint64_t v75 = *(void *)(v0 + 704);
  uint64_t v76 = *(void *)(v0 + 680);
  uint64_t v77 = *(void *)(v0 + 672);
  uint64_t v78 = *(void *)(v0 + 648);
  uint64_t v79 = *(void *)(v0 + 640);
  uint64_t v80 = *(void *)(v0 + 616);
  uint64_t v81 = *(void *)(v0 + 592);
  uint64_t v84 = *(void *)(v0 + 584);
  uint64_t v87 = *(void *)(v0 + 576);
  uint64_t v90 = *(void *)(v0 + 552);
  uint64_t v93 = *(void *)(v0 + 544);
  uint64_t v96 = *(void *)(v0 + 520);
  uint64_t v99 = *(void *)(v0 + 496);
  uint64_t v102 = *(void *)(v0 + 464);
  uint64_t v104 = *(void *)(v0 + 456);
  uint64_t v107 = *(void *)(v0 + 448);
  uint64_t v109 = *(void *)(v0 + 440);
  uint64_t v112 = *(void *)(v0 + 416);
  uint64_t v115 = *(void *)(v0 + 408);
  uint64_t v118 = *(void *)(v0 + 400);
  uint64_t v121 = *(void *)(v0 + 368);
  uint64_t v124 = *(void *)(v0 + 360);
  uint64_t v127 = *(void *)(v0 + 352);
  uint64_t v129 = *(void *)(v0 + 344);
  uint64_t v132 = *(void *)(v0 + 336);
  uint64_t v134 = *(void *)(v0 + 312);
  uint64_t v138 = *(void *)(v0 + 304);
  uint64_t v141 = *(void *)(v0 + 272);
  swift_task_dealloc(*(void *)(v0 + 744));
  swift_task_dealloc(v73);
  swift_task_dealloc(v74);
  swift_task_dealloc(v75);
  swift_task_dealloc(v76);
  swift_task_dealloc(v77);
  swift_task_dealloc(v78);
  swift_task_dealloc(v79);
  swift_task_dealloc(v80);
  swift_task_dealloc(v81);
  swift_task_dealloc(v84);
  swift_task_dealloc(v87);
  swift_task_dealloc(v90);
  swift_task_dealloc(v93);
  swift_task_dealloc(v96);
  swift_task_dealloc(v99);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v107);
  swift_task_dealloc(v109);
  swift_task_dealloc(v112);
  swift_task_dealloc(v115);
  swift_task_dealloc(v118);
  swift_task_dealloc(v121);
  swift_task_dealloc(v124);
  swift_task_dealloc(v127);
  swift_task_dealloc(v129);
  swift_task_dealloc(v132);
  swift_task_dealloc(v134);
  swift_task_dealloc(v138);
  swift_task_dealloc(v141);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003782CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000LL) == 0) {
    __asm { BR              X9 }
  }

  __break(1u);
  JUMPOUT(0x100378414LL);
}

int64_t sub_100378448(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0LL;
    }
    if (v2 >= v3) {
      return a2;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_10037848C()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100650F68);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100650F68);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_10037851C(uint64_t a1)
{
  __int128 v1 = *(_OWORD *)(a1 + 32);
  v4[0] = *(_OWORD *)(a1 + 16);
  v4[1] = v1;
  uint64_t v2 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v4);
  return SFAirDrop.PermissionRequest.id.getter(v2);
}

uint64_t sub_100378560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[31] = a3;
  _BYTE v4[32] = v3;
  v4[29] = a1;
  v4[30] = a2;
  uint64_t v5 = sub_100183098(&qword_100646560);
  v4[33] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  v4[34] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[35] = v7;
  v4[36] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  v4[37] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[38] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[39] = swift_task_alloc(v10);
  v4[40] = swift_task_alloc(v10);
  uint64_t v11 = _s6RunnerC19PreAcceptRunResultsVMa(0LL);
  v4[41] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[42] = v12;
  uint64_t v13 = *(void *)(v12 + 64);
  v4[43] = v13;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v4[44] = swift_task_alloc(v14);
  v4[45] = swift_task_alloc(v14);
  v4[46] = swift_task_alloc(v14);
  v4[47] = swift_task_alloc(v14);
  v4[48] = swift_task_alloc(v14);
  uint64_t v15 = sub_100183098(&qword_100649D40);
  v4[49] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  v4[50] = v16;
  v4[51] = swift_task_alloc((*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100183098(&qword_100656490);
  v4[52] = swift_task_alloc((*(void *)(*(void *)(v17 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100183098(&qword_100649E10);
  v4[53] = swift_task_alloc((*(void *)(*(void *)(v18 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100183098(&qword_100650C70);
  v4[54] = swift_task_alloc((*(void *)(*(void *)(v19 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  v4[55] = v20;
  uint64_t v21 = *(void *)(v20 - 8);
  v4[56] = v21;
  v4[57] = swift_task_alloc((*(void *)(v21 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = type metadata accessor for SFAirDrop.DisplayPriority(0LL);
  v4[58] = v22;
  uint64_t v23 = *(void *)(v22 - 8);
  v4[59] = v23;
  v4[60] = swift_task_alloc((*(void *)(v23 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v4[61] = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  v4[62] = v25;
  v4[63] = swift_task_alloc((*(void *)(v25 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = type metadata accessor for UUID(0LL);
  v4[64] = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  v4[65] = v27;
  v4[66] = swift_task_alloc((*(void *)(v27 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v4[67] = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  v4[68] = v29;
  unint64_t v30 = (*(void *)(v29 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[69] = swift_task_alloc(v30);
  v4[70] = swift_task_alloc(v30);
  v4[71] = swift_task_alloc(v30);
  uint64_t v31 = type metadata accessor for SFAirDropClient.Identifier(0LL);
  v4[72] = v31;
  uint64_t v32 = *(void *)(v31 - 8);
  v4[73] = v32;
  unint64_t v33 = (*(void *)(v32 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[74] = swift_task_alloc(v33);
  v4[75] = swift_task_alloc(v33);
  v4[76] = swift_task_alloc(v33);
  uint64_t v34 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v4[77] = v34;
  uint64_t v35 = *(void *)(v34 - 8);
  v4[78] = v35;
  v4[79] = swift_task_alloc((*(void *)(v35 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = type metadata accessor for Date(0LL);
  v4[80] = v36;
  uint64_t v37 = *(void *)(v36 - 8);
  v4[81] = v37;
  unint64_t v38 = (*(void *)(v37 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v4[82] = swift_task_alloc(v38);
  v4[83] = swift_task_alloc(v38);
  uint64_t v39 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  v4[84] = v39;
  uint64_t v40 = *(void *)(v39 - 8);
  v4[85] = v40;
  v4[86] = swift_task_alloc((*(void *)(v40 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = type metadata accessor for Logger(0LL);
  v4[87] = v41;
  uint64_t v42 = *(void *)(v41 - 8);
  v4[88] = v42;
  uint64_t v43 = *(void *)(v42 + 64);
  v4[89] = v43;
  unint64_t v44 = (v43 + 15) & 0xFFFFFFFFFFFFFFF0LL;
  v4[90] = swift_task_alloc(v44);
  v4[91] = swift_task_alloc(v44);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v45 = static AirDropActor.shared;
  v4[92] = static AirDropActor.shared;
  return swift_task_switch(sub_100378938, v45, 0LL);
}

uint64_t sub_100378938()
{
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 680);
  uint64_t v3 = *(void *)(v0 + 672);
  uint64_t v4 = SFAirDropReceive.AskRequest.id.getter();
  uint64_t v5 = SFAirDrop.TransferIdentifier.stringValue.getter(v4);
  uint64_t v7 = (const char *)v6;
  uint64_t v8 = sub_10037C5B0(8LL, v5, v6);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  swift_bridgeObjectRelease(v7);
  uint64_t v15 = static String._fromSubstring(_:)(v8, v10, v12, v14);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease(v14);
  v18._countAndFlagsBits = v15;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease((const char *)v17);
  Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100505BA0LL,  0x2E706F7244726941LL,  0xE800000000000000LL);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v20 = static Date.now.getter(v19);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Receive StateMachine PreChecks START", v23, 2u);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v24 = *(void *)(v0 + 256);

  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v24 + 16, v25);
  *(void *)(v0 + 744) = Strong;
  if (Strong)
  {
    uint64_t v27 = *(void *)(v0 + 632);
    uint64_t v28 = *(void *)(v0 + 624);
    uint64_t v29 = *(void *)(v0 + 616);
    uint64_t v30 = SFAirDropReceive.AskRequest.type.getter(Strong);
    SFAirDrop.TransferType.isOnlyExchange.getter(v30);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    *(void *)(v0 + 752) = v31;
    v31(v27, v29);
    uint64_t v72 = (uint64_t (*)(void))((char *)&dword_100651040 + dword_100651040);
    uint64_t v32 = (void *)swift_task_alloc(unk_100651044);
    *(void *)(v0 + 760) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_100378DD0;
    return v72(*(void *)(v0 + 248));
  }

  else
  {
    uint64_t v34 = (os_log_s *)Logger.logObject.getter(0LL);
    os_log_type_t v35 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v34,  v35,  "Receive StateMachine PreChecks FAILED. Delegate is nil - returning .error",  v36,  2u);
      swift_slowDealloc(v36, -1LL, -1LL);
    }

    uint64_t v37 = *(void *)(v0 + 728);
    uint64_t v38 = *(void *)(v0 + 704);
    uint64_t v39 = *(void *)(v0 + 696);
    uint64_t v40 = *(void *)(v0 + 664);
    uint64_t v41 = *(void *)(v0 + 648);
    uint64_t v42 = *(void *)(v0 + 640);
    uint64_t v43 = *(void *)(v0 + 280);
    uint64_t v73 = *(void *)(v0 + 272);
    uint64_t v44 = *(void *)(v0 + 232);

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    (*(void (**)(uint64_t, void, uint64_t))(v43 + 104))( v44,  enum case for SFAirDropReceive.AskResponse.error(_:),  v73);
    uint64_t v45 = *(void *)(v0 + 720);
    uint64_t v46 = *(void *)(v0 + 688);
    uint64_t v47 = *(void *)(v0 + 664);
    uint64_t v48 = *(void *)(v0 + 656);
    uint64_t v49 = *(void *)(v0 + 632);
    uint64_t v50 = *(void *)(v0 + 608);
    uint64_t v51 = *(void *)(v0 + 600);
    uint64_t v52 = *(void *)(v0 + 592);
    uint64_t v53 = *(void *)(v0 + 568);
    uint64_t v54 = *(void *)(v0 + 560);
    uint64_t v55 = *(void *)(v0 + 552);
    uint64_t v56 = *(void *)(v0 + 528);
    uint64_t v57 = *(void *)(v0 + 504);
    uint64_t v58 = *(void *)(v0 + 480);
    uint64_t v59 = *(void *)(v0 + 456);
    uint64_t v60 = *(void *)(v0 + 432);
    uint64_t v61 = *(void *)(v0 + 424);
    uint64_t v62 = *(void *)(v0 + 416);
    uint64_t v63 = *(void *)(v0 + 408);
    uint64_t v64 = *(void *)(v0 + 384);
    uint64_t v65 = *(void *)(v0 + 376);
    uint64_t v66 = *(void *)(v0 + 368);
    uint64_t v67 = *(void *)(v0 + 360);
    uint64_t v68 = *(void *)(v0 + 352);
    uint64_t v69 = *(void *)(v0 + 320);
    uint64_t v70 = *(void *)(v0 + 312);
    uint64_t v71 = *(void *)(v0 + 288);
    uint64_t v74 = *(void *)(v0 + 264);
    swift_task_dealloc(*(void *)(v0 + 728));
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v67);
    swift_task_dealloc(v68);
    swift_task_dealloc(v69);
    swift_task_dealloc(v70);
    swift_task_dealloc(v71);
    swift_task_dealloc(v74);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100378DD0(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 760LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 736LL);
  *(_BYTE *)(*(void *)v1 + 840LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100378E30, v3, 0LL);
}

uint64_t sub_100378E30(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(*(void *)(v2 + 744) + 56LL, a2);
  uint64_t v4 = *(void *)(v2 + 608);
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = *(void *)(v2 + 600);
    uint64_t v7 = *(void *)(v2 + 584);
    uint64_t v8 = *(void *)(v2 + 576);
    sub_1002C9F94(v6);
    swift_unknownObjectRelease(v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v4, v6, v8);
  }

  else
  {
    (*(void (**)(void, void, void))(*(void *)(v2 + 584) + 104LL))( *(void *)(v2 + 608),  enum case for SFAirDropClient.Identifier.daemon(_:),  *(void *)(v2 + 576));
  }

  unsigned int v37 = *(unsigned __int8 *)(v2 + 840);
  uint64_t v22 = *(void *)(v2 + 664);
  uint64_t v9 = *(void *)(v2 + 656);
  uint64_t v10 = *(void *)(v2 + 648);
  uint64_t v11 = *(void *)(v2 + 640);
  uint64_t v36 = *(void *)(v2 + 608);
  uint64_t v33 = *(void *)(v2 + 584);
  uint64_t v34 = *(void *)(v2 + 592);
  uint64_t v35 = *(void *)(v2 + 576);
  uint64_t v32 = *(void *)(v2 + 528);
  uint64_t v12 = *(void *)(v2 + 504);
  uint64_t v14 = *(void *)(v2 + 488);
  uint64_t v13 = *(void *)(v2 + 496);
  uint64_t v15 = *(void *)(v2 + 472);
  uint64_t v23 = *(void *)(v2 + 480);
  uint64_t v24 = *(void *)(v2 + 464);
  uint64_t v25 = *(void *)(v2 + 448);
  uint64_t v27 = *(void *)(v2 + 456);
  uint64_t v28 = *(void *)(v2 + 440);
  uint64_t v29 = *(void *)(v2 + 432);
  uint64_t v30 = *(void *)(v2 + 424);
  uint64_t v31 = *(void *)(v2 + 416);
  uint64_t v16 = *(void *)(v2 + 248);
  uint64_t v17 = *(void *)(v2 + 280);
  uint64_t v26 = *(void *)(v2 + 272);
  (*(void (**)(void))(*(void *)(v2 + 520) + 16LL))();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v22, v11);
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))( v12,  enum case for SFAirDropReceive.Transfer.State.created(_:),  v14);
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))( v23,  enum case for SFAirDrop.DisplayPriority.normal(_:),  v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v27, v16, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v29, 1LL, 1LL, v26);
  uint64_t v18 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v30, 1LL, 1LL, v18);
  uint64_t v19 = type metadata accessor for SFNWInterfaceType(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v31, 1LL, 1LL, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v34, v36, v35);
  SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)( v32,  v9,  v12,  v23,  v27,  v37,  v29,  0LL,  v30,  v31,  v34);
  type metadata accessor for SDAirDropContentHandlerFactory();
  uint64_t v20 = (void *)swift_task_alloc(dword_1006528FC);
  *(void *)(v2 + 768) = v20;
  *uint64_t v20 = v2;
  v20[1] = sub_1003790E0;
  return sub_1003C61C0(v2 + 56, *(void *)(v2 + 568));
}

uint64_t sub_1003790E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 736LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 768LL));
  return swift_task_switch(sub_100379138, v1, 0LL);
}

uint64_t sub_100379138()
{
  uint64_t v1 = (__int128 *)(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v76 = *(void *)(v0 + 728);
    uint64_t v2 = *(void *)(v0 + 720);
    uint64_t v3 = *(void *)(v0 + 704);
    uint64_t v73 = *(void *)(v0 + 696);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 560);
    uint64_t v6 = *(void *)(v0 + 544);
    uint64_t v7 = *(void *)(v0 + 536);
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v82 = v5;
    uint64_t v79 = *(void **)(v0 + 240);
    sub_1001CE0D0(v1, v0 + 16);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(void *)(v0 + 776) = v9;
    v9(v5, v4, v7);
    sub_10019A6C4(v0 + 16, v0 + 96);
    uint64_t v12 = v8 + 32;
    uint64_t v10 = *(void **)(v8 + 32);
    uint64_t v11 = *(void **)(v12 + 8);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    *(void *)(v0 + 784) = v13;
    v13(v2, v76, v73);
    uint64_t v14 = _s6RunnerCMa_0(0LL);
    swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    id v15 = v79;
    id v16 = v11;
    id v17 = v10;
    uint64_t v18 = sub_10036ECBC(v82, (void *)(v0 + 96), v15, v16, v17, v2);
    *(void *)(v0 + 792) = v18;

    uint64_t v19 = SFAirDropReceive.AskRequest.contactIdentifier.getter();
    if (v20)
    {
      uint64_t v21 = v19;
      uint64_t v22 = v20;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong(*(void *)(v0 + 744) + 56LL, v20);
      if (Strong)
      {
        uint64_t v24 = Strong;
        uint64_t v25 = Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService;
        swift_beginAccess( Strong + OBJC_IVAR____TtC16DaemoniOSLibrary16SDAirDropService_nearFieldService,  v0 + 176,  0LL,  0LL);
        sub_10019A6C4(v25, v0 + 136);
        uint64_t v26 = *(void *)(v0 + 160);
        uint64_t v27 = *(void *)(v0 + 168);
        sub_10019A708((void *)(v0 + 136), v26);
        char v28 = (*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t))(v27 + 104))(v21, v22, v26, v27);
        sub_10018709C((void *)(v0 + 136));
        swift_unknownObjectRelease(v24);
        swift_bridgeObjectRelease(v22);
      }

      else
      {
        swift_bridgeObjectRelease(v22);
        char v28 = 0;
      }

      *(_BYTE *)(v18 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine6Runner_delegateCanAutoAccept) = v28 & 1;
    }

    uint64_t v51 = *(void *)(v0 + 536);
    uint64_t v52 = *(void *)(v18 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_subject);
    *(void *)(v0 + 2swift_weakDestroy(v0 + 16) = v52;
    swift_retain(v52);
    uint64_t v53 = sub_100183098(&qword_1006563B0);
    unint64_t v54 = sub_10037C8FC();
    SFNoThrowAsyncSequence.init<A>(_:)(v0 + 216, v51, v53, v54);
    uint64_t v87 = (char *)&dword_100649D38 + dword_100649D38;
    uint64_t v55 = (void *)swift_task_alloc(unk_100649D3C);
    *(void *)(v0 + 800) = v55;
    *uint64_t v55 = v0;
    v55[1] = sub_1003796B0;
    return ((uint64_t (*)(void, void))v87)(*(void *)(v0 + 568), *(void *)(v0 + 408));
  }

  else
  {
    uint64_t v29 = sub_100187100((uint64_t)v1, &qword_100651048);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Receive StateMachine PreChecks FAILED. Mixed types - returning .mixedTypes",  v32,  2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }

    uint64_t v33 = *(void *)(v0 + 744);
    uint64_t v80 = *(void *)(v0 + 704);
    uint64_t v83 = *(void *)(v0 + 696);
    uint64_t v85 = *(void *)(v0 + 728);
    uint64_t v34 = *(void *)(v0 + 648);
    uint64_t v67 = *(void *)(v0 + 640);
    uint64_t v69 = *(void *)(v0 + 664);
    uint64_t v35 = *(void *)(v0 + 608);
    uint64_t v36 = *(void *)(v0 + 584);
    uint64_t v37 = *(void *)(v0 + 576);
    uint64_t v38 = *(void *)(v0 + 568);
    uint64_t v39 = *(void *)(v0 + 544);
    uint64_t v40 = *(void *)(v0 + 536);
    uint64_t v74 = *(void *)(v0 + 280);
    uint64_t v77 = *(void *)(v0 + 272);
    uint64_t v71 = *(void *)(v0 + 232);

    swift_unknownObjectRelease(v33);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v69, v67);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v85, v83);
    (*(void (**)(uint64_t, void, uint64_t))(v74 + 104))( v71,  enum case for SFAirDropReceive.AskResponse.mixedTypes(_:),  v77);
    uint64_t v41 = *(void *)(v0 + 720);
    uint64_t v42 = *(void *)(v0 + 688);
    uint64_t v43 = *(void *)(v0 + 664);
    uint64_t v44 = *(void *)(v0 + 656);
    uint64_t v45 = *(void *)(v0 + 632);
    uint64_t v46 = *(void *)(v0 + 608);
    uint64_t v47 = *(void *)(v0 + 600);
    uint64_t v48 = *(void *)(v0 + 592);
    uint64_t v49 = *(void *)(v0 + 568);
    uint64_t v56 = *(void *)(v0 + 560);
    uint64_t v57 = *(void *)(v0 + 552);
    uint64_t v58 = *(void *)(v0 + 528);
    uint64_t v59 = *(void *)(v0 + 504);
    uint64_t v60 = *(void *)(v0 + 480);
    uint64_t v61 = *(void *)(v0 + 456);
    uint64_t v62 = *(void *)(v0 + 432);
    uint64_t v63 = *(void *)(v0 + 424);
    uint64_t v64 = *(void *)(v0 + 416);
    uint64_t v65 = *(void *)(v0 + 408);
    uint64_t v66 = *(void *)(v0 + 384);
    uint64_t v68 = *(void *)(v0 + 376);
    uint64_t v70 = *(void *)(v0 + 368);
    uint64_t v72 = *(void *)(v0 + 360);
    uint64_t v75 = *(void *)(v0 + 352);
    uint64_t v78 = *(void *)(v0 + 320);
    uint64_t v81 = *(void *)(v0 + 312);
    uint64_t v84 = *(void *)(v0 + 288);
    uint64_t v86 = *(void *)(v0 + 264);
    swift_task_dealloc(*(void *)(v0 + 728));
    swift_task_dealloc(v41);
    swift_task_dealloc(v42);
    swift_task_dealloc(v43);
    swift_task_dealloc(v44);
    swift_task_dealloc(v45);
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    swift_task_dealloc(v48);
    swift_task_dealloc(v49);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v63);
    swift_task_dealloc(v64);
    swift_task_dealloc(v65);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    swift_task_dealloc(v72);
    swift_task_dealloc(v75);
    swift_task_dealloc(v78);
    swift_task_dealloc(v81);
    swift_task_dealloc(v84);
    swift_task_dealloc(v86);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1003796B0(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 800);
  *(void *)(*v2 + 808) = v1;
  swift_task_dealloc(v5);
  uint64_t v6 = *(void *)(v4 + 736);
  if (v1)
  {
    uint64_t v7 = sub_100379B84;
  }

  else
  {
    *(_BYTE *)(v4 + 841) = a1 & 1;
    uint64_t v7 = sub_100379728;
  }

  return swift_task_switch(v7, v6, 0LL);
}

uint64_t sub_100379728(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(v1 + 841);
  uint64_t v3 = Logger.logObject.getter(a1);
  uint64_t v4 = (os_log_s *)v3;
  if (v2 == 1)
  {
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Receive StateMachine PreChecks END", v6, 2u);
      swift_slowDealloc(v6, -1LL, -1LL);
    }

    uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Receive StateMachine PreAccept START", v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    uint64_t v11 = (void *)swift_task_alloc(dword_100650C6C);
    *(void *)(v1 + 8swift_weakDestroy(v0 + 16) = v11;
    *uint64_t v11 = v1;
    v11[1] = sub_100379EBC;
    return sub_100354EBC(*(void *)(v1 + 384));
  }

  else
  {
    os_log_type_t v13 = static os_log_type_t.error.getter(v3);
    if (os_log_type_enabled(v4, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v4,  v13,  "Receive StateMachine PreChecks FAILED. Delegate.shouldStart returned false - returning .decline",  v14,  2u);
      swift_slowDealloc(v14, -1LL, -1LL);
    }

    uint64_t v15 = *(void *)(v1 + 792);
    uint64_t v16 = *(void *)(v1 + 744);
    uint64_t v57 = *(void *)(v1 + 704);
    uint64_t v59 = *(void *)(v1 + 696);
    uint64_t v61 = *(void *)(v1 + 728);
    uint64_t v45 = *(void *)(v1 + 648);
    uint64_t v47 = *(void *)(v1 + 640);
    uint64_t v38 = *(void *)(v1 + 584);
    uint64_t v41 = *(void *)(v1 + 576);
    uint64_t v43 = *(void *)(v1 + 608);
    uint64_t v17 = *(void *)(v1 + 568);
    uint64_t v18 = *(void *)(v1 + 544);
    uint64_t v19 = *(void *)(v1 + 536);
    uint64_t v20 = *(void *)(v1 + 400);
    uint64_t v21 = *(void *)(v1 + 408);
    uint64_t v22 = *(void *)(v1 + 392);
    uint64_t v51 = *(void *)(v1 + 280);
    uint64_t v53 = *(void *)(v1 + 664);
    uint64_t v55 = *(void *)(v1 + 272);
    uint64_t v49 = *(void *)(v1 + 232);

    swift_unknownObjectRelease(v16);
    swift_release(v15);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
    sub_10018709C((void *)(v1 + 16));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v43, v41);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v53, v47);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v61, v59);
    (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))( v49,  enum case for SFAirDropReceive.AskResponse.decline(_:),  v55);
    uint64_t v23 = *(void *)(v1 + 720);
    uint64_t v24 = *(void *)(v1 + 688);
    uint64_t v25 = *(void *)(v1 + 664);
    uint64_t v26 = *(void *)(v1 + 656);
    uint64_t v27 = *(void *)(v1 + 632);
    uint64_t v28 = *(void *)(v1 + 608);
    uint64_t v29 = *(void *)(v1 + 600);
    uint64_t v30 = *(void *)(v1 + 592);
    uint64_t v31 = *(void *)(v1 + 568);
    uint64_t v32 = *(void *)(v1 + 560);
    uint64_t v33 = *(void *)(v1 + 552);
    uint64_t v34 = *(void *)(v1 + 528);
    uint64_t v35 = *(void *)(v1 + 504);
    uint64_t v36 = *(void *)(v1 + 480);
    uint64_t v37 = *(void *)(v1 + 456);
    uint64_t v39 = *(void *)(v1 + 432);
    uint64_t v40 = *(void *)(v1 + 424);
    uint64_t v42 = *(void *)(v1 + 416);
    uint64_t v44 = *(void *)(v1 + 408);
    uint64_t v46 = *(void *)(v1 + 384);
    uint64_t v48 = *(void *)(v1 + 376);
    uint64_t v50 = *(void *)(v1 + 368);
    uint64_t v52 = *(void *)(v1 + 360);
    uint64_t v54 = *(void *)(v1 + 352);
    uint64_t v56 = *(void *)(v1 + 320);
    uint64_t v58 = *(void *)(v1 + 312);
    uint64_t v60 = *(void *)(v1 + 288);
    uint64_t v62 = *(void *)(v1 + 264);
    swift_task_dealloc(*(void *)(v1 + 728));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v42);
    swift_task_dealloc(v44);
    swift_task_dealloc(v46);
    swift_task_dealloc(v48);
    swift_task_dealloc(v50);
    swift_task_dealloc(v52);
    swift_task_dealloc(v54);
    swift_task_dealloc(v56);
    swift_task_dealloc(v58);
    swift_task_dealloc(v60);
    swift_task_dealloc(v62);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

uint64_t sub_100379B84(uint64_t a1)
{
  int v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Receive StateMachine PreCheck FAILED. Delegate.shouldStart threw and error - returning .error",  v4,  2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v5 = *(void *)(v1 + 792);
  uint64_t v6 = *(void *)(v1 + 744);
  uint64_t v48 = *(void *)(v1 + 704);
  uint64_t v50 = *(void *)(v1 + 696);
  uint64_t v52 = *(void *)(v1 + 728);
  uint64_t v36 = *(void *)(v1 + 648);
  uint64_t v38 = *(void *)(v1 + 640);
  uint64_t v34 = *(void *)(v1 + 608);
  uint64_t v29 = *(void *)(v1 + 584);
  uint64_t v31 = *(void *)(v1 + 576);
  uint64_t v7 = *(void *)(v1 + 568);
  uint64_t v8 = *(void *)(v1 + 544);
  uint64_t v9 = *(void *)(v1 + 536);
  uint64_t v10 = *(void *)(v1 + 400);
  uint64_t v11 = *(void *)(v1 + 408);
  uint64_t v12 = *(void *)(v1 + 392);
  uint64_t v42 = *(void *)(v1 + 280);
  uint64_t v44 = *(void *)(v1 + 664);
  uint64_t v46 = *(void *)(v1 + 272);
  uint64_t v40 = *(void *)(v1 + 232);
  swift_errorRelease(*(void *)(v1 + 808));

  swift_unknownObjectRelease(v6);
  swift_release(v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  sub_10018709C((void *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v31);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v44, v38);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v52, v50);
  (*(void (**)(uint64_t, void, uint64_t))(v42 + 104))( v40,  enum case for SFAirDropReceive.AskResponse.error(_:),  v46);
  uint64_t v13 = *(void *)(v1 + 720);
  uint64_t v14 = *(void *)(v1 + 688);
  uint64_t v15 = *(void *)(v1 + 664);
  uint64_t v16 = *(void *)(v1 + 656);
  uint64_t v17 = *(void *)(v1 + 632);
  uint64_t v18 = *(void *)(v1 + 608);
  uint64_t v19 = *(void *)(v1 + 600);
  uint64_t v20 = *(void *)(v1 + 592);
  uint64_t v21 = *(void *)(v1 + 568);
  uint64_t v23 = *(void *)(v1 + 560);
  uint64_t v24 = *(void *)(v1 + 552);
  uint64_t v25 = *(void *)(v1 + 528);
  uint64_t v26 = *(void *)(v1 + 504);
  uint64_t v27 = *(void *)(v1 + 480);
  uint64_t v28 = *(void *)(v1 + 456);
  uint64_t v30 = *(void *)(v1 + 432);
  uint64_t v32 = *(void *)(v1 + 424);
  uint64_t v33 = *(void *)(v1 + 416);
  uint64_t v35 = *(void *)(v1 + 408);
  uint64_t v37 = *(void *)(v1 + 384);
  uint64_t v39 = *(void *)(v1 + 376);
  uint64_t v41 = *(void *)(v1 + 368);
  uint64_t v43 = *(void *)(v1 + 360);
  uint64_t v45 = *(void *)(v1 + 352);
  uint64_t v47 = *(void *)(v1 + 320);
  uint64_t v49 = *(void *)(v1 + 312);
  uint64_t v51 = *(void *)(v1 + 288);
  uint64_t v53 = *(void *)(v1 + 264);
  swift_task_dealloc(*(void *)(v1 + 728));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v35);
  swift_task_dealloc(v37);
  swift_task_dealloc(v39);
  swift_task_dealloc(v41);
  swift_task_dealloc(v43);
  swift_task_dealloc(v45);
  swift_task_dealloc(v47);
  swift_task_dealloc(v49);
  swift_task_dealloc(v51);
  swift_task_dealloc(v53);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100379EBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 736LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 816LL));
  return swift_task_switch(sub_100379F14, v1, 0LL);
}

uint64_t sub_100379F14()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 368);
  sub_1001A4B84(v1, *(void *)(v0 + 376), _s6RunnerC19PreAcceptRunResultsVMa);
  uint64_t v3 = sub_1001A4B84(v1, v2, _s6RunnerC19PreAcceptRunResultsVMa);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 504);
    uint64_t v7 = *(void *)(v0 + 488);
    os_log_type_t v147 = v5;
    uint64_t v8 = *(void *)(v0 + 376);
    uint64_t v141 = *(void *)(v0 + 368);
    uint64_t v144 = *(void *)(v0 + 496);
    uint64_t v9 = *(void *)(v0 + 272);
    uint64_t v10 = swift_slowAlloc(22LL, -1LL);
    uint64_t v151 = swift_slowAlloc(64LL, -1LL);
    uint64_t v155 = v151;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter(v9, v11);
    uint64_t v14 = (const char *)v13;
    *(void *)(v0 + 200) = sub_10018CDB4(v12, v13, &v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 200, v0 + 208, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v14);
    uint64_t v15 = sub_1001A4BC8(v8, _s6RunnerC19PreAcceptRunResultsVMa);
    *(_WORD *)(v10 + 12) = 2080;
    SFAirDropReceive.Transfer.state.getter(v15);
    uint64_t v16 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter(v7, v16);
    uint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v6, v7);
    *(void *)(v0 + 208) = sub_10018CDB4(v17, (unint64_t)v19, &v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 208, v0 + 216, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease(v19);
    sub_1001A4BC8(v141, _s6RunnerC19PreAcceptRunResultsVMa);
    _os_log_impl( (void *)&_mh_execute_header,  v4,  v147,  "Receive StateMachine PreAccept END {response: %s, transfer.state: %s}",  (uint8_t *)v10,  0x16u);
    swift_arrayDestroy(v151, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v151, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  else
  {
    uint64_t v21 = *(void *)(v0 + 368);
    uint64_t v20 = *(void *)(v0 + 376);

    sub_1001A4BC8(v20, _s6RunnerC19PreAcceptRunResultsVMa);
    sub_1001A4BC8(v21, _s6RunnerC19PreAcceptRunResultsVMa);
  }

  uint64_t v22 = *(void *)(v0 + 384);
  uint64_t v24 = *(void *)(v0 + 280);
  uint64_t v23 = *(void *)(v0 + 288);
  uint64_t v25 = *(void *)(v0 + 272);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 824) = v26;
  v26(v23, v22, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v24 + 88))(v23, v25) != enum case for SFAirDropReceive.AskResponse.accept(_:))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 280) + 8LL))(*(void *)(v0 + 288), *(void *)(v0 + 272));
    goto LABEL_9;
  }

  uint64_t v148 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 776);
  uint64_t v27 = *(void *)(v0 + 568);
  uint64_t v28 = *(void *)(v0 + 552);
  uint64_t v29 = *(void *)(v0 + 536);
  uint64_t v30 = *(void *)(v0 + 312);
  uint64_t v31 = *(void *)(v0 + 320);
  uint64_t v32 = *(void *)(v0 + 296);
  uint64_t v33 = *(void *)(v0 + 304);
  uint64_t v34 = *(void *)(v0 + 288);
  (*(void (**)(uint64_t, void))(*(void *)(v0 + 280) + 96LL))(v34, *(void *)(v0 + 272));
  uint64_t v35 = v34 + *(int *)(sub_100183098(&qword_100646590) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v31, v34, v32);
  uint64_t v36 = type metadata accessor for SFAirDropReceive.AcceptContext(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8LL))(v35, v36);
  (*(void (**)(uint64_t, void, uint64_t))(v33 + 104))( v30,  enum case for SFAirDropReceive.ItemDestination.noItem(_:),  v32);
  uint64_t v37 = sub_100183F14( &qword_100646840,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.ItemDestination,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.ItemDestination);
  LOBYTE(v31) = dispatch thunk of static Equatable.== infix(_:_:)(v31, v30, v32, v37);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v38(v30, v32);
  uint64_t v39 = v148(v28, v27, v29);
  uint64_t v152 = v38;
  if ((v31 & 1) == 0)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 544) + 8LL))(*(void *)(v0 + 552), *(void *)(v0 + 536));
    goto LABEL_14;
  }

  uint64_t v149 = *(void (**)(uint64_t, uint64_t))(v0 + 752);
  uint64_t v40 = *(void *)(v0 + 632);
  uint64_t v41 = *(void *)(v0 + 616);
  uint64_t v42 = *(void *)(v0 + 552);
  uint64_t v43 = *(void *)(v0 + 544);
  uint64_t v44 = *(void *)(v0 + 536);
  uint64_t v46 = *(void *)(v0 + 448);
  uint64_t v45 = *(void *)(v0 + 456);
  uint64_t v47 = *(void *)(v0 + 440);
  uint64_t v48 = SFAirDropReceive.Transfer.askRequest.getter(v39);
  SFAirDropReceive.AskRequest.type.getter(v48);
  uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  char v50 = SFAirDrop.TransferType.isOnlyExchange.getter(v49);
  v149(v40, v41);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  if ((v50 & 1) != 0)
  {
LABEL_14:
    uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
    uint64_t v66 = *(void *)(v0 + 728);
    uint64_t v67 = *(void *)(v0 + 720);
    uint64_t v68 = *(void *)(v0 + 704);
    uint64_t v69 = *(void *)(v0 + 696);
    uint64_t v70 = *(void *)(v0 + 384);
    uint64_t v71 = *(void *)(v0 + 360);
    uint64_t v120 = v71;
    uint64_t v123 = *(void *)(v0 + 712);
    uint64_t v72 = *(void *)(v0 + 336);
    uint64_t v138 = *(void *)(v0 + 320);
    uint64_t v132 = *(void *)(v0 + 792);
    uint64_t v135 = *(void *)(v0 + 296);
    uint64_t v73 = *(void *)(v0 + 264);
    uint64_t v126 = *(void *)(v0 + 344);
    uint64_t v129 = *(void **)(v0 + 240);
    uint64_t v74 = type metadata accessor for TaskPriority(0LL);
    uint64_t v142 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56LL);
    uint64_t v145 = v74;
    v142(v73, 1LL, 1LL, v74);
    v65(v67, v66, v69);
    sub_1001A4B84(v70, v71, _s6RunnerC19PreAcceptRunResultsVMa);
    uint64_t v75 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v76 = (v75 + 16) & ~v75;
    unint64_t v77 = (v123 + v76 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v78 = *(unsigned __int8 *)(v72 + 80);
    uint64_t v79 = (v78 + v77 + 8) & ~v78;
    unint64_t v80 = (v126 + v79 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v81 = swift_allocObject(&unk_1005DD100, v80 + 8, v75 | v78 | 7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v81 + v76, v67, v69);
    *(void *)(v81 + v77) = v132;
    sub_10037CB1C(v120, v81 + v79);
    *(void *)(v81 + v80) = v129;
    uint64_t v82 = _s10BaseRunnerC11FinishTokenVMa(0LL);
    id v83 = v129;
    swift_retain(v132);
    uint64_t v84 = static Task<>.noThrow(priority:operation:)(v73, &unk_100651080, v81, v82);
    swift_release(v81);
    sub_100187100(v73, &qword_100646560);
    v152(v138, v135);
    uint64_t v153 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 824);
    uint64_t v103 = *(void *)(v0 + 744);
    uint64_t v104 = *(void *)(v0 + 792);
    uint64_t v136 = *(void *)(v0 + 696);
    uint64_t v139 = *(void *)(v0 + 728);
    uint64_t v130 = *(void *)(v0 + 664);
    uint64_t v133 = *(void *)(v0 + 704);
    uint64_t v121 = *(void *)(v0 + 648);
    uint64_t v124 = *(void *)(v0 + 640);
    uint64_t v114 = *(void *)(v0 + 576);
    uint64_t v116 = *(void *)(v0 + 608);
    uint64_t v110 = *(void *)(v0 + 568);
    uint64_t v112 = *(void *)(v0 + 584);
    uint64_t v106 = *(void *)(v0 + 544);
    uint64_t v108 = *(void *)(v0 + 536);
    uint64_t v85 = *(void *)(v0 + 400);
    uint64_t v86 = *(void *)(v0 + 408);
    uint64_t v88 = *(void *)(v0 + 384);
    uint64_t v87 = *(void *)(v0 + 392);
    uint64_t v89 = *(void *)(v0 + 264);
    uint64_t v127 = *(void *)(v0 + 272);
    uint64_t v118 = *(void *)(v0 + 232);
    v142(v89, 1LL, 1LL, v145);
    uint64_t v90 = static AirDropActor.shared;
    uint64_t v91 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
    uint64_t v92 = (void *)swift_allocObject(&unk_1005DD0D8, 40LL, 7LL);
    v92[2] = v90;
    v92[3] = v91;
    v92[4] = v84;
    swift_retain(v84);
    swift_retain(v90);
    uint64_t v93 = sub_1001B37E8(v89, (uint64_t)&unk_100651070, (uint64_t)v92);
    swift_release(v93);
    swift_unknownObjectRelease(v103);
    swift_release(v104);
    swift_release(v84);
    (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v86, v87);
    sub_10018709C((void *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v110, v108);
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v116, v114);
    (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v130, v124);
    (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v139, v136);
    v153(v118, v88, v127);
    sub_1001A4BC8(v88, _s6RunnerC19PreAcceptRunResultsVMa);
    uint64_t v94 = *(void *)(v0 + 720);
    uint64_t v95 = *(void *)(v0 + 688);
    uint64_t v96 = *(void *)(v0 + 664);
    uint64_t v97 = *(void *)(v0 + 656);
    uint64_t v98 = *(void *)(v0 + 632);
    uint64_t v99 = *(void *)(v0 + 608);
    uint64_t v100 = *(void *)(v0 + 600);
    uint64_t v101 = *(void *)(v0 + 592);
    uint64_t v102 = *(void *)(v0 + 568);
    uint64_t v105 = *(void *)(v0 + 560);
    uint64_t v107 = *(void *)(v0 + 552);
    uint64_t v109 = *(void *)(v0 + 528);
    uint64_t v111 = *(void *)(v0 + 504);
    uint64_t v113 = *(void *)(v0 + 480);
    uint64_t v115 = *(void *)(v0 + 456);
    uint64_t v117 = *(void *)(v0 + 432);
    uint64_t v119 = *(void *)(v0 + 424);
    uint64_t v122 = *(void *)(v0 + 416);
    uint64_t v125 = *(void *)(v0 + 408);
    uint64_t v128 = *(void *)(v0 + 384);
    uint64_t v131 = *(void *)(v0 + 376);
    uint64_t v134 = *(void *)(v0 + 368);
    uint64_t v137 = *(void *)(v0 + 360);
    uint64_t v140 = *(void *)(v0 + 352);
    uint64_t v143 = *(void *)(v0 + 320);
    uint64_t v146 = *(void *)(v0 + 312);
    uint64_t v150 = *(void *)(v0 + 288);
    uint64_t v154 = *(void *)(v0 + 264);
    swift_task_dealloc(*(void *)(v0 + 728));
    swift_task_dealloc(v94);
    swift_task_dealloc(v95);
    swift_task_dealloc(v96);
    swift_task_dealloc(v97);
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    swift_task_dealloc(v105);
    swift_task_dealloc(v107);
    swift_task_dealloc(v109);
    swift_task_dealloc(v111);
    swift_task_dealloc(v113);
    swift_task_dealloc(v115);
    swift_task_dealloc(v117);
    swift_task_dealloc(v119);
    swift_task_dealloc(v122);
    swift_task_dealloc(v125);
    swift_task_dealloc(v128);
    swift_task_dealloc(v131);
    swift_task_dealloc(v134);
    swift_task_dealloc(v137);
    swift_task_dealloc(v140);
    swift_task_dealloc(v143);
    swift_task_dealloc(v146);
    swift_task_dealloc(v150);
    swift_task_dealloc(v154);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  v152(*(void *)(v0 + 320), *(void *)(v0 + 296));
LABEL_9:
  uint64_t v51 = sub_1001A4B84(*(void *)(v0 + 384), *(void *)(v0 + 352), _s6RunnerC19PreAcceptRunResultsVMa);
  uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
  os_log_type_t v53 = static os_log_type_t.default.getter();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v55 = *(void *)(v0 + 352);
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 272);
    uint64_t v57 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v58 = swift_slowAlloc(32LL, -1LL);
    uint64_t v155 = v58;
    *(_DWORD *)uint64_t v57 = 136315138;
    uint64_t v59 = sub_100183F14( &qword_100650B18,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.AskResponse,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.AskResponse);
    uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter(v56, v59);
    uint64_t v62 = (const char *)v61;
    *(void *)(v0 + 224) = sub_10018CDB4(v60, v61, &v155);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 224, v0 + 232, v57 + 4, v57 + 12);
    swift_bridgeObjectRelease(v62);
    sub_1001A4BC8(v55, _s6RunnerC19PreAcceptRunResultsVMa);
    _os_log_impl( (void *)&_mh_execute_header,  v52,  v53,  "Receive StateMachine PostAccept SKIPPED. {preResults.response: %s}",  v57,  0xCu);
    swift_arrayDestroy(v58, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1LL, -1LL);
    swift_slowDealloc(v57, -1LL, -1LL);
  }

  else
  {

    sub_1001A4BC8(v55, _s6RunnerC19PreAcceptRunResultsVMa);
  }

  uint64_t v63 = (void *)swift_task_alloc(dword_10065619C);
  *(void *)(v0 + 832) = v63;
  *uint64_t v63 = v0;
  v63[1] = sub_10037A9AC;
  return sub_100452094();
}

uint64_t sub_10037A9AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 736LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 832LL));
  return swift_task_switch(sub_10037AA04, v1, 0LL);
}

uint64_t sub_10037AA04()
{
  uint64_t v1 = *(void *)(v0 + 792);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = type metadata accessor for TaskPriority(0LL);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL);
  v4(v2, 1LL, 1LL, v3);
  uint64_t v5 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  swift_retain(v1);
  uint64_t v6 = static Task<>.noThrow(priority:operation:)(v2, &unk_100651060, v1, v5);
  swift_release(v1);
  sub_100187100(v2, &qword_100646560);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 824);
  uint64_t v27 = *(void *)(v0 + 744);
  uint64_t v29 = *(void *)(v0 + 792);
  uint64_t v57 = *(void *)(v0 + 728);
  uint64_t v53 = *(void *)(v0 + 704);
  uint64_t v55 = *(void *)(v0 + 696);
  uint64_t v51 = *(void *)(v0 + 664);
  uint64_t v45 = *(void *)(v0 + 648);
  uint64_t v47 = *(void *)(v0 + 640);
  uint64_t v39 = *(void *)(v0 + 576);
  uint64_t v41 = *(void *)(v0 + 608);
  uint64_t v35 = *(void *)(v0 + 568);
  uint64_t v37 = *(void *)(v0 + 584);
  uint64_t v31 = *(void *)(v0 + 544);
  uint64_t v33 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 400);
  uint64_t v8 = *(void *)(v0 + 408);
  uint64_t v9 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 392);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v49 = *(void *)(v0 + 272);
  uint64_t v43 = *(void *)(v0 + 232);
  v4(v11, 1LL, 1LL, v3);
  uint64_t v12 = static AirDropActor.shared;
  uint64_t v13 = sub_100183F14( (unint64_t *)&qword_100656410,  (uint64_t (*)(uint64_t))type metadata accessor for AirDropActor,  (uint64_t)&protocol conformance descriptor for AirDropActor);
  uint64_t v14 = (void *)swift_allocObject(&unk_1005DD0D8, 40LL, 7LL);
  v14[2] = v12;
  v14[3] = v13;
  v14[4] = v6;
  swift_retain(v6);
  swift_retain(v12);
  uint64_t v15 = sub_1001B37E8(v11, (uint64_t)&unk_100651070, (uint64_t)v14);
  swift_release(v15);
  swift_unknownObjectRelease(v27);
  swift_release(v29);
  swift_release(v6);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v10);
  sub_10018709C((void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v35, v33);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v39);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v51, v47);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v57, v55);
  v59(v43, v9, v49);
  sub_1001A4BC8(v9, _s6RunnerC19PreAcceptRunResultsVMa);
  uint64_t v16 = *(void *)(v0 + 720);
  uint64_t v17 = *(void *)(v0 + 688);
  uint64_t v18 = *(void *)(v0 + 664);
  uint64_t v19 = *(void *)(v0 + 656);
  uint64_t v20 = *(void *)(v0 + 632);
  uint64_t v21 = *(void *)(v0 + 608);
  uint64_t v22 = *(void *)(v0 + 600);
  uint64_t v23 = *(void *)(v0 + 592);
  uint64_t v24 = *(void *)(v0 + 568);
  uint64_t v26 = *(void *)(v0 + 560);
  uint64_t v28 = *(void *)(v0 + 552);
  uint64_t v30 = *(void *)(v0 + 528);
  uint64_t v32 = *(void *)(v0 + 504);
  uint64_t v34 = *(void *)(v0 + 480);
  uint64_t v36 = *(void *)(v0 + 456);
  uint64_t v38 = *(void *)(v0 + 432);
  uint64_t v40 = *(void *)(v0 + 424);
  uint64_t v42 = *(void *)(v0 + 416);
  uint64_t v44 = *(void *)(v0 + 408);
  uint64_t v46 = *(void *)(v0 + 384);
  uint64_t v48 = *(void *)(v0 + 376);
  uint64_t v50 = *(void *)(v0 + 368);
  uint64_t v52 = *(void *)(v0 + 360);
  uint64_t v54 = *(void *)(v0 + 352);
  uint64_t v56 = *(void *)(v0 + 320);
  uint64_t v58 = *(void *)(v0 + 312);
  uint64_t v60 = *(void *)(v0 + 288);
  uint64_t v61 = *(void *)(v0 + 264);
  swift_task_dealloc(*(void *)(v0 + 728));
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v26);
  swift_task_dealloc(v28);
  swift_task_dealloc(v30);
  swift_task_dealloc(v32);
  swift_task_dealloc(v34);
  swift_task_dealloc(v36);
  swift_task_dealloc(v38);
  swift_task_dealloc(v40);
  swift_task_dealloc(v42);
  swift_task_dealloc(v44);
  swift_task_dealloc(v46);
  swift_task_dealloc(v48);
  swift_task_dealloc(v50);
  swift_task_dealloc(v52);
  swift_task_dealloc(v54);
  swift_task_dealloc(v56);
  swift_task_dealloc(v58);
  swift_task_dealloc(v60);
  swift_task_dealloc(v61);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037ADE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  void v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  uint64_t v6 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  void v5[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[11] = v7;
  v5[12] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  v5[13] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v5[14] = v9;
  unint64_t v10 = (*(void *)(v9 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[15] = swift_task_alloc(v10);
  v5[16] = swift_task_alloc(v10);
  uint64_t v11 = sub_100183098(&qword_1006467E8);
  v5[17] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v5[18] = v12;
  v5[19] = swift_task_alloc((*(void *)(v12 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100183098(&qword_1006457D8);
  v5[20] = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  v5[21] = v14;
  v5[22] = swift_task_alloc((*(void *)(v14 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  v5[23] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  _BYTE v5[24] = v16;
  unint64_t v17 = (*(void *)(v16 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[25] = swift_task_alloc(v17);
  v5[26] = swift_task_alloc(v17);
  v5[27] = swift_task_alloc(v17);
  v5[28] = swift_task_alloc(v17);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v18 = static AirDropActor.shared;
  v5[29] = static AirDropActor.shared;
  return swift_task_switch(sub_10037AF60, v18, 0LL);
}

uint64_t sub_10037AF60(uint64_t a1)
{
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(a1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Receive StateMachine PostAccept START", v4, 2u);
    swift_slowDealloc(v4, -1LL, -1LL);
  }

  uint64_t v6 = v1[21];
  uint64_t v5 = v1[22];
  uint64_t v7 = v1[20];
  uint64_t v8 = v1[9];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))( v5,  v8 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAirDropReceiveHandler_transferContinuation,  v7);
  SFProgressContinuation.task.getter(v7);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v9 = (uint64_t **)swift_task_alloc(dword_100650B0C);
  v1[30] = (uint64_t)v9;
  *uint64_t v9 = v1;
  v9[1] = (uint64_t *)sub_10037B080;
  return sub_10035982C(v1[28], v1[8]);
}

uint64_t sub_10037B080()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232LL);
  uint64_t v3 = *(void *)(*(void *)v0 + 144LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 152LL);
  uint64_t v4 = *(void *)(*(void *)v0 + 136LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 240LL));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return swift_task_switch(sub_10037B0F4, v1, 0LL);
}

uint64_t sub_10037B0F4(uint64_t a1)
{
  uint64_t v2 = v1[16];
  uint64_t v3 = v1[13];
  uint64_t v4 = v1[14];
  SFAirDropReceive.Transfer.state.getter(a1);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v2, v3);
  if (v5 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
  {
    uint64_t v6 = v1[16];
    (*(void (**)(uint64_t, void))(v1[14] + 96LL))(v6, v1[13]);
    uint64_t v7 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
    v1[31] = v7;
    *(void *)&double v8 = swift_bridgeObjectRelease((const char *)*(void *)(v6 + v7[16] + 8)).n128_u64[0];
    *(void *)&double v9 = swift_bridgeObjectRelease((const char *)*(void *)(v6 + v7[20]), v8).n128_u64[0];
    *(void *)&double v10 = swift_bridgeObjectRelease((const char *)*(void *)(v6 + v7[24]), v9).n128_u64[0];
    swift_bridgeObjectRelease(*(const char **)(v6 + v7[28]), v10);
    uint64_t v11 = (void *)swift_task_alloc(dword_100654E5C);
    v1[32] = v11;
    *uint64_t v11 = v1;
    v11[1] = sub_10037B328;
    uint64_t v12 = 0LL;
  }

  else if (v5 == enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
  {
    uint64_t v13 = v1[16];
    uint64_t v15 = v1[11];
    uint64_t v14 = v1[12];
    uint64_t v16 = v1[10];
    (*(void (**)(uint64_t, void))(v1[14] + 96LL))(v13, v1[13]);
    uint64_t v17 = sub_100183098(&qword_100649750);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v13 + *(int *)(v17 + 48), v16);
    uint64_t v18 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
    uint64_t v19 = swift_allocError(v16, v18, 0LL, 0LL);
    v1[33] = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v20, v14, v16);
    uint64_t v21 = (void *)swift_task_alloc(dword_100654E5C);
    v1[34] = v21;
    void *v21 = v1;
    v21[1] = sub_10037B5DC;
    uint64_t v12 = v19;
  }

  else
  {
    uint64_t v22 = type metadata accessor for CancellationError(0LL);
    uint64_t v23 = sub_100183F14( &qword_100646848,  (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError,  (uint64_t)&protocol conformance descriptor for CancellationError);
    uint64_t v24 = swift_allocError(v22, v23, 0LL, 0LL);
    v1[35] = v24;
    CancellationError.init()();
    uint64_t v25 = (void *)swift_task_alloc(dword_100654E5C);
    v1[36] = v25;
    void *v25 = v1;
    v25[1] = sub_10037B89C;
    uint64_t v12 = v24;
  }

  return sub_100420620(v12);
}

uint64_t sub_10037B328()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 256LL));
  return swift_task_switch(sub_10037B380, v1, 0LL);
}

uint64_t sub_10037B380()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0[24] + 16LL))(v0[27], v0[28], v0[23]);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v24 = v0[27];
    uint64_t v25 = v0[24];
    uint64_t v26 = v0[23];
    uint64_t v4 = v0[15];
    uint64_t v23 = v0[14];
    uint64_t v5 = v0[13];
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v27 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    SFAirDropReceive.Transfer.state.getter(v7);
    uint64_t v8 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter(v5, v8);
    uint64_t v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v4, v5);
    v0[4] = sub_10018CDB4(v9, (unint64_t)v11, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 4, v0 + 5, v6 + 4, v6 + 12);
    __n128 v12 = swift_bridgeObjectRelease(v11);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
    v13(v24, v26, v12);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Receive StateMachine PostAccept END {transfer.state: %s}",  v6,  0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  else
  {
    uint64_t v14 = v0[27];
    uint64_t v15 = v0[23];
    uint64_t v16 = v0[24];

    uint64_t v13 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 8);
    ((void (*)(uint64_t, uint64_t))v13)(v14, v15);
  }

  uint64_t v17 = v0[16];
  uint64_t v18 = v17 + *(int *)(v0[31] + 48LL);
  uint64_t v19 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(v18, v19);
  uint64_t v20 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8LL))(v17, v20);
  v0[37] = v13;
  uint64_t v21 = (void *)swift_task_alloc(dword_10065619C);
  v0[38] = v21;
  void *v21 = v0;
  v21[1] = sub_10037BB20;
  return sub_100452094();
}

uint64_t sub_10037B5DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 272LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10037B63C, v2, 0LL);
}

uint64_t sub_10037B63C()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0[24] + 16LL))(v0[26], v0[28], v0[23]);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.error.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v23 = v0[24];
    uint64_t v24 = v0[23];
    uint64_t v4 = v0[15];
    uint64_t v21 = v0[26];
    uint64_t v22 = v0[14];
    uint64_t v5 = v0[13];
    uint64_t v25 = v0[11];
    uint64_t v26 = v0[10];
    uint64_t v27 = v0[12];
    uint64_t v6 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v7 = swift_slowAlloc(32LL, -1LL);
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    SFAirDropReceive.Transfer.state.getter(v7);
    uint64_t v8 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter(v5, v8);
    uint64_t v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v5);
    v0[3] = sub_10018CDB4(v9, (unint64_t)v11, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4, v6 + 4, v6 + 12);
    __n128 v12 = swift_bridgeObjectRelease(v11);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, __n128))(v23 + 8);
    v13(v21, v24, v12);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Receive StateMachine PostAccept FAILED {transfer.state: %s}",  v6,  0xCu);
    swift_arrayDestroy(v7, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1LL, -1LL);
    swift_slowDealloc(v6, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
  }

  else
  {
    uint64_t v15 = v0[11];
    uint64_t v14 = v0[12];
    uint64_t v16 = v0[10];
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, __n128))(v0[24] + 8LL);
    ((void (*)(void, void))v13)(v0[26], v0[23]);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }

  uint64_t v17 = v0[16];
  uint64_t v18 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8LL))(v17, v18);
  v0[37] = v13;
  uint64_t v19 = (void *)swift_task_alloc(dword_10065619C);
  v0[38] = v19;
  void *v19 = v0;
  v19[1] = sub_10037BB20;
  return sub_100452094();
}

uint64_t sub_10037B89C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 280LL);
  uint64_t v2 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 288LL));
  swift_errorRelease(v1);
  return swift_task_switch(sub_10037B8FC, v2, 0LL);
}

uint64_t sub_10037B8FC()
{
  uint64_t v1 = (*(uint64_t (**)(void, void, void))(v0[24] + 16LL))(v0[25], v0[28], v0[23]);
  uint64_t v2 = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v3 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v21 = v0[25];
    uint64_t v23 = v0[24];
    uint64_t v24 = v0[23];
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[15];
    uint64_t v6 = v0[13];
    uint64_t v7 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v25 = v22;
    *(_DWORD *)uint64_t v7 = 136315138;
    SFAirDropReceive.Transfer.state.getter(v22);
    uint64_t v8 = sub_100183F14( &qword_100649D78,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Transfer.State,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Transfer.State);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter(v6, v8);
    uint64_t v11 = v10;
    __n128 v12 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v12(v5, v6);
    v0[2] = sub_10018CDB4(v9, (unint64_t)v11, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3, v7 + 4, v7 + 12);
    __n128 v13 = swift_bridgeObjectRelease(v11);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, __n128))(v23 + 8);
    v14(v21, v24, v13);
    _os_log_impl( (void *)&_mh_execute_header,  v2,  v3,  "Receive StateMachine PostAccept INCOMPLETE {transfer.state: %s}",  v7,  0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  else
  {
    uint64_t v16 = v0[24];
    uint64_t v15 = v0[25];
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[14];

    uint64_t v14 = *(void (**)(uint64_t, uint64_t, __n128))(v16 + 8);
    ((void (*)(uint64_t, uint64_t))v14)(v15, v17);
    __n128 v12 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  }

  v12(v0[16], v0[13]);
  v0[37] = v14;
  uint64_t v19 = (void *)swift_task_alloc(dword_10065619C);
  v0[38] = v19;
  void *v19 = v0;
  v19[1] = sub_10037BB20;
  return sub_100452094();
}

uint64_t sub_10037BB20()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 304LL));
  return swift_task_switch(sub_10037BB78, v1, 0LL);
}

uint64_t sub_10037BB78()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 296);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v13 = *(void *)(v0 + 200);
  uint64_t v14 = *(void *)(v0 + 176);
  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 40);
  *(_BYTE *)(v0 + 312) = 1;
  uint64_t v8 = CurrentValueSubject.send(completion:)(v0 + 312);
  sub_100453320(v8);
  uint64_t v9 = v6 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v7, v9, v10);
  uint64_t v11 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  CurrentValueSubject.value.getter(v11);
  v1(v2, v5);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037BCBC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10037BD24, static AirDropActor.shared, 0LL);
}

uint64_t sub_10037BD24()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  *(_BYTE *)(v0 + 32) = 1;
  uint64_t v3 = CurrentValueSubject.send(completion:)(v0 + 32);
  sub_100453320(v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(v2, v4, v5);
  uint64_t v6 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  CurrentValueSubject.value.getter(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037BDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  uint64_t v7 = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  _OWORD v4[2] = v7;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  void v4[3] = static AirDropActor.shared;
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  void v4[4] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10037BE90;
  return Task<>.value.getter(v7, a4, v6);
}

uint64_t sub_10037BE90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 32LL));
  return swift_task_switch(sub_10037D35C, v1, 0LL);
}

uint64_t sub_10037BEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  void v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  void v5[2] = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  uint64_t v6 = static AirDropActor.shared;
  v5[7] = static AirDropActor.shared;
  return swift_task_switch(sub_10037BF58, v6, 0LL);
}

uint64_t sub_10037BF58(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1006467D8 + dword_1006467D8);
  uint64_t v2 = (void *)swift_task_alloc(unk_1006467DC);
  v1[8] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10037BFC4;
  return v4(v1[4], v1[5]);
}

uint64_t sub_10037BFC4()
{
  uint64_t v1 = *v0;
  uint64_t v4 = *v0;
  swift_task_dealloc(*(void *)(*v0 + 64));
  uint64_t v2 = (void *)swift_task_alloc(dword_10065619C);
  *(void *)(v1 + 72) = v2;
  *uint64_t v2 = v4;
  v2[1] = sub_10037C028;
  return sub_100452094();
}

uint64_t sub_10037C028()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 72LL));
  return swift_task_switch(sub_10037C080, v1, 0LL);
}

uint64_t sub_10037C080()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  *(_BYTE *)(v0 + 80) = 1;
  uint64_t v3 = CurrentValueSubject.send(completion:)(v0 + 80);
  sub_100453320(v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(v2, v4, v5);
  uint64_t v6 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  CurrentValueSubject.value.getter(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037C128(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  void v2[3] = a2;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  v2[4] = static AirDropActor.shared;
  uint64_t v3 = (void *)swift_task_alloc(dword_10065619C);
  v2[5] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10037C1AC;
  return sub_100452094();
}

uint64_t sub_10037C1AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 40LL));
  return swift_task_switch(sub_10037C200, v1, 0LL);
}

uint64_t sub_10037C200()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  *(_BYTE *)(v0 + 48) = 1;
  uint64_t v3 = CurrentValueSubject.send(completion:)(v0 + 48);
  sub_100453320(v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtCC16DaemoniOSLibrary28SDAirDropReceiveStateMachine10BaseRunner_log;
  uint64_t v5 = type metadata accessor for Logger(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(v2, v4, v5);
  uint64_t v6 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  CurrentValueSubject.value.getter(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037C2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = _s10BaseRunnerC11FinishTokenVMa(0LL);
  uint64_t v7 = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  _OWORD v4[2] = v7;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  void v4[3] = static AirDropActor.shared;
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to Task<>.value.getter[1]);
  void v4[4] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10037C36C;
  return Task<>.value.getter(v7, a4, v6);
}

uint64_t sub_10037C36C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 32LL));
  return swift_task_switch(sub_10037C3C0, v1, 0LL);
}

uint64_t sub_10037C3C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_10045419C();
  sub_1001A4BC8(v1, _s10BaseRunnerC11FinishTokenVMa);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037C408()
{
  swift_unknownObjectRelease(*(void *)(v0 + 48));
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for SDAirDropReceiveStateMachine()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary28SDAirDropReceiveStateMachine);
}

uint64_t sub_10037C464(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x10037C4C4LL);
  }

  return ((uint64_t (*)(uint64_t))((char *)&loc_10037C47C + *((int *)qword_10037C4C8 + (a4 >> 62))))(v5);
}

uint64_t sub_10037C4D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_10037C4E8 + *((int *)qword_10037C590 + (a4 >> 62))))();
}

uint64_t sub_10037C4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, unsigned int a3@<W8>)
{
  if (BYTE6(a2) < a1 || a1 < 0)
  {
    __break(1u);
    JUMPOUT(0x10037C588LL);
  }

  return ((uint64_t (*)(void))((char *)&loc_10037C538 + *((int *)qword_10037C5A0 + a3)))();
}

uint64_t sub_10037C5B0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000LL) == 0) {
      uint64_t v5 = a2;
    }
    uint64_t v6 = 7LL;
    if (((a3 >> 60) & ((a2 & 0x800000000000000LL) == 0)) != 0) {
      uint64_t v6 = 11LL;
    }
    uint64_t v7 = v6 | (v5 << 16);
    uint64_t v8 = String.index(_:offsetBy:limitedBy:)(15LL, result, v7, a2, a3);
    if ((v9 & 1) != 0) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = v8;
    }
    return String.subscript.getter(15LL, v10, a2, a3);
  }

  return result;
}

uint64_t sub_10037C638(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10037C6A0, static AirDropActor.shared, 0LL);
}

uint64_t sub_10037C6A0()
{
  uint64_t v1 = SFAirDropReceive.AskRequest.previewImage.getter();
  if (!v1) {
    goto LABEL_4;
  }
  uint64_t v2 = (void *)v1;
  if ((SFAirDropReceive.AskRequest.senderIsMe.getter(v1) & 1) != 0)
  {

LABEL_4:
    if (qword_100644208 != -1) {
      swift_once(&qword_100644208, sub_10037848C);
    }
    uint64_t v3 = type metadata accessor for Logger(0LL);
    uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_100650F68);
    uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v5,  v6,  "Receive StateMachine PreChecks isPreviewSensitive SKIP. No previewImage or senderIsMe",  v7,  2u);
      swift_slowDealloc(v7, -1LL, -1LL);
    }

    return (*(uint64_t (**)(void))(v0 + 8))(0LL);
  }

  if (qword_100644208 != -1) {
    swift_once(&qword_100644208, sub_10037848C);
  }
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_100650F68);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    __n128 v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v15 = v13;
    *(_DWORD *)__n128 v12 = 136315138;
    *(void *)(v0 + sub_100195658(v0 + 16) = sub_10018CDB4(0xD000000000000021LL, 0x8000000100507330LL, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v12 + 4, v12 + 12);
    _os_log_impl( (void *)&_mh_execute_header,  v10,  v11,  "Receive StateMachine PreChecks isPreviewSensitive SKIP {userSafetyMode: %s}",  v12,  0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  return (*(uint64_t (**)(void))(v0 + 8))(0LL);
}

unint64_t sub_10037C8FC()
{
  unint64_t result = qword_100651050;
  if (!qword_100651050)
  {
    uint64_t v1 = sub_100183124(&qword_1006563B0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, &qword_100651050);
  }

  return result;
}

uint64_t sub_10037C948(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_10065105C);
  *(void *)(v2 + sub_100195658(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100195708;
  return sub_10037BCBC(a1, v1);
}

uint64_t sub_10037C9A0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_10065106C);
  *(void *)(v2 + sub_100195658(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_10037BDCC(a1, v4, v5, v6);
}

uint64_t sub_10037CA0C()
{
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v5 = _s6RunnerC19PreAcceptRunResultsVMa(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release(*(void *)(v0 + v4));
  uint64_t v9 = type metadata accessor for SFAirDropReceive.AskResponse(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8LL))(v0 + v7, v9);
  unint64_t v10 = v0 + v7 + *(int *)(v5 + 20);
  uint64_t v11 = type metadata accessor for SFAirDropReceive.Transfer(0LL);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);

  return swift_deallocObject(v0, v8 + 8);
}

uint64_t sub_10037CB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6RunnerC19PreAcceptRunResultsVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037CB60(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Logger(0LL) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8LL;
  uint64_t v7 = *(void *)(_s6RunnerC19PreAcceptRunResultsVMa(0LL) - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = v1 + v8;
  uint64_t v12 = *(void *)(v1 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v13 = (void *)swift_task_alloc(dword_10065107C);
  *(void *)(v2 + sub_100195658(v0 + 16) = v13;
  void *v13 = v2;
  v13[1] = sub_100195708;
  return sub_10037ADE4(a1, v10, v9, v11, v12);
}

uint64_t sub_10037CC34(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc(dword_100651094);
  *(void *)(v2 + sub_100195658(v0 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1001943E8;
  return sub_10037C128(a1, v1);
}

uint64_t sub_10037CC8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1006510A4);
  *(void *)(v2 + sub_100195658(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100195708;
  return sub_10037C2A8(a1, v4, v5, v6);
}

uint64_t sub_10037CCF8()
{
  uint64_t v13 = sub_100183098(&qword_1006457D8);
  uint64_t v1 = *(void *)(v13 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v12 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
  uint64_t v4 = *(void *)(v12 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = type metadata accessor for SFAirDropReceive.AskRequest(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = v9 + *(void *)(v8 + 64);
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v13);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v12);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject(v0, v11);
}

uint64_t sub_10037CDFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100183098(&qword_1006457D8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for SFAirDropReceive.ItemDestination(0LL) - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SFAirDropReceive.AskRequest(0LL) - 8) + 80LL);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc(dword_1006510B4);
  *(void *)(v2 + sub_100195658(v0 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_100195708;
  return sub_10037BEE4(a1, v12, v13, v14, v15);
}

uint64_t sub_10037CED8(uint64_t a1)
{
  __int128 v2 = *(_OWORD *)(a1 + 32);
  v5[0] = *(_OWORD *)(a1 + 16);
  v5[1] = v2;
  uint64_t result = type metadata accessor for SFAirDrop.PermissionRequest(319LL, v5);
  if (v4 <= 0x3F)
  {
    *(void *)&v5[0] = *(void *)(result - 8) + 64LL;
    *((void *)&v5[0] + 1) = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 0LL, 2LL, v5, a1 + 48);
    return 0LL;
  }

  return result;
}

uint64_t *sub_10037CF58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    __int128 v7 = *(_OWORD *)(a3 + 32);
    v12[0] = *(_OWORD *)(a3 + 16);
    v12[1] = v7;
    uint64_t v8 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v12);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
    uint64_t v9 = *(int *)(a3 + 52);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = v10;
  }

  swift_retain(v10);
  return a1;
}

uint64_t sub_10037CFF4(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(_OWORD *)(a2 + 32);
  v7[0] = *(_OWORD *)(a2 + 16);
  v7[1] = v4;
  uint64_t v5 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(a1, v5);
  return swift_release(*(void *)(a1 + *(int *)(a2 + 52)));
}

uint64_t sub_10037D050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a3 + 32);
  v11[0] = *(_OWORD *)(a3 + 16);
  v11[1] = v6;
  uint64_t v7 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = *(void *)(a2 + v8);
  *(void *)(a1 + v8) = v9;
  swift_retain(v9);
  return a1;
}

uint64_t sub_10037D0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a3 + 32);
  v12[0] = *(_OWORD *)(a3 + 16);
  v12[1] = v6;
  uint64_t v7 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24LL))(a1, a2, v7);
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = *(void *)(a2 + v8);
  uint64_t v10 = *(void *)(a1 + v8);
  *(void *)(a1 + v8) = v9;
  swift_retain(v9);
  swift_release(v10);
  return a1;
}

uint64_t sub_10037D144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a3 + 32);
  v9[0] = *(_OWORD *)(a3 + 16);
  v9[1] = v6;
  uint64_t v7 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32LL))(a1, a2, v7);
  *(void *)(a1 + *(int *)(a3 + 52)) = *(void *)(a2 + *(int *)(a3 + 52));
  return a1;
}

uint64_t sub_10037D1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a3 + 32);
  v11[0] = *(_OWORD *)(a3 + 16);
  v11[1] = v6;
  uint64_t v7 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40LL))(a1, a2, v7);
  uint64_t v8 = *(int *)(a3 + 52);
  uint64_t v9 = *(void *)(a1 + v8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_release(v9);
  return a1;
}

uint64_t sub_10037D22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10037D238);
}

uint64_t sub_10037D238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6 = *(_OWORD *)(a3 + 32);
  v11[0] = *(_OWORD *)(a3 + 16);
  v11[1] = v6;
  uint64_t v7 = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v11);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  }
  unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 52));
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10037D2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037D2CC);
}

uint64_t sub_10037D2CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  __int128 v8 = *(_OWORD *)(a4 + 32);
  v11[0] = *(_OWORD *)(a4 + 16);
  v11[1] = v8;
  uint64_t result = type metadata accessor for SFAirDrop.PermissionRequest(0LL, v11);
  uint64_t v10 = *(void *)(result - 8);
  if (*(_DWORD *)(v10 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 52)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SDPermissionRequestTask(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for SDPermissionRequestTask);
}

uint64_t type metadata accessor for SDAirDropContentHandlerContacts()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary31SDAirDropContentHandlerContacts);
}

uint64_t sub_10037D380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerContacts();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + sub_100195658(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_10037D3B8(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x544341544E4F43LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xE700000000000000LL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xE700000000000000LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x544341544E4F43LL;
  v10._object = (void *)0xE700000000000000LL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE700000000000000LL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_10037D5FC(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = sub_100183098(&qword_100650F58);
  v3[6] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_100650F60);
  v3[7] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[8] = v6;
  void v3[9] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SFAirDrop.TransferType(0LL);
  v3[10] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[11] = v8;
  v3[12] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_10037D6B0, 0LL, 0LL);
}

uint64_t sub_10037D6B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = SFAirDropSend.Request.type.getter(a1);
  char v6 = SFAirDrop.TransferType.isOnlyExchange.getter(v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if ((v6 & 1) != 0)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_6:
    uint64_t v14 = *(void *)(v1 + 72);
    uint64_t v15 = *(void *)(v1 + 48);
    swift_task_dealloc(*(void *)(v1 + 96));
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(void *))(v1 + 8))(v8);
  }

  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 48);
  SFAirDropSend.Request.urlsPromise.getter(v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1LL, v9) == 1)
  {
    uint64_t v12 = sub_10037D9FC(*(void *)(v1 + 48));
    uint64_t v13 = SFAirDropSend.Request.urls.getter(v12);
    if (v13)
    {
      uint64_t v8 = (void *)v13;
      goto LABEL_6;
    }

    uint64_t v22 = type metadata accessor for SFAirDropSend.Failure(0LL);
    unint64_t v23 = sub_100264EF8();
    swift_allocError(v22, v23, 0LL, 0LL);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104LL))( v24,  enum case for SFAirDropSend.Failure.badRequest(_:),  v22);
    swift_willThrow(v25);
    uint64_t v26 = *(void *)(v1 + 72);
    uint64_t v27 = *(void *)(v1 + 48);
    swift_task_dealloc(*(void *)(v1 + 96));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  else
  {
    uint64_t v18 = *(void *)(v1 + 24);
    unint64_t v17 = *(void *)(v1 + 32);
    (*(void (**)(void, void, void))(*(void *)(v1 + 64) + 32LL))( *(void *)(v1 + 72),  *(void *)(v1 + 48),  *(void *)(v1 + 56));
    uint64_t v19 = sub_100183098(&qword_100651228);
    uint64_t v20 = swift_allocObject(v19, 48LL, 7LL);
    *(void *)(v1 + 104) = v20;
    *(_OWORD *)(v20 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v20 + 32) = v18;
    *(void *)(v20 + 40) = v17;
    sub_1001A4C04(v18, v17);
    uint64_t v21 = (void *)swift_task_alloc(async function pointer to SFXPCBlock.dynamicallyCall(withArguments:)[1]);
    *(void *)(v1 + 112) = v21;
    void *v21 = v1;
    v21[1] = sub_10037D8C0;
    return SFXPCBlock.dynamicallyCall(withArguments:)(v1 + 16, v20, *(void *)(v1 + 56));
  }

uint64_t sub_10037D8C0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 112);
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(*(const char **)(v2 + 104));
  if (v0) {
    uint64_t v4 = sub_10037D998;
  }
  else {
    uint64_t v4 = sub_10037D92C;
  }
  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_10037D92C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  swift_task_dealloc(*(void *)(v0 + 96));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_10037D998()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_task_dealloc(*(void *)(v0 + 96));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10037D9FC(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100650F58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SDAirDropContentHandlerCalendarEvents()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary37SDAirDropContentHandlerCalendarEvents);
}

uint64_t sub_10037DA5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SDAirDropContentHandlerCalendarEvents();
  uint64_t result = swift_allocObject(v2, 24LL, 7LL);
  *(void *)(result + sub_100195658(v0 + 16) = 0LL;
  *a1 = result;
  return result;
}

void sub_10037DA94(uint64_t a1, char a2)
{
  uint64_t v3 = SFAirDropReceive.AskRequest.files.getter(a1);
  unint64_t v4 = *(void *)(v3 + 16);
  swift_bridgeObjectRelease((const char *)v3);
  uint64_t v5 = sub_100183098((uint64_t *)&unk_100650440);
  uint64_t inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
  *(void *)(inited + 32) = 0x5241444E454C4143LL;
  uint64_t v7 = inited + 32;
  *(void *)(inited + 40) = 0xE800000000000000LL;
  *(void *)(inited + 48) = v4;
  *(void *)&double v8 = swift_bridgeObjectRetain((const char *)0xE800000000000000LL).n128_u64[0];
  swift_bridgeObjectRetain((const char *)inited, v8);
  v9._countAndFlagsBits = 95LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  v10._countAndFlagsBits = 0x5241444E454C4143LL;
  v10._object = (void *)0xE800000000000000LL;
  String.append(_:)(v10);
  swift_bridgeObjectRelease((const char *)0xE800000000000000LL);
  if (v4 > 1)
  {
    v11._countAndFlagsBits = 0x4C4152554C505FLL;
    v11._object = (void *)0xE700000000000000LL;
    String.append(_:)(v11);
  }

  swift_bridgeObjectRelease((const char *)inited);
  if ((a2 & 1) != 0)
  {
    v12._countAndFlagsBits = 0x4C4154495041435FLL;
    v12._object = (void *)0xEC00000044455A49LL;
    String.append(_:)(v12);
  }

  v13._countAndFlagsBits = 0x545845545FLL;
  v13._object = (void *)0xE500000000000000LL;
  String.append(_:)(v13);
  swift_setDeallocating(inited);
  uint64_t v14 = *(void *)(inited + 16);
  uint64_t v15 = sub_100183098(&qword_100646EA0);
  swift_arrayDestroy(v7, v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease((const char *)0xEF524546534E4152LL);
  id v18 = (id)SFLocalizedStringForKey(v16, v17);

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;

    uint64_t v22 = sub_100183098(&qword_1006483E0);
    uint64_t v23 = swift_allocObject(v22, 72LL, 7LL);
    *(_OWORD *)(v23 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
    *(void *)(v23 + 56) = &type metadata for Int;
    *(void *)(v23 + 64) = &protocol witness table for Int;
    *(void *)(v23 + 32) = v4;
    static String.localizedStringWithFormat(_:_:)(v19, v21, v23);
    *(void *)&double v24 = swift_bridgeObjectRelease(v21).n128_u64[0];
    swift_bridgeObjectRelease((const char *)v23, v24);
  }

  else
  {
    __break(1u);
  }

uint64_t *sub_10037DCD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    Swift::String v9 = (char *)a1 + v8;
    Swift::String v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for CodableError(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v9, v10, v11);
  }

  return a1;
}

uint64_t sub_10037DD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for CodableError(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
}

uint64_t sub_10037DDDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CodableError(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10037DE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CodableError(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10037DED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CodableError(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10037DF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for CodableError(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10037DFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10037DFD8);
}

uint64_t sub_10037DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = type metadata accessor for CodableError(0LL);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10037E04C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10037E058);
}

uint64_t sub_10037E058(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = type metadata accessor for CodableError(0LL);
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t _s14descr1005DD3D1C12ErrorRequestVMa(uint64_t a1)
{
  uint64_t result = qword_100651378;
  if (!qword_100651378) {
    return swift_getSingletonMetadata(a1, &_s14descr1005DD3D1C12ErrorRequestVMn);
  }
  return result;
}

uint64_t sub_10037E110(uint64_t a1)
{
  uint64_t result = type metadata accessor for SFAirDrop.TransferIdentifier(319LL);
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for CodableError(319LL);
    if (v4 <= 0x3F)
    {
      v5[1] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 2LL, v5, a1 + 16);
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_10037E194(char *a1, char *a2)
{
  return sub_1003EF74C(*a1, *a2);
}

Swift::Int sub_10037E1A0()
{
  int v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1) {
    uint64_t v2 = 0x726F727245LL;
  }
  else {
    uint64_t v2 = 0x726566736E617254LL;
  }
  if (v1) {
    unint64_t v3 = 0xE500000000000000LL;
  }
  else {
    unint64_t v3 = 0xEA00000000004449LL;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10037E220(uint64_t a1)
{
  if (*v1) {
    uint64_t v2 = 0x726F727245LL;
  }
  else {
    uint64_t v2 = 0x726566736E617254LL;
  }
  if (*v1) {
    unint64_t v3 = 0xE500000000000000LL;
  }
  else {
    unint64_t v3 = 0xEA00000000004449LL;
  }
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_10037E27C()
{
  int v1 = *v0;
  Hasher.init(_seed:)(v5);
  if (v1) {
    uint64_t v2 = 0x726F727245LL;
  }
  else {
    uint64_t v2 = 0x726566736E617254LL;
  }
  if (v1) {
    unint64_t v3 = 0xE500000000000000LL;
  }
  else {
    unint64_t v3 = 0xEA00000000004449LL;
  }
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10037E2F8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v3._countAndFlagsBits = *a1;
  unint64_t v4 = (void *)a1[1];
  v3._object = v4;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D1800, v3);
  uint64_t result = swift_bridgeObjectRelease(v4);
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_10037E354(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x726566736E617254LL;
  if (*v1) {
    uint64_t v2 = 0x726F727245LL;
  }
  unint64_t v3 = 0xEA00000000004449LL;
  if (*v1) {
    unint64_t v3 = 0xE500000000000000LL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10037E394()
{
  if (*v0) {
    return 0x726F727245LL;
  }
  else {
    return 0x726566736E617254LL;
  }
}

uint64_t sub_10037E3D0@<X0>(Swift::String string@<0:X0, 8:X1>, char *a2@<X8>)
{
  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005D1800, v3);
  uint64_t result = swift_bridgeObjectRelease(object);
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_10037E430(uint64_t a1)
{
  unint64_t v2 = sub_10037EB4C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10037E458(uint64_t a1)
{
  unint64_t v2 = sub_10037EB4C();
  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10037E480()
{
  uint64_t v0 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v1 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v0, v1);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 2108704LL;
  v4._object = (void *)0xE300000000000000LL;
  String.append(_:)(v4);
  _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  uint64_t v5 = type metadata accessor for CodableError(0LL);
  uint64_t v6 = sub_100183F14( &qword_1006513B0,  (uint64_t (*)(uint64_t))&type metadata accessor for CodableError,  (uint64_t)&protocol conformance descriptor for CodableError);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v5, v6);
  uint64_t v8 = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v8);
  return 0xD000000000000010LL;
}

uint64_t sub_10037E5A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100183098(&qword_1006513D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_10019A708(a1, v9);
  unint64_t v11 = sub_10037EB4C();
  dispatch thunk of Encoder.container<A>(keyedBy:)( &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON,  &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON,  v11,  v9,  v10);
  char v20 = 0;
  uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v13 = sub_100183F14( &qword_10064D900,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v20, v5, v12, v13);
  if (!v2)
  {
    uint64_t v14 = v3 + *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
    char v19 = 1;
    uint64_t v15 = type metadata accessor for CodableError(0LL);
    uint64_t v16 = sub_100183F14( &qword_1006513D8,  (uint64_t (*)(uint64_t))&type metadata accessor for CodableError,  (uint64_t)&protocol conformance descriptor for CodableError);
    KeyedEncodingContainer.encode<A>(_:forKey:)(v14, &v19, v5, v15, v16);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10037E724@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v28 = type metadata accessor for CodableError(0LL);
  uint64_t v25 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v29 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v32 = sub_100183098(&qword_1006513B8);
  uint64_t v6 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_10019A708(a1, v12);
  unint64_t v14 = sub_10037EB4C();
  uint64_t v31 = v8;
  uint64_t v15 = v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)( &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON,  &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON,  v14,  v12,  v13);
  if (v15) {
    return sub_10018709C(a1);
  }
  uint64_t v16 = v6;
  uint64_t v17 = (uint64_t)v11;
  uint64_t v18 = a1;
  char v19 = v27;
  uint64_t v20 = v28;
  char v35 = 0;
  uint64_t v21 = sub_100183F14( &qword_10064D8F0,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v29, v30, &v35, v32, v30, v21);
  uint64_t v33 = v4;
  (*(void (**)(uint64_t, void *, uint64_t))(v4 + 32))(v17, v29, v30);
  char v34 = 1;
  uint64_t v22 = sub_100183F14( &qword_1006513C8,  (uint64_t (*)(uint64_t))&type metadata accessor for CodableError,  (uint64_t)&protocol conformance descriptor for CodableError);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v19, v20, &v34, v32, v20, v22);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v32);
  (*(void (**)(uint64_t, void *, uint64_t))(v25 + 32))(v17 + *(int *)(v9 + 20), v19, v20);
  sub_10037EB90(v17, v26);
  sub_10018709C(v18);
  return sub_10037EBD4(v17);
}

uint64_t sub_10037E9F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10037E724(a1, a2);
}

uint64_t sub_10037EA08(void *a1)
{
  return sub_10037E5A0(a1);
}

uint64_t sub_10037EA1C()
{
  v0._object = (void *)0x800000010050C6C0LL;
  v0._countAndFlagsBits = 0xD000000000000010LL;
  String.append(_:)(v0);
  uint64_t v1 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v2 = sub_100183F14( &qword_100647620,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDrop.TransferIdentifier,  (uint64_t)&protocol conformance descriptor for SFAirDrop.TransferIdentifier);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v1, v2);
  object = (const char *)v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 2108704LL;
  v5._object = (void *)0xE300000000000000LL;
  String.append(_:)(v5);
  uint64_t v6 = type metadata accessor for CodableError(0LL);
  uint64_t v7 = sub_100183F14( &qword_1006513B0,  (uint64_t (*)(uint64_t))&type metadata accessor for CodableError,  (uint64_t)&protocol conformance descriptor for CodableError);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  uint64_t v9 = (const char *)v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v9);
  v10._countAndFlagsBits = 0LL;
  v10._object = (void *)0xE000000000000000LL;
  String.append(_:)(v10);
  return 0LL;
}

unint64_t sub_10037EB4C()
{
  unint64_t result = qword_1006513C0;
  if (!qword_1006513C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7B94, &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006513C0);
  }

  return result;
}

uint64_t sub_10037EB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10037EBD4(uint64_t a1)
{
  uint64_t v2 = _s14descr1005DD3D1C12ErrorRequestVMa(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t _s14descr1005DD3D1C12ErrorRequestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_10037EC5C + 4 * byte_1004D7A0D[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10037EC90 + 4 * byte_1004D7A08[v4]))();
}

uint64_t sub_10037EC90(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037EC98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10037ECA0LL);
  }
  return result;
}

uint64_t sub_10037ECAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10037ECB4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 1;
  return result;
}

uint64_t sub_10037ECB8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037ECC0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1005DD3D1C12ErrorRequestV10CodingKeysOMa()
{
  return &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON;
}

unint64_t sub_10037ECE0()
{
  unint64_t result = qword_1006513E0;
  if (!qword_1006513E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7B6C, &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006513E0);
  }

  return result;
}

unint64_t sub_10037ED28()
{
  unint64_t result = qword_1006513E8;
  if (!qword_1006513E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7AA4, &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006513E8);
  }

  return result;
}

unint64_t sub_10037ED70()
{
  unint64_t result = qword_1006513F0;
  if (!qword_1006513F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1004D7ACC, &_s14descr1005DD3D1C12ErrorRequestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1006513F0);
  }

  return result;
}

uint64_t sub_10037EDB4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_1006513F8);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_1006513F8);
  if (qword_100644028 != -1) {
    swift_once(&qword_100644028, sub_10023A59C);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006696D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

id sub_10037EE44()
{
  return sub_10037EE94(_s27GuestModeUnlockRegistrationV18InitialLockContextVMa, (Class *)off_1005C8858);
}

uint64_t sub_10037EE68(uint64_t a1, uint64_t a2)
{
  return sub_10037FF0C( a1,  a2,  (uint64_t)_s27GuestModeUnlockRegistrationV18InitialLockContextVMa,  (uint64_t)off_1005C8858,  (uint64_t (*)(uint64_t, uint64_t))sub_10037EE94);
}

id sub_10037EE94(uint64_t (*a1)(void), Class *a2)
{
  uint64_t v4 = *(int *)(a1(0LL) + 24);
  Swift::String v5 = *(void **)(v2 + v4);
  if (v5)
  {
    id v6 = *(id *)(v2 + v4);
LABEL_5:
    id v8 = v5;
    return v6;
  }

  id result = [objc_allocWithZone(*a2) init];
  if (result)
  {
    *(void *)(v2 + v4) = result;
    id v6 = result;
    Swift::String v5 = 0LL;
    goto LABEL_5;
  }

  __break(1u);
  return result;
}

uint64_t sub_10037EF0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100183098(&qword_1006457E0);
  uint64_t v5 = swift_allocObject(v4, 152LL, 7LL);
  *(_OWORD *)(v5 + sub_100195658(v0 + 16) = xmmword_1004CD550;
  if (qword_100644218 != -1) {
    swift_once(&qword_100644218, LongHash.storage.getter);
  }
  *(void *)(v5 + 56) = &type metadata for SDAuthentication.Operation.CheckLocalSecurityPolicy;
  *(void *)(v5 + 64) = &off_10064ABB8;
  *(void *)(v5 + 96) = &type metadata for SDAuthentication.Operation.IncludeAKSTokenInRegistrationResponseMessage;
  *(void *)(v5 + 104) = &off_10064A9F8;
  *(void *)(v5 + 136) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
  *(void *)(v5 + 144) = &off_10064AC98;
  *a2 = v5;
  id v6 = (int *)_s27GuestModeUnlockRegistrationV17InitialKeyContextVMa(0LL);
  *(uint64_t *)((char *)a2 + v6[6]) = 0LL;
  *((_BYTE *)a2 + v6[7]) = 4;
  if (qword_100644210 != -1) {
    swift_once(&qword_100644210, sub_10037EDB4);
  }
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v8 = sub_100186DE4(v7, (uint64_t)qword_1006513F8);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)unint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Start authentication Key registration", v11, 2u);
    swift_slowDealloc(v11, -1LL, -1LL);
  }

  return sub_1001A4B40(a1, (uint64_t)a2 + v6[5], type metadata accessor for SDAuthenticationSessionMetrics);
}

uint64_t _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100651598, (uint64_t)&_s27GuestModeUnlockRegistrationV17InitialKeyContextVMn);
}

id sub_10037F0C4()
{
  return sub_10037EE94(_s27GuestModeUnlockRegistrationV17InitialKeyContextVMa, (Class *)off_1005C8860);
}

uint64_t sub_10037F0E8(uint64_t a1, uint64_t a2)
{
  return sub_10037FF0C( a1,  a2,  (uint64_t)_s27GuestModeUnlockRegistrationV17InitialKeyContextVMa,  (uint64_t)off_1005C8860,  (uint64_t (*)(uint64_t, uint64_t))sub_10037EE94);
}

void sub_10037F114(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v6 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  __chkstk_darwin(v6);
  uint64_t v40 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100183098(&qword_1006457E0);
  uint64_t v9 = swift_allocObject(v8, 112LL, 7LL);
  *(_OWORD *)(v9 + sub_100195658(v0 + 16) = xmmword_1004CD530;
  if (qword_100644218 != -1) {
    swift_once(&qword_100644218, LongHash.storage.getter);
  }
  *(void *)(v9 + 56) = &type metadata for SDAuthentication.Operation.StepRegisterResponseToken;
  *(void *)(v9 + 64) = &off_10064B1D8;
  *(void *)(v9 + 96) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
  *(void *)(v9 + 104) = &off_10064AC98;
  *a3 = (const char *)v9;
  uint64_t v10 = _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa(0LL);
  uint64_t v11 = *(int *)(v10 + 28);
  *(const char **)((char *)a3 + v11) = 0LL;
  uint64_t v39 = v10;
  *((_BYTE *)a3 + *(int *)(v10 + swift_release(*(void *)(v0 + 32)) = 6;
  if (qword_100644210 != -1) {
    swift_once(&qword_100644210, sub_10037EDB4);
  }
  uint64_t v12 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v12, (uint64_t)qword_1006513F8);
  id v13 = a1;
  unint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v37 = v11;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc(8LL, -1LL);
    uint64_t v38 = v3;
    uint64_t v36 = (void *)v18;
    *(_DWORD *)uint64_t v17 = 138412290;
    id v42 = v13;
    id v19 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v17 + 4, v17 + 12);
    uint64_t v20 = v36;
    *uint64_t v36 = v13;

    _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "Handling authentication registration pairing response: %@",  v17,  0xCu);
    uint64_t v21 = sub_100183098(&qword_1006454E0);
    swift_arrayDestroy(v20, 1LL, v21);
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v22 = v17;
    uint64_t v11 = v37;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
  }

  id v23 = [v13 token];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
    uint64_t v27 = v26;

    uint64_t v28 = v39;
    uint64_t v29 = (uint64_t *)((char *)a3 + *(int *)(v39 + 24));
    uint64_t *v29 = v25;
    v29[1] = v27;
    uint64_t v30 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa(0LL);
    uint64_t v32 = v40;
    uint64_t v31 = v41;
    sub_1001A4B84(v41 + *(int *)(v30 + 20), v40, type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1001A4BC8(v31, _s27GuestModeUnlockRegistrationV18InitialLockContextVMa);
    sub_1001A4B40(v32, (uint64_t)a3 + *(int *)(v28 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
  }

  else
  {
    unint64_t v33 = sub_100187014();
    uint64_t v34 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v33, 0LL, 0LL);
    *(_DWORD *)uint64_t v35 = 10;
    strcpy((char *)(v35 + 8), "Missing token");
    *(_WORD *)(v35 + 22) = -4864;
    swift_willThrow(v34);

    sub_1001A4BC8(v41, _s27GuestModeUnlockRegistrationV18InitialLockContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

id sub_10037F4B8()
{
  return sub_1002ABC70(_s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa, (Class *)off_1005C8848);
}

uint64_t sub_10037F4DC(uint64_t a1, uint64_t a2)
{
  return sub_10037FF0C( a1,  a2,  (uint64_t)_s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa,  (uint64_t)off_1005C8848,  (uint64_t (*)(uint64_t, uint64_t))sub_1002ABC70);
}

void sub_10037F508(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_1006457E0);
  uint64_t v10 = swift_allocObject(v9, 112LL, 7LL);
  *(_OWORD *)(v10 + sub_100195658(v0 + 16) = xmmword_1004CD530;
  if (qword_100644218 != -1) {
    swift_once(&qword_100644218, LongHash.storage.getter);
  }
  *(void *)(v10 + 56) = &type metadata for SDAuthentication.Operation.StepRegistrationCreateSecret;
  *(void *)(v10 + 64) = &off_10064B1B8;
  *(void *)(v10 + 96) = &type metadata for SDAuthentication.Operation.BuildMessageHeader;
  *(void *)(v10 + 104) = &off_10064AC98;
  *a3 = (const char *)v10;
  uint64_t SecretContextVMa = _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa(0LL);
  uint64_t v12 = *(int *)(SecretContextVMa + 28);
  *(const char **)((char *)a3 + v12) = 0LL;
  uint64_t v46 = SecretContextVMa;
  *((_BYTE *)a3 + *(int *)(SecretContextVMa + swift_release(*(void *)(v0 + 32)) = 5;
  if (qword_100644210 != -1) {
    swift_once(&qword_100644210, sub_10037EDB4);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_1006513F8);
  id v14 = a1;
  os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v40 = a3;
    uint64_t v43 = v12;
    uint64_t v44 = a2;
    uint64_t v45 = v3;
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = v42;
    *(_DWORD *)uint64_t v17 = 138412546;
    uint64_t v48 = (uint64_t)v14;
    id v19 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 4, v17 + 12);
    uint64_t v41 = v18;
    *uint64_t v18 = v14;

    *(_WORD *)(v17 + 12) = 2080;
    id v20 = [v19 sessionID];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v24 = v23;
    }

    else
    {
      uint64_t v48 = 0LL;
      uint64_t v49 = (const char *)0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(v49);
      uint64_t v24 = (const char *)0x80000001005046B0LL;
      uint64_t v22 = 0xD000000000000015LL;
    }

    uint64_t v48 = sub_10018CDB4(v22, (unint64_t)v24, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 14, v17 + 22);

    swift_bridgeObjectRelease(v24);
    _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "Received authentication registration create secret: %@ for sessionID %s",  (uint8_t *)v17,  0x16u);
    uint64_t v25 = sub_100183098(&qword_1006454E0);
    uint64_t v26 = v41;
    swift_arrayDestroy(v41, 1LL, v25);
    swift_slowDealloc(v26, -1LL, -1LL);
    uint64_t v27 = v42;
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);

    a2 = v44;
    uint64_t v12 = v43;
    a3 = v40;
  }

  else
  {
  }

  id v28 = [v14 token];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
    uint64_t v32 = v31;

    uint64_t v33 = v46;
    uint64_t v34 = (uint64_t *)((char *)a3 + *(int *)(v46 + 24));
    uint64_t *v34 = v30;
    v34[1] = v32;
    uint64_t v35 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa(0LL);
    uint64_t v36 = v47;
    sub_1001A4B84(a2 + *(int *)(v35 + 20), v47, type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1001A4BC8(a2, _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa);
    sub_1001A4B40(v36, (uint64_t)a3 + *(int *)(v33 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
  }

  else
  {
    unint64_t v37 = sub_100187014();
    uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0LL, 0LL);
    *(_DWORD *)uint64_t v39 = 10;
    strcpy((char *)(v39 + 8), "Missing token");
    *(_WORD *)(v39 + 22) = -4864;
    swift_willThrow(v38);

    sub_1001A4BC8(a2, _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

id sub_10037F9A8()
{
  return sub_1002ABC70(_s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa, (Class *)off_1005C8840);
}

uint64_t sub_10037F9CC(uint64_t a1, uint64_t a2)
{
  return sub_10037FF0C( a1,  a2,  (uint64_t)_s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa,  (uint64_t)off_1005C8840,  (uint64_t (*)(uint64_t, uint64_t))sub_1002ABC70);
}

void sub_10037F9F8(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SDAuthenticationSessionMetrics(0LL);
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100183098(&qword_1006457E0);
  uint64_t v10 = swift_allocObject(v9, 192LL, 7LL);
  *(_OWORD *)(v10 + sub_100195658(v0 + 16) = xmmword_1004CE420;
  if (qword_100644218 != -1) {
    swift_once(&qword_100644218, LongHash.storage.getter);
  }
  *(void *)(v10 + 56) = &type metadata for SDAuthentication.Operation.FinalizeRegistration;
  *(void *)(v10 + 64) = &off_10064B198;
  *(void *)(v10 + 96) = &type metadata for SDAuthentication.Operation.SendConfirmation;
  *(void *)(v10 + 104) = &off_10064B238;
  *(void *)(v10 + 136) = &type metadata for SDAuthentication.Operation.NotifyRegistrationSucceeded;
  *(void *)(v10 + 144) = &off_10064B178;
  *(void *)(v10 + 176) = &type metadata for SDAuthentication.Operation.RecordLastRegistration;
  *(void *)(v10 + 184) = &off_10064B158;
  *a3 = (const char *)v10;
  uint64_t RecordContextVMa = _s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMa(0LL);
  uint64_t v12 = *(int *)(RecordContextVMa + 28);
  *(const char **)((char *)a3 + v12) = 0LL;
  uint64_t v46 = RecordContextVMa;
  *((_BYTE *)a3 + *(int *)(RecordContextVMa + swift_release(*(void *)(v0 + 32)) = 2;
  if (qword_100644210 != -1) {
    swift_once(&qword_100644210, sub_10037EDB4);
  }
  uint64_t v13 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v13, (uint64_t)qword_1006513F8);
  id v14 = a1;
  os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v40 = a3;
    uint64_t v43 = v12;
    uint64_t v44 = a2;
    uint64_t v45 = v3;
    uint64_t v17 = swift_slowAlloc(22LL, -1LL);
    uint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v42 = swift_slowAlloc(32LL, -1LL);
    uint64_t v50 = v42;
    *(_DWORD *)uint64_t v17 = 138412546;
    uint64_t v48 = (uint64_t)v14;
    id v19 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 4, v17 + 12);
    uint64_t v41 = v18;
    *uint64_t v18 = v14;

    *(_WORD *)(v17 + 12) = 2080;
    id v20 = [v19 sessionID];
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      uint64_t v24 = v23;
    }

    else
    {
      uint64_t v22 = 0xD000000000000015LL;
      uint64_t v48 = 0LL;
      uint64_t v49 = (const char *)0xE000000000000000LL;
      _StringGuts.grow(_:)(17LL);
      swift_bridgeObjectRelease(v49);
      uint64_t v24 = (const char *)0x80000001005046B0LL;
    }

    uint64_t v48 = sub_10018CDB4(v22, (unint64_t)v24, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v17 + 14, v17 + 22);

    swift_bridgeObjectRelease(v24);
    _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "Received authentication registration create record: %@ for sessionID %s",  (uint8_t *)v17,  0x16u);
    uint64_t v25 = sub_100183098(&qword_1006454E0);
    uint64_t v26 = v41;
    swift_arrayDestroy(v41, 1LL, v25);
    swift_slowDealloc(v26, -1LL, -1LL);
    uint64_t v27 = v42;
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1LL, -1LL);
    swift_slowDealloc(v17, -1LL, -1LL);

    a2 = v44;
    uint64_t v12 = v43;
    a3 = v40;
  }

  else
  {
  }

  id v28 = [v14 token];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v28);
    uint64_t v32 = v31;

    uint64_t v33 = v46;
    uint64_t v34 = (uint64_t *)((char *)a3 + *(int *)(v46 + 24));
    uint64_t *v34 = v30;
    v34[1] = v32;
    uint64_t v35 = _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa(0LL);
    uint64_t v36 = v47;
    sub_1001A4B84(a2 + *(int *)(v35 + 20), v47, type metadata accessor for SDAuthenticationSessionMetrics);
    sub_1001A4BC8(a2, _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa);
    sub_1001A4B40(v36, (uint64_t)a3 + *(int *)(v33 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
  }

  else
  {
    unint64_t v37 = sub_100187014();
    uint64_t v38 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v37, 0LL, 0LL);
    *(_DWORD *)uint64_t v39 = 10;
    *(void *)(v39 + 8) = 0xD000000000000058LL;
    *(void *)(v39 + sub_100195658(v0 + 16) = 0x800000010050C840LL;
    swift_willThrow(v38);

    sub_1001A4BC8(a2, _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

id sub_10037FEBC()
{
  return sub_1002ABC70(_s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMa, (Class *)off_1005C8838);
}

uint64_t sub_10037FEE0(uint64_t a1, uint64_t a2)
{
  return sub_10037FF0C( a1,  a2,  (uint64_t)_s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMa,  (uint64_t)off_1005C8838,  (uint64_t (*)(uint64_t, uint64_t))sub_1002ABC70);
}

uint64_t sub_10037FF0C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5 = (void *)a5(a3, a4);
  id v6 = [v5 data];

  if (v6)
  {
    uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);

    return v7;
  }

  else
  {
    unint64_t v9 = sub_100187014();
    uint64_t v10 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v9, 0LL, 0LL);
    *(_DWORD *)uint64_t v11 = 10;
    *(void *)(v11 + 8) = 0xD00000000000001ALL;
    *(void *)(v11 + sub_100195658(v0 + 16) = 0x8000000100504230LL;
    return swift_willThrow(v10);
  }

void sub_10037FFD0(void *a1@<X0>, uint64_t a2@<X1>, const char **a3@<X8>)
{
  uint64_t v6 = sub_100183098(&qword_1006457E0);
  uint64_t v7 = swift_allocObject(v6, 152LL, 7LL);
  *(_OWORD *)(v7 + sub_100195658(v0 + 16) = xmmword_1004CD550;
  if (qword_100644218 != -1) {
    swift_once(&qword_100644218, LongHash.storage.getter);
  }
  *(void *)(v7 + 56) = &type metadata for SDAuthentication.Operation.HandleSucceededResult;
  *(void *)(v7 + 64) = &off_10064B218;
  *(void *)(v7 + 96) = &type metadata for SDAuthentication.Operation.NotifyRegistrationSucceeded;
  *(void *)(v7 + 104) = &off_10064B178;
  *(void *)(v7 + 136) = &type metadata for SDAuthentication.Operation.RecordLastRegistration;
  *(void *)(v7 + 144) = &off_10064B158;
  *a3 = (const char *)v7;
  if ([a1 hasSuccess])
  {
    uint64_t v8 = a2 + *(int *)(_s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa(0LL) + 20);
    uint64_t v9 = _s27GuestModeUnlockRegistrationV25HandleConfirmationContextVMa(0LL);
    sub_1001A4B84(v8, (uint64_t)a3 + *(int *)(v9 + 20), type metadata accessor for SDAuthenticationSessionMetrics);
    LOBYTE(v8) = [a1 success];

    sub_1001A4BC8(a2, _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa);
    *((_BYTE *)a3 + *(int *)(v9 + sub_100224FF8(*(void *)(v0 + 16), *(void *)(v0 + 24)) = v8;
  }

  else
  {
    unint64_t v10 = sub_100187014();
    uint64_t v11 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v10, 0LL, 0LL);
    *(_DWORD *)uint64_t v12 = 1;
    *(void *)(v12 + 8) = 0xD000000000000016LL;
    *(void *)(v12 + sub_100195658(v0 + 16) = 0x8000000100504210LL;
    swift_willThrow(v11);

    sub_1001A4BC8(a2, _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa);
    swift_bridgeObjectRelease(*a3);
  }

void sub_10038018C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v118 = a3;
  uint64_t v102 = _s27GuestModeUnlockRegistrationV25HandleConfirmationContextVMa(0LL);
  __chkstk_darwin(v102);
  uint64_t v106 = (const char **)((char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = sub_100183098(&qword_100651628);
  __chkstk_darwin(v5);
  uint64_t v111 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t RecordContextVMa = _s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMa(0LL);
  __chkstk_darwin(RecordContextVMa);
  uint64_t v110 = (const char **)((char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = sub_100183098(&qword_100651630);
  __chkstk_darwin(v8);
  uint64_t v117 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t SecretContextVMa = _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa(0LL);
  uint64_t v109 = *(void *)(SecretContextVMa - 8);
  uint64_t v10 = __chkstk_darwin(SecretContextVMa);
  uint64_t v104 = (uint64_t)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v105 = (uint64_t)&v102 - v13;
  __chkstk_darwin(v12);
  uint64_t v116 = (const char **)((char *)&v102 - v14);
  uint64_t v15 = sub_100183098(&qword_100651638);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa(0LL);
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v114 = (uint64_t)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v115 = (uint64_t)&v102 - v21;
  uint64_t v119 = _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa(0LL);
  uint64_t v113 = *(void *)(v119 - 8);
  uint64_t v22 = __chkstk_darwin(v119);
  uint64_t v107 = (uint64_t)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v108 = (uint64_t)&v102 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (const char **)((char *)&v102 - v26);
  uint64_t v28 = sub_100183098(&qword_100651640);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v102 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v35 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  unint64_t v37 = (char *)&v102 - v36;
  uint64_t v38 = a1;
  sub_10019A6C4(a1, (uint64_t)v124);
  uint64_t v39 = sub_100183098(&qword_1006500D0);
  uint64_t v40 = sub_100183168(0LL, &qword_100651648, off_1005C8860);
  if (swift_dynamicCast(&v125, v124, v39, v40, 6LL))
  {
    uint64_t v41 = v125;
    sub_10019A6C4(v123, (uint64_t)v124);
    uint64_t v42 = sub_100183098(&qword_100645A28);
    int v43 = swift_dynamicCast(v30, v124, v42, v31, 6LL);
    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
    if (v43)
    {
      v44(v30, 0LL, 1LL, v31);
      sub_1001A4B40((uint64_t)v30, (uint64_t)v37, _s27GuestModeUnlockRegistrationV18InitialLockContextVMa);
      sub_1001A4B84((uint64_t)v37, (uint64_t)v35, _s27GuestModeUnlockRegistrationV18InitialLockContextVMa);
      id v45 = v41;
      uint64_t v46 = v122;
      sub_10037F114(v45, (uint64_t)v35, v27);
      if (v46)
      {
        uint64_t v47 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa;
        uint64_t v48 = (uint64_t)v37;
LABEL_21:
        sub_1001A4BC8(v48, v47);

        return;
      }

      uint64_t v87 = v118;
      v118[3] = v119;
      v87[4] = &off_1005DD7C8;
      uint64_t v88 = sub_1001A4B04(v87);
      sub_1001A4B40((uint64_t)v27, (uint64_t)v88, _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa);

      uint64_t v89 = _s27GuestModeUnlockRegistrationV18InitialLockContextVMa;
      uint64_t v90 = (uint64_t)v37;
      goto LABEL_30;
    }

    v44(v30, 1LL, 1LL, v31);
    sub_100187100((uint64_t)v30, &qword_100651640);
    unint64_t v60 = sub_100187014();
    uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v60, 0LL, 0LL);
    *(_DWORD *)uint64_t v62 = 10;
    unint64_t v63 = 0xD000000000000047LL;
    uint64_t v64 = "Invalid previous context as InitialLockContext, message may be replayed";
LABEL_10:
    *(void *)(v62 + 8) = v63;
    *(void *)(v62 + sub_100195658(v0 + 16) = (unint64_t)(v64 - 32) | 0x8000000000000000LL;
    swift_willThrow(v61);

    return;
  }

  uint64_t v49 = v123;
  sub_10019A6C4(v38, (uint64_t)v124);
  uint64_t v50 = sub_100183168(0LL, &qword_100651650, off_1005C8848);
  if (swift_dynamicCast(&v125, v124, v39, v50, 6LL))
  {
    uint64_t v51 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v52 = sub_100183098(&qword_100645A28);
    uint64_t v53 = v121;
    int v54 = swift_dynamicCast(v17, v124, v52, v121, 6LL);
    uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56);
    if (!v54)
    {
      v55(v17, 1LL, 1LL, v53);
      sub_100187100((uint64_t)v17, &qword_100651638);
      unint64_t v75 = sub_100187014();
      uint64_t v76 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v75, 0LL, 0LL);
      *(_DWORD *)uint64_t v77 = 10;
      *(void *)(v77 + 8) = 0xD000000000000050LL;
      *(void *)(v77 + sub_100195658(v0 + 16) = 0x800000010050C7E0LL;
      swift_willThrow(v76);

      return;
    }

    v55(v17, 0LL, 1LL, v53);
    uint64_t v56 = v115;
    sub_1001A4B40((uint64_t)v17, v115, _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa);
    uint64_t v57 = v114;
    sub_1001A4B84(v56, v114, _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa);
    id v45 = v51;
    uint64_t v58 = v116;
    uint64_t v59 = v122;
    sub_10037F508(v45, v57, v116);
    if (v59)
    {
      uint64_t v47 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa;
      uint64_t v48 = v56;
      goto LABEL_21;
    }

    uint64_t v95 = v118;
    v118[3] = SecretContextVMa;
    v95[4] = &off_1005DD7E0;
    uint64_t v96 = sub_1001A4B04(v95);
    sub_1001A4B40((uint64_t)v58, (uint64_t)v96, _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa);

    uint64_t v89 = _s27GuestModeUnlockRegistrationV17InitialKeyContextVMa;
    uint64_t v90 = v56;
    goto LABEL_30;
  }

  sub_10019A6C4(v38, (uint64_t)v124);
  uint64_t v65 = sub_100183168(0LL, &qword_100651658, off_1005C8840);
  if (swift_dynamicCast(&v125, v124, v39, v65, 6LL))
  {
    uint64_t v41 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v66 = sub_100183098(&qword_100645A28);
    uint64_t v67 = (uint64_t)v117;
    uint64_t v68 = v119;
    int v69 = swift_dynamicCast(v117, v124, v66, v119, 6LL);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v113 + 56);
    if (!v69)
    {
      v70(v67, 1LL, 1LL, v68);
      sub_100187100(v67, &qword_100651630);
      unint64_t v91 = sub_100187014();
      uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v91, 0LL, 0LL);
      *(_DWORD *)uint64_t v62 = 10;
      unint64_t v63 = 0xD000000000000051LL;
      uint64_t v64 = "Invalid previous context as HandlePairingResponseContext, message may be replayed";
      goto LABEL_10;
    }

    v70(v67, 0LL, 1LL, v68);
    uint64_t v71 = v108;
    sub_1001A4B40(v67, v108, _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa);
    uint64_t v72 = v107;
    sub_1001A4B84(v71, v107, _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa);
    id v45 = v41;
    uint64_t v73 = v110;
    uint64_t v74 = v122;
    sub_10037F9F8(v45, v72, v110);
    if (v74)
    {
      uint64_t v47 = _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa;
LABEL_20:
      uint64_t v48 = v71;
      goto LABEL_21;
    }

    uint64_t v98 = v118;
    v118[3] = RecordContextVMa;
    v98[4] = &off_1005DD7F8;
    uint64_t v99 = sub_1001A4B04(v98);
    sub_1001A4B40((uint64_t)v73, (uint64_t)v99, _s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMa);

    uint64_t v89 = _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa;
  }

  else
  {
    sub_10019A6C4(v38, (uint64_t)v124);
    uint64_t v78 = sub_100183168(0LL, &qword_100645A20, off_1005C8838);
    if (!swift_dynamicCast(&v125, v124, v39, v78, 6LL))
    {
      unint64_t v92 = sub_100187014();
      uint64_t v93 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v92, 0LL, 0LL);
      *(_DWORD *)uint64_t v94 = 10;
      *(void *)(v94 + 8) = 0xD00000000000003FLL;
      *(void *)(v94 + sub_100195658(v0 + 16) = 0x800000010050C6E0LL;
      swift_willThrow(v93);
      return;
    }

    uint64_t v41 = v125;
    sub_10019A6C4(v49, (uint64_t)v124);
    uint64_t v79 = sub_100183098(&qword_100645A28);
    uint64_t v81 = (uint64_t)v111;
    uint64_t v80 = SecretContextVMa;
    int v82 = swift_dynamicCast(v111, v124, v79, SecretContextVMa, 6LL);
    id v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v109 + 56);
    if (!v82)
    {
      v83(v81, 1LL, 1LL, v80);
      sub_100187100(v81, &qword_100651628);
      unint64_t v97 = sub_100187014();
      uint64_t v61 = swift_allocError(&type metadata for SFAuthenticationErrorMessage, v97, 0LL, 0LL);
      *(_DWORD *)uint64_t v62 = 10;
      unint64_t v63 = 0xD000000000000055LL;
      uint64_t v64 = "Invalid previous context as HandlePairingCreateSecretContext, message may be replayed";
      goto LABEL_10;
    }

    v83(v81, 0LL, 1LL, v80);
    uint64_t v71 = v105;
    sub_1001A4B40(v81, v105, _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa);
    uint64_t v84 = v104;
    sub_1001A4B84(v71, v104, _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa);
    id v45 = v41;
    uint64_t v85 = v106;
    uint64_t v86 = v122;
    sub_10037FFD0(v45, v84, v106);
    if (v86)
    {
      uint64_t v47 = _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa;
      goto LABEL_20;
    }

    uint64_t v100 = v118;
    v118[3] = v102;
    v100[4] = &off_1005DD810;
    uint64_t v101 = sub_1001A4B04(v100);
    sub_1001A4B40((uint64_t)v85, (uint64_t)v101, _s27GuestModeUnlockRegistrationV25HandleConfirmationContextVMa);

    uint64_t v89 = _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa;
  }

  uint64_t v90 = v71;
LABEL_30:
  sub_1001A4BC8(v90, v89);
}

void sub_100380C1C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

uint64_t sub_100380C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380C3C);
}

uint64_t sub_100380C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_100380CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380CC8);
}

uint64_t sub_100380CC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t _s27GuestModeUnlockRegistrationV4FlowVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100651468, (uint64_t)&_s27GuestModeUnlockRegistrationV4FlowVMn);
}

uint64_t sub_100380D58(uint64_t a1)
{
  uint64_t result = type metadata accessor for SDAuthenticationCommonOperationInput(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "(";
    _OWORD v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100380DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380DFC);
}

uint64_t sub_100380E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380E0C);
}

uint64_t _s27GuestModeUnlockRegistrationV18InitialLockContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100651500, (uint64_t)&_s27GuestModeUnlockRegistrationV18InitialLockContextVMn);
}

uint64_t sub_100380E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380E34);
}

uint64_t sub_100380E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380E44);
}

uint64_t sub_100380E48(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    _OWORD v4[2] = "\b";
    void v4[3] = &unk_1004D7C80;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t _s27GuestModeUnlockRegistrationV25HandleConfirmationContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100651898, (uint64_t)&_s27GuestModeUnlockRegistrationV25HandleConfirmationContextVMn);
}

uint64_t _s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMa(uint64_t a1)
{
  return sub_1001A4AD0( a1,  qword_100651758,  (uint64_t)&_s27GuestModeUnlockRegistrationV32HandlePairingCreateRecordContextVMn);
}

uint64_t _s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMa(uint64_t a1)
{
  return sub_1001A4AD0( a1,  qword_1006517F8,  (uint64_t)&_s27GuestModeUnlockRegistrationV32HandlePairingCreateSecretContextVMn);
}

uint64_t _s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMa(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_1006516B8, (uint64_t)&_s27GuestModeUnlockRegistrationV28HandlePairingResponseContextVMn);
}

uint64_t sub_100380F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380F48);
}

uint64_t sub_100380F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380F58);
}

uint64_t sub_100380F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380F6C);
}

uint64_t sub_100380F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380F7C);
}

ValueMetadata *_s27GuestModeUnlockRegistrationVMa()
{
  return &_s27GuestModeUnlockRegistrationVN;
}

uint64_t sub_100380F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100380F9C);
}

uint64_t sub_100380FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100380FAC);
}

uint64_t sub_100380FB0(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    _OWORD v4[2] = &unk_1004D7DD0;
    void v4[3] = "\b";
    void v4[4] = &unk_1004D7C80;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100381044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100381050);
}

uint64_t sub_100381054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100381060);
}

uint64_t sub_100381064(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for SDAuthenticationSessionMetrics(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    _OWORD v4[2] = &unk_1004D7E70;
    swift_initStructMetadata(a1, 256LL, 3LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1003810E8()
{
  unint64_t v1 = sub_1003819F8();
  uint64_t v2 = (const char *)FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  [v0 airdropHash2];
  uint64_t v3 = FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  sub_10028A868(v3);
  [v0 airdropHash3];
  uint64_t v4 = FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  sub_10028A868(v4);
  [v0 airdropHash4];
  uint64_t v5 = FixedWidthInteger.bigEndianBytes.getter(&type metadata for UInt16, v1);
  sub_10028A868(v5);
  uint64_t v6 = sub_1003C08D8(v2);
  swift_bridgeObjectRelease(v2);
  return v6;
}

uint64_t sub_100381210(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1003810E8();
  unint64_t v8 = v7;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  LODWORD(a1) = [a1 contactsContainsShortHashes:isa];

  if ((_DWORD)a1)
  {
    if (qword_100644220 != -1) {
      swift_once(&qword_100644220, sub_100381968);
    }
    uint64_t v10 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v10, (uint64_t)qword_100651928);
    sub_10019BA8C(v6, v8);
    uint64_t v11 = sub_10019BA8C(v6, v8);
    uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v15 = swift_slowAlloc(32LL, -1LL);
      uint64_t v73 = v15;
      *(_DWORD *)uint64_t v14 = 136380675;
      sub_1002DDC60(v6, v8);
      uint64_t v17 = v16;
      uint64_t v18 = sub_100183098((uint64_t *)&unk_10064D7D0);
      unint64_t v19 = sub_1001FF494();
      uint64_t v20 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v18, v19);
      uint64_t v22 = v21;
      swift_bridgeObjectRelease(v17);
      uint64_t v71 = sub_10018CDB4(v20, (unint64_t)v22, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v14 + 4, v14 + 12);
      swift_bridgeObjectRelease(v22);
      sub_100189B20(v6, v8);
      sub_100189B20(v6, v8);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Device hashes %{private}s recognized", v14, 0xCu);
      uint64_t v23 = 1LL;
      swift_arrayDestroy(v15, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1LL, -1LL);
      swift_slowDealloc(v14, -1LL, -1LL);

LABEL_18:
      sub_100189B20(v6, v8);
      return v23;
    }

    sub_100189B20(v6, v8);
    sub_100189B20(v6, v8);
    sub_100189B20(v6, v8);
  }

  else
  {
    if (qword_100644220 != -1) {
      swift_once(&qword_100644220, sub_100381968);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v24, (uint64_t)qword_100651928);
    sub_10019BA8C(v6, v8);
    uint64_t v25 = sub_10019BA8C(v6, v8);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t type = swift_slowAlloc(32LL, -1LL);
      uint64_t v73 = type;
      *(_DWORD *)uint64_t v28 = 136380675;
      uint64_t v29 = v28 + 12;
      uint64_t v62 = v28 + 4;
      buf = v28;
      sub_1002DDC60(v6, v8);
      uint64_t v31 = v30;
      uint64_t v68 = a2;
      uint64_t v32 = sub_100183098((uint64_t *)&unk_10064D7D0);
      unint64_t v33 = sub_1001FF494();
      uint64_t v34 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v32, v33);
      unint64_t v36 = v35;
      swift_bridgeObjectRelease(v31);
      uint64_t v71 = sub_10018CDB4(v34, v36, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v62, v29);
      unint64_t v37 = (const char *)v36;
      a2 = v68;
      swift_bridgeObjectRelease(v37);
      sub_100189B20(v6, v8);
      sub_100189B20(v6, v8);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Device hashes %{private}s unrecognized", buf, 0xCu);
      swift_arrayDestroy(type, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(type, -1LL, -1LL);
      swift_slowDealloc(buf, -1LL, -1LL);
    }

    else
    {
      sub_100189B20(v6, v8);
      sub_100189B20(v6, v8);
    }

    id v38 = [v3 airdropTempAuthTagData];
    uint64_t v23 = (uint64_t)v38;
    if (!v38) {
      goto LABEL_18;
    }
    uint64_t v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v38);
    unint64_t v41 = v40;

    id v42 = [v3 btAddressData];
    uint64_t v23 = (uint64_t)v42;
    if (!v42)
    {
      sub_100189B20(v6, v8);
      sub_100189B20(v39, v41);
      return v23;
    }

    uint64_t v43 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v42);
    unint64_t v45 = v44;

    Class v46 = Data._bridgeToObjectiveC()().super.isa;
    Class v47 = Data._bridgeToObjectiveC()().super.isa;
    unsigned __int8 v48 = [a2 isTempAuthTagKnown:v46 bluetoothAddressData:v47];

    if ((v48 & 1) == 0)
    {
      sub_100189B20(v6, v8);
      sub_100189B20(v43, v45);
      sub_100189B20(v39, v41);
      return 0LL;
    }

    sub_10019BA8C(v39, v41);
    uint64_t v49 = sub_10019BA8C(v39, v41);
    uint64_t v50 = (os_log_s *)Logger.logObject.getter(v49);
    os_log_type_t v51 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v50, v51))
    {
      os_log_t log = v50;
      os_log_type_t typea = v51;
      uint64_t v52 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v69 = swift_slowAlloc(32LL, -1LL);
      uint64_t v73 = v69;
      *(_DWORD *)uint64_t v52 = 136315138;
      uint64_t v53 = v52 + 12;
      unint64_t v63 = v52 + 4;
      bufa = v52;
      sub_1002DDC60(v39, v41);
      uint64_t v55 = v54;
      uint64_t v71 = (uint64_t)v54;
      uint64_t v56 = sub_100183098((uint64_t *)&unk_10064D7D0);
      unint64_t v57 = sub_1001FF494();
      uint64_t v58 = BidirectionalCollection<>.joined(separator:)(0LL, 0xE000000000000000LL, v56, v57);
      unint64_t v60 = v59;
      swift_bridgeObjectRelease(v55);
      uint64_t v71 = sub_10018CDB4(v58, (unint64_t)v60, &v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v71, v72, v63, v53);
      swift_bridgeObjectRelease(v60);
      sub_100189B20(v39, v41);
      sub_100189B20(v39, v41);
      _os_log_impl((void *)&_mh_execute_header, log, typea, "Device temp auth tag %s recognized", bufa, 0xCu);
      uint64_t v23 = 1LL;
      swift_arrayDestroy(v69, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v69, -1LL, -1LL);
      swift_slowDealloc(bufa, -1LL, -1LL);
      sub_100189B20(v43, v45);

      sub_100189B20(v39, v41);
      sub_100189B20(v6, v8);
      return v23;
    }

    sub_100189B20(v6, v8);
    sub_100189B20(v39, v41);
    sub_100189B20(v39, v41);
    sub_100189B20(v39, v41);
    sub_100189B20(v43, v45);
  }

  return 1LL;
}

uint64_t sub_100381968()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100651928);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100651928);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

unint64_t sub_1003819F8()
{
  unint64_t result = qword_100651940;
  if (!qword_100651940)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for UInt16, &type metadata for UInt16);
    atomic_store(result, (unint64_t *)&qword_100651940);
  }

  return result;
}

void sub_100381A3C(uint64_t a1)
{
  uint64_t v20 = a1 + 56;
  uint64_t v2 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v3 = -1LL;
  if (v2 < 64) {
    uint64_t v3 = ~(-1LL << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  *(void *)&double v6 = swift_bridgeObjectRetain((const char *)a1).n128_u64[0];
  int64_t v7 = 0LL;
  unint64_t v8 = (char *)_swiftEmptyArrayStorage;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 32 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = (const char *)v14[1];
    swift_bridgeObjectRetain(v16, v6);
    if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0) {
      unint64_t v8 = sub_10018BC54(0LL, *((void *)v8 + 2) + 1LL, 1, v8);
    }
    unint64_t v18 = *((void *)v8 + 2);
    unint64_t v17 = *((void *)v8 + 3);
    if (v18 >= v17 >> 1) {
      unint64_t v8 = sub_10018BC54((char *)(v17 > 1), v18 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v18 + 1;
    unint64_t v19 = &v8[16 * v18];
    *((void *)v19 + 4) = v15;
    *((void *)v19 + 5) = v16;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1LL))
    {
      __break(1u);
      goto LABEL_29;
    }

    if (v11 >= v5) {
      goto LABEL_27;
    }
    unint64_t v12 = *(void *)(v20 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v5) {
        goto LABEL_27;
      }
      unint64_t v12 = *(void *)(v20 + 8 * v7);
      if (!v12)
      {
        int64_t v7 = v11 + 2;
        if (v11 + 2 >= v5) {
          goto LABEL_27;
        }
        unint64_t v12 = *(void *)(v20 + 8 * v7);
        if (!v12)
        {
          int64_t v7 = v11 + 3;
          if (v11 + 3 >= v5) {
            goto LABEL_27;
          }
          unint64_t v12 = *(void *)(v20 + 8 * v7);
          if (!v12) {
            break;
          }
        }
      }
    }

void *sub_100381C34(int64_t *a1)
{
  void (*v13)(uint64_t *__return_ptr, void *);
  uint64_t v14;
  void v16[3];
  int64_t v1 = 0LL;
  int64_t v2 = *a1;
  int64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  int64_t v5 = *a1;
  while (1)
  {
    BOOL v6 = v3 >= v5;
    if (v4 > 0) {
      BOOL v6 = v5 >= v3;
    }
    if (v6) {
      break;
    }
    BOOL v7 = __OFADD__(v5, v4);
    v5 += v4;
    if (v7) {
      int64_t v5 = (v5 >> 63) ^ 0x8000000000000000LL;
    }
    BOOL v7 = __OFADD__(v1++, 1LL);
    if (v7)
    {
      __break(1u);
      break;
    }
  }

  uint64_t v16[2] = _swiftEmptyArrayStorage;
  sub_10018DA58(0, v1, 0);
  int64_t v13 = (void (*)(uint64_t *__return_ptr, void *))a1[3];
  int64_t v8 = a1[4];
  if (v1)
  {
    swift_retain(v8);
    BOOL v9 = v3 >= v2;
    if (v4 > 0) {
      BOOL v9 = v2 >= v3;
    }
    if (!v9)
    {
      v16[0] = v2;
      v13(&v14, v16);
      __asm { BR              X9 }
    }

    __break(1u);
    JUMPOUT(0x100382008LL);
  }

  swift_retain(v8);
  BOOL v10 = v3 >= v2;
  if (v4 > 0) {
    BOOL v10 = v2 >= v3;
  }
  if (!v10)
  {
    v16[0] = v2;
    v13(&v14, v16);
    __asm { BR              X9 }
  }

  sub_1003900E8((uint64_t)a1);
  return _swiftEmptyArrayStorage;
}

void *sub_100382040(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0) {
      int64_t v2 = (void *)a2;
    }
    else {
      int64_t v2 = (void *)(a2 & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain((const char *)a2);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v2);
    if (v6) {
      goto LABEL_3;
    }
  }

  else
  {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    *(void *)&double v7 = swift_bridgeObjectRetain((const char *)a2).n128_u64[0];
    if (v6)
    {
LABEL_3:
      if (v6 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }

      if ((a2 & 0xC000000000000001LL) != 0)
      {
        uint64_t v8 = 0LL;
        int64_t v2 = _swiftEmptyArrayStorage;
        while (1)
        {
          uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a2);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          unint64_t v12 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v11 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v12 >= v11 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1LL);
          }
          uint64_t v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized Array._endMutation()(v13);
          int64_t v3 = _swiftEmptyArrayStorage;
          if ((unint64_t)_swiftEmptyArrayStorage >> 62)
          {
            else {
              uint64_t v16 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
            }
            swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
            uint64_t v17 = _CocoaArrayWrapper.endIndex.getter(v16);
            *(void *)&double v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
            if (v17 > a1)
            {
LABEL_12:
              swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
              if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
                int64_t v2 = sub_10018CA1C(0LL, v2[2] + 1LL, 1, (uint64_t)v2);
              }
              unint64_t v15 = v2[2];
              unint64_t v14 = v2[3];
              if (v15 >= v14 >> 1) {
                int64_t v2 = sub_10018CA1C((void *)(v14 > 1), v15 + 1, 1, (uint64_t)v2);
              }
              v2[2] = v15 + 1;
              v2[v15 + 4] = _swiftEmptyArrayStorage;
              *(void *)&double v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
              int64_t v3 = _swiftEmptyArrayStorage;
            }
          }

          else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10) > a1)
          {
            goto LABEL_12;
          }

          if (v6 == ++v8) {
            goto LABEL_37;
          }
        }
      }

      uint64_t v18 = 0LL;
      int64_t v2 = _swiftEmptyArrayStorage;
      while (1)
      {
        uint64_t v19 = *(void *)(a2 + 8 * v18 + 32);
        uint64_t v20 = swift_retain(v19);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
        unint64_t v22 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v21 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v22 >= v21 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1LL);
        }
        uint64_t v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v19);
        specialized Array._endMutation()(v23);
        int64_t v3 = _swiftEmptyArrayStorage;
        if ((unint64_t)_swiftEmptyArrayStorage >> 62)
        {
          else {
            uint64_t v26 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
          }
          swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter(v26);
          *(void *)&double v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
          if (v27 > a1)
          {
LABEL_28:
            swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage);
            if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
              int64_t v2 = sub_10018CA1C(0LL, v2[2] + 1LL, 1, (uint64_t)v2);
            }
            unint64_t v25 = v2[2];
            unint64_t v24 = v2[3];
            if (v25 >= v24 >> 1) {
              int64_t v2 = sub_10018CA1C((void *)(v24 > 1), v25 + 1, 1, (uint64_t)v2);
            }
            v2[2] = v25 + 1;
            v2[v25 + 4] = _swiftEmptyArrayStorage;
            *(void *)&double v9 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
            int64_t v3 = _swiftEmptyArrayStorage;
          }
        }

        else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10) > a1)
        {
          goto LABEL_28;
        }

        if (v6 == ++v18)
        {
LABEL_37:
          unint64_t v28 = swift_bridgeObjectRelease((const char *)a2, v9).n128_u64[0];
LABEL_48:
          else {
            uint64_t v31 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
          }
          swift_bridgeObjectRetain((const char *)_swiftEmptyArrayStorage, *(double *)&v28);
          uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(v31);
          unint64_t v28 = swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage).n128_u64[0];
          if (!v32) {
            goto LABEL_52;
          }
LABEL_39:
          if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) != 0)
          {
LABEL_40:
            unint64_t v30 = v2[2];
            unint64_t v29 = v2[3];
            if (v30 >= v29 >> 1) {
              int64_t v2 = sub_10018CA1C((void *)(v29 > 1), v30 + 1, 1, (uint64_t)v2);
            }
            v2[2] = v30 + 1;
            v2[v30 + 4] = v3;
            return v2;
          }

uint64_t sub_100382454()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100651950);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100651950);
  if (qword_100644008 != -1) {
    swift_once(&qword_100644008, sub_10023A4D8);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669688);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

void sub_1003824E4()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for SDAirDropContactHashManager()) init];
  sub_100382520();
  qword_100651968 = (uint64_t)v0;
}

void sub_100382520()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SFPlatform(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644228 != -1) {
    swift_once(&qword_100644228, sub_100382454);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_100651950);
  uint64_t v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "HashManager: activate called", v10, 2u);
    swift_slowDealloc(v10, -1LL, -1LL);
  }

  static SFPlatform.watchOS.getter(v11);
  char v12 = static SFPlatform.isPlatform(_:)(v5);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v12 & 1) != 0)
  {
    unint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "AirDrop hashes not needed for watchOS", v16, 2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }
  }

  else
  {
    uint64_t v17 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor];
    uint64_t v18 = swift_allocObject(&unk_1005DD920, 24LL, 7LL);
    *(void *)(v18 + sub_100195658(v0 + 16) = v0;
    unint64_t v35 = sub_10038FEF0;
    uint64_t v36 = v18;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256LL;
    unint64_t v33 = sub_1001B9FE4;
    uint64_t v34 = &unk_1005DD938;
    uint64_t v19 = _Block_copy(&aBlock);
    uint64_t v20 = v36;
    id v21 = v1;
    swift_release(v20);
    [v17 setFirstUnlockHandler:v19];
    _Block_release(v19);
    uint64_t v22 = swift_allocObject(&unk_1005DD970, 24LL, 7LL);
    *(void *)(v22 + sub_100195658(v0 + 16) = v21;
    unint64_t v35 = sub_10038FF10;
    uint64_t v36 = v22;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256LL;
    unint64_t v33 = sub_1001B9FE4;
    uint64_t v34 = &unk_1005DD988;
    uint64_t v23 = _Block_copy(&aBlock);
    uint64_t v24 = v36;
    id v25 = v21;
    swift_release(v24);
    [v17 setPowerUnlimitedChangedHandler:v23];
    _Block_release(v23);
    unint64_t v35 = sub_100383A2C;
    uint64_t v36 = 0LL;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256LL;
    unint64_t v33 = sub_1001B9FE4;
    uint64_t v34 = &unk_1005DD9B0;
    uint64_t v26 = _Block_copy(&aBlock);
    [v17 setMeDeviceChangedHandler:v26];
    _Block_release(v26);
    uint64_t v27 = swift_allocObject(&unk_1005DD9E8, 24LL, 7LL);
    *(void *)(v27 + sub_100195658(v0 + 16) = v25;
    unint64_t v35 = sub_10038FF18;
    uint64_t v36 = v27;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v32 = 1107296256LL;
    unint64_t v33 = sub_1001B9FE4;
    uint64_t v34 = &unk_1005DDA00;
    unint64_t v28 = _Block_copy(&aBlock);
    uint64_t v29 = v36;
    id v30 = v25;
    swift_release(v29);
    [v17 activateWithCompletion:v28];
    _Block_release(v28);
    sub_10038EFC4();
    sub_10038F2B0();
  }

uint64_t sub_1003828AC@<X0>(uint64_t a1@<X8>)
{
  id v2 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 objectForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v9, v4);
    swift_unknownObjectRelease(v4);
  }

  else
  {
    memset(v9, 0, sizeof(v9));
  }

  sub_1002E29F8((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    uint64_t v5 = type metadata accessor for Date(0LL);
    int v6 = swift_dynamicCast(a1, v10, (char *)&type metadata for Any + 8, v5, 6LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))( a1,  v6 ^ 1u,  1LL,  v5);
  }

  else
  {
    sub_100187100((uint64_t)v10, (uint64_t *)&unk_100646550);
    uint64_t v8 = type metadata accessor for Date(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))( a1,  1LL,  1LL,  v8);
  }

char *sub_1003829F0(uint64_t a1)
{
  id v2 = v1;
  uint64_t v42 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v1);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v40 = *(void *)(v3 - 8);
  *(void *)&__int128 v41 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactUpdateCoalescer;
  id v13 = objc_allocWithZone(&OBJC_CLASS___CUCoalescer);
  unint64_t v14 = v2;
  *(void *)&v2[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardUpdateCoalescer;
  *(void *)&v14[v15] = [objc_allocWithZone(CUCoalescer) init];
  uint64_t v16 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ;
  sub_100183168(0LL, (unint64_t *)&qword_100650E50, &OBJC_CLASS___OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  unint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v17 = sub_100183F14( (unint64_t *)&qword_100644420,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v18 = sub_100183098(&qword_100650E60);
  uint64_t v19 = sub_1001DFF80((unint64_t *)&qword_100644430, &qword_100650E60);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v18, v19, v6, v17);
  (*(void (**)(char *, void, void))(v40 + 104))( v5,  enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:),  v41);
  uint64_t v20 = v8;
  uint64_t v21 = v42;
  *(void *)&v14[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)( 0xD000000000000033LL,  0x800000010050CE90LL,  v11,  v20,  v5,  0LL);
  uint64_t v22 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_bucket;
  id v23 = [objc_allocWithZone(SFTokenBucket) initWithBucketSize:100 tokenDurationSec:1.0];
  id v24 = [objc_allocWithZone(SFTokenBucketWithDups) initWithBucket:v23 dupHistoryLength:100];

  *(void *)&v14[v22] = v24;
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated] = 0;
  id v25 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
  *(void *)id v25 = 0LL;
  *((void *)v25 + 1) = 0LL;
  v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] = 1;
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactChangeBatchSize] = 1000LL;
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction] = 0LL;
  uint64_t v26 = &v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osStateHandler];
  *(void *)uint64_t v26 = 0LL;
  v26[8] = 1;
  sub_10019A6C4(v21 + 8, (uint64_t)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore]);
  __int128 v41 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB] = v41;
  uint64_t v27 = *(void *)v21;
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor] = *(void *)v21;
  unint64_t v28 = *(void **)(v21 + 64);
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_notificationCenter] = v28;
  uint64_t v29 = *(void **)(v21 + 72);
  *(void *)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_distributedNotificationCenter] = v29;
  sub_1003902B0((uint64_t *)v21, (uint64_t)&v14[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context]);
  swift_unknownObjectRetain(v41);
  swift_unknownObjectRetain(v27);
  id v30 = v28;
  id v31 = v29;

  if (qword_100644228 != -1) {
    swift_once(&qword_100644228, sub_100382454);
  }
  uint64_t v32 = type metadata accessor for Logger(0LL);
  uint64_t v33 = sub_100186DE4(v32, (uint64_t)qword_100651950);
  uint64_t v34 = (os_log_s *)Logger.logObject.getter(v33);
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "HashManager: init.", v36, 2u);
    swift_slowDealloc(v36, -1LL, -1LL);
  }

  v44.receiver = v14;
  v44.super_class = ObjectType;
  unint64_t v37 = (char *)objc_msgSendSuper2(&v44, "init");
  [*(id *)&v37[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor] setDispatchQueue:*(void *)&v37[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ]];
  sub_1003902EC(v21);
  return v37;
}

void sub_100382ED8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v5 = v6;
  uint64_t v7 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v8 = *(void (**)(void *, void, uint64_t))(v3 + 104);
  v8(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v9 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  uint64_t v10 = *(void (**)(void *, uint64_t))(v3 + 8);
  v10(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_100644228 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_100651950);
  id v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v34 = v2;
    uint64_t v16 = v10;
    uint64_t v17 = v7;
    uint64_t v18 = v8;
    id v19 = v9;
    uint64_t v20 = v15;
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "HashManager: internal activate called", v15, 2u);
    uint64_t v21 = v20;
    id v9 = v19;
    uint64_t v8 = v18;
    uint64_t v7 = v17;
    uint64_t v10 = v16;
    uint64_t v2 = v34;
    swift_slowDealloc(v21, -1LL, -1LL);
  }

  id v22 = [*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor) firstUnlocked];
  if ((_DWORD)v22)
  {
    uint64_t v23 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) & 1) == 0)
    {
      sub_1003845FC();
      void *v5 = v9;
      v8(v5, v7, v2);
      id v24 = v9;
      char v25 = _dispatchPreconditionTest(_:)(v5);
      v10(v5, v2);
      if ((v25 & 1) != 0)
      {
        if ((*(_BYTE *)(v1 + v23) & 1) == 0)
        {
          sub_1003848E0( &OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactUpdateCoalescer,  (uint64_t)&unk_1005DDAD8,  (uint64_t)sub_10038FF78,  (uint64_t)&unk_1005DDAF0);
          sub_1003848E0( &OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardUpdateCoalescer,  (uint64_t)&unk_1005DDA88,  (uint64_t)sub_10038FF58,  (uint64_t)&unk_1005DDAA0);
        }

        sub_100383354(0);
        sub_100384A94();
        uint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
        os_log_type_t v28 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v27, v28))
        {
          uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "HashManager: activated", v29, 2u);
          swift_slowDealloc(v29, -1LL, -1LL);
        }

        *(_BYTE *)(v1 + v23) = 1;
        sub_10038401C();
      }

      else
      {
        __break(1u);
      }
    }
  }

  else
  {
    id v30 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Device has not been unlocked. Don't activate hash manager.",  v32,  2u);
      swift_slowDealloc(v32, -1LL, -1LL);
    }
  }

void sub_10038325C(uint64_t a1)
{
  if ([*(id *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor) powerUnlimited])
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100651950);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Power handler called", v5, 2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }

    sub_100383354(0);
  }

void sub_100383354(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_100644228 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100651950);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Hash update requested.", v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  if ((a1 & 1) != 0)
  {
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Force rebuild requested", v18, 2u);
      swift_slowDealloc(v18, -1LL, -1LL);
    }
  }

  id v19 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
  if (v19)
  {
    id v20 = [v19 identifier];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    uint64_t v23 = v22;
  }

  else
  {
    uint64_t v21 = 0LL;
    uint64_t v23 = 0LL;
  }

  uint64_t v37 = 0LL;
  uint64_t v38 = 0LL;
  uint64_t v36 = 0LL;
  id v24 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Begin AirDropContactHashManager OSTransaction", v26, 2u);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t v27 = os_transaction_create("AirDropContactHashManager");
  uint64_t v28 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction;
  uint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction];
  *(void *)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osTransaction] = v27;
  swift_unknownObjectRelease(v29);
  sub_10038823C(v2, a1 & 1, &v36, &v38, &v37, v21, v23);
  swift_bridgeObjectRelease(v23);
  v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] = 1;
  if (*(void *)&v2[v28])
  {
    os_log_type_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Clearing AirDropContactHashManager OSTransaction", v33, 2u);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    uint64_t v34 = *(void *)&v2[v28];
    *(void *)&v2[v28] = 0LL;
    swift_unknownObjectRelease(v34);
  }

void sub_100383A2C()
{
  if (qword_100644228 != -1) {
    swift_once(&qword_100644228, sub_100382454);
  }
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100651950);
  osos_log_t log = (os_log_s *)Logger.logObject.getter(v1);
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Device change handler called", v3, 2u);
    swift_slowDealloc(v3, -1LL, -1LL);
  }
}

void sub_100383AF8(uint64_t a1, const char *a2)
{
  if (qword_100644228 != -1) {
    swift_once(&qword_100644228, sub_100382454);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = sub_100186DE4(v3, (uint64_t)qword_100651950);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a2, v7, 2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  sub_100382ED8();
}

void sub_100383BD8()
{
  id v0 = [(id)objc_opt_self(NSFileManager) defaultManager];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  id v18 = 0LL;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v18];

  if (v4)
  {
    id v5 = v18;
  }

  else
  {
    id v17 = v18;
    id v6 = v18;
    uint64_t v7 = _convertNSErrorToError(_:)(v17);

    swift_willThrow(v8);
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v9 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v9, (uint64_t)qword_100651950);
    swift_errorRetain(v7);
    uint64_t v10 = swift_errorRetain(v7);
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v14 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)os_log_type_t v13 = 138412290;
      swift_errorRetain(v7);
      uint64_t v15 = (void *)_swift_stdlib_bridgeErrorToNSError(v7);
      id v18 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v13 + 4, v13 + 12);
      void *v14 = v15;
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to delete url %@", v13, 0xCu);
      uint64_t v16 = sub_100183098(&qword_1006454E0);
      swift_arrayDestroy(v14, 1LL, v16);
      swift_slowDealloc(v14, -1LL, -1LL);
      swift_slowDealloc(v13, -1LL, -1LL);

      swift_errorRelease(v7);
    }

    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
    }
  }

void sub_100383E6C(const char *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v9 = v8;
  LOBYTE(v8) = _dispatchPreconditionTest(_:)(v7);
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_100644228 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100651950);
  os_log_type_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    os_log_type_t v14 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, a1, v14, 2u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  uint64_t v15 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_notificationCenter);
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 postNotificationName:v16 object:0];
}

void sub_10038401C()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void *)((char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  char v7 = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v7 & 1) != 0)
  {
    sub_100383E6C("Posting contacts hashes changed notification");
    sub_100383E6C("Posting meCard changed notification");
    uint64_t v8 = &v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osStateHandler];
    if (v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_osStateHandler + 8] == 1)
    {
      uint64_t v9 = swift_allocObject(&unk_1005DDA38, 24LL, 7LL);
      *(void *)(v9 + sub_100195658(v0 + 16) = v0;
      aBlock[4] = sub_10038FF38;
      uint64_t v15 = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100384F44;
      aBlock[3] = &unk_1005DDA50;
      uint64_t v10 = _Block_copy(aBlock);
      uint64_t v11 = v15;
      os_log_type_t v12 = v0;
      swift_release(v11);
      uint64_t v13 = os_state_add_handler(v6, v10);
      _Block_release(v10);
      *(void *)uint64_t v8 = v13;
      v8[8] = 0;
    }
  }

  else
  {
    __break(1u);
  }

void sub_1003841CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_100644228 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_100651950);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Contact update coalescer fired", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    sub_100383354(0);
    sub_100383E6C("Posting contacts hashes changed notification");
  }

  else
  {
    os_log_type_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      NSString v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)NSString v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "HashManager: not activated yet.", v16, 2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }
  }

void sub_1003843E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (qword_100644228 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = sub_100186DE4(v8, (uint64_t)qword_100651950);
  uint64_t v10 = (os_log_s *)Logger.logObject.getter(v9);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)os_log_type_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "MeCard update coalescer fired", v12, 2u);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    sub_100383E6C("Posting meCard changed notification");
  }

  else
  {
    os_log_type_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      NSString v16 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)NSString v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "HashManager: not activated yet.", v16, 2u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }
  }

void sub_1003845FC()
{
  uint64_t v2 = (void *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v5 = v6;
  (*(void (**)(void *, void, void *))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v7 = v6;
  LOBYTE(v6) = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(void *, void *))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    swift_once(&qword_100644228, sub_100382454);
    goto LABEL_5;
  }

  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) & 1) != 0) {
    return;
  }
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  uint64_t v1 = &selRef_setWatchIDsMissingSessionKey_;
  id v8 = [v2 standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  uint64_t v5 = [v8 integerForKey:v9];

  if (v5 == (void *)3) {
    return;
  }
  if (qword_100644228 != -1) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = sub_100186DE4(v10, (uint64_t)qword_100651950);
  os_log_type_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    *(_DWORD *)uint64_t v14 = 134218240;
    uint64_t v20 = (uint64_t)v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v14 + 4, v14 + 12);
    *(_WORD *)(v14 + 12) = 2048;
    uint64_t v20 = 3LL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v14 + 14, v14 + 22);
    _os_log_impl( (void *)&_mh_execute_header,  v12,  v13,  "Database version mismatch: %ld!=%ld. Clearing history token to rebuild database",  (uint8_t *)v14,  0x16u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  id v15 = [v2 v1[131]];
  NSString v16 = String._bridgeToObjectiveC()();
  [v15 setObject:0 forKey:v16];

  id v17 = [v2 v1[131]];
  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setInteger:3 forKey:v18];
}

void sub_1003848E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = (void *)((char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  os_log_type_t v13 = *(void **)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *os_log_type_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) != 0)
  {
    if ((v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated] & 1) == 0)
    {
      NSString v16 = *(void **)&v4[*a1];
      [v16 setDispatchQueue:v14];
      id v17 = (double *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context];
      [v16 setMinDelay:*(double *)&v4[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context + 80]];
      [v16 setMaxDelay:v17[11]];
      uint64_t v18 = swift_allocObject(a2, 24LL, 7LL);
      *(void *)(v18 + sub_100195658(v0 + 16) = v4;
      aBlock[4] = a3;
      uint64_t v23 = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_1001B9FE4;
      aBlock[3] = a4;
      uint64_t v19 = _Block_copy(aBlock);
      uint64_t v20 = v23;
      uint64_t v21 = v4;
      swift_release(v20);
      [v16 setActionHandler:v19];
      _Block_release(v19);
    }
  }

  else
  {
    __break(1u);
  }

void sub_100384A94()
{
  uint64_t v1 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *uint64_t v4 = v5;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  id v6 = v5;
  LOBYTE(v5) = _dispatchPreconditionTest(_:)(v4);
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) & 1) == 0)
    {
      id v7 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_notificationCenter);
      id v8 = (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore);
      objc_msgSend( v7,  "addObserver:selector:name:object:",  v0,  "contactStoreDidChange",  *(void *)(*sub_10019A708( (void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore),  *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore + 24))
                  + 16LL),
        0LL);
      objc_msgSend( v7,  "addObserver:selector:name:object:",  v0,  "meCardDidChange",  *(void *)(*sub_10019A708(v8, v8[3]) + 24),  0);
      uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_distributedNotificationCenter);
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 addObserver:v0 selector:"cmfSyncAgentBlockListDidChange" name:v10 object:0];
    }
  }

  else
  {
    __break(1u);
  }

uint64_t sub_100384C34()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___NSPropertyListSerialization);
  NSString v3 = String._bridgeToObjectiveC()();
  id v12 = 0LL;
  id v4 =  objc_msgSend( v2,  "dataWithPropertyList:format:options:error:",  v3,  200,  0,  &v12,  swift_bridgeObjectRelease(v1).n128_f64[0]);

  id v5 = v12;
  if (v4)
  {
    static Data._unconditionallyBridgeFromObjectiveC(_:)(v4);
    uint64_t v7 = v6;

    __asm { BR              X10 }
  }

  id v8 = v5;
  uint64_t v9 = _convertNSErrorToError(_:)(v5);

  swift_willThrow(v10);
  swift_errorRelease(v9);
  return 0LL;
}

uint64_t sub_100384F44(uint64_t a1, uint64_t a2)
{
  id v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  uint64_t v5 = v4(a2);
  swift_release(v3);
  return v5;
}

uint64_t sub_100384F8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  uint64_t v62 = v3;
  __chkstk_darwin(v2);
  uint64_t v59 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100183098(&qword_1006457E8);
  uint64_t v6 = __chkstk_darwin(v5);
  id v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v59 - v9;
  uint64_t v11 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char **)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  char v15 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  char v17 = _dispatchPreconditionTest(_:)(v14);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v17 & 1) != 0)
  {
    unint64_t v60 = v8;
    uint64_t v64 = 10LL;
    unint64_t v65 = 0xE100000000000000LL;
    uint64_t v19 = sub_100183098(&qword_1006483E0);
    uint64_t v20 = swift_allocObject(v19, 72LL, 7LL);
    __int128 v63 = xmmword_1004CDCA0;
    *(_OWORD *)(v20 + sub_100195658(v0 + 16) = xmmword_1004CDCA0;
    uint64_t v21 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated;
    int v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated);
    unint64_t v23 = sub_10021366C();
    unint64_t v24 = v23;
    uint64_t v25 = 28526LL;
    if (v22) {
      uint64_t v25 = 7562617LL;
    }
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = v23;
    if (v22) {
      unint64_t v26 = 0xE300000000000000LL;
    }
    else {
      unint64_t v26 = 0xE200000000000000LL;
    }
    *(void *)(v20 + 32) = v25;
    *(void *)(v20 + 40) = v26;
    v27._countAndFlagsBits = String.init(format:_:)(0xD000000000000024LL, 0x800000010050CCF0LL, v20);
    object = (const char *)v27._object;
    String.append(_:)(v27);
    swift_bridgeObjectRelease(object);
    if (*(_BYTE *)(v1 + v21) == 1)
    {
      uint64_t v29 = swift_allocObject(v19, 72LL, 7LL);
      *(_OWORD *)(v29 + sub_100195658(v0 + 16) = v63;
      uint64_t v30 = 28526LL;
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully))
      {
        uint64_t v30 = 7562617LL;
        unint64_t v31 = 0xE300000000000000LL;
      }

      else
      {
        unint64_t v31 = 0xE200000000000000LL;
      }

      *(void *)(v29 + 56) = &type metadata for String;
      *(void *)(v29 + 64) = v24;
      *(void *)(v29 + 32) = v30;
      *(void *)(v29 + 40) = v31;
      v32._countAndFlagsBits = String.init(format:_:)(0xD000000000000024LL, 0x800000010050CD20LL, v29);
      uint64_t v33 = (const char *)v32._object;
      String.append(_:)(v32);
      swift_bridgeObjectRelease(v33);
      uint64_t v34 = swift_allocObject(v19, 72LL, 7LL);
      *(_OWORD *)(v34 + sub_100195658(v0 + 16) = v63;
      sub_1003828AC((uint64_t)v10);
      uint64_t v35 = v61;
      uint64_t v36 = v62;
      uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
      if (v37(v10, 1LL, v61))
      {
        sub_100187100((uint64_t)v10, &qword_1006457E8);
        uint64_t v38 = 0LL;
        unint64_t v39 = 0LL;
      }

      else
      {
        uint64_t v40 = v59;
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v59, v10, v35);
        uint64_t v41 = sub_100187100((uint64_t)v10, &qword_1006457E8);
        uint64_t v38 = Date.description.getter(v41);
        unint64_t v39 = v42;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v35);
      }

      uint64_t v43 = 0x3E6C696E3CLL;
      *(void *)(v34 + 56) = &type metadata for String;
      *(void *)(v34 + 64) = v24;
      if (v39) {
        uint64_t v44 = v38;
      }
      else {
        uint64_t v44 = 0x3E6C696E3CLL;
      }
      unint64_t v45 = 0xE500000000000000LL;
      if (v39) {
        unint64_t v45 = v39;
      }
      *(void *)(v34 + 32) = v44;
      *(void *)(v34 + 40) = v45;
      v46._countAndFlagsBits = String.init(format:_:)(0xD000000000000024LL, 0x800000010050CD50LL, v34);
      Class v47 = (const char *)v46._object;
      String.append(_:)(v46);
      swift_bridgeObjectRelease(v47);
      uint64_t v48 = swift_allocObject(v19, 72LL, 7LL);
      *(_OWORD *)(v48 + sub_100195658(v0 + 16) = v63;
      uint64_t v49 = (uint64_t)v60;
      sub_1003828AC((uint64_t)v60);
      if (v37((char *)v49, 1LL, v35))
      {
        sub_100187100(v49, &qword_1006457E8);
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = v24;
        unint64_t v50 = 0xE500000000000000LL;
      }

      else
      {
        uint64_t v51 = v62;
        uint64_t v52 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v59, v49, v35);
        uint64_t v53 = sub_100187100(v49, &qword_1006457E8);
        uint64_t v54 = Date.description.getter(v53);
        unint64_t v50 = v55;
        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v35);
        *(void *)(v48 + 56) = &type metadata for String;
        *(void *)(v48 + 64) = v24;
        if (v50) {
          uint64_t v43 = v54;
        }
        else {
          unint64_t v50 = 0xE500000000000000LL;
        }
      }

      *(void *)(v48 + 32) = v43;
      *(void *)(v48 + 40) = v50;
      v56._countAndFlagsBits = String.init(format:_:)(0xD000000000000024LL, 0x800000010050CD80LL, v48);
      unint64_t v57 = (const char *)v56._object;
      String.append(_:)(v56);
      swift_bridgeObjectRelease(v57);
      v58._countAndFlagsBits = 0xD000000000000027LL;
      v58._object = (void *)0x800000010050CDB0LL;
      String.append(_:)(v58);
    }

    return v64;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100385534(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v7 = v4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v38 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100644228 != -1) {
    swift_once(&qword_100644228, sub_100382454);
  }
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v16 = sub_100186DE4(v15, (uint64_t)qword_100651950);
  char v17 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    uint64_t v35 = v10;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v22 = v12;
    uint64_t v23 = v11;
    uint64_t v24 = a3;
    uint64_t v25 = a4;
    unint64_t v26 = v19;
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v36, v19, 2u);
    Swift::String v27 = v26;
    a4 = v25;
    a3 = v24;
    uint64_t v11 = v23;
    uint64_t v12 = v22;
    uint64_t v8 = v21;
    uint64_t v7 = v20;
    uint64_t v10 = v35;
    swift_slowDealloc(v27, -1LL, -1LL);
  }

  uint64_t v28 = swift_allocObject(v37, 24LL, 7LL);
  *(void *)(v28 + sub_100195658(v0 + 16) = v7;
  aBlock[4] = a3;
  uint64_t v41 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = a4;
  uint64_t v29 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v7);
  unint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v30 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v31 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v32 = sub_1001DFF80((unint64_t *)&qword_100646520, (uint64_t *)&unk_1006460D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v31, v32, v8, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v14, v10, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release(v41);
}

uint64_t sub_10038584C(int a1)
{
  uint64_t v3 = v1;
  int v47 = a1;
  uint64_t v4 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v4);
  uint64_t v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v7 = type metadata accessor for Date(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v51 = &v46[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  id v14 = *(void **)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    if (qword_100644228 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v48 = v8;
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100651950);
  os_log_type_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Persist requested.", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
  uint64_t ObjectType = swift_getObjectType(v21);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 56);
  swift_unknownObjectRetain(v21);
  v24(ObjectType, v22);
  uint64_t result = swift_unknownObjectRelease(v21);
  if (!v2)
  {
    unint64_t v26 = v51;
    Date.init()(result);
    uint64_t v27 = v48;
    uint64_t v28 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 16);
    v28(v6, v26, v7);
    uint64_t v29 = *(void (**)(_BYTE *, void, uint64_t, uint64_t))(v27 + 56);
    v29(v6, 0LL, 1LL, v7);
    sub_10038FB18((uint64_t)v6);
    if ((v47 & 1) != 0)
    {
      v28(v6, v26, v7);
      v29(v6, 0LL, 1LL, v7);
      sub_10038FB18((uint64_t)v6);
    }

    id v30 =  [*(id *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_systemMonitor) meDeviceIDSDeviceID];
    if (v30)
    {
      uint64_t v31 = v30;
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
      uint64_t v34 = v33;

      uint64_t v49 = v32;
      unint64_t v50 = v34;
      unint64_t v35 = sub_1001CCE8C();
      uint64_t v36 = StringProtocol.hash.getter(&type metadata for String, v35);
      swift_bridgeObjectRelease(v34);
      uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        *(_DWORD *)uint64_t v40 = 134217984;
        uint64_t v27 = v48;
        uint64_t v49 = v36;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, &v50, v40 + 4, v40 + 12);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Persist completed for deviceID hash %ld", v40, 0xCu);
        swift_slowDealloc(v40, -1LL, -1LL);
      }

      id v41 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      uint64_t v43 = (os_log_s *)String._bridgeToObjectiveC()();
      [v41 setObject:isa forKey:v43];

      unint64_t v26 = v51;
    }

    else
    {
      uint64_t v43 = (os_log_s *)Logger.logObject.getter(0LL);
      os_log_type_t v44 = static os_log_type_t.error.getter(v43);
      if (os_log_type_enabled(v43, v44))
      {
        unint64_t v45 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Missing deviceID hash", v45, 2u);
        swift_slowDealloc(v45, -1LL, -1LL);
      }
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v27 + 8))(v26, v7);
  }

  return result;
}

void sub_100385D24(void *a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, const char *a7)
{
  unint64_t v45 = a4;
  os_log_type_t v44 = a5;
  uint64_t v12 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (uint64_t **)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *id v15 = v16;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v17 = v16;
  LOBYTE(vsub_100195658(v0 + 16) = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    uint64_t v18 = type metadata accessor for SDContactChangeHistoryUpdateEvent();
    uint64_t v19 = swift_dynamicCastClass(a1, v18);
    if (v19)
    {
      uint64_t v20 = *(void **)(v19 + 16);
      swift_retain(a1);
      id v21 = v20;
      uint64_t v22 = v46;
      sub_100386124(v21, a2, a6, a7);
      if (!v22)
      {

        swift_release(a1);
        swift_beginAccess(a3, v47, 1LL, 0LL);
        if (!__OFADD__(*a3, 1LL))
        {
          ++*a3;
          return;
        }

        goto LABEL_22;
      }

void sub_100386124(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(vsub_10018709C(v0 + 13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }

  id v15 = [a1 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  if (a4)
  {
    if (v16 == a3 && v18 == a4)
    {
      swift_bridgeObjectRelease(v18);
      goto LABEL_13;
    }

    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a3, a4, 0LL);
    *(void *)&double v21 = swift_bridgeObjectRelease(v18).n128_u64[0];
    if ((v20 & 1) != 0)
    {
LABEL_13:
      if (qword_100644228 == -1)
      {
LABEL_14:
        uint64_t v26 = type metadata accessor for Logger(0LL);
        uint64_t v27 = sub_100186DE4(v26, (uint64_t)qword_100651950);
        uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          id v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)id v30 = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "Skip meCard change", v30, 2u);
          swift_slowDealloc(v30, -1LL, -1LL);
        }

        return;
      }

void sub_1003863A4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v9 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = *(void **)(a2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *uint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(vsub_10018709C(v0 + 13) = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }

  id v15 = [a1 identifier];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  uint64_t v18 = v17;

  if (a4)
  {
    if (v16 == a3 && v18 == a4)
    {
      swift_bridgeObjectRelease(v18);
      goto LABEL_13;
    }

    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, a3, a4, 0LL);
    swift_bridgeObjectRelease(v18);
    if ((v20 & 1) != 0)
    {
LABEL_13:
      if (qword_100644228 == -1)
      {
LABEL_14:
        uint64_t v28 = type metadata accessor for Logger(0LL);
        uint64_t v29 = sub_100186DE4(v28, (uint64_t)qword_100651950);
        id v30 = (os_log_s *)Logger.logObject.getter(v29);
        os_log_type_t v31 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v30, v31))
        {
          uint64_t v32 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Skip meCard change", v32, 2u);
          swift_slowDealloc(v32, -1LL, -1LL);
        }

        return;
      }

void sub_100386614(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v10 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v14 = *(void **)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  LOBYTE(v14) = _dispatchPreconditionTest(_:)(v13);
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once(&qword_100644228, sub_100382454);
    goto LABEL_7;
  }

  _s16DaemoniOSLibrary21SDXPCHelperImageCacheC5evict17contactIdentifierySS_tFZ_0(a1, a2);
  if (!a5 || (a1 != a4 || a2 != a5) && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0LL) & 1) == 0)
  {
    uint64_t v21 = a3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB;
    uint64_t v22 = *(void *)(a3 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t ObjectType = swift_getObjectType(v22);
    uint64_t v25 = *(void (**)(uint64_t, const char *, uint64_t, uint64_t))(v23 + 32);
    swift_unknownObjectRetain(v22);
    v25(a1, a2, ObjectType, v23);
    swift_unknownObjectRelease(v22);
    return;
  }

  if (qword_100644228 != -1) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v16 = type metadata accessor for Logger(0LL);
  uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100651950);
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    char v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)char v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Skip meCard change", v20, 2u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }
}

void sub_100386838(void *a1)
{
  id v3 = [a1 identifier];
  uint64_t v4 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  uint64_t v6 = v5;

  uint64_t v194 = v4;
  uint64_t v195 = v6;
  uint64_t v201 = 44LL;
  unint64_t v202 = 0xE100000000000000LL;
  unint64_t v7 = sub_1001CCE8C();
  LOBYTE(v3) = StringProtocol.contains<A>(_:)(&v201, &type metadata for String, &type metadata for String, v7, v7);
  *(void *)&double v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }

  else
  {
    id v9 = objc_msgSend(a1, "emailAddresses", v8);
    uint64_t v160 = sub_100183098(&qword_100649B48);
    uint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v160);

    if (!((unint64_t)v1 >> 62))
    {
      uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      goto LABEL_4;
    }
  }

  if (v1 < 0) {
    uint64_t v42 = v1;
  }
  else {
    uint64_t v42 = v1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v1);
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v42);
  swift_bridgeObjectRelease((const char *)v1);
LABEL_4:
  id v193 = a1;
  unint64_t v180 = v7;
  if (v10)
  {
    uint64_t v194 = (const char *)_swiftEmptyArrayStorage;
    sub_10018D82C(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_115;
    }

    uint64_t v11 = 0LL;
    uint64_t v12 = v194;
    unint64_t v13 = v1 & 0xC000000000000001LL;
    id v14 = (const char *)v1;
    do
    {
      id v15 = v12;
      if (v13) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v1);
      }
      else {
        id v16 = *(id *)(v1 + 8 * v11 + 32);
      }
      uint64_t v17 = v16;
      Swift::String v18 = String.init(_:)([v16 value]);

      uint64_t v12 = v15;
      uint64_t v194 = v15;
      unint64_t v19 = *((void *)v15 + 2);
      unint64_t v20 = *((void *)v12 + 3);
      if (v19 >= v20 >> 1)
      {
        sub_10018D82C(v20 > 1, v19 + 1, 1);
        uint64_t v12 = v194;
      }

      ++v11;
      *((void *)v12 + 2) = v19 + 1;
      *(Swift::String *)&v12[16 * v19 + 32] = v18;
      uint64_t v1 = (uint64_t)v14;
    }

    while (v10 != v11);
    uint64_t v175 = v12;
    unint64_t v21 = swift_bridgeObjectRelease(v14).n128_u64[0];
    unint64_t v7 = v180;
  }

  else
  {
    unint64_t v21 = swift_bridgeObjectRelease((const char *)v1).n128_u64[0];
    uint64_t v175 = (const char *)_swiftEmptyArrayStorage;
  }

  id v22 = objc_msgSend(a1, "instantMessageAddresses", *(double *)&v21);
  uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v22, v160);

  if (!((unint64_t)v23 >> 62))
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v24) {
      goto LABEL_17;
    }
LABEL_35:
    unint64_t v41 = swift_bridgeObjectRelease((const char *)v23).n128_u64[0];
    uint64_t v26 = _swiftEmptyArrayStorage;
    goto LABEL_36;
  }

  if (v23 < 0) {
    uint64_t v43 = v23;
  }
  else {
    uint64_t v43 = v23 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v23);
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter(v43);
  swift_bridgeObjectRelease((const char *)v23);
  if (!v24) {
    goto LABEL_35;
  }
LABEL_17:
  uint64_t v201 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10018D82C(0, v24 & ~(v24 >> 63), 0);
  if (v24 < 0)
  {
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }

  uint64_t v25 = 0LL;
  uint64_t v26 = (void *)v201;
  unint64_t v186 = v23 & 0xC000000000000001LL;
  uint64_t v27 = (const char *)v23;
  do
  {
    if (v186) {
      id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
    }
    else {
      id v28 = *(id *)(v23 + 8 * v25 + 32);
    }
    uint64_t v29 = v28;
    id v30 = [v28 value];
    id v31 = [v30 username];

    uint64_t v32 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    uint64_t v34 = v33;

    uint64_t v194 = v32;
    uint64_t v195 = v34;
    uint64_t v35 = String.init<A>(_:)( &v194,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    uint64_t v37 = v36;

    uint64_t v201 = (uint64_t)v26;
    unint64_t v39 = v26[2];
    unint64_t v38 = v26[3];
    if (v39 >= v38 >> 1)
    {
      sub_10018D82C(v38 > 1, v39 + 1, 1);
      uint64_t v26 = (void *)v201;
    }

    ++v25;
    v26[2] = v39 + 1;
    uint64_t v40 = &v26[2 * v39];
    v40[4] = v35;
    v40[5] = v37;
    uint64_t v23 = (uint64_t)v27;
  }

  while (v24 != v25);
  unint64_t v41 = swift_bridgeObjectRelease(v27).n128_u64[0];
  unint64_t v7 = v180;
LABEL_36:
  uint64_t v44 = v26[2];
  unint64_t v45 = _swiftEmptyArrayStorage;
  if (v44)
  {
    uint64_t v46 = (const char **)(v26 + 5);
    do
    {
      int v47 = *(v46 - 1);
      uint64_t v48 = *v46;
      uint64_t v194 = v47;
      uint64_t v195 = v48;
      uint64_t v201 = 64LL;
      unint64_t v202 = 0xE100000000000000LL;
      swift_bridgeObjectRetain(v48, *(double *)&v41);
      if ((StringProtocol.contains<A>(_:)(&v201, &type metadata for String, &type metadata for String, v7, v7) & 1) != 0)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v45);
        uint64_t v203 = v45;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10018D82C(0, v45[2] + 1LL, 1);
          unint64_t v45 = v203;
        }

        unint64_t v51 = v45[2];
        unint64_t v50 = v45[3];
        if (v51 >= v50 >> 1)
        {
          sub_10018D82C(v50 > 1, v51 + 1, 1);
          unint64_t v45 = v203;
        }

        v45[2] = v51 + 1;
        uint64_t v52 = &v45[2 * v51];
        v52[4] = v47;
        v52[5] = v48;
        unint64_t v7 = v180;
      }

      else
      {
        unint64_t v41 = swift_bridgeObjectRelease(v48).n128_u64[0];
      }

      v46 += 2;
      --v44;
    }

    while (v44);
  }

  swift_bridgeObjectRelease((const char *)v26, *(double *)&v41);
  uint64_t v194 = v175;
  sub_10028AB28((uint64_t)v45);
  uint64_t v53 = v194;
  int64_t v54 = *((void *)v194 + 2);
  if (v54)
  {
    uint64_t v201 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10018D9CC(0, v54, 0);
    unint64_t v55 = (const char *)v201;
    uint64_t v163 = v53;
    Swift::String v56 = (const char **)(v53 + 40);
    while (1)
    {
      int64_t v187 = v54;
      unint64_t v57 = *v56;
      swift_bridgeObjectRetain(*v56);
      NSString v58 = String._bridgeToObjectiveC()();
      id v59 = sub_100116524(v58, 0);

      if (!v59) {
        goto LABEL_117;
      }
      unint64_t v60 = v55;
      uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
      __int128 v63 = v62;

      NSString v64 = String._bridgeToObjectiveC()();
      id v65 = sub_100116524(v64, 1);

      if (!v65) {
        goto LABEL_118;
      }
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v65);
      uint64_t v68 = v67;

      sub_1002DB620(v61, (uint64_t)v63, (uint64_t)&v194);
      uint64_t v167 = v195;
      uint64_t v171 = v194;
      __int128 v176 = v197;
      __int128 v181 = v196;
      int v69 = v198 | (v199 << 16);
      char v70 = v200;
      if (v61 == v66 && v63 == v68) {
        break;
      }
      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v61, v63, v66, v68, 0LL);
      unint64_t v73 = swift_bridgeObjectRelease(v63).n128_u64[0];
      if ((v72 & 1) == 0)
      {
        sub_1002DB620(v66, (uint64_t)v68, (uint64_t)&v194);
        __int128 v63 = v195;
        int v69 = v198 | (v199 << 16);
        char v71 = v200;
        goto LABEL_56;
      }

      char v71 = v70;
LABEL_57:
      unint64_t v55 = v60;
      *(void *)&double v74 = swift_bridgeObjectRelease(v57, *(double *)&v73).n128_u64[0];
      swift_bridgeObjectRelease(v68, v74);
      uint64_t v201 = (uint64_t)v60;
      unint64_t v76 = *((void *)v60 + 2);
      unint64_t v75 = *((void *)v60 + 3);
      if (v76 >= v75 >> 1)
      {
        sub_10018D9CC(v75 > 1, v76 + 1, 1);
        unint64_t v55 = (const char *)v201;
      }

      v56 += 2;
      *((void *)v55 + 2) = v76 + 1;
      uint64_t v77 = &v55[56 * v76];
      *((void *)v77 + 4) = v171;
      *((void *)v77 + 5) = v167;
      *((_OWORD *)v77 + 3) = v181;
      *((_OWORD *)v77 + 4) = v176;
      *((_BYTE *)v77 + 82) = BYTE2(v69);
      *((_WORD *)v77 + 40) = v69;
      *((_BYTE *)v77 + 83) = v71;
      int64_t v54 = v187 - 1;
      if (v187 == 1)
      {
        unint64_t v78 = swift_bridgeObjectRelease(v163).n128_u64[0];
        goto LABEL_62;
      }
    }

    uint64_t v68 = v63;
    char v71 = v200;
LABEL_56:
    unint64_t v73 = swift_bridgeObjectRelease(v57).n128_u64[0];
    unint64_t v57 = v63;
    goto LABEL_57;
  }

  unint64_t v78 = swift_bridgeObjectRelease(v194).n128_u64[0];
  unint64_t v55 = (const char *)_swiftEmptyArrayStorage;
LABEL_62:
  uint64_t v79 = *((void *)v55 + 2);
  uint64_t v80 = _swiftEmptyArrayStorage;
  uint64_t v158 = v55;
  if (v79)
  {
    uint64_t v81 = v55 + 48;
    do
    {
      int v82 = (const char *)*(v81 - 1);
      uint64_t v182 = *(v81 - 2);
      uint64_t v172 = v81[1];
      uint64_t v177 = *v81;
      uint64_t v164 = v81[3];
      uint64_t v168 = v81[2];
      int v83 = *((unsigned __int8 *)v81 + 34);
      int v84 = *((unsigned __int16 *)v81 + 16);
      char v188 = *((_BYTE *)v81 + 35);
      id v85 = objc_msgSend(v193, "identifier", swift_bridgeObjectRetain( v82,  *(double *)&v78).n128_f64[0]);
      uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
      uint64_t v88 = v87;

      if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) != 0) {
        uint64_t v89 = v80;
      }
      else {
        uint64_t v89 = sub_10018CB48(0LL, v80[2] + 1LL, 1, (uint64_t)v80);
      }
      unint64_t v91 = v89[2];
      unint64_t v90 = v89[3];
      if (v91 >= v90 >> 1) {
        uint64_t v89 = sub_10018CB48((void *)(v90 > 1), v91 + 1, 1, (uint64_t)v89);
      }
      v89[2] = v91 + 1;
      unint64_t v92 = &v89[9 * v91];
      v92[4] = v86;
      v92[5] = v88;
      v92[6] = v182;
      v92[7] = v82;
      v92[8] = v177;
      v92[9] = v172;
      v92[10] = v168;
      v92[11] = v164;
      *((_BYTE *)v92 + 98) = (v84 | (v83 << 16)) >> 16;
      *((_WORD *)v92 + 48) = v84;
      *((_BYTE *)v92 + 99) = v188;
      v81 += 7;
      --v79;
      uint64_t v80 = v89;
    }

    while (v79);
  }

  uint64_t v165 = v80;
  id v93 = objc_msgSend(v193, "phoneNumbers", swift_bridgeObjectRelease( v158,  *(double *)&v78).n128_f64[0]);
  uint64_t v94 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v93, v160);

  if (!((unint64_t)v94 >> 62))
  {
    uint64_t v95 = *(void *)((v94 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v95) {
      goto LABEL_73;
    }
LABEL_86:
    swift_bridgeObjectRelease((const char *)v94);
    unint64_t v97 = _swiftEmptyArrayStorage;
    goto LABEL_87;
  }

  if (v94 < 0) {
    uint64_t v112 = v94;
  }
  else {
    uint64_t v112 = v94 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain((const char *)v94);
  uint64_t v95 = _CocoaArrayWrapper.endIndex.getter(v112);
  swift_bridgeObjectRelease((const char *)v94);
  if (!v95) {
    goto LABEL_86;
  }
LABEL_73:
  uint64_t v201 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10018D82C(0, v95 & ~(v95 >> 63), 0);
  if ((v95 & 0x8000000000000000LL) == 0)
  {
    uint64_t v96 = 0LL;
    unint64_t v97 = (void *)v201;
    unint64_t v189 = v94 & 0xC000000000000001LL;
    uint64_t v98 = (const char *)v94;
    do
    {
      if (v189) {
        id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v96, v94);
      }
      else {
        id v99 = *(id *)(v94 + 8 * v96 + 32);
      }
      uint64_t v100 = v99;
      id v101 = [v99 value];
      id v102 = [v101 stringValue];

      uint64_t v103 = (const char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v102);
      uint64_t v105 = v104;

      uint64_t v194 = v103;
      uint64_t v195 = v105;
      uint64_t v106 = String.init<A>(_:)( &v194,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      uint64_t v108 = v107;

      uint64_t v201 = (uint64_t)v97;
      unint64_t v110 = v97[2];
      unint64_t v109 = v97[3];
      if (v110 >= v109 >> 1)
      {
        sub_10018D82C(v109 > 1, v110 + 1, 1);
        unint64_t v97 = (void *)v201;
      }

      ++v96;
      v97[2] = v110 + 1;
      uint64_t v111 = &v97[2 * v110];
      v111[4] = v106;
      v111[5] = v108;
      uint64_t v94 = (uint64_t)v98;
    }

    while (v95 != v96);
    swift_bridgeObjectRelease(v98);
LABEL_87:
    sub_10019A6C4(v159 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore, (uint64_t)&v194);
    uint64_t v113 = *((void *)&v196 + 1);
    uint64_t v114 = sub_10019A708(&v194, *((uint64_t *)&v196 + 1));
    uint64_t DynamicType = swift_getDynamicType(v114, v113, 1LL);
    uint64_t v116 = v197;
    sub_10018709C(&v194);
    uint64_t v118 = v97[2];
    if (v118)
    {
      uint64_t v190 = *(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, __n128))(v116 + 40);
      unint64_t v119 = swift_bridgeObjectRetain((const char *)v97).n128_u64[0];
      uint64_t v120 = (const char **)(v97 + 5);
      uint64_t v121 = (char *)_swiftEmptyArrayStorage;
      uint64_t v183 = v116;
      do
      {
        uint64_t v123 = (uint64_t)*(v120 - 1);
        uint64_t v124 = *v120;
        __n128 v125 = swift_bridgeObjectRetain(*v120, *(double *)&v119);
        uint64_t v126 = v190(v123, v124, DynamicType, v116, v125);
        uint64_t v128 = v127;
        unint64_t v119 = swift_bridgeObjectRelease(v124).n128_u64[0];
        if (v128)
        {
          if ((swift_isUniquelyReferenced_nonNull_native(v121) & 1) == 0) {
            uint64_t v121 = sub_10018BC54(0LL, *((void *)v121 + 2) + 1LL, 1, v121);
          }
          unint64_t v130 = *((void *)v121 + 2);
          unint64_t v129 = *((void *)v121 + 3);
          if (v130 >= v129 >> 1) {
            uint64_t v121 = sub_10018BC54((char *)(v129 > 1), v130 + 1, 1, v121);
          }
          *((void *)v121 + 2) = v130 + 1;
          uint64_t v122 = &v121[16 * v130];
          *((void *)v122 + 4) = v126;
          *((void *)v122 + 5) = v128;
          uint64_t v116 = v183;
        }

        v120 += 2;
        --v118;
      }

      while (v118);
      *(void *)&double v117 = swift_bridgeObjectRelease((const char *)v97).n128_u64[0];
    }

    else
    {
      uint64_t v121 = (char *)_swiftEmptyArrayStorage;
    }

    *(void *)&double v131 = swift_bridgeObjectRelease((const char *)v97, v117).n128_u64[0];
    int64_t v132 = *((void *)v121 + 2);
    if (v132)
    {
      uint64_t v201 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10018D9CC(0, v132, 0);
      uint64_t v133 = (const char *)v201;
      uint64_t v161 = v121;
      uint64_t v134 = (const char **)(v121 + 40);
      do
      {
        uint64_t v135 = (uint64_t)*(v134 - 1);
        uint64_t v136 = *v134;
        swift_bridgeObjectRetain(*v134);
        sub_1002DB620(v135, (uint64_t)v136, (uint64_t)&v194);
        uint64_t v137 = v194;
        uint64_t v138 = v195;
        uint64_t v184 = v196;
        uint64_t v173 = v197;
        uint64_t v178 = *((void *)&v196 + 1);
        uint64_t v169 = *((void *)&v197 + 1);
        int v139 = v199;
        int v140 = v198;
        char v191 = v200;
        swift_bridgeObjectRelease(v136);
        uint64_t v201 = (uint64_t)v133;
        unint64_t v142 = *((void *)v133 + 2);
        unint64_t v141 = *((void *)v133 + 3);
        if (v142 >= v141 >> 1)
        {
          sub_10018D9CC(v141 > 1, v142 + 1, 1);
          uint64_t v133 = (const char *)v201;
        }

        v134 += 2;
        *((void *)v133 + 2) = v142 + 1;
        uint64_t v143 = &v133[56 * v142];
        *((void *)v143 + 4) = v137;
        *((void *)v143 + 5) = v138;
        *((void *)v143 + 6) = v184;
        *((void *)v143 + 7) = v178;
        *((void *)v143 + 8) = v173;
        *((void *)v143 + 9) = v169;
        *((_BYTE *)v143 + 82) = (v140 | (v139 << 16)) >> 16;
        *((_WORD *)v143 + 40) = v140;
        *((_BYTE *)v143 + 83) = v191;
        --v132;
      }

      while (v132);
      unint64_t v144 = swift_bridgeObjectRelease(v161).n128_u64[0];
      uint64_t v145 = *((void *)v133 + 2);
      if (!v145) {
        goto LABEL_113;
      }
    }

    else
    {
      unint64_t v144 = swift_bridgeObjectRelease(v121, v131).n128_u64[0];
      uint64_t v133 = (const char *)_swiftEmptyArrayStorage;
      uint64_t v145 = _swiftEmptyArrayStorage[2];
      if (!v145)
      {
LABEL_113:
        swift_bridgeObjectRelease(v133);
        return;
      }
    }

    uint64_t v146 = v133 + 48;
    uint64_t v147 = (uint64_t)v165;
    do
    {
      uint64_t v148 = (const char *)*(v146 - 1);
      uint64_t v185 = *(v146 - 2);
      uint64_t v174 = v146[1];
      uint64_t v179 = *v146;
      uint64_t v166 = v146[3];
      uint64_t v170 = v146[2];
      int v162 = *((unsigned __int8 *)v146 + 34);
      int v149 = *((unsigned __int16 *)v146 + 16);
      char v192 = *((_BYTE *)v146 + 35);
      id v150 = objc_msgSend(v193, "identifier", swift_bridgeObjectRetain( v148,  *(double *)&v144).n128_f64[0]);
      uint64_t v151 = static String._unconditionallyBridgeFromObjectiveC(_:)(v150);
      uint64_t v153 = v152;

      if ((swift_isUniquelyReferenced_nonNull_native(v147) & 1) != 0) {
        uint64_t v154 = (void *)v147;
      }
      else {
        uint64_t v154 = sub_10018CB48(0LL, *(void *)(v147 + 16) + 1LL, 1, v147);
      }
      unint64_t v156 = v154[2];
      unint64_t v155 = v154[3];
      if (v156 >= v155 >> 1) {
        uint64_t v154 = sub_10018CB48((void *)(v155 > 1), v156 + 1, 1, (uint64_t)v154);
      }
      v154[2] = v156 + 1;
      uint64_t v157 = &v154[9 * v156];
      v157[4] = v151;
      v157[5] = v153;
      v157[6] = v185;
      v157[7] = v148;
      v157[8] = v179;
      v157[9] = v174;
      v157[10] = v170;
      v157[11] = v166;
      *((_BYTE *)v157 + 98) = (v149 | (v162 << 16)) >> 16;
      *((_WORD *)v157 + 48) = v149;
      *((_BYTE *)v157 + 99) = v192;
      v146 += 7;
      --v145;
      uint64_t v147 = (uint64_t)v154;
    }

    while (v145);
    goto LABEL_113;
  }

uint64_t sub_100387630(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Calendar.Component(0LL);
  uint64_t v78 = *(void *)(v4 - 8);
  uint64_t v79 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Calendar(0LL);
  uint64_t v75 = *(void *)(v7 - 8);
  uint64_t v76 = v7;
  __chkstk_darwin(v7);
  id v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100183098(&qword_1006457E8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v77 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  id v14 = (char *)&v69 - v13;
  uint64_t v15 = type metadata accessor for Date(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v73 = (char *)&v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  char v71 = (char *)&v69 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  double v74 = (char *)&v69 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  char v72 = (char *)&v69 - v24;
  __chkstk_darwin(v23);
  uint64_t v80 = (char *)&v69 - v25;
  uint64_t v26 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (uint64_t *)((char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  id v30 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v29 = v30;
  (*(void (**)(void *, void, uint64_t))(v27 + 104))(v29, enum case for DispatchPredicate.onQueue(_:), v26);
  id v31 = v30;
  LOBYTE(v30) = _dispatchPreconditionTest(_:)(v29);
  (*(void (**)(void *, uint64_t))(v27 + 8))(v29, v26);
  if ((v30 & 1) == 0)
  {
    __break(1u);
LABEL_17:
    swift_once(&qword_100644228, sub_100382454);
    goto LABEL_8;
  }

  sub_1003828AC((uint64_t)v14);
  uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v32(v14, 1LL, v15) == 1)
  {
    uint64_t v33 = (uint64_t)v14;
LABEL_6:
    sub_100187100(v33, &qword_1006457E8);
    char v39 = 0;
    return v39 & 1;
  }

  uint64_t v26 = v16;
  uint64_t v34 = v80;
  char v70 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v35 = v70(v80, v14, v15);
  static Calendar.current.getter(v35);
  uint64_t v37 = v78;
  uint64_t v36 = v79;
  (*(void (**)(char *, void, uint64_t))(v78 + 104))(v6, enum case for Calendar.Component.day(_:), v79);
  unint64_t v38 = v77;
  Calendar.date(byAdding:value:to:wrappingComponents:)(v6, 14LL, v34, 0LL);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v36);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v9, v76);
  uint64_t v16 = v15;
  if (v32(v38, 1LL, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v15);
    uint64_t v33 = (uint64_t)v38;
    goto LABEL_6;
  }

  id v9 = v34;
  id v14 = v72;
  uint64_t v40 = v70(v72, v38, v15);
  unint64_t v41 = v74;
  Date.init()(v40);
  uint64_t v42 = sub_100183F14( (unint64_t *)&unk_100656470,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  LODWORD(v79) = dispatch thunk of static Comparable.< infix(_:_:)(v41, v14, v15, v42);
  double v1 = Date.timeIntervalSinceReferenceDate.getter();
  double v2 = Date.timeIntervalSinceReferenceDate.getter();
  if (qword_100644228 != -1) {
    goto LABEL_17;
  }
LABEL_8:
  uint64_t v43 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v43, (uint64_t)qword_100651950);
  uint64_t v44 = v26;
  unint64_t v45 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  uint64_t v46 = v71;
  v45(v71, v14, v16);
  int v47 = v73;
  uint64_t v48 = v9;
  uint64_t v49 = ((uint64_t (*)(char *, char *, uint64_t))v45)(v73, v9, v16);
  unint64_t v50 = (void *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v50, v51))
  {

    uint64_t v68 = *(void (**)(char *, uint64_t))(v44 + 8);
    v68(v47, v16);
    v68(v46, v16);
    v68(v74, v16);
    v68(v14, v16);
    v68(v48, v16);
    goto LABEL_14;
  }

  double v52 = v1 - v2;
  uint64_t v53 = v46;
  uint64_t v54 = swift_slowAlloc(32LL, -1LL);
  uint64_t v78 = swift_slowAlloc(64LL, -1LL);
  uint64_t v82 = v78;
  *(_DWORD *)uint64_t v54 = 136315650;
  uint64_t v55 = sub_100183F14( (unint64_t *)&qword_100651A50,  (uint64_t (*)(uint64_t))&type metadata accessor for Date,  (uint64_t)&protocol conformance descriptor for Date);
  uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter(v16, v55);
  NSString v58 = (const char *)v57;
  uint64_t v81 = sub_10018CDB4(v56, v57, &v82);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v54 + 4, v54 + 12);
  __n128 v59 = swift_bridgeObjectRelease(v58);
  unint64_t v60 = *(void (**)(char *, uint64_t, __n128))(v44 + 8);
  v60(v53, v16, v59);
  *(_WORD *)(v54 + 12) = 2080;
  uint64_t v61 = v73;
  uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter(v16, v55);
  NSString v64 = (const char *)v63;
  uint64_t v81 = sub_10018CDB4(v62, v63, &v82);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v54 + 14, v54 + 22);
  __n128 v65 = swift_bridgeObjectRelease(v64);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, __n128))v60)(v61, v16, v65);
  *(_WORD *)(v54 + 22) = 2048;
  if ((~*(void *)&v52 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }

  if (v52 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  if (v52 < 9.22337204e18)
  {
    uint64_t v81 = (uint64_t)v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v54 + 24, v54 + 32);
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v50,  v51,  "Next hash store rebuild: %s, last: %s, secs to next rebuild: %ld",  (uint8_t *)v54,  0x20u);
    uint64_t v67 = v78;
    swift_arrayDestroy(v78, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v67, -1LL, -1LL);
    swift_slowDealloc(v54, -1LL, -1LL);

    ((void (*)(char *, uint64_t))v60)(v74, v16);
    ((void (*)(char *, uint64_t))v60)(v72, v16);
    ((void (*)(char *, uint64_t))v60)(v80, v16);
LABEL_14:
    char v39 = v79 ^ 1;
    return v39 & 1;
  }

BOOL sub_100387CF8(uint64_t a1)
{
  uint64_t v2 = sub_10038FC50();
  if ((v3 & 1) != 0
    || (uint64_t v4 = v2,
        (id v5 =  [*(id *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_context) meDeviceIDSDeviceID]) == 0))
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v18 = type metadata accessor for Logger(0LL);
    uint64_t v19 = sub_100186DE4(v18, (uint64_t)qword_100651950);
    uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Last deviceID hash not populated", v22, 2u);
      swift_slowDealloc(v22, -1LL, -1LL);
    }

    return 0LL;
  }

  else
  {
    uint64_t v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    id v9 = v8;

    uint64_t v23 = v7;
    unint64_t v10 = sub_1001CCE8C();
    uint64_t v11 = StringProtocol.hash.getter(&type metadata for String, v10);
    swift_bridgeObjectRelease(v9, v23, v9);
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    uint64_t v13 = sub_100186DE4(v12, (uint64_t)qword_100651950);
    id v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc(22LL, -1LL);
      *(_DWORD *)uint64_t v16 = 134218240;
      uint64_t v23 = v4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 4, v16 + 12);
      *(_WORD *)(v16 + 12) = 2048;
      uint64_t v23 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v16 + 14, v16 + 22);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Comparing deviceID hashes %ld - %ld", (uint8_t *)v16, 0x16u);
      swift_slowDealloc(v16, -1LL, -1LL);
    }

    return v4 == v11;
  }

uint64_t sub_100387F48(int a1, _BYTE *a2)
{
  uint64_t v6 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v10 = *(void **)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *id v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)(v9);
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_13:
    swift_once(&qword_100644228, sub_100382454);
    goto LABEL_8;
  }

  LODWORD(v9) = sub_100387630((uint64_t)a2);
  uint64_t v12 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
  uint64_t v13 = *(void *)&a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8];
  uint64_t ObjectType = swift_getObjectType(v12);
  os_log_type_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
  swift_unknownObjectRetain(v12);
  LOBYTE(vsub_10018709C(v0 + 13) = v15(ObjectType, v13);
  swift_unknownObjectRelease(v12);
  if ((v13 & 1) != 0)
  {
    char v2 = 1;
    BOOL v3 = 1;
  }

  else
  {
    BOOL v3 = !sub_100387CF8((uint64_t)a2);
    char v2 = 1;
    if (((a1 | v9) & 1) == 0 && !v3)
    {
      BOOL v3 = 0;
      LOBYTE(a1) = 0;
      char v2 = a2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] ^ 1;
    }
  }

  if (qword_100644228 != -1) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v16 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v16, (uint64_t)qword_100651950);
  uint64_t v17 = a2;
  uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v20 = 67110144;
    int v23 = v2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 4, v20 + 8);
    *(_WORD *)(v20 + 8) = 1024;
    int v23 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 10, v20 + 14);
    *(_WORD *)(v20 + 14) = 1024;
    int v23 = v9 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 16, v20 + 20);
    *(_WORD *)(v20 + 20) = 1024;
    int v23 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 22, v20 + 26);
    *(_WORD *)(v20 + 26) = 1024;
    int v23 = (v17[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v20 + 28, v20 + 32);

    _os_log_impl( (void *)&_mh_execute_header,  v18,  v19,  "Should regenerate database: %{BOOL}d (forceRebuild: %{BOOL}d rebuild due: %{BOOL}d storeRebuildRequired: %{BOOL}d hashesFailedToUpdate: %{BOOL}d",  (uint8_t *)v20,  0x20u);
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  else
  {

    uint64_t v18 = (os_log_s *)v17;
  }

  return v2 & 1;
}

void sub_10038823C(char *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, const char *a7)
{
  uint64_t v107 = a6;
  uint64_t v108 = a7;
  unint64_t v109 = a4;
  unint64_t v110 = a5;
  uint64_t v111 = a3;
  uint64_t v11 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (uint64_t *)((char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  os_log_type_t v15 = *(void **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  void *v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  id v16 = v15;
  LOBYTE(v15) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    uint64_t v17 = swift_allocObject(&unk_1005DD8F8, 24LL, 7LL);
    *(void *)(v17 + sub_100195658(v0 + 16) = a1;
    unint64_t v119 = sub_10038FEC0;
    uint64_t v120 = v17;
    uint64_t v18 = qword_100644228;
    uint64_t v8 = a1;
    if (v18 == -1) {
      goto LABEL_3;
    }
  }

  else
  {
    __break(1u);
  }

  swift_once(&qword_100644228, sub_100382454);
LABEL_3:
  uint64_t v19 = type metadata accessor for Logger(0LL);
  uint64_t v20 = sub_100186DE4(v19, (uint64_t)qword_100651950);
  os_log_type_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    int v23 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Start updating hashes.", v23, 2u);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  uint64_t v24 = sub_100387F48(a2 & 1, v8);
  char v121 = v24 & 1;
  if ((v24 & 1) != 0)
  {
    uint64_t v25 = 0LL;
    unint64_t v26 = 0xF000000000000000LL;
  }

  else
  {
    uint64_t v24 = sub_10038F9F8();
    uint64_t v25 = v24;
    unint64_t v26 = v27;
    if (v27 >> 60 != 15) {
      goto LABEL_11;
    }
  }

  uint64_t v28 = (os_log_s *)Logger.logObject.getter(v24);
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)id v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "History token is nil. Will regenerate hash database", v30, 2u);
    swift_slowDealloc(v30, -1LL, -1LL);
  }

LABEL_11:
  sub_10019A708( &v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore],  *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactStore + 24]);
  uint64_t v31 = sub_1003DBE6C(v25, v26);
  if (v7)
  {
    sub_100189B0C(v25, v26);
    sub_100224FF8((uint64_t)v119, v120);

    return;
  }

  uint64_t v34 = (const char *)v31;
  uint64_t v105 = v32;
  uint64_t v106 = v20;
  unint64_t v104 = v33;
  uint64_t v35 = (uint64_t)sub_100382040(1000LL, v31);
  uint64_t v36 = v35;
  uint64_t v37 = *(void *)(v35 + 16);
  if (v37)
  {
    if ((v121 & 1) != 0)
    {
      unint64_t v38 = v119;
      if (v119)
      {
        uint64_t v39 = v120;
        uint64_t v40 = swift_retain(v120);
        ((void (*)(uint64_t))v38)(v40);
        sub_100224FF8((uint64_t)v38, v39);
        uint64_t v35 = sub_100224FF8((uint64_t)v38, v39);
      }

      unint64_t v119 = 0LL;
      uint64_t v120 = 0LL;
    }

    uint64_t v103 = v34;
    uint64_t v101 = v25;
    unint64_t v102 = v26;
    uint64_t v61 = (os_log_s *)Logger.logObject.getter(v35);
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      unint64_t v63 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Load hash db from disk", v63, 2u);
      swift_slowDealloc(v63, -1LL, -1LL);
    }

    NSString v64 = (char **)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
    uint64_t v65 = *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB];
    uint64_t v66 = *(void *)&v8[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8];
    uint64_t ObjectType = swift_getObjectType(v65);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
    swift_unknownObjectRetain(v65);
    v68(ObjectType, v66);

    swift_unknownObjectRelease(v65);
    uint64_t v69 = *v64;
    char v70 = v64[1];
    char v71 = (void *)swift_getObjectType(*v64);
    char v72 = (void (*)(void *, char *))*((void *)v70 + 5);
    swift_unknownObjectRetain(v69);
    v72(v71, v70);
    uint64_t v100 = v64;
    swift_unknownObjectRelease(v69);
    uint64_t v73 = 0LL;
    uint64_t v74 = (uint64_t)v103;
    do
    {
      uint64_t v75 = v73 + 1;
      if (__OFADD__(v73, 1LL))
      {
        __break(1u);
        goto LABEL_42;
      }

      uint64_t v69 = *(char **)(v36 + 8 * v73 + 32);
      swift_bridgeObjectRetain(v69);
      char v71 = objc_autoreleasePoolPush();
      sub_100388FCC((unint64_t)v69, (uint64_t *)&v119, &v121, (uint64_t)v8, v111, v109, v110, v107, v108);
      objc_autoreleasePoolPop(v71);
      *(void *)&double v76 = swift_bridgeObjectRelease(v69).n128_u64[0];
      ++v73;
    }

    while (v75 != v37);
    *(void *)&double v77 = swift_bridgeObjectRelease((const char *)v36, v76).n128_u64[0];
    swift_bridgeObjectRetain((const char *)v74, v77);
    uint64_t v69 = (char *)Logger.logObject.getter(v78);
    LOBYTE(v71) = static os_log_type_t.default.getter();
    if (os_log_type_enabled((os_log_t)v69, (os_log_type_t)v71))
    {
      uint64_t v36 = swift_slowAlloc(42LL, -1LL);
      *(_DWORD *)uint64_t v36 = 134218752;
      if (!((unint64_t)v74 >> 62))
      {
        uint64_t v79 = *(void *)((v74 & 0xFFFFFFFFFFFFF8LL) + 0x10);
LABEL_31:
        uint64_t v80 = v101;
        swift_bridgeObjectRelease((const char *)v74);
        uint64_t v117 = v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v117, &v118, v36 + 4, v36 + 12);
        swift_bridgeObjectRelease((const char *)v74);
        *(_WORD *)(v36 + 12) = 2048;
        uint64_t v81 = v109;
        swift_beginAccess(v109, &v117, 0LL, 0LL);
        uint64_t v115 = *v81;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v115, &v116, v36 + 14, v36 + 22);
        *(_WORD *)(v36 + 22) = 2048;
        uint64_t v82 = v110;
        swift_beginAccess(v110, &v115, 0LL, 0LL);
        uint64_t v113 = *v82;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v113, &v114, v36 + 24, v36 + 32);
        *(_WORD *)(v36 + 32) = 2048;
        int v83 = v111;
        swift_beginAccess(v111, &v113, 0LL, 0LL);
        uint64_t v112 = *v83;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113, v36 + 34, v36 + 42);
        _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v69,  (os_log_type_t)v71,  "Processed %ld contact change events (add=%ld,delete=%ld,update=%ld)",  (uint8_t *)v36,  0x2Au);
        swift_slowDealloc(v36, -1LL, -1LL);

        goto LABEL_36;
      }

void sub_100388E00(uint64_t a1)
{
  char v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
  uint64_t ObjectType = swift_getObjectType(v3);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 64);
  swift_unknownObjectRetain(v3);
  v6(ObjectType, v4);
  swift_unknownObjectRelease(v3);
  if (!v1)
  {
    uint64_t v7 = type metadata accessor for SDAirDropHashStoreCDB();
    uint64_t v8 = swift_allocObject(v7, 50LL, 7LL);
    uint64_t v9 = sub_100183168(0LL, (unint64_t *)&qword_100644438, &OBJC_CLASS___NSData_ptr);
    id v10 = objc_allocWithZone(&OBJC_CLASS___CUKeyValueStoreReader);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
    *(void *)(v8 + sub_100195658(v0 + 16) = [v10 initWithKeyType:ObjCClassFromMetadata valueType:ObjCClassFromMetadata];
    *(void *)(v8 + 24) = 0LL;
    *(void *)(v8 + 32) = _swiftEmptyArrayStorage;
    *(void *)(v8 + 40) = &_swiftEmptySetSingleton;
    *(_WORD *)(v8 + 48) = 0;
    uint64_t v12 = *v2;
    *char v2 = v8;
    v2[1] = (uint64_t)&protocol witness table for SDAirDropHashStoreCDB;
    swift_retain(v8);
    swift_unknownObjectRelease(v12);
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v13 = type metadata accessor for Logger(0LL);
    uint64_t v14 = sub_100186DE4(v13, (uint64_t)qword_100651950);
    os_log_type_t v15 = (os_log_s *)Logger.logObject.getter(v14);
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HashManager: database set.", v17, 2u);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    swift_release(v8);
  }

void sub_100388FCC( unint64_t a1, uint64_t *a2, _BYTE *a3, uint64_t a4, void *a5, uint64_t *a6, uint64_t *a7, uint64_t a8, const char *a9)
{
  uint64_t v10 = v9;
  uint64_t v13 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  *(void *)&double v15 = swift_bridgeObjectRetain((const char *)a1).n128_u64[0];
  NSString v64 = a3;
  while (v14)
  {
    unint64_t v70 = v13 & 0xC000000000000001LL;
    uint64_t v16 = 4LL;
    uint64_t v63 = a4;
    uint64_t v69 = (const char *)v13;
    while (1)
    {
      uint64_t v17 = v16 - 4;
      if (!v70) {
        break;
      }
      uint64_t v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v13);
      uint64_t v19 = v16 - 3;
      if (__OFADD__(v17, 1LL)) {
        goto LABEL_34;
      }
LABEL_11:
      uint64_t v20 = type metadata accessor for SDContactChangeHistoryDropEverythingEvent();
      if (swift_dynamicCastClass(v18, v20))
      {
        if (qword_100644228 != -1) {
          swift_once(&qword_100644228, sub_100382454);
        }
        uint64_t v21 = type metadata accessor for Logger(0LL);
        uint64_t v22 = sub_100186DE4(v21, (uint64_t)qword_100651950);
        int v23 = (os_log_s *)Logger.logObject.getter(v22);
        os_log_type_t v24 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl( (void *)&_mh_execute_header,  v23,  v24,  "Change event is DropEverything. Request regenerate entire db.",  v25,  2u);
          unint64_t v26 = v25;
          uint64_t v13 = (uint64_t)v69;
          swift_slowDealloc(v26, -1LL, -1LL);
        }

        unint64_t v27 = (void (*)(uint64_t))*a2;
        if (*a2)
        {
          uint64_t v28 = a2[1];
          uint64_t v29 = swift_retain(v28);
          v27(v29);
          if (v10)
          {
            swift_bridgeObjectRelease((const char *)v13);
            sub_100224FF8((uint64_t)v27, v28);
            swift_release(v18);
            return;
          }

          swift_release(v18);
          sub_100224FF8((uint64_t)v27, v28);
        }

        else
        {
          swift_release(v18);
        }

        uint64_t v43 = *a2;
        uint64_t v44 = a2[1];
        *a2 = 0LL;
        a2[1] = 0LL;
        sub_100224FF8(v43, v44);
        *a3 = 1;
      }

      else
      {
        if (qword_100644228 != -1) {
          swift_once(&qword_100644228, sub_100382454);
        }
        uint64_t v30 = type metadata accessor for Logger(0LL);
        sub_100186DE4(v30, (uint64_t)qword_100651950);
        uint64_t v31 = swift_retain_n(v18, 2LL);
        uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
        os_log_type_t v33 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v32, v33))
        {
          uint64_t v34 = swift_slowAlloc(12LL, -1LL);
          uint64_t v35 = v10;
          uint64_t v36 = swift_slowAlloc(32LL, -1LL);
          uint64_t v72 = v36;
          *(_DWORD *)uint64_t v34 = 136315138;
          uint64_t v37 = _typeName(_:qualified:)(*v18, 0LL);
          uint64_t v39 = (const char *)v38;
          *(void *)(v34 + 4) = sub_10018CDB4(v37, v38, &v72);
          swift_release_n(v18, 2LL);
          uint64_t v40 = v39;
          a3 = v64;
          swift_bridgeObjectRelease(v40);
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Processing event: %s", (uint8_t *)v34, 0xCu);
          swift_arrayDestroy(v36, 1LL, (char *)&type metadata for Any + 8);
          uint64_t v41 = v36;
          uint64_t v10 = v35;
          swift_slowDealloc(v41, -1LL, -1LL);
          uint64_t v42 = v34;
          a4 = v63;
          swift_slowDealloc(v42, -1LL, -1LL);
        }

        else
        {

          swift_release_n(v18, 2LL);
        }

        uint64_t v13 = (uint64_t)v69;
        if (*a3 != 1
          || (uint64_t v45 = type metadata accessor for SDContactChangeHistoryAddEvent(), swift_dynamicCastClass(v18, v45)))
        {
          sub_100385D24(v18, a4, a5, a6, a7, a8, a9);
          swift_release(v18);
          if (v10)
          {
            swift_bridgeObjectRelease(v69);
            return;
          }
        }

        else
        {
          uint64_t v46 = swift_retain_n(v18, 2LL);
          uint64_t v47 = (os_log_s *)Logger.logObject.getter(v46);
          os_log_type_t v48 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc(12LL, -1LL);
            uint64_t v50 = swift_slowAlloc(32LL, -1LL);
            uint64_t v72 = v50;
            *(_DWORD *)uint64_t v49 = 136315138;
            uint64_t v51 = _typeName(_:qualified:)(*v18, 0LL);
            id v53 = (const char *)v52;
            *(void *)(v49 + 4) = sub_10018CDB4(v51, v52, &v72);
            swift_release_n(v18, 2LL);
            Class v54 = v53;
            a3 = v64;
            swift_bridgeObjectRelease(v54);
            _os_log_impl( (void *)&_mh_execute_header,  v47,  v48,  "Unexpected change event %s when regenerating database",  (uint8_t *)v49,  0xCu);
            swift_arrayDestroy(v50, 1LL, (char *)&type metadata for Any + 8);
            uint64_t v55 = v50;
            a4 = v63;
            swift_slowDealloc(v55, -1LL, -1LL);
            swift_slowDealloc(v49, -1LL, -1LL);
            swift_release(v18);
          }

          else
          {

            swift_release_n(v18, 3LL);
          }

          uint64_t v13 = (uint64_t)v69;
        }
      }

      ++v16;
      if (v19 == v14) {
        goto LABEL_39;
      }
    }

    uint64_t v18 = *(void **)(v13 + 8 * v16);
    swift_retain(v18);
    uint64_t v19 = v16 - 3;
    if (!__OFADD__(v17, 1LL)) {
      goto LABEL_11;
    }
LABEL_34:
    __break(1u);
LABEL_35:
    if (v13 < 0) {
      uint64_t v56 = v13;
    }
    else {
      uint64_t v56 = v13 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain((const char *)v13);
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v56);
    NSString v64 = a3;
  }

_BYTE *sub_1003895D0(void *a1, const char *a2)
{
  uint64_t v101 = a2;
  uint64_t v4 = (const char *)type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  unint64_t v102 = v2;
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v10 = *(void (**)(void *, uint64_t, const char *))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  uint64_t v11 = v8;
  uint64_t v12 = _dispatchPreconditionTest(_:)(v7);
  uint64_t v13 = *(char **)(v5 + 8);
  ((void (*)(void *, const char *))v13)(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_59;
  }

  *uint64_t v7 = v11;
  v10(v7, v9, v4);
  uint64_t v14 = v11;
  char v15 = _dispatchPreconditionTest(_:)(v7);
  ((void (*)(void *, const char *))v13)(v7, v4);
  if ((v15 & 1) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }

  if (v102[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] != 1)
  {
    unint64_t v30 = sub_10038FFB4();
    uint64_t v31 = swift_allocError(&type metadata for SDAirDropHashError, v30, 0LL, 0LL);
    *uint64_t v32 = 0;
    swift_willThrow(v31);
    return v2;
  }

  unint64_t v104 = a1;
  uint64_t v105 = v101;
  v103[0] = 44LL;
  v103[1] = 0xE100000000000000LL;
  unint64_t v16 = sub_1001CCE8C();
  uint64_t v17 = StringProtocol.components<A>(separatedBy:)(v103, &type metadata for String, &type metadata for String, v16, v16);
  uint64_t v18 = v17;
  uint64_t v19 = *(char **)(v17 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v19)
  {
    uint64_t v20 = (const char **)(v17 + 40);
    uint64_t v4 = (const char *)_swiftEmptyArrayStorage;
    do
    {
      uint64_t v22 = (uint64_t)*(v20 - 1);
      int v23 = *v20;
      __n128 v24 = swift_bridgeObjectRetain(*v20);
      uint64_t v25 = Data.init(base64Encoded:options:)(v22, v23, 0LL, v24);
      unint64_t v27 = v26;
      swift_bridgeObjectRelease(v23);
      if (v27 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0) {
          uint64_t v4 = (const char *)sub_10018C8E8(0LL, *((void *)v4 + 2) + 1LL, 1, (uint64_t)v4);
        }
        unint64_t v29 = *((void *)v4 + 2);
        unint64_t v28 = *((void *)v4 + 3);
        if (v29 >= v28 >> 1) {
          uint64_t v4 = (const char *)sub_10018C8E8((void *)(v28 > 1), v29 + 1, 1, (uint64_t)v4);
        }
        *((void *)v4 + 2) = v29 + 1;
        uint64_t v21 = &v4[16 * v29];
        *((void *)v21 + 4) = v25;
        *((void *)v21 + 5) = v27;
      }

      v20 += 2;
      --v19;
    }

    while (v19);
    uint64_t v19 = *(char **)(v18 + 16);
  }

  else
  {
    uint64_t v4 = (const char *)_swiftEmptyArrayStorage;
  }

  uint64_t v13 = (char *)*((void *)v4 + 2);
  swift_bridgeObjectRelease((const char *)v18);
  uint64_t v12 = v106;
  if (v13 != v19)
  {
    if (qword_100644228 == -1)
    {
LABEL_18:
      uint64_t v33 = type metadata accessor for Logger(0LL);
      uint64_t v34 = sub_100186DE4(v33, (uint64_t)qword_100651950);
      uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
      os_log_type_t v36 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Decoded base64 count test failed", v37, 2u);
        swift_slowDealloc(v37, -1LL, -1LL);
      }

      goto LABEL_21;
    }

void sub_100389EF0(uint64_t a1, const char *a2)
{
  uint64_t v97 = a2;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v98 = v2;
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *(void *)uint64_t v7 = v8;
  int64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v10 = *(void (**)(char *, int64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  uint64_t v12 = _dispatchPreconditionTest(_:)(v7);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_51;
  }

  *(void *)uint64_t v7 = v11;
  v10(v7, v9, v4);
  id v14 = v11;
  char v15 = _dispatchPreconditionTest(_:)(v7);
  v13(v7, v4);
  if ((v15 & 1) == 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }

  if (v98[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] != 1)
  {
    unint64_t v31 = sub_10038FFB4();
    uint64_t v32 = swift_allocError(&type metadata for SDAirDropHashError, v31, 0LL, 0LL);
    _BYTE *v33 = 0;
    swift_willThrow(v32);
    return;
  }

  unint64_t v104 = (const char *)&_swiftEmptySetSingleton;
  uint64_t v100 = (void *)a1;
  uint64_t v101 = v97;
  v103[0] = 44LL;
  v103[1] = 0xE100000000000000LL;
  unint64_t v16 = sub_1001CCE8C();
  uint64_t v17 = StringProtocol.components<A>(separatedBy:)(v103, &type metadata for String, &type metadata for String, v16, v16);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 + 16);
  uint64_t v12 = (uint64_t)_swiftEmptyArrayStorage;
  if (v19)
  {
    uint64_t v20 = (const char **)(v17 + 40);
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    uint64_t v13 = v99;
    do
    {
      uint64_t v23 = (uint64_t)*(v20 - 1);
      __n128 v24 = *v20;
      __n128 v25 = swift_bridgeObjectRetain(*v20);
      uint64_t v26 = Data.init(base64Encoded:options:)(v23, v24, 0LL, v25);
      unint64_t v28 = v27;
      swift_bridgeObjectRelease(v24);
      if (v28 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0) {
          uint64_t v21 = (char *)sub_10018C8E8(0LL, *((void *)v21 + 2) + 1LL, 1, (uint64_t)v21);
        }
        unint64_t v30 = *((void *)v21 + 2);
        unint64_t v29 = *((void *)v21 + 3);
        if (v30 >= v29 >> 1) {
          uint64_t v21 = (char *)sub_10018C8E8((void *)(v29 > 1), v30 + 1, 1, (uint64_t)v21);
        }
        *((void *)v21 + 2) = v30 + 1;
        uint64_t v22 = &v21[16 * v30];
        *((void *)v22 + 4) = v26;
        *((void *)v22 + 5) = v28;
      }

      v20 += 2;
      --v19;
    }

    while (v19);
    uint64_t v34 = *(void *)(v18 + 16);
    uint64_t v12 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v7 = v21;
  }

  else
  {
    uint64_t v34 = 0LL;
    uint64_t v7 = (char *)_swiftEmptyArrayStorage;
    uint64_t v13 = v99;
  }

  int64_t v9 = *((void *)v7 + 2);
  swift_bridgeObjectRelease((const char *)v18);
  if (v9 != v34)
  {
    if (qword_100644228 == -1)
    {
LABEL_18:
      uint64_t v35 = type metadata accessor for Logger(0LL);
      uint64_t v36 = sub_100186DE4(v35, (uint64_t)qword_100651950);
      uint64_t v37 = (os_log_s *)Logger.logObject.getter(v36);
      os_log_type_t v38 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Decoded base64 count test failed", v39, 2u);
        swift_slowDealloc(v39, -1LL, -1LL);
      }

      goto LABEL_21;
    }

uint64_t sub_10038A764(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v5 = v6;
  uint64_t v7 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 104);
  v8(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  id v9 = v6;
  char v10 = _dispatchPreconditionTest(_:)(v5);
  id v11 = *(uint64_t (**)(void *, uint64_t))(v3 + 8);
  uint64_t result = v11(v5, v2);
  if ((v10 & 1) != 0)
  {
    void *v5 = v9;
    v8(v5, v7, v2);
    id v13 = v9;
    char v14 = _dispatchPreconditionTest(_:)(v5);
    uint64_t result = v11(v5, v2);
    if ((v14 & 1) != 0)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
      {
        uint64_t v15 = v30;
        if ([*(id *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_bucket) acquireTokenForIdentifier:(unsigned __int16)v30])
        {
          if (*(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo))
          {
            uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo + 8);
            uint64_t v17 = *(void *)(v16 + 16);
            *(void *)&double v19 = swift_bridgeObjectRetain((const char *)v16).n128_u64[0];
            if (v17)
            {
              uint64_t v20 = v18 + 99;
              while ((*v20 & 1) != 0 || *(unsigned __int16 *)(v20 - 3) != (unsigned __int16)v15)
              {
                v20 += 72;
                if (!--v17) {
                  goto LABEL_16;
                }
              }

              swift_bridgeObjectRelease(v18, v19);
              char v21 = 1;
              return v21 & 1;
            }

uint64_t sub_10038A9A4(void *a1, const char *a2)
{
  unint64_t v28 = a2;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  char v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  char v12 = _dispatchPreconditionTest(_:)(v7);
  id v13 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  *uint64_t v7 = v11;
  v10(v7, v9, v4);
  id v15 = v11;
  char v16 = _dispatchPreconditionTest(_:)(v7);
  uint64_t result = v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
  {
    uint64_t v17 = v29;
    uint64_t v18 = sub_1003895D0(a1, v28);
    if (!v17)
    {
      char v21 = v19;
      if (v19)
      {
        uint64_t v22 = (uint64_t)v18;
        *(void *)&double v23 = swift_bridgeObjectRelease(v20).n128_u64[0];
        swift_bridgeObjectRetain(v21, v23);
        uint64_t v2 = sub_10038AB6C(v22, v21);
        swift_bridgeObjectRelease_n(v21, 2LL);
      }

      else
      {
        return 0LL;
      }
    }
  }

  else
  {
    unint64_t v24 = sub_10038FFB4();
    uint64_t v25 = swift_allocError(&type metadata for SDAirDropHashError, v24, 0LL, 0LL);
    _BYTE *v26 = 0;
    swift_willThrow(v25);
  }

  return v2;
}

uint64_t sub_10038AB6C(uint64_t a1, const char *a2)
{
  uint64_t v31 = a1;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  char v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  char v12 = _dispatchPreconditionTest(_:)(v7);
  id v13 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v13(v7, v4);
  if ((v12 & 1) != 0)
  {
    *uint64_t v7 = v11;
    v10(v7, v9, v4);
    id v15 = v11;
    char v16 = _dispatchPreconditionTest(_:)(v7);
    uint64_t result = v13(v7, v4);
    if ((v16 & 1) != 0)
    {
      if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] != 1)
      {
        unint64_t v26 = sub_10038FFB4();
        uint64_t v27 = swift_allocError(&type metadata for SDAirDropHashError, v26, 0LL, 0LL);
        *unint64_t v28 = 0;
        swift_willThrow(v27);
        return (uint64_t)v2;
      }

      uint64_t v17 = OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo;
      uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo];
      uint64_t v19 = v31;
      if (v18)
      {
        id v20 = [v18 identifier];
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        double v23 = v22;

        if (v21 == v19 && v23 == a2)
        {
          swift_bridgeObjectRelease(a2);
        }

        else
        {
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v19, a2, 0LL);
          swift_bridgeObjectRelease(v23);
          if ((v25 & 1) == 0) {
            goto LABEL_10;
          }
        }

        uint64_t v2 = *(_BYTE **)&v2[v17];
        if (v2) {
          uint64_t v29 = v2;
        }
        return (uint64_t)v2;
      }

uint64_t sub_10038AD84(uint64_t a1, const char *a2)
{
  uint64_t v30 = a2;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  char v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  char v12 = _dispatchPreconditionTest(_:)(v7);
  id v13 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }

  *uint64_t v7 = v11;
  v10(v7, v9, v4);
  id v15 = v11;
  char v16 = _dispatchPreconditionTest(_:)(v7);
  uint64_t result = v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }

  if (v2[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully] == 1)
  {
    uint64_t v17 = v31;
    sub_100389EF0(a1, v30);
    if (!v17)
    {
      uint64_t v19 = (const char *)v18;
      sub_100381A3C(v18);
      uint64_t v21 = v20;
      swift_bridgeObjectRelease(v19);
      uint64_t v22 = v2;
      sub_10038EAE8((uint64_t)v21);
      unint64_t v24 = v23;
      swift_bridgeObjectRelease(v21);

      sub_1001902C4((uint64_t)v24);
      id v13 = v25;
      swift_bridgeObjectRelease(v24);
    }
  }

  else
  {
    unint64_t v26 = sub_10038FFB4();
    uint64_t v27 = swift_allocError(&type metadata for SDAirDropHashError, v26, 0LL, 0LL);
    *unint64_t v28 = 0;
    swift_willThrow(v27);
  }

  return (uint64_t)v13;
}

uint64_t sub_10038AF60(void *a1, const char *a2)
{
  unint64_t v24 = a2;
  uint64_t v4 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  *uint64_t v7 = v8;
  uint64_t v9 = enum case for DispatchPredicate.onQueue(_:);
  char v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  id v11 = v8;
  char v12 = _dispatchPreconditionTest(_:)(v7);
  id v13 = *(uint64_t (**)(void *, uint64_t))(v5 + 8);
  uint64_t result = v13(v7, v4);
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }

  *uint64_t v7 = v11;
  v10(v7, v9, v4);
  id v15 = v11;
  char v16 = _dispatchPreconditionTest(_:)(v7);
  uint64_t result = v13(v7, v4);
  if ((v16 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1)
  {
    uint64_t v17 = v25;
    sub_1003895D0(a1, v24);
    if (!v17)
    {
      if (v18)
      {
        uint64_t v2 = v19;
        swift_bridgeObjectRelease(v18);
      }

      else
      {
        return 0LL;
      }
    }
  }

  else
  {
    unint64_t v20 = sub_10038FFB4();
    uint64_t v21 = swift_allocError(&type metadata for SDAirDropHashError, v20, 0LL, 0LL);
    _BYTE *v22 = 0;
    swift_willThrow(v21);
  }

  return v2;
}

id sub_10038B100(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2;
  uint64_t v22 = a1;
  uint64_t v3 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = v2;
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v6 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t))(v4 + 104);
  v9(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v10 = v7;
  char v11 = _dispatchPreconditionTest(_:)(v6);
  char v12 = *(void (**)(void *, uint64_t))(v4 + 8);
  v12(v6, v3);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }

  void *v6 = v10;
  v9(v6, v8, v3);
  id v13 = v10;
  char v14 = _dispatchPreconditionTest(_:)(v6);
  v12(v6, v3);
  if ((v14 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x10038B720LL);
  }

  if (*(_BYTE *)(v21 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1) {
    __asm { BR              X10 }
  }

  unint64_t v15 = sub_10038FFB4();
  uint64_t v16 = swift_allocError(&type metadata for SDAirDropHashError, v15, 0LL, 0LL);
  *uint64_t v17 = 0;
  swift_willThrow(v16);
  return v10;
}

uint64_t sub_10038B738(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v3 = type metadata accessor for DispatchPredicate(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ);
  void *v6 = v7;
  uint64_t v8 = enum case for DispatchPredicate.onQueue(_:);
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t))(v4 + 104);
  v9(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v10 = v7;
  char v11 = _dispatchPreconditionTest(_:)(v6);
  char v12 = *(void (**)(void *, uint64_t))(v4 + 8);
  v12(v6, v3);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }

  void *v6 = v10;
  v9(v6, v8, v3);
  id v13 = v10;
  char v14 = _dispatchPreconditionTest(_:)(v6);
  v12(v6, v3);
  if ((v14 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x10038BA78LL);
  }

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashesUpdatedSuccessfully) == 1) {
    __asm { BR              X11 }
  }

  unint64_t v15 = sub_10038FFB4();
  uint64_t v16 = swift_allocError(&type metadata for SDAirDropHashError, v15, 0LL, 0LL);
  *uint64_t v17 = 0;
  swift_willThrow(v16);
  return v18 & 1;
}

uint64_t sub_10038BA90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t result = NSNotFound.getter();
  uint64_t v7 = v5 + a2;
  if (__OFADD__(v5, a2))
  {
    __break(1u);
  }

  else if (v5 != result && v5 < v7)
  {
    *a3 = v5;
    a3[1] = v7;
    return result;
  }

  __break(1u);
  return result;
}

NSString *sub_10038BAE0()
{
  uint64_t v0 = sub_100183098(&qword_100650450);
  uint64_t v1 = swift_allocObject(v0, 56LL, 7LL);
  *(_OWORD *)(v1 + sub_100195658(v0 + 16) = xmmword_1004D8000;
  *(void *)(v1 + 32) = CNContactPhoneNumbersKey;
  *(void *)(v1 + 40) = CNContactEmailAddressesKey;
  uint64_t v5 = v1;
  *(void *)(v1 + 48) = CNContactInstantMessageAddressesKey;
  specialized Array._endMutation()(v1);
  qword_100651970 = v5;
  uint64_t v2 = CNContactPhoneNumbersKey;
  uint64_t v3 = CNContactEmailAddressesKey;
  return CNContactInstantMessageAddressesKey;
}

uint64_t sub_10038BB7C()
{
  uint64_t v0 = sub_100183098(&qword_1006451D8);
  uint64_t inited = swift_initStackObject(v0, &v25);
  *(_OWORD *)(inited + sub_100195658(v0 + 16) = xmmword_1004D8010;
  id v2 = [(id)objc_opt_self(CNContactFormatter) descriptorForRequiredKeysForStyle:0];
  *(void *)(inited + 56) = swift_getObjectType(v2);
  *(void *)(inited + 32) = v2;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactNamePrefixKey);
  *(void *)(inited + 88) = &type metadata for String;
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = v4;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactGivenNameKey);
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 104) = v6;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactMiddleNameKey);
  *(void *)(inited + 152) = &type metadata for String;
  *(void *)(inited + 128) = v7;
  *(void *)(inited + 136) = v8;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactFamilyNameKey);
  *(void *)(inited + 184) = &type metadata for String;
  *(void *)(inited + 160) = v9;
  *(void *)(inited + 168) = v10;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPreviousFamilyNameKey);
  *(void *)(inited + 2sub_100195658(v0 + 16) = &type metadata for String;
  *(void *)(inited + 192) = v11;
  *(void *)(inited + 200) = v12;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactNameSuffixKey);
  *(void *)(inited + 248) = &type metadata for String;
  *(void *)(inited + 224) = v13;
  *(void *)(inited + 232) = v14;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactNicknameKey);
  *(void *)(inited + 280) = &type metadata for String;
  *(void *)(inited + 256) = v15;
  *(void *)(inited + 264) = v16;
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactOrganizationNameKey);
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 288) = v17;
  *(void *)(inited + 296) = v18;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactTypeKey);
  *(void *)(inited + 344) = &type metadata for String;
  *(void *)(inited + 320) = v19;
  *(void *)(inited + 328) = v20;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(CNContactPostalAddressesKey);
  *(void *)(inited + 376) = &type metadata for String;
  *(void *)(inited + 352) = v21;
  *(void *)(inited + 360) = v22;
  uint64_t v23 = sub_1002DE5EC(inited);
  swift_setDeallocating(inited);
  uint64_t result = swift_arrayDestroy(inited + 32, 11LL, (char *)&type metadata for Any + 8);
  qword_100651978 = (uint64_t)v23;
  return result;
}

void sub_10038BD2C()
{
  qword_100651980 = (uint64_t)&_swiftEmptyArrayStorage;
}

void sub_10038BD40()
{
  qword_100651988 = (uint64_t)&_swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for SDAirDropContactHashManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC16DaemoniOSLibrary27SDAirDropContactHashManager);
}

uint64_t sub_10038BF68(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  uint64_t v11 = swift_allocObject(&unk_1005DDBA0, 32LL, 7LL);
  *(void *)(v11 + sub_100195658(v0 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_10039020C;
  uint64_t v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005DDBB8;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v1;
  static DispatchQoS.unspecified.getter(a1);
  uint64_t v19 = _swiftEmptyArrayStorage;
  uint64_t v14 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v15 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v16 = sub_1001DFF80((unint64_t *)&qword_100646520, (uint64_t *)&unk_1006460D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release(v21);
}

void sub_10038C154(uint64_t a1, void *a2)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v4, (uint64_t)qword_100651950);
    id v5 = a2;
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc(32LL, -1LL);
      uint64_t v32 = swift_slowAlloc(96LL, -1LL);
      v36[0] = v32;
      *(_DWORD *)uint64_t v8 = 136315650;
      id v9 = [v5 givenName];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      uint64_t v12 = v11;

      uint64_t v34 = sub_10018CDB4(v10, (unint64_t)v12, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v8 + 4, v8 + 12);

      *(void *)&double v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
      *(_WORD *)(v8 + 12) = 2080;
      id v14 = objc_msgSend(v5, "familyName", v13);
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      uint64_t v17 = v16;

      uint64_t v34 = sub_10018CDB4(v15, (unint64_t)v17, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v8 + 14, v8 + 22);

      *(void *)&double v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
      *(_WORD *)(v8 + 22) = 2080;
      id v19 = objc_msgSend(v5, "identifier", v18);
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      uint64_t v22 = v21;

      uint64_t v34 = sub_10018CDB4(v20, (unint64_t)v22, v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v8 + 24, v8 + 32);

      swift_bridgeObjectRelease(v22);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Setting meCard (fn=%s,ln=%s,cid=%s)", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy(v32, 3LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1LL, -1LL);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    else
    {
    }

    sub_100386838(v5);
    uint64_t v27 = (void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo);
    unint64_t v28 = *(void **)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardInfo);
    uint64_t v29 = v27[1];
    *uint64_t v27 = v5;
    v27[1] = v30;
    id v31 = v5;
    sub_100390214(v28, v29);
  }

  else
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v23 = type metadata accessor for Logger(0LL);
    uint64_t v24 = sub_100186DE4(v23, (uint64_t)qword_100651950);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v25, "Not activated in setMeCard. Bailing.", v26, 2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }
  }

uint64_t sub_10038C6F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, const char *a3@<X2>, uint64_t *a4@<X8>)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    uint64_t result = sub_10038A9A4(a2, a3);
    if (v4)
    {
      if (qword_100644228 != -1) {
        swift_once(&qword_100644228, sub_100382454);
      }
      uint64_t v7 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v7, (uint64_t)qword_100651950);
      swift_errorRetain(v4);
      uint64_t v8 = swift_errorRetain(v4);
      id v9 = (os_log_s *)Logger.logObject.getter(v8);
      os_log_type_t v10 = static os_log_type_t.error.getter(v9);
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v12 = swift_slowAlloc(32LL, -1LL);
        uint64_t v24 = v12;
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_getErrorValue(v4, v23, v22);
        uint64_t v13 = Error.localizedDescription.getter(v22[1], v22[2]);
        uint64_t v15 = (const char *)v14;
        uint64_t v21 = sub_10018CDB4(v13, v14, &v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v11 + 4, v11 + 12);
        swift_bridgeObjectRelease(v15);
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Error: failed to get contactForCombinedHash because (%s)",  v11,  0xCu);
        swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1LL, -1LL);
        swift_slowDealloc(v11, -1LL, -1LL);

        swift_errorRelease(v4);
      }

      else
      {
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        swift_errorRelease(v4);
      }

      uint64_t result = 0LL;
    }
  }

  else
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100651950);
    double v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not activated in contactForCombinedHash. Bailing.", v20, 2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    uint64_t result = 0LL;
  }

  *a4 = result;
  return result;
}

void *sub_10038CA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, void *a4@<X8>)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) != 1)
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100651950);
    double v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Not activated in contactsForCombinedHash. Bailing.", v20, 2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    goto LABEL_14;
  }

  uint64_t result = (void *)sub_10038AD84(a2, a3);
  if (v4)
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v7, (uint64_t)qword_100651950);
    swift_errorRetain(v4);
    uint64_t v8 = swift_errorRetain(v4);
    id v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.error.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v12 = swift_slowAlloc(32LL, -1LL);
      uint64_t v24 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_getErrorValue(v4, v23, v22);
      uint64_t v13 = Error.localizedDescription.getter(v22[1], v22[2]);
      uint64_t v15 = (const char *)v14;
      uint64_t v21 = sub_10018CDB4(v13, v14, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(v4);
      swift_errorRelease(v4);
      _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Error: failed to get contactsForCombinedHash because (%s)",  v11,  0xCu);
      swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1LL, -1LL);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    else
    {
      swift_errorRelease(v4);
      swift_errorRelease(v4);
    }

    swift_errorRelease(v4);

LABEL_14:
    uint64_t result = &_swiftEmptySetSingleton;
  }

  *a4 = result;
  return result;
}

void sub_10038CE90( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, const char *a5@<X4>, const char *a6@<X5>, uint64_t *a7@<X8>)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    uint64_t v10 = a4(a2, a3);
    if (!v7)
    {
      *a7 = v10;
      a7[1] = v11;
      return;
    }

    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v12 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v12, (uint64_t)qword_100651950);
    swift_errorRetain(v7);
    uint64_t v13 = swift_errorRetain(v7);
    unint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v17 = swift_slowAlloc(32LL, -1LL);
      uint64_t v30 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      swift_getErrorValue(v7, v29, v28);
      uint64_t v18 = Error.localizedDescription.getter(v28[1], v28[2]);
      uint64_t v20 = (const char *)v19;
      uint64_t v27 = sub_10018CDB4(v18, v19, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v16 + 4, v16 + 12);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, a6, v16, 0xCu);
      swift_arrayDestroy(v17, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v17, -1LL, -1LL);
      swift_slowDealloc(v16, -1LL, -1LL);

      swift_errorRelease(v7);
    }

    else
    {
      swift_errorRelease(v7);
      swift_errorRelease(v7);
      swift_errorRelease(v7);
    }
  }

  else
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v22 = type metadata accessor for Logger(0LL);
    uint64_t v23 = sub_100186DE4(v22, (uint64_t)qword_100651950);
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, a5, v26, 2u);
      swift_slowDealloc(v26, -1LL, -1LL);
    }
  }

  *a7 = 0LL;
  a7[1] = 0LL;
}

void sub_10038D234(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    char v6 = sub_10038B738(a2, a3);
    if (v4)
    {
      if (qword_100644228 != -1) {
        swift_once(&qword_100644228, sub_100382454);
      }
      uint64_t v7 = type metadata accessor for Logger(0LL);
      sub_100186DE4(v7, (uint64_t)qword_100651950);
      swift_errorRetain(v4);
      uint64_t v8 = swift_errorRetain(v4);
      id v9 = (os_log_s *)Logger.logObject.getter(v8);
      os_log_type_t v10 = static os_log_type_t.error.getter(v9);
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v12 = swift_slowAlloc(32LL, -1LL);
        uint64_t v25 = v12;
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_getErrorValue(v4, v24, v23);
        uint64_t v13 = Error.localizedDescription.getter(v23[1], v23[2]);
        os_log_type_t v15 = (const char *)v14;
        uint64_t v22 = sub_10018CDB4(v13, v14, &v25);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v11 + 4, v11 + 12);
        swift_bridgeObjectRelease(v15);
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        _os_log_impl( (void *)&_mh_execute_header,  v9,  v10,  "Hash manager: failed to determine if contacts contain short hashes with error (%s)",  v11,  0xCu);
        swift_arrayDestroy(v12, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v12, -1LL, -1LL);
        swift_slowDealloc(v11, -1LL, -1LL);

        swift_errorRelease(v4);
      }

      else
      {
        swift_errorRelease(v4);
        swift_errorRelease(v4);
        swift_errorRelease(v4);
      }

      char v21 = 0;
    }

    else
    {
      char v21 = v6 & 1;
    }
  }

  else
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    uint64_t v17 = sub_100186DE4(v16, (uint64_t)qword_100651950);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  v18,  v19,  "Not activated in contactsContainsShortHashes. Bailing.",  v20,  2u);
      swift_slowDealloc(v20, -1LL, -1LL);
    }

    char v21 = 0;
  }

  *a4 = v21;
}

__n128 sub_10038D5AC()
{
  if (qword_100644238 != -1) {
    swift_once(&qword_100644238, sub_10038BAE0);
  }
  qword_100669898 = qword_100651970;
  return swift_bridgeObjectRetain((const char *)qword_100651970);
}

void sub_10038D610()
{
  if (qword_100644238 != -1) {
    swift_once(&qword_100644238, sub_10038BAE0);
  }
  uint64_t v0 = (const char *)qword_100651970;
  if (qword_100644240 != -1) {
    swift_once(&qword_100644240, sub_10038BB7C);
  }
  uint64_t v1 = (const char *)qword_100651978;
  *(void *)&double v2 = swift_bridgeObjectRetain(v0).n128_u64[0];
  swift_bridgeObjectRetain(v1, v2);
  sub_10028A634(v3);
  if (qword_100644248 != -1) {
    swift_once(&qword_100644248, sub_10038BD2C);
  }
  uint64_t v4 = (const char *)qword_100651980;
  *(void *)&double v5 = swift_bridgeObjectRetain(v0).n128_u64[0];
  swift_bridgeObjectRetain(v4, v5);
  sub_10028A634(v6);
  swift_bridgeObjectRelease(v0);
  if (qword_100644250 != -1) {
    swift_once(&qword_100644250, sub_10038BD40);
  }
  uint64_t v7 = (const char *)qword_100651988;
  *(void *)&double v8 = swift_bridgeObjectRetain(v0).n128_u64[0];
  swift_bridgeObjectRetain(v7, v8);
  sub_10028A634(v9);
  swift_bridgeObjectRelease(v0);
  qword_1006698A0 = (uint64_t)v0;
}

Class sub_10038D78C(uint64_t a1, uint64_t a2, void *a3, const char **a4, uint64_t a5)
{
  if (*a3 != -1LL) {
    swift_once(a3, a5);
  }
  uint64_t v6 = *a4;
  swift_bridgeObjectRetain(v6);
  sub_100183098(&qword_10064B7C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  return isa;
}

void sub_10038D7F8(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_100651950);
    double v8 = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)os_log_type_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Database dump requested", v10, 2u);
      swift_slowDealloc(v10, -1LL, -1LL);
    }

    uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB);
    uint64_t v12 = *(void *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashDB + 8);
    uint64_t ObjectType = swift_getObjectType(v11);
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 72);
    swift_unknownObjectRetain(v11);
    char v15 = v14(a2, ObjectType, v12);
    swift_unknownObjectRelease(v11);
    char v16 = v15 & 1;
  }

  else
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL);
    uint64_t v18 = sub_100186DE4(v17, (uint64_t)qword_100651950);
    os_log_type_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)char v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Not activated in dumpDB. Bailing.", v21, 2u);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    char v16 = 0;
  }

  *a3 = v16;
}

uint64_t sub_10038DAC4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_hashManagerQ];
  uint64_t v9 = swift_allocObject(&unk_1005DD8A8, 24LL, 7LL);
  *(void *)(v9 + sub_100195658(v0 + 16) = v0;
  aBlock[4] = sub_10038FEA0;
  uint64_t v18 = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1001B9FE4;
  aBlock[3] = &unk_1005DD8C0;
  os_log_type_t v10 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v0);
  char v16 = _swiftEmptyArrayStorage;
  uint64_t v11 = sub_100183F14( (unint64_t *)&qword_100646510,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v12 = sub_100183098((uint64_t *)&unk_1006460D0);
  uint64_t v13 = sub_1001DFF80((unint64_t *)&qword_100646520, (uint64_t *)&unk_1006460D0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v16, v12, v13, v1, v11);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v8, v4, v10);
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release(v18);
}

void sub_10038DCA8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_activated) == 1)
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v1 = type metadata accessor for Logger(0LL);
    uint64_t v2 = sub_100186DE4(v1, (uint64_t)qword_100651950);
    uint64_t v3 = (os_log_s *)Logger.logObject.getter(v2);
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requesting hash database rebuild", v5, 2u);
      swift_slowDealloc(v5, -1LL, -1LL);
    }

    sub_100383354(1);
  }

  else
  {
    if (qword_100644228 != -1) {
      swift_once(&qword_100644228, sub_100382454);
    }
    uint64_t v6 = type metadata accessor for Logger(0LL);
    uint64_t v7 = sub_100186DE4(v6, (uint64_t)qword_100651950);
    osos_log_t log = (os_log_s *)Logger.logObject.getter(v7);
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v8, "Not activated in rebuildDB. Bailing.", v9, 2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }
  }

uint64_t sub_10038DEF4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = type metadata accessor for SHA256(0LL);
  uint64_t v39 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = type metadata accessor for SHA256Digest(0LL);
  v37[4] = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  v37[3] = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for String.Encoding(0LL);
  uint64_t v41 = *(void *)(v9 - 8);
  uint64_t v42 = v9;
  __chkstk_darwin(v9);
  unint64_t v40 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_10038E658(a3);
  v50[0] = a1;
  swift_bridgeObjectRetain(a1);
  sub_10028AB28(v11);
  int64_t v12 = sub_100378448(a3, (uint64_t)v50[0]);
  int64_t v16 = v15 >> 1;
  uint64_t v17 = (v15 >> 1) - v14;
  if (__OFSUB__(v15 >> 1, v14))
  {
    __break(1u);
    goto LABEL_12;
  }

  int64_t v18 = v12;
  if (v17)
  {
    uint64_t v19 = v13;
    uint64_t v20 = v14;
    int64_t v49 = _swiftEmptyArrayStorage;
    sub_10018DA74(0, v17 & ~(v17 >> 63), 0);
    if ((v17 & 0x8000000000000000LL) == 0)
    {
      v37[0] = v18;
      uint64_t v48 = 0LL;
      if (v20 <= v16) {
        uint64_t v21 = v16;
      }
      else {
        uint64_t v21 = v20;
      }
      uint64_t v22 = v21 - v20;
      uint64_t v23 = (void *)(v19 + 16 * v20);
      v37[2] = a2;
      uint64_t v24 = (const char **)(v23 + 1);
      Swift::Int v43 = v7;
      if (v22)
      {
        uint64_t v25 = *v23;
        unint64_t v26 = *v24;
        uint64_t v27 = swift_bridgeObjectRetain(*v24, v37[0]);
        unint64_t v28 = v40;
        static String.Encoding.utf8.getter(v27);
        *(void *)&__int128 v45 = v26;
        uint64_t v29 = (const char *)String.data(using:allowLossyConversion:)(v28, 0LL, v25, v26);
        id v31 = v30;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v42);
        v50[6] = v29;
        v50[7] = v31;
        uint64_t v32 = sub_100183098(&qword_100645150);
        Optional.unwrap(_:file:line:)( v50,  sub_10038E93C,  0LL,  "DaemoniOSLibrary/SDAirDropContactHashManager.swift",  50LL,  2LL,  1243LL,  v32);
        sub_100189B0C((uint64_t)v29, (unint64_t)v31);
        unint64_t v33 = (unint64_t)v50[1];
        uint64_t v34 = sub_100183F14( (unint64_t *)&unk_10064D7C0,  (uint64_t (*)(uint64_t))&type metadata accessor for SHA256,  (uint64_t)&protocol conformance descriptor for SHA256);
        dispatch thunk of HashFunction.init()(v44, v34);
        uint64_t v35 = (char *)&loc_10038E180 + *((int *)qword_10038E568 + (v33 >> 62));
        uint64_t v46 = v22;
        uint64_t v47 = v17;
        __asm { BR              X9 }
      }

      __break(1u);
      JUMPOUT(0x10038E54CLL);
    }

uint64_t sub_10038E658(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID(0LL);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  uint64_t result = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a1 < 1)
  {
    __break(1u);
  }

  else
  {
    uint64_t v6 = sub_10018D648((void *)1, a1);
    uint64_t v7 = sub_10038EC10((uint64_t)v6, 0xD000000000000018LL, (const char *)0x800000010050CB50LL);
    swift_release(v6);
    uint64_t v8 = v7[2];
    uint64_t v32 = (const char *)v7;
    if (v8)
    {
      uint64_t v9 = (const char **)(v7 + 5);
      uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
      int64_t v12 = &selRef_setWatchIDsMissingSessionKey_;
      uint64_t v35 = v10;
      while (1)
      {
        uint64_t v36 = v11;
        uint64_t v14 = *v9;
        swift_bridgeObjectRetain(*v9);
        id v15 = [v10 v12[131]];
        NSString v16 = String._bridgeToObjectiveC()();
        uint64_t v17 = v12;
        id v18 = [v15 stringForKey:v16];

        if (v18)
        {
          swift_bridgeObjectRelease(v14);
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
          uint64_t v22 = v21;

          uint64_t v11 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0) {
            uint64_t v11 = sub_10018BC54(0LL, *((void *)v11 + 2) + 1LL, 1, v11);
          }
          int64_t v12 = &selRef_setWatchIDsMissingSessionKey_;
          unint64_t v24 = *((void *)v11 + 2);
          unint64_t v23 = *((void *)v11 + 3);
          int64_t v25 = v24 + 1;
          if (v24 < v23 >> 1) {
            goto LABEL_7;
          }
        }

        else
        {
          uint64_t v26 = UUID.init()(v19);
          uint64_t v20 = UUID.uuidString.getter(v26);
          uint64_t v22 = v27;
          (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v34);
          id v28 = [v10 v17[131]];
          NSString v29 = String._bridgeToObjectiveC()();
          NSString v30 = String._bridgeToObjectiveC()();
          objc_msgSend(v28, "setObject:forKey:", v29, v30, swift_bridgeObjectRelease(v14).n128_f64[0]);

          uint64_t v11 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0) {
            uint64_t v11 = sub_10018BC54(0LL, *((void *)v11 + 2) + 1LL, 1, v11);
          }
          unint64_t v24 = *((void *)v11 + 2);
          unint64_t v23 = *((void *)v11 + 3);
          int64_t v25 = v24 + 1;
          int64_t v12 = &selRef_setWatchIDsMissingSessionKey_;
          if (v24 < v23 >> 1) {
            goto LABEL_7;
          }
        }

        uint64_t v11 = sub_10018BC54((char *)(v23 > 1), v25, 1, v11);
LABEL_7:
        *((void *)v11 + 2) = v25;
        uint64_t v13 = &v11[16 * v24];
        *((void *)v13 + 4) = v20;
        *((void *)v13 + 5) = v22;
        v9 += 2;
        --v8;
        uint64_t v10 = v35;
        if (!v8) {
          goto LABEL_5;
        }
      }
    }

    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_5:
    swift_bridgeObjectRelease(v32);
    return (uint64_t)v11;
  }

  return result;
}

unint64_t sub_10038E93C()
{
  return 0xD00000000000001CLL;
}

void sub_10038E958()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0LL;
    while (1)
    {
      unint64_t v23 = 0LL;
      swift_stdlib_random(&v23, 8LL);
      uint64_t v6 = (v23 * (unsigned __int128)v2) >> 64;
      if (v2 > v23 * v2)
      {
        unint64_t v7 = -(uint64_t)v2 % v2;
        if (v7 > v23 * v2)
        {
          do
          {
            unint64_t v23 = 0LL;
            swift_stdlib_random(&v23, 8LL);
          }

          while (v7 > v23 * v2);
          uint64_t v6 = (v23 * (unsigned __int128)v2) >> 64;
        }
      }

      unint64_t v8 = v4 + v6;
      if (__OFADD__(v4, v6)) {
        break;
      }
      if (v4 != v8)
      {
        unint64_t v9 = *(void *)(v1 + 16);
        if (v4 >= v9) {
          goto LABEL_19;
        }
        if (v8 >= v9) {
          goto LABEL_20;
        }
        uint64_t v10 = (uint64_t *)(v1 + 32 + 16 * v4);
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        uint64_t v13 = (uint64_t *)(v1 + 32 + 16 * v8);
        uint64_t v14 = *v13;
        unint64_t v15 = v13[1];
        sub_10019BA8C(*v10, v12);
        sub_10019BA8C(v14, v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0) {
          uint64_t v1 = sub_1002FAD50(v1);
        }
        if (v4 >= *(void *)(v1 + 16)) {
          goto LABEL_21;
        }
        NSString v16 = (uint64_t *)(v1 + 32 + 16 * v4);
        uint64_t v17 = *v16;
        unint64_t v18 = v16[1];
        *NSString v16 = v14;
        v16[1] = v15;
        sub_100189B20(v17, v18);
        if (v8 >= *(void *)(v1 + 16)) {
          goto LABEL_22;
        }
        uint64_t v19 = (uint64_t *)(v1 + 32 + 16 * v8);
        uint64_t v20 = *v19;
        unint64_t v21 = v19[1];
        uint64_t *v19 = v11;
        v19[1] = v12;
        sub_100189B20(v20, v21);
        uint64_t *v22 = v1;
      }

      --v2;
      if (v4++ == v3) {
        return;
      }
    }

    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }

void sub_10038EAE8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    unint64_t v5 = swift_bridgeObjectRetain((const char *)a1).n128_u64[0];
    uint64_t v6 = (const char **)(a1 + 40);
    do
    {
      uint64_t v8 = (uint64_t)*(v6 - 1);
      unint64_t v9 = *v6;
      swift_bridgeObjectRetain(*v6, *(double *)&v5);
      uint64_t v10 = sub_10038AB6C(v8, v9);
      if (v2)
      {
        *(void *)&double v15 = swift_bridgeObjectRelease((const char *)a1).n128_u64[0];
        *(void *)&double v16 = swift_bridgeObjectRelease(v9, v15).n128_u64[0];
        swift_bridgeObjectRelease((const char *)_swiftEmptyArrayStorage, v16);
        return;
      }

      uint64_t v11 = v10;
      unint64_t v5 = swift_bridgeObjectRelease(v9).n128_u64[0];
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        unint64_t v14 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v13 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v14 >= v13 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1LL);
        }
        uint64_t v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
        specialized Array._endMutation()(v7);
      }

      v6 += 2;
      --v4;
    }

    while (v4);
    swift_bridgeObjectRelease((const char *)a1);
  }

void *sub_10038EC10(uint64_t a1, uint64_t a2, const char *a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_10018D82C(0, v3, 0);
    uint64_t v6 = a1 + 32;
    do
    {
      v6 += 8LL;
      swift_bridgeObjectRetain(a3);
      v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
      object = (const char *)v7._object;
      String.append(_:)(v7);
      swift_bridgeObjectRelease(object);
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_10018D82C(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = a2;
      v11[5] = a3;
      --v3;
    }

    while (v3);
  }

  return _swiftEmptyArrayStorage;
}

Swift::Int sub_10038ED2C(Swift::Int result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (Swift::Int)_swiftEmptyArrayStorage;
  }
  unint64_t v3 = 0LL;
  unint64_t v21 = (Swift::UInt64 *)(a2 + 56);
  Swift::Int v22 = result + 32;
  unint64_t v23 = _swiftEmptyArrayStorage;
  unint64_t v30 = *(void *)(result + 16);
  uint64_t v31 = a2;
  do
  {
    if (v3 <= v2) {
      unint64_t v4 = v2;
    }
    else {
      unint64_t v4 = v3;
    }
    unint64_t v32 = v4;
    unint64_t v5 = v3;
    while (1)
    {
      if (v5 == v32)
      {
        __break(1u);
        return result;
      }

      unint64_t v33 = v5 + 1;
      uint64_t v6 = *(void *)(a2 + 16);
      if (v6) {
        break;
      }
LABEL_7:
      unint64_t v5 = v33;
      a2 = v31;
      if (v33 == v30) {
        return (Swift::Int)v23;
      }
    }

    Swift::Int v7 = v22 + 72 * v5;
    uint64_t v27 = *(const char **)(v7 + 8);
    uint64_t v28 = *(void *)v7;
    int64_t v25 = *(const char **)(v7 + 24);
    uint64_t v26 = *(void *)(v7 + 16);
    Swift::UInt64 v8 = *(void *)(v7 + 40);
    Swift::UInt64 v9 = *(void *)(v7 + 48);
    Swift::UInt64 v34 = *(void *)(v7 + 56);
    Swift::UInt64 v35 = *(void *)(v7 + 32);
    int v29 = *(unsigned __int16 *)(v7 + 64) | (*(unsigned __int8 *)(v7 + 66) << 16);
    char v24 = *(_BYTE *)(v7 + 67);
    unint64_t v10 = v21;
    while (1)
    {
      Swift::UInt64 v12 = *(v10 - 1);
      Swift::UInt64 v11 = *v10;
      Swift::UInt64 v13 = *(v10 - 3);
      Swift::UInt64 v14 = *(v10 - 2);
      Hasher.init(_seed:)(v36);
      Hasher._combine(_:)(v13);
      Hasher._combine(_:)(v14);
      Hasher._combine(_:)(v12);
      Hasher._combine(_:)(v11);
      Swift::Int v15 = Hasher._finalize()();
      Hasher.init(_seed:)(v36);
      Hasher._combine(_:)(v35);
      Hasher._combine(_:)(v8);
      Hasher._combine(_:)(v9);
      Hasher._combine(_:)(v34);
      uint64_t result = Hasher._finalize()();
      if (v15 == result) {
        break;
      }
      v10 += 4;
      if (!--v6) {
        goto LABEL_7;
      }
    }

    *(void *)&double v16 = swift_bridgeObjectRetain(v27).n128_u64[0];
    swift_bridgeObjectRetain(v25, v16);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native(v23);
    uint64_t v17 = v23;
    uint64_t v37 = v23;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10018D9E8(0, v23[2] + 1LL, 1);
      uint64_t v17 = v37;
    }

    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1)
    {
      uint64_t result = sub_10018D9E8(v18 > 1, v19 + 1, 1);
      uint64_t v17 = v37;
    }

    v17[2] = v19 + 1;
    unint64_t v23 = v17;
    uint64_t v20 = &v17[9 * v19];
    v20[4] = v28;
    v20[5] = v27;
    v20[6] = v26;
    v20[7] = v25;
    v20[8] = v35;
    v20[9] = v8;
    v20[10] = v9;
    v20[11] = v34;
    *((_BYTE *)v20 + 98) = BYTE2(v29);
    *((_WORD *)v20 + 48) = v29;
    *((_BYTE *)v20 + 99) = v24;
    unint64_t v2 = v30;
    a2 = v31;
    unint64_t v3 = v33;
  }

  while (v33 != v30);
  return (Swift::Int)v23;
}

void sub_10038EFC4()
{
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___NSUserDefaults);
  char v1 = 0;
  uint64_t v2 = 0LL;
LABEL_2:
  char v18 = v1;
  unint64_t v3 = &off_1005D1850 + 2 * v2++;
  unint64_t v4 = (const char **)(v3 + 5);
  do
  {
    if ((unint64_t)(v2 - 1) >= 4)
    {
      __break(1u);
      goto LABEL_16;
    }

    unint64_t v5 = *v4;
    id v6 = objc_msgSend(v0, "standardUserDefaults", swift_bridgeObjectRetain(*v4).n128_f64[0]);
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 valueForKey:v7];

    if (v8)
    {
      _bridgeAnyObjectToAny(_:)(v19, v8);
      swift_unknownObjectRelease(v8);
      sub_100187100((uint64_t)v19, (uint64_t *)&unk_100646550);
      id v9 = [v0 standardUserDefaults];
      NSString v10 = String._bridgeToObjectiveC()();
      objc_msgSend(v9, "removeObjectForKey:", v10, swift_bridgeObjectRelease(v5).n128_f64[0]);

      char v1 = 1;
      if (v2 != 4) {
        goto LABEL_2;
      }
      swift_arrayDestroy(&unk_1005D1870, 4LL, &type metadata for String);
      goto LABEL_10;
    }

    memset(v19, 0, sizeof(v19));
    swift_bridgeObjectRelease(v5);
    sub_100187100((uint64_t)v19, (uint64_t *)&unk_100646550);
    ++v2;
    v4 += 2;
  }

  while (v2 != 5);
  swift_arrayDestroy(&unk_1005D1870, 4LL, &type metadata for String);
  if ((v18 & 1) == 0) {
    return;
  }
LABEL_10:
  if (qword_100644228 == -1) {
    goto LABEL_11;
  }
LABEL_16:
  swift_once(&qword_100644228, sub_100382454);
LABEL_11:
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v12 = sub_100186DE4(v11, (uint64_t)qword_100651950);
  Swift::UInt64 v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    Swift::Int v15 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)Swift::Int v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Found some deprecated state, resetting history token", v15, 2u);
    swift_slowDealloc(v15, -1LL, -1LL);
  }

  id v16 = [v0 standardUserDefaults];
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setObject:0 forKey:v17];
}

id sub_10038F2B0()
{
  uint64_t v0 = sub_100183098(&qword_100651A58);
  __chkstk_darwin(v0);
  uint64_t v81 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v2 = type metadata accessor for URL(0LL);
  unint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v79 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v74 - v7;
  __chkstk_darwin(v6);
  NSString v10 = (char *)&v74 - v9;
  uint64_t v11 = sub_100183098((uint64_t *)&unk_100651A60);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v80 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  Swift::Int v15 = (char *)&v74 - v14;
  id result = sub_100115468();
  if (result)
  {
    NSString v17 = result;
    char v18 = &v15[*(int *)(v11 + 48)];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    unint64_t v21 = v20;

    URL.init(fileURLWithPath:)(v19, v21);
    __n128 v22 = swift_bridgeObjectRelease(v21);
    URL.appendingPathComponent(_:)(0x48706F7244726941LL, 0xED00004244687361LL, v22);
    uint64_t v23 = v11;
    char v24 = (__n128 (*)(char *, uint64_t))v3[1];
    v24(v10, v2);
    URL.appendingPathComponent(_:)(0x48706F7244726941LL, 0xED00004244687361LL, v25);
    URL.appendingPathExtension(_:)(0x5F706F7264726961LL, 0xEC00000034766264LL);
    uint64_t v78 = v8;
    v24(v8, v2);
    uint64_t v77 = (char *)v23;
    uint64_t v26 = *(int *)(v23 + 48);
    uint64_t v27 = v80;
    uint64_t v28 = &v80[v26];
    int v29 = (void (*)(char *, char *, uint64_t))v3[2];
    v29(v80, v15, v2);
    v76.n128_u64[0] = (unint64_t)v18;
    v29(v28, v18, v2);
    unint64_t v30 = (void (*)(char *, char *, uint64_t))v3[4];
    uint64_t v31 = v79;
    v30(v79, v27, v2);
    v24(v28, v2);
    id v32 = [(id)objc_opt_self(NSFileManager) defaultManager];
    URL.relativePath.getter();
    Swift::UInt64 v34 = v33;
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = objc_msgSend(v32, "enumeratorAtPath:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

    if (v36)
    {
      uint64_t v37 = v80;
      uint64_t v38 = &v80[*((int *)v77 + 12)];
      uint64_t v77 = v15;
      v29(v80, v15, v2);
      uint64_t v39 = ((uint64_t (*)(char *, unint64_t, uint64_t))v29)(v38, v76.n128_u64[0], v2);
      uint64_t v40 = URL.lastPathComponent.getter(v39);
      uint64_t v42 = v41;
      v24(v38, v2);
      uint64_t v80 = (char *)v2;
      __n128 v44 = v24(v37, v2);
      Swift::Int v43 = &selRef_setDeviceSwitchUnlockRetryDate_;
      v44.n128_u64[0] = 136315138LL;
      __n128 v76 = v44;
      while (1)
      {
        id v45 = objc_msgSend(v36, v43[333], v44.n128_f64[0]);
        if (v45)
        {
          id v46 = v45;
          _bridgeAnyObjectToAny(_:)(v84, v45);
          swift_unknownObjectRelease(v46);
        }

        else
        {
          memset(v84, 0, sizeof(v84));
        }

        sub_1002E29F8((uint64_t)v84, (uint64_t)v85);
        if (!v85[3])
        {

          swift_bridgeObjectRelease(v42);
          sub_100187100((uint64_t)v85, (uint64_t *)&unk_100646550);
          goto LABEL_29;
        }

        uint64_t v48 = v82;
        uint64_t v47 = v83;
        if (v82 == v40 && v83 == v42)
        {
          v44.n128_u64[0] = swift_bridgeObjectRelease(v42).n128_u64[0];
        }

        else if ((_stringCompareWithSmolCheck(_:_:expecting:)(v82, v83, v40, v42, 0LL) & 1) != 0)
        {
          v44.n128_u64[0] = swift_bridgeObjectRelease(v47).n128_u64[0];
        }

        else
        {
          v85[0] = v48;
          v85[1] = (uint64_t)v47;
          *(void *)&v84[0] = v40;
          *((void *)&v84[0] + 1) = v42;
          uint64_t v49 = type metadata accessor for Locale(0LL);
          uint64_t v50 = (uint64_t)v81;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v81, 1LL, 1LL, v49);
          unint64_t v51 = sub_1001CCE8C();
          StringProtocol.range<A>(of:options:range:locale:)( v84,  0LL,  0LL,  0LL,  1LL,  v50,  &type metadata for String,  &type metadata for String,  v51,  v51);
          char v53 = v52;
          sub_100187100(v50, &qword_100651A58);
          if ((v53 & 1) != 0)
          {
            v44.n128_u64[0] = swift_bridgeObjectRelease(v47).n128_u64[0];
            Swift::Int v43 = &selRef_setDeviceSwitchUnlockRetryDate_;
          }

          else
          {
            if (qword_100644228 != -1) {
              swift_once(&qword_100644228, sub_100382454);
            }
            uint64_t v54 = type metadata accessor for Logger(0LL);
            sub_100186DE4(v54, (uint64_t)qword_100651950);
            swift_bridgeObjectRetain_n(v47, 2LL);
            unint64_t v56 = (os_log_s *)Logger.logObject.getter(v55);
            os_log_type_t v57 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v56, v57))
            {
              uint64_t v58 = swift_slowAlloc(12LL, -1LL);
              uint64_t v59 = swift_slowAlloc(32LL, -1LL);
              uint64_t v75 = v24;
              uint64_t v60 = v59;
              v85[0] = v59;
              *(_DWORD *)uint64_t v58 = v76.n128_u32[0];
              swift_bridgeObjectRetain(v47);
              *(void *)(v58 + 4) = sub_10018CDB4(v48, (unint64_t)v47, v85);
              swift_bridgeObjectRelease_n(v47, 3LL);
              _os_log_impl((void *)&_mh_execute_header, v56, v57, "Removing failed db state %s", (uint8_t *)v58, 0xCu);
              swift_arrayDestroy(v60, 1LL, (char *)&type metadata for Any + 8);
              uint64_t v61 = v60;
              char v24 = v75;
              swift_slowDealloc(v61, -1LL, -1LL);
              uint64_t v62 = v58;
              uint64_t v31 = v79;
              swift_slowDealloc(v62, -1LL, -1LL);
            }

            else
            {

              swift_bridgeObjectRelease_n(v47, 2LL);
            }

            NSString v64 = v78;
            URL.appendingPathComponent(_:)(v48, v47, v63);
            swift_bridgeObjectRelease(v47);
            sub_100383BD8();
            v24(v64, (uint64_t)v80);
            Swift::Int v43 = &selRef_setDeviceSwitchUnlockRetryDate_;
          }
        }
      }

      swift_bridgeObjectRelease(v42);
LABEL_29:
      uint64_t v66 = (uint64_t)v77;
      v24(v31, (uint64_t)v80);
    }

    else
    {
      uint64_t v65 = (void (*)(char *, uint64_t))v24;
      uint64_t v66 = (uint64_t)v15;
      if (qword_100644228 != -1) {
        swift_once(&qword_100644228, sub_100382454);
      }
      uint64_t v67 = type metadata accessor for Logger(0LL);
      uint64_t v68 = sub_100186DE4(v67, (uint64_t)qword_100651950);
      uint64_t v69 = (os_log_s *)Logger.logObject.getter(v68);
      os_log_type_t v70 = static os_log_type_t.error.getter(v69);
      if (os_log_type_enabled(v69, v70))
      {
        uint64_t v71 = v31;
        uint64_t v72 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl( (void *)&_mh_execute_header,  v69,  v70,  "Failed to create enumerator for AirDropHashDB directory",  v72,  2u);
        uint64_t v73 = v72;
        uint64_t v31 = v71;
        swift_slowDealloc(v73, -1LL, -1LL);
      }

      v65(v31, v2);
    }

    return (id)sub_100187100(v66, (uint64_t *)&unk_100651A60);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10038F9F8()
{
  id v0 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }

  else
  {
    memset(v5, 0, sizeof(v5));
  }

  sub_1002E29F8((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    else {
      return 0LL;
    }
  }

  else
  {
    sub_100187100((uint64_t)v6, (uint64_t *)&unk_100646550);
    return 0LL;
  }

uint64_t sub_10038FB18(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v5 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  sub_1001D95A8(a1, (uint64_t)v4);
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  Class isa = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1LL, v6) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }

  NSString v9 = String._bridgeToObjectiveC()();
  [v5 setObject:isa forKey:v9];

  swift_unknownObjectRelease(isa);
  return sub_100187100(a1, &qword_1006457E8);
}

uint64_t sub_10038FC50()
{
  id v0 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v5, v2);
    swift_unknownObjectRelease(v2);
  }

  else
  {
    memset(v5, 0, sizeof(v5));
  }

  sub_1002E29F8((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    else {
      return 0LL;
    }
  }

  else
  {
    sub_100187100((uint64_t)v6, (uint64_t *)&unk_100646550);
    return 0LL;
  }

uint64_t sub_10038FD70(const char *a1)
{
  uint64_t v1 = sub_10038DEF4(a1, 2LL, 4LL);
  unint64_t v3 = v2;
  sub_10019BA8C(v1, v2);
  sub_10028ADD0(v1, v3);
  uint64_t v4 = swift_bridgeObjectRetain((const char *)&off_1005D1900);
  id v5 = (char *)&off_1005D1900;
  if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0) {
    id v5 = sub_10018C0B4(0LL, 2LL, 1, (char *)&off_1005D1900);
  }
  unint64_t v7 = *((void *)v5 + 2);
  unint64_t v6 = *((void *)v5 + 3);
  if (v7 >= v6 >> 1) {
    id v5 = sub_10018C0B4((char *)(v6 > 1), v7 + 1, 1, v5);
  }
  *((void *)v5 + 2) = v7 + 1;
  v5[v7 + 32] = 0;
  swift_bridgeObjectRelease((const char *)&off_1005D1900);
  uint64_t v8 = sub_1003C08D8(v5);
  swift_bridgeObjectRelease(v5);
  sub_100189B20(v1, v3);
  return v8;
}

uint64_t sub_10038FE7C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10038FEA0()
{
}

uint64_t sub_10038FEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10038FEB8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_10038FEC0()
{
}

void sub_10038FED8(_BYTE *a1@<X8>)
{
}

void sub_10038FEF0()
{
}

void sub_10038FF10()
{
}

void sub_10038FF18()
{
}

uint64_t sub_10038FF38()
{
  return sub_100384C34();
}

void sub_10038FF58()
{
}

void sub_10038FF78()
{
}

void sub_10038FF98(_BYTE *a1@<X8>)
{
}

unint64_t sub_10038FFB4()
{
  unint64_t result = qword_100651A70;
  if (!qword_100651A70)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for SDAirDropHashError,  &type metadata for SDAirDropHashError);
    atomic_store(result, (unint64_t *)&qword_100651A70);
  }

  return result;
}

uint64_t sub_10038FFF8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100390008@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10038BA90(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100390010()
{
  return swift_deallocObject(v0, 32LL);
}

uint64_t sub_100390034@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = Data.subdata(in:)(*a1, a1[1], *(void *)(v2 + 16), *(void *)(v2 + 24));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_100390064()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_100390090(uint64_t *a1)
{
  void (*v3)(void *__return_ptr, uint64_t *);
  void v5[2];
  uint64_t v6;
  uint64_t v2 = *(uint64_t (**)(void *))(v1 + 16);
  unint64_t v3 = *(void (**)(void *__return_ptr, uint64_t *))(v1 + 56);
  unint64_t v6 = *a1;
  v3(v5, &v6);
  return v2(v5);
}

uint64_t sub_1003900E8(uint64_t a1)
{
  return a1;
}

void sub_100390110(uint64_t *a1@<X8>)
{
}

uint64_t sub_100390144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }

  return result;
}

void sub_100390174(uint64_t *a1@<X8>)
{
}

void *sub_1003901A8@<X0>(void *a1@<X8>)
{
  return sub_10038CA50(*(void *)(v1 + 16), *(void *)(v1 + 24), *(const char **)(v1 + 32), a1);
}

uint64_t sub_1003901C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10038C6F8(*(void *)(v1 + 16), *(void **)(v1 + 24), *(const char **)(v1 + 32), a1);
}

uint64_t sub_1003901E0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10039020C()
{
}

void *sub_100390214(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a2);
  }

  return result;
}

uint64_t sub_100390240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100384F8C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

id sub_100390278()
{
  return objc_msgSend( *(id *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_meCardUpdateCoalescer),
           "trigger");
}

id sub_100390294()
{
  return objc_msgSend( *(id *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC16DaemoniOSLibrary27SDAirDropContactHashManager_contactUpdateCoalescer),
           "trigger");
}

uint64_t sub_1003902B0(uint64_t *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003902EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003903A4()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100651A90);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100651A90);
  if (qword_100644000 != -1) {
    swift_once(&qword_100644000, sub_10023A4B4);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_100669670);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

uint64_t sub_100390434(uint64_t a1, const char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for NWEndpoint(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v10 = sub_100183098(&qword_10064DA60);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for UUID(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_allEndpoints) = &_swiftEmptySetSingleton;
  *(void *)(v3 + sub_100195658(v0 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1LL, 1LL, v13);
  swift_bridgeObjectRetain(a2);
  sub_100411A2C((uint64_t)v12, a1, (uint64_t)a2, (uint64_t)v16);
  sub_100187100((uint64_t)v12, &qword_10064DA60);
  uint64_t v31 = v14;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_connectableUUID,  v16,  v13);
  *NSString v9 = nw_endpoint_create_application_service("com.apple.AirDrop", v16);
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for NWEndpoint.opaque(_:), v6);
  (*(void (**)(uint64_t, void *, uint64_t))(v7 + 32))( v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_displayEndpoint,  v9,  v6);
  NSString v17 = (uint64_t *)(v3 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_classroomID);
  *NSString v17 = a1;
  v17[1] = (uint64_t)a2;
  if (qword_100644268 != -1) {
    swift_once(&qword_100644268, sub_1003903A4);
  }
  uint64_t v18 = type metadata accessor for Logger(0LL);
  sub_100186DE4(v18, (uint64_t)qword_100651A90);
  uint64_t v19 = swift_retain(v3);
  uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    __n128 v22 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v23 = swift_slowAlloc(32LL, -1LL);
    uint64_t v33 = v23;
    *(_DWORD *)__n128 v22 = 136315138;
    unint64_t v30 = v22 + 4;
    uint64_t v24 = v13;
    uint64_t v26 = *(void *)(v3 + 16);
    __n128 v25 = *(const char **)(v3 + 24);
    swift_bridgeObjectRetain(v25);
    uint64_t v27 = v26;
    uint64_t v13 = v24;
    uint64_t v32 = sub_10018CDB4(v27, (unint64_t)v25, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, &v33, v30, v22 + 12);
    swift_release(v3);
    swift_bridgeObjectRelease(v25);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Creating Classroom %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1LL, -1LL);
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {

    swift_release(v3);
  }

  (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v13);
  return v3;
}

uint64_t sub_1003907AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SFAirDrop.DeviceRelationship(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for SFAirDrop.TXTRecord(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = NWEndpoint.nw.getter(v10);
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = String.utf8CString.getter(*(void *)(a1 + 16), *(void *)(a1 + 24));
    nw_endpoint_set_device_name(v14, v15 + 32);
    swift_release(v15);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))( v7,  enum case for SFAirDrop.DeviceRelationship.classroom(_:),  v4);
    SFAirDrop.TXTRecord.init(deviceRelationship:)(v7);
    SFAirDrop.TXTRecord.addToEndpoint(_:)(v14);
    if (qword_100644268 != -1) {
      swift_once(&qword_100644268, sub_1003903A4);
    }
    uint64_t v16 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v16, (uint64_t)qword_100651A90);
    uint64_t v17 = swift_retain_n(v2, 2LL);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v29 = v21;
      uint64_t v26 = v12;
      uint64_t v27 = v9;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v25 = v8;
      uint64_t v22 = *(void *)(v2 + 16);
      uint64_t v23 = *(const char **)(v2 + 24);
      swift_bridgeObjectRetain(v23);
      uint64_t v28 = sub_10018CDB4(v22, (unint64_t)v23, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v20 + 4, v20 + 12);
      swift_release_n(v2, 2LL);
      swift_bridgeObjectRelease(v23);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "DiscoveredClassroom Updated %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1LL, -1LL);
      swift_slowDealloc(v20, -1LL, -1LL);

      swift_unknownObjectRelease(v14);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v26, v25);
    }

    else
    {
      swift_release_n(v2, 2LL);

      swift_unknownObjectRelease(v14);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100390A70()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_connectableUUID;
  uint64_t v2 = type metadata accessor for UUID(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_displayEndpoint;
  uint64_t v4 = type metadata accessor for NWEndpoint(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_classroomID
                                      + 8));
  swift_bridgeObjectRelease(*(void *)((char *)v0
                                      + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_allEndpoints));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t sub_100390B14()
{
  return type metadata accessor for SDAirDropDiscoveredClassroom(0LL);
}

uint64_t type metadata accessor for SDAirDropDiscoveredClassroom(uint64_t a1)
{
  uint64_t result = qword_100651AD8;
  if (!qword_100651AD8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropDiscoveredClassroom);
  }
  return result;
}

uint64_t sub_100390B58(uint64_t a1)
{
  v5[0] = &unk_1004D80B0;
  uint64_t result = type metadata accessor for UUID(319LL);
  if (v3 <= 0x3F)
  {
    v5[1] = *(void *)(result - 8) + 64LL;
    uint64_t result = type metadata accessor for NWEndpoint(319LL);
    if (v4 <= 0x3F)
    {
      _OWORD v5[2] = *(void *)(result - 8) + 64LL;
      v5[3] = &unk_1004D80B0;
      v5[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
      uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v5, a1 + 80);
      if (!result) {
        return 0LL;
      }
    }
  }

  return result;
}

uint64_t sub_100390BFC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16LL);
  uint64_t v2 = *(void **)(*(void *)v0 + 24LL);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  return 0x6F6F727373616C43LL;
}

uint64_t sub_100390C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_10028F740( &OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_displayEndpoint,  (uint64_t (*)(void))&type metadata accessor for NWEndpoint,  a1);
}

uint64_t sub_100390C80(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[13] = v3;
  unint64_t v4 = (*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v2[14] = swift_task_alloc(v4);
  v2[15] = swift_task_alloc(v4);
  v2[16] = swift_task_alloc(v4);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100390D28, static AirDropActor.shared, 0LL);
}

uint64_t sub_100390D28()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 104);
  sub_10019140C(*(void *)(v0 + 88), v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v1, v2);
  unint64_t v4 = *(_OWORD **)(v0 + 128);
  if (EnumCaseMultiPayload != 3)
  {
    sub_100191450((uint64_t)v4);
    goto LABEL_11;
  }

  uint64_t v5 = *(void *)(v0 + 96);
  __int128 v7 = v4[1];
  __int128 v6 = v4[2];
  *(_OWORD *)(v0 + sub_100195658(v0 + 16) = *v4;
  *(_OWORD *)(v0 + 32) = v7;
  *(_OWORD *)(v0 + 48) = v6;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_classroomID);
  uint64_t v11 = *(void *)(v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_classroomID + 8);
  if (v10 != v8 || v11 != v9)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v8, v9, 0LL) & 1) == 0)
    {
      if (qword_100644268 != -1) {
        swift_once(&qword_100644268, sub_1003903A4);
      }
      uint64_t v18 = type metadata accessor for Logger(0LL);
      uint64_t v19 = sub_100186DE4(v18, (uint64_t)qword_100651A90);
      uint64_t v20 = (void *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.error.getter(v20);
      if (!os_log_type_enabled((os_log_t)v20, v21))
      {
        sub_100215F18((void *)(v0 + 16));

        goto LABEL_11;
      }

      uint64_t v22 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v20, v21, "ClassroomID Mis-Match", v22, 2u);
      swift_slowDealloc(v22, -1LL, -1LL);

      goto LABEL_9;
    }

    uint64_t v5 = *(void *)(v0 + 96);
  }

  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  sub_10019140C(*(void *)(v0 + 88), v13);
  swift_beginAccess( v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_allEndpoints,  v0 + 64,  33LL,  0LL);
  sub_1003B52D4(v14, v13);
  swift_endAccess(v0 + 64);
  sub_100191450(v14);
  sub_1003907AC(v0 + 16);
LABEL_9:
  sub_100215F18((void *)(v0 + 16));
LABEL_11:
  uint64_t v15 = *(void *)(v0 + 120);
  uint64_t v16 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 128));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100390F24(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  uint64_t v3 = sub_100183098(&qword_100649F58);
  v2[13] = swift_task_alloc((*(void *)(*(void *)(v3 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for SDAirDropDiscoveredEndpoint(0LL);
  v2[14] = v4;
  v2[15] = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_100390FD4, static AirDropActor.shared, 0LL);
}

uint64_t sub_100390FD4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  sub_10019140C(*(void *)(v0 + 88), v2);
  if (swift_getEnumCaseMultiPayload(v2, v1) == 3)
  {
    uint64_t v3 = *(_OWORD **)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 88);
    __int128 v8 = v3[1];
    __int128 v7 = v3[2];
    *(_OWORD *)(v0 + sub_100195658(v0 + 16) = *v3;
    *(_OWORD *)(v0 + 32) = v8;
    *(_OWORD *)(v0 + 48) = v7;
    swift_beginAccess( v5 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_allEndpoints,  v0 + 64,  33LL,  0LL);
    sub_1003BE9C4(v6, v4);
    swift_endAccess(v0 + 64);
    sub_100187100(v4, &qword_100649F58);
    sub_1003907AC(v0 + 16);
    sub_100215F18((void *)(v0 + 16));
  }

  else
  {
    sub_100191450(*(void *)(v0 + 120));
  }

  uint64_t v9 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 120));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003910D0@<X0>(uint64_t a1@<X8>)
{
  return sub_10028F740( &OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_connectableUUID,  (uint64_t (*)(void))&type metadata accessor for UUID,  a1);
}

uint64_t sub_1003910E4()
{
  *(void *)(v1 + 40) = v0;
  if (qword_100643F28 != -1) {
    swift_once(&qword_100643F28, sub_100205C24);
  }
  return swift_task_switch(sub_10039114C, static AirDropActor.shared, 0LL);
}

uint64_t sub_10039114C()
{
  uint64_t v1 = (void *)(**(void **)(v0 + 40) + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropDiscoveredClassroom_allEndpoints);
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = swift_bridgeObjectRetain(*v1);
  return v4(v2);
}

uint64_t sub_1003911AC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_100651BAC);
  *(void *)(v1 + sub_100195658(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001943E8;
  return sub_100390C80(a1);
}

uint64_t sub_1003911FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc(dword_100651BA4);
  *(void *)(v1 + sub_100195658(v0 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100195708;
  return sub_100390F24(a1);
}

unint64_t sub_10039124C(uint64_t a1)
{
  unint64_t result = sub_100391270();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100391270()
{
  unint64_t result = qword_100651B98;
  if (!qword_100651B98)
  {
    uint64_t v1 = type metadata accessor for SDAirDropDiscoveredClassroom(255LL);
    unint64_t result = swift_getWitnessTable(&unk_1004D811C, v1);
    atomic_store(result, &qword_100651B98);
  }

  return result;
}

unint64_t sub_1003912B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_100651DD8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1001915A4(v6, (uint64_t)&v16, &qword_100651DE0);
    uint64_t v7 = v16;
    unint64_t result = sub_1003AD484(v16);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(void *)(v4[6] + 8 * result) = v7;
    uint64_t v10 = v4[7] + 40 * result;
    __int128 v11 = v17;
    __int128 v12 = v18;
    *(void *)(v10 + 32) = v19;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + sub_100195658(v0 + 16) = v12;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v15;
    v6 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003913F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_10064A478);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1001915A4(v7, (uint64_t)v16, &qword_100651D90);
    unint64_t result = sub_1003AD50C((uint64_t)v16);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v10 = v4[6] + 40 * result;
    __int128 v11 = v16[0];
    __int128 v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + sub_100195658(v0 + 16) = v12;
    unint64_t result = (unint64_t)sub_100186D8C(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v15;
    v7 += 72LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100391530(uint64_t a1)
{
  return sub_100391F10(a1, &qword_100651E50);
}

unint64_t sub_10039153C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_1006457A0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1001915A4(v7, (uint64_t)&v16, &qword_1006457A8);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_1003AD53C(v16, v17);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    __int128 v12 = (uint64_t *)(v4[6] + 16 * result);
    *__int128 v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_100186D8C(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v15;
    v7 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100391670(uint64_t a1)
{
  return sub_100391AAC( a1,  &qword_100651DF0,  &qword_100651DF8,  type metadata accessor for SDAirDropReceiveClassroomHandler.Continuation);
}

unint64_t sub_10039168C(uint64_t a1)
{
  return sub_100391F10(a1, &qword_100651D98);
}

unint64_t sub_100391698(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098((uint64_t *)&unk_1006469C0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v7 = *v6;
    id v8 = *(v6 - 1);
    id v9 = v7;
    unint64_t result = sub_1003AD550((uint64_t)v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v12 = 8 * result;
    *(void *)(v4[6] + v12) = v8;
    *(void *)(v4[7] + v12) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v15;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003917A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_100651E28);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *(v6 - 2);
    uint64_t v8 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    unint64_t result = sub_1003AD53C(v7, v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    *(void *)(v4[7] + 8 * result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 3;
    _OWORD v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003918B0(uint64_t a1)
{
  return sub_100391F10(a1, &qword_100651E48);
}

unint64_t sub_1003918BC(uint64_t a1)
{
  return sub_100392158( a1,  &qword_100651E00,  &qword_100651E08,  (uint64_t (*)(void))&type metadata accessor for SFAirDropSend.Transfer);
}

unint64_t sub_1003918D8(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100645020);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v25 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v25);
    return (unint64_t)v8;
  }

  sub_100183098(&qword_100649DD8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = &v5[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v27 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1001915A4(v13, (uint64_t)v5, &qword_100645020);
    unint64_t result = sub_1003AD618((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID(0LL);
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = type metadata accessor for SFNWInterfaceType(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32LL))( v20 + *(void *)(*(void *)(v21 - 8) + 72LL) * v17,  v10,  v21);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1LL);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_12;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v25 = v27;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100391A90(uint64_t a1)
{
  return sub_100391AAC(a1, &qword_100651DC0, &qword_100651DC8, type metadata accessor for RegistrationState);
}

unint64_t sub_100391AAC(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  Swift::UInt64 v34 = a2;
  uint64_t v7 = sub_100183098(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v13;
  }

  sub_100183098(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    goto LABEL_9;
  }
  uint64_t v15 = (uint64_t)v10 + *(int *)(v7 + 48);
  uint64_t v32 = a1;
  uint64_t v33 = v15;
  uint64_t v16 = v12 + 64;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_1001915A4(v17, (uint64_t)v10, v34);
    uint64_t v19 = *v10;
    uint64_t v20 = v10[1];
    unint64_t result = sub_1003AD53C(*v10, v20);
    if ((v22 & 1) != 0) {
      break;
    }
    unint64_t v23 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v24 = (uint64_t *)(v13[6] + 16 * result);
    *uint64_t v24 = v19;
    v24[1] = v20;
    uint64_t v25 = v13[7];
    uint64_t v26 = a4(0LL);
    unint64_t result = sub_1001A4B40(v33, v25 + *(void *)(*(void *)(v26 - 8) + 72LL) * v23, a4);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1LL);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_12;
    }
    v13[2] = v29;
    v17 += v18;
    if (!--v14)
    {
      swift_release(v13);
      uint64_t v30 = v32;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100391C44(uint64_t a1)
{
  uint64_t v2 = sub_100183098(&qword_100651DB0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }

  sub_100183098(&qword_100651DB8);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    goto LABEL_9;
  }
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v25 = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_1001915A4(v13, (uint64_t)v5, &qword_100651DB0);
    unint64_t result = sub_1003AD618((uint64_t)v5);
    if ((v16 & 1) != 0) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = type metadata accessor for UUID(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32LL))( v18 + *(void *)(*(void *)(v19 - 8) + 72LL) * v17,  v5,  v19);
    *(void *)(v8[7] + 8 * v17) = *(void *)&v5[v10];
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1LL);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_12;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      uint64_t v23 = v25;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_100391DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_10064A480);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1001915A4(v7, (uint64_t)&v14, &qword_100651DE8);
    uint64_t v8 = v14;
    unint64_t result = sub_1003AD484(v14);
    if ((v10 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    *(void *)(v4[6] + 8 * result) = v8;
    unint64_t result = (unint64_t)sub_100186D8C(&v15, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v13;
    v7 += 40LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100391F04(uint64_t a1)
{
  return sub_100391F10(a1, &qword_10064A460);
}

unint64_t sub_100391F10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(a2);
  uint64_t v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  uint64_t v5 = (void *)v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }

  swift_retain(v4);
  uint64_t v7 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v8 = (uint64_t)*(v7 - 2);
    uint64_t v9 = (uint64_t)*(v7 - 1);
    char v10 = *v7;
    swift_bridgeObjectRetain(v9);
    id v11 = v10;
    unint64_t result = sub_1003AD53C(v8, v9);
    if ((v13 & 1) != 0) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v14 = (uint64_t *)(v5[6] + 16 * result);
    uint64_t *v14 = v8;
    v14[1] = v9;
    *(void *)(v5[7] + 8 * result) = v11;
    uint64_t v15 = v5[2];
    BOOL v16 = __OFADD__(v15, 1LL);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v5[2] = v17;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100392024(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_100651DD0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease((const char *)a1);
    return (unint64_t)v3;
  }

  swift_retain();
  uint64_t v5 = (const char **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    *(void *)&double v9 = swift_bridgeObjectRetain(v7).n128_u64[0];
    swift_bridgeObjectRetain(v8, v9);
    unint64_t result = sub_1003AD53C(v6, (uint64_t)v7);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    BOOL v12 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v12 = v6;
    v12[1] = (uint64_t)v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release(v3);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10039213C(uint64_t a1)
{
  return sub_100392158( a1,  &qword_100651E10,  &qword_100651E18,  (uint64_t (*)(void))&type metadata accessor for SFAirDropReceive.Transfer);
}

unint64_t sub_100392158(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v31 = a4;
  uint64_t v7 = sub_100183098(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
    uint64_t v13 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    swift_bridgeObjectRelease((const char *)a1);
    return (unint64_t)v13;
  }

  sub_100183098(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)(v11);
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    goto LABEL_9;
  }
  uint64_t v15 = &v10[*(int *)(v7 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v30 = (const char *)a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v8 + 72);
  swift_retain(v12);
  while (1)
  {
    sub_1001915A4(v18, (uint64_t)v10, a2);
    unint64_t result = sub_1003AD580((uint64_t)v10);
    if ((v21 & 1) != 0) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32LL))( v23 + *(void *)(*(void *)(v24 - 8) + 72LL) * v22,  v10,  v24);
    uint64_t v25 = v13[7];
    uint64_t v26 = v31(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 32LL))( v25 + *(void *)(*(void *)(v26 - 8) + 72LL) * v22,  v15,  v26);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1LL);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_12;
    }
    v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release(v13);
      swift_bridgeObjectRelease(v30);
      return (unint64_t)v13;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10039230C(uint64_t a1)
{
  return sub_100392564(a1, &qword_100651E20);
}

unint64_t sub_100392318(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_100651E40);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease((const char *)a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (const char **)(a1 + 56);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v10 = (uint64_t)*(v6 - 1);
    uint64_t v9 = *v6;
    *(void *)&double v11 = swift_bridgeObjectRetain(v8).n128_u64[0];
    swift_bridgeObjectRetain(v9, v11);
    unint64_t result = sub_1003AD53C(v7, (uint64_t)v8);
    if ((v13 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v14 = (uint64_t *)(v4[6] + 16 * result);
    uint64_t *v14 = v7;
    v14[1] = (uint64_t)v8;
    uint64_t v15 = (void *)(v4[7] + 16 * result);
    *uint64_t v15 = v10;
    v15[1] = v9;
    uint64_t v16 = v4[2];
    BOOL v17 = __OFADD__(v16, 1LL);
    uint64_t v18 = v16 + 1;
    if (v17) {
      goto LABEL_11;
    }
    v6 += 4;
    _OWORD v4[2] = v18;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100392438(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(&qword_100651E30);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease((const char *)a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1001915A4(v7, (uint64_t)&v14, &qword_100651E38);
    uint64_t v8 = v14;
    unint64_t result = sub_1003AD760(v14);
    if ((v10 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    *(void *)(v4[6] + 8 * result) = v8;
    unint64_t result = (unint64_t)sub_100186D8C(&v15, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    _OWORD v4[2] = v13;
    v7 += 40LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100392564(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100183098(a2);
  uint64_t v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  uint64_t v5 = (void *)v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease((const char *)a1);
    return (unint64_t)v5;
  }

  swift_retain(v4);
  uint64_t v7 = (_BYTE *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *((void *)v7 - 2);
    uint64_t v9 = (const char *)*((void *)v7 - 1);
    char v10 = *v7;
    swift_bridgeObjectRetain(v9);
    unint64_t result = sub_1003AD53C(v8, (uint64_t)v9);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v5[6] + 16 * result);
    uint64_t *v13 = v8;
    v13[1] = (uint64_t)v9;
    *(_BYTE *)(v5[7] + result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v7 += 24;
    _OWORD v5[2] = v16;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100392670(uint64_t a1)
{
  uint64_t v2 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v3 = -1LL;
  if (v2 < 64) {
    uint64_t v3 = ~(-1LL << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain(a1);
  int64_t v6 = 0LL;
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v8 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0) {
        uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      }
      else {
        uint64_t v19 = v13 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(v13, 3LL);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v19);
      uint64_t v14 = result;
      if (!result)
      {
LABEL_38:
        char v16 = 1;
        goto LABEL_39;
      }
    }

    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n(v13, 3LL);
      if (!v14) {
        goto LABEL_38;
      }
    }

    if (v14 < 1)
    {
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }

    if ((v13 & 0xC000000000000001LL) != 0)
    {
      uint64_t v15 = 0LL;
      char v16 = 1;
      do
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v13);
        if ((v16 & 1) != 0) {
          char v16 = *(_BYTE *)(v17 + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly);
        }
        else {
          char v16 = 0;
        }
        swift_unknownObjectRelease(v17);
        ++v15;
      }

      while (v14 != v15);
    }

    else
    {
      uint64_t v18 = (void *)(v13 + 32);
      char v16 = 1;
      do
      {
        if ((v16 & 1) != 0) {
          char v16 = *(_BYTE *)(*v18
        }
                         + OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_applicationServiceEndpointsOnly);
        else {
          char v16 = 0;
        }
        ++v18;
        --v14;
      }

      while (v14);
    }

void sub_100392958(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropSend.Failure(0LL);
  uint64_t v255 = *(void *)(v2 - 8);
  uint64_t v256 = (int *)v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v238 = (char *)&v230 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v257 = (char *)&v230 - v5;
  uint64_t v252 = (void *)type metadata accessor for Date(0LL);
  uint64_t v251 = *(v252 - 1);
  __chkstk_darwin(v252);
  uint64_t v235 = (char *)&v230 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v244 = (uint64_t)&v230 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v237 = (uint64_t)&v230 - v10;
  unint64_t v11 = (int *)type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0LL);
  uint64_t v258 = *((void *)v11 - 1);
  uint64_t v259 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v242 = (uint64_t)&v230 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v250 = (char *)&v230 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v236 = (uint64_t)&v230 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v241 = (uint64_t)&v230 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v243 = (uint64_t)&v230 - v21;
  __chkstk_darwin(v20);
  uint64_t v245 = (uint64_t)&v230 - v22;
  uint64_t v234 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v233 = *(void *)(v234 - 8);
  __chkstk_darwin(v234);
  uint64_t v232 = (char *)&v230 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v248 = type metadata accessor for UUID(0LL);
  uint64_t v247 = *(void *)(v248 - 8);
  __chkstk_darwin(v248);
  uint64_t v246 = (char *)&v230 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_100183098(&qword_10064DAA0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v254 = (uint64_t)&v230 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v240 = (uint64_t)&v230 - v28;
  uint64_t v29 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v260 = *(const __CFString **)(v29 - 8);
  uint64_t v261 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v230 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __chkstk_darwin(v30);
  unint64_t v249 = (char *)&v230 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v230 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v253 = (char *)&v230 - v39;
  __chkstk_darwin(v38);
  uint64_t v239 = (char *)&v230 - v40;
  uint64_t v41 = type metadata accessor for SFAirDrop.Progress(0LL);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  id v45 = (char *)&v230 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v230 - v46;
  uint64_t v48 = type metadata accessor for SFAirDropSend.Transfer.State(0LL);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = __chkstk_darwin(v48);
  char v52 = (char *)&v230 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v263 = a1;
  SFAirDropSend.Transfer.state.getter(v50);
  int v53 = (*(uint64_t (**)(char *, uint64_t))(v49 + 88))(v52, v48);
  if (v53 != enum case for SFAirDropSend.Transfer.State.transferring(_:))
  {
    if (v53 == enum case for SFAirDropSend.Transfer.State.transferFailed(_:))
    {
      (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
      uint64_t v81 = sub_100183098(&qword_100648568);
      uint64_t v83 = v255;
      uint64_t v82 = v256;
      unint64_t v84 = *(uint64_t (**)(char *, char *, int *))(v255 + 32);
      double v85 = v257;
      uint64_t v86 = v84(v257, &v52[*(int *)(v81 + 48)], v256);
      SFAirDropSend.Transfer.id.getter(v86);
      double v87 = v262;
      double v88 = (char *)(v262 + 5);
      swift_beginAccess(v262 + 5, v265, 32LL, 0LL);
      double v89 = v87[5];
      if (v89[2] && (unint64_t v90 = sub_1003AD580((uint64_t)v32), (v91 & 1) != 0))
      {
        uint64_t v92 = v242;
        sub_100396EBC(v89[7] + *(void *)(v258 + 72) * v90, v242);
        uint64_t v93 = (uint64_t)v250;
        sub_1001A4B40(v92, (uint64_t)v250, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
        swift_endAccess(v265);
        uint64_t v260 = (const __CFString *)v260->info;
        ((void (*)(char *, uint64_t))v260)(v32, v261);
        uint64_t v94 = v244;
        sub_1001915A4(v93 + v259[7], v244, &qword_1006457E8);
        int v95 = (*(uint64_t (**)(uint64_t, uint64_t, void *))(v251 + 48))(v94, 1LL, v252);
        sub_100187100(v94, &qword_1006457E8);
        if (v95 == 1)
        {
          double v96 = v238;
          (*(void (**)(char *, char *, int *))(v83 + 16))(v238, v257, v82);
          uint64_t v97 = sub_100183F14( &qword_100654D00,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropSend.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropSend.Failure);
          uint64_t v98 = swift_allocError(v82, v97, 0LL, 0LL);
          v84(v99, v96, v82);
          uint64_t v100 = (void *)_convertErrorToNSError(_:)(v98);
          swift_errorRelease(v98);
          uint64_t v101 = (__CFString *)[v100 domain];
          if (!v101)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
            uint64_t v103 = v102;
            uint64_t v101 = (__CFString *)String._bridgeToObjectiveC()();
            uint64_t v104 = v103;
            double v87 = v262;
            swift_bridgeObjectRelease(v104);
          }

          unint64_t v262 = (id *)CFErrorCreate(kCFAllocatorDefault, v101, (CFIndex)[v100 code], 0);

          SFAirDropSend.Transfer.bundleIdentifier.getter();
          uint64_t v106 = (uint64_t)v250;
          if (v105)
          {
            unint64_t v107 = v105;
            v108._countAndFlagsBits = 0x6C7070612E6D6F63LL;
            v108._object = (void *)0xEA00000000002E65LL;
            if (String.hasPrefix(_:)(v108))
            {
LABEL_18:
              NSString v109 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v107);
              NSString v110 = String._bridgeToObjectiveC()();
              uint64_t v111 = v259[5];
              uint64_t v112 = *(void *)(v106 + v111);
              id v113 = [v87[2] discoverableLevel];
              swift_beginAccess(v87 + 4, v265, 0LL, 0LL);
              id v114 = v87[4];
              uint64_t v115 = swift_bridgeObjectRetain(v114);
              uint64_t v116 = sub_100392670(v115);
              swift_bridgeObjectRelease(v114);
              uint64_t v117 = *(void *)(v116 + 16);
              uint64_t v252 = v100;
              if (v117)
              {
                uint64_t v118 = 0LL;
                uint64_t v119 = v117 - 1;
                char v120 = 1;
                while (1)
                {
                  while ((v120 & 1) == 0)
                  {
                    if (v119 == v118)
                    {
                      swift_bridgeObjectRelease(v116);
                      goto LABEL_68;
                    }

                    char v120 = 0;
                    ++v118;
                  }

                  char v120 = *(_BYTE *)(v116 + v118 + 32);
                  if (v119 == v118) {
                    break;
                  }
                  ++v118;
                }

                swift_bridgeObjectRelease(v116);
                if ((v120 & 1) != 0)
                {
                  unsigned int v201 = 1;
                  goto LABEL_69;
                }

LABEL_69:
              double v202 = (double)v112;
              unint64_t v203 = sub_1003913F0((uint64_t)_swiftEmptyArrayStorage);
              Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease(v203);
              uint64_t v205 = (__CFError *)v262;
              sub_10002EE68(v109, v110, 1LL, (__CFError *)v262, (uint64_t)v113, v201, isa, v202);

              uint64_t v206 = (uint64_t)v253;
              uint64_t v208 = SFAirDropSend.Transfer.id.getter(v207);
              uint64_t v209 = v246;
              SFAirDrop.TransferIdentifier.id.getter(v208);
              ((void (*)(uint64_t, uint64_t))v260)(v206, v261);
              Class v210 = UUID._bridgeToObjectiveC()().super.isa;
              (*(void (**)(char *, uint64_t))(v247 + 8))(v209, v248);
              uint64_t v211 = (uint64_t)v250;
              sub_10002FB54( (uint64_t)@"Send",  (uint64_t)@"Failed",  v210,  0LL,  (double)*(uint64_t *)&v250[v111]);

              SFAirDropSend.Transfer.id.getter(v212);
              uint64_t v213 = v254;
              (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v258 + 56))(v254, 1LL, 1LL, v259);
              swift_beginAccess(v88, v264, 33LL, 0LL);
              sub_1002E5568(v213, v206);
              swift_endAccess(v264);

              sub_100396F00(v211);
              (*(void (**)(char *, int *))(v255 + 8))(v257, v256);
              goto LABEL_46;
            }

            swift_bridgeObjectRelease(v107);
          }

          unint64_t v107 = 0xE000000000000000LL;
          goto LABEL_18;
        }

        sub_100396F00(v93);
        double v85 = v257;
      }

      else
      {
        swift_endAccess(v265);
        ((void (*)(char *, uint64_t))v260->info)(v32, v261);
      }

      (*(void (**)(char *, int *))(v83 + 8))(v85, v82);
    }

    else
    {
      if (v53 != enum case for SFAirDropSend.Transfer.State.completedSuccessfully(_:))
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v48);
        return;
      }

      (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
      uint64_t v158 = sub_100183098(&qword_100648580);
      uint64_t v159 = ((uint64_t (*)(void))swift_bridgeObjectRelease)(*(void *)&v52[*(int *)(v158 + 48) + 8]);
      uint64_t v160 = (uint64_t)v253;
      SFAirDropSend.Transfer.id.getter(v159);
      uint64_t v161 = v254;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v258 + 56))(v254, 1LL, 1LL, v259);
      swift_beginAccess(v262 + 5, v265, 33LL, 0LL);
      sub_1002E5568(v161, v160);
      swift_endAccess(v265);
    }

  __break(1u);
}

void sub_100393F00(char a1)
{
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = type metadata accessor for Date(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v23 - v14;
  if (a1)
  {
    if (a1 == 1)
    {
      NSString v16 = String._bridgeToObjectiveC()();
      uint64_t v17 = getpid();
      sub_10002FA6C((uint64_t)@"BonjourAdvertise", (uint64_t)@"Stop", (uint64_t)v16, v17);

      uint64_t v18 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate;
      swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate,  v26,  0LL,  0LL);
      sub_1001915A4(v18, (uint64_t)v8, &qword_1006457E8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) == 1)
      {
        sub_100187100((uint64_t)v8, &qword_1006457E8);
      }

      else
      {
        uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
        Date.init()(v20);
        double v21 = Date.timeIntervalSince(_:)(v15);
        uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
        v22(v13, v9);
        sub_10002F108(v21);
        v22(v15, v9);
      }

      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1LL, 1LL, v9);
      swift_beginAccess(v18, v25, 33LL, 0LL);
      sub_100225008((uint64_t)v6, v18);
      swift_endAccess(v25);
    }
  }

  else
  {
    id v24 = String._bridgeToObjectiveC()();
    uint64_t v19 = getpid();
    sub_10002FA6C((uint64_t)@"ApplicationServiceAdvertise", (uint64_t)@"Stop", (uint64_t)v24, v19);
  }

void sub_1003941C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SFAirDropReceive.Failure(0LL);
  uint64_t v261 = *(void *)(v2 - 8);
  unint64_t v262 = (void (*)(void, void, void, void, __n128))v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v241 = (char *)&v239 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v263 = (char *)&v239 - v5;
  uint64_t v260 = (void *)type metadata accessor for Date(0LL);
  CFErrorRef v264 = (CFErrorRef)*(v260 - 1);
  __chkstk_darwin(v260);
  uint64_t v245 = (char *)&v239 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v248 = (uint64_t)&v239 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v249 = (uint64_t)&v239 - v10;
  uint64_t v11 = (int *)type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0LL);
  uint64_t v267 = (const __CFString *)*((void *)v11 - 1);
  uint64_t v268 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v246 = (uint64_t)&v239 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v251 = (uint64_t)&v239 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v247 = (uint64_t)&v239 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v250 = (uint64_t)&v239 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v257 = (uint64_t)&v239 - v21;
  __chkstk_darwin(v20);
  uint64_t v258 = (uint64_t)&v239 - v22;
  uint64_t v244 = type metadata accessor for SFNWInterfaceType(0LL);
  uint64_t v243 = *(void *)(v244 - 8);
  __chkstk_darwin(v244);
  uint64_t v242 = (char *)&v239 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v256 = type metadata accessor for UUID(0LL);
  uint64_t v255 = *(void *)(v256 - 8);
  __chkstk_darwin(v256);
  uint64_t v254 = (char *)&v239 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_100183098(&qword_10064DAA0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v266 = (uint64_t)&v239 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26);
  uint64_t v253 = (uint64_t)&v239 - v28;
  uint64_t v29 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
  uint64_t v269 = *(char **)(v29 - 8);
  uint64_t v270 = v29;
  uint64_t v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v239 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v259 = (char *)&v239 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v239 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v265 = (char *)&v239 - v39;
  __chkstk_darwin(v38);
  uint64_t v252 = (char *)&v239 - v40;
  uint64_t v41 = type metadata accessor for SFAirDrop.Progress(0LL);
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = __chkstk_darwin(v41);
  id v45 = (char *)&v239 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v43);
  uint64_t v47 = (char *)&v239 - v46;
  uint64_t v48 = type metadata accessor for SFAirDropReceive.Transfer.State(0LL);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = __chkstk_darwin(v48);
  char v52 = (char *)&v239 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v271 = a1;
  SFAirDropReceive.Transfer.state.getter(v50);
  int v53 = (*(uint64_t (**)(char *, uint64_t))(v49 + 88))(v52, v48);
  if (v53 != enum case for SFAirDropReceive.Transfer.State.transferring(_:))
  {
    if (v53 == enum case for SFAirDropReceive.Transfer.State.completedSuccessfully(_:))
    {
      (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
      uint64_t v78 = (int *)sub_100183098((uint64_t *)&unk_10064DAC0);
      uint64_t v79 = &v52[v78[12]];
      *(void *)&double v80 = swift_bridgeObjectRelease((const char *)*(void *)&v52[v78[16] + 8]).n128_u64[0];
      *(void *)&double v81 = swift_bridgeObjectRelease((const char *)*(void *)&v52[v78[20]], v80).n128_u64[0];
      *(void *)&double v82 = swift_bridgeObjectRelease((const char *)*(void *)&v52[v78[24]], v81).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)&v52[v78[28]], v82);
      uint64_t v83 = (uint64_t)v265;
      SFAirDropReceive.Transfer.id.getter(v84);
      uint64_t v85 = v266;
      ((void (*)(uint64_t, uint64_t, uint64_t, int *))v267[1].length)(v266, 1LL, 1LL, v268);
      swift_beginAccess(v272 + 48, v274, 33LL, 0LL);
      sub_1002E5568(v85, v83);
      swift_endAccess(v274);
      uint64_t v86 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v86 - 8) + 8LL))(v79, v86);
LABEL_9:
      uint64_t v87 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v87 - 8) + 8LL))(v52, v87);
      return;
    }

    if (v53 != enum case for SFAirDropReceive.Transfer.State.transferFailed(_:))
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v48);
      return;
    }

    int v121 = *(void (**)(char *, uint64_t))(v49 + 96);
    uint64_t v59 = v52;
    v121(v52, v48);
    uint64_t v122 = sub_100183098(&qword_100649750);
    uint64_t v124 = v261;
    uint64_t v123 = v262;
    __n128 v125 = *(uint64_t (**)(void, void, void))(v261 + 32);
    uint64_t v126 = v263;
    uint64_t v127 = v125(v263, &v52[*(int *)(v122 + 48)], v262);
    SFAirDropReceive.Transfer.id.getter(v127);
    uint64_t v128 = v272;
    uint64_t v129 = v272 + 48;
    swift_beginAccess(v272 + 48, v274, 32LL, 0LL);
    uint64_t v130 = *(void *)(v128 + 48);
    if (*(void *)(v130 + 16) && (unint64_t v131 = sub_1003AD580((uint64_t)v32), (v132 & 1) != 0))
    {
      uint64_t v133 = v246;
      sub_100396EBC(*(void *)(v130 + 56) + v267[2].info * v131, v246);
      uint64_t v134 = v133;
      uint64_t v135 = v251;
      sub_1001A4B40(v134, v251, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
      swift_endAccess(v274);
      uint64_t v136 = v32;
      uint64_t v137 = v135;
      uint64_t v269 = (char *)*((void *)v269 + 1);
      ((void (*)(char *, uint64_t))v269)(v136, v270);
      uint64_t v138 = v248;
      sub_1001915A4(v135 + v268[7], v248, &qword_1006457E8);
      int v139 = (*((uint64_t (**)(uint64_t, uint64_t, void *))v264 + 6))(v138, 1LL, v260);
      sub_100187100(v138, &qword_1006457E8);
      if (v139 == 1)
      {
        double v140 = v241;
        (*(void (**)(char *, char *, void (*)(void, void, void, void, __n128)))(v124 + 16))( v241,  v263,  v123);
        uint64_t v141 = sub_100183F14( &qword_100649730,  (uint64_t (*)(uint64_t))&type metadata accessor for SFAirDropReceive.Failure,  (uint64_t)&protocol conformance descriptor for SFAirDropReceive.Failure);
        uint64_t v142 = swift_allocError(v123, v141, 0LL, 0LL);
        v125(v143, v140, v123);
        unint64_t v144 = (void *)_convertErrorToNSError(_:)(v142);
        swift_errorRelease(v142);
        Swift::String v145 = (__CFString *)[v144 domain];
        if (!v145)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
          NSString v148 = v147;
          Swift::String v145 = (__CFString *)String._bridgeToObjectiveC()();
          *(void *)&double v146 = swift_bridgeObjectRelease(v148).n128_u64[0];
        }

        CFErrorRef v264 = CFErrorCreate(kCFAllocatorDefault, v145, (CFIndex)objc_msgSend(v144, "code", v146), 0);

        NSString v149 = String._bridgeToObjectiveC()();
        NSString v150 = String._bridgeToObjectiveC()();
        uint64_t v151 = v268[5];
        uint64_t v152 = *(void *)(v137 + v151);
        uint64_t v153 = v272;
        id v154 = [*(id *)(v272 + 16) discoverableLevel];
        *(void *)&double v155 = swift_beginAccess(v153 + 32, v274, 0LL, 0LL).n128_u64[0];
        uint64_t v156 = *(const char **)(v153 + 32);
        uint64_t v157 = swift_bridgeObjectRetain(v156, v155);
        uint64_t v158 = sub_100392670(v157);
        *(void *)&double v159 = swift_bridgeObjectRelease(v156).n128_u64[0];
        uint64_t v160 = *(void *)(v158 + 16);
        uint64_t v260 = v144;
        if (v160)
        {
          uint64_t v161 = 0LL;
          uint64_t v162 = v160 - 1;
          char v163 = 1;
          while (1)
          {
            while ((v163 & 1) == 0)
            {
              if (v162 == v161)
              {
                swift_bridgeObjectRelease((const char *)v158, v159);
                goto LABEL_72;
              }

              char v163 = 0;
              ++v161;
            }

            char v163 = *(_BYTE *)(v158 + v161 + 32);
            if (v162 == v161) {
              break;
            }
            ++v161;
          }

          swift_bridgeObjectRelease((const char *)v158, v159);
          if ((v163 & 1) != 0) {
            goto LABEL_70;
          }
LABEL_72:
          unsigned int v226 = 0;
        }

        else
        {
          swift_bridgeObjectRelease((const char *)v158, v159);
LABEL_70:
          unsigned int v226 = 1;
        }

        double v227 = (double)v152;
        uint64_t v228 = (const char *)sub_1003913F0((uint64_t)_swiftEmptyArrayStorage);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v228);
        uint64_t v230 = v264;
        sub_10002EE68(v149, v150, 0LL, v264, (uint64_t)v154, v226, isa, v227);

        uint64_t v231 = (uint64_t)v265;
        uint64_t v233 = SFAirDropReceive.Transfer.id.getter(v232);
        uint64_t v234 = v254;
        SFAirDrop.TransferIdentifier.id.getter(v233);
        ((void (*)(uint64_t, uint64_t))v269)(v231, v270);
        Class v235 = UUID._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v255 + 8))(v234, v256);
        uint64_t v236 = v251;
        sub_10002FB54((uint64_t)@"Receive", (uint64_t)@"Failed", v235, 0LL, (double)*(uint64_t *)(v251 + v151));

        SFAirDropReceive.Transfer.id.getter(v237);
        uint64_t v238 = v266;
        ((void (*)(uint64_t, uint64_t, uint64_t, int *))v267[1].length)(v266, 1LL, 1LL, v268);
        swift_beginAccess(v129, v273, 33LL, 0LL);
        sub_1002E5568(v238, v231);
        swift_endAccess(v273);

        sub_100396F00(v236);
        (*(void (**)(char *, void (*)(void, void, void, void, __n128)))(v261 + 8))( v263,  v262);
        goto LABEL_9;
      }

      sub_100396F00(v135);
      uint64_t v126 = v263;
    }

    else
    {
      swift_endAccess(v274);
      (*((void (**)(char *, uint64_t))v269 + 1))(v32, v270);
    }

    (*(void (**)(char *, void (*)(void, void, void, void, __n128)))(v124 + 8))(v126, v123);
    uint64_t v180 = type metadata accessor for SFAirDropReceive.Transfer.Metrics(0LL);
LABEL_68:
    (*(void (**)(char *, uint64_t))(*(void *)(v180 - 8) + 8LL))(v59, v180);
    return;
  }

  (*(void (**)(char *, uint64_t))(v49 + 96))(v52, v48);
  uint64_t v54 = (int *)sub_100183098(&qword_10064B770);
  uint64_t v55 = &v52[v54[12]];
  __n128 v56 = swift_bridgeObjectRelease((const char *)*(void *)&v52[v54[16] + 8]);
  (*(void (**)(char *, char *, uint64_t, __n128))(v42 + 32))(v47, v55, v41, v56);
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
  uint64_t v240 = v47;
  v57(v45, v47, v41);
  uint64_t v58 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v45, v41);
  uint64_t v59 = v52;
  uint64_t v60 = v42;
  if ((_DWORD)v58 == enum case for SFAirDrop.Progress.transferring(_:))
  {
    CFErrorRef v264 = (CFErrorRef)v54;
    uint64_t v61 = v42;
    uint64_t v62 = (*(uint64_t (**)(char *, uint64_t))(v42 + 96))(v45, v41);
    uint64_t v63 = *(const char **)v45;
    uint64_t v64 = *((void *)v45 + 1);
    char v65 = v45[16];
    SFAirDropReceive.Transfer.id.getter(v62);
    uint64_t v66 = v272;
    uint64_t v67 = v272 + 48;
    swift_beginAccess(v272 + 48, v274, 32LL, 0LL);
    uint64_t v68 = *(void *)(v66 + 48);
    if (*(void *)(v68 + 16) && (unint64_t v69 = sub_1003AD580((uint64_t)v37), (v70 & 1) != 0))
    {
      uint64_t v71 = *(void *)(v68 + 56);
      uint64_t v72 = v267;
      uint64_t v73 = v257;
      sub_100396EBC(v71 + v267[2].info * v69, v257);
      uint64_t v74 = v73;
      uint64_t v75 = v258;
      sub_1001A4B40(v74, v258, type metadata accessor for SDAirDropLegacySessionLogger.Transfer);
      swift_endAccess(v274);
      uint64_t v76 = (*((uint64_t (**)(char *, uint64_t))v269 + 1))(v37, v270);
      uint64_t v77 = v240;
      if ((v65 & 1) != 0)
      {
        sub_100396F00(v75);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v77, v41);
      }

      else
      {
        uint64_t v183 = v240;
        uint64_t v184 = v268;
        *(void *)(v75 + v268[5]) = v64;
        *(void *)(v75 + v184[6]) = v63;
        uint64_t v185 = (uint64_t)v265;
        unint64_t v186 = v72;
        SFAirDropReceive.Transfer.id.getter(v76);
        uint64_t v187 = v266;
        sub_100396EBC(v75, v266);
        ((void (*)(uint64_t, void, uint64_t, int *))v186[1].length)(v187, 0LL, 1LL, v184);
        swift_beginAccess(v67, v274, 33LL, 0LL);
        sub_1002E5568(v187, v185);
        swift_endAccess(v274);
        sub_100396F00(v75);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v183, v41);
      }
    }

    else
    {
      swift_endAccess(v274);
      (*((void (**)(char *, uint64_t))v269 + 1))(v37, v270);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v240, v41);
    }

    uint64_t v59 = v52;
    uint64_t v54 = (int *)v264;
    goto LABEL_67;
  }

  int v88 = v58;
  if ((_DWORD)v58 != enum case for SFAirDrop.Progress.completed(_:))
  {
    uint64_t v164 = v272;
    if ((_DWORD)v58 != enum case for SFAirDrop.Progress.notStarted(_:))
    {
      int v181 = enum case for SFAirDrop.Progress.transferringIndeterminate(_:);
      int v182 = *(void (**)(char *, uint64_t))(v60 + 8);
      v182(v240, v41);
      if (v88 != v181) {
        v182(v45, v41);
      }
      goto LABEL_67;
    }

    uint64_t v263 = (char *)v41;
    uint64_t v165 = (uint64_t)v252;
    SFAirDropReceive.Transfer.id.getter(v58);
    uint64_t v166 = v164 + 48;
    __n128 v167 = swift_beginAccess(v164 + 48, v274, 32LL, 0LL);
    uint64_t v168 = *(void *)(v164 + 48);
    uint64_t v169 = *(void *)(v168 + 16);
    uint64_t v239 = v60;
    if (v169)
    {
      unint64_t v170 = sub_1003AD580(v165);
      char v171 = v268;
      uint64_t v172 = v270;
      uint64_t v173 = v253;
      if ((v174 & 1) != 0)
      {
        uint64_t v175 = *(void *)(v168 + 56);
        uint64_t v176 = v267;
        sub_100396EBC(v175 + v267[2].info * v170, v253);
        length = (void (*)(void, void, void, void))v176[1].length;
        uint64_t v178 = v173;
        uint64_t v179 = 0LL;
      }

      else
      {
        uint64_t v176 = v267;
        length = (void (*)(void, void, void, void))v267[1].length;
        uint64_t v178 = v253;
        uint64_t v179 = 1LL;
      }

      unint64_t v262 = (void (*)(void, void, void, void, __n128))length;
      length(v178, v179, 1LL, v171);
    }

    else
    {
      uint64_t v176 = v267;
      char v171 = v268;
      uint64_t v173 = v253;
      unint64_t v262 = (void (*)(void, void, void, void, __n128))v267[1].length;
      v262(v253, 1LL, 1LL, v268, v167);
      uint64_t v172 = v270;
    }

    swift_endAccess(v274);
    uint64_t v188 = (void (*)(uint64_t, uint64_t))*((void *)v269 + 1);
    v188(v165, v172);
    unint64_t v189 = v171;
    int v190 = ((uint64_t (*)(uint64_t, uint64_t, int *))v176[1].data)(v173, 1LL, v171);
    uint64_t v191 = sub_100187100(v173, &qword_10064DAA0);
    if (v190 == 1)
    {
      uint64_t v269 = v59;
      uint64_t v268 = (int *)@"Receive";
      uint64_t v267 = @"Start";
      uint64_t v192 = (uint64_t)v265;
      uint64_t v193 = SFAirDropReceive.Transfer.id.getter(v191);
      NSString v194 = v254;
      SFAirDrop.TransferIdentifier.id.getter(v193);
      v188(v192, v172);
      Class v195 = UUID._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v255 + 8))(v194, v256);
      uint64_t v196 = v243;
      uint64_t v197 = v242;
      uint64_t v198 = v244;
      uint64_t v199 = (*(uint64_t (**)(char *, void, uint64_t))(v243 + 104))( v242,  enum case for SFNWInterfaceType.awdl(_:),  v244);
      SFNWInterfaceType.description.getter(v199);
      uint64_t v270 = v166;
      unsigned int v201 = v200;
      (*(void (**)(char *, uint64_t))(v196 + 8))(v197, v198);
      NSString v202 = String._bridgeToObjectiveC()();
      unint64_t v203 = v201;
      uint64_t v204 = v272;
      swift_bridgeObjectRelease(v203);
      sub_10002FB54((uint64_t)v268, (uint64_t)v267, v195, (uint64_t)v202, 0.0);

      uint64_t v206 = SFAirDropReceive.Transfer.id.getter(v205);
      uint64_t v207 = v266;
      Date.init()(v206);
      (*((void (**)(uint64_t, uint64_t, uint64_t, void *))v264 + 7))(v207 + v189[7], 1LL, 1LL, v260);
      *(void *)(v207 + v189[5]) = 0LL;
      *(void *)(v207 + v189[6]) = 0LL;
      ((void (*)(uint64_t, void, uint64_t, int *))v262)(v207, 0LL, 1LL, v189);
      swift_beginAccess(v270, v274, 33LL, 0LL);
      sub_1002E5568(v207, v192);
      swift_endAccess(v274);
      (*(void (**)(char *, char *))(v239 + 8))(v240, v263);
      uint64_t v208 = *(void *)(v204 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersInitiated);
      BOOL v209 = __OFADD__(v208, 1LL);
      uint64_t v210 = v208 + 1;
      if (v209)
      {
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }

      *(void *)(v204 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersInitiated) = v210;
      uint64_t v59 = v269;
LABEL_67:
      uint64_t v224 = &v59[v54[20]];
      uint64_t v225 = type metadata accessor for SFAirDrop.DeclineAction(0LL);
      (*(void (**)(char *, uint64_t))(*(void *)(v225 - 8) + 8LL))(v224, v225);
      uint64_t v180 = type metadata accessor for SFAirDropReceive.ItemDestination(0LL);
      goto LABEL_68;
    }

LABEL_77:
  __break(1u);
}

uint64_t sub_100395744(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
  uint64_t v4 = *(const char **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
  uint64_t v6 = (const char **)(v1 + 32);
  *(void *)&double v7 = swift_beginAccess(v1 + 32, v26, 32LL, 0LL).n128_u64[0];
  uint64_t v8 = *(void *)(v1 + 32);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain(v4, v7);
    uint64_t v9 = sub_1003AD53C(v5, (uint64_t)v4);
    if ((v10 & 1) != 0)
    {
      uint64_t v11 = *(const char **)(*(void *)(v8 + 56) + 8 * v9);
      swift_endAccess(v26);
      *(void *)&double v12 = swift_bridgeObjectRetain(v11).n128_u64[0];
      swift_bridgeObjectRelease(v4, v12);
      goto LABEL_6;
    }

    swift_bridgeObjectRelease(v4);
  }

  swift_endAccess(v26);
  uint64_t v11 = (const char *)_swiftEmptyArrayStorage;
LABEL_6:
  uint64_t v27 = v11;
  uint64_t v13 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  unint64_t v15 = *(void *)(((unint64_t)v27 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v14 = *(void *)(((unint64_t)v27 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v15 >= v14 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1LL);
  }
  uint64_t v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
  specialized Array._endMutation()(v16);
  uint64_t v17 = v27;
  if (!*((void *)*v6 + 2))
  {
    uint64_t v18 = *(const char **)(v2 + 24);
    *(void *)(v2 + 24) = v27;
    *(void *)&double v19 = swift_bridgeObjectRetain(v17).n128_u64[0];
    swift_bridgeObjectRelease(v18, v19);
  }

  *(void *)&double v20 = swift_beginAccess(v6, v26, 33LL, 0LL).n128_u64[0];
  swift_bridgeObjectRetain(v4, v20);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v6);
  uint64_t v25 = *v6;
  char *v6 = (const char *)0x8000000000000000LL;
  sub_1003B3AC4((uint64_t)v17, v5, v4, isUniquelyReferenced_nonNull_native);
  uint64_t v22 = *v6;
  char *v6 = v25;
  *(void *)&double v23 = swift_bridgeObjectRelease(v4).n128_u64[0];
  swift_bridgeObjectRelease(v22, v23);
  return swift_endAccess(v26);
}

void sub_100395904(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v78 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100183098(&qword_1006457E8);
  uint64_t v8 = __chkstk_darwin(v7);
  char v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  double v12 = (char *)&v75 - v11;
  uint64_t v14 = *(void *)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID];
  uint64_t v13 = *(const char **)&a1[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_bundleID + 8];
  unint64_t v15 = (uint64_t *)(v1 + 32);
  *(void *)&double v16 = swift_beginAccess(v1 + 32, v81, 32LL, 0LL).n128_u64[0];
  uint64_t v17 = *(void *)(v1 + 32);
  if (!*(void *)(v17 + 16)) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain(v13, v16);
  uint64_t v18 = sub_1003AD53C(v14, (uint64_t)v13);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease(v13);
LABEL_13:
    swift_endAccess(v81);
    if (qword_100644270 != -1) {
      swift_once(&qword_100644270, sub_100396388);
    }
    uint64_t v32 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v32, (uint64_t)qword_100651BB0);
    uint64_t v33 = a1;
    uint64_t v34 = (void *)Logger.logObject.getter(v33);
    os_log_type_t v35 = static os_log_type_t.error.getter(v34);
    if (!os_log_type_enabled((os_log_t)v34, v35))
    {

      return;
    }

    uint64_t v36 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v37 = swift_slowAlloc(32LL, -1LL);
    v81[0] = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    swift_bridgeObjectRetain(v13);
    unint64_t v82 = sub_10018CDB4(v14, (unint64_t)v13, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v36 + 4, v36 + 12);

    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v34, v35, "No existing clients for bundleID %s", v36, 0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    uint64_t v38 = v36;
    goto LABEL_17;
  }

  uint64_t v76 = v4;
  uint64_t v77 = v2;
  uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  unint64_t v82 = v20;
  swift_endAccess(v81);
  *(void *)&double v21 = swift_bridgeObjectRetain_n(v20, 2LL).n128_u64[0];
  swift_bridgeObjectRelease(v13, v21);
  uint64_t v22 = a1;
  uint64_t v23 = sub_100397148(v20, (uint64_t)v22);
  char v25 = v24;

  if ((v25 & 1) != 0)
  {
    swift_bridgeObjectRelease((const char *)v20);
    if (qword_100644270 != -1) {
      swift_once(&qword_100644270, sub_100396388);
    }
    uint64_t v39 = type metadata accessor for Logger(0LL);
    sub_100186DE4(v39, (uint64_t)qword_100651BB0);
    uint64_t v40 = v22;
    uint64_t v34 = (void *)Logger.logObject.getter(v40);
    os_log_type_t v41 = static os_log_type_t.error.getter(v34);
    if (!os_log_type_enabled((os_log_t)v34, v41))
    {

      swift_bridgeObjectRelease((const char *)v82);
      return;
    }

    uint64_t v42 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v43 = swift_slowAlloc(32LL, -1LL);
    *(_DWORD *)uint64_t v42 = 136315138;
    v81[0] = v43;
    uint64_t v44 = type metadata accessor for UUID(0LL);
    uint64_t v45 = sub_100183F14( (unint64_t *)&qword_1006460B0,  (uint64_t (*)(uint64_t))&type metadata accessor for UUID,  (uint64_t)&protocol conformance descriptor for UUID);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter(v44, v45);
    uint64_t v48 = (const char *)v47;
    uint64_t v79 = sub_10018CDB4(v46, v47, v81);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v42 + 4, v42 + 12);
    swift_bridgeObjectRelease(v48);
    uint64_t v49 = (const char *)v82;

    swift_bridgeObjectRelease(v49);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v34, v41, "No existing client for id %s", v42, 0xCu);
    swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    uint64_t v38 = v42;
LABEL_17:
    swift_slowDealloc(v38, -1LL, -1LL);

    return;
  }

  if ((v20 & 0xC000000000000001LL) == 0)
  {
    if (v23 < 0)
    {
      __break(1u);
    }

    else if ((unint64_t)v23 < *(void *)((v20 & 0xFFFFFFFFFFFFF8LL) + 0x10))
    {
      uint64_t v26 = (char *)*(id *)(v20 + 8 * v23 + 32);
      goto LABEL_8;
    }

    __break(1u);
    goto LABEL_27;
  }

  uint64_t v26 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v23, v20);
LABEL_8:
  uint64_t v22 = v26;
  swift_bridgeObjectRelease((const char *)v20);

  uint64_t v23 = v82;
  if (!(v82 >> 62))
  {
    uint64_t v27 = *(void *)((v82 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v27) {
      goto LABEL_10;
    }
LABEL_31:
    *(void *)&double v28 = swift_beginAccess(v15, v81, 33LL, 0LL).n128_u64[0];
    goto LABEL_32;
  }

uint64_t sub_1003961FC(uint64_t a1)
{
  uint64_t v3 = sub_100183098(&qword_1006457E8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v16[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_firstDiscoveredDate;
  swift_beginAccess( v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_firstDiscoveredDate,  v17,  0LL,  0LL);
  sub_1001915A4(v9, (uint64_t)v6, &qword_1006457E8);
  uint64_t v10 = type metadata accessor for Date(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v6, 1LL, v10);
  uint64_t v13 = sub_100187100((uint64_t)v6, &qword_1006457E8);
  if (v12 == 1)
  {
    Date.init()(v13);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  else
  {
    sub_1001915A4(v9, (uint64_t)v8, &qword_1006457E8);
  }

  swift_beginAccess(v9, v16, 33LL, 0LL);
  sub_100225008((uint64_t)v8, v9);
  uint64_t result = swift_endAccess(v16);
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_currentDisplayableEndpointCount) = a1;
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_maxDisplayableEndpointCount);
  if (v15 <= a1) {
    uint64_t v15 = a1;
  }
  *(void *)(v1 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_maxDisplayableEndpointCount) = v15;
  return result;
}

uint64_t sub_100396388()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  sub_100186DFC(v0, qword_100651BB0);
  uint64_t v1 = sub_100186DE4(v0, (uint64_t)qword_100651BB0);
  if (qword_100643FD8 != -1) {
    swift_once(&qword_100643FD8, sub_10023A408);
  }
  uint64_t v2 = sub_100186DE4(v0, (uint64_t)qword_1006695F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16LL))(v1, v2, v0);
}

char *sub_100396418(uint64_t a1)
{
  *((void *)v1 + 3) = 0LL;
  *((void *)v1 + 4) = &_swiftEmptyDictionarySingleton;
  *((void *)v1 + 5) = &_swiftEmptyDictionarySingleton;
  *((void *)v1 + 6) = &_swiftEmptyDictionarySingleton;
  uint64_t v3 = &v1[OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_firstDiscoveredDate];
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL);
  v5(v3, 1LL, 1LL, v4);
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_maxDisplayableEndpointCount] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_currentDisplayableEndpointCount] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersInitiated] = 0LL;
  *(void *)&v1[OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersCompleted] = 0LL;
  v5(&v1[OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate], 1LL, 1LL, v4);
  *((void *)v1 + 2) = a1;
  return v1;
}

__n128 sub_1003964DC()
{
  uint64_t v1 = sub_100183098(&qword_1006457E8);
  __chkstk_darwin(v1);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  result.n128_u64[0] = swift_beginAccess(v0 + 32, v9, 0LL, 0LL).n128_u64[0];
  if (!*(void *)(*(void *)(v0 + 32) + 16LL))
  {
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_maxDisplayableEndpointCount) = 0LL;
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_currentDisplayableEndpointCount) = 0LL;
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersInitiated) = 0LL;
    *(void *)(v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_transfersCompleted) = 0LL;
    uint64_t v5 = type metadata accessor for Date(0LL);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v3, 1LL, 1LL, v5);
    uint64_t v6 = v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_firstDiscoveredDate;
    swift_beginAccess( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_firstDiscoveredDate,  v8,  33LL,  0LL);
    sub_100225008((uint64_t)v3, v6);
    swift_endAccess(v8);
    uint64_t v7 = *(const char **)(v0 + 24);
    *(void *)(v0 + 24) = 0LL;
    return swift_bridgeObjectRelease(v7);
  }

  return result;
}

uint64_t sub_1003965F0()
{
  *(void *)&double v1 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 24)).n128_u64[0];
  *(void *)&double v2 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 32), v1).n128_u64[0];
  *(void *)&double v3 = swift_bridgeObjectRelease((const char *)*(void *)(v0 + 40), v2).n128_u64[0];
  swift_bridgeObjectRelease(*(const char **)(v0 + 48), v3);
  sub_100187100( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_firstDiscoveredDate,  &qword_1006457E8);
  sub_100187100( v0 + OBJC_IVAR____TtC16DaemoniOSLibrary28SDAirDropLegacySessionLogger_bonjourServerStartDate,  &qword_1006457E8);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100396670()
{
  return type metadata accessor for SDAirDropLegacySessionLogger(0LL);
}

uint64_t type metadata accessor for SDAirDropLegacySessionLogger(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100651C20, (uint64_t)&nominal type descriptor for SDAirDropLegacySessionLogger);
}

void sub_10039668C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  _OWORD v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v4[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_10019F1DC(319LL);
  if (v3 <= 0x3F)
  {
    uint64_t v5 = *(void *)(v2 - 8) + 64LL;
    uint64_t v6 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v7 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v8 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v9 = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t v10 = v5;
    swift_updateClassMetadata2(a1, 256LL, 11LL, v4, a1 + 80);
  }

uint64_t *sub_100396738(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for Date(0LL);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    uint64_t v11 = a3[7];
    int v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1LL, v7))
    {
      uint64_t v14 = sub_100183098(&qword_1006457E8);
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v9((uint64_t *)v12, (uint64_t *)v13, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0LL, 1LL, v7);
    }
  }

  return a1;
}

uint64_t sub_100396844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1LL, v4);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_1003968D8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  int v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  return a1;
}

char *sub_1003969B8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1LL, v6);
  int v14 = v12(v11, 1LL, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100183098(&qword_1006457E8);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0LL, 1LL, v6);
  return a1;
}

char *sub_100396AE8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  int v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1LL, v6))
  {
    uint64_t v13 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  }

  return a1;
}

char *sub_100396BC8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  int v12 = &a2[v10];
  uint64_t v13 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v14 = v13(&a1[v10], 1LL, v6);
  int v15 = v13(v12, 1LL, v6);
  if (!v14)
  {
    if (!v15)
    {
      v8(v11, v12, v6);
      return a1;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100183098(&qword_1006457E8);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0LL, 1LL, v6);
  return a1;
}

uint64_t sub_100396CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100396D00);
}

uint64_t sub_100396D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = sub_100183098(&qword_1006457E8);
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100396D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100396D84);
}

uint64_t sub_100396D84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = sub_100183098(&qword_1006457E8);
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SDAirDropLegacySessionLogger.Transfer(uint64_t a1)
{
  return sub_1001A4AD0(a1, qword_100651D50, (uint64_t)&nominal type descriptor for SDAirDropLegacySessionLogger.Transfer);
}

void sub_100396E18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
    void v6[2] = (char *)&value witness table for Builtin.Int64 + 64;
    sub_10019F1DC(319LL);
    if (v5 <= 0x3F)
    {
      v6[3] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 4LL, v6, a1 + 16);
    }
  }

ValueMetadata *type metadata accessor for SDAirDropLegacySessionLogger.Session()
{
  return &type metadata for SDAirDropLegacySessionLogger.Session;
}

uint64_t sub_100396EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100396F00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDAirDropLegacySessionLogger.Transfer(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

unint64_t sub_100396F3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100183098(&qword_100651DA0);
  unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v1);
  Swift::UInt32 v4 = *(_DWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_1003AD42C(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v5);
    return (unint64_t)v3;
  }

  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    int v14 = v9 + 3;
    Swift::UInt32 v4 = *((_DWORD *)v9 - 4);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain(v5);
    unint64_t result = sub_1003AD42C(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if ((v16 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

unint64_t sub_100397048(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100183098(&qword_100651DA8);
  unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v1);
  unsigned __int8 v4 = *(_BYTE *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1003AD6B0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain(v5);
    return (unint64_t)v3;
  }

  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1LL);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v12 = v8 + 2;
    unsigned __int8 v4 = *((_BYTE *)v8 - 8);
    uint64_t v13 = *v8;
    swift_retain(v5);
    unint64_t result = sub_1003AD6B0(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if ((v14 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_100397148(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
    uint64_t v5 = 0LL;
    if (!v4) {
      return v5;
    }
  }

  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v5 = 0LL;
    if (!v4) {
      return v5;
    }
  }

  a2 += OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id;
  while (1)
  {
    uint64_t v6 = (a1 & 0xC000000000000001LL) != 0
    char v7 = v6;
    char v8 = static UUID.== infix(_:_:)(&v6[OBJC_IVAR____TtC16DaemoniOSLibrary20SDAirDropAgentClient_id], a2);

    if ((v8 & 1) != 0) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1LL))
    {
      __break(1u);
      goto LABEL_13;
    }

    ++v5;
    if (v9 == v4) {
      return 0LL;
    }
  }

unint64_t sub_10039725C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v6 + 16LL) & ~(unint64_t)v6);
    swift_retain(v10);
  }

  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v8 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16LL))(a1, a2, v8);
        uint64_t v9 = _s12HelloRequestVMa(0LL);
        *(_DWORD *)(a1 + *(int *)(v9 + 20)) = *(_DWORD *)(a2 + *(int *)(v9 + 20));
        *(_BYTE *)(a1 + *(int *)(v9 + sub_10038C154(*(void *)(v0 + 16), *(void **)(v0 + 24)) = *(_BYTE *)(a2 + *(int *)(v9 + 24));
        swift_storeEnumTagMultiPayload(a1, a3, 0LL);
        break;
      case 2u:
        unint64_t v12 = *(void *)(a2 + 8);
        if (v12 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }

        else
        {
          uint64_t v81 = *(void *)a2;
          sub_10019BA8C(v81, v12);
          *(void *)a1 = v81;
          *(void *)(a1 + 8) = v12;
        }

        swift_storeEnumTagMultiPayload(a1, a3, 2LL);
        break;
      case 3u:
        unint64_t v13 = *(void *)(a2 + 8);
        if (v13 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }

        else
        {
          uint64_t v82 = *(void *)a2;
          sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
          *(void *)a1 = v82;
          *(void *)(a1 + 8) = v13;
        }

        uint64_t v83 = *(const char **)(a2 + 24);
        *(void *)(a1 + sub_100195658(v0 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v83;
        uint64_t v84 = (_OWORD *)(a2 + 32);
        unint64_t v85 = *(void *)(a2 + 40);
        swift_bridgeObjectRetain(v83);
        if (v85 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 32) = *v84;
        }

        else
        {
          uint64_t v93 = *(void *)v84;
          sub_10019BA8C(v93, v85);
          *(void *)(a1 + 32) = v93;
          *(void *)(a1 + 40) = v85;
        }

        CFErrorRef v94 = *(const char **)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v94;
        unint64_t v95 = (_OWORD *)(a2 + 64);
        unint64_t v96 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain(v94);
        if (v96 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 64) = *v95;
        }

        else
        {
          uint64_t v97 = *(void *)v95;
          sub_10019BA8C(v97, v96);
          *(void *)(a1 + 64) = v97;
          *(void *)(a1 + 72) = v96;
        }

        uint64_t v98 = (uint64_t *)(a2 + 80);
        unint64_t v99 = *(void *)(a2 + 88);
        if (v99 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)v98;
        }

        else
        {
          uint64_t v100 = *v98;
          sub_10019BA8C(*v98, *(void *)(a2 + 88));
          *(void *)(a1 + 80) = v100;
          *(void *)(a1 + 88) = v99;
        }

        uint64_t v101 = *(const char **)(a2 + 104);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = v101;
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
        uint64_t v102 = *(void *)(a2 + 128);
        uint64_t v103 = *(const char **)(a2 + 136);
        *(void *)(a1 + 128) = v102;
        *(void *)(a1 + 136) = v103;
        *(void *)&double v104 = swift_bridgeObjectRetain(v101).n128_u64[0];
        swift_bridgeObjectRetain(v103, v104);
        swift_storeEnumTagMultiPayload(a1, a3, 3LL);
        break;
      case 4u:
        uint64_t v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a2, 1LL, v14))
        {
          uint64_t v16 = sub_100183098((uint64_t *)&unk_100647610);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v16 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0LL, 1LL, v14);
        }

        double v105 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
        uint64_t v106 = v105[5];
        double v107 = (void *)(a1 + v106);
        double v108 = (const void *)(a2 + v106);
        uint64_t v109 = type metadata accessor for SFAirDrop.TransferType(0LL);
        uint64_t v110 = *(void *)(v109 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v110 + 48))(v108, 1LL, v109))
        {
          uint64_t v111 = sub_100183098(&qword_100647608);
          memcpy(v107, v108, *(void *)(*(void *)(v111 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v110 + 16))(v107, v108, v109);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0LL, 1LL, v109);
        }

        uint64_t v153 = v105[6];
        uint64_t v154 = a1 + v153;
        double v155 = (uint64_t *)(a2 + v153);
        unint64_t v156 = v155[1];
        if (v156 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
        }

        else
        {
          uint64_t v157 = *v155;
          sub_10019BA8C(*v155, v155[1]);
          *(void *)uint64_t v154 = v157;
          *(void *)(v154 + 8) = v156;
        }

        uint64_t v158 = v105[7];
        double v159 = (void *)(a1 + v158);
        uint64_t v160 = (void *)(a2 + v158);
        uint64_t v161 = (const char *)v160[1];
        *double v159 = *v160;
        v159[1] = v161;
        uint64_t v162 = v105[8];
        char v163 = (void *)(a1 + v162);
        uint64_t v164 = (void *)(a2 + v162);
        __dstb = (const char *)v164[1];
        void *v163 = *v164;
        v163[1] = __dstb;
        uint64_t v165 = v105[9];
        uint64_t v166 = (void *)(a1 + v165);
        __n128 v167 = (void *)(a2 + v165);
        uint64_t v168 = (const char *)v167[1];
        *uint64_t v166 = *v167;
        v166[1] = v168;
        uint64_t v169 = v105[10];
        unint64_t v170 = (void *)(a1 + v169);
        char v171 = (void *)(a2 + v169);
        uint64_t v172 = (const char *)v171[1];
        void *v170 = *v171;
        v170[1] = v172;
        uint64_t v173 = v105[11];
        char v174 = *(const char **)(a2 + v173);
        *(void *)(a1 + v173) = v174;
        uint64_t v175 = v105[12];
        uint64_t v176 = *(const char **)(a2 + v175);
        *(void *)(a1 + v175) = v176;
        uint64_t v177 = v105[13];
        uint64_t v178 = (void *)(a1 + v177);
        uint64_t v179 = (void *)(a2 + v177);
        uint64_t v180 = (const char *)v179[1];
        *uint64_t v178 = *v179;
        v178[1] = v180;
        uint64_t v181 = v105[14];
        uint64_t v216 = (uint64_t *)(a2 + v181);
        uint64_t v217 = a1 + v181;
        unint64_t v182 = *(void *)(a2 + v181 + 8);
        *(void *)&double v183 = swift_bridgeObjectRetain(v161).n128_u64[0];
        *(void *)&double v184 = swift_bridgeObjectRetain(__dstb, v183).n128_u64[0];
        *(void *)&double v185 = swift_bridgeObjectRetain(v168, v184).n128_u64[0];
        *(void *)&double v186 = swift_bridgeObjectRetain(v172, v185).n128_u64[0];
        *(void *)&double v187 = swift_bridgeObjectRetain(v174, v186).n128_u64[0];
        *(void *)&double v188 = swift_bridgeObjectRetain(v176, v187).n128_u64[0];
        swift_bridgeObjectRetain(v180, v188);
        if (v182 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v217 = *(_OWORD *)v216;
        }

        else
        {
          uint64_t v189 = *v216;
          sub_10019BA8C(*v216, v182);
          *(void *)uint64_t v217 = v189;
          *(void *)(v217 + 8) = v182;
        }

        uint64_t v190 = v105[15];
        uint64_t v191 = a1 + v190;
        uint64_t v192 = (uint64_t *)(a2 + v190);
        unint64_t v193 = v192[1];
        if (v193 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v191 = *(_OWORD *)v192;
        }

        else
        {
          uint64_t v194 = *v192;
          sub_10019BA8C(*v192, v192[1]);
          *(void *)uint64_t v191 = v194;
          *(void *)(v191 + 8) = v193;
        }

        *(_BYTE *)(a1 + v105[16]) = *(_BYTE *)(a2 + v105[16]);
        uint64_t v195 = v105[17];
        uint64_t v196 = a1 + v195;
        uint64_t v197 = (uint64_t *)(a2 + v195);
        unint64_t v198 = v197[1];
        if (v198 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v196 = *(_OWORD *)v197;
        }

        else
        {
          uint64_t v199 = *v197;
          sub_10019BA8C(*v197, v197[1]);
          *(void *)uint64_t v196 = v199;
          *(void *)(v196 + 8) = v198;
        }

        swift_storeEnumTagMultiPayload(a1, a3, 4LL);
        break;
      case 5u:
        uint64_t v17 = *(const char **)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v17;
        uint64_t v18 = *(const char **)(a2 + 24);
        *(void *)(a1 + sub_100195658(v0 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v18;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        char v19 = *(const char **)(a2 + 48);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = v19;
        uint64_t v20 = *(const char **)(a2 + 64);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = v20;
        double v21 = *(const char **)(a2 + 80);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v21;
        uint64_t v22 = (uint64_t *)(a2 + 88);
        unint64_t v23 = *(void *)(a2 + 96);
        *(void *)&double v24 = swift_bridgeObjectRetain(v17).n128_u64[0];
        *(void *)&double v25 = swift_bridgeObjectRetain(v18, v24).n128_u64[0];
        *(void *)&double v26 = swift_bridgeObjectRetain(v19, v25).n128_u64[0];
        *(void *)&double v27 = swift_bridgeObjectRetain(v20, v26).n128_u64[0];
        swift_bridgeObjectRetain(v21, v27);
        if (v23 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v22;
        }

        else
        {
          uint64_t v86 = *v22;
          sub_10019BA8C(*v22, v23);
          *(void *)(a1 + 88) = v86;
          *(void *)(a1 + 96) = v23;
        }

        swift_storeEnumTagMultiPayload(a1, a3, 5LL);
        break;
      case 6u:
        uint64_t v28 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        uint64_t v29 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(a2, 1LL, v28))
        {
          uint64_t v30 = sub_100183098((uint64_t *)&unk_100647610);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v30 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v29 + 16))(a1, a2, v28);
          (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v29 + 56))(a1, 0LL, 1LL, v28);
        }

        double v112 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
        *(void *)(a1 + v112[5]) = *(void *)(a2 + v112[5]);
        uint64_t v113 = v112[6];
        uint64_t v114 = (void *)(a1 + v113);
        uint64_t v115 = (void *)(a2 + v113);
        double v116 = (const char *)v115[1];
        *uint64_t v114 = *v115;
        v114[1] = v116;
        uint64_t v117 = v112[7];
        uint64_t v118 = a1 + v117;
        uint64_t v119 = (_OWORD *)(a2 + v117);
        unint64_t v120 = *(void *)(a2 + v117 + 8);
        swift_bridgeObjectRetain(v116);
        if (v120 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v118 = *v119;
        }

        else
        {
          uint64_t v121 = *(void *)v119;
          sub_10019BA8C(v121, v120);
          *(void *)uint64_t v118 = v121;
          *(void *)(v118 + 8) = v120;
        }

        *(_BYTE *)(a1 + v112[8]) = *(_BYTE *)(a2 + v112[8]);
        uint64_t v122 = v112[9];
        uint64_t v123 = (void *)(a1 + v122);
        uint64_t v124 = (void *)(a2 + v122);
        __n128 v125 = (const char *)v124[1];
        void *v123 = *v124;
        v123[1] = v125;
        uint64_t v126 = v112[10];
        uint64_t v127 = (void *)(a1 + v126);
        uint64_t v128 = (void *)(a2 + v126);
        uint64_t v129 = (const char *)v128[1];
        *uint64_t v127 = *v128;
        v127[1] = v129;
        *(void *)&double v130 = swift_bridgeObjectRetain(v125).n128_u64[0];
        swift_bridgeObjectRetain(v129, v130);
        swift_storeEnumTagMultiPayload(a1, a3, 6LL);
        break;
      case 7u:
        uint64_t v32 = *(void *)a2;
        unint64_t v31 = *(void *)(a2 + 8);
        sub_10019BA8C(v32, v31);
        *(void *)a1 = v32;
        *(void *)(a1 + 8) = v31;
        swift_storeEnumTagMultiPayload(a1, a3, 7LL);
        break;
      case 8u:
        uint64_t v33 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16LL))(a1, a2, v33);
        uint64_t v34 = (int *)_s14descr1005DEB71C15ExchangeRequestVMa(0LL);
        uint64_t v35 = v34[5];
        uint64_t v36 = (void *)(a1 + v35);
        uint64_t v37 = (void *)(a2 + v35);
        uint64_t v38 = (const char *)v37[1];
        *uint64_t v36 = *v37;
        v36[1] = v38;
        uint64_t v39 = v34[6];
        uint64_t v40 = (void *)(a1 + v39);
        os_log_type_t v41 = (void *)(a2 + v39);
        uint64_t v42 = (const char *)v41[1];
        *uint64_t v40 = *v41;
        v40[1] = v42;
        uint64_t v43 = v34[7];
        __dst = (void *)(a1 + v43);
        uint64_t v44 = (const void *)(a2 + v43);
        uint64_t v45 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
        uint64_t v46 = *(void *)(v45 - 8);
        unint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v46 + 48);
        *(void *)&double v48 = swift_bridgeObjectRetain(v38).n128_u64[0];
        __n128 v49 = swift_bridgeObjectRetain(v42, v48);
        if (v47(v44, 1LL, v45, v49))
        {
          uint64_t v50 = sub_100183098(&qword_100651E70);
          memcpy(__dst, v44, *(void *)(*(void *)(v50 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(__dst, v44, v45);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(__dst, 0LL, 1LL, v45);
        }

        uint64_t v131 = v34[8];
        uint64_t v132 = a1 + v131;
        uint64_t v133 = (uint64_t *)(a2 + v131);
        unint64_t v134 = v133[1];
        if (v134 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
        }

        else
        {
          uint64_t v135 = *v133;
          sub_10019BA8C(*v133, v133[1]);
          *(void *)uint64_t v132 = v135;
          *(void *)(v132 + 8) = v134;
        }

        uint64_t v136 = v34[9];
        uint64_t v137 = a1 + v136;
        uint64_t v138 = a2 + v136;
        if (*(void *)(a2 + v136 + 72))
        {
          int v139 = *(const char **)(v138 + 8);
          *(void *)uint64_t v137 = *(void *)v138;
          *(void *)(v137 + 8) = v139;
          double v140 = (_OWORD *)(v138 + 16);
          unint64_t v141 = *(void *)(v138 + 24);
          swift_bridgeObjectRetain(v139);
          if (v141 >> 60 == 15)
          {
            *(_OWORD *)(v137 + sub_100195658(v0 + 16) = *v140;
          }

          else
          {
            uint64_t v204 = *(void *)v140;
            sub_10019BA8C(v204, v141);
            *(void *)(v137 + sub_100195658(v0 + 16) = v204;
            *(void *)(v137 + 24) = v141;
          }

          uint64_t v205 = *(void *)(v138 + 32);
          unint64_t v206 = *(void *)(v138 + 40);
          sub_10019BA8C(v205, v206);
          *(void *)(v137 + 32) = v205;
          *(void *)(v137 + 40) = v206;
          uint64_t v207 = *(void *)(v138 + 48);
          unint64_t v208 = *(void *)(v138 + 56);
          sub_10019BA8C(v207, v208);
          *(void *)(v137 + 48) = v207;
          *(void *)(v137 + 56) = v208;
          BOOL v209 = *(const char **)(v138 + 72);
          *(void *)(v137 + 64) = *(void *)(v138 + 64);
          *(void *)(v137 + 72) = v209;
          *(void *)(v137 + 80) = *(void *)(v138 + 80);
          swift_bridgeObjectRetain(v209);
        }

        else
        {
          __int128 v200 = *(_OWORD *)(v138 + 48);
          *(_OWORD *)(v137 + 32) = *(_OWORD *)(v138 + 32);
          *(_OWORD *)(v137 + 48) = v200;
          *(_OWORD *)(v137 + 64) = *(_OWORD *)(v138 + 64);
          *(void *)(v137 + 80) = *(void *)(v138 + 80);
          __int128 v201 = *(_OWORD *)(v138 + 16);
          *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
          *(_OWORD *)(v137 + sub_100195658(v0 + 16) = v201;
        }

        swift_storeEnumTagMultiPayload(a1, a3, 8LL);
        break;
      case 9u:
        uint64_t v51 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16LL))(a1, a2, v51);
        char v52 = (int *)_s14descr1005DEB71C16ExchangeResponseVMa(0LL);
        uint64_t v53 = v52[5];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = (void *)(a2 + v53);
        double v56 = (const char *)v55[1];
        void *v54 = *v55;
        v54[1] = v56;
        uint64_t v57 = v52[6];
        uint64_t v58 = (void *)(a1 + v57);
        uint64_t v59 = (void *)(a2 + v57);
        uint64_t v60 = (const char *)v59[1];
        void *v58 = *v59;
        v58[1] = v60;
        uint64_t v61 = v52[7];
        __dsta = (void *)(a1 + v61);
        double v62 = (const void *)(a2 + v61);
        uint64_t v63 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
        uint64_t v64 = *(void *)(v63 - 8);
        double v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v64 + 48);
        *(void *)&double v66 = swift_bridgeObjectRetain(v56).n128_u64[0];
        __n128 v67 = swift_bridgeObjectRetain(v60, v66);
        if (v65(v62, 1LL, v63, v67))
        {
          uint64_t v68 = sub_100183098(&qword_100651E70);
          memcpy(__dsta, v62, *(void *)(*(void *)(v68 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v64 + 16))(__dsta, v62, v63);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(__dsta, 0LL, 1LL, v63);
        }

        uint64_t v142 = v52[8];
        uint64_t v143 = a1 + v142;
        unint64_t v144 = (uint64_t *)(a2 + v142);
        unint64_t v145 = v144[1];
        if (v145 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v143 = *(_OWORD *)v144;
        }

        else
        {
          uint64_t v146 = *v144;
          sub_10019BA8C(*v144, v144[1]);
          *(void *)uint64_t v143 = v146;
          *(void *)(v143 + 8) = v145;
        }

        uint64_t v147 = v52[9];
        uint64_t v148 = a1 + v147;
        uint64_t v149 = a2 + v147;
        if (*(void *)(a2 + v147 + 72))
        {
          NSString v150 = *(const char **)(v149 + 8);
          *(void *)uint64_t v148 = *(void *)v149;
          *(void *)(v148 + 8) = v150;
          uint64_t v151 = (_OWORD *)(v149 + 16);
          unint64_t v152 = *(void *)(v149 + 24);
          swift_bridgeObjectRetain(v150);
          if (v152 >> 60 == 15)
          {
            *(_OWORD *)(v148 + sub_100195658(v0 + 16) = *v151;
          }

          else
          {
            uint64_t v210 = *(void *)v151;
            sub_10019BA8C(v210, v152);
            *(void *)(v148 + sub_100195658(v0 + 16) = v210;
            *(void *)(v148 + 24) = v152;
          }

          uint64_t v211 = *(void *)(v149 + 32);
          unint64_t v212 = *(void *)(v149 + 40);
          sub_10019BA8C(v211, v212);
          *(void *)(v148 + 32) = v211;
          *(void *)(v148 + 40) = v212;
          uint64_t v213 = *(void *)(v149 + 48);
          unint64_t v214 = *(void *)(v149 + 56);
          sub_10019BA8C(v213, v214);
          *(void *)(v148 + 48) = v213;
          *(void *)(v148 + 56) = v214;
          uint64_t v215 = *(const char **)(v149 + 72);
          *(void *)(v148 + 64) = *(void *)(v149 + 64);
          *(void *)(v148 + 72) = v215;
          *(void *)(v148 + 80) = *(void *)(v149 + 80);
          swift_bridgeObjectRetain(v215);
        }

        else
        {
          __int128 v202 = *(_OWORD *)(v149 + 48);
          *(_OWORD *)(v148 + 32) = *(_OWORD *)(v149 + 32);
          *(_OWORD *)(v148 + 48) = v202;
          *(_OWORD *)(v148 + 64) = *(_OWORD *)(v149 + 64);
          *(void *)(v148 + 80) = *(void *)(v149 + 80);
          __int128 v203 = *(_OWORD *)(v149 + 16);
          *(_OWORD *)uint64_t v148 = *(_OWORD *)v149;
          *(_OWORD *)(v148 + sub_100195658(v0 + 16) = v203;
        }

        swift_storeEnumTagMultiPayload(a1, a3, 9LL);
        break;
      case 0xAu:
        double v69 = *(const char **)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v69;
        uint64_t v70 = (_OWORD *)(a2 + 16);
        unint64_t v71 = *(void *)(a2 + 24);
        swift_bridgeObjectRetain(v69);
        if (v71 >> 60 == 15)
        {
          *(_OWORD *)(a1 + sub_100195658(v0 + 16) = *v70;
        }

        else
        {
          uint64_t v87 = *(void *)v70;
          sub_10019BA8C(v87, v71);
          *(void *)(a1 + sub_100195658(v0 + 16) = v87;
          *(void *)(a1 + 24) = v71;
        }

        uint64_t v88 = *(void *)(a2 + 32);
        unint64_t v89 = *(void *)(a2 + 40);
        sub_10019BA8C(v88, v89);
        *(void *)(a1 + 32) = v88;
        *(void *)(a1 + 40) = v89;
        uint64_t v90 = *(void *)(a2 + 48);
        unint64_t v91 = *(void *)(a2 + 56);
        sub_10019BA8C(v90, v91);
        *(void *)(a1 + 48) = v90;
        *(void *)(a1 + 56) = v91;
        uint64_t v92 = *(const char **)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v92;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        swift_bridgeObjectRetain(v92);
        swift_storeEnumTagMultiPayload(a1, a3, 10LL);
        break;
      case 0xBu:
        uint64_t v73 = *(void *)a2;
        unint64_t v72 = *(void *)(a2 + 8);
        sub_10019BA8C(v73, v72);
        *(void *)a1 = v73;
        *(void *)(a1 + 8) = v72;
        swift_storeEnumTagMultiPayload(a1, a3, 11LL);
        break;
      case 0xCu:
        uint64_t v74 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16LL))(a1, a2, v74);
        uint64_t v75 = *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
        uint64_t v76 = a1 + v75;
        uint64_t v77 = a2 + v75;
        uint64_t v78 = type metadata accessor for CodableError(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 16LL))(v76, v77, v78);
        swift_storeEnumTagMultiPayload(a1, a3, 12LL);
        break;
      case 0xDu:
        uint64_t v80 = *(void *)a2;
        unint64_t v79 = *(void *)(a2 + 8);
        sub_10019BA8C(v80, v79);
        *(void *)a1 = v80;
        *(void *)(a1 + 8) = v79;
        swift_storeEnumTagMultiPayload(a1, a3, 13LL);
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(v5 + 64));
        break;
    }
  }

  return a1;
}

void sub_100397EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1;
  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      uint64_t v5 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      goto LABEL_48;
    case 2u:
      unint64_t v4 = *(void *)(v2 + 8);
      if (v4 >> 60 == 15) {
        return;
      }
      uint64_t v3 = *(void *)v2;
      goto LABEL_3;
    case 3u:
      unint64_t v6 = *(void *)(v2 + 8);
      if (v6 >> 60 != 15) {
        sub_100189B20(*(void *)v2, v6);
      }
      swift_bridgeObjectRelease(*(const char **)(v2 + 24));
      unint64_t v7 = *(void *)(v2 + 40);
      if (v7 >> 60 != 15) {
        sub_100189B20(*(void *)(v2 + 32), v7);
      }
      swift_bridgeObjectRelease(*(const char **)(v2 + 56));
      unint64_t v8 = *(void *)(v2 + 72);
      if (v8 >> 60 != 15) {
        sub_100189B20(*(void *)(v2 + 64), v8);
      }
      unint64_t v9 = *(void *)(v2 + 88);
      if (v9 >> 60 != 15) {
        sub_100189B20(*(void *)(v2 + 80), v9);
      }
      unint64_t v10 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + 104)).n128_u64[0];
      uint64_t v11 = *(const char **)(v2 + 136);
      goto LABEL_45;
    case 4u:
      uint64_t v12 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
      uint64_t v15 = v2 + v14[5];
      uint64_t v16 = type metadata accessor for SFAirDrop.TransferType(0LL);
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = (uint64_t *)(v2 + v14[6]);
      unint64_t v19 = v18[1];
      if (v19 >> 60 != 15) {
        sub_100189B20(*v18, v19);
      }
      *(void *)&double v20 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v14[7] + 8)).n128_u64[0];
      *(void *)&double v21 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v14[8] + 8), v20).n128_u64[0];
      *(void *)&double v22 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v14[9] + 8), v21).n128_u64[0];
      *(void *)&double v23 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v14[10] + 8), v22).n128_u64[0];
      *(void *)&double v24 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v14[11]), v23).n128_u64[0];
      *(void *)&double v25 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v14[12]), v24).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v2 + v14[13] + 8), v25);
      double v26 = (uint64_t *)(v2 + v14[14]);
      unint64_t v27 = v26[1];
      if (v27 >> 60 != 15) {
        sub_100189B20(*v26, v27);
      }
      uint64_t v28 = (uint64_t *)(v2 + v14[15]);
      unint64_t v29 = v28[1];
      if (v29 >> 60 != 15) {
        sub_100189B20(*v28, v29);
      }
      uint64_t v30 = (uint64_t *)(v2 + v14[17]);
      unint64_t v4 = v30[1];
      if (v4 >> 60 == 15) {
        return;
      }
      uint64_t v3 = *v30;
      goto LABEL_3;
    case 5u:
      *(void *)&double v31 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + 8)).n128_u64[0];
      *(void *)&double v32 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + 24), v31).n128_u64[0];
      *(void *)&double v33 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + 48), v32).n128_u64[0];
      *(void *)&double v34 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + 64), v33).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v2 + 80), v34);
      unint64_t v4 = *(void *)(v2 + 96);
      if (v4 >> 60 == 15) {
        return;
      }
      uint64_t v3 = *(void *)(v2 + 88);
LABEL_3:
      sub_100189B20(v3, v4);
      return;
    case 6u:
      uint64_t v35 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
      swift_bridgeObjectRelease(*(const char **)(v2 + v37[6] + 8));
      uint64_t v38 = (uint64_t *)(v2 + v37[7]);
      unint64_t v39 = v38[1];
      if (v39 >> 60 != 15) {
        sub_100189B20(*v38, v39);
      }
      unint64_t v10 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + v37[9] + 8)).n128_u64[0];
      uint64_t v11 = *(const char **)(v2 + v37[10] + 8);
      goto LABEL_45;
    case 7u:
    case 0xBu:
    case 0xDu:
      uint64_t v3 = *(void *)v2;
      unint64_t v4 = *(void *)(v2 + 8);
      goto LABEL_3;
    case 8u:
      uint64_t v40 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8LL))(v2, v40);
      uint64_t v41 = _s14descr1005DEB71C15ExchangeRequestVMa(0LL);
      goto LABEL_37;
    case 9u:
      uint64_t v42 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8LL))(v2, v42);
      uint64_t v41 = _s14descr1005DEB71C16ExchangeResponseVMa(0LL);
LABEL_37:
      uint64_t v43 = (int *)v41;
      *(void *)&double v44 = swift_bridgeObjectRelease((const char *)*(void *)(v2 + *(int *)(v41 + 20) + 8)).n128_u64[0];
      swift_bridgeObjectRelease(*(const char **)(v2 + v43[6] + 8), v44);
      uint64_t v45 = v2 + v43[7];
      uint64_t v46 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
      uint64_t v47 = *(void *)(v46 - 8);
      double v48 = (uint64_t *)(v2 + v43[8]);
      unint64_t v49 = v48[1];
      if (v49 >> 60 != 15) {
        sub_100189B20(*v48, v49);
      }
      v2 += v43[9];
      if (*(void *)(v2 + 72)) {
        goto LABEL_42;
      }
      return;
    case 0xAu:
LABEL_42:
      swift_bridgeObjectRelease(*(const char **)(v2 + 8));
      unint64_t v50 = *(void *)(v2 + 24);
      if (v50 >> 60 != 15) {
        sub_100189B20(*(void *)(v2 + 16), v50);
      }
      sub_100189B20(*(void *)(v2 + 32), *(void *)(v2 + 40));
      sub_100189B20(*(void *)(v2 + 48), *(void *)(v2 + 56));
      uint64_t v11 = *(const char **)(v2 + 72);
LABEL_45:
      swift_bridgeObjectRelease(v11, *(double *)&v10);
      break;
    case 0xCu:
      uint64_t v51 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8LL))(v2, v51);
      v2 += *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
      uint64_t v5 = type metadata accessor for CodableError(0LL);
LABEL_48:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v2, v5);
      break;
    default:
      return;
  }

uint64_t sub_1003983CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
      uint64_t v7 = _s12HelloRequestVMa(0LL);
      *(_DWORD *)(a1 + *(int *)(v7 + 20)) = *(_DWORD *)(a2 + *(int *)(v7 + 20));
      *(_BYTE *)(a1 + *(int *)(v7 + sub_10038C154(*(void *)(v0 + 16), *(void **)(v0 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 0LL;
      goto LABEL_85;
    case 2u:
      unint64_t v11 = *(void *)(a2 + 8);
      if (v11 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }

      else
      {
        uint64_t v82 = *(void *)a2;
        sub_10019BA8C(v82, v11);
        *(void *)a1 = v82;
        *(void *)(a1 + 8) = v11;
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 2LL;
      goto LABEL_85;
    case 3u:
      unint64_t v12 = *(void *)(a2 + 8);
      if (v12 >> 60 == 15)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }

      else
      {
        uint64_t v83 = *(void *)a2;
        sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
        *(void *)a1 = v83;
        *(void *)(a1 + 8) = v12;
      }

      uint64_t v84 = *(const char **)(a2 + 24);
      *(void *)(a1 + sub_100195658(v0 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v84;
      unint64_t v85 = (uint64_t *)(a2 + 32);
      unint64_t v86 = *(void *)(a2 + 40);
      swift_bridgeObjectRetain(v84);
      if (v86 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)v85;
      }

      else
      {
        uint64_t v94 = *v85;
        sub_10019BA8C(*v85, v86);
        *(void *)(a1 + 32) = v94;
        *(void *)(a1 + 40) = v86;
      }

      unint64_t v95 = *(const char **)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v95;
      unint64_t v96 = (uint64_t *)(a2 + 64);
      unint64_t v97 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain(v95);
      if (v97 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 64) = *(_OWORD *)v96;
      }

      else
      {
        uint64_t v98 = *v96;
        sub_10019BA8C(*v96, v97);
        *(void *)(a1 + 64) = v98;
        *(void *)(a1 + 72) = v97;
      }

      unint64_t v99 = (uint64_t *)(a2 + 80);
      unint64_t v100 = *(void *)(a2 + 88);
      if (v100 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 80) = *(_OWORD *)v99;
      }

      else
      {
        uint64_t v101 = *v99;
        sub_10019BA8C(*v99, *(void *)(a2 + 88));
        *(void *)(a1 + 80) = v101;
        *(void *)(a1 + 88) = v100;
      }

      uint64_t v102 = *(const char **)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v102;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
      uint64_t v103 = *(void *)(a2 + 128);
      double v104 = *(const char **)(a2 + 136);
      *(void *)(a1 + 128) = v103;
      *(void *)(a1 + 136) = v104;
      *(void *)&double v105 = swift_bridgeObjectRetain(v102).n128_u64[0];
      swift_bridgeObjectRetain(v104, v105);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 3LL;
      goto LABEL_85;
    case 4u:
      uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2, 1LL, v13))
      {
        uint64_t v15 = sub_100183098((uint64_t *)&unk_100647610);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0LL, 1LL, v13);
      }

      uint64_t v106 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
      uint64_t v107 = v106[5];
      double v108 = (void *)(a1 + v107);
      uint64_t v109 = (const void *)(a2 + v107);
      uint64_t v110 = type metadata accessor for SFAirDrop.TransferType(0LL);
      uint64_t v111 = *(void *)(v110 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v111 + 48))(v109, 1LL, v110))
      {
        uint64_t v112 = sub_100183098(&qword_100647608);
        memcpy(v108, v109, *(void *)(*(void *)(v112 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v111 + 16))(v108, v109, v110);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0LL, 1LL, v110);
      }

      uint64_t v154 = v106[6];
      uint64_t v155 = a1 + v154;
      unint64_t v156 = (uint64_t *)(a2 + v154);
      unint64_t v157 = v156[1];
      uint64_t v223 = a3;
      if (v157 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
      }

      else
      {
        uint64_t v158 = *v156;
        sub_10019BA8C(*v156, v157);
        *(void *)uint64_t v155 = v158;
        *(void *)(v155 + 8) = v157;
      }

      uint64_t v159 = v106[7];
      uint64_t v160 = (void *)(a1 + v159);
      uint64_t v161 = (void *)(a2 + v159);
      uint64_t v162 = (const char *)v161[1];
      void *v160 = *v161;
      v160[1] = v162;
      uint64_t v163 = v106[8];
      uint64_t v164 = (void *)(a1 + v163);
      uint64_t v165 = (void *)(a2 + v163);
      uint64_t v220 = (const char *)v165[1];
      *uint64_t v164 = *v165;
      v164[1] = v220;
      uint64_t v166 = v106[9];
      __n128 v167 = (void *)(a1 + v166);
      uint64_t v168 = (void *)(a2 + v166);
      uint64_t v169 = (const char *)v168[1];
      *__n128 v167 = *v168;
      v167[1] = v169;
      uint64_t v170 = v106[10];
      char v171 = (void *)(a1 + v170);
      uint64_t v172 = (void *)(a2 + v170);
      uint64_t v173 = (const char *)v172[1];
      *char v171 = *v172;
      v171[1] = v173;
      uint64_t v174 = v106[11];
      uint64_t v175 = *(const char **)(a2 + v174);
      *(void *)(a1 + v174) = v175;
      uint64_t v176 = v106[12];
      uint64_t v177 = *(const char **)(a2 + v176);
      *(void *)(a1 + v176) = v177;
      uint64_t v178 = v106[13];
      uint64_t v179 = (void *)(a1 + v178);
      uint64_t v180 = (void *)(a2 + v178);
      uint64_t v181 = (const char *)v180[1];
      void *v179 = *v180;
      v179[1] = v181;
      uint64_t v182 = v106[14];
      uint64_t v219 = a1 + v182;
      double v183 = (uint64_t *)(a2 + v182);
      unint64_t v184 = *(void *)(a2 + v182 + 8);
      *(void *)&double v185 = swift_bridgeObjectRetain(v162).n128_u64[0];
      *(void *)&double v186 = swift_bridgeObjectRetain(v220, v185).n128_u64[0];
      *(void *)&double v187 = swift_bridgeObjectRetain(v169, v186).n128_u64[0];
      *(void *)&double v188 = swift_bridgeObjectRetain(v173, v187).n128_u64[0];
      *(void *)&double v189 = swift_bridgeObjectRetain(v175, v188).n128_u64[0];
      *(void *)&double v190 = swift_bridgeObjectRetain(v177, v189).n128_u64[0];
      swift_bridgeObjectRetain(v181, v190);
      if (v184 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v219 = *(_OWORD *)v183;
      }

      else
      {
        uint64_t v191 = *v183;
        sub_10019BA8C(*v183, v184);
        *(void *)uint64_t v219 = v191;
        *(void *)(v219 + 8) = v184;
      }

      uint64_t v192 = v106[15];
      uint64_t v193 = a1 + v192;
      uint64_t v194 = (uint64_t *)(a2 + v192);
      unint64_t v195 = v194[1];
      if (v195 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v193 = *(_OWORD *)v194;
      }

      else
      {
        uint64_t v196 = *v194;
        sub_10019BA8C(*v194, v194[1]);
        *(void *)uint64_t v193 = v196;
        *(void *)(v193 + 8) = v195;
      }

      *(_BYTE *)(a1 + v106[16]) = *(_BYTE *)(a2 + v106[16]);
      uint64_t v197 = v106[17];
      uint64_t v198 = a1 + v197;
      uint64_t v199 = (uint64_t *)(a2 + v197);
      unint64_t v200 = v199[1];
      if (v200 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v198 = *(_OWORD *)v199;
      }

      else
      {
        uint64_t v201 = *v199;
        sub_10019BA8C(*v199, v199[1]);
        *(void *)uint64_t v198 = v201;
        *(void *)(v198 + 8) = v200;
      }

      uint64_t v8 = a1;
      uint64_t v9 = v223;
      uint64_t v10 = 4LL;
      goto LABEL_85;
    case 5u:
      uint64_t v16 = *(const char **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = *(const char **)(a2 + 24);
      *(void *)(a1 + sub_100195658(v0 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v17;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      uint64_t v18 = *(const char **)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v18;
      unint64_t v19 = *(const char **)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v19;
      double v20 = *(const char **)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v20;
      double v21 = (uint64_t *)(a2 + 88);
      unint64_t v22 = *(void *)(a2 + 96);
      *(void *)&double v23 = swift_bridgeObjectRetain(v16).n128_u64[0];
      *(void *)&double v24 = swift_bridgeObjectRetain(v17, v23).n128_u64[0];
      *(void *)&double v25 = swift_bridgeObjectRetain(v18, v24).n128_u64[0];
      *(void *)&double v26 = swift_bridgeObjectRetain(v19, v25).n128_u64[0];
      swift_bridgeObjectRetain(v20, v26);
      if (v22 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 88) = *(_OWORD *)v21;
      }

      else
      {
        uint64_t v87 = *v21;
        sub_10019BA8C(*v21, v22);
        *(void *)(a1 + 88) = v87;
        *(void *)(a1 + 96) = v22;
      }

      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 5LL;
      goto LABEL_85;
    case 6u:
      uint64_t v27 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(a2, 1LL, v27))
      {
        uint64_t v29 = sub_100183098((uint64_t *)&unk_100647610);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v29 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(a1, a2, v27);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(a1, 0LL, 1LL, v27);
      }

      uint64_t v113 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
      *(void *)(a1 + v113[5]) = *(void *)(a2 + v113[5]);
      uint64_t v114 = v113[6];
      uint64_t v115 = (void *)(a1 + v114);
      double v116 = (void *)(a2 + v114);
      uint64_t v117 = (const char *)v116[1];
      *uint64_t v115 = *v116;
      v115[1] = v117;
      uint64_t v118 = v113[7];
      uint64_t v119 = a1 + v118;
      unint64_t v120 = (_OWORD *)(a2 + v118);
      unint64_t v121 = *(void *)(a2 + v118 + 8);
      swift_bridgeObjectRetain(v117);
      if (v121 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v119 = *v120;
      }

      else
      {
        uint64_t v122 = *(void *)v120;
        sub_10019BA8C(v122, v121);
        *(void *)uint64_t v119 = v122;
        *(void *)(v119 + 8) = v121;
      }

      *(_BYTE *)(a1 + v113[8]) = *(_BYTE *)(a2 + v113[8]);
      uint64_t v123 = v113[9];
      uint64_t v124 = (void *)(a1 + v123);
      __n128 v125 = (void *)(a2 + v123);
      uint64_t v126 = (const char *)v125[1];
      *uint64_t v124 = *v125;
      v124[1] = v126;
      uint64_t v127 = v113[10];
      uint64_t v128 = (void *)(a1 + v127);
      uint64_t v129 = (void *)(a2 + v127);
      double v130 = (const char *)v129[1];
      void *v128 = *v129;
      v128[1] = v130;
      *(void *)&double v131 = swift_bridgeObjectRetain(v126).n128_u64[0];
      swift_bridgeObjectRetain(v130, v131);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 6LL;
      goto LABEL_85;
    case 7u:
      uint64_t v30 = *(void *)a2;
      unint64_t v31 = *(void *)(a2 + 8);
      sub_10019BA8C(v30, v31);
      *(void *)a1 = v30;
      *(void *)(a1 + 8) = v31;
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 7LL;
      goto LABEL_85;
    case 8u:
      uint64_t v221 = a3;
      uint64_t v32 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16LL))(a1, a2, v32);
      double v33 = (int *)_s14descr1005DEB71C15ExchangeRequestVMa(0LL);
      uint64_t v34 = v33[5];
      uint64_t v35 = (void *)(a1 + v34);
      uint64_t v36 = (void *)(a2 + v34);
      uint64_t v37 = (const char *)v36[1];
      *uint64_t v35 = *v36;
      v35[1] = v37;
      uint64_t v38 = v33[6];
      unint64_t v39 = (void *)(a1 + v38);
      uint64_t v40 = (void *)(a2 + v38);
      uint64_t v41 = (const char *)v40[1];
      *unint64_t v39 = *v40;
      v39[1] = v41;
      uint64_t v42 = v33[7];
      uint64_t v43 = (void *)(a1 + v42);
      double v44 = (const void *)(a2 + v42);
      uint64_t v45 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
      uint64_t v46 = *(void *)(v45 - 8);
      uint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v46 + 48);
      *(void *)&double v48 = swift_bridgeObjectRetain(v37).n128_u64[0];
      __n128 v49 = swift_bridgeObjectRetain(v41, v48);
      if (v47(v44, 1LL, v45, v49))
      {
        uint64_t v50 = sub_100183098(&qword_100651E70);
        memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0LL, 1LL, v45);
      }

      uint64_t v132 = v33[8];
      uint64_t v133 = a1 + v132;
      unint64_t v134 = (uint64_t *)(a2 + v132);
      unint64_t v135 = v134[1];
      if (v135 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
      }

      else
      {
        uint64_t v136 = *v134;
        sub_10019BA8C(*v134, v134[1]);
        *(void *)uint64_t v133 = v136;
        *(void *)(v133 + 8) = v135;
      }

      uint64_t v137 = v33[9];
      uint64_t v138 = a1 + v137;
      uint64_t v139 = a2 + v137;
      if (*(void *)(a2 + v137 + 72))
      {
        double v140 = *(const char **)(v139 + 8);
        *(void *)uint64_t v138 = *(void *)v139;
        *(void *)(v138 + 8) = v140;
        unint64_t v141 = (_OWORD *)(v139 + 16);
        unint64_t v142 = *(void *)(v139 + 24);
        swift_bridgeObjectRetain(v140);
        if (v142 >> 60 == 15)
        {
          *(_OWORD *)(v138 + sub_100195658(v0 + 16) = *v141;
        }

        else
        {
          uint64_t v206 = *(void *)v141;
          sub_10019BA8C(v206, v142);
          *(void *)(v138 + sub_100195658(v0 + 16) = v206;
          *(void *)(v138 + 24) = v142;
        }

        uint64_t v207 = *(void *)(v139 + 32);
        unint64_t v208 = *(void *)(v139 + 40);
        sub_10019BA8C(v207, v208);
        *(void *)(v138 + 32) = v207;
        *(void *)(v138 + 40) = v208;
        uint64_t v209 = *(void *)(v139 + 48);
        unint64_t v210 = *(void *)(v139 + 56);
        sub_10019BA8C(v209, v210);
        *(void *)(v138 + 48) = v209;
        *(void *)(v138 + 56) = v210;
        uint64_t v211 = *(const char **)(v139 + 72);
        *(void *)(v138 + 64) = *(void *)(v139 + 64);
        *(void *)(v138 + 72) = v211;
        *(void *)(v138 + 80) = *(void *)(v139 + 80);
        swift_bridgeObjectRetain(v211);
      }

      else
      {
        __int128 v202 = *(_OWORD *)(v139 + 48);
        *(_OWORD *)(v138 + 32) = *(_OWORD *)(v139 + 32);
        *(_OWORD *)(v138 + 48) = v202;
        *(_OWORD *)(v138 + 64) = *(_OWORD *)(v139 + 64);
        *(void *)(v138 + 80) = *(void *)(v139 + 80);
        __int128 v203 = *(_OWORD *)(v139 + 16);
        *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
        *(_OWORD *)(v138 + sub_100195658(v0 + 16) = v203;
      }

      uint64_t v8 = a1;
      uint64_t v9 = v221;
      uint64_t v10 = 8LL;
      goto LABEL_85;
    case 9u:
      uint64_t v222 = a3;
      uint64_t v51 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16LL))(a1, a2, v51);
      char v52 = (int *)_s14descr1005DEB71C16ExchangeResponseVMa(0LL);
      uint64_t v53 = v52[5];
      uint64_t v54 = (void *)(a1 + v53);
      uint64_t v55 = (void *)(a2 + v53);
      double v56 = (const char *)v55[1];
      void *v54 = *v55;
      v54[1] = v56;
      uint64_t v57 = v52[6];
      uint64_t v58 = (void *)(a1 + v57);
      uint64_t v59 = (void *)(a2 + v57);
      uint64_t v60 = (const char *)v59[1];
      void *v58 = *v59;
      v58[1] = v60;
      uint64_t v61 = v52[7];
      double v62 = (void *)(a1 + v61);
      uint64_t v63 = (const void *)(a2 + v61);
      uint64_t v64 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
      uint64_t v65 = *(void *)(v64 - 8);
      double v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v65 + 48);
      *(void *)&double v67 = swift_bridgeObjectRetain(v56).n128_u64[0];
      __n128 v68 = swift_bridgeObjectRetain(v60, v67);
      if (v66(v63, 1LL, v64, v68))
      {
        uint64_t v69 = sub_100183098(&qword_100651E70);
        memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0LL, 1LL, v64);
      }

      uint64_t v143 = v52[8];
      uint64_t v144 = a1 + v143;
      unint64_t v145 = (uint64_t *)(a2 + v143);
      unint64_t v146 = v145[1];
      if (v146 >> 60 == 15)
      {
        *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
      }

      else
      {
        uint64_t v147 = *v145;
        sub_10019BA8C(*v145, v145[1]);
        *(void *)uint64_t v144 = v147;
        *(void *)(v144 + 8) = v146;
      }

      uint64_t v148 = v52[9];
      uint64_t v149 = a1 + v148;
      uint64_t v150 = a2 + v148;
      if (*(void *)(a2 + v148 + 72))
      {
        uint64_t v151 = *(const char **)(v150 + 8);
        *(void *)uint64_t v149 = *(void *)v150;
        *(void *)(v149 + 8) = v151;
        unint64_t v152 = (_OWORD *)(v150 + 16);
        unint64_t v153 = *(void *)(v150 + 24);
        swift_bridgeObjectRetain(v151);
        if (v153 >> 60 == 15)
        {
          *(_OWORD *)(v149 + sub_100195658(v0 + 16) = *v152;
        }

        else
        {
          uint64_t v212 = *(void *)v152;
          sub_10019BA8C(v212, v153);
          *(void *)(v149 + sub_100195658(v0 + 16) = v212;
          *(void *)(v149 + 24) = v153;
        }

        uint64_t v213 = *(void *)(v150 + 32);
        unint64_t v214 = *(void *)(v150 + 40);
        sub_10019BA8C(v213, v214);
        *(void *)(v149 + 32) = v213;
        *(void *)(v149 + 40) = v214;
        uint64_t v215 = *(void *)(v150 + 48);
        unint64_t v216 = *(void *)(v150 + 56);
        sub_10019BA8C(v215, v216);
        *(void *)(v149 + 48) = v215;
        *(void *)(v149 + 56) = v216;
        uint64_t v217 = *(const char **)(v150 + 72);
        *(void *)(v149 + 64) = *(void *)(v150 + 64);
        *(void *)(v149 + 72) = v217;
        *(void *)(v149 + 80) = *(void *)(v150 + 80);
        swift_bridgeObjectRetain(v217);
      }

      else
      {
        __int128 v204 = *(_OWORD *)(v150 + 48);
        *(_OWORD *)(v149 + 32) = *(_OWORD *)(v150 + 32);
        *(_OWORD *)(v149 + 48) = v204;
        *(_OWORD *)(v149 + 64) = *(_OWORD *)(v150 + 64);
        *(void *)(v149 + 80) = *(void *)(v150 + 80);
        __int128 v205 = *(_OWORD *)(v150 + 16);
        *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
        *(_OWORD *)(v149 + sub_100195658(v0 + 16) = v205;
      }

      uint64_t v8 = a1;
      uint64_t v9 = v222;
      uint64_t v10 = 9LL;
      goto LABEL_85;
    case 0xAu:
      uint64_t v70 = *(const char **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v70;
      unint64_t v71 = (_OWORD *)(a2 + 16);
      unint64_t v72 = *(void *)(a2 + 24);
      swift_bridgeObjectRetain(v70);
      if (v72 >> 60 == 15)
      {
        *(_OWORD *)(a1 + sub_100195658(v0 + 16) = *v71;
      }

      else
      {
        uint64_t v88 = *(void *)v71;
        sub_10019BA8C(v88, v72);
        *(void *)(a1 + sub_100195658(v0 + 16) = v88;
        *(void *)(a1 + 24) = v72;
      }

      uint64_t v89 = *(void *)(a2 + 32);
      unint64_t v90 = *(void *)(a2 + 40);
      sub_10019BA8C(v89, v90);
      *(void *)(a1 + 32) = v89;
      *(void *)(a1 + 40) = v90;
      uint64_t v91 = *(void *)(a2 + 48);
      unint64_t v92 = *(void *)(a2 + 56);
      sub_10019BA8C(v91, v92);
      *(void *)(a1 + 48) = v91;
      *(void *)(a1 + 56) = v92;
      uint64_t v93 = *(const char **)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v93;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain(v93);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 10LL;
      goto LABEL_85;
    case 0xBu:
      uint64_t v73 = *(void *)a2;
      unint64_t v74 = *(void *)(a2 + 8);
      sub_10019BA8C(v73, v74);
      *(void *)a1 = v73;
      *(void *)(a1 + 8) = v74;
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 11LL;
      goto LABEL_85;
    case 0xCu:
      uint64_t v75 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16LL))(a1, a2, v75);
      uint64_t v76 = *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
      uint64_t v77 = a1 + v76;
      uint64_t v78 = a2 + v76;
      uint64_t v79 = type metadata accessor for CodableError(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16LL))(v77, v78, v79);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 12LL;
      goto LABEL_85;
    case 0xDu:
      uint64_t v80 = *(void *)a2;
      unint64_t v81 = *(void *)(a2 + 8);
      sub_10019BA8C(v80, v81);
      *(void *)a1 = v80;
      *(void *)(a1 + 8) = v81;
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 13LL;
LABEL_85:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}

uint64_t sub_100399014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001A4BC8(a1, type metadata accessor for SDAirDropMessage);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
        uint64_t v7 = _s12HelloRequestVMa(0LL);
        *(_DWORD *)(a1 + *(int *)(v7 + 20)) = *(_DWORD *)(a2 + *(int *)(v7 + 20));
        *(_BYTE *)(a1 + *(int *)(v7 + sub_10038C154(*(void *)(v0 + 16), *(void **)(v0 + 24)) = *(_BYTE *)(a2 + *(int *)(v7 + 24));
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 0LL;
        goto LABEL_86;
      case 2u:
        unint64_t v11 = *(void *)(a2 + 8);
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }

        else
        {
          uint64_t v82 = *(void *)a2;
          sub_10019BA8C(v82, v11);
          *(void *)a1 = v82;
          *(void *)(a1 + 8) = v11;
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 2LL;
        goto LABEL_86;
      case 3u:
        unint64_t v12 = *(void *)(a2 + 8);
        if (v12 >> 60 == 15)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }

        else
        {
          uint64_t v83 = *(void *)a2;
          sub_10019BA8C(*(void *)a2, *(void *)(a2 + 8));
          *(void *)a1 = v83;
          *(void *)(a1 + 8) = v12;
        }

        *(void *)(a1 + sub_100195658(v0 + 16) = *(void *)(a2 + 16);
        uint64_t v84 = *(const char **)(a2 + 24);
        *(void *)(a1 + 24) = v84;
        unint64_t v85 = (uint64_t *)(a2 + 32);
        unint64_t v86 = *(void *)(a2 + 40);
        swift_bridgeObjectRetain(v84);
        if (v86 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 32) = *(_OWORD *)v85;
        }

        else
        {
          uint64_t v94 = *v85;
          sub_10019BA8C(*v85, v86);
          *(void *)(a1 + 32) = v94;
          *(void *)(a1 + 40) = v86;
        }

        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        unint64_t v95 = *(const char **)(a2 + 56);
        *(void *)(a1 + 56) = v95;
        unint64_t v96 = (uint64_t *)(a2 + 64);
        unint64_t v97 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain(v95);
        if (v97 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)v96;
        }

        else
        {
          uint64_t v98 = *v96;
          sub_10019BA8C(*v96, v97);
          *(void *)(a1 + 64) = v98;
          *(void *)(a1 + 72) = v97;
        }

        unint64_t v99 = (uint64_t *)(a2 + 80);
        unint64_t v100 = *(void *)(a2 + 88);
        if (v100 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)v99;
        }

        else
        {
          uint64_t v101 = *v99;
          sub_10019BA8C(*v99, *(void *)(a2 + 88));
          *(void *)(a1 + 80) = v101;
          *(void *)(a1 + 88) = v100;
        }

        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        uint64_t v102 = *(const char **)(a2 + 104);
        *(void *)(a1 + 104) = v102;
        uint64_t v103 = *(void *)(a2 + 112);
        *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
        *(void *)(a1 + 112) = v103;
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        double v104 = *(const char **)(a2 + 136);
        *(void *)(a1 + 136) = v104;
        *(void *)&double v105 = swift_bridgeObjectRetain(v102).n128_u64[0];
        swift_bridgeObjectRetain(v104, v105);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 3LL;
        goto LABEL_86;
      case 4u:
        uint64_t v13 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        uint64_t v14 = *(void *)(v13 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(a2, 1LL, v13))
        {
          uint64_t v15 = sub_100183098((uint64_t *)&unk_100647610);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v15 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a1, 0LL, 1LL, v13);
        }

        uint64_t v106 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
        uint64_t v107 = v106[5];
        double v108 = (void *)(a1 + v107);
        uint64_t v109 = (const void *)(a2 + v107);
        uint64_t v110 = type metadata accessor for SFAirDrop.TransferType(0LL);
        uint64_t v111 = *(void *)(v110 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v111 + 48))(v109, 1LL, v110))
        {
          uint64_t v112 = sub_100183098(&qword_100647608);
          memcpy(v108, v109, *(void *)(*(void *)(v112 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v111 + 16))(v108, v109, v110);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0LL, 1LL, v110);
        }

        uint64_t v154 = v106[6];
        uint64_t v155 = a1 + v154;
        unint64_t v156 = (uint64_t *)(a2 + v154);
        unint64_t v157 = v156[1];
        uint64_t v227 = a3;
        if (v157 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
        }

        else
        {
          uint64_t v158 = *v156;
          sub_10019BA8C(*v156, v157);
          *(void *)uint64_t v155 = v158;
          *(void *)(v155 + 8) = v157;
        }

        uint64_t v159 = v106[7];
        uint64_t v160 = (void *)(a1 + v159);
        uint64_t v161 = (void *)(a2 + v159);
        void *v160 = *v161;
        uint64_t v162 = (const char *)v161[1];
        v160[1] = v162;
        uint64_t v163 = v106[8];
        uint64_t v164 = (void *)(a1 + v163);
        uint64_t v165 = (void *)(a2 + v163);
        *uint64_t v164 = *v165;
        uint64_t v224 = (const char *)v165[1];
        v164[1] = v224;
        uint64_t v166 = v106[9];
        __n128 v167 = (void *)(a1 + v166);
        uint64_t v168 = (void *)(a2 + v166);
        *__n128 v167 = *v168;
        uint64_t v169 = (const char *)v168[1];
        v167[1] = v169;
        uint64_t v170 = v106[10];
        char v171 = (void *)(a1 + v170);
        uint64_t v172 = (void *)(a2 + v170);
        *char v171 = *v172;
        uint64_t v173 = (const char *)v172[1];
        v171[1] = v173;
        uint64_t v174 = v106[11];
        uint64_t v175 = *(const char **)(a2 + v174);
        *(void *)(a1 + v174) = v175;
        uint64_t v176 = v106[12];
        uint64_t v177 = *(const char **)(a2 + v176);
        *(void *)(a1 + v176) = v177;
        uint64_t v178 = v106[13];
        uint64_t v179 = (void *)(a1 + v178);
        uint64_t v180 = (void *)(a2 + v178);
        void *v179 = *v180;
        uint64_t v181 = (const char *)v180[1];
        v179[1] = v181;
        uint64_t v182 = v106[14];
        uint64_t v223 = a1 + v182;
        double v183 = (uint64_t *)(a2 + v182);
        unint64_t v184 = *(void *)(a2 + v182 + 8);
        *(void *)&double v185 = swift_bridgeObjectRetain(v162).n128_u64[0];
        *(void *)&double v186 = swift_bridgeObjectRetain(v224, v185).n128_u64[0];
        *(void *)&double v187 = swift_bridgeObjectRetain(v169, v186).n128_u64[0];
        *(void *)&double v188 = swift_bridgeObjectRetain(v173, v187).n128_u64[0];
        *(void *)&double v189 = swift_bridgeObjectRetain(v175, v188).n128_u64[0];
        *(void *)&double v190 = swift_bridgeObjectRetain(v177, v189).n128_u64[0];
        swift_bridgeObjectRetain(v181, v190);
        if (v184 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v223 = *(_OWORD *)v183;
        }

        else
        {
          uint64_t v191 = *v183;
          sub_10019BA8C(*v183, v184);
          *(void *)uint64_t v223 = v191;
          *(void *)(v223 + 8) = v184;
        }

        uint64_t v192 = v106[15];
        uint64_t v193 = a1 + v192;
        uint64_t v194 = (uint64_t *)(a2 + v192);
        unint64_t v195 = v194[1];
        if (v195 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v193 = *(_OWORD *)v194;
        }

        else
        {
          uint64_t v196 = *v194;
          sub_10019BA8C(*v194, v194[1]);
          *(void *)uint64_t v193 = v196;
          *(void *)(v193 + 8) = v195;
        }

        *(_BYTE *)(a1 + v106[16]) = *(_BYTE *)(a2 + v106[16]);
        uint64_t v197 = v106[17];
        uint64_t v198 = a1 + v197;
        uint64_t v199 = (uint64_t *)(a2 + v197);
        unint64_t v200 = v199[1];
        if (v200 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v198 = *(_OWORD *)v199;
        }

        else
        {
          uint64_t v201 = *v199;
          sub_10019BA8C(*v199, v199[1]);
          *(void *)uint64_t v198 = v201;
          *(void *)(v198 + 8) = v200;
        }

        uint64_t v8 = a1;
        uint64_t v9 = v227;
        uint64_t v10 = 4LL;
        goto LABEL_86;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v16 = *(const char **)(a2 + 8);
        *(void *)(a1 + 8) = v16;
        *(void *)(a1 + sub_100195658(v0 + 16) = *(void *)(a2 + 16);
        uint64_t v17 = *(const char **)(a2 + 24);
        *(void *)(a1 + 24) = v17;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v18 = *(const char **)(a2 + 48);
        *(void *)(a1 + 48) = v18;
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v19 = *(const char **)(a2 + 64);
        *(void *)(a1 + 64) = v19;
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        double v20 = *(const char **)(a2 + 80);
        *(void *)(a1 + 80) = v20;
        double v21 = (uint64_t *)(a2 + 88);
        unint64_t v22 = *(void *)(a2 + 96);
        *(void *)&double v23 = swift_bridgeObjectRetain(v16).n128_u64[0];
        *(void *)&double v24 = swift_bridgeObjectRetain(v17, v23).n128_u64[0];
        *(void *)&double v25 = swift_bridgeObjectRetain(v18, v24).n128_u64[0];
        *(void *)&double v26 = swift_bridgeObjectRetain(v19, v25).n128_u64[0];
        swift_bridgeObjectRetain(v20, v26);
        if (v22 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v21;
        }

        else
        {
          uint64_t v87 = *v21;
          sub_10019BA8C(*v21, v22);
          *(void *)(a1 + 88) = v87;
          *(void *)(a1 + 96) = v22;
        }

        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 5LL;
        goto LABEL_86;
      case 6u:
        uint64_t v27 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(a2, 1LL, v27))
        {
          uint64_t v29 = sub_100183098((uint64_t *)&unk_100647610);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v29 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(a1, a2, v27);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(a1, 0LL, 1LL, v27);
        }

        uint64_t v113 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
        *(void *)(a1 + v113[5]) = *(void *)(a2 + v113[5]);
        uint64_t v114 = v113[6];
        uint64_t v115 = (void *)(a1 + v114);
        double v116 = (void *)(a2 + v114);
        *uint64_t v115 = *v116;
        uint64_t v117 = (const char *)v116[1];
        v115[1] = v117;
        uint64_t v118 = v113[7];
        uint64_t v119 = a1 + v118;
        unint64_t v120 = (_OWORD *)(a2 + v118);
        unint64_t v121 = *(void *)(a2 + v118 + 8);
        swift_bridgeObjectRetain(v117);
        if (v121 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v119 = *v120;
        }

        else
        {
          uint64_t v122 = *(void *)v120;
          sub_10019BA8C(v122, v121);
          *(void *)uint64_t v119 = v122;
          *(void *)(v119 + 8) = v121;
        }

        *(_BYTE *)(a1 + v113[8]) = *(_BYTE *)(a2 + v113[8]);
        uint64_t v123 = v113[9];
        uint64_t v124 = (void *)(a1 + v123);
        __n128 v125 = (void *)(a2 + v123);
        *uint64_t v124 = *v125;
        uint64_t v126 = (const char *)v125[1];
        v124[1] = v126;
        uint64_t v127 = v113[10];
        uint64_t v128 = (void *)(a1 + v127);
        uint64_t v129 = (void *)(a2 + v127);
        void *v128 = *v129;
        double v130 = (const char *)v129[1];
        v128[1] = v130;
        *(void *)&double v131 = swift_bridgeObjectRetain(v126).n128_u64[0];
        swift_bridgeObjectRetain(v130, v131);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 6LL;
        goto LABEL_86;
      case 7u:
        uint64_t v30 = *(void *)a2;
        unint64_t v31 = *(void *)(a2 + 8);
        sub_10019BA8C(v30, v31);
        *(void *)a1 = v30;
        *(void *)(a1 + 8) = v31;
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 7LL;
        goto LABEL_86;
      case 8u:
        uint64_t v225 = a3;
        uint64_t v32 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16LL))(a1, a2, v32);
        double v33 = (int *)_s14descr1005DEB71C15ExchangeRequestVMa(0LL);
        uint64_t v34 = v33[5];
        uint64_t v35 = (void *)(a1 + v34);
        uint64_t v36 = (void *)(a2 + v34);
        *uint64_t v35 = *v36;
        uint64_t v37 = (const char *)v36[1];
        v35[1] = v37;
        uint64_t v38 = v33[6];
        unint64_t v39 = (void *)(a1 + v38);
        uint64_t v40 = (void *)(a2 + v38);
        *unint64_t v39 = *v40;
        uint64_t v41 = (const char *)v40[1];
        v39[1] = v41;
        uint64_t v42 = v33[7];
        uint64_t v43 = (void *)(a1 + v42);
        double v44 = (const void *)(a2 + v42);
        uint64_t v45 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
        uint64_t v46 = *(void *)(v45 - 8);
        uint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v46 + 48);
        *(void *)&double v48 = swift_bridgeObjectRetain(v37).n128_u64[0];
        __n128 v49 = swift_bridgeObjectRetain(v41, v48);
        if (v47(v44, 1LL, v45, v49))
        {
          uint64_t v50 = sub_100183098(&qword_100651E70);
          memcpy(v43, v44, *(void *)(*(void *)(v50 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v43, v44, v45);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0LL, 1LL, v45);
        }

        uint64_t v132 = v33[8];
        uint64_t v133 = a1 + v132;
        unint64_t v134 = (uint64_t *)(a2 + v132);
        unint64_t v135 = v134[1];
        if (v135 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
        }

        else
        {
          uint64_t v136 = *v134;
          sub_10019BA8C(*v134, v134[1]);
          *(void *)uint64_t v133 = v136;
          *(void *)(v133 + 8) = v135;
        }

        uint64_t v137 = v33[9];
        uint64_t v138 = a1 + v137;
        uint64_t v139 = a2 + v137;
        if (*(void *)(a2 + v137 + 72))
        {
          *(void *)uint64_t v138 = *(void *)v139;
          double v140 = *(const char **)(v139 + 8);
          *(void *)(v138 + 8) = v140;
          unint64_t v141 = (_OWORD *)(v139 + 16);
          unint64_t v142 = *(void *)(v139 + 24);
          swift_bridgeObjectRetain(v140);
          if (v142 >> 60 == 15)
          {
            *(_OWORD *)(v138 + sub_100195658(v0 + 16) = *v141;
          }

          else
          {
            uint64_t v210 = *(void *)v141;
            sub_10019BA8C(v210, v142);
            *(void *)(v138 + sub_100195658(v0 + 16) = v210;
            *(void *)(v138 + 24) = v142;
          }

          uint64_t v211 = *(void *)(v139 + 32);
          unint64_t v212 = *(void *)(v139 + 40);
          sub_10019BA8C(v211, v212);
          *(void *)(v138 + 32) = v211;
          *(void *)(v138 + 40) = v212;
          uint64_t v213 = *(void *)(v139 + 48);
          unint64_t v214 = *(void *)(v139 + 56);
          sub_10019BA8C(v213, v214);
          *(void *)(v138 + 48) = v213;
          *(void *)(v138 + 56) = v214;
          *(void *)(v138 + 64) = *(void *)(v139 + 64);
          uint64_t v215 = *(const char **)(v139 + 72);
          *(void *)(v138 + 72) = v215;
          *(void *)(v138 + 80) = *(void *)(v139 + 80);
          swift_bridgeObjectRetain(v215);
        }

        else
        {
          __int128 v202 = *(_OWORD *)(v139 + 16);
          *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
          *(_OWORD *)(v138 + sub_100195658(v0 + 16) = v202;
          __int128 v203 = *(_OWORD *)(v139 + 32);
          __int128 v204 = *(_OWORD *)(v139 + 48);
          __int128 v205 = *(_OWORD *)(v139 + 64);
          *(void *)(v138 + 80) = *(void *)(v139 + 80);
          *(_OWORD *)(v138 + 48) = v204;
          *(_OWORD *)(v138 + 64) = v205;
          *(_OWORD *)(v138 + 32) = v203;
        }

        uint64_t v8 = a1;
        uint64_t v9 = v225;
        uint64_t v10 = 8LL;
        goto LABEL_86;
      case 9u:
        uint64_t v226 = a3;
        uint64_t v51 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16LL))(a1, a2, v51);
        char v52 = (int *)_s14descr1005DEB71C16ExchangeResponseVMa(0LL);
        uint64_t v53 = v52[5];
        uint64_t v54 = (void *)(a1 + v53);
        uint64_t v55 = (void *)(a2 + v53);
        void *v54 = *v55;
        double v56 = (const char *)v55[1];
        v54[1] = v56;
        uint64_t v57 = v52[6];
        uint64_t v58 = (void *)(a1 + v57);
        uint64_t v59 = (void *)(a2 + v57);
        void *v58 = *v59;
        uint64_t v60 = (const char *)v59[1];
        v58[1] = v60;
        uint64_t v61 = v52[7];
        double v62 = (void *)(a1 + v61);
        uint64_t v63 = (const void *)(a2 + v61);
        uint64_t v64 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
        uint64_t v65 = *(void *)(v64 - 8);
        double v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v65 + 48);
        *(void *)&double v67 = swift_bridgeObjectRetain(v56).n128_u64[0];
        __n128 v68 = swift_bridgeObjectRetain(v60, v67);
        if (v66(v63, 1LL, v64, v68))
        {
          uint64_t v69 = sub_100183098(&qword_100651E70);
          memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64LL));
        }

        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v65 + 16))(v62, v63, v64);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0LL, 1LL, v64);
        }

        uint64_t v143 = v52[8];
        uint64_t v144 = a1 + v143;
        unint64_t v145 = (uint64_t *)(a2 + v143);
        unint64_t v146 = v145[1];
        if (v146 >> 60 == 15)
        {
          *(_OWORD *)uint64_t v144 = *(_OWORD *)v145;
        }

        else
        {
          uint64_t v147 = *v145;
          sub_10019BA8C(*v145, v145[1]);
          *(void *)uint64_t v144 = v147;
          *(void *)(v144 + 8) = v146;
        }

        uint64_t v148 = v52[9];
        uint64_t v149 = a1 + v148;
        uint64_t v150 = a2 + v148;
        if (*(void *)(a2 + v148 + 72))
        {
          *(void *)uint64_t v149 = *(void *)v150;
          uint64_t v151 = *(const char **)(v150 + 8);
          *(void *)(v149 + 8) = v151;
          unint64_t v152 = (_OWORD *)(v150 + 16);
          unint64_t v153 = *(void *)(v150 + 24);
          swift_bridgeObjectRetain(v151);
          if (v153 >> 60 == 15)
          {
            *(_OWORD *)(v149 + sub_100195658(v0 + 16) = *v152;
          }

          else
          {
            uint64_t v216 = *(void *)v152;
            sub_10019BA8C(v216, v153);
            *(void *)(v149 + sub_100195658(v0 + 16) = v216;
            *(void *)(v149 + 24) = v153;
          }

          uint64_t v217 = *(void *)(v150 + 32);
          unint64_t v218 = *(void *)(v150 + 40);
          sub_10019BA8C(v217, v218);
          *(void *)(v149 + 32) = v217;
          *(void *)(v149 + 40) = v218;
          uint64_t v219 = *(void *)(v150 + 48);
          unint64_t v220 = *(void *)(v150 + 56);
          sub_10019BA8C(v219, v220);
          *(void *)(v149 + 48) = v219;
          *(void *)(v149 + 56) = v220;
          *(void *)(v149 + 64) = *(void *)(v150 + 64);
          uint64_t v221 = *(const char **)(v150 + 72);
          *(void *)(v149 + 72) = v221;
          *(void *)(v149 + 80) = *(void *)(v150 + 80);
          swift_bridgeObjectRetain(v221);
        }

        else
        {
          __int128 v206 = *(_OWORD *)(v150 + 16);
          *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
          *(_OWORD *)(v149 + sub_100195658(v0 + 16) = v206;
          __int128 v207 = *(_OWORD *)(v150 + 32);
          __int128 v208 = *(_OWORD *)(v150 + 48);
          __int128 v209 = *(_OWORD *)(v150 + 64);
          *(void *)(v149 + 80) = *(void *)(v150 + 80);
          *(_OWORD *)(v149 + 48) = v208;
          *(_OWORD *)(v149 + 64) = v209;
          *(_OWORD *)(v149 + 32) = v207;
        }

        uint64_t v8 = a1;
        uint64_t v9 = v226;
        uint64_t v10 = 9LL;
        goto LABEL_86;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        uint64_t v70 = *(const char **)(a2 + 8);
        *(void *)(a1 + 8) = v70;
        unint64_t v71 = (_OWORD *)(a2 + 16);
        unint64_t v72 = *(void *)(a2 + 24);
        swift_bridgeObjectRetain(v70);
        if (v72 >> 60 == 15)
        {
          *(_OWORD *)(a1 + sub_100195658(v0 + 16) = *v71;
        }

        else
        {
          uint64_t v88 = *(void *)v71;
          sub_10019BA8C(v88, v72);
          *(void *)(a1 + sub_100195658(v0 + 16) = v88;
          *(void *)(a1 + 24) = v72;
        }

        uint64_t v89 = *(void *)(a2 + 32);
        unint64_t v90 = *(void *)(a2 + 40);
        sub_10019BA8C(v89, v90);
        *(void *)(a1 + 32) = v89;
        *(void *)(a1 + 40) = v90;
        uint64_t v91 = *(void *)(a2 + 48);
        unint64_t v92 = *(void *)(a2 + 56);
        sub_10019BA8C(v91, v92);
        *(void *)(a1 + 48) = v91;
        *(void *)(a1 + 56) = v92;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        uint64_t v93 = *(const char **)(a2 + 72);
        *(void *)(a1 + 72) = v93;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        swift_bridgeObjectRetain(v93);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 10LL;
        goto LABEL_86;
      case 0xBu:
        uint64_t v73 = *(void *)a2;
        unint64_t v74 = *(void *)(a2 + 8);
        sub_10019BA8C(v73, v74);
        *(void *)a1 = v73;
        *(void *)(a1 + 8) = v74;
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 11LL;
        goto LABEL_86;
      case 0xCu:
        uint64_t v75 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16LL))(a1, a2, v75);
        uint64_t v76 = *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
        uint64_t v77 = a1 + v76;
        uint64_t v78 = a2 + v76;
        uint64_t v79 = type metadata accessor for CodableError(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16LL))(v77, v78, v79);
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 12LL;
        goto LABEL_86;
      case 0xDu:
        uint64_t v80 = *(void *)a2;
        unint64_t v81 = *(void *)(a2 + 8);
        sub_10019BA8C(v80, v81);
        *(void *)a1 = v80;
        *(void *)(a1 + 8) = v81;
        uint64_t v8 = a1;
        uint64_t v9 = a3;
        uint64_t v10 = 13LL;
LABEL_86:
        swift_storeEnumTagMultiPayload(v8, v9, v10);
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64LL));
        break;
    }
  }

  return a1;
}

uint64_t type metadata accessor for SDAirDropMessage(uint64_t a1)
{
  uint64_t result = qword_100651EE8;
  if (!qword_100651EE8) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SDAirDropMessage);
  }
  return result;
}

_BYTE *sub_100399D88(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      uint64_t v6 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
      uint64_t v7 = _s12HelloRequestVMa(0LL);
      *(_DWORD *)&a1[*(int *)(v7 + 20)] = *(_DWORD *)&a2[*(int *)(v7 + 20)];
      a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 0LL;
      goto LABEL_24;
    case 4u:
      uint64_t v11 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(a2, 1LL, v11))
      {
        uint64_t v13 = sub_100183098((uint64_t *)&unk_100647610);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0LL, 1LL, v11);
      }

      uint64_t v38 = (int *)_s14descr1005DF7D1C10AskRequestVMa(0LL);
      uint64_t v39 = v38[5];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = type metadata accessor for SFAirDrop.TransferType(0LL);
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1LL, v42))
      {
        uint64_t v44 = sub_100183098(&qword_100647608);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0LL, 1LL, v42);
      }

      *(_OWORD *)&a1[v38[6]] = *(_OWORD *)&a2[v38[6]];
      *(_OWORD *)&a1[v38[7]] = *(_OWORD *)&a2[v38[7]];
      *(_OWORD *)&a1[v38[8]] = *(_OWORD *)&a2[v38[8]];
      *(_OWORD *)&a1[v38[9]] = *(_OWORD *)&a2[v38[9]];
      *(_OWORD *)&a1[v38[10]] = *(_OWORD *)&a2[v38[10]];
      *(void *)&a1[v38[11]] = *(void *)&a2[v38[11]];
      *(void *)&a1[v38[12]] = *(void *)&a2[v38[12]];
      *(_OWORD *)&a1[v38[13]] = *(_OWORD *)&a2[v38[13]];
      *(_OWORD *)&a1[v38[14]] = *(_OWORD *)&a2[v38[14]];
      *(_OWORD *)&a1[v38[15]] = *(_OWORD *)&a2[v38[15]];
      a1[v38[16]] = a2[v38[16]];
      *(_OWORD *)&a1[v38[17]] = *(_OWORD *)&a2[v38[17]];
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 4LL;
      goto LABEL_24;
    case 6u:
      uint64_t v14 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(a2, 1LL, v14))
      {
        uint64_t v16 = sub_100183098((uint64_t *)&unk_100647610);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(a1, a2, v14);
        (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0LL, 1LL, v14);
      }

      uint64_t v45 = (int *)_s14descr1005D9BD1C13UploadRequestVMa(0LL);
      *(void *)&a1[v45[5]] = *(void *)&a2[v45[5]];
      *(_OWORD *)&a1[v45[6]] = *(_OWORD *)&a2[v45[6]];
      *(_OWORD *)&a1[v45[7]] = *(_OWORD *)&a2[v45[7]];
      a1[v45[8]] = a2[v45[8]];
      *(_OWORD *)&a1[v45[9]] = *(_OWORD *)&a2[v45[9]];
      *(_OWORD *)&a1[v45[10]] = *(_OWORD *)&a2[v45[10]];
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 6LL;
      goto LABEL_24;
    case 8u:
      uint64_t v17 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v17 - 8) + 32LL))(a1, a2, v17);
      uint64_t v18 = (int *)_s14descr1005DEB71C15ExchangeRequestVMa(0LL);
      *(_OWORD *)&a1[v18[5]] = *(_OWORD *)&a2[v18[5]];
      *(_OWORD *)&a1[v18[6]] = *(_OWORD *)&a2[v18[6]];
      uint64_t v19 = v18[7];
      double v20 = &a1[v19];
      double v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1LL, v22))
      {
        uint64_t v24 = sub_100183098(&qword_100651E70);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0LL, 1LL, v22);
      }

      *(_OWORD *)&a1[v18[8]] = *(_OWORD *)&a2[v18[8]];
      uint64_t v46 = v18[9];
      uint64_t v47 = &a1[v46];
      double v48 = &a2[v46];
      __int128 v49 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v49;
      *((void *)v47 + 10) = *((void *)v48 + 10);
      __int128 v50 = *((_OWORD *)v48 + 4);
      __int128 v51 = *((_OWORD *)v48 + 2);
      *((_OWORD *)v47 + 3) = *((_OWORD *)v48 + 3);
      *((_OWORD *)v47 + 4) = v50;
      *((_OWORD *)v47 + 2) = v51;
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 8LL;
      goto LABEL_24;
    case 9u:
      uint64_t v25 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v25 - 8) + 32LL))(a1, a2, v25);
      double v26 = (int *)_s14descr1005DEB71C16ExchangeResponseVMa(0LL);
      *(_OWORD *)&a1[v26[5]] = *(_OWORD *)&a2[v26[5]];
      *(_OWORD *)&a1[v26[6]] = *(_OWORD *)&a2[v26[6]];
      uint64_t v27 = v26[7];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = type metadata accessor for SFAirDrop.ContactInfo.Handle(0LL);
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1LL, v30))
      {
        uint64_t v32 = sub_100183098(&qword_100651E70);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
      }

      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0LL, 1LL, v30);
      }

      *(_OWORD *)&a1[v26[8]] = *(_OWORD *)&a2[v26[8]];
      uint64_t v52 = v26[9];
      uint64_t v53 = &a1[v52];
      uint64_t v54 = &a2[v52];
      __int128 v55 = *((_OWORD *)v54 + 1);
      *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
      *((_OWORD *)v53 + 1) = v55;
      *((void *)v53 + 10) = *((void *)v54 + 10);
      __int128 v56 = *((_OWORD *)v54 + 4);
      __int128 v57 = *((_OWORD *)v54 + 2);
      *((_OWORD *)v53 + 3) = *((_OWORD *)v54 + 3);
      *((_OWORD *)v53 + 4) = v56;
      *((_OWORD *)v53 + 2) = v57;
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 9LL;
      goto LABEL_24;
    case 0xCu:
      uint64_t v33 = type metadata accessor for SFAirDrop.TransferIdentifier(0LL);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(void *)(v33 - 8) + 32LL))(a1, a2, v33);
      uint64_t v34 = *(int *)(_s14descr1005DD3D1C12ErrorRequestVMa(0LL) + 20);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = type metadata accessor for CodableError(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32LL))(v35, v36, v37);
      uint64_t v8 = a1;
      uint64_t v9 = a3;
      uint64_t v10 = 12LL;
LABEL_24:
      swift_storeEnumTagMultiPayload(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64LL));
      break;
  }

  return a1;
}