uint64_t sub_1001EB31C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, int *);
  int v27;
  int v28;
  void (*v29)(uint64_t, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  size_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int *v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t, uint64_t, int *);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char v107;
  v6 = type metadata accessor for UnknownStorage(0LL);
  v7 = *(void *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 8);
  *(void *)v10 = *(void *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 4);
  *(_DWORD *)v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = v16;
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_BYTE *)(v19 + 4);
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v20;
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = (char *)(a2 + v21);
  v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  v25 = *((void *)v24 - 1);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1LL, v24);
  v28 = v26((uint64_t)v23, 1LL, v24);
  if (!v27)
  {
    if (!v28)
    {
      v8(v22, (uint64_t)v23, v6);
      v51 = v24[5];
      v52 = v22 + v51;
      v53 = &v23[v51];
      v54 = v53[4];
      *(_DWORD *)v52 = *(_DWORD *)v53;
      *(_BYTE *)(v52 + 4) = v54;
      v55 = v24[6];
      v56 = v22 + v55;
      v57 = &v23[v55];
      v58 = v57[4];
      *(_DWORD *)v56 = *(_DWORD *)v57;
      *(_BYTE *)(v56 + 4) = v58;
      v59 = v24[7];
      v60 = v22 + v59;
      v61 = &v23[v59];
      v62 = v61[4];
      *(_DWORD *)v60 = *(_DWORD *)v61;
      *(_BYTE *)(v60 + 4) = v62;
      v63 = v24[8];
      v64 = v22 + v63;
      v65 = &v23[v63];
      v66 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
      v67 = *((void *)v66 - 1);
      v68 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v67 + 48);
      v69 = v68(v64, 1LL, v66);
      v70 = v68((uint64_t)v65, 1LL, v66);
      if (v69)
      {
        if (!v70)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v64, v65, v6);
          v71 = v66[5];
          v72 = v64 + v71;
          v73 = &v65[v71];
          v74 = v73[4];
          *(_DWORD *)v72 = *(_DWORD *)v73;
          *(_BYTE *)(v72 + 4) = v74;
          v75 = v66[6];
          v76 = v64 + v75;
          v77 = &v65[v75];
          v78 = v77[4];
          *(_DWORD *)v76 = *(_DWORD *)v77;
          *(_BYTE *)(v76 + 4) = v78;
          v79 = v66[7];
          v80 = v64 + v79;
          v81 = &v65[v79];
          v82 = v81[4];
          *(_DWORD *)v80 = *(_DWORD *)v81;
          *(_BYTE *)(v80 + 4) = v82;
          (*(void (**)(uint64_t, void, uint64_t, int *))(v67 + 56))(v64, 0LL, 1LL, v66);
          return a1;
        }
      }

      else
      {
        if (!v70)
        {
          v8(v64, (uint64_t)v65, v6);
          v96 = v66[5];
          v97 = v64 + v96;
          v98 = &v65[v96];
          v99 = v98[4];
          *(_DWORD *)v97 = *(_DWORD *)v98;
          *(_BYTE *)(v97 + 4) = v99;
          v100 = v66[6];
          v101 = v64 + v100;
          v102 = &v65[v100];
          v103 = v102[4];
          *(_DWORD *)v101 = *(_DWORD *)v102;
          *(_BYTE *)(v101 + 4) = v103;
          v104 = v66[7];
          v105 = v64 + v104;
          v106 = &v65[v104];
          v107 = v106[4];
          *(_DWORD *)v105 = *(_DWORD *)v106;
          *(_BYTE *)(v105 + 4) = v107;
          return a1;
        }

        sub_100004090(v64, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }

      v48 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C690) - 8) + 64LL);
      v49 = (void *)v64;
      v50 = v65;
      goto LABEL_8;
    }

    sub_100004090(v22, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    v48 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C698) - 8) + 64LL);
    v49 = (void *)v22;
    v50 = v23;
LABEL_8:
    memcpy(v49, v50, v48);
    return a1;
  }

  if (v28) {
    goto LABEL_7;
  }
  v29 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v29(v22, v23, v6);
  v30 = v24[5];
  v31 = v22 + v30;
  v32 = &v23[v30];
  v33 = v32[4];
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v33;
  v34 = v24[6];
  v35 = v22 + v34;
  v36 = &v23[v34];
  v37 = v36[4];
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = v37;
  v38 = v24[7];
  v39 = v22 + v38;
  v40 = &v23[v38];
  v41 = v40[4];
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = v41;
  v42 = v24[8];
  v43 = (char *)(v22 + v42);
  v44 = &v23[v42];
  v45 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  v46 = *((void *)v45 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v46 + 48))(v44, 1LL, v45))
  {
    v47 = sub_100003A0C(&qword_10035C690);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64LL));
  }

  else
  {
    v29((uint64_t)v43, v44, v6);
    v83 = v45[5];
    v84 = &v43[v83];
    v85 = &v44[v83];
    v86 = v85[4];
    *(_DWORD *)v84 = *(_DWORD *)v85;
    v84[4] = v86;
    v87 = v45[6];
    v88 = &v43[v87];
    v89 = &v44[v87];
    v90 = v89[4];
    *(_DWORD *)v88 = *(_DWORD *)v89;
    v88[4] = v90;
    v91 = v45[7];
    v92 = &v43[v91];
    v93 = &v44[v91];
    v94 = v93[4];
    *(_DWORD *)v92 = *(_DWORD *)v93;
    v92[4] = v94;
    (*(void (**)(char *, void, uint64_t, int *))(v46 + 56))(v43, 0LL, 1LL, v45);
  }

  (*(void (**)(uint64_t, void, uint64_t, int *))(v25 + 56))(v22, 0LL, 1LL, v24);
  return a1;
}

uint64_t sub_1001EB780(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  v18 = (char *)(a1 + v15);
  v19 = (char *)(a2 + v15);
  v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1LL, v20))
  {
    uint64_t v22 = sub_100003A0C(&qword_10035C698);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    uint64_t v23 = v20[5];
    v24 = &v18[v23];
    v25 = &v19[v23];
    *(_DWORD *)v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = v20[6];
    v27 = &v18[v26];
    v28 = &v19[v26];
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v20[7];
    v30 = &v18[v29];
    v31 = &v19[v29];
    *(_DWORD *)v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = v20[8];
    v33 = &v18[v32];
    v34 = &v19[v32];
    v35 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
    uint64_t v36 = *((void *)v35 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1LL, v35))
    {
      uint64_t v37 = sub_100003A0C(&qword_10035C690);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v33, (uint64_t)v34, v6);
      uint64_t v38 = v35[5];
      v39 = &v33[v38];
      v40 = &v34[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      uint64_t v41 = v35[6];
      v42 = &v33[v41];
      v43 = &v34[v41];
      *(_DWORD *)v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      uint64_t v44 = v35[7];
      v45 = &v33[v44];
      v46 = &v34[v44];
      *(_DWORD *)v45 = *(_DWORD *)v46;
      v45[4] = v46[4];
      (*(void (**)(char *, void, uint64_t, int *))(v36 + 56))(v33, 0LL, 1LL, v35);
    }

    (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v18, 0LL, 1LL, v20);
  }

  return a1;
}

uint64_t sub_1001EB9E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a1 + v10;
  uint64_t v14 = a2 + v10;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a1 + v16;
  v20 = (char *)(a2 + v16);
  uint64_t v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1LL, v21);
  int v25 = v23((uint64_t)v20, 1LL, v21);
  if (!v24)
  {
    if (!v25)
    {
      v8(v19, (uint64_t)v20, v6);
      uint64_t v45 = v21[5];
      uint64_t v46 = v19 + v45;
      v47 = &v20[v45];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      *(_BYTE *)(v46 + 4) = v47[4];
      uint64_t v48 = v21[6];
      uint64_t v49 = v19 + v48;
      v50 = &v20[v48];
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      *(_BYTE *)(v49 + 4) = v50[4];
      uint64_t v51 = v21[7];
      uint64_t v52 = v19 + v51;
      v53 = &v20[v51];
      *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
      *(_BYTE *)(v52 + 4) = v53[4];
      uint64_t v54 = v21[8];
      uint64_t v55 = v19 + v54;
      v56 = &v20[v54];
      v57 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
      uint64_t v58 = *((void *)v57 - 1);
      v59 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v58 + 48);
      int v60 = v59(v55, 1LL, v57);
      int v61 = v59((uint64_t)v56, 1LL, v57);
      if (v60)
      {
        if (!v61)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v55, v56, v6);
          uint64_t v62 = v57[5];
          uint64_t v63 = v55 + v62;
          v64 = &v56[v62];
          *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
          *(_BYTE *)(v63 + 4) = v64[4];
          uint64_t v65 = v57[6];
          uint64_t v66 = v55 + v65;
          v67 = &v56[v65];
          *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
          *(_BYTE *)(v66 + 4) = v67[4];
          uint64_t v68 = v57[7];
          uint64_t v69 = v55 + v68;
          v70 = &v56[v68];
          *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
          *(_BYTE *)(v69 + 4) = v70[4];
          (*(void (**)(uint64_t, void, uint64_t, int *))(v58 + 56))(v55, 0LL, 1LL, v57);
          return a1;
        }
      }

      else
      {
        if (!v61)
        {
          v8(v55, (uint64_t)v56, v6);
          uint64_t v81 = v57[5];
          uint64_t v82 = v55 + v81;
          v83 = &v56[v81];
          *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
          *(_BYTE *)(v82 + 4) = v83[4];
          uint64_t v84 = v57[6];
          uint64_t v85 = v55 + v84;
          v86 = &v56[v84];
          *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
          *(_BYTE *)(v85 + 4) = v86[4];
          uint64_t v87 = v57[7];
          uint64_t v88 = v55 + v87;
          v89 = &v56[v87];
          *(_DWORD *)uint64_t v88 = *(_DWORD *)v89;
          *(_BYTE *)(v88 + 4) = v89[4];
          return a1;
        }

        sub_100004090(v55, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }

      size_t v42 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C690) - 8) + 64LL);
      v43 = (void *)v55;
      uint64_t v44 = v56;
      goto LABEL_8;
    }

    sub_100004090(v19, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    size_t v42 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C698) - 8) + 64LL);
    v43 = (void *)v19;
    uint64_t v44 = v20;
LABEL_8:
    memcpy(v43, v44, v42);
    return a1;
  }

  if (v25) {
    goto LABEL_7;
  }
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v26(v19, v20, v6);
  uint64_t v27 = v21[5];
  uint64_t v28 = v19 + v27;
  uint64_t v29 = &v20[v27];
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v29[4];
  uint64_t v30 = v21[6];
  uint64_t v31 = v19 + v30;
  uint64_t v32 = &v20[v30];
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v32[4];
  uint64_t v33 = v21[7];
  uint64_t v34 = v19 + v33;
  v35 = &v20[v33];
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = v35[4];
  uint64_t v36 = v21[8];
  uint64_t v37 = (char *)(v19 + v36);
  uint64_t v38 = &v20[v36];
  v39 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v40 = *((void *)v39 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))(v38, 1LL, v39))
  {
    uint64_t v41 = sub_100003A0C(&qword_10035C690);
    memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
  }

  else
  {
    v26((uint64_t)v37, v38, v6);
    uint64_t v71 = v39[5];
    v72 = &v37[v71];
    v73 = &v38[v71];
    *(_DWORD *)v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    uint64_t v74 = v39[6];
    v75 = &v37[v74];
    v76 = &v38[v74];
    *(_DWORD *)v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    uint64_t v77 = v39[7];
    v78 = &v37[v77];
    v79 = &v38[v77];
    *(_DWORD *)v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    (*(void (**)(char *, void, uint64_t, int *))(v40 + 56))(v37, 0LL, 1LL, v39);
  }

  (*(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56))(v19, 0LL, 1LL, v21);
  return a1;
}

uint64_t sub_1001EBE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EBE48);
}

uint64_t sub_1001EBE48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001EBE54(a1, a2, a3, &qword_10035C698);
}

uint64_t sub_1001EBE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = sub_100003A0C(a4);
    uint64_t v12 = a1 + *(int *)(a3 + 32);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48LL);
  }

  return v11(v12, a2, v10);
}

uint64_t sub_1001EBECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EBED8);
}

uint64_t sub_1001EBED8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001EBEE4(a1, a2, a3, a4, &qword_10035C698);
}

uint64_t sub_1001EBEE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = v10;
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v14 = a1;
  }

  else
  {
    uint64_t v12 = sub_100003A0C(a5);
    uint64_t v14 = a1 + *(int *)(a4 + 32);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL);
  }

  return v13(v14, a2, a2, v12);
}

void sub_1001EBF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001EBF88( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v10 = type metadata accessor for UnknownStorage(319LL);
  if (v11 <= 0x3F)
  {
    v14[0] = *(void *)(v10 - 8) + 64LL;
    v14[1] = a4;
    v14[2] = &unk_1002D59B0;
    v14[3] = &unk_1002D59B0;
    sub_1000119EC(319LL, a5, a6);
    if (v13 <= 0x3F)
    {
      v14[4] = *(void *)(v12 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 5LL, v14, a1 + 16);
    }
  }

uint64_t *sub_1001EC034(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v21);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    unint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(_DWORD *)unint64_t v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    unint64_t v13 = (char *)a1 + v10;
    uint64_t v14 = (char *)a2 + v10;
    *(_DWORD *)unint64_t v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1LL, v18))
    {
      uint64_t v20 = sub_100003A0C(&qword_10035C698);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v16, (uint64_t *)v17, v7);
      uint64_t v22 = v18[5];
      uint64_t v23 = &v16[v22];
      int v24 = &v17[v22];
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      uint64_t v25 = v18[6];
      uint64_t v26 = &v16[v25];
      uint64_t v27 = &v17[v25];
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      uint64_t v28 = v18[7];
      uint64_t v29 = &v16[v28];
      uint64_t v30 = &v17[v28];
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      uint64_t v31 = v18[8];
      uint64_t v32 = &v16[v31];
      uint64_t v33 = &v17[v31];
      uint64_t v34 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
      uint64_t v35 = *((void *)v34 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1LL, v34))
      {
        uint64_t v36 = sub_100003A0C(&qword_10035C690);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
      }

      else
      {
        v8((uint64_t *)v32, (uint64_t *)v33, v7);
        uint64_t v37 = v34[5];
        uint64_t v38 = &v32[v37];
        v39 = &v33[v37];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        uint64_t v40 = v34[6];
        uint64_t v41 = &v32[v40];
        size_t v42 = &v33[v40];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        uint64_t v43 = v34[7];
        uint64_t v44 = &v32[v43];
        uint64_t v45 = &v33[v43];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(char *, void, uint64_t, int *))(v35 + 56))(v32, 0LL, 1LL, v34);
      }

      (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0LL, 1LL, v18);
    }
  }

  return a1;
}

uint64_t sub_1001EC2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v10(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result)
  {
    v10(v5, v4);
    uint64_t v8 = v5 + *(int *)(v6 + 32);
    uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))(v8, 1LL, v9);
    if (!(_DWORD)result) {
      return ((uint64_t (*)(uint64_t, uint64_t))v10)(v8, v4);
    }
  }

  return result;
}

uint64_t sub_1001EC388(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1LL, v17))
  {
    uint64_t v19 = sub_100003A0C(&qword_10035C698);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v15, (uint64_t)v16, v6);
    uint64_t v20 = v17[5];
    uint64_t v21 = &v15[v20];
    uint64_t v22 = &v16[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = v17[6];
    int v24 = &v15[v23];
    uint64_t v25 = &v16[v23];
    *(_DWORD *)int v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = v17[7];
    uint64_t v27 = &v15[v26];
    uint64_t v28 = &v16[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v17[8];
    uint64_t v30 = &v15[v29];
    uint64_t v31 = &v16[v29];
    uint64_t v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
    uint64_t v33 = *((void *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1LL, v32))
    {
      uint64_t v34 = sub_100003A0C(&qword_10035C690);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v30, (uint64_t)v31, v6);
      uint64_t v35 = v32[5];
      uint64_t v36 = &v30[v35];
      uint64_t v37 = &v31[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      uint64_t v38 = v32[6];
      v39 = &v30[v38];
      uint64_t v40 = &v31[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      uint64_t v41 = v32[7];
      size_t v42 = &v30[v41];
      uint64_t v43 = &v31[v41];
      *(_DWORD *)size_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0LL, 1LL, v32);
    }

    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0LL, 1LL, v17);
  }

  return a1;
}

uint64_t sub_1001EC5D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  char v12 = *(_BYTE *)(v11 + 4);
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = v12;
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  char v16 = *(_BYTE *)(v15 + 4);
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1LL, v20);
  int v24 = v22((uint64_t)v19, 1LL, v20);
  if (!v23)
  {
    if (!v24)
    {
      v8(v18, (uint64_t)v19, v6);
      uint64_t v47 = v20[5];
      uint64_t v48 = v18 + v47;
      uint64_t v49 = &v19[v47];
      char v50 = v49[4];
      *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
      *(_BYTE *)(v48 + 4) = v50;
      uint64_t v51 = v20[6];
      uint64_t v52 = v18 + v51;
      v53 = &v19[v51];
      char v54 = v53[4];
      *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
      *(_BYTE *)(v52 + 4) = v54;
      uint64_t v55 = v20[7];
      uint64_t v56 = v18 + v55;
      v57 = &v19[v55];
      char v58 = v57[4];
      *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
      *(_BYTE *)(v56 + 4) = v58;
      uint64_t v59 = v20[8];
      uint64_t v60 = v18 + v59;
      int v61 = &v19[v59];
      uint64_t v62 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
      uint64_t v63 = *((void *)v62 - 1);
      v64 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v63 + 48);
      int v65 = v64(v60, 1LL, v62);
      int v66 = v64((uint64_t)v61, 1LL, v62);
      if (v65)
      {
        if (!v66)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v60, v61, v6);
          uint64_t v67 = v62[5];
          uint64_t v68 = v60 + v67;
          uint64_t v69 = &v61[v67];
          char v70 = v69[4];
          *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
          *(_BYTE *)(v68 + 4) = v70;
          uint64_t v71 = v62[6];
          uint64_t v72 = v60 + v71;
          v73 = &v61[v71];
          char v74 = v73[4];
          *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
          *(_BYTE *)(v72 + 4) = v74;
          uint64_t v75 = v62[7];
          uint64_t v76 = v60 + v75;
          uint64_t v77 = &v61[v75];
          char v78 = v77[4];
          *(_DWORD *)uint64_t v76 = *(_DWORD *)v77;
          *(_BYTE *)(v76 + 4) = v78;
          (*(void (**)(uint64_t, void, uint64_t, int *))(v63 + 56))(v60, 0LL, 1LL, v62);
          return a1;
        }
      }

      else
      {
        if (!v66)
        {
          v8(v60, (uint64_t)v61, v6);
          uint64_t v92 = v62[5];
          uint64_t v93 = v60 + v92;
          v94 = &v61[v92];
          char v95 = v94[4];
          *(_DWORD *)uint64_t v93 = *(_DWORD *)v94;
          *(_BYTE *)(v93 + 4) = v95;
          uint64_t v96 = v62[6];
          uint64_t v97 = v60 + v96;
          v98 = &v61[v96];
          char v99 = v98[4];
          *(_DWORD *)uint64_t v97 = *(_DWORD *)v98;
          *(_BYTE *)(v97 + 4) = v99;
          uint64_t v100 = v62[7];
          uint64_t v101 = v60 + v100;
          v102 = &v61[v100];
          char v103 = v102[4];
          *(_DWORD *)uint64_t v101 = *(_DWORD *)v102;
          *(_BYTE *)(v101 + 4) = v103;
          return a1;
        }

        sub_100004090(v60, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }

      size_t v44 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C690) - 8) + 64LL);
      uint64_t v45 = (void *)v60;
      uint64_t v46 = v61;
      goto LABEL_8;
    }

    sub_100004090(v18, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    size_t v44 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C698) - 8) + 64LL);
    uint64_t v45 = (void *)v18;
    uint64_t v46 = v19;
LABEL_8:
    memcpy(v45, v46, v44);
    return a1;
  }

  if (v24) {
    goto LABEL_7;
  }
  uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v25(v18, v19, v6);
  uint64_t v26 = v20[5];
  uint64_t v27 = v18 + v26;
  uint64_t v28 = &v19[v26];
  char v29 = v28[4];
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = v29;
  uint64_t v30 = v20[6];
  uint64_t v31 = v18 + v30;
  uint64_t v32 = &v19[v30];
  char v33 = v32[4];
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v33;
  uint64_t v34 = v20[7];
  uint64_t v35 = v18 + v34;
  uint64_t v36 = &v19[v34];
  char v37 = v36[4];
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = v37;
  uint64_t v38 = v20[8];
  v39 = (char *)(v18 + v38);
  uint64_t v40 = &v19[v38];
  uint64_t v41 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v40, 1LL, v41))
  {
    uint64_t v43 = sub_100003A0C(&qword_10035C690);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    v25((uint64_t)v39, v40, v6);
    uint64_t v79 = v41[5];
    v80 = &v39[v79];
    uint64_t v81 = &v40[v79];
    char v82 = v81[4];
    *(_DWORD *)v80 = *(_DWORD *)v81;
    v80[4] = v82;
    uint64_t v83 = v41[6];
    uint64_t v84 = &v39[v83];
    uint64_t v85 = &v40[v83];
    char v86 = v85[4];
    *(_DWORD *)uint64_t v84 = *(_DWORD *)v85;
    v84[4] = v86;
    uint64_t v87 = v41[7];
    uint64_t v88 = &v39[v87];
    v89 = &v40[v87];
    char v90 = v89[4];
    *(_DWORD *)uint64_t v88 = *(_DWORD *)v89;
    v88[4] = v90;
    (*(void (**)(char *, void, uint64_t, int *))(v42 + 56))(v39, 0LL, 1LL, v41);
  }

  (*(void (**)(uint64_t, void, uint64_t, int *))(v21 + 56))(v18, 0LL, 1LL, v20);
  return a1;
}

uint64_t sub_1001ECA18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)(a1 + v14);
  char v16 = (char *)(a2 + v14);
  uint64_t v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1LL, v17))
  {
    uint64_t v19 = sub_100003A0C(&qword_10035C698);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v15, (uint64_t)v16, v6);
    uint64_t v20 = v17[5];
    uint64_t v21 = &v15[v20];
    uint64_t v22 = &v16[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = v17[6];
    int v24 = &v15[v23];
    uint64_t v25 = &v16[v23];
    *(_DWORD *)int v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = v17[7];
    uint64_t v27 = &v15[v26];
    uint64_t v28 = &v16[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v17[8];
    uint64_t v30 = &v15[v29];
    uint64_t v31 = &v16[v29];
    uint64_t v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
    uint64_t v33 = *((void *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1LL, v32))
    {
      uint64_t v34 = sub_100003A0C(&qword_10035C690);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v30, (uint64_t)v31, v6);
      uint64_t v35 = v32[5];
      uint64_t v36 = &v30[v35];
      char v37 = &v31[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      uint64_t v38 = v32[6];
      v39 = &v30[v38];
      uint64_t v40 = &v31[v38];
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      uint64_t v41 = v32[7];
      uint64_t v42 = &v30[v41];
      uint64_t v43 = &v31[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0LL, 1LL, v32);
    }

    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0LL, 1LL, v17);
  }

  return a1;
}

uint64_t sub_1001ECC60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = a2 + v9;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a1 + v10;
  uint64_t v14 = a2 + v10;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CellInfo(0LL);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1LL, v18);
  int v22 = v20((uint64_t)v17, 1LL, v18);
  if (!v21)
  {
    if (!v22)
    {
      v8(v16, (uint64_t)v17, v6);
      uint64_t v42 = v18[5];
      uint64_t v43 = v16 + v42;
      size_t v44 = &v17[v42];
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      *(_BYTE *)(v43 + 4) = v44[4];
      uint64_t v45 = v18[6];
      uint64_t v46 = v16 + v45;
      uint64_t v47 = &v17[v45];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      *(_BYTE *)(v46 + 4) = v47[4];
      uint64_t v48 = v18[7];
      uint64_t v49 = v16 + v48;
      char v50 = &v17[v48];
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      *(_BYTE *)(v49 + 4) = v50[4];
      uint64_t v51 = v18[8];
      uint64_t v52 = v16 + v51;
      v53 = &v17[v51];
      char v54 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
      uint64_t v55 = *((void *)v54 - 1);
      uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v55 + 48);
      int v57 = v56(v52, 1LL, v54);
      int v58 = v56((uint64_t)v53, 1LL, v54);
      if (v57)
      {
        if (!v58)
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v52, v53, v6);
          uint64_t v59 = v54[5];
          uint64_t v60 = v52 + v59;
          int v61 = &v53[v59];
          *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
          *(_BYTE *)(v60 + 4) = v61[4];
          uint64_t v62 = v54[6];
          uint64_t v63 = v52 + v62;
          v64 = &v53[v62];
          *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
          *(_BYTE *)(v63 + 4) = v64[4];
          uint64_t v65 = v54[7];
          uint64_t v66 = v52 + v65;
          uint64_t v67 = &v53[v65];
          *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
          *(_BYTE *)(v66 + 4) = v67[4];
          (*(void (**)(uint64_t, void, uint64_t, int *))(v55 + 56))(v52, 0LL, 1LL, v54);
          return a1;
        }
      }

      else
      {
        if (!v58)
        {
          v8(v52, (uint64_t)v53, v6);
          uint64_t v78 = v54[5];
          uint64_t v79 = v52 + v78;
          v80 = &v53[v78];
          *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
          *(_BYTE *)(v79 + 4) = v80[4];
          uint64_t v81 = v54[6];
          uint64_t v82 = v52 + v81;
          uint64_t v83 = &v53[v81];
          *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
          *(_BYTE *)(v82 + 4) = v83[4];
          uint64_t v84 = v54[7];
          uint64_t v85 = v52 + v84;
          char v86 = &v53[v84];
          *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
          *(_BYTE *)(v85 + 4) = v86[4];
          return a1;
        }

        sub_100004090(v52, type metadata accessor for Proto_Gnss_Emergency_Plmn);
      }

      size_t v39 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C690) - 8) + 64LL);
      uint64_t v40 = (void *)v52;
      uint64_t v41 = v53;
      goto LABEL_8;
    }

    sub_100004090(v16, type metadata accessor for Proto_Gnss_Emergency_CellInfo);
LABEL_7:
    size_t v39 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C698) - 8) + 64LL);
    uint64_t v40 = (void *)v16;
    uint64_t v41 = v17;
LABEL_8:
    memcpy(v40, v41, v39);
    return a1;
  }

  if (v22) {
    goto LABEL_7;
  }
  uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v23(v16, v17, v6);
  uint64_t v24 = v18[5];
  uint64_t v25 = v16 + v24;
  uint64_t v26 = &v17[v24];
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = v26[4];
  uint64_t v27 = v18[6];
  uint64_t v28 = v16 + v27;
  uint64_t v29 = &v17[v27];
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v29[4];
  uint64_t v30 = v18[7];
  uint64_t v31 = v16 + v30;
  uint64_t v32 = &v17[v30];
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v32[4];
  uint64_t v33 = v18[8];
  uint64_t v34 = (char *)(v16 + v33);
  uint64_t v35 = &v17[v33];
  uint64_t v36 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v37 = *((void *)v36 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v37 + 48))(v35, 1LL, v36))
  {
    uint64_t v38 = sub_100003A0C(&qword_10035C690);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    v23((uint64_t)v34, v35, v6);
    uint64_t v68 = v36[5];
    uint64_t v69 = &v34[v68];
    char v70 = &v35[v68];
    *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    uint64_t v71 = v36[6];
    uint64_t v72 = &v34[v71];
    v73 = &v35[v71];
    *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    uint64_t v74 = v36[7];
    uint64_t v75 = &v34[v74];
    uint64_t v76 = &v35[v74];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    (*(void (**)(char *, void, uint64_t, int *))(v37 + 56))(v34, 0LL, 1LL, v36);
  }

  (*(void (**)(uint64_t, void, uint64_t, int *))(v19 + 56))(v16, 0LL, 1LL, v18);
  return a1;
}

uint64_t sub_1001ED0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ED0B0);
}

uint64_t sub_1001ED0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = sub_100003A0C(&qword_10035C698);
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1001ED128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ED134);
}

uint64_t sub_1001ED134(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = sub_100003A0C(&qword_10035C698);
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001ED1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_1001ED1D4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v27);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    uint64_t v13 = (char *)a1 + v10;
    uint64_t v14 = (char *)a2 + v10;
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = (char *)a1 + v16;
    uint64_t v20 = (char *)a2 + v16;
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = a3[9];
    int v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
    uint64_t v25 = *((void *)v24 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1LL, v24))
    {
      uint64_t v26 = sub_100003A0C(&qword_10035C690);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v22, (uint64_t *)v23, v7);
      uint64_t v28 = v24[5];
      uint64_t v29 = &v22[v28];
      uint64_t v30 = &v23[v28];
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      uint64_t v31 = v24[6];
      uint64_t v32 = &v22[v31];
      uint64_t v33 = &v23[v31];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      uint64_t v34 = v24[7];
      uint64_t v35 = &v22[v34];
      uint64_t v36 = &v23[v34];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v22, 0LL, 1LL, v24);
    }

    uint64_t v37 = a3[10];
    uint64_t v38 = a3[11];
    size_t v39 = (char *)a1 + v37;
    uint64_t v40 = (char *)a2 + v37;
    *(_DWORD *)size_t v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    uint64_t v41 = (char *)a1 + v38;
    uint64_t v42 = (char *)a2 + v38;
    *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    uint64_t v43 = a3[12];
    uint64_t v44 = a3[13];
    uint64_t v45 = (char *)a1 + v43;
    uint64_t v46 = (char *)a2 + v43;
    *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
    v45[4] = v46[4];
    uint64_t v47 = (char *)a1 + v44;
    uint64_t v48 = (char *)a2 + v44;
    *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
    v47[4] = v48[4];
    uint64_t v49 = a3[14];
    uint64_t v50 = a3[15];
    uint64_t v51 = (char *)a1 + v49;
    uint64_t v52 = (char *)a2 + v49;
    int v53 = *(_DWORD *)v52;
    v51[4] = v52[4];
    *(_DWORD *)uint64_t v51 = v53;
    char v54 = (char *)a1 + v50;
    uint64_t v55 = (char *)a2 + v50;
    v54[4] = v55[4];
    *(_DWORD *)char v54 = *(_DWORD *)v55;
  }

  return a1;
}

uint64_t sub_1001ED444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 36);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

uint64_t sub_1001ED4E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)(a1 + v20);
  int v22 = (char *)(a2 + v20);
  uint64_t v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1LL, v23))
  {
    uint64_t v25 = sub_100003A0C(&qword_10035C690);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    uint64_t v26 = v23[5];
    uint64_t v27 = &v21[v26];
    uint64_t v28 = &v22[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v23[6];
    uint64_t v30 = &v21[v29];
    uint64_t v31 = &v22[v29];
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = v23[7];
    uint64_t v33 = &v21[v32];
    uint64_t v34 = &v22[v32];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0LL, 1LL, v23);
  }

  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  uint64_t v41 = a3[12];
  uint64_t v42 = a3[13];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  uint64_t v47 = a3[14];
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = (int *)(a2 + v47);
  int v51 = *v50;
  *(_BYTE *)(v49 + 4) = *((_BYTE *)v50 + 4);
  *(_DWORD *)uint64_t v49 = v51;
  uint64_t v52 = a1 + v48;
  uint64_t v53 = a2 + v48;
  *(_BYTE *)(v52 + 4) = *(_BYTE *)(v53 + 4);
  *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
  return a1;
}

uint64_t sub_1001ED728(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 24);
  v82(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  int v29 = v28(v24, 1LL, v26);
  int v30 = v28(v25, 1LL, v26);
  if (!v29)
  {
    if (!v30)
    {
      v82((uint64_t)v24, (uint64_t)v25, v6);
      uint64_t v69 = v26[5];
      char v70 = &v24[v69];
      uint64_t v71 = &v25[v69];
      char v72 = v71[4];
      *(_DWORD *)char v70 = *(_DWORD *)v71;
      v70[4] = v72;
      uint64_t v73 = v26[6];
      uint64_t v74 = &v24[v73];
      uint64_t v75 = &v25[v73];
      char v76 = v75[4];
      *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
      v74[4] = v76;
      uint64_t v77 = v26[7];
      uint64_t v78 = &v24[v77];
      uint64_t v79 = &v25[v77];
      char v80 = v79[4];
      *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
      v78[4] = v80;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    goto LABEL_6;
  }

  if (v30)
  {
LABEL_6:
    uint64_t v43 = sub_100003A0C(&qword_10035C690);
    memcpy(v24, v25, *(void *)(*(void *)(v43 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v24, v25, v6);
  uint64_t v31 = v26[5];
  uint64_t v32 = &v24[v31];
  uint64_t v33 = &v25[v31];
  char v34 = v33[4];
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  v32[4] = v34;
  uint64_t v35 = v26[6];
  uint64_t v36 = &v24[v35];
  uint64_t v37 = &v25[v35];
  char v38 = v37[4];
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  v36[4] = v38;
  uint64_t v39 = v26[7];
  uint64_t v40 = &v24[v39];
  uint64_t v41 = &v25[v39];
  char v42 = v41[4];
  *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
  v40[4] = v42;
  (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0LL, 1LL, v26);
LABEL_7:
  uint64_t v44 = a3[10];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (int *)(a2 + v44);
  int v47 = *v46;
  *(_BYTE *)(v45 + 4) = *((_BYTE *)v46 + 4);
  *(_DWORD *)uint64_t v45 = v47;
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = (int *)(a2 + v48);
  int v51 = *v50;
  *(_BYTE *)(v49 + 4) = *((_BYTE *)v50 + 4);
  *(_DWORD *)uint64_t v49 = v51;
  uint64_t v52 = a3[12];
  uint64_t v53 = a1 + v52;
  char v54 = (int *)(a2 + v52);
  int v55 = *v54;
  *(_BYTE *)(v53 + 4) = *((_BYTE *)v54 + 4);
  *(_DWORD *)uint64_t v53 = v55;
  uint64_t v56 = a3[13];
  uint64_t v57 = a1 + v56;
  int v58 = (int *)(a2 + v56);
  int v59 = *v58;
  *(_BYTE *)(v57 + 4) = *((_BYTE *)v58 + 4);
  *(_DWORD *)uint64_t v57 = v59;
  uint64_t v60 = a3[14];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (int *)(a2 + v60);
  int v63 = *v62;
  *(_BYTE *)(v61 + 4) = *((_BYTE *)v62 + 4);
  *(_DWORD *)uint64_t v61 = v63;
  uint64_t v64 = a3[15];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = (int *)(a2 + v64);
  int v67 = *v66;
  *(_BYTE *)(v65 + 4) = *((_BYTE *)v66 + 4);
  *(_DWORD *)uint64_t v65 = v67;
  return a1;
}

uint64_t sub_1001EDA30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)(a1 + v20);
  char v22 = (char *)(a2 + v20);
  uint64_t v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1LL, v23))
  {
    uint64_t v25 = sub_100003A0C(&qword_10035C690);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    uint64_t v26 = v23[5];
    uint64_t v27 = &v21[v26];
    uint64_t v28 = &v22[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v23[6];
    int v30 = &v21[v29];
    uint64_t v31 = &v22[v29];
    *(_DWORD *)int v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = v23[7];
    uint64_t v33 = &v21[v32];
    char v34 = &v22[v32];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0LL, 1LL, v23);
  }

  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  uint64_t v39 = a1 + v36;
  uint64_t v40 = a2 + v36;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  uint64_t v41 = a3[12];
  uint64_t v42 = a3[13];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  *(_BYTE *)(v43 + 4) = *(_BYTE *)(v44 + 4);
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  uint64_t v47 = a3[14];
  uint64_t v48 = a3[15];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = (int *)(a2 + v47);
  int v51 = *v50;
  *(_BYTE *)(v49 + 4) = *((_BYTE *)v50 + 4);
  *(_DWORD *)uint64_t v49 = v51;
  uint64_t v52 = a1 + v48;
  uint64_t v53 = a2 + v48;
  *(_BYTE *)(v52 + 4) = *(_BYTE *)(v53 + 4);
  *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
  return a1;
}

uint64_t sub_1001EDC74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v66 = *(void *)(v6 - 8);
  int v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 40);
  v67(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  char v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_Plmn(0LL);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1LL, v22);
  int v26 = v24(v21, 1LL, v22);
  if (!v25)
  {
    if (!v26)
    {
      v67((uint64_t)v20, (uint64_t)v21, v6);
      uint64_t v57 = v22[5];
      int v58 = &v20[v57];
      int v59 = &v21[v57];
      *(_DWORD *)int v58 = *(_DWORD *)v59;
      v58[4] = v59[4];
      uint64_t v60 = v22[6];
      uint64_t v61 = &v20[v60];
      uint64_t v62 = &v21[v60];
      *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
      v61[4] = v62[4];
      uint64_t v63 = v22[7];
      uint64_t v64 = &v20[v63];
      uint64_t v65 = &v21[v63];
      *(_DWORD *)uint64_t v64 = *(_DWORD *)v65;
      v64[4] = v65[4];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    goto LABEL_6;
  }

  if (v26)
  {
LABEL_6:
    uint64_t v36 = sub_100003A0C(&qword_10035C690);
    memcpy(v20, v21, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v20, v21, v6);
  uint64_t v27 = v22[5];
  uint64_t v28 = &v20[v27];
  uint64_t v29 = &v21[v27];
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  v28[4] = v29[4];
  uint64_t v30 = v22[6];
  uint64_t v31 = &v20[v30];
  uint64_t v32 = &v21[v30];
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  v31[4] = v32[4];
  uint64_t v33 = v22[7];
  char v34 = &v20[v33];
  uint64_t v35 = &v21[v33];
  *(_DWORD *)char v34 = *(_DWORD *)v35;
  v34[4] = v35[4];
  (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0LL, 1LL, v22);
LABEL_7:
  uint64_t v37 = a3[10];
  uint64_t v38 = a3[11];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  uint64_t v43 = a3[12];
  uint64_t v44 = a3[13];
  uint64_t v45 = a1 + v43;
  uint64_t v46 = a2 + v43;
  *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
  *(_BYTE *)(v45 + 4) = *(_BYTE *)(v46 + 4);
  uint64_t v47 = a1 + v44;
  uint64_t v48 = a2 + v44;
  *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
  *(_BYTE *)(v47 + 4) = *(_BYTE *)(v48 + 4);
  uint64_t v49 = a3[14];
  uint64_t v50 = a3[15];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = (int *)(a2 + v49);
  int v53 = *v52;
  *(_BYTE *)(v51 + 4) = *((_BYTE *)v52 + 4);
  *(_DWORD *)uint64_t v51 = v53;
  uint64_t v54 = a1 + v50;
  uint64_t v55 = a2 + v50;
  *(_BYTE *)(v54 + 4) = *(_BYTE *)(v55 + 4);
  *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
  return a1;
}

uint64_t sub_1001EDF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EDF74);
}

uint64_t sub_1001EDF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v8 = sub_100003A0C(&qword_10035C690);
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1001EDFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EDFF8);
}

uint64_t sub_1001EDFF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v10 = sub_100003A0C(&qword_10035C690);
    uint64_t v12 = a1 + *(int *)(a4 + 36);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001EE078(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = &unk_1002D59B0;
    v6[2] = &unk_1002D59B0;
    v6[3] = &unk_1002D59B0;
    v6[4] = &unk_1002D59B0;
    sub_1000119EC(319LL, (unint64_t *)&unk_10035EAB8, type metadata accessor for Proto_Gnss_Emergency_Plmn);
    if (v5 <= 0x3F)
    {
      v6[5] = *(void *)(v4 - 8) + 64LL;
      v6[6] = &unk_1002D59B0;
      v6[7] = &unk_1002D59B0;
      v6[8] = &unk_1002D59B0;
      v6[9] = &unk_1002D59B0;
      v6[10] = &unk_1002D59B0;
      v6[11] = &unk_1002D59B0;
      swift_initStructMetadata(a1, 256LL, 12LL, v6, a1 + 16);
    }
  }

uint64_t sub_1001EE128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE134);
}

uint64_t sub_1001EE138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE144);
}

char *sub_1001EE148(char *a1, char *a2, uint64_t a3)
{
  return sub_1001F1130(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_10035C6B8);
}

uint64_t sub_1001EE15C(uint64_t a1, uint64_t a2)
{
  return sub_1001F1268(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
}

uint64_t sub_1001EE168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1328(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_10035C6B8);
}

uint64_t sub_1001EE17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F143C(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_10035C6B8);
}

uint64_t sub_1001EE190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F15C4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_10035C6B8);
}

uint64_t sub_1001EE1A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F16D4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured, &qword_10035C6B8);
}

uint64_t sub_1001EE1B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE1C4);
}

uint64_t sub_1001EE1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FFC24(a1, a2, a3, &qword_10035C6B8);
}

uint64_t sub_1001EE1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE1DC);
}

uint64_t sub_1001EE1DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FFCEC(a1, a2, a3, a4, &qword_10035C6B8);
}

void sub_1001EE1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void *sub_1001EE204(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v20);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    v9[4] = v10[4];
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    uint64_t v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    v13[4] = v14[4];
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    uint64_t v15 = (char *)a1 + v12;
    uint64_t v16 = (char *)a2 + v12;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }

  return a1;
}

uint64_t sub_1001EE2FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001EE3C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t sub_1001EE4A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001EE56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001EE638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE644);
}

uint64_t sub_1001EE644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  }
  unsigned int v10 = v9 - 4;
  else {
    return 0LL;
  }
}

uint64_t sub_1001EE6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE6D4);
}

uint64_t sub_1001EE6D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 4;
  return result;
}

uint64_t sub_1001EE74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1F4C( a1,  a2,  a3,  (uint64_t)&unk_1002D5B70,  (uint64_t)&unk_1002D59B0,  (uint64_t)&unk_1002D59B0,  (uint64_t)&unk_1002D5A68);
}

uint64_t sub_1001EE76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE778);
}

uint64_t sub_1001EE77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE788);
}

uint64_t sub_1001EE790(uint64_t a1, uint64_t a2)
{
  return sub_1001EE79C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
}

uint64_t sub_1001EE79C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  unsigned int v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL);
  v10(a1, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = a3(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v6);
  }
  return result;
}

uint64_t sub_1001EE850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EE85C);
}

uint64_t sub_1001EE85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013EA24(a1, a2, a3, &qword_10035C6C0);
}

uint64_t sub_1001EE868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EE874);
}

uint64_t sub_1001EE874(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EAB4(a1, a2, a3, a4, &qword_10035C6C0);
}

void sub_1001EE880(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_1001EE89C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    unsigned int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C6C0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = *(int *)(v12 + 24);
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v22 = a3[6];
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v22;
    int v25 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    int v26 = (char *)a1 + v23;
    uint64_t v27 = (char *)a2 + v23;
    *(_DWORD *)int v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    uint64_t v28 = a3[8];
    uint64_t v29 = a3[9];
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = (char *)a1 + v29;
    uint64_t v33 = (char *)a2 + v29;
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
  }

  return a1;
}

uint64_t sub_1001EEA54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  unsigned int v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  return a1;
}

uint64_t sub_1001EEBE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v51 = a3;
  uint64_t v9 = a3[5];
  unsigned int v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v42 = *(int *)(v12 + 20);
      uint64_t v43 = &v10[v42];
      uint64_t v44 = &v11[v42];
      char v45 = v44[4];
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      v43[4] = v45;
      uint64_t v46 = *(int *)(v12 + 24);
      uint64_t v47 = &v10[v46];
      uint64_t v48 = &v11[v46];
      char v49 = v48[4];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      v47[4] = v49;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v24 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v10, v11, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v16 = *(int *)(v12 + 20);
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  char v19 = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v19;
  uint64_t v20 = *(int *)(v12 + 24);
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  char v23 = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v23;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v25 = v51[6];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = (int *)(a2 + v25);
  int v28 = *v27;
  *(_BYTE *)(v26 + 4) = *((_BYTE *)v27 + 4);
  *(_DWORD *)uint64_t v26 = v28;
  uint64_t v29 = v51[7];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (int *)(a2 + v29);
  int v32 = *v31;
  *(_BYTE *)(v30 + 4) = *((_BYTE *)v31 + 4);
  *(_DWORD *)uint64_t v30 = v32;
  uint64_t v33 = v51[8];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = (int *)(a2 + v33);
  int v36 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)uint64_t v34 = v36;
  uint64_t v37 = v51[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (int *)(a2 + v37);
  int v40 = *v39;
  *(_BYTE *)(v38 + 4) = *((_BYTE *)v39 + 4);
  *(_DWORD *)uint64_t v38 = v40;
  return a1;
}

uint64_t sub_1001EEE14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  unsigned int v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)int v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    char v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  return a1;
}

uint64_t sub_1001EEFA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v43 = a3;
  uint64_t v9 = a3[5];
  unsigned int v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v36 = *(int *)(v12 + 20);
      uint64_t v37 = &v10[v36];
      uint64_t v38 = &v11[v36];
      *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
      v37[4] = v38[4];
      uint64_t v39 = *(int *)(v12 + 24);
      int v40 = &v10[v39];
      uint64_t v41 = &v11[v39];
      *(_DWORD *)int v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v22 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v10, v11, *(void *)(*(void *)(v22 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v16 = *(int *)(v12 + 20);
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  uint64_t v19 = *(int *)(v12 + 24);
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v23 = v43[6];
  uint64_t v24 = v43[7];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = v43[8];
  uint64_t v30 = v43[9];
  uint64_t v31 = a1 + v29;
  uint64_t v32 = a2 + v29;
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  uint64_t v33 = a1 + v30;
  uint64_t v34 = a2 + v30;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  return a1;
}

uint64_t sub_1001EF1CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EF1D8);
}

uint64_t sub_1001EF1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013EA24(a1, a2, a3, &qword_10035C6C0);
}

uint64_t sub_1001EF1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EF1F0);
}

uint64_t sub_1001EF1F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EAB4(a1, a2, a3, a4, &qword_10035C6C0);
}

void sub_1001EF1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001EF218( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10 = type metadata accessor for UnknownStorage(319LL);
  if (v11 <= 0x3F)
  {
    v14[0] = *(void *)(v10 - 8) + 64LL;
    sub_1000119EC(319LL, a4, a5);
    if (v13 <= 0x3F)
    {
      v14[1] = *(void *)(v12 - 8) + 64LL;
      v14[2] = &unk_1002D59B0;
      v14[3] = &unk_1002D59B0;
      v14[4] = &unk_1002D59B0;
      void v14[5] = a6;
      swift_initStructMetadata(a1, 256LL, 6LL, v14, a1 + 16);
    }
  }

uint64_t *sub_1001EF2C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C6C0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = *(int *)(v12 + 24);
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v22 = a3[6];
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = (char *)a1 + v23;
    uint64_t v27 = (char *)a2 + v23;
    *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    uint64_t v28 = a3[8];
    uint64_t v29 = a3[9];
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = (char *)a1 + v29;
    uint64_t v33 = (char *)a2 + v29;
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    uint64_t v34 = a3[10];
    uint64_t v35 = a3[11];
    uint64_t v36 = (char *)a1 + v34;
    uint64_t v37 = (char *)a2 + v34;
    int v38 = *(_DWORD *)v37;
    v36[4] = v37[4];
    *(_DWORD *)uint64_t v36 = v38;
    uint64_t v39 = (char *)a1 + v35;
    int v40 = (char *)a2 + v35;
    v39[4] = v40[4];
    *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  }

  return a1;
}

uint64_t sub_1001EF4B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = (int *)(a2 + v32);
  int v36 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)uint64_t v34 = v36;
  uint64_t v37 = a1 + v33;
  uint64_t v38 = a2 + v33;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  return a1;
}

uint64_t sub_1001EF674(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  int v13 = v12(v9, 1LL, v11);
  int v14 = v12(v10, 1LL, v11);
  if (!v13)
  {
    if (!v14)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v49 = *(int *)(v11 + 20);
      uint64_t v50 = &v9[v49];
      uint64_t v51 = &v10[v49];
      char v52 = v51[4];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      v50[4] = v52;
      uint64_t v53 = *(int *)(v11 + 24);
      uint64_t v54 = &v9[v53];
      uint64_t v55 = &v10[v53];
      char v56 = v55[4];
      *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
      v54[4] = v56;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v23 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v9, v10, v6);
  uint64_t v15 = *(int *)(v11 + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  char v18 = v17[4];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v18;
  uint64_t v19 = *(int *)(v11 + 24);
  uint64_t v20 = &v9[v19];
  uint64_t v21 = &v10[v19];
  char v22 = v21[4];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v22;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v24 = a3[6];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (int *)(a2 + v24);
  int v27 = *v26;
  *(_BYTE *)(v25 + 4) = *((_BYTE *)v26 + 4);
  *(_DWORD *)uint64_t v25 = v27;
  uint64_t v28 = a3[7];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (int *)(a2 + v28);
  int v31 = *v30;
  *(_BYTE *)(v29 + 4) = *((_BYTE *)v30 + 4);
  *(_DWORD *)uint64_t v29 = v31;
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (int *)(a2 + v32);
  int v35 = *v34;
  *(_BYTE *)(v33 + 4) = *((_BYTE *)v34 + 4);
  *(_DWORD *)uint64_t v33 = v35;
  uint64_t v36 = a3[9];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = (int *)(a2 + v36);
  int v39 = *v38;
  *(_BYTE *)(v37 + 4) = *((_BYTE *)v38 + 4);
  *(_DWORD *)uint64_t v37 = v39;
  uint64_t v40 = a3[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (int *)(a2 + v40);
  int v43 = *v42;
  *(_BYTE *)(v41 + 4) = *((_BYTE *)v42 + 4);
  *(_DWORD *)uint64_t v41 = v43;
  uint64_t v44 = a3[11];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (int *)(a2 + v44);
  int v47 = *v46;
  *(_BYTE *)(v45 + 4) = *((_BYTE *)v46 + 4);
  *(_DWORD *)uint64_t v45 = v47;
  return a1;
}

uint64_t sub_1001EF8E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)char v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = a1 + v32;
  int v35 = (int *)(a2 + v32);
  int v36 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)uint64_t v34 = v36;
  uint64_t v37 = a1 + v33;
  uint64_t v38 = a2 + v33;
  *(_BYTE *)(v37 + 4) = *(_BYTE *)(v38 + 4);
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  return a1;
}

uint64_t sub_1001EFAA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  int v13 = v12(v9, 1LL, v11);
  int v14 = v12(v10, 1LL, v11);
  if (!v13)
  {
    if (!v14)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v42 = *(int *)(v11 + 20);
      int v43 = &v9[v42];
      uint64_t v44 = &v10[v42];
      *(_DWORD *)int v43 = *(_DWORD *)v44;
      v43[4] = v44[4];
      uint64_t v45 = *(int *)(v11 + 24);
      uint64_t v46 = &v9[v45];
      int v47 = &v10[v45];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      v46[4] = v47[4];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v21 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v9, v10, v6);
  uint64_t v15 = *(int *)(v11 + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = *(int *)(v11 + 24);
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = a3[7];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[8];
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = (int *)(a2 + v34);
  int v38 = *v37;
  *(_BYTE *)(v36 + 4) = *((_BYTE *)v37 + 4);
  *(_DWORD *)uint64_t v36 = v38;
  uint64_t v39 = a1 + v35;
  uint64_t v40 = a2 + v35;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  return a1;
}

uint64_t sub_1001EFD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001EFD0C);
}

uint64_t sub_1001EFD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013EA24(a1, a2, a3, &qword_10035C6C0);
}

uint64_t sub_1001EFD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001EFD24);
}

uint64_t sub_1001EFD24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EAB4(a1, a2, a3, a4, &qword_10035C6C0);
}

void sub_1001EFD30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_10035EF48,  type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      v6[2] = &unk_1002D59B0;
      v6[3] = &unk_1002D59B0;
      v6[4] = &unk_1002D59B0;
      v6[5] = &unk_1002D59B0;
      v6[6] = &unk_1002D59B0;
      v6[7] = &unk_1002D59B0;
      swift_initStructMetadata(a1, 256LL, 8LL, v6, a1 + 16);
    }
  }

uint64_t *sub_1001EFDD8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C6C0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = *(int *)(v12 + 24);
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v22 = a3[6];
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = (char *)a1 + v23;
    uint64_t v27 = (char *)a2 + v23;
    *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    uint64_t v28 = a3[8];
    uint64_t v29 = a3[9];
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = (char *)a1 + v29;
    uint64_t v33 = (char *)a2 + v29;
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    uint64_t v34 = a3[10];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    LODWORD(v30) = *(_DWORD *)v36;
    v35[4] = v36[4];
    *(_DWORD *)uint64_t v35 = (_DWORD)v30;
  }

  return a1;
}

uint64_t sub_1001EFFAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  LODWORD(v28) = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = v28;
  return a1;
}

uint64_t sub_1001F0154(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  int v13 = v12(v9, 1LL, v11);
  int v14 = v12(v10, 1LL, v11);
  if (!v13)
  {
    if (!v14)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v45 = *(int *)(v11 + 20);
      uint64_t v46 = &v9[v45];
      int v47 = &v10[v45];
      char v48 = v47[4];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      v46[4] = v48;
      uint64_t v49 = *(int *)(v11 + 24);
      uint64_t v50 = &v9[v49];
      uint64_t v51 = &v10[v49];
      char v52 = v51[4];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      v50[4] = v52;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v23 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v9, v10, v6);
  uint64_t v15 = *(int *)(v11 + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  char v18 = v17[4];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v18;
  uint64_t v19 = *(int *)(v11 + 24);
  uint64_t v20 = &v9[v19];
  uint64_t v21 = &v10[v19];
  char v22 = v21[4];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v22;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v24 = a3[6];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (int *)(a2 + v24);
  int v27 = *v26;
  *(_BYTE *)(v25 + 4) = *((_BYTE *)v26 + 4);
  *(_DWORD *)uint64_t v25 = v27;
  uint64_t v28 = a3[7];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (int *)(a2 + v28);
  int v31 = *v30;
  *(_BYTE *)(v29 + 4) = *((_BYTE *)v30 + 4);
  *(_DWORD *)uint64_t v29 = v31;
  uint64_t v32 = a3[8];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = (int *)(a2 + v32);
  int v35 = *v34;
  *(_BYTE *)(v33 + 4) = *((_BYTE *)v34 + 4);
  *(_DWORD *)uint64_t v33 = v35;
  uint64_t v36 = a3[9];
  uint64_t v37 = a1 + v36;
  int v38 = (int *)(a2 + v36);
  int v39 = *v38;
  *(_BYTE *)(v37 + 4) = *((_BYTE *)v38 + 4);
  *(_DWORD *)uint64_t v37 = v39;
  uint64_t v40 = a3[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (int *)(a2 + v40);
  int v43 = *v42;
  *(_BYTE *)(v41 + 4) = *((_BYTE *)v42 + 4);
  *(_DWORD *)uint64_t v41 = v43;
  return a1;
}

uint64_t sub_1001F03A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)char v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  uint64_t v30 = a1 + v27;
  uint64_t v31 = a2 + v27;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a3[10];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  LODWORD(v28) = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = v28;
  return a1;
}

uint64_t sub_1001F054C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v13 = v12(v9, 1LL, v11);
  int v14 = v12(v10, 1LL, v11);
  if (!v13)
  {
    if (!v14)
    {
      v7((uint64_t)v9, (uint64_t)v10, v6);
      uint64_t v38 = *(int *)(v11 + 20);
      int v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      *(_DWORD *)int v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      uint64_t v41 = *(int *)(v11 + 24);
      uint64_t v42 = &v9[v41];
      int v43 = &v10[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v14)
  {
LABEL_6:
    uint64_t v21 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v21 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v9, v10, v6);
  uint64_t v15 = *(int *)(v11 + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = *(int *)(v11 + 24);
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = a3[7];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[8];
  uint64_t v29 = a3[9];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  uint64_t v34 = a3[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  LODWORD(v30) = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  *(_DWORD *)uint64_t v35 = v30;
  return a1;
}

uint64_t sub_1001F0794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F07A0);
}

uint64_t sub_1001F07A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013EA24(a1, a2, a3, &qword_10035C6C0);
}

uint64_t sub_1001F07AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F07B8);
}

uint64_t sub_1001F07B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EAB4(a1, a2, a3, a4, &qword_10035C6C0);
}

void sub_1001F07C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_10035EF48,  type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      v6[2] = &unk_1002D59B0;
      v6[3] = &unk_1002D59B0;
      v6[4] = &unk_1002D59B0;
      v6[5] = &unk_1002D59B0;
      v6[6] = &unk_1002D59B0;
      swift_initStructMetadata(a1, 256LL, 7LL, v6, a1 + 16);
    }
  }

uint64_t *sub_1001F0868(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C6C0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = *(int *)(v12 + 24);
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v22 = *(int *)(a3 + 24);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
  }

  return a1;
}

uint64_t sub_1001F09D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  return a1;
}

uint64_t sub_1001F0B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v31 = *(int *)(v12 + 20);
      uint64_t v32 = &v10[v31];
      uint64_t v33 = &v11[v31];
      char v34 = v33[4];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v34;
      uint64_t v35 = *(int *)(v12 + 24);
      uint64_t v36 = &v10[v35];
      uint64_t v37 = &v11[v35];
      char v38 = v37[4];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v38;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v16)
  {
LABEL_6:
    uint64_t v25 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v10, v11, *(void *)(*(void *)(v25 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v17 = *(int *)(v12 + 20);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  char v20 = v19[4];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v20;
  uint64_t v21 = *(int *)(v12 + 24);
  uint64_t v22 = &v10[v21];
  uint64_t v23 = &v11[v21];
  char v24 = v23[4];
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v24;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v26 = *(int *)(v39 + 24);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(v40 + v26);
  int v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  return a1;
}

uint64_t sub_1001F0CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    int v15 = &v9[v14];
    int v16 = &v10[v14];
    *(_DWORD *)int v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  return a1;
}

uint64_t sub_1001F0E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v34 = a3;
  uint64_t v35 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v28 = *(int *)(v12 + 20);
      int v29 = &v10[v28];
      uint64_t v30 = &v11[v28];
      *(_DWORD *)int v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      uint64_t v31 = *(int *)(v12 + 24);
      uint64_t v32 = &v10[v31];
      uint64_t v33 = &v11[v31];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
    goto LABEL_6;
  }

  if (v16)
  {
LABEL_6:
    uint64_t v23 = sub_100003A0C(&qword_10035C6C0);
    memcpy(v10, v11, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v17 = *(int *)(v12 + 20);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = *(int *)(v12 + 24);
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v24 = *(int *)(v34 + 24);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = v35 + v24;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = *(_BYTE *)(v26 + 4);
  return a1;
}

uint64_t sub_1001F0FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F0FF8);
}

uint64_t sub_1001F0FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013EA24(a1, a2, a3, &qword_10035C6C0);
}

uint64_t sub_1001F1004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1010);
}

uint64_t sub_1001F1010(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EAB4(a1, a2, a3, a4, &qword_10035C6C0);
}

void sub_1001F101C( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v10 = type metadata accessor for UnknownStorage(319LL);
  if (v11 <= 0x3F)
  {
    v14[0] = *(void *)(v10 - 8) + 64LL;
    sub_1000119EC(319LL, a4, a5);
    if (v13 <= 0x3F)
    {
      v14[1] = *(void *)(v12 - 8) + 64LL;
      v14[2] = a6;
      swift_initStructMetadata(a1, 256LL, 3LL, v14, a1 + 16);
    }
  }

uint64_t sub_1001F10D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F10DC);
}

uint64_t sub_1001F10E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F10EC);
}

uint64_t sub_1001F10F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FBB54(a1, a2, a3, (uint64_t)&unk_1002D59B0);
}

uint64_t sub_1001F10FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F1108);
}

uint64_t sub_1001F110C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1118);
}

char *sub_1001F111C(char *a1, char *a2, uint64_t a3)
{
  return sub_1001F1130(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_10035C6F8);
}

char *sub_1001F1130(char *a1, char *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  int v7 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v7 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v19 + ((v7 + 16LL) & ~(unint64_t)v7));
    swift_retain(v19);
  }

  else
  {
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    v12(a1, a2, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    uint64_t v14 = &a1[v13];
    int v15 = &a2[v13];
    uint64_t v16 = a4(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v16))
    {
      uint64_t v18 = sub_100003A0C(a5);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      v12(v14, v15, v11);
      uint64_t v20 = *(int *)(v16 + 20);
      uint64_t v21 = *(void *)&v15[v20];
      *(void *)&v14[v20] = v21;
      uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
      swift_retain(v21);
      v22(v14, 0LL, 1LL, v16);
    }
  }

  return a1;
}

uint64_t sub_1001F125C(uint64_t a1, uint64_t a2)
{
  return sub_1001F1268(a1, a2, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo);
}

uint64_t sub_1001F1268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  int v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL);
  v7(a1, v6);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = a3(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))(v8, 1LL, v9);
  if (!(_DWORD)result)
  {
    v7(v8, v6);
    return swift_release(*(void *)(v8 + *(int *)(v9 + 20)));
  }

  return result;
}

uint64_t sub_1001F1314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1328(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_10035C6F8);
}

uint64_t sub_1001F1328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16LL);
  v11(a1, a2, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = a4(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_100003A0C(a5);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    v11((uint64_t)v13, (uint64_t)v14, v10);
    uint64_t v18 = *(int *)(v15 + 20);
    uint64_t v19 = *(void *)&v14[v18];
    *(void *)&v13[v18] = v19;
    uint64_t v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
    swift_retain(v19);
    v20(v13, 0LL, 1LL, v15);
  }

  return a1;
}

uint64_t sub_1001F1428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F143C(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_10035C6F8);
}

uint64_t sub_1001F143C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v11(a1, a2, v9);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v28 = a4;
  uint64_t v15 = a4(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1LL, v15);
  int v19 = v17(v14, 1LL, v15);
  if (!v18)
  {
    if (!v19)
    {
      v11((uint64_t)v13, (uint64_t)v14, v9);
      uint64_t v25 = *(int *)(v15 + 20);
      uint64_t v26 = *(void *)&v14[v25];
      uint64_t v27 = *(void *)&v13[v25];
      *(void *)&v13[v25] = v26;
      swift_retain(v26);
      swift_release(v27);
      return a1;
    }

    sub_100004090((uint64_t)v13, v28);
    goto LABEL_6;
  }

  if (v19)
  {
LABEL_6:
    uint64_t v23 = sub_100003A0C(a5);
    memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
  uint64_t v20 = *(int *)(v15 + 20);
  uint64_t v21 = *(void *)&v14[v20];
  *(void *)&v13[v20] = v21;
  uint64_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  swift_retain(v21);
  v22(v13, 0LL, 1LL, v15);
  return a1;
}

uint64_t sub_1001F15B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F15C4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_10035C6F8);
}

uint64_t sub_1001F15C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32LL);
  v11(a1, a2, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = a4(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_100003A0C(a5);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    v11((uint64_t)v13, (uint64_t)v14, v10);
    *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  return a1;
}

uint64_t sub_1001F16C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F16D4(a1, a2, a3, type metadata accessor for Proto_Gnss_Emergency_ShapeInfo, &qword_10035C6F8);
}

uint64_t sub_1001F16D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(a1, a2, v9);
  uint64_t v12 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v24 = a4;
  uint64_t v15 = a4(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1LL, v15);
  int v19 = v17(v14, 1LL, v15);
  if (!v18)
  {
    if (!v19)
    {
      v11((uint64_t)v13, (uint64_t)v14, v9);
      uint64_t v22 = *(int *)(v15 + 20);
      uint64_t v23 = *(void *)&v13[v22];
      *(void *)&v13[v22] = *(void *)&v14[v22];
      swift_release(v23);
      return a1;
    }

    sub_100004090((uint64_t)v13, v24);
    goto LABEL_6;
  }

  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_100003A0C(a5);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
  return a1;
}

uint64_t sub_1001F1838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F1844);
}

uint64_t sub_1001F1844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 246)
  {
    else {
      int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v10 = v9 - 9;
    else {
      return 0LL;
    }
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C6F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v11);
  }

uint64_t sub_1001F18F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1900);
}

uint64_t sub_1001F1900(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 246)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 9;
      return result;
    }

    uint64_t v10 = sub_100003A0C(&qword_10035C6F8);
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001F19A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1001F19C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F19CC);
}

uint64_t sub_1001F19D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F19DC);
}

uint64_t sub_1001F19F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F1A00);
}

uint64_t sub_1001F1A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1A10);
}

uint64_t sub_1001F1A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020B530(a1, a2, a3, (uint64_t)&unk_1002D59B0);
}

uint64_t sub_1001F1A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F1A2C);
}

uint64_t sub_1001F1A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1A3C);
}

uint64_t *sub_1001F1A40(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v27);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    int v18 = (char *)a1 + v15;
    int v19 = (char *)a2 + v15;
    *(_DWORD *)int v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    int v24 = *(_DWORD *)v23;
    v22[4] = v23[4];
    *(_DWORD *)uint64_t v22 = v24;
    uint64_t v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    v25[4] = v26[4];
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  }

  return a1;
}

uint64_t sub_1001F1B58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (int *)(a2 + v19);
  int v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1001F1C44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  return a1;
}

uint64_t sub_1001F1D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  char v22 = (int *)(a2 + v19);
  int v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1001F1E28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  char v22 = (int *)(a2 + v19);
  int v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1001F1F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F1F20);
}

uint64_t sub_1001F1F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F1F30);
}

uint64_t sub_1001F1F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F1F4C( a1,  a2,  a3,  (uint64_t)&unk_1002D59B0,  (uint64_t)&unk_1002D59B0,  (uint64_t)&unk_1002D59B0,  (uint64_t)&unk_1002D59B0);
}

uint64_t sub_1001F1F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v13 <= 0x3F)
  {
    v14[0] = *(void *)(result - 8) + 64LL;
    v14[1] = a4;
    v14[2] = a5;
    void v14[3] = a6;
    v14[4] = a6;
    void v14[5] = a7;
    void v14[6] = a6;
    swift_initStructMetadata(a1, 256LL, 7LL, v14, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t *sub_1001F1FE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C700);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = *(int *)(v12 + 24);
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v22 = a3[6];
    int v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
    uint64_t v26 = *((void *)v25 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1LL, v25))
    {
      uint64_t v27 = sub_100003A0C(&qword_10035C708);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v23, (uint64_t *)v24, v7);
      uint64_t v28 = v25[5];
      uint64_t v29 = &v23[v28];
      char v30 = &v24[v28];
      *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
      v29[4] = v30[4];
      uint64_t v31 = v25[6];
      uint64_t v32 = &v23[v31];
      uint64_t v33 = &v24[v31];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      uint64_t v34 = v25[7];
      uint64_t v35 = &v23[v34];
      uint64_t v36 = &v24[v34];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      uint64_t v37 = v25[8];
      char v38 = &v23[v37];
      uint64_t v39 = &v24[v37];
      *(_DWORD *)char v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0LL, 1LL, v25);
    }

    uint64_t v40 = a3[7];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    int v43 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
    uint64_t v44 = *((void *)v43 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v44 + 48))(v42, 1LL, v43))
    {
      uint64_t v45 = sub_100003A0C(&qword_10035C710);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v41, (uint64_t *)v42, v7);
      uint64_t v46 = v43[5];
      int v47 = &v41[v46];
      char v48 = &v42[v46];
      *(_DWORD *)int v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      uint64_t v49 = v43[6];
      uint64_t v50 = &v41[v49];
      uint64_t v51 = &v42[v49];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      v50[4] = v51[4];
      uint64_t v52 = v43[7];
      uint64_t v53 = &v41[v52];
      uint64_t v54 = &v42[v52];
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      (*(void (**)(char *, void, uint64_t, int *))(v44 + 56))(v41, 0LL, 1LL, v43);
    }

    uint64_t v55 = a3[8];
    char v56 = (char *)a1 + v55;
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
    uint64_t v59 = *((void *)v58 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v59 + 48))(v57, 1LL, v58))
    {
      uint64_t v60 = sub_100003A0C(&qword_10035C718);
      memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v56, (uint64_t *)v57, v7);
      uint64_t v61 = v58[5];
      uint64_t v62 = &v56[v61];
      uint64_t v63 = &v57[v61];
      *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
      v62[4] = v63[4];
      uint64_t v64 = v58[6];
      uint64_t v65 = &v56[v64];
      uint64_t v66 = &v57[v64];
      *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
      v65[4] = v66[4];
      uint64_t v67 = v58[7];
      uint64_t v68 = &v56[v67];
      uint64_t v69 = &v57[v67];
      *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
      v68[4] = v69[4];
      uint64_t v70 = v58[8];
      uint64_t v71 = &v56[v70];
      char v72 = &v57[v70];
      *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
      v71[4] = v72[4];
      uint64_t v73 = v58[9];
      uint64_t v74 = &v56[v73];
      uint64_t v75 = &v57[v73];
      *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
      v74[4] = v75[4];
      uint64_t v76 = v58[10];
      uint64_t v77 = &v56[v76];
      uint64_t v78 = &v57[v76];
      *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
      v77[4] = v78[4];
      (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(v56, 0LL, 1LL, v58);
    }
  }

  return a1;
}

uint64_t sub_1001F241C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v14(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v9 = a1 + a2[7];
  uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48LL))(v11, 1LL, v12);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v14)(v11, v4);
  }
  return result;
}

uint64_t sub_1001F2570(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C700);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  int v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1LL, v23))
  {
    uint64_t v25 = sub_100003A0C(&qword_10035C708);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    uint64_t v26 = v23[5];
    uint64_t v27 = &v21[v26];
    uint64_t v28 = &v22[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v23[6];
    char v30 = &v21[v29];
    uint64_t v31 = &v22[v29];
    *(_DWORD *)char v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = v23[7];
    uint64_t v33 = &v21[v32];
    uint64_t v34 = &v22[v32];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    uint64_t v35 = v23[8];
    uint64_t v36 = &v21[v35];
    uint64_t v37 = &v22[v35];
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0LL, 1LL, v23);
  }

  uint64_t v38 = a3[7];
  uint64_t v39 = (char *)(a1 + v38);
  uint64_t v40 = (char *)(a2 + v38);
  uint64_t v41 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v40, 1LL, v41))
  {
    uint64_t v43 = sub_100003A0C(&qword_10035C710);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v39, (uint64_t)v40, v6);
    uint64_t v44 = v41[5];
    uint64_t v45 = &v39[v44];
    uint64_t v46 = &v40[v44];
    *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
    v45[4] = v46[4];
    uint64_t v47 = v41[6];
    char v48 = &v39[v47];
    uint64_t v49 = &v40[v47];
    *(_DWORD *)char v48 = *(_DWORD *)v49;
    v48[4] = v49[4];
    uint64_t v50 = v41[7];
    uint64_t v51 = &v39[v50];
    uint64_t v52 = &v40[v50];
    *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
    (*(void (**)(char *, void, uint64_t, int *))(v42 + 56))(v39, 0LL, 1LL, v41);
  }

  uint64_t v53 = a3[8];
  uint64_t v54 = (char *)(a1 + v53);
  uint64_t v55 = (char *)(a2 + v53);
  char v56 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t v57 = *((void *)v56 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1LL, v56))
  {
    uint64_t v58 = sub_100003A0C(&qword_10035C718);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v54, (uint64_t)v55, v6);
    uint64_t v59 = v56[5];
    uint64_t v60 = &v54[v59];
    uint64_t v61 = &v55[v59];
    *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
    v60[4] = v61[4];
    uint64_t v62 = v56[6];
    uint64_t v63 = &v54[v62];
    uint64_t v64 = &v55[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    uint64_t v65 = v56[7];
    uint64_t v66 = &v54[v65];
    uint64_t v67 = &v55[v65];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    uint64_t v68 = v56[8];
    uint64_t v69 = &v54[v68];
    uint64_t v70 = &v55[v68];
    *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    uint64_t v71 = v56[9];
    char v72 = &v54[v71];
    uint64_t v73 = &v55[v71];
    *(_DWORD *)char v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    uint64_t v74 = v56[10];
    uint64_t v75 = &v54[v74];
    uint64_t v76 = &v55[v74];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    (*(void (**)(char *, void, uint64_t, int *))(v57 + 56))(v54, 0LL, 1LL, v56);
  }

  return a1;
}

uint64_t sub_1001F2980(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v165 = *(void *)(v6 - 8);
  v164 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 24);
  v164(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v8, v9, v6);
      uint64_t v15 = *(int *)(v10 + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[4];
      *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
      v16[4] = v18;
      uint64_t v19 = *(int *)(v10 + 24);
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[4];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v22;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    sub_100004090((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
LABEL_6:
    uint64_t v23 = sub_100003A0C(&qword_10035C700);
    memcpy(v8, v9, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  v164((uint64_t)v8, (uint64_t)v9, v6);
  uint64_t v104 = *(int *)(v10 + 20);
  v105 = &v8[v104];
  v106 = &v9[v104];
  char v107 = v106[4];
  *(_DWORD *)v105 = *(_DWORD *)v106;
  v105[4] = v107;
  uint64_t v108 = *(int *)(v10 + 24);
  v109 = &v8[v108];
  v110 = &v9[v108];
  char v111 = v110[4];
  *(_DWORD *)v109 = *(_DWORD *)v110;
  v109[4] = v111;
LABEL_7:
  uint64_t v24 = a3[6];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  uint64_t v27 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v28 = *((void *)v27 - 1);
  uint64_t v29 = *(uint64_t (**)(char *, uint64_t, int *))(v28 + 48);
  int v30 = v29(v25, 1LL, v27);
  int v31 = v29(v26, 1LL, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v25, v26, v6);
      uint64_t v32 = v27[5];
      uint64_t v33 = &v25[v32];
      uint64_t v34 = &v26[v32];
      char v35 = v34[4];
      *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
      v33[4] = v35;
      uint64_t v36 = v27[6];
      uint64_t v37 = &v25[v36];
      uint64_t v38 = &v26[v36];
      char v39 = v38[4];
      *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
      v37[4] = v39;
      uint64_t v40 = v27[7];
      uint64_t v41 = &v25[v40];
      uint64_t v42 = &v26[v40];
      char v43 = v42[4];
      *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
      v41[4] = v43;
      uint64_t v44 = v27[8];
      uint64_t v45 = &v25[v44];
      uint64_t v46 = &v26[v44];
      char v47 = v46[4];
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      v45[4] = v47;
      (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0LL, 1LL, v27);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v31)
  {
    sub_100004090((uint64_t)v25, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
LABEL_12:
    uint64_t v48 = sub_100003A0C(&qword_10035C708);
    memcpy(v25, v26, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_13;
  }

  v164((uint64_t)v25, (uint64_t)v26, v6);
  uint64_t v112 = v27[5];
  v113 = &v25[v112];
  v114 = &v26[v112];
  char v115 = v114[4];
  *(_DWORD *)v113 = *(_DWORD *)v114;
  v113[4] = v115;
  uint64_t v116 = v27[6];
  v117 = &v25[v116];
  v118 = &v26[v116];
  char v119 = v118[4];
  *(_DWORD *)v117 = *(_DWORD *)v118;
  v117[4] = v119;
  uint64_t v120 = v27[7];
  v121 = &v25[v120];
  v122 = &v26[v120];
  char v123 = v122[4];
  *(_DWORD *)v121 = *(_DWORD *)v122;
  v121[4] = v123;
  uint64_t v124 = v27[8];
  v125 = &v25[v124];
  v126 = &v26[v124];
  char v127 = v126[4];
  *(_DWORD *)v125 = *(_DWORD *)v126;
  v125[4] = v127;
LABEL_13:
  uint64_t v49 = a3[7];
  uint64_t v50 = (char *)(a1 + v49);
  uint64_t v51 = (char *)(a2 + v49);
  uint64_t v52 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v53 = *((void *)v52 - 1);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t, int *))(v53 + 48);
  int v55 = v54(v50, 1LL, v52);
  int v56 = v54(v51, 1LL, v52);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v50, v51, v6);
      uint64_t v57 = v52[5];
      uint64_t v58 = &v50[v57];
      uint64_t v59 = &v51[v57];
      char v60 = v59[4];
      *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
      v58[4] = v60;
      uint64_t v61 = v52[6];
      uint64_t v62 = &v50[v61];
      uint64_t v63 = &v51[v61];
      char v64 = v63[4];
      *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
      v62[4] = v64;
      uint64_t v65 = v52[7];
      uint64_t v66 = &v50[v65];
      uint64_t v67 = &v51[v65];
      char v68 = v67[4];
      *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
      v66[4] = v68;
      (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(v50, 0LL, 1LL, v52);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v56)
  {
    sub_100004090((uint64_t)v50, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
LABEL_18:
    uint64_t v69 = sub_100003A0C(&qword_10035C710);
    memcpy(v50, v51, *(void *)(*(void *)(v69 - 8) + 64LL));
    goto LABEL_19;
  }

  v164((uint64_t)v50, (uint64_t)v51, v6);
  uint64_t v128 = v52[5];
  v129 = &v50[v128];
  v130 = &v51[v128];
  char v131 = v130[4];
  *(_DWORD *)v129 = *(_DWORD *)v130;
  v129[4] = v131;
  uint64_t v132 = v52[6];
  v133 = &v50[v132];
  v134 = &v51[v132];
  char v135 = v134[4];
  *(_DWORD *)v133 = *(_DWORD *)v134;
  v133[4] = v135;
  uint64_t v136 = v52[7];
  v137 = &v50[v136];
  v138 = &v51[v136];
  char v139 = v138[4];
  *(_DWORD *)v137 = *(_DWORD *)v138;
  v137[4] = v139;
LABEL_19:
  uint64_t v70 = a3[8];
  uint64_t v71 = (char *)(a1 + v70);
  char v72 = (char *)(a2 + v70);
  uint64_t v73 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t v74 = *((void *)v73 - 1);
  uint64_t v75 = *(uint64_t (**)(char *, uint64_t, int *))(v74 + 48);
  int v76 = v75(v71, 1LL, v73);
  int v77 = v75(v72, 1LL, v73);
  if (!v76)
  {
    if (!v77)
    {
      v164((uint64_t)v71, (uint64_t)v72, v6);
      uint64_t v140 = v73[5];
      v141 = &v71[v140];
      v142 = &v72[v140];
      char v143 = v142[4];
      *(_DWORD *)v141 = *(_DWORD *)v142;
      v141[4] = v143;
      uint64_t v144 = v73[6];
      v145 = &v71[v144];
      v146 = &v72[v144];
      char v147 = v146[4];
      *(_DWORD *)v145 = *(_DWORD *)v146;
      v145[4] = v147;
      uint64_t v148 = v73[7];
      v149 = &v71[v148];
      v150 = &v72[v148];
      char v151 = v150[4];
      *(_DWORD *)v149 = *(_DWORD *)v150;
      v149[4] = v151;
      uint64_t v152 = v73[8];
      v153 = &v71[v152];
      v154 = &v72[v152];
      char v155 = v154[4];
      *(_DWORD *)v153 = *(_DWORD *)v154;
      v153[4] = v155;
      uint64_t v156 = v73[9];
      v157 = &v71[v156];
      v158 = &v72[v156];
      char v159 = v158[4];
      *(_DWORD *)v157 = *(_DWORD *)v158;
      v157[4] = v159;
      uint64_t v160 = v73[10];
      v161 = &v71[v160];
      v162 = &v72[v160];
      char v163 = v162[4];
      *(_DWORD *)v161 = *(_DWORD *)v162;
      v161[4] = v163;
      return a1;
    }

    sub_100004090((uint64_t)v71, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
    goto LABEL_24;
  }

  if (v77)
  {
LABEL_24:
    uint64_t v102 = sub_100003A0C(&qword_10035C718);
    memcpy(v71, v72, *(void *)(*(void *)(v102 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v71, v72, v6);
  uint64_t v78 = v73[5];
  uint64_t v79 = &v71[v78];
  char v80 = &v72[v78];
  char v81 = v80[4];
  *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
  v79[4] = v81;
  uint64_t v82 = v73[6];
  uint64_t v83 = &v71[v82];
  uint64_t v84 = &v72[v82];
  char v85 = v84[4];
  *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
  v83[4] = v85;
  uint64_t v86 = v73[7];
  uint64_t v87 = &v71[v86];
  uint64_t v88 = &v72[v86];
  char v89 = v88[4];
  *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
  v87[4] = v89;
  uint64_t v90 = v73[8];
  v91 = &v71[v90];
  uint64_t v92 = &v72[v90];
  char v93 = v92[4];
  *(_DWORD *)v91 = *(_DWORD *)v92;
  v91[4] = v93;
  uint64_t v94 = v73[9];
  char v95 = &v71[v94];
  uint64_t v96 = &v72[v94];
  char v97 = v96[4];
  *(_DWORD *)char v95 = *(_DWORD *)v96;
  v95[4] = v97;
  uint64_t v98 = v73[10];
  char v99 = &v71[v98];
  uint64_t v100 = &v72[v98];
  char v101 = v100[4];
  *(_DWORD *)char v99 = *(_DWORD *)v100;
  v99[4] = v101;
  (*(void (**)(char *, void, uint64_t, int *))(v74 + 56))(v71, 0LL, 1LL, v73);
  return a1;
}

uint64_t sub_1001F3074(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C700);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)char v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = (char *)(a1 + v20);
  char v22 = (char *)(a2 + v20);
  uint64_t v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v24 = *((void *)v23 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1LL, v23))
  {
    uint64_t v25 = sub_100003A0C(&qword_10035C708);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    uint64_t v26 = v23[5];
    uint64_t v27 = &v21[v26];
    uint64_t v28 = &v22[v26];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = v23[6];
    int v30 = &v21[v29];
    int v31 = &v22[v29];
    *(_DWORD *)int v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = v23[7];
    uint64_t v33 = &v21[v32];
    uint64_t v34 = &v22[v32];
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    uint64_t v35 = v23[8];
    uint64_t v36 = &v21[v35];
    uint64_t v37 = &v22[v35];
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0LL, 1LL, v23);
  }

  uint64_t v38 = a3[7];
  char v39 = (char *)(a1 + v38);
  uint64_t v40 = (char *)(a2 + v38);
  uint64_t v41 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v42 = *((void *)v41 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v42 + 48))(v40, 1LL, v41))
  {
    uint64_t v43 = sub_100003A0C(&qword_10035C710);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v39, (uint64_t)v40, v6);
    uint64_t v44 = v41[5];
    uint64_t v45 = &v39[v44];
    uint64_t v46 = &v40[v44];
    *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
    v45[4] = v46[4];
    uint64_t v47 = v41[6];
    uint64_t v48 = &v39[v47];
    uint64_t v49 = &v40[v47];
    *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
    v48[4] = v49[4];
    uint64_t v50 = v41[7];
    uint64_t v51 = &v39[v50];
    uint64_t v52 = &v40[v50];
    *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
    v51[4] = v52[4];
    (*(void (**)(char *, void, uint64_t, int *))(v42 + 56))(v39, 0LL, 1LL, v41);
  }

  uint64_t v53 = a3[8];
  uint64_t v54 = (char *)(a1 + v53);
  int v55 = (char *)(a2 + v53);
  int v56 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t v57 = *((void *)v56 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1LL, v56))
  {
    uint64_t v58 = sub_100003A0C(&qword_10035C718);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v54, (uint64_t)v55, v6);
    uint64_t v59 = v56[5];
    char v60 = &v54[v59];
    uint64_t v61 = &v55[v59];
    *(_DWORD *)char v60 = *(_DWORD *)v61;
    v60[4] = v61[4];
    uint64_t v62 = v56[6];
    uint64_t v63 = &v54[v62];
    char v64 = &v55[v62];
    *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
    v63[4] = v64[4];
    uint64_t v65 = v56[7];
    uint64_t v66 = &v54[v65];
    uint64_t v67 = &v55[v65];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v67[4];
    uint64_t v68 = v56[8];
    uint64_t v69 = &v54[v68];
    uint64_t v70 = &v55[v68];
    *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
    v69[4] = v70[4];
    uint64_t v71 = v56[9];
    char v72 = &v54[v71];
    uint64_t v73 = &v55[v71];
    *(_DWORD *)char v72 = *(_DWORD *)v73;
    v72[4] = v73[4];
    uint64_t v74 = v56[10];
    uint64_t v75 = &v54[v74];
    int v76 = &v55[v74];
    *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
    v75[4] = v76[4];
    (*(void (**)(char *, void, uint64_t, int *))(v57 + 56))(v54, 0LL, 1LL, v56);
  }

  return a1;
}

uint64_t sub_1001F3484(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v135 = *(void *)(v6 - 8);
  v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 40);
  v134(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v8, v9, v6);
      uint64_t v15 = *(int *)(v10 + 20);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
      v16[4] = v17[4];
      uint64_t v18 = *(int *)(v10 + 24);
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      v19[4] = v20[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    sub_100004090((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
LABEL_6:
    uint64_t v21 = sub_100003A0C(&qword_10035C700);
    memcpy(v8, v9, *(void *)(*(void *)(v21 - 8) + 64LL));
    goto LABEL_7;
  }

  v134((uint64_t)v8, (uint64_t)v9, v6);
  uint64_t v89 = *(int *)(v10 + 20);
  uint64_t v90 = &v8[v89];
  v91 = &v9[v89];
  *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
  v90[4] = v91[4];
  uint64_t v92 = *(int *)(v10 + 24);
  char v93 = &v8[v92];
  uint64_t v94 = &v9[v92];
  *(_DWORD *)char v93 = *(_DWORD *)v94;
  v93[4] = v94[4];
LABEL_7:
  uint64_t v22 = a3[6];
  uint64_t v23 = (char *)(a1 + v22);
  uint64_t v24 = (char *)(a2 + v22);
  uint64_t v25 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v26 = *((void *)v25 - 1);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, int *))(v26 + 48);
  int v28 = v27(v23, 1LL, v25);
  int v29 = v27(v24, 1LL, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v23, v24, v6);
      uint64_t v30 = v25[5];
      int v31 = &v23[v30];
      uint64_t v32 = &v24[v30];
      *(_DWORD *)int v31 = *(_DWORD *)v32;
      v31[4] = v32[4];
      uint64_t v33 = v25[6];
      uint64_t v34 = &v23[v33];
      uint64_t v35 = &v24[v33];
      *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
      v34[4] = v35[4];
      uint64_t v36 = v25[7];
      uint64_t v37 = &v23[v36];
      uint64_t v38 = &v24[v36];
      *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
      v37[4] = v38[4];
      uint64_t v39 = v25[8];
      uint64_t v40 = &v23[v39];
      uint64_t v41 = &v24[v39];
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      v40[4] = v41[4];
      (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0LL, 1LL, v25);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v29)
  {
    sub_100004090((uint64_t)v23, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
LABEL_12:
    uint64_t v42 = sub_100003A0C(&qword_10035C708);
    memcpy(v23, v24, *(void *)(*(void *)(v42 - 8) + 64LL));
    goto LABEL_13;
  }

  v134((uint64_t)v23, (uint64_t)v24, v6);
  uint64_t v95 = v25[5];
  uint64_t v96 = &v23[v95];
  char v97 = &v24[v95];
  *(_DWORD *)uint64_t v96 = *(_DWORD *)v97;
  v96[4] = v97[4];
  uint64_t v98 = v25[6];
  char v99 = &v23[v98];
  uint64_t v100 = &v24[v98];
  *(_DWORD *)char v99 = *(_DWORD *)v100;
  v99[4] = v100[4];
  uint64_t v101 = v25[7];
  uint64_t v102 = &v23[v101];
  char v103 = &v24[v101];
  *(_DWORD *)uint64_t v102 = *(_DWORD *)v103;
  v102[4] = v103[4];
  uint64_t v104 = v25[8];
  v105 = &v23[v104];
  v106 = &v24[v104];
  *(_DWORD *)v105 = *(_DWORD *)v106;
  v105[4] = v106[4];
LABEL_13:
  uint64_t v43 = a3[7];
  uint64_t v44 = (char *)(a1 + v43);
  uint64_t v45 = (char *)(a2 + v43);
  uint64_t v46 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v47 = *((void *)v46 - 1);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, int *))(v47 + 48);
  int v49 = v48(v44, 1LL, v46);
  int v50 = v48(v45, 1LL, v46);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v44, v45, v6);
      uint64_t v51 = v46[5];
      uint64_t v52 = &v44[v51];
      uint64_t v53 = &v45[v51];
      *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
      v52[4] = v53[4];
      uint64_t v54 = v46[6];
      int v55 = &v44[v54];
      int v56 = &v45[v54];
      *(_DWORD *)int v55 = *(_DWORD *)v56;
      v55[4] = v56[4];
      uint64_t v57 = v46[7];
      uint64_t v58 = &v44[v57];
      uint64_t v59 = &v45[v57];
      *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
      v58[4] = v59[4];
      (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0LL, 1LL, v46);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v50)
  {
    sub_100004090((uint64_t)v44, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
LABEL_18:
    uint64_t v60 = sub_100003A0C(&qword_10035C710);
    memcpy(v44, v45, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_19;
  }

  v134((uint64_t)v44, (uint64_t)v45, v6);
  uint64_t v107 = v46[5];
  uint64_t v108 = &v44[v107];
  v109 = &v45[v107];
  *(_DWORD *)uint64_t v108 = *(_DWORD *)v109;
  v108[4] = v109[4];
  uint64_t v110 = v46[6];
  char v111 = &v44[v110];
  uint64_t v112 = &v45[v110];
  *(_DWORD *)char v111 = *(_DWORD *)v112;
  v111[4] = v112[4];
  uint64_t v113 = v46[7];
  v114 = &v44[v113];
  char v115 = &v45[v113];
  *(_DWORD *)v114 = *(_DWORD *)v115;
  v114[4] = v115[4];
LABEL_19:
  uint64_t v61 = a3[8];
  uint64_t v62 = (char *)(a1 + v61);
  uint64_t v63 = (char *)(a2 + v61);
  char v64 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t v65 = *((void *)v64 - 1);
  uint64_t v66 = *(uint64_t (**)(char *, uint64_t, int *))(v65 + 48);
  int v67 = v66(v62, 1LL, v64);
  int v68 = v66(v63, 1LL, v64);
  if (!v67)
  {
    if (!v68)
    {
      v134((uint64_t)v62, (uint64_t)v63, v6);
      uint64_t v116 = v64[5];
      v117 = &v62[v116];
      v118 = &v63[v116];
      *(_DWORD *)v117 = *(_DWORD *)v118;
      v117[4] = v118[4];
      uint64_t v119 = v64[6];
      uint64_t v120 = &v62[v119];
      v121 = &v63[v119];
      *(_DWORD *)uint64_t v120 = *(_DWORD *)v121;
      v120[4] = v121[4];
      uint64_t v122 = v64[7];
      char v123 = &v62[v122];
      uint64_t v124 = &v63[v122];
      *(_DWORD *)char v123 = *(_DWORD *)v124;
      v123[4] = v124[4];
      uint64_t v125 = v64[8];
      v126 = &v62[v125];
      char v127 = &v63[v125];
      *(_DWORD *)v126 = *(_DWORD *)v127;
      v126[4] = v127[4];
      uint64_t v128 = v64[9];
      v129 = &v62[v128];
      v130 = &v63[v128];
      *(_DWORD *)v129 = *(_DWORD *)v130;
      v129[4] = v130[4];
      uint64_t v131 = v64[10];
      uint64_t v132 = &v62[v131];
      v133 = &v63[v131];
      *(_DWORD *)uint64_t v132 = *(_DWORD *)v133;
      v132[4] = v133[4];
      return a1;
    }

    sub_100004090((uint64_t)v62, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
    goto LABEL_24;
  }

  if (v68)
  {
LABEL_24:
    uint64_t v87 = sub_100003A0C(&qword_10035C718);
    memcpy(v62, v63, *(void *)(*(void *)(v87 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v135 + 32))(v62, v63, v6);
  uint64_t v69 = v64[5];
  uint64_t v70 = &v62[v69];
  uint64_t v71 = &v63[v69];
  *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
  v70[4] = v71[4];
  uint64_t v72 = v64[6];
  uint64_t v73 = &v62[v72];
  uint64_t v74 = &v63[v72];
  *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
  v73[4] = v74[4];
  uint64_t v75 = v64[7];
  int v76 = &v62[v75];
  int v77 = &v63[v75];
  *(_DWORD *)int v76 = *(_DWORD *)v77;
  v76[4] = v77[4];
  uint64_t v78 = v64[8];
  uint64_t v79 = &v62[v78];
  char v80 = &v63[v78];
  *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
  v79[4] = v80[4];
  uint64_t v81 = v64[9];
  uint64_t v82 = &v62[v81];
  uint64_t v83 = &v63[v81];
  *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
  v82[4] = v83[4];
  uint64_t v84 = v64[10];
  char v85 = &v62[v84];
  uint64_t v86 = &v63[v84];
  *(_DWORD *)char v85 = *(_DWORD *)v86;
  v85[4] = v86[4];
  (*(void (**)(char *, void, uint64_t, int *))(v65 + 56))(v62, 0LL, 1LL, v64);
  return a1;
}

uint64_t sub_1001F3B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F3B84);
}

uint64_t sub_1001F3B84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C700);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[5];
    }

    else
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C708);
      uint64_t v12 = *(void *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[6];
      }

      else
      {
        uint64_t v15 = sub_100003A0C(&qword_10035C710);
        uint64_t v12 = *(void *)(v15 - 8);
        if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
        {
          uint64_t v8 = v15;
          uint64_t v13 = a3[7];
        }

        else
        {
          uint64_t v8 = sub_100003A0C(&qword_10035C718);
          uint64_t v12 = *(void *)(v8 - 8);
          uint64_t v13 = a3[8];
        }
      }
    }

    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_1001F3C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F3C80);
}

uint64_t sub_1001F3C80(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C700);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v15 = a4[5];
    }

    else
    {
      uint64_t v16 = sub_100003A0C(&qword_10035C708);
      uint64_t v14 = *(void *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v15 = a4[6];
      }

      else
      {
        uint64_t v17 = sub_100003A0C(&qword_10035C710);
        uint64_t v14 = *(void *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v15 = a4[7];
        }

        else
        {
          uint64_t v10 = sub_100003A0C(&qword_10035C718);
          uint64_t v14 = *(void *)(v10 - 8);
          uint64_t v15 = a4[8];
        }
      }
    }

    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001F3D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v12[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_10035F5F0, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
    if (v5 <= 0x3F)
    {
      v12[1] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_10035F5F8, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
      if (v7 <= 0x3F)
      {
        v12[2] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC( 319LL,  &qword_10035F600,  type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
        if (v9 <= 0x3F)
        {
          v12[3] = *(void *)(v8 - 8) + 64LL;
          sub_1000119EC( 319LL,  (unint64_t *)&unk_10035F608,  type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
          if (v11 <= 0x3F)
          {
            v12[4] = *(void *)(v10 - 8) + 64LL;
            swift_initStructMetadata(a1, 256LL, 5LL, v12, a1 + 16);
          }
        }
      }
    }
  }

char *sub_1001F3E90(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    uint64_t v10 = &a1[v9];
    unint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0LL);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C720);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      uint64_t v86 = v13;
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      uint64_t v19 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1LL, v19))
      {
        uint64_t v21 = sub_100003A0C(&qword_10035C700);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64LL));
      }

      else
      {
        v8(v17, v18, v7);
        uint64_t v22 = *(int *)(v19 + 20);
        uint64_t v23 = &v17[v22];
        uint64_t v24 = &v18[v22];
        *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
        v23[4] = v24[4];
        uint64_t v25 = *(int *)(v19 + 24);
        uint64_t v26 = &v17[v25];
        uint64_t v27 = &v18[v25];
        *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
        v26[4] = v27[4];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0LL, 1LL, v19);
      }

      uint64_t v28 = v12[6];
      int v29 = &v10[v28];
      uint64_t v30 = &v11[v28];
      int v31 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
      uint64_t v32 = *((void *)v31 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1LL, v31))
      {
        uint64_t v33 = sub_100003A0C(&qword_10035C708);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64LL));
      }

      else
      {
        v8(v29, v30, v7);
        uint64_t v34 = v31[5];
        uint64_t v35 = &v29[v34];
        uint64_t v36 = &v30[v34];
        *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
        v35[4] = v36[4];
        uint64_t v37 = v31[6];
        uint64_t v38 = &v29[v37];
        uint64_t v39 = &v30[v37];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        uint64_t v40 = v31[7];
        uint64_t v41 = &v29[v40];
        uint64_t v42 = &v30[v40];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        uint64_t v43 = v31[8];
        uint64_t v44 = &v29[v43];
        uint64_t v45 = &v30[v43];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0LL, 1LL, v31);
      }

      uint64_t v46 = v12[7];
      uint64_t v47 = &v10[v46];
      uint64_t v48 = &v11[v46];
      int v49 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
      uint64_t v50 = *((void *)v49 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v50 + 48))(v48, 1LL, v49))
      {
        uint64_t v51 = sub_100003A0C(&qword_10035C710);
        memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64LL));
      }

      else
      {
        v8(v47, v48, v7);
        uint64_t v52 = v49[5];
        uint64_t v53 = &v47[v52];
        uint64_t v54 = &v48[v52];
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        v53[4] = v54[4];
        uint64_t v55 = v49[6];
        int v56 = &v47[v55];
        uint64_t v57 = &v48[v55];
        *(_DWORD *)int v56 = *(_DWORD *)v57;
        v56[4] = v57[4];
        uint64_t v58 = v49[7];
        uint64_t v59 = &v47[v58];
        uint64_t v60 = &v48[v58];
        *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
        v59[4] = v60[4];
        (*(void (**)(char *, void, uint64_t, int *))(v50 + 56))(v47, 0LL, 1LL, v49);
      }

      uint64_t v61 = v12[8];
      uint64_t v62 = &v10[v61];
      uint64_t v63 = &v11[v61];
      char v64 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
      uint64_t v65 = *((void *)v64 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v65 + 48))(v63, 1LL, v64))
      {
        uint64_t v66 = sub_100003A0C(&qword_10035C718);
        memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64LL));
      }

      else
      {
        v8(v62, v63, v7);
        uint64_t v67 = v64[5];
        int v68 = &v62[v67];
        uint64_t v69 = &v63[v67];
        *(_DWORD *)int v68 = *(_DWORD *)v69;
        v68[4] = v69[4];
        uint64_t v70 = v64[6];
        uint64_t v71 = &v62[v70];
        uint64_t v72 = &v63[v70];
        *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
        v71[4] = v72[4];
        uint64_t v73 = v64[7];
        uint64_t v74 = &v62[v73];
        uint64_t v75 = &v63[v73];
        *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
        v74[4] = v75[4];
        uint64_t v76 = v64[8];
        int v77 = &v62[v76];
        uint64_t v78 = &v63[v76];
        *(_DWORD *)int v77 = *(_DWORD *)v78;
        v77[4] = v78[4];
        uint64_t v79 = v64[9];
        char v80 = &v62[v79];
        uint64_t v81 = &v63[v79];
        *(_DWORD *)char v80 = *(_DWORD *)v81;
        v80[4] = v81[4];
        uint64_t v82 = v64[10];
        uint64_t v83 = &v62[v82];
        uint64_t v84 = &v63[v82];
        *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
        v83[4] = v84[4];
        (*(void (**)(char *, void, uint64_t, int *))(v65 + 56))(v62, 0LL, 1LL, v64);
      }

      (*(void (**)(char *, void, uint64_t, int *))(v86 + 56))(v10, 0LL, 1LL, v12);
    }
  }

  return a1;
}

uint64_t sub_1001F4364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v16(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result)
  {
    v16(v5, v4);
    uint64_t v8 = v5 + v6[5];
    uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
    uint64_t v10 = v5 + v6[6];
    uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
    uint64_t v12 = v5 + v6[7];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
    uint64_t v14 = v5 + v6[8];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48LL))(v14, 1LL, v15);
    if (!(_DWORD)result) {
      return ((uint64_t (*)(uint64_t, uint64_t))v16)(v14, v4);
    }
  }

  return result;
}

uint64_t sub_1001F44F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C720);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v84 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1LL, v17))
    {
      uint64_t v19 = sub_100003A0C(&qword_10035C700);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      uint64_t v20 = *(int *)(v17 + 20);
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      uint64_t v23 = *(int *)(v17 + 24);
      uint64_t v24 = &v15[v23];
      uint64_t v25 = &v16[v23];
      *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0LL, 1LL, v17);
    }

    uint64_t v26 = v11[6];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    int v29 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
    uint64_t v30 = *((void *)v29 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1LL, v29))
    {
      uint64_t v31 = sub_100003A0C(&qword_10035C708);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v27, (uint64_t)v28, v6);
      uint64_t v32 = v29[5];
      uint64_t v33 = &v27[v32];
      uint64_t v34 = &v28[v32];
      *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      uint64_t v35 = v29[6];
      uint64_t v36 = &v27[v35];
      uint64_t v37 = &v28[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      uint64_t v38 = v29[7];
      uint64_t v39 = &v27[v38];
      uint64_t v40 = &v28[v38];
      *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      uint64_t v41 = v29[8];
      uint64_t v42 = &v27[v41];
      uint64_t v43 = &v28[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0LL, 1LL, v29);
    }

    uint64_t v44 = v11[7];
    uint64_t v45 = &v9[v44];
    uint64_t v46 = &v10[v44];
    uint64_t v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
    uint64_t v48 = *((void *)v47 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1LL, v47))
    {
      uint64_t v49 = sub_100003A0C(&qword_10035C710);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v45, (uint64_t)v46, v6);
      uint64_t v50 = v47[5];
      uint64_t v51 = &v45[v50];
      uint64_t v52 = &v46[v50];
      *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
      v51[4] = v52[4];
      uint64_t v53 = v47[6];
      uint64_t v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
      v54[4] = v55[4];
      uint64_t v56 = v47[7];
      uint64_t v57 = &v45[v56];
      uint64_t v58 = &v46[v56];
      *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
      v57[4] = v58[4];
      (*(void (**)(char *, void, uint64_t, int *))(v48 + 56))(v45, 0LL, 1LL, v47);
    }

    uint64_t v59 = v11[8];
    uint64_t v60 = &v9[v59];
    uint64_t v61 = &v10[v59];
    uint64_t v62 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
    uint64_t v63 = *((void *)v62 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v61, 1LL, v62))
    {
      uint64_t v64 = sub_100003A0C(&qword_10035C718);
      memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v60, (uint64_t)v61, v6);
      uint64_t v65 = v62[5];
      uint64_t v66 = &v60[v65];
      uint64_t v67 = &v61[v65];
      *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
      v66[4] = v67[4];
      uint64_t v68 = v62[6];
      uint64_t v69 = &v60[v68];
      uint64_t v70 = &v61[v68];
      *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
      v69[4] = v70[4];
      uint64_t v71 = v62[7];
      uint64_t v72 = &v60[v71];
      uint64_t v73 = &v61[v71];
      *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
      v72[4] = v73[4];
      uint64_t v74 = v62[8];
      uint64_t v75 = &v60[v74];
      uint64_t v76 = &v61[v74];
      *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
      v75[4] = v76[4];
      uint64_t v77 = v62[9];
      uint64_t v78 = &v60[v77];
      uint64_t v79 = &v61[v77];
      *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
      v78[4] = v79[4];
      uint64_t v80 = v62[10];
      uint64_t v81 = &v60[v80];
      uint64_t v82 = &v61[v80];
      *(_DWORD *)uint64_t v81 = *(_DWORD *)v82;
      v81[4] = v82[4];
      (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(v60, 0LL, 1LL, v62);
    }

    (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v9, 0LL, 1LL, v11);
  }

  return a1;
}

char *sub_1001F49A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (uint64_t)&a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0LL);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14((uint64_t)v11, 1LL, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_100004090(v10, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
      goto LABEL_7;
    }

    uint64_t v260 = v7;
    v265 = v8;
    v8((char *)v10, v11, v6);
    uint64_t v27 = v12[5];
    uint64_t v28 = (char *)(v10 + v27);
    int v29 = &v11[v27];
    uint64_t v30 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
    uint64_t v259 = *(void *)(v30 - 8);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v259 + 48);
    int v32 = v31(v28, 1LL, v30);
    int v33 = v31(v29, 1LL, v30);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v28, v29, v6);
        uint64_t v34 = *(int *)(v30 + 20);
        uint64_t v35 = &v28[v34];
        uint64_t v36 = &v29[v34];
        char v37 = v36[4];
        *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
        v35[4] = v37;
        uint64_t v38 = *(int *)(v30 + 24);
        uint64_t v39 = &v28[v38];
        uint64_t v40 = &v29[v38];
        char v41 = v40[4];
        *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
        v39[4] = v41;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v259 + 56))(v28, 0LL, 1LL, v30);
        goto LABEL_27;
      }
    }

    else
    {
      if (!v33)
      {
        v265(v28, v29, v6);
        uint64_t v199 = *(int *)(v30 + 20);
        v200 = &v28[v199];
        v201 = &v29[v199];
        char v202 = v201[4];
        *(_DWORD *)v200 = *(_DWORD *)v201;
        v200[4] = v202;
        uint64_t v203 = *(int *)(v30 + 24);
        v204 = &v28[v203];
        v205 = &v29[v203];
        char v206 = v205[4];
        *(_DWORD *)v204 = *(_DWORD *)v205;
        v204[4] = v206;
LABEL_27:
        uint64_t v122 = v12[6];
        char v123 = (char *)(v10 + v122);
        uint64_t v124 = &v11[v122];
        uint64_t v125 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
        __srca = (void *)*((void *)v125 - 1);
        v126 = (uint64_t (*)(char *, uint64_t, int *))__srca[6];
        int v127 = v126(v123, 1LL, v125);
        int v128 = v126(v124, 1LL, v125);
        if (v127)
        {
          if (!v128)
          {
            (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v123, v124, v6);
            uint64_t v129 = v125[5];
            v130 = &v123[v129];
            uint64_t v131 = &v124[v129];
            char v132 = v131[4];
            *(_DWORD *)v130 = *(_DWORD *)v131;
            v130[4] = v132;
            uint64_t v133 = v125[6];
            v134 = &v123[v133];
            uint64_t v135 = &v124[v133];
            char v136 = v135[4];
            *(_DWORD *)v134 = *(_DWORD *)v135;
            v134[4] = v136;
            uint64_t v137 = v125[7];
            v138 = &v123[v137];
            char v139 = &v124[v137];
            char v140 = v139[4];
            *(_DWORD *)v138 = *(_DWORD *)v139;
            v138[4] = v140;
            uint64_t v141 = v125[8];
            v142 = &v123[v141];
            char v143 = &v124[v141];
            char v144 = v143[4];
            *(_DWORD *)v142 = *(_DWORD *)v143;
            v142[4] = v144;
            ((void (*)(char *, void, uint64_t, int *))__srca[7])(v123, 0LL, 1LL, v125);
            goto LABEL_33;
          }
        }

        else
        {
          if (!v128)
          {
            v265(v123, v124, v6);
            uint64_t v207 = v125[5];
            v208 = &v123[v207];
            v209 = &v124[v207];
            char v210 = v209[4];
            *(_DWORD *)v208 = *(_DWORD *)v209;
            v208[4] = v210;
            uint64_t v211 = v125[6];
            v212 = &v123[v211];
            v213 = &v124[v211];
            char v214 = v213[4];
            *(_DWORD *)v212 = *(_DWORD *)v213;
            v212[4] = v214;
            uint64_t v215 = v125[7];
            v216 = &v123[v215];
            v217 = &v124[v215];
            char v218 = v217[4];
            *(_DWORD *)v216 = *(_DWORD *)v217;
            v216[4] = v218;
            uint64_t v219 = v125[8];
            v220 = &v123[v219];
            v221 = &v124[v219];
            char v222 = v221[4];
            *(_DWORD *)v220 = *(_DWORD *)v221;
            v220[4] = v222;
LABEL_33:
            uint64_t v146 = v12[7];
            char v147 = (char *)(v10 + v146);
            uint64_t v148 = &v11[v146];
            v149 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
            __srcb = (void *)*((void *)v149 - 1);
            v150 = (uint64_t (*)(char *, uint64_t, int *))__srcb[6];
            int v151 = v150(v147, 1LL, v149);
            int v152 = v150(v148, 1LL, v149);
            if (v151)
            {
              if (!v152)
              {
                (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v147, v148, v6);
                uint64_t v153 = v149[5];
                v154 = &v147[v153];
                char v155 = &v148[v153];
                char v156 = v155[4];
                *(_DWORD *)v154 = *(_DWORD *)v155;
                v154[4] = v156;
                uint64_t v157 = v149[6];
                v158 = &v147[v157];
                char v159 = &v148[v157];
                char v160 = v159[4];
                *(_DWORD *)v158 = *(_DWORD *)v159;
                v158[4] = v160;
                uint64_t v161 = v149[7];
                v162 = &v147[v161];
                char v163 = &v148[v161];
                char v164 = v163[4];
                *(_DWORD *)v162 = *(_DWORD *)v163;
                v162[4] = v164;
                ((void (*)(char *, void, uint64_t, int *))__srcb[7])(v147, 0LL, 1LL, v149);
LABEL_39:
                v166 = (void (*)(uint64_t, char *, uint64_t))v265;
LABEL_40:
                uint64_t v167 = v12[8];
                uint64_t v168 = v10 + v167;
                v169 = &v11[v167];
                v170 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
                uint64_t v171 = *((void *)v170 - 1);
                v172 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v171 + 48);
                int v173 = v172(v168, 1LL, v170);
                int v174 = v172((uint64_t)v169, 1LL, v170);
                if (v173)
                {
                  if (!v174)
                  {
                    (*(void (**)(uint64_t, char *, uint64_t))(v260 + 16))(v168, v169, v6);
                    uint64_t v175 = v170[5];
                    uint64_t v176 = v168 + v175;
                    v177 = &v169[v175];
                    char v178 = v177[4];
                    *(_DWORD *)uint64_t v176 = *(_DWORD *)v177;
                    *(_BYTE *)(v176 + 4) = v178;
                    uint64_t v179 = v170[6];
                    uint64_t v180 = v168 + v179;
                    v181 = &v169[v179];
                    char v182 = v181[4];
                    *(_DWORD *)uint64_t v180 = *(_DWORD *)v181;
                    *(_BYTE *)(v180 + 4) = v182;
                    uint64_t v183 = v170[7];
                    uint64_t v184 = v168 + v183;
                    v185 = &v169[v183];
                    char v186 = v185[4];
                    *(_DWORD *)uint64_t v184 = *(_DWORD *)v185;
                    *(_BYTE *)(v184 + 4) = v186;
                    uint64_t v187 = v170[8];
                    uint64_t v188 = v168 + v187;
                    v189 = &v169[v187];
                    char v190 = v189[4];
                    *(_DWORD *)uint64_t v188 = *(_DWORD *)v189;
                    *(_BYTE *)(v188 + 4) = v190;
                    uint64_t v191 = v170[9];
                    uint64_t v192 = v168 + v191;
                    v193 = &v169[v191];
                    char v194 = v193[4];
                    *(_DWORD *)uint64_t v192 = *(_DWORD *)v193;
                    *(_BYTE *)(v192 + 4) = v194;
                    uint64_t v195 = v170[10];
                    uint64_t v196 = v168 + v195;
                    v197 = &v169[v195];
                    char v198 = v197[4];
                    *(_DWORD *)uint64_t v196 = *(_DWORD *)v197;
                    *(_BYTE *)(v196 + 4) = v198;
                    (*(void (**)(uint64_t, void, uint64_t, int *))(v171 + 56))(v168, 0LL, 1LL, v170);
                    return a1;
                  }
                }

                else
                {
                  if (!v174)
                  {
                    v166(v168, v169, v6);
                    uint64_t v235 = v170[5];
                    uint64_t v236 = v168 + v235;
                    v237 = &v169[v235];
                    char v238 = v237[4];
                    *(_DWORD *)uint64_t v236 = *(_DWORD *)v237;
                    *(_BYTE *)(v236 + 4) = v238;
                    uint64_t v239 = v170[6];
                    uint64_t v240 = v168 + v239;
                    v241 = &v169[v239];
                    char v242 = v241[4];
                    *(_DWORD *)uint64_t v240 = *(_DWORD *)v241;
                    *(_BYTE *)(v240 + 4) = v242;
                    uint64_t v243 = v170[7];
                    uint64_t v244 = v168 + v243;
                    v245 = &v169[v243];
                    char v246 = v245[4];
                    *(_DWORD *)uint64_t v244 = *(_DWORD *)v245;
                    *(_BYTE *)(v244 + 4) = v246;
                    uint64_t v247 = v170[8];
                    uint64_t v248 = v168 + v247;
                    v249 = &v169[v247];
                    char v250 = v249[4];
                    *(_DWORD *)uint64_t v248 = *(_DWORD *)v249;
                    *(_BYTE *)(v248 + 4) = v250;
                    uint64_t v251 = v170[9];
                    uint64_t v252 = v168 + v251;
                    v253 = &v169[v251];
                    char v254 = v253[4];
                    *(_DWORD *)uint64_t v252 = *(_DWORD *)v253;
                    *(_BYTE *)(v252 + 4) = v254;
                    uint64_t v255 = v170[10];
                    uint64_t v256 = v168 + v255;
                    v257 = &v169[v255];
                    char v258 = v257[4];
                    *(_DWORD *)uint64_t v256 = *(_DWORD *)v257;
                    *(_BYTE *)(v256 + 4) = v258;
                    return a1;
                  }

                  sub_100004090(v168, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
                }

                size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C718) - 8) + 64LL);
                uint64_t v25 = (void *)v168;
                uint64_t v26 = v169;
                goto LABEL_8;
              }
            }

            else
            {
              if (!v152)
              {
                v166 = (void (*)(uint64_t, char *, uint64_t))v265;
                v265(v147, v148, v6);
                uint64_t v223 = v149[5];
                v224 = &v147[v223];
                v225 = &v148[v223];
                char v226 = v225[4];
                *(_DWORD *)v224 = *(_DWORD *)v225;
                v224[4] = v226;
                uint64_t v227 = v149[6];
                v228 = &v147[v227];
                v229 = &v148[v227];
                char v230 = v229[4];
                *(_DWORD *)v228 = *(_DWORD *)v229;
                v228[4] = v230;
                uint64_t v231 = v149[7];
                v232 = &v147[v231];
                v233 = &v148[v231];
                char v234 = v233[4];
                *(_DWORD *)v232 = *(_DWORD *)v233;
                v232[4] = v234;
                goto LABEL_40;
              }

              sub_100004090((uint64_t)v147, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
            }

            uint64_t v165 = sub_100003A0C(&qword_10035C710);
            memcpy(v147, v148, *(void *)(*(void *)(v165 - 8) + 64LL));
            goto LABEL_39;
          }

          sub_100004090((uint64_t)v123, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
        }

        uint64_t v145 = sub_100003A0C(&qword_10035C708);
        memcpy(v123, v124, *(void *)(*(void *)(v145 - 8) + 64LL));
        goto LABEL_33;
      }

      sub_100004090((uint64_t)v28, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
    }

    uint64_t v121 = sub_100003A0C(&qword_10035C700);
    memcpy(v28, v29, *(void *)(*(void *)(v121 - 8) + 64LL));
    goto LABEL_27;
  }

  if (v16)
  {
LABEL_7:
    size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C720) - 8) + 64LL);
    uint64_t v25 = (void *)v10;
    uint64_t v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }

  __src = a1;
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  v17(v10, v11, v6);
  uint64_t v18 = v12[5];
  uint64_t v19 = (char *)(v10 + v18);
  uint64_t v20 = &v11[v18];
  uint64_t v21 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  v264 = (void (*)(char *, char *, uint64_t))v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21))
  {
    uint64_t v23 = sub_100003A0C(&qword_10035C700);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    v17((uint64_t)v19, v20, v6);
    uint64_t v42 = *(int *)(v21 + 20);
    uint64_t v43 = &v19[v42];
    uint64_t v44 = &v20[v42];
    char v45 = v44[4];
    *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
    v43[4] = v45;
    uint64_t v46 = *(int *)(v21 + 24);
    uint64_t v47 = &v19[v46];
    uint64_t v48 = &v20[v46];
    char v49 = v48[4];
    *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
    v47[4] = v49;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0LL, 1LL, v21);
  }

  uint64_t v50 = v12[6];
  uint64_t v51 = (char *)(v10 + v50);
  uint64_t v52 = &v11[v50];
  uint64_t v53 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v54 = *((void *)v53 - 1);
  a1 = __src;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v52, 1LL, v53))
  {
    uint64_t v55 = sub_100003A0C(&qword_10035C708);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64LL));
  }

  else
  {
    v264(v51, v52, v6);
    uint64_t v56 = v53[5];
    uint64_t v57 = &v51[v56];
    uint64_t v58 = &v52[v56];
    char v59 = v58[4];
    *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
    v57[4] = v59;
    uint64_t v60 = v53[6];
    uint64_t v61 = &v51[v60];
    uint64_t v62 = &v52[v60];
    char v63 = v62[4];
    *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
    v61[4] = v63;
    uint64_t v64 = v53[7];
    uint64_t v65 = &v51[v64];
    uint64_t v66 = &v52[v64];
    char v67 = v66[4];
    *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
    v65[4] = v67;
    uint64_t v68 = v53[8];
    uint64_t v69 = &v51[v68];
    uint64_t v70 = &v52[v68];
    char v71 = v70[4];
    *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
    v69[4] = v71;
    (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v51, 0LL, 1LL, v53);
  }

  uint64_t v72 = v12[7];
  uint64_t v73 = (char *)(v10 + v72);
  uint64_t v74 = &v11[v72];
  uint64_t v75 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v76 = *((void *)v75 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v76 + 48))(v74, 1LL, v75))
  {
    uint64_t v77 = sub_100003A0C(&qword_10035C710);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64LL));
  }

  else
  {
    v264(v73, v74, v6);
    uint64_t v78 = v75[5];
    uint64_t v79 = &v73[v78];
    uint64_t v80 = &v74[v78];
    char v81 = v80[4];
    *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
    v79[4] = v81;
    uint64_t v82 = v75[6];
    uint64_t v83 = &v73[v82];
    uint64_t v84 = &v74[v82];
    char v85 = v84[4];
    *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
    v83[4] = v85;
    uint64_t v86 = v75[7];
    uint64_t v87 = &v73[v86];
    uint64_t v88 = &v74[v86];
    char v89 = v88[4];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
    v87[4] = v89;
    (*(void (**)(char *, void, uint64_t, int *))(v76 + 56))(v73, 0LL, 1LL, v75);
  }

  uint64_t v90 = v12[8];
  v91 = (char *)(v10 + v90);
  uint64_t v92 = &v11[v90];
  char v93 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t v94 = *((void *)v93 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v94 + 48))(v92, 1LL, v93))
  {
    uint64_t v95 = sub_100003A0C(&qword_10035C718);
    memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64LL));
  }

  else
  {
    v264(v91, v92, v6);
    uint64_t v96 = v93[5];
    char v97 = &v91[v96];
    uint64_t v98 = &v92[v96];
    char v99 = v98[4];
    *(_DWORD *)char v97 = *(_DWORD *)v98;
    v97[4] = v99;
    uint64_t v100 = v93[6];
    uint64_t v101 = &v91[v100];
    uint64_t v102 = &v92[v100];
    char v103 = v102[4];
    *(_DWORD *)uint64_t v101 = *(_DWORD *)v102;
    v101[4] = v103;
    uint64_t v104 = v93[7];
    v105 = &v91[v104];
    v106 = &v92[v104];
    char v107 = v106[4];
    *(_DWORD *)v105 = *(_DWORD *)v106;
    v105[4] = v107;
    uint64_t v108 = v93[8];
    v109 = &v91[v108];
    uint64_t v110 = &v92[v108];
    char v111 = v110[4];
    *(_DWORD *)v109 = *(_DWORD *)v110;
    v109[4] = v111;
    uint64_t v112 = v93[9];
    uint64_t v113 = &v91[v112];
    v114 = &v92[v112];
    char v115 = v114[4];
    *(_DWORD *)uint64_t v113 = *(_DWORD *)v114;
    v113[4] = v115;
    uint64_t v116 = v93[10];
    v117 = &v91[v116];
    v118 = &v92[v116];
    char v119 = v118[4];
    *(_DWORD *)v117 = *(_DWORD *)v118;
    v117[4] = v119;
    (*(void (**)(char *, void, uint64_t, int *))(v94 + 56))(v91, 0LL, 1LL, v93);
  }

  (*(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
  return a1;
}

uint64_t sub_1001F5534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C720);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v84 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    int v16 = &v10[v14];
    uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1LL, v17))
    {
      uint64_t v19 = sub_100003A0C(&qword_10035C700);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      uint64_t v20 = *(int *)(v17 + 20);
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      uint64_t v23 = *(int *)(v17 + 24);
      size_t v24 = &v15[v23];
      uint64_t v25 = &v16[v23];
      *(_DWORD *)size_t v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0LL, 1LL, v17);
    }

    uint64_t v26 = v11[6];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    int v29 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
    uint64_t v30 = *((void *)v29 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v30 + 48))(v28, 1LL, v29))
    {
      uint64_t v31 = sub_100003A0C(&qword_10035C708);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v27, (uint64_t)v28, v6);
      uint64_t v32 = v29[5];
      int v33 = &v27[v32];
      uint64_t v34 = &v28[v32];
      *(_DWORD *)int v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      uint64_t v35 = v29[6];
      uint64_t v36 = &v27[v35];
      char v37 = &v28[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      uint64_t v38 = v29[7];
      uint64_t v39 = &v27[v38];
      uint64_t v40 = &v28[v38];
      *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      uint64_t v41 = v29[8];
      uint64_t v42 = &v27[v41];
      uint64_t v43 = &v28[v41];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      v42[4] = v43[4];
      (*(void (**)(char *, void, uint64_t, int *))(v30 + 56))(v27, 0LL, 1LL, v29);
    }

    uint64_t v44 = v11[7];
    char v45 = &v9[v44];
    uint64_t v46 = &v10[v44];
    uint64_t v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
    uint64_t v48 = *((void *)v47 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1LL, v47))
    {
      uint64_t v49 = sub_100003A0C(&qword_10035C710);
      memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v45, (uint64_t)v46, v6);
      uint64_t v50 = v47[5];
      uint64_t v51 = &v45[v50];
      uint64_t v52 = &v46[v50];
      *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
      v51[4] = v52[4];
      uint64_t v53 = v47[6];
      uint64_t v54 = &v45[v53];
      uint64_t v55 = &v46[v53];
      *(_DWORD *)uint64_t v54 = *(_DWORD *)v55;
      v54[4] = v55[4];
      uint64_t v56 = v47[7];
      uint64_t v57 = &v45[v56];
      uint64_t v58 = &v46[v56];
      *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
      v57[4] = v58[4];
      (*(void (**)(char *, void, uint64_t, int *))(v48 + 56))(v45, 0LL, 1LL, v47);
    }

    uint64_t v59 = v11[8];
    uint64_t v60 = &v9[v59];
    uint64_t v61 = &v10[v59];
    uint64_t v62 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
    uint64_t v63 = *((void *)v62 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v63 + 48))(v61, 1LL, v62))
    {
      uint64_t v64 = sub_100003A0C(&qword_10035C718);
      memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v60, (uint64_t)v61, v6);
      uint64_t v65 = v62[5];
      uint64_t v66 = &v60[v65];
      char v67 = &v61[v65];
      *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
      v66[4] = v67[4];
      uint64_t v68 = v62[6];
      uint64_t v69 = &v60[v68];
      uint64_t v70 = &v61[v68];
      *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
      v69[4] = v70[4];
      uint64_t v71 = v62[7];
      uint64_t v72 = &v60[v71];
      uint64_t v73 = &v61[v71];
      *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
      v72[4] = v73[4];
      uint64_t v74 = v62[8];
      uint64_t v75 = &v60[v74];
      uint64_t v76 = &v61[v74];
      *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
      v75[4] = v76[4];
      uint64_t v77 = v62[9];
      uint64_t v78 = &v60[v77];
      uint64_t v79 = &v61[v77];
      *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
      v78[4] = v79[4];
      uint64_t v80 = v62[10];
      char v81 = &v60[v80];
      uint64_t v82 = &v61[v80];
      *(_DWORD *)char v81 = *(_DWORD *)v82;
      v81[4] = v82[4];
      (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(v60, 0LL, 1LL, v62);
    }

    (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v9, 0LL, 1LL, v11);
  }

  return a1;
}

char *sub_1001F59DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v10 = (uint64_t)&a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_VelocityInfo(0LL);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14((uint64_t)v11, 1LL, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_100004090(v10, type metadata accessor for Proto_Gnss_Emergency_VelocityInfo);
      goto LABEL_7;
    }

    uint64_t v215 = v7;
    v220 = v8;
    v8((char *)v10, v11, v6);
    uint64_t v27 = v12[5];
    uint64_t v28 = (char *)(v10 + v27);
    int v29 = &v11[v27];
    uint64_t v30 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
    uint64_t v214 = *(void *)(v30 - 8);
    uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v214 + 48);
    int v32 = v31(v28, 1LL, v30);
    int v33 = v31(v29, 1LL, v30);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v28, v29, v6);
        uint64_t v34 = *(int *)(v30 + 20);
        uint64_t v35 = &v28[v34];
        uint64_t v36 = &v29[v34];
        *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
        v35[4] = v36[4];
        uint64_t v37 = *(int *)(v30 + 24);
        uint64_t v38 = &v28[v37];
        uint64_t v39 = &v29[v37];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v214 + 56))(v28, 0LL, 1LL, v30);
        goto LABEL_27;
      }
    }

    else
    {
      if (!v33)
      {
        v220(v28, v29, v6);
        uint64_t v169 = *(int *)(v30 + 20);
        v170 = &v28[v169];
        uint64_t v171 = &v29[v169];
        *(_DWORD *)v170 = *(_DWORD *)v171;
        v170[4] = v171[4];
        uint64_t v172 = *(int *)(v30 + 24);
        int v173 = &v28[v172];
        int v174 = &v29[v172];
        *(_DWORD *)int v173 = *(_DWORD *)v174;
        v173[4] = v174[4];
LABEL_27:
        uint64_t v105 = v12[6];
        v106 = (char *)(v10 + v105);
        char v107 = &v11[v105];
        uint64_t v108 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
        __srca = (void *)*((void *)v108 - 1);
        v109 = (uint64_t (*)(char *, uint64_t, int *))__srca[6];
        int v110 = v109(v106, 1LL, v108);
        int v111 = v109(v107, 1LL, v108);
        if (v110)
        {
          if (!v111)
          {
            (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v106, v107, v6);
            uint64_t v112 = v108[5];
            uint64_t v113 = &v106[v112];
            v114 = &v107[v112];
            *(_DWORD *)uint64_t v113 = *(_DWORD *)v114;
            v113[4] = v114[4];
            uint64_t v115 = v108[6];
            uint64_t v116 = &v106[v115];
            v117 = &v107[v115];
            *(_DWORD *)uint64_t v116 = *(_DWORD *)v117;
            v116[4] = v117[4];
            uint64_t v118 = v108[7];
            char v119 = &v106[v118];
            uint64_t v120 = &v107[v118];
            *(_DWORD *)char v119 = *(_DWORD *)v120;
            v119[4] = v120[4];
            uint64_t v121 = v108[8];
            uint64_t v122 = &v106[v121];
            char v123 = &v107[v121];
            *(_DWORD *)uint64_t v122 = *(_DWORD *)v123;
            v122[4] = v123[4];
            ((void (*)(char *, void, uint64_t, int *))__srca[7])(v106, 0LL, 1LL, v108);
            goto LABEL_33;
          }
        }

        else
        {
          if (!v111)
          {
            v220(v106, v107, v6);
            uint64_t v175 = v108[5];
            uint64_t v176 = &v106[v175];
            v177 = &v107[v175];
            *(_DWORD *)uint64_t v176 = *(_DWORD *)v177;
            v176[4] = v177[4];
            uint64_t v178 = v108[6];
            uint64_t v179 = &v106[v178];
            uint64_t v180 = &v107[v178];
            *(_DWORD *)uint64_t v179 = *(_DWORD *)v180;
            v179[4] = v180[4];
            uint64_t v181 = v108[7];
            char v182 = &v106[v181];
            uint64_t v183 = &v107[v181];
            *(_DWORD *)char v182 = *(_DWORD *)v183;
            v182[4] = v183[4];
            uint64_t v184 = v108[8];
            v185 = &v106[v184];
            char v186 = &v107[v184];
            *(_DWORD *)v185 = *(_DWORD *)v186;
            v185[4] = v186[4];
LABEL_33:
            uint64_t v125 = v12[7];
            v126 = (char *)(v10 + v125);
            int v127 = &v11[v125];
            int v128 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
            __srcb = (void *)*((void *)v128 - 1);
            uint64_t v129 = (uint64_t (*)(char *, uint64_t, int *))__srcb[6];
            int v130 = v129(v126, 1LL, v128);
            int v131 = v129(v127, 1LL, v128);
            if (v130)
            {
              if (!v131)
              {
                (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v126, v127, v6);
                uint64_t v132 = v128[5];
                uint64_t v133 = &v126[v132];
                v134 = &v127[v132];
                *(_DWORD *)uint64_t v133 = *(_DWORD *)v134;
                v133[4] = v134[4];
                uint64_t v135 = v128[6];
                char v136 = &v126[v135];
                uint64_t v137 = &v127[v135];
                *(_DWORD *)char v136 = *(_DWORD *)v137;
                v136[4] = v137[4];
                uint64_t v138 = v128[7];
                char v139 = &v126[v138];
                char v140 = &v127[v138];
                *(_DWORD *)char v139 = *(_DWORD *)v140;
                v139[4] = v140[4];
                ((void (*)(char *, void, uint64_t, int *))__srcb[7])(v126, 0LL, 1LL, v128);
LABEL_39:
                v142 = (void (*)(uint64_t, char *, uint64_t))v220;
LABEL_40:
                uint64_t v143 = v12[8];
                uint64_t v144 = v10 + v143;
                uint64_t v145 = &v11[v143];
                uint64_t v146 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
                uint64_t v147 = *((void *)v146 - 1);
                uint64_t v148 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v147 + 48);
                int v149 = v148(v144, 1LL, v146);
                int v150 = v148((uint64_t)v145, 1LL, v146);
                if (v149)
                {
                  if (!v150)
                  {
                    (*(void (**)(uint64_t, char *, uint64_t))(v215 + 32))(v144, v145, v6);
                    uint64_t v151 = v146[5];
                    uint64_t v152 = v144 + v151;
                    uint64_t v153 = &v145[v151];
                    *(_DWORD *)uint64_t v152 = *(_DWORD *)v153;
                    *(_BYTE *)(v152 + 4) = v153[4];
                    uint64_t v154 = v146[6];
                    uint64_t v155 = v144 + v154;
                    char v156 = &v145[v154];
                    *(_DWORD *)uint64_t v155 = *(_DWORD *)v156;
                    *(_BYTE *)(v155 + 4) = v156[4];
                    uint64_t v157 = v146[7];
                    uint64_t v158 = v144 + v157;
                    char v159 = &v145[v157];
                    *(_DWORD *)uint64_t v158 = *(_DWORD *)v159;
                    *(_BYTE *)(v158 + 4) = v159[4];
                    uint64_t v160 = v146[8];
                    uint64_t v161 = v144 + v160;
                    v162 = &v145[v160];
                    *(_DWORD *)uint64_t v161 = *(_DWORD *)v162;
                    *(_BYTE *)(v161 + 4) = v162[4];
                    uint64_t v163 = v146[9];
                    uint64_t v164 = v144 + v163;
                    uint64_t v165 = &v145[v163];
                    *(_DWORD *)uint64_t v164 = *(_DWORD *)v165;
                    *(_BYTE *)(v164 + 4) = v165[4];
                    uint64_t v166 = v146[10];
                    uint64_t v167 = v144 + v166;
                    uint64_t v168 = &v145[v166];
                    *(_DWORD *)uint64_t v167 = *(_DWORD *)v168;
                    *(_BYTE *)(v167 + 4) = v168[4];
                    (*(void (**)(uint64_t, void, uint64_t, int *))(v147 + 56))(v144, 0LL, 1LL, v146);
                    return a1;
                  }
                }

                else
                {
                  if (!v150)
                  {
                    v142(v144, v145, v6);
                    uint64_t v196 = v146[5];
                    uint64_t v197 = v144 + v196;
                    char v198 = &v145[v196];
                    *(_DWORD *)uint64_t v197 = *(_DWORD *)v198;
                    *(_BYTE *)(v197 + 4) = v198[4];
                    uint64_t v199 = v146[6];
                    uint64_t v200 = v144 + v199;
                    v201 = &v145[v199];
                    *(_DWORD *)uint64_t v200 = *(_DWORD *)v201;
                    *(_BYTE *)(v200 + 4) = v201[4];
                    uint64_t v202 = v146[7];
                    uint64_t v203 = v144 + v202;
                    v204 = &v145[v202];
                    *(_DWORD *)uint64_t v203 = *(_DWORD *)v204;
                    *(_BYTE *)(v203 + 4) = v204[4];
                    uint64_t v205 = v146[8];
                    uint64_t v206 = v144 + v205;
                    uint64_t v207 = &v145[v205];
                    *(_DWORD *)uint64_t v206 = *(_DWORD *)v207;
                    *(_BYTE *)(v206 + 4) = v207[4];
                    uint64_t v208 = v146[9];
                    uint64_t v209 = v144 + v208;
                    char v210 = &v145[v208];
                    *(_DWORD *)uint64_t v209 = *(_DWORD *)v210;
                    *(_BYTE *)(v209 + 4) = v210[4];
                    uint64_t v211 = v146[10];
                    uint64_t v212 = v144 + v211;
                    v213 = &v145[v211];
                    *(_DWORD *)uint64_t v212 = *(_DWORD *)v213;
                    *(_BYTE *)(v212 + 4) = v213[4];
                    return a1;
                  }

                  sub_100004090(v144, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity);
                }

                size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C718) - 8) + 64LL);
                uint64_t v25 = (void *)v144;
                uint64_t v26 = v145;
                goto LABEL_8;
              }
            }

            else
            {
              if (!v131)
              {
                v142 = (void (*)(uint64_t, char *, uint64_t))v220;
                v220(v126, v127, v6);
                uint64_t v187 = v128[5];
                uint64_t v188 = &v126[v187];
                v189 = &v127[v187];
                *(_DWORD *)uint64_t v188 = *(_DWORD *)v189;
                v188[4] = v189[4];
                uint64_t v190 = v128[6];
                uint64_t v191 = &v126[v190];
                uint64_t v192 = &v127[v190];
                *(_DWORD *)uint64_t v191 = *(_DWORD *)v192;
                v191[4] = v192[4];
                uint64_t v193 = v128[7];
                char v194 = &v126[v193];
                uint64_t v195 = &v127[v193];
                *(_DWORD *)char v194 = *(_DWORD *)v195;
                v194[4] = v195[4];
                goto LABEL_40;
              }

              sub_100004090((uint64_t)v126, type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity);
            }

            uint64_t v141 = sub_100003A0C(&qword_10035C710);
            memcpy(v126, v127, *(void *)(*(void *)(v141 - 8) + 64LL));
            goto LABEL_39;
          }

          sub_100004090((uint64_t)v106, type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity);
        }

        uint64_t v124 = sub_100003A0C(&qword_10035C708);
        memcpy(v106, v107, *(void *)(*(void *)(v124 - 8) + 64LL));
        goto LABEL_33;
      }

      sub_100004090((uint64_t)v28, type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity);
    }

    uint64_t v104 = sub_100003A0C(&qword_10035C700);
    memcpy(v28, v29, *(void *)(*(void *)(v104 - 8) + 64LL));
    goto LABEL_27;
  }

  if (v16)
  {
LABEL_7:
    size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C720) - 8) + 64LL);
    uint64_t v25 = (void *)v10;
    uint64_t v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }

  __src = a1;
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v17(v10, v11, v6);
  uint64_t v18 = v12[5];
  uint64_t v19 = (char *)(v10 + v18);
  uint64_t v20 = &v11[v18];
  uint64_t v21 = type metadata accessor for Proto_Gnss_Emergency_HorizontalVelocity(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v219 = (void (*)(char *, char *, uint64_t))v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21))
  {
    uint64_t v23 = sub_100003A0C(&qword_10035C700);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    v17((uint64_t)v19, v20, v6);
    uint64_t v40 = *(int *)(v21 + 20);
    uint64_t v41 = &v19[v40];
    uint64_t v42 = &v20[v40];
    *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    uint64_t v43 = *(int *)(v21 + 24);
    uint64_t v44 = &v19[v43];
    char v45 = &v20[v43];
    *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
    v44[4] = v45[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0LL, 1LL, v21);
  }

  uint64_t v46 = v12[6];
  uint64_t v47 = (char *)(v10 + v46);
  uint64_t v48 = &v11[v46];
  uint64_t v49 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertVelocity(0LL);
  uint64_t v50 = *((void *)v49 - 1);
  a1 = __src;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v50 + 48))(v48, 1LL, v49))
  {
    uint64_t v51 = sub_100003A0C(&qword_10035C708);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64LL));
  }

  else
  {
    v219(v47, v48, v6);
    uint64_t v52 = v49[5];
    uint64_t v53 = &v47[v52];
    uint64_t v54 = &v48[v52];
    *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
    v53[4] = v54[4];
    uint64_t v55 = v49[6];
    uint64_t v56 = &v47[v55];
    uint64_t v57 = &v48[v55];
    *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
    v56[4] = v57[4];
    uint64_t v58 = v49[7];
    uint64_t v59 = &v47[v58];
    uint64_t v60 = &v48[v58];
    *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
    v59[4] = v60[4];
    uint64_t v61 = v49[8];
    uint64_t v62 = &v47[v61];
    uint64_t v63 = &v48[v61];
    *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    (*(void (**)(char *, void, uint64_t, int *))(v50 + 56))(v47, 0LL, 1LL, v49);
  }

  uint64_t v64 = v12[7];
  uint64_t v65 = (char *)(v10 + v64);
  uint64_t v66 = &v11[v64];
  char v67 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithUncertaintyVelocity(0LL);
  uint64_t v68 = *((void *)v67 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v68 + 48))(v66, 1LL, v67))
  {
    uint64_t v69 = sub_100003A0C(&qword_10035C710);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64LL));
  }

  else
  {
    v219(v65, v66, v6);
    uint64_t v70 = v67[5];
    uint64_t v71 = &v65[v70];
    uint64_t v72 = &v66[v70];
    *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    uint64_t v73 = v67[6];
    uint64_t v74 = &v65[v73];
    uint64_t v75 = &v66[v73];
    *(_DWORD *)uint64_t v74 = *(_DWORD *)v75;
    v74[4] = v75[4];
    uint64_t v76 = v67[7];
    uint64_t v77 = &v65[v76];
    uint64_t v78 = &v66[v76];
    *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
    v77[4] = v78[4];
    (*(void (**)(char *, void, uint64_t, int *))(v68 + 56))(v65, 0LL, 1LL, v67);
  }

  uint64_t v79 = v12[8];
  uint64_t v80 = (char *)(v10 + v79);
  char v81 = &v11[v79];
  uint64_t v82 = (int *)type metadata accessor for Proto_Gnss_Emergency_HorizWithVertUncertaintyVelocity(0LL);
  uint64_t v83 = *((void *)v82 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v83 + 48))(v81, 1LL, v82))
  {
    uint64_t v84 = sub_100003A0C(&qword_10035C718);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64LL));
  }

  else
  {
    v219(v80, v81, v6);
    uint64_t v85 = v82[5];
    uint64_t v86 = &v80[v85];
    uint64_t v87 = &v81[v85];
    *(_DWORD *)uint64_t v86 = *(_DWORD *)v87;
    v86[4] = v87[4];
    uint64_t v88 = v82[6];
    char v89 = &v80[v88];
    uint64_t v90 = &v81[v88];
    *(_DWORD *)char v89 = *(_DWORD *)v90;
    v89[4] = v90[4];
    uint64_t v91 = v82[7];
    uint64_t v92 = &v80[v91];
    char v93 = &v81[v91];
    *(_DWORD *)uint64_t v92 = *(_DWORD *)v93;
    v92[4] = v93[4];
    uint64_t v94 = v82[8];
    uint64_t v95 = &v80[v94];
    uint64_t v96 = &v81[v94];
    *(_DWORD *)uint64_t v95 = *(_DWORD *)v96;
    v95[4] = v96[4];
    uint64_t v97 = v82[9];
    uint64_t v98 = &v80[v97];
    char v99 = &v81[v97];
    *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
    v98[4] = v99[4];
    uint64_t v100 = v82[10];
    uint64_t v101 = &v80[v100];
    uint64_t v102 = &v81[v100];
    *(_DWORD *)uint64_t v101 = *(_DWORD *)v102;
    v101[4] = v102[4];
    (*(void (**)(char *, void, uint64_t, int *))(v83 + 56))(v80, 0LL, 1LL, v82);
  }

  (*(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
  return a1;
}

uint64_t sub_1001F656C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F6578);
}

uint64_t sub_1001F6578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FFC24(a1, a2, a3, &qword_10035C720);
}

uint64_t sub_1001F6584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F6590);
}

uint64_t sub_1001F6590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FFCEC(a1, a2, a3, a4, &qword_10035C720);
}

void sub_1001F659C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1001F65B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F65C4);
}

uint64_t sub_1001F65C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F65D4);
}

void *sub_1001F65D8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v33);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    int v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)int v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    char v22 = *((_BYTE *)a2 + v20);
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    *((_BYTE *)a1 + v20) = v22;
    uint64_t v23 = (char *)a1 + v21;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)((char *)a2 + v21);
    v23[4] = *((_BYTE *)a2 + v21 + 4);
    uint64_t v24 = a3[11];
    uint64_t v25 = a3[12];
    uint64_t v26 = (char *)a1 + v24;
    uint64_t v27 = (char *)a2 + v24;
    *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
    uint64_t v28 = (char *)a1 + v25;
    int v29 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    uint64_t v30 = a3[13];
    uint64_t v31 = (char *)a1 + v30;
    int v32 = (char *)a2 + v30;
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
  }

  return a1;
}

uint64_t sub_1001F6730(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001F685C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (int *)(a2 + v20);
  int v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)uint64_t v21 = v23;
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  LOBYTE(v23) = *(_BYTE *)(v26 + 4);
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  *(_BYTE *)(v25 + 4) = v23;
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  LOBYTE(v23) = *(_BYTE *)(v29 + 4);
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v23;
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  LOBYTE(v23) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v23;
  return a1;
}

uint64_t sub_1001F6998(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001F6AC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = a2 + v23;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001F6BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F6BFC);
}

uint64_t sub_1001F6BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  }
  unsigned int v10 = v9 - 6;
  else {
    return 0LL;
  }
}

uint64_t sub_1001F6C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F6C8C);
}

uint64_t sub_1001F6C8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 6;
  return result;
}

uint64_t sub_1001F6D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FA100(a1, a2, a3, (uint64_t)&unk_1002D5B70, (uint64_t)&unk_1002D59B0);
}

uint64_t *sub_1001F6D18(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
  }

  return v7;
}

uint64_t *sub_1001F6E10(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  return a1;
}

uint64_t *sub_1001F6EE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[4];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char v19 = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char v23 = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v23;
  return a1;
}

void *sub_1001F6FB0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  char v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  return a1;
}

uint64_t *sub_1001F706C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  char v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(_DWORD *)char v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  char v19 = (char *)a2 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  return a1;
}

uint64_t sub_1001F7130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F713C);
}

uint64_t sub_1001F7140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F714C);
}

uint64_t sub_1001F7150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001F7164(a1, a2, a3, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D59B0);
}

uint64_t sub_1001F7164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v12[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v11 <= 0x3F)
  {
    v12[1] = *(void *)(result - 8) + 64LL;
    v12[2] = a4;
    v12[3] = a5;
    v12[4] = a6;
    swift_initStructMetadata(a1, 256LL, 5LL, v12, a1 + 16);
    return 0LL;
  }

  return result;
}

char *sub_1001F71F4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    uint64_t v10 = (uint64_t *)&a1[v9];
    unint64_t v11 = (uint64_t *)&a2[v9];
    uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C750);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      uint64_t v16 = *v11;
      *uint64_t v10 = *v11;
      uint64_t v17 = v12[5];
      uint64_t v18 = (char *)v10 + v17;
      char v19 = (char *)v11 + v17;
      swift_bridgeObjectRetain(v16);
      v8(v18, v19, v7);
      uint64_t v20 = v12[6];
      uint64_t v21 = (char *)v10 + v20;
      uint64_t v22 = (char *)v11 + v20;
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      uint64_t v23 = v12[7];
      uint64_t v24 = (char *)v10 + v23;
      uint64_t v25 = (char *)v11 + v23;
      *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      uint64_t v26 = v12[8];
      uint64_t v27 = (char *)v10 + v26;
      uint64_t v28 = (char *)v11 + v26;
      *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
      v27[4] = v28[4];
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
    }
  }

  return a1;
}

uint64_t sub_1001F7380(char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v8(a1, v4);
  int v5 = &a1[*(int *)(a2 + 24)];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*(void *)v5);
    return v8(&v5[*(int *)(v6 + 20)], v4);
  }

  return result;
}

uint64_t sub_1001F7430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (uint64_t *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  unint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C750);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v14 = *v10;
    *uint64_t v9 = *v10;
    uint64_t v15 = v11[5];
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = (char *)v10 + v15;
    swift_bridgeObjectRetain(v14);
    v7((uint64_t)v16, (uint64_t)v17, v6);
    uint64_t v18 = v11[6];
    char v19 = (char *)v9 + v18;
    uint64_t v20 = (char *)v10 + v18;
    *(_DWORD *)char v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    uint64_t v21 = v11[7];
    uint64_t v22 = (char *)v9 + v21;
    uint64_t v23 = (char *)v10 + v21;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = v11[8];
    uint64_t v25 = (char *)v9 + v24;
    uint64_t v26 = (char *)v10 + v24;
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    (*(void (**)(uint64_t *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  return a1;
}

uint64_t sub_1001F7590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (uint64_t *)(a1 + v9);
  unint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v36 = *v11;
      uint64_t v37 = *v10;
      *uint64_t v10 = *v11;
      swift_bridgeObjectRetain(v36);
      swift_bridgeObjectRelease(v37);
      v8((uint64_t)v10 + v12[5], (uint64_t)v11 + v12[5], v6);
      uint64_t v38 = v12[6];
      uint64_t v39 = (char *)v10 + v38;
      uint64_t v40 = (char *)v11 + v38;
      char v41 = v40[4];
      *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
      v39[4] = v41;
      uint64_t v42 = v12[7];
      uint64_t v43 = (char *)v10 + v42;
      uint64_t v44 = (char *)v11 + v42;
      char v45 = v44[4];
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      v43[4] = v45;
      uint64_t v46 = v12[8];
      uint64_t v47 = (char *)v10 + v46;
      uint64_t v48 = (char *)v11 + v46;
      char v49 = v48[4];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      v47[4] = v49;
      return a1;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
    goto LABEL_6;
  }

  if (v16)
  {
LABEL_6:
    uint64_t v34 = sub_100003A0C(&qword_10035C750);
    memcpy(v10, v11, *(void *)(*(void *)(v34 - 8) + 64LL));
    return a1;
  }

  uint64_t v17 = *v11;
  *uint64_t v10 = *v11;
  uint64_t v18 = v12[5];
  char v19 = (char *)v10 + v18;
  uint64_t v20 = (char *)v11 + v18;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain(v17);
  v21(v19, v20, v6);
  uint64_t v22 = v12[6];
  uint64_t v23 = (char *)v10 + v22;
  uint64_t v24 = (char *)v11 + v22;
  char v25 = v24[4];
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  v23[4] = v25;
  uint64_t v26 = v12[7];
  uint64_t v27 = (char *)v10 + v26;
  uint64_t v28 = (char *)v11 + v26;
  char v29 = v28[4];
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  v27[4] = v29;
  uint64_t v30 = v12[8];
  uint64_t v31 = (char *)v10 + v30;
  uint64_t v32 = (char *)v11 + v30;
  char v33 = v32[4];
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  v31[4] = v33;
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
  return a1;
}

uint64_t sub_1001F77A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  unint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C750);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    *uint64_t v9 = *v10;
    v7((uint64_t)v9 + v11[5], (uint64_t)v10 + v11[5], v6);
    uint64_t v14 = v11[6];
    int v15 = (char *)v9 + v14;
    int v16 = (char *)v10 + v14;
    *(_DWORD *)int v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = v11[7];
    uint64_t v18 = (char *)v9 + v17;
    char v19 = (char *)v10 + v17;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = v11[8];
    uint64_t v21 = (char *)v9 + v20;
    uint64_t v22 = (char *)v10 + v20;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    (*(void (**)(void *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  return a1;
}

uint64_t sub_1001F78F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = (uint64_t *)(a1 + v9);
  unint64_t v11 = (uint64_t *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      uint64_t v28 = *v10;
      *uint64_t v10 = *v11;
      swift_bridgeObjectRelease(v28);
      v8((uint64_t)v10 + v12[5], (uint64_t)v11 + v12[5], v6);
      uint64_t v29 = v12[6];
      uint64_t v30 = (char *)v10 + v29;
      uint64_t v31 = (char *)v11 + v29;
      *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
      v30[4] = v31[4];
      uint64_t v32 = v12[7];
      char v33 = (char *)v10 + v32;
      uint64_t v34 = (char *)v11 + v32;
      *(_DWORD *)char v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      uint64_t v35 = v12[8];
      uint64_t v36 = (char *)v10 + v35;
      uint64_t v37 = (char *)v11 + v35;
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      return a1;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
    goto LABEL_6;
  }

  if (v16)
  {
LABEL_6:
    uint64_t v26 = sub_100003A0C(&qword_10035C750);
    memcpy(v10, v11, *(void *)(*(void *)(v26 - 8) + 64LL));
    return a1;
  }

  *uint64_t v10 = *v11;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))((char *)v10 + v12[5], (char *)v11 + v12[5], v6);
  uint64_t v17 = v12[6];
  uint64_t v18 = (char *)v10 + v17;
  char v19 = (char *)v11 + v17;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = v12[7];
  uint64_t v21 = (char *)v10 + v20;
  uint64_t v22 = (char *)v11 + v20;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  uint64_t v23 = v12[8];
  uint64_t v24 = (char *)v10 + v23;
  char v25 = (char *)v11 + v23;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  v24[4] = v25[4];
  (*(void (**)(uint64_t *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
  return a1;
}

uint64_t sub_1001F7AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F7B00);
}

uint64_t sub_1001F7B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 248)
  {
    else {
      int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v10 = v9 - 7;
    else {
      return 0LL;
    }
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C750);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v11);
  }

uint64_t sub_1001F7BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F7BBC);
}

uint64_t sub_1001F7BBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 248)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
      return result;
    }

    uint64_t v10 = sub_100003A0C(&qword_10035C750);
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001F7C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

char *sub_1001F7C7C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v27 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v27);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    v10[4] = v11[4];
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = &a1[v12];
    int v15 = &a2[v12];
    v14[4] = v15[4];
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    int v16 = &a1[v13];
    uint64_t v17 = &a2[v13];
    *(_DWORD *)int v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = a3[9];
    uint64_t v19 = a3[10];
    uint64_t v20 = &a1[v18];
    uint64_t v21 = &a2[v18];
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    uint64_t v22 = &a1[v19];
    uint64_t v23 = &a2[v19];
    uint64_t v24 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0LL);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1LL, v24))
    {
      uint64_t v26 = sub_100003A0C(&qword_10035C758);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64LL));
    }

    else
    {
      v8(v22, v23, v7);
      v22[*(int *)(v24 + 20)] = v23[*(int *)(v24 + 20)];
      uint64_t v28 = *(int *)(v24 + 24);
      __dst = &v22[v28];
      uint64_t v29 = &v23[v28];
      uint64_t v30 = v8;
      uint64_t v31 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
      uint64_t v64 = *(void *)(v31 - 8);
      char v67 = v30;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v29, 1LL, v31))
      {
        uint64_t v32 = sub_100003A0C(&qword_10035C6B8);
        memcpy(__dst, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
      }

      else
      {
        v30(__dst, v29, v7);
        uint64_t v33 = *(int *)(v31 + 20);
        uint64_t v34 = *(void *)&v29[v33];
        *(void *)&__dst[v33] = v34;
        uint64_t v35 = *(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56);
        swift_retain(v34);
        v35(__dst, 0LL, 1LL, v31);
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0LL, 1LL, v24);
      uint64_t v8 = v67;
    }

    uint64_t v36 = a3[11];
    uint64_t v37 = a3[12];
    uint64_t v38 = &a1[v36];
    uint64_t v39 = &a2[v36];
    *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
    v38[4] = v39[4];
    uint64_t v40 = &a1[v37];
    char v41 = &a2[v37];
    uint64_t v42 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0LL);
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1LL, v42))
    {
      uint64_t v44 = sub_100003A0C(&qword_10035C760);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
    }

    else
    {
      v8(v40, v41, v7);
      v40[*(int *)(v42 + 20)] = v41[*(int *)(v42 + 20)];
      uint64_t v45 = *(int *)(v42 + 24);
      uint64_t v46 = &v40[v45];
      uint64_t v47 = &v41[v45];
      uint64_t v48 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
      uint64_t v49 = *((void *)v48 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1LL, v48))
      {
        uint64_t v50 = sub_100003A0C(&qword_10035C750);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64LL));
      }

      else
      {
        uint64_t v51 = *(void *)v47;
        *(void *)uint64_t v46 = *(void *)v47;
        uint64_t v52 = v48[5];
        __dsta = &v46[v52];
        uint64_t v68 = v8;
        uint64_t v53 = &v47[v52];
        swift_bridgeObjectRetain(v51);
        v68(__dsta, v53, v7);
        uint64_t v54 = v48[6];
        uint64_t v55 = &v46[v54];
        uint64_t v56 = &v47[v54];
        *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
        v55[4] = v56[4];
        uint64_t v57 = v48[7];
        uint64_t v58 = &v46[v57];
        uint64_t v59 = &v47[v57];
        *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
        v58[4] = v59[4];
        uint64_t v60 = v48[8];
        uint64_t v61 = &v46[v60];
        uint64_t v62 = &v47[v60];
        *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
        v61[4] = v62[4];
        (*(void (**)(char *, void, uint64_t, int *))(v49 + 56))(v46, 0LL, 1LL, v48);
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0LL, 1LL, v42);
    }
  }

  return a1;
}

uint64_t sub_1001F8060(char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v14(a1, v4);
  int v5 = &a1[*(int *)(a2 + 40)];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0LL);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6))
  {
    v14(v5, v4);
    uint64_t v7 = &v5[*(int *)(v6 + 24)];
    uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8))
    {
      v14(v7, v4);
      swift_release(*(void *)&v7[*(int *)(v8 + 20)]);
    }
  }

  uint64_t v9 = &a1[*(int *)(a2 + 48)];
  uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0LL);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48LL))(v9, 1LL, v10);
  if (!(_DWORD)result)
  {
    v14(v9, v4);
    uint64_t v12 = &v9[*(int *)(v10 + 24)];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48LL))(v12, 1LL, v13);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease(*(void *)v12);
      return v14(&v12[*(int *)(v13 + 20)], v4);
    }
  }

  return result;
}

uint64_t sub_1001F81E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  uint64_t v21 = (char *)(a1 + v18);
  uint64_t v22 = (char *)(a2 + v18);
  uint64_t v23 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1LL, v23))
  {
    uint64_t v25 = sub_100003A0C(&qword_10035C758);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    v21[*(int *)(v23 + 20)] = v22[*(int *)(v23 + 20)];
    uint64_t v26 = *(int *)(v23 + 24);
    __dst = &v21[v26];
    uint64_t v27 = &v22[v26];
    uint64_t v28 = v7;
    uint64_t v29 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
    uint64_t v62 = *(void *)(v29 - 8);
    uint64_t v65 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v27, 1LL, v29))
    {
      uint64_t v30 = sub_100003A0C(&qword_10035C6B8);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    }

    else
    {
      v28((uint64_t)__dst, (uint64_t)v27, v6);
      uint64_t v31 = *(int *)(v29 + 20);
      uint64_t v32 = *(void *)&v27[v31];
      *(void *)&__dst[v31] = v32;
      uint64_t v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56);
      swift_retain(v32);
      v33(__dst, 0LL, 1LL, v29);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0LL, 1LL, v23);
    uint64_t v7 = v65;
  }

  uint64_t v34 = a3[11];
  uint64_t v35 = a3[12];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = *(_BYTE *)(v37 + 4);
  uint64_t v38 = (char *)(a1 + v35);
  uint64_t v39 = (char *)(a2 + v35);
  uint64_t v40 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0LL);
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1LL, v40))
  {
    uint64_t v42 = sub_100003A0C(&qword_10035C760);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v38, (uint64_t)v39, v6);
    v38[*(int *)(v40 + 20)] = v39[*(int *)(v40 + 20)];
    uint64_t v43 = *(int *)(v40 + 24);
    uint64_t v44 = &v38[v43];
    uint64_t v45 = &v39[v43];
    uint64_t v46 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
    uint64_t v47 = *((void *)v46 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1LL, v46))
    {
      uint64_t v48 = sub_100003A0C(&qword_10035C750);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64LL));
    }

    else
    {
      uint64_t v49 = *(void *)v45;
      *(void *)uint64_t v44 = *(void *)v45;
      uint64_t v50 = v46[5];
      __dsta = &v44[v50];
      uint64_t v66 = (void (*)(char *, char *, uint64_t))v7;
      uint64_t v51 = &v45[v50];
      swift_bridgeObjectRetain(v49);
      v66(__dsta, v51, v6);
      uint64_t v52 = v46[6];
      uint64_t v53 = &v44[v52];
      uint64_t v54 = &v45[v52];
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      uint64_t v55 = v46[7];
      uint64_t v56 = &v44[v55];
      uint64_t v57 = &v45[v55];
      *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
      v56[4] = v57[4];
      uint64_t v58 = v46[8];
      uint64_t v59 = &v44[v58];
      uint64_t v60 = &v45[v58];
      *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
      v59[4] = v60[4];
      (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0LL, 1LL, v46);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0LL, 1LL, v40);
  }

  return a1;
}

uint64_t sub_1001F85A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v139 = *(void *)(v6 - 8);
  uint64_t v137 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 24);
  v137(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = (_BYTE *)(a1 + v23);
  uint64_t v25 = (_BYTE *)(a2 + v23);
  uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0LL);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1LL, v26);
  int v30 = v28(v25, 1LL, v26);
  if (!v29)
  {
    if (!v30)
    {
      uint64_t v38 = v6;
      v137((uint64_t)v24, (uint64_t)v25, v6);
      v24[*(int *)(v26 + 20)] = v25[*(int *)(v26 + 20)];
      uint64_t v39 = *(int *)(v26 + 24);
      uint64_t v40 = &v24[v39];
      uint64_t v41 = &v25[v39];
      uint64_t v42 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
      int v45 = v44(v40, 1LL, v42);
      int v46 = v44(v41, 1LL, v42);
      if (v45)
      {
        if (!v46)
        {
          uint64_t v6 = v38;
          (*(void (**)(char *, char *, uint64_t))(v139 + 16))(v40, v41, v38);
          uint64_t v47 = *(int *)(v42 + 20);
          uint64_t v48 = *(void *)&v41[v47];
          *(void *)&v40[v47] = v48;
          uint64_t v49 = *(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56);
          swift_retain(v48);
          v49(v40, 0LL, 1LL, v42);
          goto LABEL_16;
        }
      }

      else
      {
        if (!v46)
        {
          uint64_t v6 = v38;
          v137((uint64_t)v40, (uint64_t)v41, v38);
          uint64_t v117 = *(int *)(v42 + 20);
          uint64_t v118 = *(void *)&v41[v117];
          uint64_t v119 = *(void *)&v40[v117];
          *(void *)&v40[v117] = v118;
          swift_retain(v118);
          swift_release(v119);
          goto LABEL_16;
        }

        sub_100004090((uint64_t)v40, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
      }

      uint64_t v53 = sub_100003A0C(&qword_10035C6B8);
      memcpy(v40, v41, *(void *)(*(void *)(v53 - 8) + 64LL));
      uint64_t v6 = v38;
      goto LABEL_16;
    }

    sub_100004090((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
LABEL_7:
    uint64_t v37 = sub_100003A0C(&qword_10035C758);
    memcpy(v24, v25, *(void *)(*(void *)(v37 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v30) {
    goto LABEL_7;
  }
  v134 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
  v134(v24, v25, v6);
  v24[*(int *)(v26 + 20)] = v25[*(int *)(v26 + 20)];
  uint64_t v31 = *(int *)(v26 + 24);
  __dst = &v24[v31];
  uint64_t v32 = &v25[v31];
  uint64_t v33 = v6;
  uint64_t v34 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v135 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v32, 1LL, v34))
  {
    uint64_t v36 = sub_100003A0C(&qword_10035C6B8);
    memcpy(__dst, v32, *(void *)(*(void *)(v36 - 8) + 64LL));
  }

  else
  {
    v134(__dst, v32, v33);
    uint64_t v50 = *(int *)(v34 + 20);
    uint64_t v51 = *(void *)&v32[v50];
    *(void *)&__dst[v50] = v51;
    uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56);
    swift_retain(v51);
    v52(__dst, 0LL, 1LL, v34);
  }

  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0LL, 1LL, v26);
  uint64_t v6 = v135;
LABEL_16:
  uint64_t v54 = a3[11];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = (int *)(a2 + v54);
  int v57 = *v56;
  *(_BYTE *)(v55 + 4) = *((_BYTE *)v56 + 4);
  *(_DWORD *)uint64_t v55 = v57;
  uint64_t v58 = a3[12];
  uint64_t v59 = a1 + v58;
  uint64_t v60 = (uint64_t *)(a2 + v58);
  uint64_t v61 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0LL);
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v63 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  int v64 = v63(v59, 1LL, v61);
  int v65 = v63((uint64_t)v60, 1LL, v61);
  if (!v64)
  {
    if (!v65)
    {
      v137(v59, (uint64_t)v60, v6);
      *(_BYTE *)(v59 + *(int *)(v61 + 20)) = *((_BYTE *)v60 + *(int *)(v61 + 20));
      uint64_t v77 = *(int *)(v61 + 24);
      uint64_t v78 = (uint64_t *)(v59 + v77);
      uint64_t v79 = (uint64_t *)((char *)v60 + v77);
      uint64_t v80 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
      uint64_t v81 = *((void *)v80 - 1);
      uint64_t v82 = *(uint64_t (**)(uint64_t *, uint64_t, int *))(v81 + 48);
      int v83 = v82(v78, 1LL, v80);
      int v84 = v82(v79, 1LL, v80);
      if (v83)
      {
        if (!v84)
        {
          uint64_t v85 = *v79;
          uint64_t *v78 = *v79;
          uint64_t v86 = v80[5];
          uint64_t v87 = (char *)v78 + v86;
          uint64_t v88 = (char *)v79 + v86;
          char v89 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
          swift_bridgeObjectRetain(v85);
          v89(v87, v88, v6);
          uint64_t v90 = v80[6];
          uint64_t v91 = (char *)v78 + v90;
          uint64_t v92 = (char *)v79 + v90;
          char v93 = v92[4];
          *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
          v91[4] = v93;
          uint64_t v94 = v80[7];
          uint64_t v95 = (char *)v78 + v94;
          uint64_t v96 = (char *)v79 + v94;
          char v97 = v96[4];
          *(_DWORD *)uint64_t v95 = *(_DWORD *)v96;
          v95[4] = v97;
          uint64_t v98 = v80[8];
          char v99 = (char *)v78 + v98;
          uint64_t v100 = (char *)v79 + v98;
          char v101 = v100[4];
          *(_DWORD *)char v99 = *(_DWORD *)v100;
          v99[4] = v101;
          (*(void (**)(uint64_t *, void, uint64_t, int *))(v81 + 56))(v78, 0LL, 1LL, v80);
          return a1;
        }
      }

      else
      {
        if (!v84)
        {
          uint64_t v120 = *v79;
          uint64_t v121 = *v78;
          uint64_t *v78 = *v79;
          swift_bridgeObjectRetain(v120);
          swift_bridgeObjectRelease(v121);
          v137((uint64_t)v78 + v80[5], (uint64_t)v79 + v80[5], v6);
          uint64_t v122 = v80[6];
          char v123 = (char *)v78 + v122;
          uint64_t v124 = (char *)v79 + v122;
          char v125 = v124[4];
          *(_DWORD *)char v123 = *(_DWORD *)v124;
          v123[4] = v125;
          uint64_t v126 = v80[7];
          int v127 = (char *)v78 + v126;
          int v128 = (char *)v79 + v126;
          char v129 = v128[4];
          *(_DWORD *)int v127 = *(_DWORD *)v128;
          v127[4] = v129;
          uint64_t v130 = v80[8];
          int v131 = (char *)v78 + v130;
          uint64_t v132 = (char *)v79 + v130;
          char v133 = v132[4];
          *(_DWORD *)int v131 = *(_DWORD *)v132;
          v131[4] = v133;
          return a1;
        }

        sub_100004090((uint64_t)v78, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
      }

      size_t v74 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C750) - 8) + 64LL);
      uint64_t v75 = v78;
      uint64_t v76 = v79;
      goto LABEL_23;
    }

    sub_100004090(v59, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
LABEL_22:
    size_t v74 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C760) - 8) + 64LL);
    uint64_t v75 = (void *)v59;
    uint64_t v76 = v60;
LABEL_23:
    memcpy(v75, v76, v74);
    return a1;
  }

  if (v65) {
    goto LABEL_22;
  }
  uint64_t v66 = v6;
  char v67 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v139 + 16);
  v67(v59, v60, v66);
  *(_BYTE *)(v59 + *(int *)(v61 + 20)) = *((_BYTE *)v60 + *(int *)(v61 + 20));
  uint64_t v68 = *(int *)(v61 + 24);
  uint64_t v69 = (uint64_t *)(v59 + v68);
  uint64_t v70 = (uint64_t *)((char *)v60 + v68);
  uint64_t v71 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t v72 = *((void *)v71 - 1);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v72 + 48))(v70, 1LL, v71))
  {
    uint64_t v73 = sub_100003A0C(&qword_10035C750);
    memcpy(v69, v70, *(void *)(*(void *)(v73 - 8) + 64LL));
  }

  else
  {
    uint64_t v102 = *v70;
    *uint64_t v69 = *v70;
    uint64_t v103 = v71[5];
    uint64_t v138 = (char *)v70 + v103;
    char v140 = (char *)v69 + v103;
    swift_bridgeObjectRetain(v102);
    v67((uint64_t)v140, (uint64_t *)v138, v66);
    uint64_t v104 = v71[6];
    uint64_t v105 = (char *)v69 + v104;
    v106 = (char *)v70 + v104;
    char v107 = v106[4];
    *(_DWORD *)uint64_t v105 = *(_DWORD *)v106;
    v105[4] = v107;
    uint64_t v108 = v71[7];
    v109 = (char *)v69 + v108;
    int v110 = (char *)v70 + v108;
    char v111 = v110[4];
    *(_DWORD *)v109 = *(_DWORD *)v110;
    v109[4] = v111;
    uint64_t v112 = v71[8];
    uint64_t v113 = (char *)v69 + v112;
    v114 = (char *)v70 + v112;
    char v115 = v114[4];
    *(_DWORD *)uint64_t v113 = *(_DWORD *)v114;
    v113[4] = v115;
    (*(void (**)(uint64_t *, void, uint64_t, int *))(v72 + 56))(v69, 0LL, 1LL, v71);
  }

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v59, 0LL, 1LL, v61);
  return a1;
}

uint64_t sub_1001F8CBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(_BYTE *)(v13 + 4) = *(_BYTE *)(v14 + 4);
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  uint64_t v21 = (char *)(a1 + v18);
  char v22 = (char *)(a2 + v18);
  uint64_t v23 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0LL);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1LL, v23))
  {
    uint64_t v25 = sub_100003A0C(&qword_10035C758);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v21, (uint64_t)v22, v6);
    v21[*(int *)(v23 + 20)] = v22[*(int *)(v23 + 20)];
    uint64_t v26 = *(int *)(v23 + 24);
    __dst = &v21[v26];
    uint64_t v27 = &v22[v26];
    uint64_t v28 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
    uint64_t v56 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v27, 1LL, v28))
    {
      uint64_t v29 = sub_100003A0C(&qword_10035C6B8);
      memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)__dst, (uint64_t)v27, v6);
      *(void *)&__dst[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(void))(v56 + 56))();
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0LL, 1LL, v23);
  }

  uint64_t v30 = a3[11];
  uint64_t v31 = a3[12];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  uint64_t v34 = (char *)(a1 + v31);
  uint64_t v35 = (char *)(a2 + v31);
  uint64_t v36 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0LL);
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1LL, v36))
  {
    uint64_t v38 = sub_100003A0C(&qword_10035C760);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v34, (uint64_t)v35, v6);
    v34[*(int *)(v36 + 20)] = v35[*(int *)(v36 + 20)];
    uint64_t v39 = *(int *)(v36 + 24);
    uint64_t v40 = &v34[v39];
    uint64_t v41 = &v35[v39];
    uint64_t v42 = (void (*)(char *, char *, uint64_t))v7;
    uint64_t v43 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
    uint64_t v44 = *((void *)v43 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v44 + 48))(v41, 1LL, v43))
    {
      uint64_t v45 = sub_100003A0C(&qword_10035C750);
      memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64LL));
    }

    else
    {
      *(void *)uint64_t v40 = *(void *)v41;
      v42(&v40[v43[5]], &v41[v43[5]], v6);
      uint64_t v46 = v43[6];
      uint64_t v47 = &v40[v46];
      uint64_t v48 = &v41[v46];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      uint64_t v49 = v43[7];
      uint64_t v50 = &v40[v49];
      uint64_t v51 = &v41[v49];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      v50[4] = v51[4];
      uint64_t v52 = v43[8];
      uint64_t v53 = &v40[v52];
      uint64_t v54 = &v41[v52];
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      (*(void (**)(char *, void, uint64_t, int *))(v44 + 56))(v40, 0LL, 1LL, v43);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0LL, 1LL, v36);
  }

  return a1;
}

uint64_t sub_1001F9054(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v108 = *(void *)(v6 - 8);
  char v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 40);
  v107(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v10;
  uint64_t v13 = a2 + v10;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a1 + v11;
  uint64_t v15 = a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  uint64_t v20 = (_BYTE *)(a1 + v17);
  uint64_t v21 = (_BYTE *)(a2 + v17);
  uint64_t v22 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams(0LL);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1LL, v22);
  int v26 = v24(v21, 1LL, v22);
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v34 = v6;
      v107((uint64_t)v20, (uint64_t)v21, v6);
      v20[*(int *)(v22 + 20)] = v21[*(int *)(v22 + 20)];
      uint64_t v35 = *(int *)(v22 + 24);
      uint64_t v36 = &v20[v35];
      uint64_t v37 = &v21[v35];
      uint64_t v38 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
      int v41 = v40(v36, 1LL, v38);
      int v42 = v40(v37, 1LL, v38);
      if (v41)
      {
        if (!v42)
        {
          uint64_t v6 = v34;
          (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v36, v37, v34);
          *(void *)&v36[*(int *)(v38 + 20)] = *(void *)&v37[*(int *)(v38 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0LL, 1LL, v38);
          goto LABEL_16;
        }
      }

      else
      {
        if (!v42)
        {
          uint64_t v6 = v34;
          v107((uint64_t)v36, (uint64_t)v37, v34);
          uint64_t v93 = *(int *)(v38 + 20);
          uint64_t v94 = *(void *)&v36[v93];
          *(void *)&v36[v93] = *(void *)&v37[v93];
          swift_release(v94);
          goto LABEL_16;
        }

        sub_100004090((uint64_t)v36, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured);
      }

      uint64_t v43 = sub_100003A0C(&qword_10035C6B8);
      memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64LL));
      uint64_t v6 = v34;
      goto LABEL_16;
    }

    sub_100004090((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
LABEL_7:
    uint64_t v33 = sub_100003A0C(&qword_10035C758);
    memcpy(v20, v21, *(void *)(*(void *)(v33 - 8) + 64LL));
    goto LABEL_16;
  }

  if (v26) {
    goto LABEL_7;
  }
  uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v108 + 32);
  v105(v20, v21, v6);
  v20[*(int *)(v22 + 20)] = v21[*(int *)(v22 + 20)];
  uint64_t v27 = *(int *)(v22 + 24);
  __dst = &v20[v27];
  uint64_t v28 = &v21[v27];
  uint64_t v29 = v6;
  uint64_t v30 = type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured(0LL);
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 1LL, v30))
  {
    uint64_t v32 = sub_100003A0C(&qword_10035C6B8);
    memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64LL));
  }

  else
  {
    v105(__dst, v28, v29);
    *(void *)&__dst[*(int *)(v30 + 20)] = *(void *)&v28[*(int *)(v30 + 20)];
    (*(void (**)(void))(v31 + 56))();
  }

  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0LL, 1LL, v22);
  uint64_t v6 = v29;
LABEL_16:
  uint64_t v44 = a3[11];
  uint64_t v45 = a3[12];
  uint64_t v46 = a1 + v44;
  uint64_t v47 = a2 + v44;
  *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
  *(_BYTE *)(v46 + 4) = *(_BYTE *)(v47 + 4);
  uint64_t v48 = a1 + v45;
  uint64_t v49 = (char *)(a2 + v45);
  uint64_t v50 = type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss(0LL);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1LL, v50);
  int v54 = v52((uint64_t)v49, 1LL, v50);
  if (!v53)
  {
    if (!v54)
    {
      v107(v48, (uint64_t)v49, v6);
      *(_BYTE *)(v48 + *(int *)(v50 + 20)) = v49[*(int *)(v50 + 20)];
      uint64_t v66 = *(int *)(v50 + 24);
      char v67 = (char *)(v48 + v66);
      uint64_t v68 = &v49[v66];
      uint64_t v69 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
      uint64_t v70 = *((void *)v69 - 1);
      uint64_t v71 = *(uint64_t (**)(char *, uint64_t, int *))(v70 + 48);
      int v72 = v71(v67, 1LL, v69);
      int v73 = v71(v68, 1LL, v69);
      if (v72)
      {
        if (!v73)
        {
          *(void *)char v67 = *(void *)v68;
          (*(void (**)(char *, char *, uint64_t))(v108 + 32))(&v67[v69[5]], &v68[v69[5]], v6);
          uint64_t v74 = v69[6];
          uint64_t v75 = &v67[v74];
          uint64_t v76 = &v68[v74];
          *(_DWORD *)uint64_t v75 = *(_DWORD *)v76;
          v75[4] = v76[4];
          uint64_t v77 = v69[7];
          uint64_t v78 = &v67[v77];
          uint64_t v79 = &v68[v77];
          *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
          v78[4] = v79[4];
          uint64_t v80 = v69[8];
          uint64_t v81 = &v67[v80];
          uint64_t v82 = &v68[v80];
          *(_DWORD *)uint64_t v81 = *(_DWORD *)v82;
          v81[4] = v82[4];
          (*(void (**)(char *, void, uint64_t, int *))(v70 + 56))(v67, 0LL, 1LL, v69);
          return a1;
        }
      }

      else
      {
        if (!v73)
        {
          uint64_t v95 = *(void *)v67;
          *(void *)char v67 = *(void *)v68;
          swift_bridgeObjectRelease(v95);
          v107((uint64_t)&v67[v69[5]], (uint64_t)&v68[v69[5]], v6);
          uint64_t v96 = v69[6];
          char v97 = &v67[v96];
          uint64_t v98 = &v68[v96];
          *(_DWORD *)char v97 = *(_DWORD *)v98;
          v97[4] = v98[4];
          uint64_t v99 = v69[7];
          uint64_t v100 = &v67[v99];
          char v101 = &v68[v99];
          *(_DWORD *)uint64_t v100 = *(_DWORD *)v101;
          v100[4] = v101[4];
          uint64_t v102 = v69[8];
          uint64_t v103 = &v67[v102];
          uint64_t v104 = &v68[v102];
          *(_DWORD *)uint64_t v103 = *(_DWORD *)v104;
          v103[4] = v104[4];
          return a1;
        }

        sub_100004090((uint64_t)v67, type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo);
      }

      size_t v63 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C750) - 8) + 64LL);
      int v64 = v67;
      int v65 = v68;
      goto LABEL_23;
    }

    sub_100004090(v48, type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
LABEL_22:
    size_t v63 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C760) - 8) + 64LL);
    int v64 = (void *)v48;
    int v65 = v49;
LABEL_23:
    memcpy(v64, v65, v63);
    return a1;
  }

  if (v54) {
    goto LABEL_22;
  }
  uint64_t v55 = *(void (**)(uint64_t, char *, uint64_t))(v108 + 32);
  v55(v48, v49, v6);
  *(_BYTE *)(v48 + *(int *)(v50 + 20)) = v49[*(int *)(v50 + 20)];
  uint64_t v56 = *(int *)(v50 + 24);
  int v57 = (void *)(v48 + v56);
  uint64_t v58 = &v49[v56];
  uint64_t v59 = (int *)type metadata accessor for Proto_Gnss_Emergency_GanssSignalMeasurementInfo(0LL);
  uint64_t v60 = v6;
  uint64_t v61 = *((void *)v59 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v61 + 48))(v58, 1LL, v59))
  {
    uint64_t v62 = sub_100003A0C(&qword_10035C750);
    memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64LL));
  }

  else
  {
    void *v57 = *(void *)v58;
    v55((uint64_t)v57 + v59[5], &v58[v59[5]], v60);
    uint64_t v83 = v59[6];
    int v84 = (char *)v57 + v83;
    uint64_t v85 = &v58[v83];
    *(_DWORD *)int v84 = *(_DWORD *)v85;
    v84[4] = v85[4];
    uint64_t v86 = v59[7];
    uint64_t v87 = (char *)v57 + v86;
    uint64_t v88 = &v58[v86];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
    v87[4] = v88[4];
    uint64_t v89 = v59[8];
    uint64_t v90 = (char *)v57 + v89;
    uint64_t v91 = &v58[v89];
    *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
    v90[4] = v91[4];
    (*(void (**)(void *, void, uint64_t, int *))(v61 + 56))(v57, 0LL, 1LL, v59);
  }

  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v48, 0LL, 1LL, v50);
  return a1;
}

uint64_t sub_1001F972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F9738);
}

uint64_t sub_1001F9738(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 249)
  {
    else {
      int v9 = *(unsigned __int8 *)(a1 + a3[5]);
    }
    unsigned int v10 = v9 - 6;
    else {
      return 0LL;
    }
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C758);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      uint64_t v13 = v11;
      uint64_t v14 = a3[10];
    }

    else
    {
      uint64_t v13 = sub_100003A0C(&qword_10035C760);
      uint64_t v12 = *(void *)(v13 - 8);
      uint64_t v14 = a3[12];
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }

uint64_t sub_1001F9810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F981C);
}

uint64_t sub_1001F981C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 249)
    {
      *(_BYTE *)(a1 + a4[5]) = a2 + 6;
      return result;
    }

    uint64_t v13 = sub_100003A0C(&qword_10035C758);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v15 = a4[10];
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_10035C760);
      uint64_t v14 = *(void *)(v10 - 8);
      uint64_t v15 = a4[12];
    }

    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1001F98E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    v8[1] = &unk_1002D5B70;
    v8[2] = &unk_1002D59B0;
    v8[3] = &unk_1002D59B0;
    v8[4] = &unk_1002D59B0;
    v8[5] = &unk_1002D59B0;
    sub_1000119EC(319LL, &qword_10035F970, type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasuredParams);
    if (v5 <= 0x3F)
    {
      v8[6] = *(void *)(v4 - 8) + 64LL;
      v8[7] = &unk_1002D59B0;
      sub_1000119EC( 319LL,  (unint64_t *)&unk_10035F978,  type metadata accessor for Proto_Gnss_Emergency_GanssMeasurementsForSingleGanss);
      if (v7 <= 0x3F)
      {
        v8[8] = *(void *)(v6 - 8) + 64LL;
        swift_initStructMetadata(a1, 256LL, 9LL, v8, a1 + 16);
      }
    }
  }

void *sub_1001F99C0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (void *)(v32 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v32);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = (char *)a1 + v21;
    int v25 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    uint64_t v29 = a3[13];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
  }

  return a1;
}

uint64_t sub_1001F9B18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001F9C44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  LOBYTE(v29) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v29;
  return a1;
}

uint64_t sub_1001F9D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001F9EAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  return a1;
}

uint64_t sub_1001F9FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F9FE4);
}

uint64_t sub_1001F9FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
  }
  unsigned int v10 = v9 - 6;
  else {
    return 0LL;
  }
}

uint64_t sub_1001FA068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA074);
}

uint64_t sub_1001FA074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 44)) = a2 + 6;
  return result;
}

uint64_t sub_1001FA0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FA100(a1, a2, a3, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D5B70);
}

uint64_t sub_1001FA100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v9 <= 0x3F)
  {
    v10[0] = *(void *)(result - 8) + 64LL;
    v10[1] = &unk_1002D59B0;
    v10[2] = &unk_1002D59B0;
    v10[3] = &unk_1002D59B0;
    v10[4] = &unk_1002D59B0;
    v10[5] = a4;
    v10[6] = &unk_1002D59B0;
    v10[7] = a5;
    v10[8] = &unk_1002D59B0;
    v10[9] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 10LL, v10, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1001FA190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA19C);
}

uint64_t sub_1001FA1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA1AC);
}

uint64_t sub_1001FA1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA1BC);
}

uint64_t sub_1001FA1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA1CC);
}

uint64_t sub_1001FA1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA1F4);
}

uint64_t sub_1001FA1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA204);
}

uint64_t sub_1001FA20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA218);
}

uint64_t sub_1001FA21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA228);
}

uint64_t *sub_1001FA22C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)v7 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = (char *)v7 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    uint64_t v25 = a3[10];
    uint64_t v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)a2 + v25;
    LODWORD(v21) = *(_DWORD *)v27;
    v26[4] = v27[4];
    *(_DWORD *)uint64_t v26 = (_DWORD)v21;
  }

  return v7;
}

uint64_t *sub_1001FA358(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  uint64_t v24 = a3[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  LODWORD(v20) = *(_DWORD *)v26;
  v25[4] = v26[4];
  *(_DWORD *)uint64_t v25 = (_DWORD)v20;
  return a1;
}

uint64_t *sub_1001FA45C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[4];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char v19 = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char v23 = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  char v27 = v26[4];
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  v25[4] = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  char v31 = v30[4];
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  v29[4] = v31;
  return a1;
}

void *sub_1001FA564(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  char v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  char v19 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = a3[10];
  char v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)char v23 = (_DWORD)v18;
  return a1;
}

uint64_t *sub_1001FA654(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  char v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(_DWORD *)char v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  char v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(_DWORD *)char v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  uint64_t v23 = a3[10];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  LODWORD(v19) = *(_DWORD *)v25;
  v24[4] = v25[4];
  *(_DWORD *)uint64_t v24 = (_DWORD)v19;
  return a1;
}

uint64_t sub_1001FA74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA758);
}

uint64_t sub_1001FA75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA768);
}

uint64_t sub_1001FA76C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_1002D59B0;
    v4[3] = &unk_1002D59B0;
    v4[4] = &unk_1002D59B0;
    v4[5] = &unk_1002D59B0;
    v4[6] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1001FA7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FA800);
}

uint64_t sub_1001FA804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FA810);
}

uint64_t *sub_1001FA814(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    char v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)char v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)v7 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = (char *)v7 + v20;
    uint64_t v24 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
  }

  return v7;
}

uint64_t *sub_1001FA924(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  char v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  return a1;
}

uint64_t *sub_1001FAA0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[4];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char v19 = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  char v23 = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  char v27 = v26[4];
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  v25[4] = v27;
  return a1;
}

void *sub_1001FAAF8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  char v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  char v19 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  return a1;
}

uint64_t *sub_1001FABCC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  char v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(_DWORD *)char v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  char v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(_DWORD *)char v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  return a1;
}

uint64_t sub_1001FACA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FACB4);
}

uint64_t sub_1001FACB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FACC4);
}

uint64_t sub_1001FACC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002017D8(a1, a2, a3, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D59B0);
}

uint64_t *sub_1001FACDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v20);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    char v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }

  return a1;
}

uint64_t sub_1001FADC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001FAE78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t sub_1001FAF38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001FAFF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1001FB0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FB0B4);
}

uint64_t sub_1001FB0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FB0C4);
}

uint64_t sub_1001FB0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FB0D4);
}

uint64_t sub_1001FB0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FB0E4);
}

uint64_t *sub_1001FB0E8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    a1[1] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)v7 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)v7 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    char v22 = (char *)v7 + v20;
    char v23 = (char *)a2 + v20;
    *(_DWORD *)char v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = (char *)v7 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = a3[11];
    char v27 = (char *)v7 + v26;
    uint64_t v28 = (char *)a2 + v26;
    LODWORD(v22) = *(_DWORD *)v28;
    v27[4] = v28[4];
    *(_DWORD *)char v27 = (_DWORD)v22;
  }

  return v7;
}

uint64_t *sub_1001FB22C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = (char *)a1 + v14;
  uint64_t v18 = (char *)a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = (char *)a1 + v19;
  char v22 = (char *)a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  char v23 = (char *)a1 + v20;
  uint64_t v24 = (char *)a2 + v20;
  *(_DWORD *)char v23 = *(_DWORD *)v24;
  v23[4] = v24[4];
  uint64_t v25 = a3[11];
  uint64_t v26 = (char *)a1 + v25;
  char v27 = (char *)a2 + v25;
  LODWORD(v21) = *(_DWORD *)v27;
  v26[4] = v27[4];
  *(_DWORD *)uint64_t v26 = (_DWORD)v21;
  return a1;
}

uint64_t *sub_1001FB340(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[1];
  uint64_t v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[4];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char v21 = v20[4];
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v21;
  uint64_t v22 = a3[9];
  char v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  char v25 = v24[4];
  *(_DWORD *)char v23 = *(_DWORD *)v24;
  v23[4] = v25;
  uint64_t v26 = a3[10];
  char v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  char v29 = v28[4];
  *(_DWORD *)char v27 = *(_DWORD *)v28;
  v27[4] = v29;
  uint64_t v30 = a3[11];
  char v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  char v33 = v32[4];
  *(_DWORD *)char v31 = *(_DWORD *)v32;
  v31[4] = v33;
  return a1;
}

_OWORD *sub_1001FB460(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = (char *)a1 + v17;
  char v21 = (char *)a2 + v17;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = a3[11];
  char v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)char v23 = (_DWORD)v18;
  return a1;
}

uint64_t *sub_1001FB550(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = (char *)a1 + v18;
  char v21 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = (char *)a1 + v19;
  char v23 = (char *)a2 + v19;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v23[4];
  uint64_t v24 = a3[11];
  char v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  LODWORD(v20) = *(_DWORD *)v26;
  v25[4] = v26[4];
  *(_DWORD *)char v25 = (_DWORD)v20;
  return a1;
}

uint64_t sub_1001FB658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FB664);
}

uint64_t sub_1001FB668(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( &a1[*(int *)(a3 + 24)],  a2,  v8);
  }

uint64_t sub_1001FB6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FB6F0);
}

char *sub_1001FB6F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( &v5[*(int *)(a4 + 24)],  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_1001FB768(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_1002D59B0;
    v4[4] = &unk_1002D59B0;
    v4[5] = &unk_1002D59B0;
    v4[6] = &unk_1002D59B0;
    void v4[7] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 8LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_1001FB7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FB7FC);
}

uint64_t sub_1001FB800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FB80C);
}

uint64_t *sub_1001FB814(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
    v14[4] = v15[4];
  }

  return v7;
}

uint64_t *sub_1001FB8DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  return a1;
}

uint64_t *sub_1001FB97C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[4];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v15;
  return a1;
}

void *sub_1001FBA18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  v11[4] = v12[4];
  return a1;
}

uint64_t *sub_1001FBAA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  return a1;
}

uint64_t sub_1001FBB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FBB40);
}

uint64_t sub_1001FBB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FBB50);
}

uint64_t sub_1001FBB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v7 <= 0x3F)
  {
    v8[1] = *(void *)(result - 8) + 64LL;
    v8[2] = a4;
    swift_initStructMetadata(a1, 256LL, 3LL, v8, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t *sub_1001FBBD0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v29);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    char v23 = (char *)a2 + v20;
    v22[4] = v23[4];
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    uint64_t v24 = (char *)a1 + v21;
    char v25 = (char *)a2 + v21;
    v24[4] = v25[4];
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    uint64_t v26 = a3[11];
    char v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    v27[4] = v28[4];
    *(_DWORD *)char v27 = *(_DWORD *)v28;
  }

  return a1;
}

uint64_t sub_1001FBD04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t sub_1001FBE0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  char v34 = *(_BYTE *)(v33 + 4);
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = v34;
  return a1;
}

uint64_t sub_1001FBF20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t sub_1001FC028(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t sub_1001FC130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FC13C);
}

uint64_t sub_1001FC140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FC14C);
}

uint64_t sub_1001FC150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100209498(a1, a2, a3, (uint64_t)&unk_1002D59B0);
}

uint64_t sub_1001FC15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FC168);
}

uint64_t sub_1001FC16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FC178);
}

uint64_t sub_1001FC17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FC188);
}

uint64_t sub_1001FC18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FC198);
}

uint64_t *sub_1001FC19C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C7A8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = *(int *)(v12 + 24);
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v22 = a3[6];
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = (char *)a1 + v23;
    uint64_t v27 = (char *)a2 + v23;
    *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
    v26[4] = v27[4];
  }

  return a1;
}

uint64_t sub_1001FC320(uint64_t a1, uint64_t a2)
{
  return sub_1001EE79C(a1, a2, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
}

uint64_t sub_1001FC32C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C7A8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  return a1;
}

uint64_t sub_1001FC484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v43 = a3;
  uint64_t v44 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v35 = *(int *)(v12 + 20);
      uint64_t v36 = &v10[v35];
      uint64_t v37 = &v11[v35];
      char v38 = v37[4];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v38;
      uint64_t v39 = *(int *)(v12 + 24);
      uint64_t v40 = &v10[v39];
      int v41 = &v11[v39];
      char v42 = v41[4];
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      v40[4] = v42;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    goto LABEL_6;
  }

  if (v16)
  {
LABEL_6:
    uint64_t v25 = sub_100003A0C(&qword_10035C7A8);
    memcpy(v10, v11, *(void *)(*(void *)(v25 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v17 = *(int *)(v12 + 20);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  char v20 = v19[4];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v20;
  uint64_t v21 = *(int *)(v12 + 24);
  uint64_t v22 = &v10[v21];
  uint64_t v23 = &v11[v21];
  char v24 = v23[4];
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v24;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v26 = *(int *)(v43 + 24);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(v44 + v26);
  int v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  uint64_t v30 = *(int *)(v43 + 28);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (int *)(v44 + v30);
  int v33 = *v32;
  *(_BYTE *)(v31 + 4) = *((_BYTE *)v32 + 4);
  *(_DWORD *)uint64_t v31 = v33;
  return a1;
}

uint64_t sub_1001FC66C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C7A8);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    int v15 = &v9[v14];
    int v16 = &v10[v14];
    *(_DWORD *)int v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = *(int *)(v11 + 24);
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v20 = a3[6];
  uint64_t v21 = a3[7];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  uint64_t v24 = a1 + v21;
  uint64_t v25 = a2 + v21;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  return a1;
}

uint64_t sub_1001FC7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14(v11, 1LL, v12);
  if (!v15)
  {
    if (!v16)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v31 = *(int *)(v12 + 20);
      uint64_t v32 = &v10[v31];
      int v33 = &v11[v31];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      uint64_t v34 = *(int *)(v12 + 24);
      uint64_t v35 = &v10[v34];
      uint64_t v36 = &v11[v34];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    goto LABEL_6;
  }

  if (v16)
  {
LABEL_6:
    uint64_t v23 = sub_100003A0C(&qword_10035C7A8);
    memcpy(v10, v11, *(void *)(*(void *)(v23 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v17 = *(int *)(v12 + 20);
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = *(int *)(v12 + 24);
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v24 = *(int *)(v37 + 24);
  uint64_t v25 = *(int *)(v37 + 28);
  uint64_t v26 = a1 + v24;
  uint64_t v27 = v38 + v24;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a1 + v25;
  uint64_t v29 = v38 + v25;
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = *(_BYTE *)(v29 + 4);
  return a1;
}

uint64_t sub_1001FC9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FC9B4);
}

uint64_t sub_1001FC9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013EA24(a1, a2, a3, &qword_10035C7A8);
}

uint64_t sub_1001FC9C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FC9CC);
}

uint64_t sub_1001FC9CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_10013EAB4(a1, a2, a3, a4, &qword_10035C7A8);
}

void sub_1001FC9D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_1003602E8,  type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      v6[2] = &unk_1002D59B0;
      v6[3] = &unk_1002D59B0;
      swift_initStructMetadata(a1, 256LL, 4LL, v6, a1 + 16);
    }
  }

uint64_t *sub_1001FCA78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C7B0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
      v17[4] = v18[4];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      uint64_t v22 = v12[7];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v25 = *(int *)(a3 + 24);
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t v29 = *((void *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1LL, v28))
    {
      uint64_t v30 = sub_100003A0C(&qword_10035C7B8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v26, (uint64_t *)v27, v7);
      uint64_t v31 = v28[5];
      __dst = &v26[v31];
      uint64_t v32 = &v27[v31];
      uint64_t v33 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1LL, v33))
      {
        uint64_t v35 = sub_100003A0C(&qword_10035C7A8);
        memcpy(__dst, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
      }

      else
      {
        v8((uint64_t *)__dst, (uint64_t *)v32, v7);
        uint64_t v36 = *(int *)(v33 + 20);
        uint64_t v37 = &__dst[v36];
        uint64_t v38 = &v32[v36];
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        uint64_t v39 = *(int *)(v33 + 24);
        uint64_t v40 = &__dst[v39];
        int v41 = &v32[v39];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        (*(void (**)(void))(v34 + 56))();
      }

      uint64_t v42 = v28[6];
      uint64_t v43 = &v26[v42];
      uint64_t v44 = &v27[v42];
      *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
      v43[4] = v44[4];
      uint64_t v45 = v28[7];
      uint64_t v46 = &v26[v45];
      uint64_t v47 = &v27[v45];
      v46[4] = v47[4];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0LL, 1LL, v28);
    }
  }

  return a1;
}

uint64_t sub_1001FCD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v12(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8);
  if (!(_DWORD)result)
  {
    v12(v7, v4);
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))(v10, 1LL, v11);
    if (!(_DWORD)result) {
      return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v4);
    }
  }

  return result;
}

uint64_t sub_1001FCE7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C7B0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1LL, v26))
  {
    uint64_t v28 = sub_100003A0C(&qword_10035C7B8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    uint64_t v29 = v26[5];
    __dst = &v24[v29];
    uint64_t v30 = &v25[v29];
    uint64_t v31 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1LL, v31))
    {
      uint64_t v33 = sub_100003A0C(&qword_10035C7A8);
      memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)__dst, (uint64_t)v30, v6);
      uint64_t v34 = *(int *)(v31 + 20);
      uint64_t v35 = &__dst[v34];
      uint64_t v36 = &v30[v34];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      uint64_t v37 = *(int *)(v31 + 24);
      uint64_t v38 = &__dst[v37];
      uint64_t v39 = &v30[v37];
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(void))(v32 + 56))();
    }

    uint64_t v40 = v26[6];
    int v41 = &v24[v40];
    uint64_t v42 = &v25[v40];
    *(_DWORD *)int v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    uint64_t v43 = v26[7];
    uint64_t v44 = &v24[v43];
    uint64_t v45 = &v25[v43];
    v44[4] = v45[4];
    *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
    (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0LL, 1LL, v26);
  }

  return a1;
}

uint64_t sub_1001FD138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v106 = *(void *)(v6 - 8);
  __dst = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 24);
  __dst(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v8, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[4];
      *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
      v16[4] = v18;
      uint64_t v19 = v10[6];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      char v22 = v21[4];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v22;
      uint64_t v23 = v10[7];
      uint64_t v24 = &v8[v23];
      uint64_t v25 = &v9[v23];
      char v26 = v25[4];
      *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
      v24[4] = v26;
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0LL, 1LL, v10);
LABEL_7:
      uint64_t v28 = (void (*)(char *, char *, uint64_t))__dst;
      goto LABEL_8;
    }

uint64_t sub_1001FD674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C7B0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = v11[6];
    char v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)char v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = v11[7];
    uint64_t v21 = &v9[v20];
    char v22 = &v10[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v23 = *(int *)(a3 + 24);
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  char v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
  uint64_t v27 = *((void *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1LL, v26))
  {
    uint64_t v28 = sub_100003A0C(&qword_10035C7B8);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v24, (uint64_t)v25, v6);
    uint64_t v29 = v26[5];
    __dst = &v24[v29];
    uint64_t v30 = &v25[v29];
    uint64_t v31 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1LL, v31))
    {
      uint64_t v33 = sub_100003A0C(&qword_10035C7A8);
      memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)__dst, (uint64_t)v30, v6);
      uint64_t v34 = *(int *)(v31 + 20);
      int v35 = &__dst[v34];
      int v36 = &v30[v34];
      *(_DWORD *)int v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      uint64_t v37 = *(int *)(v31 + 24);
      uint64_t v38 = &__dst[v37];
      uint64_t v39 = &v30[v37];
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(void))(v32 + 56))();
    }

    uint64_t v40 = v26[6];
    uint64_t v41 = &v24[v40];
    uint64_t v42 = &v25[v40];
    *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    uint64_t v43 = v26[7];
    uint64_t v44 = &v24[v43];
    uint64_t v45 = &v25[v43];
    v44[4] = v45[4];
    *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
    (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0LL, 1LL, v26);
  }

  return a1;
}

uint64_t sub_1001FD930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v90 = *(void *)(v6 - 8);
  __dst = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 40);
  __dst(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v8, v9, v6);
      uint64_t v15 = v10[5];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
      v16[4] = v17[4];
      uint64_t v18 = v10[6];
      uint64_t v19 = &v8[v18];
      uint64_t v20 = &v9[v18];
      *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
      v19[4] = v20[4];
      uint64_t v21 = v10[7];
      char v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      *(_DWORD *)char v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0LL, 1LL, v10);
LABEL_7:
      uint64_t v25 = (void (*)(char *, char *, uint64_t))__dst;
      goto LABEL_8;
    }

uint64_t sub_1001FDE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FDE78);
}

uint64_t sub_1001FDE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100202500(a1, a2, a3, &qword_10035C7B0, &qword_10035C7B8);
}

uint64_t sub_1001FDE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FDE98);
}

uint64_t sub_1001FDE98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1002025C8(a1, a2, a3, a4, &qword_10035C7B0, &qword_10035C7B8);
}

void sub_1001FDEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

char *sub_1001FDED0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C7C0);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      uint64_t v57 = v13;
      v8(v10, v11, v7);
      uint64_t v16 = *(int *)(v12 + 20);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      uint64_t v19 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v20 = *((void *)v19 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1LL, v19))
      {
        uint64_t v21 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64LL));
      }

      else
      {
        v8(v17, v18, v7);
        uint64_t v22 = v19[5];
        uint64_t v23 = &v17[v22];
        uint64_t v24 = &v18[v22];
        *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
        v23[4] = v24[4];
        uint64_t v25 = v19[6];
        uint64_t v26 = &v17[v25];
        uint64_t v27 = &v18[v25];
        *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
        v26[4] = v27[4];
        uint64_t v28 = v19[7];
        uint64_t v29 = &v17[v28];
        uint64_t v30 = &v18[v28];
        *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
        v29[4] = v30[4];
        (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0LL, 1LL, v19);
      }

      uint64_t v31 = *(int *)(v12 + 24);
      int v32 = &v10[v31];
      int v33 = &v11[v31];
      uint64_t v34 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v35 = *((void *)v34 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v35 + 48))(v33, 1LL, v34))
      {
        uint64_t v36 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64LL));
      }

      else
      {
        uint64_t v55 = v35;
        v8(v32, v33, v7);
        uint64_t v37 = v34[5];
        __dst = &v32[v37];
        uint64_t v38 = &v33[v37];
        uint64_t v39 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v54 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v38, 1LL, v39))
        {
          uint64_t v40 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64LL));
        }

        else
        {
          v8(__dst, v38, v7);
          uint64_t v41 = *(int *)(v39 + 20);
          uint64_t v42 = &__dst[v41];
          uint64_t v43 = &v38[v41];
          *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
          v42[4] = v43[4];
          uint64_t v44 = *(int *)(v39 + 24);
          uint64_t v45 = &__dst[v44];
          uint64_t v46 = &v38[v44];
          *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
          v45[4] = v46[4];
          (*(void (**)(void))(v54 + 56))();
        }

        uint64_t v47 = v34[6];
        uint64_t v48 = &v32[v47];
        uint64_t v49 = &v33[v47];
        *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
        v48[4] = v49[4];
        uint64_t v50 = v34[7];
        char v51 = &v32[v50];
        uint64_t v52 = &v33[v50];
        v51[4] = v52[4];
        *(_DWORD *)char v51 = *(_DWORD *)v52;
        (*(void (**)(char *, void, uint64_t, int *))(v55 + 56))(v32, 0LL, 1LL, v34);
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v10, 0LL, 1LL, v12);
    }
  }

  return a1;
}

uint64_t sub_1001FE25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v14(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result)
  {
    v14(v5, v4);
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v10 = v5 + *(int *)(v6 + 24);
    uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))(v10, 1LL, v11);
    if (!(_DWORD)result)
    {
      v14(v10, v4);
      uint64_t v12 = v10 + *(int *)(v11 + 20);
      uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48LL))(v12, 1LL, v13);
      if (!(_DWORD)result) {
        return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v4);
      }
    }
  }

  return result;
}

uint64_t sub_1001FE3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C7C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v55 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1LL, v17))
    {
      uint64_t v19 = sub_100003A0C(&qword_10035C7B0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      uint64_t v20 = v17[5];
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      uint64_t v23 = v17[6];
      uint64_t v24 = &v15[v23];
      uint64_t v25 = &v16[v23];
      *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      uint64_t v26 = v17[7];
      uint64_t v27 = &v15[v26];
      uint64_t v28 = &v16[v26];
      *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
      v27[4] = v28[4];
      (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0LL, 1LL, v17);
    }

    uint64_t v29 = *(int *)(v11 + 24);
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    int v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t v33 = *((void *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1LL, v32))
    {
      uint64_t v34 = sub_100003A0C(&qword_10035C7B8);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    }

    else
    {
      uint64_t v53 = v33;
      v7((uint64_t)v30, (uint64_t)v31, v6);
      uint64_t v35 = v32[5];
      __dst = &v30[v35];
      uint64_t v36 = &v31[v35];
      uint64_t v37 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t v52 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v36, 1LL, v37))
      {
        uint64_t v38 = sub_100003A0C(&qword_10035C7A8);
        memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64LL));
      }

      else
      {
        v7((uint64_t)__dst, (uint64_t)v36, v6);
        uint64_t v39 = *(int *)(v37 + 20);
        uint64_t v40 = &__dst[v39];
        uint64_t v41 = &v36[v39];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        uint64_t v42 = *(int *)(v37 + 24);
        uint64_t v43 = &__dst[v42];
        uint64_t v44 = &v36[v42];
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        (*(void (**)(void))(v52 + 56))();
      }

      uint64_t v45 = v32[6];
      uint64_t v46 = &v30[v45];
      uint64_t v47 = &v31[v45];
      *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
      v46[4] = v47[4];
      uint64_t v48 = v32[7];
      uint64_t v49 = &v30[v48];
      uint64_t v50 = &v31[v48];
      v49[4] = v50[4];
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(v30, 0LL, 1LL, v32);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v9, 0LL, 1LL, v11);
  }

  return a1;
}

char *sub_1001FE718(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (uint64_t)&a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14((uint64_t)v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v167 = a1;
      uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
      v17(v10, v11, v6);
      uint64_t v18 = *(int *)(v12 + 20);
      uint64_t v19 = (char *)(v10 + v18);
      uint64_t v20 = &v11[v18];
      uint64_t v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v22 = *((void *)v21 - 1);
      __src = (void (*)(char *, char *, uint64_t))v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1LL, v21))
      {
        uint64_t v23 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
      }

      else
      {
        v17((uint64_t)v19, v20, v6);
        uint64_t v35 = v21[5];
        uint64_t v36 = &v19[v35];
        uint64_t v37 = &v20[v35];
        char v38 = v37[4];
        *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
        v36[4] = v38;
        uint64_t v39 = v21[6];
        uint64_t v40 = &v19[v39];
        uint64_t v41 = &v20[v39];
        char v42 = v41[4];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        v40[4] = v42;
        uint64_t v43 = v21[7];
        uint64_t v44 = &v19[v43];
        uint64_t v45 = &v20[v43];
        char v46 = v45[4];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v46;
        (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0LL, 1LL, v21);
      }

      a1 = v167;
      uint64_t v47 = *(int *)(v12 + 24);
      uint64_t v48 = (char *)(v10 + v47);
      uint64_t v49 = &v11[v47];
      uint64_t v50 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v51 = *((void *)v50 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v49, 1LL, v50))
      {
        uint64_t v52 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
      }

      else
      {
        uint64_t v162 = v51;
        __src(v48, v49, v6);
        uint64_t v53 = v50[5];
        __dsta = &v48[v53];
        uint64_t v54 = &v49[v53];
        uint64_t v55 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v160 = *(void *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v54, 1LL, v55))
        {
          uint64_t v56 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dsta, v54, *(void *)(*(void *)(v56 - 8) + 64LL));
        }

        else
        {
          __src(__dsta, v54, v6);
          uint64_t v69 = *(int *)(v55 + 20);
          char v70 = &__dsta[v69];
          uint64_t v71 = &v54[v69];
          char v72 = v71[4];
          *(_DWORD *)char v70 = *(_DWORD *)v71;
          v70[4] = v72;
          uint64_t v73 = *(int *)(v55 + 24);
          char v74 = &__dsta[v73];
          uint64_t v75 = &v54[v73];
          char v76 = v75[4];
          *(_DWORD *)char v74 = *(_DWORD *)v75;
          v74[4] = v76;
          (*(void (**)(void))(v160 + 56))();
        }

        a1 = v167;
        uint64_t v77 = v50[6];
        char v78 = &v48[v77];
        uint64_t v79 = &v49[v77];
        int v80 = *(_DWORD *)v79;
        v78[4] = v79[4];
        *(_DWORD *)char v78 = v80;
        uint64_t v81 = v50[7];
        int v82 = &v48[v81];
        uint64_t v83 = &v49[v81];
        int v84 = *(_DWORD *)v83;
        v82[4] = v83[4];
        *(_DWORD *)int v82 = v84;
        (*(void (**)(char *, void, uint64_t, int *))(v162 + 56))(v48, 0LL, 1LL, v50);
      }

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      return a1;
    }

    goto LABEL_7;
  }

  if (v16)
  {
    sub_100004090(v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7C0) - 8) + 64LL);
    uint64_t v25 = (void *)v10;
    uint64_t v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }

  __dst = v8;
  v8((char *)v10, v11, v6);
  uint64_t v27 = *(int *)(v12 + 20);
  uint64_t v28 = (char *)(v10 + v27);
  uint64_t v29 = &v11[v27];
  uint64_t v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v161 = *((void *)v30 - 1);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, int *))(v161 + 48);
  uint64_t v168 = v28;
  LODWORD(v28) = v31(v28, 1LL, v30);
  int v32 = v31(v29, 1LL, v30);
  if ((_DWORD)v28)
  {
    if (v32)
    {
      size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v34 = v168;
LABEL_19:
      memcpy(v34, v29, v33);
      goto LABEL_26;
    }

    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v168, v29, v6);
    uint64_t v57 = v30[5];
    uint64_t v58 = &v168[v57];
    uint64_t v59 = &v29[v57];
    char v60 = v59[4];
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
    v58[4] = v60;
    uint64_t v61 = v30[6];
    int v62 = &v168[v61];
    uint64_t v63 = &v29[v61];
    char v64 = v63[4];
    *(_DWORD *)int v62 = *(_DWORD *)v63;
    v62[4] = v64;
    uint64_t v65 = v30[7];
    uint64_t v66 = &v168[v65];
    uint64_t v67 = &v29[v65];
    char v68 = v67[4];
    *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
    v66[4] = v68;
    (*(void (**)(char *, void, uint64_t, int *))(v161 + 56))(v168, 0LL, 1LL, v30);
  }

  else
  {
    if (v32)
    {
      sub_100004090((uint64_t)v168, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v34 = v168;
      goto LABEL_19;
    }

    __dst(v168, v29, v6);
    uint64_t v86 = v30[5];
    uint64_t v87 = &v168[v86];
    uint64_t v88 = &v29[v86];
    char v89 = v88[4];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
    v87[4] = v89;
    uint64_t v90 = v30[6];
    int v91 = &v168[v90];
    uint64_t v92 = &v29[v90];
    char v93 = v92[4];
    *(_DWORD *)int v91 = *(_DWORD *)v92;
    v91[4] = v93;
    uint64_t v94 = v30[7];
    int v95 = &v168[v94];
    uint64_t v96 = &v29[v94];
    char v97 = v96[4];
    *(_DWORD *)int v95 = *(_DWORD *)v96;
    v95[4] = v97;
  }

uint64_t sub_1001FEFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C7C0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    uint64_t v55 = v12;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = *(int *)(v11 + 20);
    int v15 = &v9[v14];
    int v16 = &v10[v14];
    uint64_t v17 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1LL, v17))
    {
      uint64_t v19 = sub_100003A0C(&qword_10035C7B0);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v15, (uint64_t)v16, v6);
      uint64_t v20 = v17[5];
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      uint64_t v23 = v17[6];
      size_t v24 = &v15[v23];
      uint64_t v25 = &v16[v23];
      *(_DWORD *)size_t v24 = *(_DWORD *)v25;
      v24[4] = v25[4];
      uint64_t v26 = v17[7];
      uint64_t v27 = &v15[v26];
      uint64_t v28 = &v16[v26];
      *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
      v27[4] = v28[4];
      (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0LL, 1LL, v17);
    }

    uint64_t v29 = *(int *)(v11 + 24);
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    int v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t v33 = *((void *)v32 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1LL, v32))
    {
      uint64_t v34 = sub_100003A0C(&qword_10035C7B8);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64LL));
    }

    else
    {
      uint64_t v53 = v33;
      v7((uint64_t)v30, (uint64_t)v31, v6);
      uint64_t v35 = v32[5];
      __dst = &v30[v35];
      uint64_t v36 = &v31[v35];
      uint64_t v37 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t v52 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v36, 1LL, v37))
      {
        uint64_t v38 = sub_100003A0C(&qword_10035C7A8);
        memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64LL));
      }

      else
      {
        v7((uint64_t)__dst, (uint64_t)v36, v6);
        uint64_t v39 = *(int *)(v37 + 20);
        uint64_t v40 = &__dst[v39];
        uint64_t v41 = &v36[v39];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        uint64_t v42 = *(int *)(v37 + 24);
        uint64_t v43 = &__dst[v42];
        uint64_t v44 = &v36[v42];
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        (*(void (**)(void))(v52 + 56))();
      }

      uint64_t v45 = v32[6];
      char v46 = &v30[v45];
      uint64_t v47 = &v31[v45];
      *(_DWORD *)char v46 = *(_DWORD *)v47;
      v46[4] = v47[4];
      uint64_t v48 = v32[7];
      uint64_t v49 = &v30[v48];
      uint64_t v50 = &v31[v48];
      v49[4] = v50[4];
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(v30, 0LL, 1LL, v32);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v9, 0LL, 1LL, v11);
  }

  return a1;
}

char *sub_1001FF344(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v10 = (uint64_t)&a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14((uint64_t)v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v144 = a1;
      uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
      v17(v10, v11, v6);
      uint64_t v18 = *(int *)(v12 + 20);
      uint64_t v19 = (char *)(v10 + v18);
      uint64_t v20 = &v11[v18];
      uint64_t v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v22 = *((void *)v21 - 1);
      __src = (void (*)(char *, char *, uint64_t))v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1LL, v21))
      {
        uint64_t v23 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
      }

      else
      {
        v17((uint64_t)v19, v20, v6);
        uint64_t v35 = v21[5];
        uint64_t v36 = &v19[v35];
        uint64_t v37 = &v20[v35];
        *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
        v36[4] = v37[4];
        uint64_t v38 = v21[6];
        uint64_t v39 = &v19[v38];
        uint64_t v40 = &v20[v38];
        *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
        v39[4] = v40[4];
        uint64_t v41 = v21[7];
        uint64_t v42 = &v19[v41];
        uint64_t v43 = &v20[v41];
        *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
        v42[4] = v43[4];
        (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0LL, 1LL, v21);
      }

      a1 = v144;
      uint64_t v44 = *(int *)(v12 + 24);
      uint64_t v45 = (char *)(v10 + v44);
      char v46 = &v11[v44];
      uint64_t v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v48 = *((void *)v47 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1LL, v47))
      {
        uint64_t v49 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
      }

      else
      {
        uint64_t v139 = v48;
        __src(v45, v46, v6);
        uint64_t v50 = v47[5];
        __dsta = &v45[v50];
        uint64_t v51 = &v46[v50];
        uint64_t v52 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v137 = *(void *)(v52 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v51, 1LL, v52))
        {
          uint64_t v53 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dsta, v51, *(void *)(*(void *)(v53 - 8) + 64LL));
        }

        else
        {
          __src(__dsta, v51, v6);
          uint64_t v63 = *(int *)(v52 + 20);
          char v64 = &__dsta[v63];
          uint64_t v65 = &v51[v63];
          *(_DWORD *)char v64 = *(_DWORD *)v65;
          v64[4] = v65[4];
          uint64_t v66 = *(int *)(v52 + 24);
          uint64_t v67 = &__dsta[v66];
          char v68 = &v51[v66];
          *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
          v67[4] = v68[4];
          (*(void (**)(void))(v137 + 56))();
        }

        a1 = v144;
        uint64_t v69 = v47[6];
        char v70 = &v45[v69];
        uint64_t v71 = &v46[v69];
        *(_DWORD *)char v70 = *(_DWORD *)v71;
        v70[4] = v71[4];
        uint64_t v72 = v47[7];
        uint64_t v73 = &v45[v72];
        char v74 = &v46[v72];
        v73[4] = v74[4];
        *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
        (*(void (**)(char *, void, uint64_t, int *))(v139 + 56))(v45, 0LL, 1LL, v47);
      }

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      return a1;
    }

    goto LABEL_7;
  }

  if (v16)
  {
    sub_100004090(v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7C0) - 8) + 64LL);
    uint64_t v25 = (void *)v10;
    uint64_t v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }

  __dst = v8;
  v8((char *)v10, v11, v6);
  uint64_t v27 = *(int *)(v12 + 20);
  uint64_t v28 = (char *)(v10 + v27);
  uint64_t v29 = &v11[v27];
  uint64_t v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v138 = *((void *)v30 - 1);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, int *))(v138 + 48);
  uint64_t v145 = v28;
  LODWORD(v28) = v31(v28, 1LL, v30);
  int v32 = v31(v29, 1LL, v30);
  if ((_DWORD)v28)
  {
    if (v32)
    {
      size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v34 = v145;
LABEL_19:
      memcpy(v34, v29, v33);
      goto LABEL_26;
    }

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v145, v29, v6);
    uint64_t v54 = v30[5];
    uint64_t v55 = &v145[v54];
    uint64_t v56 = &v29[v54];
    *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
    v55[4] = v56[4];
    uint64_t v57 = v30[6];
    uint64_t v58 = &v145[v57];
    uint64_t v59 = &v29[v57];
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    uint64_t v60 = v30[7];
    uint64_t v61 = &v145[v60];
    int v62 = &v29[v60];
    *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    (*(void (**)(char *, void, uint64_t, int *))(v138 + 56))(v145, 0LL, 1LL, v30);
  }

  else
  {
    if (v32)
    {
      sub_100004090((uint64_t)v145, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v34 = v145;
      goto LABEL_19;
    }

    __dst(v145, v29, v6);
    uint64_t v76 = v30[5];
    uint64_t v77 = &v145[v76];
    char v78 = &v29[v76];
    *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
    v77[4] = v78[4];
    uint64_t v79 = v30[6];
    int v80 = &v145[v79];
    uint64_t v81 = &v29[v79];
    *(_DWORD *)int v80 = *(_DWORD *)v81;
    v80[4] = v81[4];
    uint64_t v82 = v30[7];
    uint64_t v83 = &v145[v82];
    int v84 = &v29[v82];
    *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
    v83[4] = v84[4];
  }

uint64_t sub_1001FFC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FFC18);
}

uint64_t sub_1001FFC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001FFC24(a1, a2, a3, &qword_10035C7C0);
}

uint64_t sub_1001FFC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, a2, v8);
  }
  if ((_DWORD)a2 == 249)
  {
    else {
      int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v12 = v11 - 6;
    else {
      return 0LL;
    }
  }

  else
  {
    uint64_t v13 = sub_100003A0C(a4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48LL))( a1 + *(int *)(a3 + 24),  a2,  v13);
  }

uint64_t sub_1001FFCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FFCE0);
}

uint64_t sub_1001FFCE0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1001FFCEC(a1, a2, a3, a4, &qword_10035C7C0);
}

uint64_t sub_1001FFCEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = result;
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    uint64_t v14 = a1;
  }

  else
  {
    if (a3 == 249)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
      return result;
    }

    uint64_t v12 = sub_100003A0C(a5);
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL);
  }

  return v13(v14, a2, a2, v12);
}

void sub_1001FFD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_1001FFDB8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v23);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    int v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)int v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    LODWORD(v16) = *(_DWORD *)v22;
    v21[4] = v22[4];
    *(_DWORD *)uint64_t v21 = (_DWORD)v16;
  }

  return a1;
}

uint64_t sub_1001FFEB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  LODWORD(v15) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v15;
  return a1;
}

uint64_t sub_1001FFF8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  return a1;
}

uint64_t sub_100200068(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  LODWORD(v15) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v15;
  return a1;
}

uint64_t sub_10020013C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  LODWORD(v15) = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = v15;
  return a1;
}

uint64_t sub_100200210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020021C);
}

uint64_t sub_100200220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020022C);
}

uint64_t sub_100200230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100200240(a1, a2, a3, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D59B0);
}

uint64_t sub_100200240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v9 <= 0x3F)
  {
    v10[0] = *(void *)(result - 8) + 64LL;
    v10[1] = a4;
    v10[2] = a5;
    v10[3] = a5;
    v10[4] = &unk_1002D59B0;
    v10[5] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 6LL, v10, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_1002002C8(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (char *)v7 + v19;
    char v22 = (char *)a2 + v19;
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = (char *)v7 + v20;
    uint64_t v24 = (char *)a2 + v20;
    v23[4] = v24[4];
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    uint64_t v25 = a3[10];
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)v7 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
    v27[4] = v28[4];
    *((_BYTE *)v7 + v26) = *((_BYTE *)a2 + v26);
    uint64_t v29 = a3[13];
    *((_BYTE *)v7 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    uint64_t v30 = (char *)v7 + v29;
    uint64_t v31 = (char *)a2 + v29;
    v30[4] = v31[4];
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  }

  return v7;
}

void *sub_100200420(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v18;
  uint64_t v21 = (char *)a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  char v22 = (char *)a1 + v19;
  uint64_t v23 = (char *)a2 + v19;
  v22[4] = v23[4];
  *(_DWORD *)char v22 = *(_DWORD *)v23;
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  v26[4] = v27[4];
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  uint64_t v28 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  v29[4] = v30[4];
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  return a1;
}

void *sub_100200550(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  int v15 = *(_DWORD *)v14;
  v13[4] = v14[4];
  *(_DWORD *)uint64_t v13 = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  LOBYTE(v15) = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v15;
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  LOBYTE(v15) = v21[4];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v15;
  uint64_t v22 = a3[9];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  LOBYTE(v15) = v24[4];
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  v23[4] = v15;
  uint64_t v25 = a3[10];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  LOBYTE(v15) = v27[4];
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  v26[4] = v15;
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  uint64_t v28 = a3[13];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  int v31 = *(_DWORD *)v30;
  v29[4] = v30[4];
  *(_DWORD *)uint64_t v29 = v31;
  return a1;
}

void *sub_10020068C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  int v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v19[4];
  uint64_t v20 = (char *)a1 + v17;
  uint64_t v21 = (char *)a2 + v17;
  v20[4] = v21[4];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  v24[4] = v25[4];
  *((_BYTE *)a1 + v23) = *((_BYTE *)a2 + v23);
  uint64_t v26 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  v27[4] = v28[4];
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  return a1;
}

void *sub_1002007A8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  int v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(_DWORD *)int v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v20[4];
  uint64_t v21 = (char *)a1 + v18;
  uint64_t v22 = (char *)a2 + v18;
  v21[4] = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)a1 + v23;
  uint64_t v26 = (char *)a2 + v23;
  *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
  v25[4] = v26[4];
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  uint64_t v27 = a3[13];
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  v28[4] = v29[4];
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  return a1;
}

uint64_t sub_1002008CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002008D8);
}

uint64_t sub_1002008DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002008E8);
}

uint64_t sub_1002008EC(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    v4[2] = &unk_1002D59B0;
    v4[3] = &unk_1002D59B0;
    v4[4] = &unk_1002D59B0;
    v4[5] = &unk_1002D59B0;
    v4[6] = &unk_1002D59B0;
    void v4[7] = &unk_1002D5B70;
    void v4[8] = &unk_1002D5AA0;
    v4[9] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 10LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_10020098C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v45 = *a2;
    *a1 = *a2;
    a1 = (void *)(v45 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v45);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = (char *)a1 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    uint64_t v28 = (char *)a1 + v26;
    uint64_t v29 = (char *)a2 + v26;
    *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    uint64_t v30 = (char *)a1 + v27;
    int v31 = (char *)a2 + v27;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = a3[13];
    uint64_t v33 = a3[14];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = (char *)a1 + v33;
    uint64_t v37 = (char *)a2 + v33;
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    uint64_t v38 = a3[15];
    uint64_t v39 = a3[16];
    uint64_t v40 = (char *)a1 + v38;
    uint64_t v41 = (char *)a2 + v38;
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    *((_BYTE *)a1 + v39) = *((_BYTE *)a2 + v39);
    uint64_t v42 = a3[18];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
    uint64_t v43 = (char *)a1 + v42;
    uint64_t v44 = (char *)a2 + v42;
    v43[4] = v44[4];
    *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
  }

  return a1;
}

uint64_t sub_100200B54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  uint64_t v41 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  return a1;
}

uint64_t sub_100200CF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 4);
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = v10;
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 4);
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = v10;
  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  LOBYTE(v10) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = v10;
  uint64_t v35 = a3[14];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  LOBYTE(v10) = *(_BYTE *)(v37 + 4);
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = v10;
  uint64_t v38 = a3[15];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  LOBYTE(v10) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = v10;
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  uint64_t v41 = a3[18];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (int *)(a2 + v41);
  int v44 = *v43;
  *(_BYTE *)(v42 + 4) = *((_BYTE *)v43 + 4);
  *(_DWORD *)uint64_t v42 = v44;
  return a1;
}

uint64_t sub_100200EA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  uint64_t v41 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  return a1;
}

uint64_t sub_100201044(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_BYTE *)(a1 + v38) = *(_BYTE *)(a2 + v38);
  uint64_t v41 = a3[18];
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  return a1;
}

uint64_t sub_1002011E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002011EC);
}

uint64_t sub_1002011EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 64));
  }
  unsigned int v10 = v9 - 6;
  else {
    return 0LL;
  }
}

uint64_t sub_100201270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020127C);
}

uint64_t sub_10020127C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 64)) = a2 + 6;
  return result;
}

uint64_t sub_1002012F4(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002D59B0;
    v4[2] = &unk_1002D59B0;
    v4[3] = &unk_1002D59B0;
    v4[4] = &unk_1002D59B0;
    v4[5] = &unk_1002D59B0;
    v4[6] = &unk_1002D59B0;
    void v4[7] = &unk_1002D59B0;
    void v4[8] = &unk_1002D59B0;
    v4[9] = &unk_1002D59B0;
    void v4[10] = &unk_1002D59B0;
    v4[11] = &unk_1002D59B0;
    v4[12] = &unk_1002D5B70;
    v4[13] = &unk_1002D5AA0;
    v4[14] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 15LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100201390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020139C);
}

uint64_t sub_1002013A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002013AC);
}

void *sub_1002013B0(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    *((_BYTE *)v7 + v14) = *((_BYTE *)a2 + v14);
    uint64_t v17 = a3[9];
    *((_BYTE *)v7 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    uint64_t v18 = (char *)v7 + v17;
    uint64_t v19 = (char *)a2 + v17;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }

  return v7;
}

void *sub_1002014A0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  uint64_t v16 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  return a1;
}

void *sub_100201568(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  int v15 = *(_DWORD *)v14;
  v13[4] = v14[4];
  *(_DWORD *)uint64_t v13 = v15;
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  LOBYTE(v15) = v18[4];
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v15;
  return a1;
}

void *sub_100201634(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  v12[4] = v13[4];
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  uint64_t v14 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  int v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(_DWORD *)int v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  return a1;
}

void *sub_1002016E8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  uint64_t v15 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  return a1;
}

uint64_t sub_1002017A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002017B0);
}

uint64_t sub_1002017B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002017C0);
}

uint64_t sub_1002017C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002017D8(a1, a2, a3, (uint64_t)&unk_1002D5B70, (uint64_t)&unk_1002D5AA0);
}

uint64_t sub_1002017D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v10[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v9 <= 0x3F)
  {
    v10[1] = *(void *)(result - 8) + 64LL;
    v10[2] = &unk_1002D59B0;
    v10[3] = a4;
    v10[4] = a5;
    v10[5] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 6LL, v10, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100201884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100201890);
}

uint64_t sub_100201894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002018A0);
}

uint64_t sub_1002018A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002D5928);
}

uint64_t *sub_1002018B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0LL);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_10035C640);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      v10[v12[5]] = v11[v12[5]];
      v10[v12[6]] = v11[v12[6]];
      uint64_t v16 = v12[7];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0LL);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1LL, v22))
    {
      uint64_t v24 = sub_100003A0C(&qword_10035C7C8);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      v8((uint64_t *)v20, (uint64_t *)v21, v7);
      v20[v22[5]] = v21[v22[5]];
      v20[v22[6]] = v21[v22[6]];
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0LL, 1LL, v22);
    }
  }

  return a1;
}

uint64_t sub_100201AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v10(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_Configuration(0LL);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))(v7, 1LL, v8);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7, v4);
  }
  return result;
}

uint64_t sub_100201B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C640);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v9[v11[5]] = v10[v11[5]];
    v9[v11[6]] = v10[v11[6]];
    uint64_t v14 = v11[7];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0LL);
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(const void *, uint64_t, int *))(v21 + 48))(v19, 1LL, v20))
  {
    uint64_t v22 = sub_100003A0C(&qword_10035C7C8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    *((_BYTE *)v18 + v20[5]) = *((_BYTE *)v19 + v20[5]);
    *((_BYTE *)v18 + v20[6]) = *((_BYTE *)v19 + v20[6]);
    *((_BYTE *)v18 + v20[7]) = *((_BYTE *)v19 + v20[7]);
    *((_BYTE *)v18 + v20[8]) = *((_BYTE *)v19 + v20[8]);
    (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0LL, 1LL, v20);
  }

  return a1;
}

uint64_t sub_100201D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24);
  v34(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_BYTE *)(a1 + v7);
  uint64_t v9 = (_BYTE *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0LL);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v35 + 16))(v8, v9, v6);
      v8[v10[5]] = v9[v10[5]];
      v8[v10[6]] = v9[v10[6]];
      uint64_t v15 = v10[7];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      char v18 = v17[8];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v18;
      (*(void (**)(_BYTE *, void, uint64_t, int *))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    sub_100004090((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_Configuration);
LABEL_6:
    uint64_t v19 = sub_100003A0C(&qword_10035C640);
    memcpy(v8, v9, *(void *)(*(void *)(v19 - 8) + 64LL));
    goto LABEL_7;
  }

  v34((uint64_t)v8, (uint64_t)v9, v6);
  v8[v10[5]] = v9[v10[5]];
  v8[v10[6]] = v9[v10[6]];
  uint64_t v30 = v10[7];
  uint64_t v31 = &v8[v30];
  uint64_t v32 = &v9[v30];
  char v33 = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v33;
LABEL_7:
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (_BYTE *)(a1 + v20);
  uint64_t v22 = (_BYTE *)(a2 + v20);
  uint64_t v23 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0LL);
  uint64_t v24 = *((void *)v23 - 1);
  uint64_t v25 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v24 + 48);
  int v26 = v25(v21, 1LL, v23);
  int v27 = v25(v22, 1LL, v23);
  if (!v26)
  {
    if (!v27)
    {
      v34((uint64_t)v21, (uint64_t)v22, v6);
      v21[v23[5]] = v22[v23[5]];
      v21[v23[6]] = v22[v23[6]];
      v21[v23[7]] = v22[v23[7]];
      v21[v23[8]] = v22[v23[8]];
      return a1;
    }

    sub_100004090((uint64_t)v21, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
    goto LABEL_12;
  }

  if (v27)
  {
LABEL_12:
    uint64_t v28 = sub_100003A0C(&qword_10035C7C8);
    memcpy(v21, v22, *(void *)(*(void *)(v28 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v35 + 16))(v21, v22, v6);
  v21[v23[5]] = v22[v23[5]];
  v21[v23[6]] = v22[v23[6]];
  v21[v23[7]] = v22[v23[7]];
  v21[v23[8]] = v22[v23[8]];
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v24 + 56))(v21, 0LL, 1LL, v23);
  return a1;
}

uint64_t sub_100202034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_10035C640);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    v9[v11[5]] = v10[v11[5]];
    v9[v11[6]] = v10[v11[6]];
    uint64_t v14 = v11[7];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v17 = *(int *)(a3 + 24);
  char v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0LL);
  uint64_t v21 = *((void *)v20 - 1);
  if ((*(unsigned int (**)(const void *, uint64_t, int *))(v21 + 48))(v19, 1LL, v20))
  {
    uint64_t v22 = sub_100003A0C(&qword_10035C7C8);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v18, (uint64_t)v19, v6);
    *((_BYTE *)v18 + v20[5]) = *((_BYTE *)v19 + v20[5]);
    *((_BYTE *)v18 + v20[6]) = *((_BYTE *)v19 + v20[6]);
    *((_BYTE *)v18 + v20[7]) = *((_BYTE *)v19 + v20[7]);
    *((_BYTE *)v18 + v20[8]) = *((_BYTE *)v19 + v20[8]);
    (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0LL, 1LL, v20);
  }

  return a1;
}

uint64_t sub_100202204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v32(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_BYTE *)(a1 + v7);
  uint64_t v9 = (_BYTE *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Proto_Gnss_Emergency_Configuration(0LL);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1LL, v10);
  int v14 = v12(v9, 1LL, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 32))(v8, v9, v6);
      v8[v10[5]] = v9[v10[5]];
      v8[v10[6]] = v9[v10[6]];
      uint64_t v15 = v10[7];
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      *(void *)uint64_t v16 = *(void *)v17;
      v16[8] = v17[8];
      (*(void (**)(_BYTE *, void, uint64_t, int *))(v11 + 56))(v8, 0LL, 1LL, v10);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v14)
  {
    sub_100004090((uint64_t)v8, type metadata accessor for Proto_Gnss_Emergency_Configuration);
LABEL_6:
    uint64_t v18 = sub_100003A0C(&qword_10035C640);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64LL));
    goto LABEL_7;
  }

  v32((uint64_t)v8, (uint64_t)v9, v6);
  v8[v10[5]] = v9[v10[5]];
  v8[v10[6]] = v9[v10[6]];
  uint64_t v29 = v10[7];
  uint64_t v30 = &v8[v29];
  uint64_t v31 = &v9[v29];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 24);
  uint64_t v20 = (_BYTE *)(a1 + v19);
  uint64_t v21 = (_BYTE *)(a2 + v19);
  uint64_t v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext(0LL);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1LL, v22);
  int v26 = v24(v21, 1LL, v22);
  if (!v25)
  {
    if (!v26)
    {
      v32((uint64_t)v20, (uint64_t)v21, v6);
      v20[v22[5]] = v21[v22[5]];
      v20[v22[6]] = v21[v22[6]];
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      return a1;
    }

    sub_100004090((uint64_t)v20, type metadata accessor for Proto_Gnss_Emergency_Cdma1xContext);
    goto LABEL_12;
  }

  if (v26)
  {
LABEL_12:
    uint64_t v27 = sub_100003A0C(&qword_10035C7C8);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v33 + 32))(v20, v21, v6);
  v20[v22[5]] = v21[v22[5]];
  v20[v22[6]] = v21[v22[6]];
  v20[v22[7]] = v21[v22[7]];
  v20[v22[8]] = v21[v22[8]];
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v23 + 56))(v20, 0LL, 1LL, v22);
  return a1;
}

uint64_t sub_1002024E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002024EC);
}

uint64_t sub_1002024EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100202500(a1, a2, a3, &qword_10035C640, &qword_10035C7C8);
}

uint64_t sub_100202500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
  {
    uint64_t v12 = v10;
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    uint64_t v14 = a1;
  }

  else
  {
    uint64_t v15 = sub_100003A0C(a4);
    uint64_t v16 = *(void *)(v15 - 8);
    if (*(_DWORD *)(v16 + 84) == (_DWORD)a2)
    {
      uint64_t v12 = v15;
      uint64_t v17 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v12 = sub_100003A0C(a5);
      uint64_t v16 = *(void *)(v12 - 8);
      uint64_t v17 = *(int *)(a3 + 24);
    }

    uint64_t v14 = a1 + v17;
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  }

  return v13(v14, a2, v12);
}

uint64_t sub_1002025A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002025B4);
}

uint64_t sub_1002025B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_1002025C8(a1, a2, a3, a4, &qword_10035C640, &qword_10035C7C8);
}

uint64_t sub_1002025C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v12 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == a3)
  {
    uint64_t v14 = v12;
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v16 = a1;
  }

  else
  {
    uint64_t v17 = sub_100003A0C(a5);
    uint64_t v18 = *(void *)(v17 - 8);
    if (*(_DWORD *)(v18 + 84) == a3)
    {
      uint64_t v14 = v17;
      uint64_t v19 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v14 = sub_100003A0C(a6);
      uint64_t v18 = *(void *)(v14 - 8);
      uint64_t v19 = *(int *)(a4 + 24);
    }

    uint64_t v16 = a1 + v19;
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  }

  return v15(v16, a2, a2, v14);
}

void sub_100202678(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10020269C( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v12 = type metadata accessor for UnknownStorage(319LL);
  if (v13 <= 0x3F)
  {
    v18[0] = *(void *)(v12 - 8) + 64LL;
    sub_1000119EC(319LL, a4, a5);
    if (v15 <= 0x3F)
    {
      v18[1] = *(void *)(v14 - 8) + 64LL;
      sub_1000119EC(319LL, a6, a7);
      if (v17 <= 0x3F)
      {
        v18[2] = *(void *)(v16 - 8) + 64LL;
        swift_initStructMetadata(a1, 256LL, 3LL, v18, a1 + 16);
      }
    }
  }

char *sub_10020276C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v19 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v19);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v36(a1, a2, v7);
    uint64_t v8 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    uint64_t v12 = a3[7];
    unint64_t v13 = &a1[v12];
    uint64_t v14 = &a2[v12];
    uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0LL);
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain(v11);
    if (v17(v14, 1LL, v15))
    {
      uint64_t v18 = sub_100003A0C(&qword_10035C7D0);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      v36(v13, v14, v7);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
    }

    uint64_t v20 = v7;
    uint64_t v21 = a3[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0LL);
    uint64_t v25 = *((void *)v24 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1LL, v24))
    {
      uint64_t v26 = sub_100003A0C(&qword_10035C7D8);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64LL));
    }

    else
    {
      v36(v22, v23, v20);
      uint64_t v27 = v24[5];
      uint64_t v28 = &v22[v27];
      uint64_t v29 = &v23[v27];
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      uint64_t v30 = v24[6];
      uint64_t v31 = &v22[v30];
      uint64_t v32 = &v23[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v33;
      v22[v24[7]] = v23[v24[7]];
      v22[v24[8]] = v23[v24[8]];
      v22[v24[9]] = v23[v24[9]];
      v22[v24[10]] = v23[v24[10]];
      uint64_t v34 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
      swift_bridgeObjectRetain(v33);
      v34(v22, 0LL, 1LL, v24);
    }
  }

  return a1;
}

uint64_t sub_1002029B4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v5(a1, v4);
  swift_bridgeObjectRelease(*(void *)(a1 + a2[6] + 8));
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0LL);
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48LL))(v8, 1LL, v9);
  if (!(_DWORD)result)
  {
    v5(v8, v4);
    return swift_bridgeObjectRelease(*(void *)(v8 + *(int *)(v9 + 24) + 8));
  }

  return result;
}

uint64_t sub_100202AA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v33(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  unint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain(v10);
  if (v16(v13, 1LL, v14))
  {
    uint64_t v17 = sub_100003A0C(&qword_10035C7D0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    v33((uint64_t)v12, (uint64_t)v13, v6);
    *((_BYTE *)v12 + *(int *)(v14 + 20)) = *((_BYTE *)v13 + *(int *)(v14 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0LL, 1LL, v14);
  }

  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)(a1 + v18);
  uint64_t v20 = (char *)(a2 + v18);
  uint64_t v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0LL);
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1LL, v21))
  {
    uint64_t v23 = sub_100003A0C(&qword_10035C7D8);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    v33((uint64_t)v19, (uint64_t)v20, v6);
    uint64_t v24 = v21[5];
    uint64_t v25 = &v19[v24];
    uint64_t v26 = &v20[v24];
    *(_DWORD *)uint64_t v25 = *(_DWORD *)v26;
    v25[4] = v26[4];
    uint64_t v27 = v21[6];
    uint64_t v28 = &v19[v27];
    uint64_t v29 = &v20[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    v19[v21[7]] = v20[v21[7]];
    v19[v21[8]] = v20[v21[8]];
    v19[v21[9]] = v20[v21[9]];
    v19[v21[10]] = v20[v21[10]];
    uint64_t v31 = *(void (**)(char *, void, uint64_t, int *))(v22 + 56);
    swift_bridgeObjectRetain(v30);
    v31(v19, 0LL, 1LL, v21);
  }

  return a1;
}

uint64_t sub_100202CC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 24);
  v49(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = a3[7];
  unint64_t v13 = (_BYTE *)(a1 + v12);
  uint64_t v14 = (_BYTE *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1LL, v15);
  int v19 = v17(v14, 1LL, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 16))(v13, v14, v6);
      v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0LL, 1LL, v15);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v19)
  {
    sub_100004090((uint64_t)v13, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
LABEL_6:
    uint64_t v20 = sub_100003A0C(&qword_10035C7D0);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64LL));
    goto LABEL_7;
  }

  v49((uint64_t)v13, (uint64_t)v14, v6);
  v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
LABEL_7:
  uint64_t v21 = a3[8];
  uint64_t v22 = (_BYTE *)(a1 + v21);
  uint64_t v23 = (_BYTE *)(a2 + v21);
  uint64_t v24 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0LL);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1LL, v24);
  int v28 = v26(v23, 1LL, v24);
  if (!v27)
  {
    if (!v28)
    {
      v49((uint64_t)v22, (uint64_t)v23, v6);
      uint64_t v40 = v24[5];
      uint64_t v41 = &v22[v40];
      uint64_t v42 = &v23[v40];
      int v43 = *(_DWORD *)v42;
      v41[4] = v42[4];
      *(_DWORD *)uint64_t v41 = v43;
      uint64_t v44 = v24[6];
      uint64_t v45 = &v22[v44];
      char v46 = &v23[v44];
      void *v45 = *v46;
      uint64_t v47 = v46[1];
      uint64_t v48 = v45[1];
      v45[1] = v47;
      swift_bridgeObjectRetain(v47);
      swift_bridgeObjectRelease(v48);
      v22[v24[7]] = v23[v24[7]];
      v22[v24[8]] = v23[v24[8]];
      v22[v24[9]] = v23[v24[9]];
      v22[v24[10]] = v23[v24[10]];
      return a1;
    }

    sub_100004090((uint64_t)v22, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
    goto LABEL_12;
  }

  if (v28)
  {
LABEL_12:
    uint64_t v38 = sub_100003A0C(&qword_10035C7D8);
    memcpy(v22, v23, *(void *)(*(void *)(v38 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 16))(v22, v23, v6);
  uint64_t v29 = v24[5];
  uint64_t v30 = &v22[v29];
  uint64_t v31 = &v23[v29];
  int v32 = *(_DWORD *)v31;
  v30[4] = v31[4];
  *(_DWORD *)uint64_t v30 = v32;
  uint64_t v33 = v24[6];
  uint64_t v34 = &v22[v33];
  uint64_t v35 = &v23[v33];
  void *v34 = *v35;
  uint64_t v36 = v35[1];
  v34[1] = v36;
  v22[v24[7]] = v23[v24[7]];
  v22[v24[8]] = v23[v24[8]];
  v22[v24[9]] = v23[v24[9]];
  v22[v24[10]] = v23[v24[10]];
  uint64_t v37 = *(void (**)(_BYTE *, void, uint64_t, int *))(v25 + 56);
  swift_bridgeObjectRetain(v36);
  v37(v22, 0LL, 1LL, v24);
  return a1;
}

uint64_t sub_100203008(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
  {
    uint64_t v14 = sub_100003A0C(&qword_10035C7D0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    *((_BYTE *)v10 + *(int *)(v12 + 20)) = *((_BYTE *)v11 + *(int *)(v12 + 20));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
  }

  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)(a1 + v15);
  uint64_t v17 = (char *)(a2 + v15);
  int v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0LL);
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1LL, v18))
  {
    uint64_t v20 = sub_100003A0C(&qword_10035C7D8);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v16, (uint64_t)v17, v6);
    uint64_t v21 = v18[5];
    uint64_t v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    *(_OWORD *)&v16[v18[6]] = *(_OWORD *)&v17[v18[6]];
    v16[v18[7]] = v17[v18[7]];
    v16[v18[8]] = v17[v18[8]];
    v16[v18[9]] = v17[v18[9]];
    v16[v18[10]] = v17[v18[10]];
    (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0LL, 1LL, v18);
  }

  return a1;
}

uint64_t sub_1002031EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 40);
  v44(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = v8[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = (_BYTE *)(a1 + v13);
  uint64_t v15 = (_BYTE *)(a2 + v13);
  uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_CplaneConfig(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1LL, v16);
  int v20 = v18(v15, 1LL, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 32))(v14, v15, v6);
      v14[*(int *)(v16 + 20)] = v15[*(int *)(v16 + 20)];
      (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v20)
  {
    sub_100004090((uint64_t)v14, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
LABEL_6:
    uint64_t v21 = sub_100003A0C(&qword_10035C7D0);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64LL));
    goto LABEL_7;
  }

  v44((uint64_t)v14, (uint64_t)v15, v6);
  v14[*(int *)(v16 + 20)] = v15[*(int *)(v16 + 20)];
LABEL_7:
  uint64_t v22 = a3[8];
  uint64_t v23 = (_BYTE *)(a1 + v22);
  uint64_t v24 = (_BYTE *)(a2 + v22);
  uint64_t v25 = (int *)type metadata accessor for Proto_Gnss_Emergency_SuplConfig(0LL);
  uint64_t v26 = *((void *)v25 - 1);
  int v27 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v26 + 48);
  int v28 = v27(v23, 1LL, v25);
  int v29 = v27(v24, 1LL, v25);
  if (!v28)
  {
    if (!v29)
    {
      v44((uint64_t)v23, (uint64_t)v24, v6);
      uint64_t v35 = v25[5];
      uint64_t v36 = &v23[v35];
      uint64_t v37 = &v24[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      uint64_t v38 = v25[6];
      uint64_t v39 = &v23[v38];
      uint64_t v40 = (uint64_t *)&v24[v38];
      uint64_t v42 = *v40;
      uint64_t v41 = v40[1];
      uint64_t v43 = v39[1];
      void *v39 = v42;
      v39[1] = v41;
      swift_bridgeObjectRelease(v43);
      v23[v25[7]] = v24[v25[7]];
      v23[v25[8]] = v24[v25[8]];
      v23[v25[9]] = v24[v25[9]];
      v23[v25[10]] = v24[v25[10]];
      return a1;
    }

    sub_100004090((uint64_t)v23, type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
    goto LABEL_12;
  }

  if (v29)
  {
LABEL_12:
    uint64_t v33 = sub_100003A0C(&qword_10035C7D8);
    memcpy(v23, v24, *(void *)(*(void *)(v33 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 32))(v23, v24, v6);
  uint64_t v30 = v25[5];
  uint64_t v31 = &v23[v30];
  int v32 = &v24[v30];
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  v31[4] = v32[4];
  *(_OWORD *)&v23[v25[6]] = *(_OWORD *)&v24[v25[6]];
  v23[v25[7]] = v24[v25[7]];
  v23[v25[8]] = v24[v25[8]];
  v23[v25[9]] = v24[v25[9]];
  v23[v25[10]] = v24[v25[10]];
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v26 + 56))(v23, 0LL, 1LL, v25);
  return a1;
}

uint64_t sub_1002034FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100203508);
}

uint64_t sub_100203508(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v9 = *(void *)(a1 + a3[6] + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C7D0);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      uint64_t v13 = v11;
      uint64_t v14 = a3[7];
    }

    else
    {
      uint64_t v13 = sub_100003A0C(&qword_10035C7D8);
      uint64_t v12 = *(void *)(v13 - 8);
      uint64_t v14 = a3[8];
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }

uint64_t sub_1002035EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002035F8);
}

uint64_t sub_1002035F8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 2147483646)
    {
      *(void *)(a1 + a4[6] + 8) = a2;
      return result;
    }

    uint64_t v13 = sub_100003A0C(&qword_10035C7D0);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v15 = a4[7];
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_10035C7D8);
      uint64_t v14 = *(void *)(v10 - 8);
      uint64_t v15 = a4[8];
    }

    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_1002036CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    v8[1] = &unk_1002D5928;
    v8[2] = &unk_1002D59C8;
    sub_1000119EC(319LL, &qword_1003608A8, type metadata accessor for Proto_Gnss_Emergency_CplaneConfig);
    if (v5 <= 0x3F)
    {
      void v8[3] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC( 319LL,  (unint64_t *)&unk_1003608B0,  type metadata accessor for Proto_Gnss_Emergency_SuplConfig);
      if (v7 <= 0x3F)
      {
        v8[4] = *(void *)(v6 - 8) + 64LL;
        swift_initStructMetadata(a1, 256LL, 5LL, v8, a1 + 16);
      }
    }
  }

void *sub_1002037A0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *a1 = *a2;
    a1 = (void *)(v44 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v44);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    int v18 = (char *)a1 + v15;
    int v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)int v18 = *(_DWORD *)v19;
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = (char *)a1 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    int v28 = (char *)a1 + v26;
    int v29 = (char *)a2 + v26;
    *(_DWORD *)int v28 = *(_DWORD *)v29;
    v28[4] = v29[4];
    uint64_t v30 = (char *)a1 + v27;
    uint64_t v31 = (char *)a2 + v27;
    *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
    v30[4] = v31[4];
    uint64_t v32 = a3[13];
    uint64_t v33 = a3[14];
    uint64_t v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = (char *)a1 + v33;
    uint64_t v37 = (char *)a2 + v33;
    *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
    v36[4] = v37[4];
    uint64_t v38 = a3[15];
    uint64_t v39 = a3[16];
    uint64_t v40 = (char *)a1 + v38;
    uint64_t v41 = (char *)a2 + v38;
    *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
    v40[4] = v41[4];
    uint64_t v42 = (char *)a1 + v39;
    uint64_t v43 = (char *)a2 + v39;
    *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
    v42[4] = v43[4];
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  }

  return a1;
}

uint64_t sub_100203960(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_100203AF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 4);
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = v10;
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 4);
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = v10;
  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  LOBYTE(v10) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = v10;
  uint64_t v35 = a3[14];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  LOBYTE(v10) = *(_BYTE *)(v37 + 4);
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  *(_BYTE *)(v36 + 4) = v10;
  uint64_t v38 = a3[15];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  LOBYTE(v10) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = v10;
  uint64_t v41 = a3[16];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  LOBYTE(v10) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  *(_BYTE *)(v42 + 4) = v10;
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_100203CA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_100203E34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  *(_BYTE *)(v27 + 4) = *(_BYTE *)(v28 + 4);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(_DWORD *)uint64_t v29 = *(_DWORD *)v30;
  *(_BYTE *)(v29 + 4) = *(_BYTE *)(v30 + 4);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  uint64_t v35 = a1 + v32;
  uint64_t v36 = a2 + v32;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  uint64_t v37 = a3[15];
  uint64_t v38 = a3[16];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  uint64_t v41 = a1 + v38;
  uint64_t v42 = a2 + v38;
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  *(_BYTE *)(v41 + 4) = *(_BYTE *)(v42 + 4);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_100203FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100203FD4);
}

uint64_t sub_100203FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 68));
  }
  unsigned int v10 = v9 - 7;
  else {
    return 0LL;
  }
}

uint64_t sub_100204058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100204064);
}

uint64_t sub_100204064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 68)) = a2 + 7;
  return result;
}

uint64_t sub_1002040DC(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002D59B0;
    v4[2] = &unk_1002D59B0;
    v4[3] = &unk_1002D59B0;
    v4[4] = &unk_1002D59B0;
    v4[5] = &unk_1002D59B0;
    v4[6] = &unk_1002D59B0;
    void v4[7] = &unk_1002D59B0;
    void v4[8] = &unk_1002D59B0;
    v4[9] = &unk_1002D59B0;
    void v4[10] = &unk_1002D59B0;
    v4[11] = &unk_1002D59B0;
    v4[12] = &unk_1002D59B0;
    v4[13] = &unk_1002D5AA0;
    swift_initStructMetadata(a1, 256LL, 14LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_10020416C(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0LL);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1LL, v22))
    {
      uint64_t v24 = sub_100003A0C(&qword_10035C7E0);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
    }

    else
    {
      v12(v20, v21, v11);
      v20[*(int *)(v22 + 20)] = v21[*(int *)(v22 + 20)];
      uint64_t v25 = *(int *)(v22 + 24);
      uint64_t v87 = v20;
      uint64_t v26 = &v20[v25];
      uint64_t v27 = &v21[v25];
      uint64_t v28 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
      uint64_t v86 = v12;
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1LL, v28))
      {
        uint64_t v30 = sub_100003A0C(&qword_10035C7C0);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
      }

      else
      {
        uint64_t v82 = v29;
        uint64_t v83 = v23;
        v86(v26, v27, v11);
        int v84 = v26;
        uint64_t v85 = v28;
        uint64_t v31 = *(int *)(v28 + 20);
        uint64_t v32 = &v26[v31];
        uint64_t v33 = &v27[v31];
        uint64_t v34 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
        uint64_t v80 = *((void *)v34 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v80 + 48))(v33, 1LL, v34))
        {
          uint64_t v35 = sub_100003A0C(&qword_10035C7B0);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64LL));
        }

        else
        {
          v86(v32, v33, v11);
          uint64_t v36 = v34[5];
          uint64_t v37 = &v32[v36];
          uint64_t v38 = &v33[v36];
          *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
          v37[4] = v38[4];
          uint64_t v39 = v34[6];
          uint64_t v40 = &v32[v39];
          uint64_t v41 = &v33[v39];
          *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
          v40[4] = v41[4];
          uint64_t v42 = v34[7];
          uint64_t v43 = &v32[v42];
          uint64_t v44 = &v33[v42];
          *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
          v43[4] = v44[4];
          (*(void (**)(char *, void, uint64_t, int *))(v80 + 56))(v32, 0LL, 1LL, v34);
        }

        uint64_t v45 = v84;
        uint64_t v46 = *(int *)(v85 + 24);
        uint64_t v47 = &v84[v46];
        uint64_t v48 = &v27[v46];
        uint64_t v49 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
        uint64_t v50 = *((void *)v49 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v50 + 48))(v48, 1LL, v49))
        {
          uint64_t v51 = sub_100003A0C(&qword_10035C7B8);
          memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64LL));
          uint64_t v52 = v82;
        }

        else
        {
          v86(v47, v48, v11);
          uint64_t v53 = v49[5];
          uint64_t v81 = v47;
          __dst = &v47[v53];
          uint64_t v79 = v48;
          uint64_t v54 = &v48[v53];
          uint64_t v55 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
          uint64_t v77 = *(void *)(v55 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v54, 1LL, v55))
          {
            uint64_t v56 = sub_100003A0C(&qword_10035C7A8);
            memcpy(__dst, v54, *(void *)(*(void *)(v56 - 8) + 64LL));
          }

          else
          {
            v86(__dst, v54, v11);
            uint64_t v57 = *(int *)(v55 + 20);
            uint64_t v58 = &__dst[v57];
            uint64_t v59 = &v54[v57];
            *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
            v58[4] = v59[4];
            uint64_t v60 = *(int *)(v55 + 24);
            uint64_t v61 = &__dst[v60];
            int v62 = &v54[v60];
            *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
            v61[4] = v62[4];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(__dst, 0LL, 1LL, v55);
          }

          uint64_t v52 = v82;
          uint64_t v63 = v49[6];
          char v64 = &v81[v63];
          uint64_t v65 = &v79[v63];
          *(_DWORD *)char v64 = *(_DWORD *)v65;
          v64[4] = v65[4];
          uint64_t v66 = v49[7];
          uint64_t v67 = &v81[v66];
          char v68 = &v79[v66];
          v67[4] = v68[4];
          *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
          (*(void (**)(void))(v50 + 56))();
          uint64_t v45 = v84;
        }

        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v45, 0LL, 1LL, v85);
        uint64_t v23 = v83;
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v87, 0LL, 1LL, v22);
    }

    uint64_t v69 = a3[9];
    uint64_t v70 = a3[10];
    uint64_t v71 = (char *)v7 + v69;
    uint64_t v72 = (char *)a2 + v69;
    *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
    v71[4] = v72[4];
    *((_BYTE *)v7 + v70) = *((_BYTE *)a2 + v70);
    uint64_t v73 = a3[12];
    *((_BYTE *)v7 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    char v74 = (char *)v7 + v73;
    uint64_t v75 = (char *)a2 + v73;
    *(_DWORD *)char v74 = *(_DWORD *)v75;
    v74[4] = v75[4];
  }

  return v7;
}

uint64_t sub_100204648(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v17(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0LL);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48LL))(v6, 1LL, v7);
  if (!(_DWORD)result)
  {
    v17(v6, v5);
    uint64_t v9 = &v6[*(int *)(v7 + 24)];
    uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48LL))(v9, 1LL, v10);
    if (!(_DWORD)result)
    {
      v17(v9, v5);
      uint64_t v11 = &v9[*(int *)(v10 + 20)];
      uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v13 = &v9[*(int *)(v10 + 24)];
      uint64_t v14 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48LL))(v13, 1LL, v14);
      if (!(_DWORD)result)
      {
        v17(v13, v5);
        uint64_t v15 = &v13[*(int *)(v14 + 20)];
        uint64_t v16 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48LL))(v15, 1LL, v16);
        if (!(_DWORD)result) {
          return ((uint64_t (*)(char *, uint64_t))v17)(v15, v5);
        }
      }
    }
  }

  return result;
}

void *sub_1002047F4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21))
  {
    uint64_t v23 = sub_100003A0C(&qword_10035C7E0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
  }

  else
  {
    v11(v19, v20, v10);
    v19[*(int *)(v21 + 20)] = v20[*(int *)(v21 + 20)];
    uint64_t v24 = *(int *)(v21 + 24);
    uint64_t v86 = v19;
    uint64_t v25 = &v19[v24];
    uint64_t v26 = &v20[v24];
    uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
    uint64_t v85 = v11;
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1LL, v27))
    {
      uint64_t v29 = sub_100003A0C(&qword_10035C7C0);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
    }

    else
    {
      uint64_t v81 = v28;
      uint64_t v82 = v22;
      v85(v25, v26, v10);
      uint64_t v83 = v25;
      uint64_t v84 = v27;
      uint64_t v30 = *(int *)(v27 + 20);
      uint64_t v31 = &v25[v30];
      uint64_t v32 = &v26[v30];
      uint64_t v33 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v79 = *((void *)v33 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v79 + 48))(v32, 1LL, v33))
      {
        uint64_t v34 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64LL));
      }

      else
      {
        v85(v31, v32, v10);
        uint64_t v35 = v33[5];
        uint64_t v36 = &v31[v35];
        uint64_t v37 = &v32[v35];
        *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
        v36[4] = v37[4];
        uint64_t v38 = v33[6];
        uint64_t v39 = &v31[v38];
        uint64_t v40 = &v32[v38];
        *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
        v39[4] = v40[4];
        uint64_t v41 = v33[7];
        uint64_t v42 = &v31[v41];
        uint64_t v43 = &v32[v41];
        *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
        v42[4] = v43[4];
        (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v31, 0LL, 1LL, v33);
      }

      uint64_t v44 = v83;
      uint64_t v45 = *(int *)(v84 + 24);
      uint64_t v46 = &v83[v45];
      uint64_t v47 = &v26[v45];
      uint64_t v48 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v49 = *((void *)v48 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1LL, v48))
      {
        uint64_t v50 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64LL));
        uint64_t v51 = v81;
      }

      else
      {
        v85(v46, v47, v10);
        uint64_t v52 = v48[5];
        uint64_t v80 = v46;
        __dst = &v46[v52];
        char v78 = v47;
        uint64_t v53 = &v47[v52];
        uint64_t v54 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v76 = *(void *)(v54 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v53, 1LL, v54))
        {
          uint64_t v55 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dst, v53, *(void *)(*(void *)(v55 - 8) + 64LL));
        }

        else
        {
          v85(__dst, v53, v10);
          uint64_t v56 = *(int *)(v54 + 20);
          uint64_t v57 = &__dst[v56];
          uint64_t v58 = &v53[v56];
          *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
          v57[4] = v58[4];
          uint64_t v59 = *(int *)(v54 + 24);
          uint64_t v60 = &__dst[v59];
          uint64_t v61 = &v53[v59];
          *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
          v60[4] = v61[4];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(__dst, 0LL, 1LL, v54);
        }

        uint64_t v51 = v81;
        uint64_t v62 = v48[6];
        uint64_t v63 = &v80[v62];
        char v64 = &v78[v62];
        *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
        v63[4] = v64[4];
        uint64_t v65 = v48[7];
        uint64_t v66 = &v80[v65];
        uint64_t v67 = &v78[v65];
        v66[4] = v67[4];
        *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
        (*(void (**)(void))(v49 + 56))();
        uint64_t v44 = v83;
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v44, 0LL, 1LL, v84);
      uint64_t v22 = v82;
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v86, 0LL, 1LL, v21);
  }

  uint64_t v68 = a3[9];
  uint64_t v69 = a3[10];
  uint64_t v70 = (char *)a1 + v68;
  uint64_t v71 = (char *)a2 + v68;
  *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
  v70[4] = v71[4];
  *((_BYTE *)a1 + v69) = *((_BYTE *)a2 + v69);
  uint64_t v72 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v73 = (char *)a1 + v72;
  char v74 = (char *)a2 + v72;
  *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
  v73[4] = v74[4];
  return a1;
}

void *sub_100204CA8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v267 = *(void *)(v11 - 8);
  uint64_t v271 = v11;
  uint64_t v12 = *(void (**)(char *, char *))(v267 + 24);
  v12(v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  char v16 = v15[4];
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  char v20 = v19[4];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  v18[4] = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = (uint64_t)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0LL);
  uint64_t v25 = *(void **)(v24 - 8);
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v25[6];
  int v27 = v26(v22, 1LL, v24);
  int v28 = v26((uint64_t)v23, 1LL, v24);
  if (v27)
  {
    if (!v28)
    {
      char v258 = a3;
      __src = v25;
      uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v267 + 16);
      v29(v22, v23, v271);
      *(_BYTE *)(v22 + *(int *)(v24 + 20)) = v23[*(int *)(v24 + 20)];
      uint64_t v30 = *(int *)(v24 + 24);
      uint64_t v31 = (char *)(v22 + v30);
      uint64_t v32 = &v23[v30];
      uint64_t v33 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1LL, v33))
      {
        uint64_t v35 = sub_100003A0C(&qword_10035C7C0);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
        a3 = v258;
        uint64_t v36 = __src;
      }

      else
      {
        uint64_t v255 = v34;
        v29((uint64_t)v31, v32, v271);
        uint64_t v54 = *(int *)(v33 + 20);
        v269 = v31;
        uint64_t v55 = &v31[v54];
        uint64_t v56 = &v32[v54];
        uint64_t v57 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
        uint64_t v251 = *((void *)v57 - 1);
        v249 = (void (*)(char *, char *, uint64_t))v29;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v251 + 48))(v56, 1LL, v57))
        {
          uint64_t v58 = sub_100003A0C(&qword_10035C7B0);
          memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64LL));
        }

        else
        {
          v29((uint64_t)v55, v56, v271);
          uint64_t v59 = v57[5];
          uint64_t v60 = &v55[v59];
          uint64_t v61 = &v56[v59];
          char v62 = v61[4];
          *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
          v60[4] = v62;
          uint64_t v63 = v57[6];
          char v64 = &v55[v63];
          uint64_t v65 = &v56[v63];
          char v66 = v65[4];
          *(_DWORD *)char v64 = *(_DWORD *)v65;
          v64[4] = v66;
          uint64_t v67 = v57[7];
          uint64_t v68 = &v55[v67];
          uint64_t v69 = &v56[v67];
          char v70 = v69[4];
          *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
          v68[4] = v70;
          (*(void (**)(char *, void, uint64_t, int *))(v251 + 56))(v55, 0LL, 1LL, v57);
        }

        uint64_t v252 = v33;
        uint64_t v71 = *(int *)(v33 + 24);
        uint64_t v72 = v269;
        uint64_t v73 = &v269[v71];
        char v74 = &v32[v71];
        uint64_t v75 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
        uint64_t v76 = *((void *)v75 - 1);
        uint64_t v36 = __src;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v76 + 48))(v74, 1LL, v75))
        {
          uint64_t v77 = sub_100003A0C(&qword_10035C7B8);
          memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64LL));
          a3 = v258;
        }

        else
        {
          uint64_t v245 = v76;
          v249(v73, v74, v271);
          uint64_t v78 = v75[5];
          char v246 = v73;
          __dst = &v73[v78];
          uint64_t v79 = &v74[v78];
          uint64_t v80 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
          uint64_t v244 = *(void *)(v80 - 8);
          uint64_t v81 = v79;
          int v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v244 + 48))(v79, 1LL, v80);
          a3 = v258;
          if (v82)
          {
            uint64_t v83 = sub_100003A0C(&qword_10035C7A8);
            memcpy(__dst, v81, *(void *)(*(void *)(v83 - 8) + 64LL));
          }

          else
          {
            v249(__dst, v81, v271);
            uint64_t v111 = *(int *)(v80 + 20);
            uint64_t v112 = &__dst[v111];
            uint64_t v113 = &v81[v111];
            char v114 = v113[4];
            *(_DWORD *)uint64_t v112 = *(_DWORD *)v113;
            v112[4] = v114;
            uint64_t v115 = *(int *)(v80 + 24);
            uint64_t v116 = &__dst[v115];
            uint64_t v117 = &v81[v115];
            char v118 = v117[4];
            *(_DWORD *)uint64_t v116 = *(_DWORD *)v117;
            v116[4] = v118;
            (*(void (**)(void))(v244 + 56))();
          }

          uint64_t v119 = v75[6];
          uint64_t v120 = &v246[v119];
          uint64_t v121 = &v74[v119];
          int v122 = *(_DWORD *)v121;
          v120[4] = v121[4];
          *(_DWORD *)uint64_t v120 = v122;
          uint64_t v123 = v75[7];
          uint64_t v124 = &v246[v123];
          uint64_t v125 = &v74[v123];
          int v126 = *(_DWORD *)v125;
          v124[4] = v125[4];
          *(_DWORD *)uint64_t v124 = v126;
          (*(void (**)(void))(v245 + 56))();
          uint64_t v72 = v269;
        }

        (*(void (**)(char *, void, uint64_t, uint64_t))(v255 + 56))(v72, 0LL, 1LL, v252);
      }

      char v127 = (void (*)(uint64_t, void, uint64_t, uint64_t))v36[7];
      uint64_t v128 = v22;
      goto LABEL_33;
    }

    goto LABEL_7;
  }

  if (v28)
  {
    sub_100004090(v22, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
LABEL_7:
    size_t v37 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7E0) - 8) + 64LL);
    uint64_t v38 = (void *)v22;
    uint64_t v39 = v23;
LABEL_8:
    memcpy(v38, v39, v37);
    goto LABEL_34;
  }

  uint64_t v40 = (void (*)(uint64_t, char *, uint64_t))v12;
  ((void (*)(uint64_t, char *, uint64_t))v12)(v22, v23, v271);
  *(_BYTE *)(v22 + *(int *)(v24 + 20)) = v23[*(int *)(v24 + 20)];
  uint64_t v41 = *(int *)(v24 + 24);
  uint64_t v42 = v22 + v41;
  uint64_t v43 = &v23[v41];
  uint64_t v24 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  __srca = *(void **)(v24 - 8);
  uint64_t v44 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__srca[6];
  int v45 = v44(v42, 1LL, v24);
  int v46 = v44((uint64_t)v43, 1LL, v24);
  if (v45)
  {
    if (!v46)
    {
      uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v267 + 16);
      v47(v42, v43, v271);
      uint64_t v48 = *(int *)(v24 + 20);
      uint64_t v268 = v42;
      uint64_t v49 = (char *)(v42 + v48);
      uint64_t v50 = &v43[v48];
      uint64_t v51 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v52 = *((void *)v51 - 1);
      uint64_t v259 = (void (*)(char *, char *, uint64_t))v47;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v52 + 48))(v50, 1LL, v51))
      {
        uint64_t v53 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64LL));
      }

      else
      {
        v47((uint64_t)v49, v50, v271);
        uint64_t v91 = v51[5];
        int v92 = &v49[v91];
        char v93 = &v50[v91];
        char v94 = v93[4];
        *(_DWORD *)int v92 = *(_DWORD *)v93;
        v92[4] = v94;
        uint64_t v95 = v51[6];
        uint64_t v96 = &v49[v95];
        uint64_t v97 = &v50[v95];
        char v98 = v97[4];
        *(_DWORD *)uint64_t v96 = *(_DWORD *)v97;
        v96[4] = v98;
        uint64_t v99 = v51[7];
        char v100 = &v49[v99];
        uint64_t v101 = &v50[v99];
        char v102 = v101[4];
        *(_DWORD *)char v100 = *(_DWORD *)v101;
        v100[4] = v102;
        (*(void (**)(char *, void, uint64_t, int *))(v52 + 56))(v49, 0LL, 1LL, v51);
      }

      uint64_t v103 = *(int *)(v24 + 24);
      uint64_t v104 = v268;
      size_t v105 = (char *)(v268 + v103);
      uint64_t v106 = &v43[v103];
      uint64_t v107 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v108 = *((void *)v107 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v108 + 48))(v106, 1LL, v107))
      {
        uint64_t v109 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64LL));
        uint64_t v110 = __srca;
      }

      else
      {
        uint64_t v250 = v108;
        v259(v105, v106, v271);
        uint64_t v138 = v107[5];
        uint64_t v256 = &v105[v138];
        uint64_t v139 = &v106[v138];
        uint64_t v140 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        __dsta = *(uint64_t (***)(void, uint64_t, uint64_t))(v140 - 8);
        char v254 = v139;
        int v141 = ((uint64_t (**)(char *, uint64_t, uint64_t))__dsta)[6](v139, 1LL, v140);
        uint64_t v110 = __srca;
        if (v141)
        {
          uint64_t v142 = sub_100003A0C(&qword_10035C7A8);
          memcpy(v256, v254, *(void *)(*(void *)(v142 - 8) + 64LL));
        }

        else
        {
          v259(v256, v254, v271);
          uint64_t v155 = *(int *)(v140 + 20);
          uint64_t v156 = &v256[v155];
          uint64_t v157 = &v254[v155];
          char v158 = v157[4];
          *(_DWORD *)uint64_t v156 = *(_DWORD *)v157;
          v156[4] = v158;
          uint64_t v159 = *(int *)(v140 + 24);
          uint64_t v160 = &v256[v159];
          uint64_t v161 = &v254[v159];
          char v162 = v161[4];
          *(_DWORD *)uint64_t v160 = *(_DWORD *)v161;
          v160[4] = v162;
          ((void (*)(void))__dsta[7])();
        }

        uint64_t v163 = v107[6];
        uint64_t v164 = &v105[v163];
        uint64_t v165 = &v106[v163];
        int v166 = *(_DWORD *)v165;
        v164[4] = v165[4];
        *(_DWORD *)uint64_t v164 = v166;
        uint64_t v167 = v107[7];
        uint64_t v168 = &v105[v167];
        uint64_t v169 = &v106[v167];
        int v170 = *(_DWORD *)v169;
        v168[4] = v169[4];
        *(_DWORD *)uint64_t v168 = v170;
        (*(void (**)(char *, void, uint64_t, int *))(v250 + 56))(v105, 0LL, 1LL, v107);
        uint64_t v104 = v268;
      }

      char v127 = (void (*)(uint64_t, void, uint64_t, uint64_t))v110[7];
      uint64_t v128 = v104;
LABEL_33:
      v127(v128, 0LL, 1LL, v24);
      goto LABEL_34;
    }

    goto LABEL_17;
  }

  if (v46)
  {
    sub_100004090(v42, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_17:
    size_t v37 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7C0) - 8) + 64LL);
    uint64_t v38 = (void *)v42;
    uint64_t v39 = v43;
    goto LABEL_8;
  }

  v40(v42, v43, v271);
  uint64_t v84 = *(int *)(v24 + 20);
  uint64_t v85 = v42 + v84;
  __srcb = &v43[v84];
  uint64_t v86 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v253 = *((void *)v86 - 1);
  uint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v253 + 48);
  uint64_t v260 = v85;
  LODWORD(v85) = v87(v85, 1LL, v86);
  int v88 = v87((uint64_t)__srcb, 1LL, v86);
  if ((_DWORD)v85)
  {
    if (v88)
    {
      size_t v89 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v90 = (void *)v260;
LABEL_39:
      memcpy(v90, __srcb, v89);
      goto LABEL_45;
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v267 + 16))(v260, __srcb, v271);
    uint64_t v143 = v86[5];
    uint64_t v144 = v260 + v143;
    uint64_t v145 = &__srcb[v143];
    char v146 = v145[4];
    *(_DWORD *)uint64_t v144 = *(_DWORD *)v145;
    *(_BYTE *)(v144 + 4) = v146;
    uint64_t v147 = v86[6];
    uint64_t v148 = v260 + v147;
    int v149 = &__srcb[v147];
    char v150 = v149[4];
    *(_DWORD *)uint64_t v148 = *(_DWORD *)v149;
    *(_BYTE *)(v148 + 4) = v150;
    uint64_t v151 = v86[7];
    uint64_t v152 = v260 + v151;
    uint64_t v153 = &__srcb[v151];
    char v154 = v153[4];
    *(_DWORD *)uint64_t v152 = *(_DWORD *)v153;
    *(_BYTE *)(v152 + 4) = v154;
    (*(void (**)(uint64_t, void, uint64_t))(v253 + 56))(v260, 0LL, 1LL);
  }

  else
  {
    if (v88)
    {
      sub_100004090(v260, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      size_t v89 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v90 = (void *)v260;
      goto LABEL_39;
    }

    v40(v260, __srcb, v271);
    uint64_t v171 = v86[5];
    uint64_t v172 = v260 + v171;
    int v173 = &__srcb[v171];
    char v174 = v173[4];
    *(_DWORD *)uint64_t v172 = *(_DWORD *)v173;
    *(_BYTE *)(v172 + 4) = v174;
    uint64_t v175 = v86[6];
    uint64_t v176 = v260 + v175;
    v177 = &__srcb[v175];
    char v178 = v177[4];
    *(_DWORD *)uint64_t v176 = *(_DWORD *)v177;
    *(_BYTE *)(v176 + 4) = v178;
    uint64_t v179 = v86[7];
    uint64_t v180 = v260 + v179;
    uint64_t v181 = &__srcb[v179];
    char v182 = v181[4];
    *(_DWORD *)uint64_t v180 = *(_DWORD *)v181;
    *(_BYTE *)(v180 + 4) = v182;
  }

LABEL_45:
  uint64_t v183 = *(int *)(v24 + 24);
  uint64_t v184 = v42 + v183;
  v185 = &v43[v183];
  char v186 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
  uint64_t v187 = (void *)*((void *)v186 - 1);
  uint64_t v188 = (uint64_t (*)(uint64_t, uint64_t, int *))v187[6];
  int v189 = v188(v184, 1LL, v186);
  int v190 = v188((uint64_t)v185, 1LL, v186);
  if (!v189)
  {
    if (v190)
    {
      sub_100004090(v184, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_51;
    }

    v40(v184, v185, v271);
    uint64_t v197 = v186[5];
    uint64_t v198 = v184 + v197;
    __srcd = &v185[v197];
    uint64_t v199 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
    uint64_t v257 = *(void *)(v199 - 8);
    uint64_t v261 = v198;
    uint64_t v200 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v257 + 48);
    LODWORD(v198) = v200(v198, 1LL, v199);
    int v201 = v200((uint64_t)__srcd, 1LL, v199);
    if ((_DWORD)v198)
    {
      if (!v201)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v267 + 16))(v261, __srcd, v271);
        uint64_t v220 = *(int *)(v199 + 20);
        uint64_t v221 = v261 + v220;
        char v222 = &__srcd[v220];
        char v223 = v222[4];
        *(_DWORD *)uint64_t v221 = *(_DWORD *)v222;
        *(_BYTE *)(v221 + 4) = v223;
        uint64_t v224 = *(int *)(v199 + 24);
        uint64_t v225 = v261 + v224;
        char v226 = &__srcd[v224];
        char v227 = v226[4];
        *(_DWORD *)uint64_t v225 = *(_DWORD *)v226;
        *(_BYTE *)(v225 + 4) = v227;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v257 + 56))(v261, 0LL, 1LL, v199);
        goto LABEL_62;
      }

      size_t v202 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7A8) - 8) + 64LL);
      uint64_t v203 = (void *)v261;
    }

    else
    {
      if (!v201)
      {
        v40(v261, __srcd, v271);
        uint64_t v228 = *(int *)(v199 + 20);
        uint64_t v229 = v261 + v228;
        char v230 = &__srcd[v228];
        char v231 = v230[4];
        *(_DWORD *)uint64_t v229 = *(_DWORD *)v230;
        *(_BYTE *)(v229 + 4) = v231;
        uint64_t v232 = *(int *)(v199 + 24);
        uint64_t v233 = v261 + v232;
        char v234 = &__srcd[v232];
        char v235 = v234[4];
        *(_DWORD *)uint64_t v233 = *(_DWORD *)v234;
        *(_BYTE *)(v233 + 4) = v235;
        goto LABEL_62;
      }

      sub_100004090(v261, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      size_t v202 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7A8) - 8) + 64LL);
      uint64_t v203 = (void *)v261;
    }

    memcpy(v203, __srcd, v202);
LABEL_62:
    uint64_t v236 = v186[6];
    uint64_t v237 = v184 + v236;
    char v238 = &v185[v236];
    int v239 = *(_DWORD *)v238;
    *(_BYTE *)(v237 + 4) = v238[4];
    *(_DWORD *)uint64_t v237 = v239;
    uint64_t v240 = v186[7];
    uint64_t v241 = v184 + v240;
    char v242 = &v185[v240];
    int v243 = *(_DWORD *)v242;
    *(_BYTE *)(v241 + 4) = v242[4];
    *(_DWORD *)uint64_t v241 = v243;
    goto LABEL_34;
  }

  if (v190)
  {
LABEL_51:
    size_t v37 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B8) - 8) + 64LL);
    uint64_t v38 = (void *)v184;
    uint64_t v39 = v185;
    goto LABEL_8;
  }

  __srcc = (void (**)(uint64_t, void, uint64_t, int *))v187;
  v270 = *(void (**)(uint64_t, char *, uint64_t))(v267 + 16);
  v270(v184, v185, v271);
  uint64_t v191 = v186[5];
  uint64_t v192 = (char *)(v184 + v191);
  uint64_t v193 = &v185[v191];
  uint64_t v194 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
  uint64_t v195 = *(void *)(v194 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1LL, v194))
  {
    uint64_t v196 = sub_100003A0C(&qword_10035C7A8);
    memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64LL));
  }

  else
  {
    v270((uint64_t)v192, v193, v271);
    uint64_t v204 = *(int *)(v194 + 20);
    uint64_t v205 = &v192[v204];
    uint64_t v206 = &v193[v204];
    char v207 = v206[4];
    *(_DWORD *)uint64_t v205 = *(_DWORD *)v206;
    v205[4] = v207;
    uint64_t v208 = *(int *)(v194 + 24);
    uint64_t v209 = &v192[v208];
    char v210 = &v193[v208];
    char v211 = v210[4];
    *(_DWORD *)uint64_t v209 = *(_DWORD *)v210;
    v209[4] = v211;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0LL, 1LL, v194);
  }

  uint64_t v212 = v186[6];
  uint64_t v213 = v184 + v212;
  uint64_t v214 = &v185[v212];
  int v215 = *(_DWORD *)v214;
  *(_BYTE *)(v213 + 4) = v214[4];
  *(_DWORD *)uint64_t v213 = v215;
  uint64_t v216 = v186[7];
  uint64_t v217 = v184 + v216;
  char v218 = &v185[v216];
  int v219 = *(_DWORD *)v218;
  *(_BYTE *)(v217 + 4) = v218[4];
  *(_DWORD *)uint64_t v217 = v219;
  __srcc[7](v184, 0LL, 1LL, v186);
LABEL_34:
  uint64_t v129 = a3[9];
  uint64_t v130 = (char *)a1 + v129;
  uint64_t v131 = (char *)a2 + v129;
  int v132 = *(_DWORD *)v131;
  v130[4] = v131[4];
  *(_DWORD *)uint64_t v130 = v132;
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v133 = a3[12];
  uint64_t v134 = (char *)a1 + v133;
  uint64_t v135 = (char *)a2 + v133;
  int v136 = *(_DWORD *)v135;
  v134[4] = v135[4];
  *(_DWORD *)uint64_t v134 = v136;
  return a1;
}

  char v158 = *(int *)(v21 + 24);
  uint64_t v159 = v38 + v158;
  uint64_t v160 = &v39[v158];
  uint64_t v161 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
  char v162 = (void *)*((void *)v161 - 1);
  uint64_t v163 = (uint64_t (*)(uint64_t, uint64_t, int *))v162[6];
  uint64_t v164 = v163(v159, 1LL, v161);
  uint64_t v165 = v163((uint64_t)v160, 1LL, v161);
  if (!v164)
  {
    if (v165)
    {
      sub_100004090(v159, type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime);
      goto LABEL_51;
    }

    v36(v159, v160, v236);
    uint64_t v172 = v161[5];
    int v173 = v159 + v172;
    __srcd = &v160[v172];
    char v174 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
    char v222 = *(void *)(v174 - 8);
    char v226 = v173;
    uint64_t v175 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
    LODWORD(v173) = v175(v173, 1LL, v174);
    uint64_t v176 = v175((uint64_t)__srcd, 1LL, v174);
    if ((_DWORD)v173)
    {
      if (!v176)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v232 + 32))(v226, __srcd, v236);
        uint64_t v191 = *(int *)(v174 + 20);
        uint64_t v192 = v226 + v191;
        uint64_t v193 = &__srcd[v191];
        *(_DWORD *)uint64_t v192 = *(_DWORD *)v193;
        *(_BYTE *)(v192 + 4) = v193[4];
        uint64_t v194 = *(int *)(v174 + 24);
        uint64_t v195 = v226 + v194;
        uint64_t v196 = &__srcd[v194];
        *(_DWORD *)uint64_t v195 = *(_DWORD *)v196;
        *(_BYTE *)(v195 + 4) = v196[4];
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v222 + 56))(v226, 0LL, 1LL, v174);
        goto LABEL_62;
      }

      v177 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7A8) - 8) + 64LL);
      char v178 = (void *)v226;
    }

    else
    {
      if (!v176)
      {
        v36(v226, __srcd, v236);
        uint64_t v197 = *(int *)(v174 + 20);
        uint64_t v198 = v226 + v197;
        uint64_t v199 = &__srcd[v197];
        *(_DWORD *)uint64_t v198 = *(_DWORD *)v199;
        *(_BYTE *)(v198 + 4) = v199[4];
        uint64_t v200 = *(int *)(v174 + 24);
        int v201 = v226 + v200;
        size_t v202 = &__srcd[v200];
        *(_DWORD *)int v201 = *(_DWORD *)v202;
        *(_BYTE *)(v201 + 4) = v202[4];
        goto LABEL_62;
      }

      sub_100004090(v226, type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime);
      v177 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7A8) - 8) + 64LL);
      char v178 = (void *)v226;
    }

    memcpy(v178, __srcd, v177);
LABEL_62:
    uint64_t v203 = v161[6];
    uint64_t v204 = v159 + v203;
    uint64_t v205 = &v160[v203];
    *(_DWORD *)uint64_t v204 = *(_DWORD *)v205;
    *(_BYTE *)(v204 + 4) = v205[4];
    uint64_t v206 = v161[7];
    char v207 = v159 + v206;
    uint64_t v208 = &v160[v206];
    *(_BYTE *)(v207 + 4) = v208[4];
    *(_DWORD *)char v207 = *(_DWORD *)v208;
    goto LABEL_34;
  }

  if (v165)
  {
LABEL_51:
    uint64_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B8) - 8) + 64LL);
    uint64_t v34 = (void *)v159;
    uint64_t v35 = v160;
    goto LABEL_8;
  }

  __srcc = (void (**)(uint64_t, void, uint64_t, int *))v162;
  char v235 = *(void (**)(uint64_t, char *, uint64_t))(v232 + 32);
  v235(v159, v160, v236);
  int v166 = v161[5];
  uint64_t v167 = (char *)(v159 + v166);
  uint64_t v168 = &v160[v166];
  uint64_t v169 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
  int v170 = *(void *)(v169 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v170 + 48))(v168, 1LL, v169))
  {
    uint64_t v171 = sub_100003A0C(&qword_10035C7A8);
    memcpy(v167, v168, *(void *)(*(void *)(v171 - 8) + 64LL));
  }

  else
  {
    v235((uint64_t)v167, v168, v236);
    uint64_t v179 = *(int *)(v169 + 20);
    uint64_t v180 = &v167[v179];
    uint64_t v181 = &v168[v179];
    *(_DWORD *)uint64_t v180 = *(_DWORD *)v181;
    v180[4] = v181[4];
    char v182 = *(int *)(v169 + 24);
    uint64_t v183 = &v167[v182];
    uint64_t v184 = &v168[v182];
    *(_DWORD *)uint64_t v183 = *(_DWORD *)v184;
    v183[4] = v184[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0LL, 1LL, v169);
  }

  v185 = v161[6];
  char v186 = v159 + v185;
  uint64_t v187 = &v160[v185];
  *(_DWORD *)char v186 = *(_DWORD *)v187;
  *(_BYTE *)(v186 + 4) = v187[4];
  uint64_t v188 = v161[7];
  int v189 = v159 + v188;
  int v190 = &v160[v188];
  *(_BYTE *)(v189 + 4) = v190[4];
  *(_DWORD *)int v189 = *(_DWORD *)v190;
  __srcc[7](v159, 0LL, 1LL, v161);
LABEL_34:
  uint64_t v115 = a3[9];
  uint64_t v116 = a3[10];
  uint64_t v117 = (char *)a1 + v115;
  char v118 = (char *)a2 + v115;
  *(_DWORD *)uint64_t v117 = *(_DWORD *)v118;
  v117[4] = v118[4];
  *((_BYTE *)a1 + v116) = *((_BYTE *)a2 + v116);
  uint64_t v119 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v120 = (char *)a1 + v119;
  uint64_t v121 = (char *)a2 + v119;
  *(_DWORD *)uint64_t v120 = *(_DWORD *)v121;
  v120[4] = v121[4];
  return a1;
}

        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }

void *sub_100205A04(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  uint64_t v15 = (char *)a1 + v12;
  char v16 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0LL);
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1LL, v20))
  {
    uint64_t v22 = sub_100003A0C(&qword_10035C7E0);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
  }

  else
  {
    v10(v18, v19, v9);
    v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
    uint64_t v23 = *(int *)(v20 + 24);
    uint64_t v85 = v18;
    uint64_t v24 = &v18[v23];
    uint64_t v25 = &v19[v23];
    uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
    uint64_t v84 = v10;
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1LL, v26))
    {
      uint64_t v28 = sub_100003A0C(&qword_10035C7C0);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64LL));
    }

    else
    {
      uint64_t v80 = v27;
      uint64_t v81 = v21;
      v84(v24, v25, v9);
      int v82 = v24;
      uint64_t v83 = v26;
      uint64_t v29 = *(int *)(v26 + 20);
      uint64_t v30 = &v24[v29];
      uint64_t v31 = &v25[v29];
      uint64_t v32 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v78 = *((void *)v32 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v31, 1LL, v32))
      {
        uint64_t v33 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64LL));
      }

      else
      {
        v84(v30, v31, v9);
        uint64_t v34 = v32[5];
        uint64_t v35 = &v30[v34];
        uint64_t v36 = &v31[v34];
        *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
        v35[4] = v36[4];
        uint64_t v37 = v32[6];
        uint64_t v38 = &v30[v37];
        uint64_t v39 = &v31[v37];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        v38[4] = v39[4];
        uint64_t v40 = v32[7];
        uint64_t v41 = &v30[v40];
        uint64_t v42 = &v31[v40];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        (*(void (**)(char *, void, uint64_t, int *))(v78 + 56))(v30, 0LL, 1LL, v32);
      }

      uint64_t v43 = v82;
      uint64_t v44 = *(int *)(v83 + 24);
      int v45 = &v82[v44];
      int v46 = &v25[v44];
      uint64_t v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v48 = *((void *)v47 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1LL, v47))
      {
        uint64_t v49 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
        uint64_t v50 = v80;
      }

      else
      {
        v84(v45, v46, v9);
        uint64_t v51 = v47[5];
        uint64_t v79 = v45;
        __dst = &v45[v51];
        uint64_t v77 = v46;
        uint64_t v52 = &v46[v51];
        uint64_t v53 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v75 = *(void *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v52, 1LL, v53))
        {
          uint64_t v54 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dst, v52, *(void *)(*(void *)(v54 - 8) + 64LL));
        }

        else
        {
          v84(__dst, v52, v9);
          uint64_t v55 = *(int *)(v53 + 20);
          uint64_t v56 = &__dst[v55];
          uint64_t v57 = &v52[v55];
          *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
          v56[4] = v57[4];
          uint64_t v58 = *(int *)(v53 + 24);
          uint64_t v59 = &__dst[v58];
          uint64_t v60 = &v52[v58];
          *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
          v59[4] = v60[4];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(__dst, 0LL, 1LL, v53);
        }

        uint64_t v50 = v80;
        uint64_t v61 = v47[6];
        char v62 = &v79[v61];
        uint64_t v63 = &v77[v61];
        *(_DWORD *)char v62 = *(_DWORD *)v63;
        v62[4] = v63[4];
        uint64_t v64 = v47[7];
        uint64_t v65 = &v79[v64];
        char v66 = &v77[v64];
        v65[4] = v66[4];
        *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
        (*(void (**)(void))(v48 + 56))();
        uint64_t v43 = v82;
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v43, 0LL, 1LL, v83);
      uint64_t v21 = v81;
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v85, 0LL, 1LL, v20);
  }

  uint64_t v67 = a3[9];
  uint64_t v68 = a3[10];
  uint64_t v69 = (char *)a1 + v67;
  char v70 = (char *)a2 + v67;
  *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
  v69[4] = v70[4];
  *((_BYTE *)a1 + v68) = *((_BYTE *)a2 + v68);
  uint64_t v71 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  uint64_t v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  *(_DWORD *)uint64_t v72 = *(_DWORD *)v73;
  v72[4] = v73[4];
  return a1;
}

void *sub_100205EB0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v232 = *(void *)(v10 - 8);
  uint64_t v236 = v10;
  uint64_t v11 = *(void (**)(char *, char *))(v232 + 40);
  v11(v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  char v16 = (char *)a1 + v13;
  uint64_t v17 = (char *)a2 + v13;
  *(_DWORD *)char v16 = *(_DWORD *)v17;
  v16[4] = v17[4];
  uint64_t v18 = a3[8];
  uint64_t v19 = (uint64_t)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance(0LL);
  uint64_t v22 = *(void **)(v21 - 8);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22[6];
  int v24 = v23(v19, 1LL, v21);
  int v25 = v23((uint64_t)v20, 1LL, v21);
  if (v24)
  {
    if (!v25)
    {
      __src = v22;
      uint64_t v233 = *(void (**)(uint64_t, char *, uint64_t))(v232 + 32);
      v233(v19, v20, v236);
      *(_BYTE *)(v19 + *(int *)(v21 + 20)) = v20[*(int *)(v21 + 20)];
      uint64_t v26 = *(int *)(v21 + 24);
      uint64_t v27 = (char *)(v19 + v26);
      uint64_t v28 = &v20[v26];
      uint64_t v29 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1LL, v29))
      {
        uint64_t v31 = sub_100003A0C(&qword_10035C7C0);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64LL));
        uint64_t v32 = __src;
      }

      else
      {
        uint64_t v220 = v30;
        v233((uint64_t)v27, v28, v236);
        uint64_t v50 = *(int *)(v29 + 20);
        uint64_t v224 = v27;
        __dst = &v27[v50];
        uint64_t v51 = &v28[v50];
        uint64_t v52 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
        uint64_t v213 = *((void *)v52 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v213 + 48))(v51, 1LL, v52))
        {
          uint64_t v53 = sub_100003A0C(&qword_10035C7B0);
          memcpy(__dst, v51, *(void *)(*(void *)(v53 - 8) + 64LL));
        }

        else
        {
          v233((uint64_t)__dst, v51, v236);
          uint64_t v54 = v52[5];
          uint64_t v55 = &__dst[v54];
          uint64_t v56 = &v51[v54];
          *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
          v55[4] = v56[4];
          uint64_t v57 = v52[6];
          uint64_t v58 = &__dst[v57];
          uint64_t v59 = &v51[v57];
          *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
          v58[4] = v59[4];
          uint64_t v60 = v52[7];
          uint64_t v61 = &__dst[v60];
          char v62 = &v51[v60];
          *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
          v61[4] = v62[4];
          (*(void (**)(char *, void, uint64_t, int *))(v213 + 56))(__dst, 0LL, 1LL, v52);
        }

        __dsta = (void *)v29;
        uint64_t v63 = *(int *)(v29 + 24);
        uint64_t v64 = v224;
        uint64_t v65 = &v224[v63];
        char v66 = &v28[v63];
        uint64_t v67 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
        uint64_t v68 = *(void *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1LL, v67))
        {
          uint64_t v69 = sub_100003A0C(&qword_10035C7B8);
          memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64LL));
          uint64_t v32 = __src;
        }

        else
        {
          uint64_t v211 = v68;
          v233((uint64_t)v65, v66, v236);
          uint64_t v70 = *(int *)(v67 + 20);
          uint64_t v214 = v65;
          char v210 = &v65[v70];
          uint64_t v71 = &v66[v70];
          uint64_t v72 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
          uint64_t v209 = *(void *)(v72 - 8);
          uint64_t v73 = v71;
          int v74 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v209 + 48))(v71, 1LL, v72);
          uint64_t v75 = v67;
          if (v74)
          {
            uint64_t v76 = sub_100003A0C(&qword_10035C7A8);
            memcpy(v210, v73, *(void *)(*(void *)(v76 - 8) + 64LL));
          }

          else
          {
            v233((uint64_t)v210, v73, v236);
            uint64_t v101 = *(int *)(v72 + 20);
            char v102 = &v210[v101];
            uint64_t v103 = &v73[v101];
            *(_DWORD *)char v102 = *(_DWORD *)v103;
            v102[4] = v103[4];
            uint64_t v104 = *(int *)(v72 + 24);
            size_t v105 = &v210[v104];
            uint64_t v106 = &v73[v104];
            *(_DWORD *)size_t v105 = *(_DWORD *)v106;
            v105[4] = v106[4];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v209 + 56))(v210, 0LL, 1LL, v72);
          }

          uint64_t v32 = __src;
          uint64_t v107 = *(int *)(v75 + 24);
          uint64_t v108 = &v214[v107];
          uint64_t v109 = &v66[v107];
          *(_DWORD *)uint64_t v108 = *(_DWORD *)v109;
          v108[4] = v109[4];
          uint64_t v110 = *(int *)(v75 + 28);
          uint64_t v111 = &v214[v110];
          uint64_t v112 = &v66[v110];
          v111[4] = v112[4];
          *(_DWORD *)uint64_t v111 = *(_DWORD *)v112;
          (*(void (**)(void))(v211 + 56))();
          uint64_t v64 = v224;
        }

        (*(void (**)(char *, void, uint64_t, void *))(v220 + 56))(v64, 0LL, 1LL, __dsta);
      }

      uint64_t v113 = (void (*)(uint64_t, void, uint64_t, uint64_t))v32[7];
      uint64_t v114 = v19;
      goto LABEL_33;
    }

    goto LABEL_7;
  }

  if (v25)
  {
    sub_100004090(v19, type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
LABEL_7:
    size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7E0) - 8) + 64LL);
    uint64_t v34 = (void *)v19;
    uint64_t v35 = v20;
LABEL_8:
    memcpy(v34, v35, v33);
    goto LABEL_34;
  }

  uint64_t v36 = (void (*)(uint64_t, char *, uint64_t))v11;
  ((void (*)(uint64_t, char *, uint64_t))v11)(v19, v20, v236);
  *(_BYTE *)(v19 + *(int *)(v21 + 20)) = v20[*(int *)(v21 + 20)];
  uint64_t v37 = *(int *)(v21 + 24);
  uint64_t v38 = v19 + v37;
  uint64_t v39 = &v20[v37];
  uint64_t v21 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  __srca = *(void **)(v21 - 8);
  uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__srca[6];
  int v41 = v40(v38, 1LL, v21);
  int v42 = v40((uint64_t)v39, 1LL, v21);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = *(void (**)(uint64_t, char *, uint64_t))(v232 + 32);
      v43(v38, v39, v236);
      uint64_t v44 = *(int *)(v21 + 20);
      uint64_t v234 = v38;
      int v45 = (char *)(v38 + v44);
      int v46 = &v39[v44];
      uint64_t v47 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v48 = *((void *)v47 - 1);
      char v223 = (void (*)(char *, char *, uint64_t))v43;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v48 + 48))(v46, 1LL, v47))
      {
        uint64_t v49 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64LL));
      }

      else
      {
        v43((uint64_t)v45, v46, v236);
        uint64_t v84 = v47[5];
        uint64_t v85 = &v45[v84];
        uint64_t v86 = &v46[v84];
        *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
        v85[4] = v86[4];
        uint64_t v87 = v47[6];
        int v88 = &v45[v87];
        size_t v89 = &v46[v87];
        *(_DWORD *)int v88 = *(_DWORD *)v89;
        v88[4] = v89[4];
        uint64_t v90 = v47[7];
        uint64_t v91 = &v45[v90];
        int v92 = &v46[v90];
        *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
        v91[4] = v92[4];
        (*(void (**)(char *, void, uint64_t, int *))(v48 + 56))(v45, 0LL, 1LL, v47);
      }

      uint64_t v93 = *(int *)(v21 + 24);
      uint64_t v94 = v234;
      uint64_t v95 = (char *)(v234 + v93);
      uint64_t v96 = &v39[v93];
      uint64_t v97 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v98 = *((void *)v97 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v98 + 48))(v96, 1LL, v97))
      {
        uint64_t v99 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64LL));
        char v100 = __srca;
      }

      else
      {
        uint64_t v215 = v98;
        v223(v95, v96, v236);
        uint64_t v123 = v97[5];
        uint64_t v221 = &v95[v123];
        uint64_t v124 = &v96[v123];
        uint64_t v125 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v212 = *(void *)(v125 - 8);
        __dstc = v124;
        int v126 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v212 + 48))(v124, 1LL, v125);
        char v100 = __srca;
        if (v126)
        {
          uint64_t v127 = sub_100003A0C(&qword_10035C7A8);
          memcpy(v221, __dstc, *(void *)(*(void *)(v127 - 8) + 64LL));
        }

        else
        {
          v223(v221, __dstc, v236);
          uint64_t v137 = *(int *)(v125 + 20);
          uint64_t v138 = &v221[v137];
          uint64_t v139 = &__dstc[v137];
          *(_DWORD *)uint64_t v138 = *(_DWORD *)v139;
          v138[4] = v139[4];
          uint64_t v140 = *(int *)(v125 + 24);
          int v141 = &v221[v140];
          uint64_t v142 = &__dstc[v140];
          *(_DWORD *)int v141 = *(_DWORD *)v142;
          v141[4] = v142[4];
          (*(void (**)(void))(v212 + 56))();
        }

        uint64_t v143 = v97[6];
        uint64_t v144 = &v95[v143];
        uint64_t v145 = &v96[v143];
        *(_DWORD *)uint64_t v144 = *(_DWORD *)v145;
        v144[4] = v145[4];
        uint64_t v146 = v97[7];
        uint64_t v147 = &v95[v146];
        uint64_t v148 = &v96[v146];
        v147[4] = v148[4];
        *(_DWORD *)uint64_t v147 = *(_DWORD *)v148;
        (*(void (**)(char *, void, uint64_t, int *))(v215 + 56))(v95, 0LL, 1LL, v97);
        uint64_t v94 = v234;
      }

      uint64_t v113 = (void (*)(uint64_t, void, uint64_t, uint64_t))v100[7];
      uint64_t v114 = v94;
LABEL_33:
      v113(v114, 0LL, 1LL, v21);
      goto LABEL_34;
    }

    goto LABEL_17;
  }

  if (v42)
  {
    sub_100004090(v38, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_17:
    size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7C0) - 8) + 64LL);
    uint64_t v34 = (void *)v38;
    uint64_t v35 = v39;
    goto LABEL_8;
  }

  v36(v38, v39, v236);
  uint64_t v77 = *(int *)(v21 + 20);
  uint64_t v78 = v38 + v77;
  __srcb = &v39[v77];
  uint64_t v79 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  __dstb = (void *)*((void *)v79 - 1);
  uint64_t v80 = (uint64_t (*)(uint64_t, uint64_t, int *))__dstb[6];
  uint64_t v225 = v78;
  LODWORD(v78) = v80(v78, 1LL, v79);
  int v81 = v80((uint64_t)__srcb, 1LL, v79);
  if ((_DWORD)v78)
  {
    if (v81)
    {
      size_t v82 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v83 = (void *)v225;
LABEL_39:
      memcpy(v83, __srcb, v82);
      goto LABEL_45;
    }

    (*(void (**)(uint64_t, char *, uint64_t))(v232 + 32))(v225, __srcb, v236);
    uint64_t v128 = v79[5];
    uint64_t v129 = v225 + v128;
    uint64_t v130 = &__srcb[v128];
    *(_DWORD *)uint64_t v129 = *(_DWORD *)v130;
    *(_BYTE *)(v129 + 4) = v130[4];
    uint64_t v131 = v79[6];
    uint64_t v132 = v225 + v131;
    uint64_t v133 = &__srcb[v131];
    *(_DWORD *)uint64_t v132 = *(_DWORD *)v133;
    *(_BYTE *)(v132 + 4) = v133[4];
    uint64_t v134 = v79[7];
    uint64_t v135 = v225 + v134;
    int v136 = &__srcb[v134];
    *(_DWORD *)uint64_t v135 = *(_DWORD *)v136;
    *(_BYTE *)(v135 + 4) = v136[4];
    ((void (*)(uint64_t, void, uint64_t))__dstb[7])(v225, 0LL, 1LL);
  }

  else
  {
    if (v81)
    {
      sub_100004090(v225, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      size_t v82 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v83 = (void *)v225;
      goto LABEL_39;
    }

    v36(v225, __srcb, v236);
    uint64_t v149 = v79[5];
    uint64_t v150 = v225 + v149;
    uint64_t v151 = &__srcb[v149];
    *(_DWORD *)uint64_t v150 = *(_DWORD *)v151;
    *(_BYTE *)(v150 + 4) = v151[4];
    uint64_t v152 = v79[6];
    uint64_t v153 = v225 + v152;
    char v154 = &__srcb[v152];
    *(_DWORD *)uint64_t v153 = *(_DWORD *)v154;
    *(_BYTE *)(v153 + 4) = v154[4];
    uint64_t v155 = v79[7];
    uint64_t v156 = v225 + v155;
    uint64_t v157 = &__srcb[v155];
    *(_DWORD *)uint64_t v156 = *(_DWORD *)v157;
    *(_BYTE *)(v156 + 4) = v157[4];
  }

uint64_t sub_100206C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100206C14);
}

uint64_t sub_100206C14(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_10035C7E0);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 32);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_100206CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100206CC4);
}

char *sub_100206CC4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_10035C7E0);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 32);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_100206D64(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    v6[2] = &unk_1002D59B0;
    v6[3] = &unk_1002D59B0;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_1003609F8,  type metadata accessor for Proto_Gnss_Emergency_CellTimeAssistance);
    if (v5 <= 0x3F)
    {
      void v6[4] = *(void *)(v4 - 8) + 64LL;
      v6[5] = &unk_1002D59B0;
      v6[6] = &unk_1002D5B70;
      void v6[7] = &unk_1002D5AA0;
      void v6[8] = &unk_1002D59B0;
      swift_initStructMetadata(a1, 256LL, 9LL, v6, a1 + 16);
    }
  }

uint64_t sub_100206E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100206E38);
}

uint64_t sub_100206E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  }
  unsigned int v10 = v9 - 6;
  else {
    return 0LL;
  }
}

uint64_t sub_100206EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100206ECC);
}

uint64_t sub_100206ED0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 6;
  return result;
}

uint64_t sub_100206F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002D5B70);
}

char *sub_100206F54(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    a1[v9] = a2[v9];
    uint64_t v10 = a3[7];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1LL, v13))
    {
      uint64_t v15 = sub_100003A0C(&qword_10035C7C0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64LL));
    }

    else
    {
      uint64_t v58 = v14;
      v8(v11, v12, v7);
      uint64_t v17 = *(int *)(v13 + 20);
      uint64_t v18 = &v11[v17];
      uint64_t v19 = &v12[v17];
      uint64_t v20 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v21 = *((void *)v20 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1LL, v20))
      {
        uint64_t v22 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64LL));
      }

      else
      {
        v8(v18, v19, v7);
        uint64_t v23 = v20[5];
        int v24 = &v18[v23];
        int v25 = &v19[v23];
        *(_DWORD *)int v24 = *(_DWORD *)v25;
        v24[4] = v25[4];
        uint64_t v26 = v20[6];
        uint64_t v27 = &v18[v26];
        uint64_t v28 = &v19[v26];
        *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
        v27[4] = v28[4];
        uint64_t v29 = v20[7];
        uint64_t v30 = &v18[v29];
        uint64_t v31 = &v19[v29];
        *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
        v30[4] = v31[4];
        (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v18, 0LL, 1LL, v20);
      }

      uint64_t v32 = *(int *)(v13 + 24);
      size_t v33 = &v11[v32];
      uint64_t v34 = &v12[v32];
      uint64_t v35 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v36 = *((void *)v35 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1LL, v35))
      {
        uint64_t v37 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64LL));
      }

      else
      {
        uint64_t v56 = v36;
        v8(v33, v34, v7);
        uint64_t v38 = v35[5];
        __dst = &v33[v38];
        uint64_t v39 = &v34[v38];
        uint64_t v40 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v55 = *(void *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v39, 1LL, v40))
        {
          uint64_t v41 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dst, v39, *(void *)(*(void *)(v41 - 8) + 64LL));
        }

        else
        {
          v8(__dst, v39, v7);
          uint64_t v42 = *(int *)(v40 + 20);
          uint64_t v43 = &__dst[v42];
          uint64_t v44 = &v39[v42];
          *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
          v43[4] = v44[4];
          uint64_t v45 = *(int *)(v40 + 24);
          int v46 = &__dst[v45];
          uint64_t v47 = &v39[v45];
          *(_DWORD *)int v46 = *(_DWORD *)v47;
          v46[4] = v47[4];
          (*(void (**)(void))(v55 + 56))();
        }

        uint64_t v48 = v35[6];
        uint64_t v49 = &v33[v48];
        uint64_t v50 = &v34[v48];
        *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
        v49[4] = v50[4];
        uint64_t v51 = v35[7];
        uint64_t v52 = &v33[v51];
        uint64_t v53 = &v34[v51];
        v52[4] = v53[4];
        *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
        (*(void (**)(char *, void, uint64_t, int *))(v56 + 56))(v33, 0LL, 1LL, v35);
      }

      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v11, 0LL, 1LL, v13);
    }
  }

  return a1;
}

uint64_t sub_1002072EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v14(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result)
  {
    v14(v5, v4);
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v10 = v5 + *(int *)(v6 + 24);
    uint64_t v11 = type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))(v10, 1LL, v11);
    if (!(_DWORD)result)
    {
      v14(v10, v4);
      uint64_t v12 = v10 + *(int *)(v11 + 20);
      uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48LL))(v12, 1LL, v13);
      if (!(_DWORD)result) {
        return ((uint64_t (*)(uint64_t, uint64_t))v14)(v12, v4);
      }
    }
  }

  return result;
}

uint64_t sub_100207448(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
  {
    uint64_t v14 = sub_100003A0C(&qword_10035C7C0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    uint64_t v56 = v13;
    v7((uint64_t)v10, (uint64_t)v11, v6);
    uint64_t v15 = *(int *)(v12 + 20);
    uint64_t v16 = &v10[v15];
    uint64_t v17 = &v11[v15];
    uint64_t v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1LL, v18))
    {
      uint64_t v20 = sub_100003A0C(&qword_10035C7B0);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      uint64_t v21 = v18[5];
      uint64_t v22 = &v16[v21];
      uint64_t v23 = &v17[v21];
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      uint64_t v24 = v18[6];
      int v25 = &v16[v24];
      uint64_t v26 = &v17[v24];
      *(_DWORD *)int v25 = *(_DWORD *)v26;
      v25[4] = v26[4];
      uint64_t v27 = v18[7];
      uint64_t v28 = &v16[v27];
      uint64_t v29 = &v17[v27];
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0LL, 1LL, v18);
    }

    uint64_t v30 = *(int *)(v12 + 24);
    uint64_t v31 = &v10[v30];
    uint64_t v32 = &v11[v30];
    size_t v33 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t v34 = *((void *)v33 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1LL, v33))
    {
      uint64_t v35 = sub_100003A0C(&qword_10035C7B8);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      uint64_t v54 = v34;
      v7((uint64_t)v31, (uint64_t)v32, v6);
      uint64_t v36 = v33[5];
      __dst = &v31[v36];
      uint64_t v37 = &v32[v36];
      uint64_t v38 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t v53 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v37, 1LL, v38))
      {
        uint64_t v39 = sub_100003A0C(&qword_10035C7A8);
        memcpy(__dst, v37, *(void *)(*(void *)(v39 - 8) + 64LL));
      }

      else
      {
        v7((uint64_t)__dst, (uint64_t)v37, v6);
        uint64_t v40 = *(int *)(v38 + 20);
        uint64_t v41 = &__dst[v40];
        uint64_t v42 = &v37[v40];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        uint64_t v43 = *(int *)(v38 + 24);
        uint64_t v44 = &__dst[v43];
        uint64_t v45 = &v37[v43];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(void))(v53 + 56))();
      }

      uint64_t v46 = v33[6];
      uint64_t v47 = &v31[v46];
      uint64_t v48 = &v32[v46];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      uint64_t v49 = v33[7];
      uint64_t v50 = &v31[v49];
      uint64_t v51 = &v32[v49];
      v50[4] = v51[4];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v31, 0LL, 1LL, v33);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v10, 0LL, 1LL, v12);
  }

  return a1;
}

char *sub_1002077B4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  a1[a3[5]] = a2[a3[5]];
  a1[a3[6]] = a2[a3[6]];
  uint64_t v9 = a3[7];
  uint64_t v10 = (uint64_t)&a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1LL, v12);
  int v16 = v14((uint64_t)v11, 1LL, v12);
  if (v15)
  {
    if (!v16)
    {
      uint64_t v167 = a1;
      uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
      v17(v10, v11, v6);
      uint64_t v18 = *(int *)(v12 + 20);
      uint64_t v19 = (char *)(v10 + v18);
      uint64_t v20 = &v11[v18];
      uint64_t v21 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v22 = *((void *)v21 - 1);
      __src = (void (*)(char *, char *, uint64_t))v17;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1LL, v21))
      {
        uint64_t v23 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64LL));
      }

      else
      {
        v17((uint64_t)v19, v20, v6);
        uint64_t v35 = v21[5];
        uint64_t v36 = &v19[v35];
        uint64_t v37 = &v20[v35];
        char v38 = v37[4];
        *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
        v36[4] = v38;
        uint64_t v39 = v21[6];
        uint64_t v40 = &v19[v39];
        uint64_t v41 = &v20[v39];
        char v42 = v41[4];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        v40[4] = v42;
        uint64_t v43 = v21[7];
        uint64_t v44 = &v19[v43];
        uint64_t v45 = &v20[v43];
        char v46 = v45[4];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v46;
        (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0LL, 1LL, v21);
      }

      a1 = v167;
      uint64_t v47 = *(int *)(v12 + 24);
      uint64_t v48 = (char *)(v10 + v47);
      uint64_t v49 = &v11[v47];
      uint64_t v50 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v51 = *((void *)v50 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v51 + 48))(v49, 1LL, v50))
      {
        uint64_t v52 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64LL));
      }

      else
      {
        uint64_t v162 = v51;
        __src(v48, v49, v6);
        uint64_t v53 = v50[5];
        __dsta = &v48[v53];
        uint64_t v54 = &v49[v53];
        uint64_t v55 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v160 = *(void *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v54, 1LL, v55))
        {
          uint64_t v56 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dsta, v54, *(void *)(*(void *)(v56 - 8) + 64LL));
        }

        else
        {
          __src(__dsta, v54, v6);
          uint64_t v69 = *(int *)(v55 + 20);
          uint64_t v70 = &__dsta[v69];
          uint64_t v71 = &v54[v69];
          char v72 = v71[4];
          *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
          v70[4] = v72;
          uint64_t v73 = *(int *)(v55 + 24);
          int v74 = &__dsta[v73];
          uint64_t v75 = &v54[v73];
          char v76 = v75[4];
          *(_DWORD *)int v74 = *(_DWORD *)v75;
          v74[4] = v76;
          (*(void (**)(void))(v160 + 56))();
        }

        a1 = v167;
        uint64_t v77 = v50[6];
        uint64_t v78 = &v48[v77];
        uint64_t v79 = &v49[v77];
        int v80 = *(_DWORD *)v79;
        v78[4] = v79[4];
        *(_DWORD *)uint64_t v78 = v80;
        uint64_t v81 = v50[7];
        size_t v82 = &v48[v81];
        uint64_t v83 = &v49[v81];
        int v84 = *(_DWORD *)v83;
        v82[4] = v83[4];
        *(_DWORD *)size_t v82 = v84;
        (*(void (**)(char *, void, uint64_t, int *))(v162 + 56))(v48, 0LL, 1LL, v50);
      }

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
      return a1;
    }

    goto LABEL_7;
  }

  if (v16)
  {
    sub_100004090(v10, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7C0) - 8) + 64LL);
    int v25 = (void *)v10;
    uint64_t v26 = v11;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }

  __dst = v8;
  v8((char *)v10, v11, v6);
  uint64_t v27 = *(int *)(v12 + 20);
  uint64_t v28 = (char *)(v10 + v27);
  uint64_t v29 = &v11[v27];
  uint64_t v30 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v161 = *((void *)v30 - 1);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, int *))(v161 + 48);
  uint64_t v168 = v28;
  LODWORD(v28) = v31(v28, 1LL, v30);
  int v32 = v31(v29, 1LL, v30);
  if ((_DWORD)v28)
  {
    if (v32)
    {
      size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v34 = v168;
LABEL_19:
      memcpy(v34, v29, v33);
      goto LABEL_26;
    }

    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v168, v29, v6);
    uint64_t v57 = v30[5];
    uint64_t v58 = &v168[v57];
    uint64_t v59 = &v29[v57];
    char v60 = v59[4];
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
    v58[4] = v60;
    uint64_t v61 = v30[6];
    char v62 = &v168[v61];
    uint64_t v63 = &v29[v61];
    char v64 = v63[4];
    *(_DWORD *)char v62 = *(_DWORD *)v63;
    v62[4] = v64;
    uint64_t v65 = v30[7];
    char v66 = &v168[v65];
    uint64_t v67 = &v29[v65];
    char v68 = v67[4];
    *(_DWORD *)char v66 = *(_DWORD *)v67;
    v66[4] = v68;
    (*(void (**)(char *, void, uint64_t, int *))(v161 + 56))(v168, 0LL, 1LL, v30);
  }

  else
  {
    if (v32)
    {
      sub_100004090((uint64_t)v168, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      size_t v33 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v34 = v168;
      goto LABEL_19;
    }

    __dst(v168, v29, v6);
    uint64_t v86 = v30[5];
    uint64_t v87 = &v168[v86];
    int v88 = &v29[v86];
    char v89 = v88[4];
    *(_DWORD *)uint64_t v87 = *(_DWORD *)v88;
    v87[4] = v89;
    uint64_t v90 = v30[6];
    uint64_t v91 = &v168[v90];
    int v92 = &v29[v90];
    char v93 = v92[4];
    *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
    v91[4] = v93;
    uint64_t v94 = v30[7];
    uint64_t v95 = &v168[v94];
    uint64_t v96 = &v29[v94];
    char v97 = v96[4];
    *(_DWORD *)uint64_t v95 = *(_DWORD *)v96;
    v95[4] = v97;
  }

uint64_t sub_10020808C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1LL, v12))
  {
    uint64_t v14 = sub_100003A0C(&qword_10035C7C0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    uint64_t v56 = v13;
    v7((uint64_t)v10, (uint64_t)v11, v6);
    uint64_t v15 = *(int *)(v12 + 20);
    int v16 = &v10[v15];
    uint64_t v17 = &v11[v15];
    uint64_t v18 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
    uint64_t v19 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v19 + 48))(v17, 1LL, v18))
    {
      uint64_t v20 = sub_100003A0C(&qword_10035C7B0);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64LL));
    }

    else
    {
      v7((uint64_t)v16, (uint64_t)v17, v6);
      uint64_t v21 = v18[5];
      uint64_t v22 = &v16[v21];
      uint64_t v23 = &v17[v21];
      *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
      v22[4] = v23[4];
      uint64_t v24 = v18[6];
      int v25 = &v16[v24];
      uint64_t v26 = &v17[v24];
      *(_DWORD *)int v25 = *(_DWORD *)v26;
      v25[4] = v26[4];
      uint64_t v27 = v18[7];
      uint64_t v28 = &v16[v27];
      uint64_t v29 = &v17[v27];
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      v28[4] = v29[4];
      (*(void (**)(char *, void, uint64_t, int *))(v19 + 56))(v16, 0LL, 1LL, v18);
    }

    uint64_t v30 = *(int *)(v12 + 24);
    uint64_t v31 = &v10[v30];
    int v32 = &v11[v30];
    size_t v33 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
    uint64_t v34 = *((void *)v33 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1LL, v33))
    {
      uint64_t v35 = sub_100003A0C(&qword_10035C7B8);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64LL));
    }

    else
    {
      uint64_t v54 = v34;
      v7((uint64_t)v31, (uint64_t)v32, v6);
      uint64_t v36 = v33[5];
      __dst = &v31[v36];
      uint64_t v37 = &v32[v36];
      uint64_t v38 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
      uint64_t v53 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v37, 1LL, v38))
      {
        uint64_t v39 = sub_100003A0C(&qword_10035C7A8);
        memcpy(__dst, v37, *(void *)(*(void *)(v39 - 8) + 64LL));
      }

      else
      {
        v7((uint64_t)__dst, (uint64_t)v37, v6);
        uint64_t v40 = *(int *)(v38 + 20);
        uint64_t v41 = &__dst[v40];
        char v42 = &v37[v40];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        v41[4] = v42[4];
        uint64_t v43 = *(int *)(v38 + 24);
        uint64_t v44 = &__dst[v43];
        uint64_t v45 = &v37[v43];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        v44[4] = v45[4];
        (*(void (**)(void))(v53 + 56))();
      }

      uint64_t v46 = v33[6];
      uint64_t v47 = &v31[v46];
      uint64_t v48 = &v32[v46];
      *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
      v47[4] = v48[4];
      uint64_t v49 = v33[7];
      uint64_t v50 = &v31[v49];
      uint64_t v51 = &v32[v49];
      v50[4] = v51[4];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      (*(void (**)(char *, void, uint64_t, int *))(v54 + 56))(v31, 0LL, 1LL, v33);
    }

    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v10, 0LL, 1LL, v12);
  }

  return a1;
}

char *sub_1002083F8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v9] = a2[v9];
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t)&a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Proto_Gnss_Emergency_CellTimeData(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1LL, v13);
  int v17 = v15((uint64_t)v12, 1LL, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v145 = a1;
      uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
      v18(v11, v12, v6);
      uint64_t v19 = *(int *)(v13 + 20);
      uint64_t v20 = (char *)(v11 + v19);
      uint64_t v21 = &v12[v19];
      uint64_t v22 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
      uint64_t v23 = *((void *)v22 - 1);
      __src = (void (*)(char *, char *, uint64_t))v18;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1LL, v22))
      {
        uint64_t v24 = sub_100003A0C(&qword_10035C7B0);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
      }

      else
      {
        v18((uint64_t)v20, v21, v6);
        uint64_t v36 = v22[5];
        uint64_t v37 = &v20[v36];
        uint64_t v38 = &v21[v36];
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        v37[4] = v38[4];
        uint64_t v39 = v22[6];
        uint64_t v40 = &v20[v39];
        uint64_t v41 = &v21[v39];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        v40[4] = v41[4];
        uint64_t v42 = v22[7];
        uint64_t v43 = &v20[v42];
        uint64_t v44 = &v21[v42];
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        v43[4] = v44[4];
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0LL, 1LL, v22);
      }

      a1 = v145;
      uint64_t v45 = *(int *)(v13 + 24);
      uint64_t v46 = (char *)(v11 + v45);
      uint64_t v47 = &v12[v45];
      uint64_t v48 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsCdmaCellTime(0LL);
      uint64_t v49 = *((void *)v48 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v49 + 48))(v47, 1LL, v48))
      {
        uint64_t v50 = sub_100003A0C(&qword_10035C7B8);
        memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64LL));
      }

      else
      {
        uint64_t v140 = v49;
        __src(v46, v47, v6);
        uint64_t v51 = v48[5];
        __dsta = &v46[v51];
        uint64_t v52 = &v47[v51];
        uint64_t v53 = type metadata accessor for Proto_Gnss_Emergency_GpsTowCdmaCellTime(0LL);
        uint64_t v138 = *(void *)(v53 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48))(v52, 1LL, v53))
        {
          uint64_t v54 = sub_100003A0C(&qword_10035C7A8);
          memcpy(__dsta, v52, *(void *)(*(void *)(v54 - 8) + 64LL));
        }

        else
        {
          __src(__dsta, v52, v6);
          uint64_t v64 = *(int *)(v53 + 20);
          uint64_t v65 = &__dsta[v64];
          char v66 = &v52[v64];
          *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
          v65[4] = v66[4];
          uint64_t v67 = *(int *)(v53 + 24);
          char v68 = &__dsta[v67];
          uint64_t v69 = &v52[v67];
          *(_DWORD *)char v68 = *(_DWORD *)v69;
          v68[4] = v69[4];
          (*(void (**)(void))(v138 + 56))();
        }

        a1 = v145;
        uint64_t v70 = v48[6];
        uint64_t v71 = &v46[v70];
        char v72 = &v47[v70];
        *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
        v71[4] = v72[4];
        uint64_t v73 = v48[7];
        int v74 = &v46[v73];
        uint64_t v75 = &v47[v73];
        v74[4] = v75[4];
        *(_DWORD *)int v74 = *(_DWORD *)v75;
        (*(void (**)(char *, void, uint64_t, int *))(v140 + 56))(v46, 0LL, 1LL, v48);
      }

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v11, 0LL, 1LL, v13);
      return a1;
    }

    goto LABEL_7;
  }

  if (v17)
  {
    sub_100004090(v11, type metadata accessor for Proto_Gnss_Emergency_CellTimeData);
LABEL_7:
    size_t v25 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7C0) - 8) + 64LL);
    uint64_t v26 = (void *)v11;
    uint64_t v27 = v12;
LABEL_8:
    memcpy(v26, v27, v25);
    return a1;
  }

  __dst = v8;
  v8((char *)v11, v12, v6);
  uint64_t v28 = *(int *)(v13 + 20);
  uint64_t v29 = (char *)(v11 + v28);
  uint64_t v30 = &v12[v28];
  uint64_t v31 = (int *)type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime(0LL);
  uint64_t v139 = *((void *)v31 - 1);
  int v32 = *(uint64_t (**)(char *, uint64_t, int *))(v139 + 48);
  uint64_t v146 = v29;
  LODWORD(v29) = v32(v29, 1LL, v31);
  int v33 = v32(v30, 1LL, v31);
  if ((_DWORD)v29)
  {
    if (v33)
    {
      size_t v34 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v35 = v146;
LABEL_19:
      memcpy(v35, v30, v34);
      goto LABEL_26;
    }

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v146, v30, v6);
    uint64_t v55 = v31[5];
    uint64_t v56 = &v146[v55];
    uint64_t v57 = &v30[v55];
    *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
    v56[4] = v57[4];
    uint64_t v58 = v31[6];
    uint64_t v59 = &v146[v58];
    char v60 = &v30[v58];
    *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
    v59[4] = v60[4];
    uint64_t v61 = v31[7];
    char v62 = &v146[v61];
    uint64_t v63 = &v30[v61];
    *(_DWORD *)char v62 = *(_DWORD *)v63;
    v62[4] = v63[4];
    (*(void (**)(char *, void, uint64_t, int *))(v139 + 56))(v146, 0LL, 1LL, v31);
  }

  else
  {
    if (v33)
    {
      sub_100004090((uint64_t)v146, type metadata accessor for Proto_Gnss_Emergency_CtsEutranCellTime);
      size_t v34 = *(void *)(*(void *)(sub_100003A0C(&qword_10035C7B0) - 8) + 64LL);
      uint64_t v35 = v146;
      goto LABEL_19;
    }

    __dst(v146, v30, v6);
    uint64_t v77 = v31[5];
    uint64_t v78 = &v146[v77];
    uint64_t v79 = &v30[v77];
    *(_DWORD *)uint64_t v78 = *(_DWORD *)v79;
    v78[4] = v79[4];
    uint64_t v80 = v31[6];
    uint64_t v81 = &v146[v80];
    size_t v82 = &v30[v80];
    *(_DWORD *)uint64_t v81 = *(_DWORD *)v82;
    v81[4] = v82[4];
    uint64_t v83 = v31[7];
    int v84 = &v146[v83];
    uint64_t v85 = &v30[v83];
    *(_DWORD *)int v84 = *(_DWORD *)v85;
    v84[4] = v85[4];
  }

uint64_t sub_100208CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100208CD8);
}

uint64_t sub_100208CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 249)
  {
    else {
      int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    }
    unsigned int v10 = v9 - 6;
    else {
      return 0LL;
    }
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C7C0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))( a1 + *(int *)(a3 + 28),  a2,  v11);
  }

uint64_t sub_100208D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100208D94);
}

uint64_t sub_100208D94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 249)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 6;
      return result;
    }

    uint64_t v10 = sub_100003A0C(&qword_10035C7C0);
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100208E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100208E5C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v12 = type metadata accessor for UnknownStorage(319LL);
  if (v13 <= 0x3F)
  {
    v16[0] = *(void *)(v12 - 8) + 64LL;
    v16[1] = a4;
    v16[2] = a5;
    sub_1000119EC(319LL, a6, a7);
    if (v15 <= 0x3F)
    {
      v16[3] = *(void *)(v14 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 4LL, v16, a1 + 16);
    }
  }

uint64_t *sub_100208F0C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v29);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    unint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    int v16 = (char *)a1 + v14;
    int v17 = (char *)a2 + v14;
    *(void *)int v16 = *(void *)v17;
    v16[8] = v17[8];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    v22[8] = v23[8];
    *(void *)uint64_t v22 = *(void *)v23;
    uint64_t v24 = (char *)a1 + v21;
    size_t v25 = (char *)a2 + v21;
    v24[4] = v25[4];
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    v27[4] = v28[4];
    *(_DWORD *)uint64_t v27 = *(_DWORD *)v28;
  }

  return a1;
}

uint64_t sub_100209040(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t sub_100209148(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  char v34 = *(_BYTE *)(v33 + 4);
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = v34;
  return a1;
}

uint64_t sub_10020925C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t sub_100209364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  uint64_t v25 = a3[11];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  return a1;
}

uint64_t sub_10020946C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100209478);
}

uint64_t sub_10020947C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100209488);
}

uint64_t sub_10020948C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100209498(a1, a2, a3, (uint64_t)&unk_1002D5940);
}

uint64_t sub_100209498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v7 <= 0x3F)
  {
    v8[0] = *(void *)(result - 8) + 64LL;
    v8[1] = a4;
    v8[2] = a4;
    void v8[3] = a4;
    v8[4] = a4;
    void v8[5] = a4;
    v8[6] = &unk_1002D59B0;
    v8[7] = &unk_1002D59B0;
    swift_initStructMetadata(a1, 256LL, 8LL, v8, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t *sub_100209518(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v17);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
  }

  return a1;
}

uint64_t sub_1002095E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_100209684(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  return a1;
}

uint64_t sub_100209728(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_1002097C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  return a1;
}

uint64_t sub_100209868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100209874);
}

uint64_t sub_100209878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100209884);
}

uint64_t sub_100209888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D59B0, (uint64_t)&unk_1002D5940);
}

uint64_t sub_1002098A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002098AC);
}

uint64_t sub_1002098B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002098BC);
}

uint64_t sub_1002098C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v11 <= 0x3F)
  {
    v12[0] = *(void *)(result - 8) + 64LL;
    v12[1] = a4;
    v12[2] = a5;
    v12[3] = a6;
    swift_initStructMetadata(a1, 256LL, 4LL, v12, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100209940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020994C);
}

uint64_t sub_100209950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020995C);
}

uint64_t *sub_100209960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v14);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    unint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    void v12[4] = v13[4];
  }

  return a1;
}

uint64_t sub_100209A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  return a1;
}

uint64_t sub_100209A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  return a1;
}

uint64_t sub_100209B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  return a1;
}

uint64_t sub_100209BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  return a1;
}

uint64_t sub_100209C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100209C30);
}

uint64_t sub_100209C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100209C40);
}

char *sub_100209C44(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v31 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v31);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = &a2[v9];
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    v11[4] = v12[4];
    uint64_t v13 = &a1[v10];
    char v14 = &a2[v10];
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    v13[4] = v14[4];
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    uint64_t v17 = &a1[v15];
    char v18 = &a2[v15];
    *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    uint64_t v19 = &a1[v16];
    uint64_t v20 = &a2[v16];
    v19[4] = v20[4];
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = &a1[v21];
    uint64_t v24 = &a2[v21];
    *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
    v23[4] = v24[4];
    a1[v22] = a2[v22];
    uint64_t v25 = a3[12];
    a1[a3[11]] = a2[a3[11]];
    uint64_t v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0LL);
    uint64_t v29 = *((void *)v28 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1LL, v28))
    {
      uint64_t v30 = sub_100003A0C(&qword_10035C7E8);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
    }

    else
    {
      v8(v26, v27, v7);
      uint64_t v32 = v28[5];
      uint64_t v33 = &v26[v32];
      char v34 = &v27[v32];
      *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
      v33[4] = v34[4];
      uint64_t v35 = v28[6];
      uint64_t v36 = &v26[v35];
      uint64_t v37 = &v27[v35];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v37[4];
      uint64_t v38 = v28[7];
      uint64_t v39 = &v26[v38];
      uint64_t v40 = &v27[v38];
      *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0LL, 1LL, v28);
    }

    uint64_t v41 = a3[14];
    a1[a3[13]] = a2[a3[13]];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    uint64_t v44 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0LL);
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1LL, v44))
    {
      uint64_t v46 = sub_100003A0C(&qword_10035C7F0);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64LL));
    }

    else
    {
      v8(v42, v43, v7);
      uint64_t v47 = *(int *)(v44 + 20);
      uint64_t v48 = &v42[v47];
      uint64_t v49 = &v43[v47];
      *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
      v48[4] = v49[4];
      uint64_t v50 = *(int *)(v44 + 24);
      uint64_t v51 = &v42[v50];
      uint64_t v52 = &v43[v50];
      *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
      v51[4] = v52[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0LL, 1LL, v44);
    }

    uint64_t v53 = a3[16];
    a1[a3[15]] = a2[a3[15]];
    uint64_t v54 = &a1[v53];
    uint64_t v55 = &a2[v53];
    uint64_t v56 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0LL);
    uint64_t v57 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1LL, v56))
    {
      uint64_t v58 = sub_100003A0C(&qword_10035C7F8);
      memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64LL));
    }

    else
    {
      v8(v54, v55, v7);
      uint64_t v59 = *(int *)(v56 + 20);
      char v60 = &v54[v59];
      uint64_t v61 = &v55[v59];
      *(_DWORD *)char v60 = *(_DWORD *)v61;
      v60[4] = v61[4];
      uint64_t v62 = *(int *)(v56 + 24);
      uint64_t v63 = &v54[v62];
      uint64_t v64 = &v55[v62];
      *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
      v63[4] = v64[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0LL, 1LL, v56);
    }
  }

  return a1;
}

uint64_t sub_100209FC4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v12(a1, v4);
  uint64_t v5 = a1 + a2[12];
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0LL);
  uint64_t v7 = a1 + a2[14];
  uint64_t v8 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0LL);
  uint64_t v9 = a1 + a2[16];
  uint64_t v10 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48LL))(v9, 1LL, v10);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v4);
  }
  return result;
}

uint64_t sub_10020A0DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  uint64_t v24 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  uint64_t v27 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0LL);
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1LL, v27))
  {
    uint64_t v29 = sub_100003A0C(&qword_10035C7E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v25, (uint64_t)v26, v6);
    uint64_t v30 = v27[5];
    uint64_t v31 = &v25[v30];
    uint64_t v32 = &v26[v30];
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    uint64_t v33 = v27[6];
    char v34 = &v25[v33];
    uint64_t v35 = &v26[v33];
    *(_DWORD *)char v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = v27[7];
    uint64_t v37 = &v25[v36];
    uint64_t v38 = &v26[v36];
    *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
    (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0LL, 1LL, v27);
  }

  uint64_t v39 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  uint64_t v40 = (char *)(a1 + v39);
  uint64_t v41 = (char *)(a2 + v39);
  uint64_t v42 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0LL);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1LL, v42))
  {
    uint64_t v44 = sub_100003A0C(&qword_10035C7F0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v40, (uint64_t)v41, v6);
    uint64_t v45 = *(int *)(v42 + 20);
    uint64_t v46 = &v40[v45];
    uint64_t v47 = &v41[v45];
    *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
    v46[4] = v47[4];
    uint64_t v48 = *(int *)(v42 + 24);
    uint64_t v49 = &v40[v48];
    uint64_t v50 = &v41[v48];
    *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
    v49[4] = v50[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0LL, 1LL, v42);
  }

  uint64_t v51 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  uint64_t v52 = (char *)(a1 + v51);
  uint64_t v53 = (char *)(a2 + v51);
  uint64_t v54 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0LL);
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1LL, v54))
  {
    uint64_t v56 = sub_100003A0C(&qword_10035C7F8);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v52, (uint64_t)v53, v6);
    uint64_t v57 = *(int *)(v54 + 20);
    uint64_t v58 = &v52[v57];
    uint64_t v59 = &v53[v57];
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    uint64_t v60 = *(int *)(v54 + 24);
    uint64_t v61 = &v52[v60];
    uint64_t v62 = &v53[v60];
    *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0LL, 1LL, v54);
  }

  return a1;
}

uint64_t sub_10020A430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v108 = *(void *)(v6 - 8);
  uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 24);
  v107(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v23 = a3[12];
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0LL);
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  int v29 = v28(v24, 1LL, v26);
  int v30 = v28(v25, 1LL, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v24, v25, v6);
      uint64_t v31 = v26[5];
      uint64_t v32 = &v24[v31];
      uint64_t v33 = &v25[v31];
      char v34 = v33[4];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v34;
      uint64_t v35 = v26[6];
      uint64_t v36 = &v24[v35];
      uint64_t v37 = &v25[v35];
      char v38 = v37[4];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      v36[4] = v38;
      uint64_t v39 = v26[7];
      uint64_t v40 = &v24[v39];
      uint64_t v41 = &v25[v39];
      char v42 = v41[4];
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      v40[4] = v42;
      (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0LL, 1LL, v26);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v30)
  {
    sub_100004090((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
LABEL_6:
    uint64_t v43 = sub_100003A0C(&qword_10035C7E8);
    memcpy(v24, v25, *(void *)(*(void *)(v43 - 8) + 64LL));
    goto LABEL_7;
  }

  v107((uint64_t)v24, (uint64_t)v25, v6);
  uint64_t v79 = v26[5];
  uint64_t v80 = &v24[v79];
  uint64_t v81 = &v25[v79];
  char v82 = v81[4];
  *(_DWORD *)uint64_t v80 = *(_DWORD *)v81;
  v80[4] = v82;
  uint64_t v83 = v26[6];
  int v84 = &v24[v83];
  uint64_t v85 = &v25[v83];
  char v86 = v85[4];
  *(_DWORD *)int v84 = *(_DWORD *)v85;
  v84[4] = v86;
  uint64_t v87 = v26[7];
  int v88 = &v24[v87];
  char v89 = &v25[v87];
  char v90 = v89[4];
  *(_DWORD *)int v88 = *(_DWORD *)v89;
  v88[4] = v90;
LABEL_7:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  uint64_t v44 = a3[14];
  uint64_t v45 = (char *)(a1 + v44);
  uint64_t v46 = (char *)(a2 + v44);
  uint64_t v47 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0LL);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  int v50 = v49(v45, 1LL, v47);
  int v51 = v49(v46, 1LL, v47);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v45, v46, v6);
      uint64_t v52 = *(int *)(v47 + 20);
      uint64_t v53 = &v45[v52];
      uint64_t v54 = &v46[v52];
      char v55 = v54[4];
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      v53[4] = v55;
      uint64_t v56 = *(int *)(v47 + 24);
      uint64_t v57 = &v45[v56];
      uint64_t v58 = &v46[v56];
      char v59 = v58[4];
      *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
      v57[4] = v59;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0LL, 1LL, v47);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v51)
  {
    sub_100004090((uint64_t)v45, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
LABEL_12:
    uint64_t v60 = sub_100003A0C(&qword_10035C7F0);
    memcpy(v45, v46, *(void *)(*(void *)(v60 - 8) + 64LL));
    goto LABEL_13;
  }

  v107((uint64_t)v45, (uint64_t)v46, v6);
  uint64_t v91 = *(int *)(v47 + 20);
  int v92 = &v45[v91];
  int v93 = &v46[v91];
  char v94 = v93[4];
  *(_DWORD *)int v92 = *(_DWORD *)v93;
  v92[4] = v94;
  uint64_t v95 = *(int *)(v47 + 24);
  uint64_t v96 = &v45[v95];
  uint64_t v97 = &v46[v95];
  char v98 = v97[4];
  *(_DWORD *)uint64_t v96 = *(_DWORD *)v97;
  v96[4] = v98;
LABEL_13:
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  uint64_t v61 = a3[16];
  uint64_t v62 = (char *)(a1 + v61);
  uint64_t v63 = (char *)(a2 + v61);
  uint64_t v64 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0LL);
  uint64_t v65 = *(void *)(v64 - 8);
  char v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
  int v67 = v66(v62, 1LL, v64);
  int v68 = v66(v63, 1LL, v64);
  if (!v67)
  {
    if (!v68)
    {
      v107((uint64_t)v62, (uint64_t)v63, v6);
      uint64_t v99 = *(int *)(v64 + 20);
      uint64_t v100 = &v62[v99];
      uint64_t v101 = &v63[v99];
      char v102 = v101[4];
      *(_DWORD *)uint64_t v100 = *(_DWORD *)v101;
      v100[4] = v102;
      uint64_t v103 = *(int *)(v64 + 24);
      int v104 = &v62[v103];
      int v105 = &v63[v103];
      char v106 = v105[4];
      *(_DWORD *)int v104 = *(_DWORD *)v105;
      v104[4] = v106;
      return a1;
    }

    sub_100004090((uint64_t)v62, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
    goto LABEL_18;
  }

  if (v68)
  {
LABEL_18:
    uint64_t v77 = sub_100003A0C(&qword_10035C7F8);
    memcpy(v62, v63, *(void *)(*(void *)(v77 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v62, v63, v6);
  uint64_t v69 = *(int *)(v64 + 20);
  uint64_t v70 = &v62[v69];
  uint64_t v71 = &v63[v69];
  char v72 = v71[4];
  *(_DWORD *)uint64_t v70 = *(_DWORD *)v71;
  v70[4] = v72;
  uint64_t v73 = *(int *)(v64 + 24);
  int v74 = &v62[v73];
  uint64_t v75 = &v63[v73];
  char v76 = v75[4];
  *(_DWORD *)int v74 = *(_DWORD *)v75;
  v74[4] = v76;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0LL, 1LL, v64);
  return a1;
}

uint64_t sub_10020A954(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(_BYTE *)(v10 + 4) = *(_BYTE *)(v11 + 4);
  uint64_t v12 = a1 + v9;
  uint64_t v13 = a2 + v9;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = *(_BYTE *)(v17 + 4);
  uint64_t v18 = a1 + v15;
  uint64_t v19 = a2 + v15;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  *(_BYTE *)(a1 + v21) = *(_BYTE *)(a2 + v21);
  uint64_t v24 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)(a2 + v24);
  uint64_t v27 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0LL);
  uint64_t v28 = *((void *)v27 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1LL, v27))
  {
    uint64_t v29 = sub_100003A0C(&qword_10035C7E8);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v25, (uint64_t)v26, v6);
    uint64_t v30 = v27[5];
    uint64_t v31 = &v25[v30];
    uint64_t v32 = &v26[v30];
    *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
    v31[4] = v32[4];
    uint64_t v33 = v27[6];
    char v34 = &v25[v33];
    uint64_t v35 = &v26[v33];
    *(_DWORD *)char v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = v27[7];
    uint64_t v37 = &v25[v36];
    char v38 = &v26[v36];
    *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
    (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v25, 0LL, 1LL, v27);
  }

  uint64_t v39 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  uint64_t v40 = (char *)(a1 + v39);
  uint64_t v41 = (char *)(a2 + v39);
  uint64_t v42 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0LL);
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1LL, v42))
  {
    uint64_t v44 = sub_100003A0C(&qword_10035C7F0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v40, (uint64_t)v41, v6);
    uint64_t v45 = *(int *)(v42 + 20);
    uint64_t v46 = &v40[v45];
    uint64_t v47 = &v41[v45];
    *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
    v46[4] = v47[4];
    uint64_t v48 = *(int *)(v42 + 24);
    uint64_t v49 = &v40[v48];
    int v50 = &v41[v48];
    *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
    v49[4] = v50[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0LL, 1LL, v42);
  }

  uint64_t v51 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  uint64_t v52 = (char *)(a1 + v51);
  uint64_t v53 = (char *)(a2 + v51);
  uint64_t v54 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0LL);
  uint64_t v55 = *(void *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1LL, v54))
  {
    uint64_t v56 = sub_100003A0C(&qword_10035C7F8);
    memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v52, (uint64_t)v53, v6);
    uint64_t v57 = *(int *)(v54 + 20);
    uint64_t v58 = &v52[v57];
    char v59 = &v53[v57];
    *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
    v58[4] = v59[4];
    uint64_t v60 = *(int *)(v54 + 24);
    uint64_t v61 = &v52[v60];
    uint64_t v62 = &v53[v60];
    *(_DWORD *)uint64_t v61 = *(_DWORD *)v62;
    v61[4] = v62[4];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0LL, 1LL, v54);
  }

  return a1;
}

uint64_t sub_10020ACA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v94 = *(void *)(v6 - 8);
  int v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 40);
  v93(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  uint64_t v23 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = (int *)type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo(0LL);
  uint64_t v27 = *((void *)v26 - 1);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, int *))(v27 + 48);
  int v29 = v28(v24, 1LL, v26);
  int v30 = v28(v25, 1LL, v26);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v24, v25, v6);
      uint64_t v31 = v26[5];
      uint64_t v32 = &v24[v31];
      uint64_t v33 = &v25[v31];
      *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
      v32[4] = v33[4];
      uint64_t v34 = v26[6];
      uint64_t v35 = &v24[v34];
      uint64_t v36 = &v25[v34];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      uint64_t v37 = v26[7];
      char v38 = &v24[v37];
      uint64_t v39 = &v25[v37];
      *(_DWORD *)char v38 = *(_DWORD *)v39;
      v38[4] = v39[4];
      (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0LL, 1LL, v26);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v30)
  {
    sub_100004090((uint64_t)v24, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
LABEL_6:
    uint64_t v40 = sub_100003A0C(&qword_10035C7E8);
    memcpy(v24, v25, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_7;
  }

  v93((uint64_t)v24, (uint64_t)v25, v6);
  uint64_t v72 = v26[5];
  uint64_t v73 = &v24[v72];
  int v74 = &v25[v72];
  *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
  v73[4] = v74[4];
  uint64_t v75 = v26[6];
  char v76 = &v24[v75];
  uint64_t v77 = &v25[v75];
  *(_DWORD *)char v76 = *(_DWORD *)v77;
  v76[4] = v77[4];
  uint64_t v78 = v26[7];
  uint64_t v79 = &v24[v78];
  uint64_t v80 = &v25[v78];
  *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
  v79[4] = v80[4];
LABEL_7:
  uint64_t v41 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  uint64_t v42 = (char *)(a1 + v41);
  uint64_t v43 = (char *)(a2 + v41);
  uint64_t v44 = type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1LL, v44);
  int v48 = v46(v43, 1LL, v44);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v42, v43, v6);
      uint64_t v49 = *(int *)(v44 + 20);
      int v50 = &v42[v49];
      uint64_t v51 = &v43[v49];
      *(_DWORD *)int v50 = *(_DWORD *)v51;
      v50[4] = v51[4];
      uint64_t v52 = *(int *)(v44 + 24);
      uint64_t v53 = &v42[v52];
      uint64_t v54 = &v43[v52];
      *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
      v53[4] = v54[4];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0LL, 1LL, v44);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v48)
  {
    sub_100004090((uint64_t)v42, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
LABEL_12:
    uint64_t v55 = sub_100003A0C(&qword_10035C7F0);
    memcpy(v42, v43, *(void *)(*(void *)(v55 - 8) + 64LL));
    goto LABEL_13;
  }

  v93((uint64_t)v42, (uint64_t)v43, v6);
  uint64_t v81 = *(int *)(v44 + 20);
  char v82 = &v42[v81];
  uint64_t v83 = &v43[v81];
  *(_DWORD *)char v82 = *(_DWORD *)v83;
  v82[4] = v83[4];
  uint64_t v84 = *(int *)(v44 + 24);
  uint64_t v85 = &v42[v84];
  char v86 = &v43[v84];
  *(_DWORD *)uint64_t v85 = *(_DWORD *)v86;
  v85[4] = v86[4];
LABEL_13:
  uint64_t v56 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  uint64_t v57 = (char *)(a1 + v56);
  uint64_t v58 = (char *)(a2 + v56);
  uint64_t v59 = type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo(0LL);
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 48);
  int v62 = v61(v57, 1LL, v59);
  int v63 = v61(v58, 1LL, v59);
  if (!v62)
  {
    if (!v63)
    {
      v93((uint64_t)v57, (uint64_t)v58, v6);
      uint64_t v87 = *(int *)(v59 + 20);
      int v88 = &v57[v87];
      char v89 = &v58[v87];
      *(_DWORD *)int v88 = *(_DWORD *)v89;
      v88[4] = v89[4];
      uint64_t v90 = *(int *)(v59 + 24);
      uint64_t v91 = &v57[v90];
      int v92 = &v58[v90];
      *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
      v91[4] = v92[4];
      return a1;
    }

    sub_100004090((uint64_t)v57, type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
    goto LABEL_18;
  }

  if (v63)
  {
LABEL_18:
    uint64_t v70 = sub_100003A0C(&qword_10035C7F8);
    memcpy(v57, v58, *(void *)(*(void *)(v70 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v57, v58, v6);
  uint64_t v64 = *(int *)(v59 + 20);
  uint64_t v65 = &v57[v64];
  char v66 = &v58[v64];
  *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
  v65[4] = v66[4];
  uint64_t v67 = *(int *)(v59 + 24);
  int v68 = &v57[v67];
  uint64_t v69 = &v58[v67];
  *(_DWORD *)int v68 = *(_DWORD *)v69;
  v68[4] = v69[4];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0LL, 1LL, v59);
  return a1;
}

uint64_t sub_10020B1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020B1C0);
}

uint64_t sub_10020B1C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 253)
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + a3[11]);
    if (v9 >= 2) {
      int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v10 = -2;
    }
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_10035C7E8);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      uint64_t v13 = v11;
      uint64_t v14 = a3[12];
    }

    else
    {
      uint64_t v15 = sub_100003A0C(&qword_10035C7F0);
      uint64_t v12 = *(void *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        uint64_t v13 = v15;
        uint64_t v14 = a3[14];
      }

      else
      {
        uint64_t v13 = sub_100003A0C(&qword_10035C7F8);
        uint64_t v12 = *(void *)(v13 - 8);
        uint64_t v14 = a3[16];
      }
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }

uint64_t sub_10020B2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020B2E0);
}

uint64_t sub_10020B2E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + a4[11]) = a2 + 2;
      return result;
    }

    uint64_t v13 = sub_100003A0C(&qword_10035C7E8);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v15 = a4[12];
    }

    else
    {
      uint64_t v16 = sub_100003A0C(&qword_10035C7F0);
      uint64_t v14 = *(void *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v15 = a4[14];
      }

      else
      {
        uint64_t v10 = sub_100003A0C(&qword_10035C7F8);
        uint64_t v14 = *(void *)(v10 - 8);
        uint64_t v15 = a4[16];
      }
    }

    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_10020B3D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v10[0] = *(void *)(v2 - 8) + 64LL;
    v10[1] = &unk_1002D59B0;
    v10[2] = &unk_1002D59B0;
    v10[3] = &unk_1002D59B0;
    v10[4] = &unk_1002D59B0;
    v10[5] = &unk_1002D59B0;
    void v10[6] = &unk_1002D5A68;
    v10[7] = &unk_1002D5928;
    sub_1000119EC(319LL, &qword_100360E60, type metadata accessor for Proto_Gnss_Emergency_Is801VelocityInfo);
    if (v5 <= 0x3F)
    {
      v10[8] = *(void *)(v4 - 8) + 64LL;
      v10[9] = &unk_1002D5928;
      sub_1000119EC(319LL, &qword_100360E68, type metadata accessor for Proto_Gnss_Emergency_Is801ClockInfo);
      if (v7 <= 0x3F)
      {
        void v10[10] = *(void *)(v6 - 8) + 64LL;
        v10[11] = &unk_1002D5928;
        sub_1000119EC( 319LL,  (unint64_t *)&unk_100360E70,  type metadata accessor for Proto_Gnss_Emergency_Is801HeightInfo);
        if (v9 <= 0x3F)
        {
          v10[12] = *(void *)(v8 - 8) + 64LL;
          swift_initStructMetadata(a1, 256LL, 13LL, v10, a1 + 16);
        }
      }
    }
  }

uint64_t sub_10020B4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020B4F0);
}

uint64_t sub_10020B4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020B500);
}

uint64_t sub_10020B504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10020B510);
}

uint64_t sub_10020B514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10020B520);
}

uint64_t sub_10020B524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10020B530(a1, a2, a3, (uint64_t)&unk_1002D5928);
}

uint64_t sub_10020B530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v7 <= 0x3F)
  {
    v8[0] = *(void *)(result - 8) + 64LL;
    v8[1] = a4;
    v8[2] = a4;
    void v8[3] = a4;
    v8[4] = a4;
    swift_initStructMetadata(a1, 256LL, 5LL, v8, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_10020B5A4()
{
  return type metadata accessor for Proto_Gnss_Emergency_Init._StorageClass(0LL);
}

void sub_10020B5AC(uint64_t a1)
{
  v10[0] = &unk_1002D6C38;
  sub_1000119EC(319LL, &qword_100361308, type metadata accessor for Proto_Gnss_Emergency_QoP);
  if (v3 <= 0x3F)
  {
    v10[1] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, (unint64_t *)&unk_10035E1D8, type metadata accessor for Proto_Gnss_Emergency_SLPAddress);
    if (v5 <= 0x3F)
    {
      v10[2] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_100361310, type metadata accessor for Proto_Gnss_Emergency_Notification);
      if (v7 <= 0x3F)
      {
        v10[3] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC( 319LL,  (unint64_t *)&unk_100361318,  type metadata accessor for Proto_Gnss_Emergency_SuplInitVer2Extension);
        if (v9 <= 0x3F)
        {
          v10[4] = *(void *)(v8 - 8) + 64LL;
          swift_updateClassMetadata2(a1, 256LL, 5LL, v10, a1 + 80);
        }
      }
    }
  }

uint64_t sub_10020B6B4()
{
  return type metadata accessor for Proto_Gnss_Emergency_SessionStatus._StorageClass(0LL);
}

void sub_10020B6BC(uint64_t a1)
{
  v6[0] = &unk_1002D59B0;
  v6[1] = &unk_1002D6C38;
  v6[2] = &unk_1002D6CC0;
  v6[3] = &unk_1002D6CD8;
  void v6[4] = &unk_1002D5940;
  v6[5] = &unk_1002D5940;
  v6[6] = &unk_1002D5940;
  void v6[7] = &unk_1002D5940;
  void v6[8] = &unk_1002D5940;
  void v6[9] = &unk_1002D5940;
  v6[10] = &unk_1002D5940;
  v6[11] = &unk_1002D5928;
  void v6[12] = &unk_1002D5928;
  v6[13] = &unk_1002D5928;
  sub_1000119EC(319LL, &qword_100361460, type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceLocation);
  if (v3 <= 0x3F)
  {
    v6[14] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_100361468,  type metadata accessor for Proto_Gnss_Emergency_NetworkReferenceTime);
    if (v5 <= 0x3F)
    {
      v6[15] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 16LL, v6, a1 + 80);
    }
  }

uint64_t sub_10020B7AC()
{
  return type metadata accessor for Proto_Gnss_Emergency_GanssTimeMeasured._StorageClass(0LL);
}

void sub_10020B7B4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_1003619D8, type metadata accessor for Proto_Gnss_Emergency_GeranGanssTimeMeasured);
    if (v5 <= 0x3F)
    {
      v8[1] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC( 319LL,  (unint64_t *)&unk_1003619E0,  type metadata accessor for Proto_Gnss_Emergency_ClsEutranCell);
      if (v7 <= 0x3F)
      {
        v8[2] = *(void *)(v6 - 8) + 64LL;
        swift_updateClassMetadata2(a1, 256LL, 3LL, v8, a1 + 80);
      }
    }
  }

uint64_t sub_10020B884()
{
  return type metadata accessor for Proto_Gnss_Emergency_ShapeInfo._StorageClass(0LL);
}

void sub_10020B88C(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v16[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100361AF0, type metadata accessor for Proto_Gnss_Emergency_PointUncertainEllipse);
    if (v5 <= 0x3F)
    {
      v16[1] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC( 319LL,  &qword_100361AF8,  type metadata accessor for Proto_Gnss_Emergency_PointAltitudeUncertainEllipsoid);
      if (v7 <= 0x3F)
      {
        v16[2] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC(319LL, &qword_100361B00, type metadata accessor for Proto_Gnss_Emergency_EllipsoidArc);
        if (v9 <= 0x3F)
        {
          v16[3] = *(void *)(v8 - 8) + 64LL;
          sub_1000119EC( 319LL,  (unint64_t *)&unk_10035EF48,  type metadata accessor for Proto_Gnss_Emergency_EllipsoidPoint);
          if (v11 <= 0x3F)
          {
            void v16[4] = *(void *)(v10 - 8) + 64LL;
            sub_1000119EC(319LL, &qword_100361B08, type metadata accessor for Proto_Gnss_Emergency_PointAltitude);
            if (v13 <= 0x3F)
            {
              v16[5] = *(void *)(v12 - 8) + 64LL;
              sub_1000119EC( 319LL,  (unint64_t *)&unk_100361B10,  type metadata accessor for Proto_Gnss_Emergency_Polygon);
              if (v15 <= 0x3F)
              {
                v16[6] = *(void *)(v14 - 8) + 64LL;
                v16[7] = &unk_1002D59B0;
                swift_updateClassMetadata2(a1, 256LL, 8LL, v16, a1 + 80);
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_10020BA14()
{
  return type metadata accessor for Proto_Gnss_Emergency_PositionReport._StorageClass(0LL);
}

void sub_10020BA1C(uint64_t a1)
{
  v12[0] = &unk_1002D61D8;
  v12[1] = &unk_1002D59B0;
  sub_1000119EC(319LL, &qword_100361CB8, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  if (v3 <= 0x3F)
  {
    v12[2] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100361CC0, type metadata accessor for Proto_Gnss_Emergency_LocationInfo);
    if (v5 <= 0x3F)
    {
      v12[3] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_100361CC8, type metadata accessor for Proto_Gnss_Emergency_GanssLocationInfo);
      if (v7 <= 0x3F)
      {
        void v12[4] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC(319LL, &qword_100361CD0, type metadata accessor for Proto_Gnss_Emergency_LocEstimate);
        if (v9 <= 0x3F)
        {
          void v12[5] = *(void *)(v8 - 8) + 64LL;
          sub_1000119EC( 319LL,  (unint64_t *)&unk_100361CD8,  type metadata accessor for Proto_Gnss_Emergency_VelocityEstimate);
          if (v11 <= 0x3F)
          {
            v12[6] = *(void *)(v10 - 8) + 64LL;
            v12[7] = &unk_1002D59B0;
            swift_updateClassMetadata2(a1, 256LL, 8LL, v12, a1 + 80);
          }
        }
      }
    }
  }

uint64_t sub_10020BB58()
{
  return type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements._StorageClass(0LL);
}

void sub_10020BB60(uint64_t a1)
{
  v6[0] = &unk_1002D59B0;
  v6[1] = &unk_1002D59B0;
  v6[2] = &unk_1002D59B0;
  v6[3] = &unk_1002D59B0;
  void v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1000119EC( 319LL,  (unint64_t *)&unk_100361E80,  type metadata accessor for Proto_Gnss_Emergency_GpsTimeMeasuredParams);
  if (v3 <= 0x3F)
  {
    v6[5] = *(void *)(v2 - 8) + 64LL;
    v6[6] = &unk_1002D59B0;
    void v6[7] = &unk_1002D59B0;
    sub_1000119EC(319LL, (unint64_t *)&unk_10035EA18, type metadata accessor for Proto_Gnss_Emergency_GpsTOD);
    if (v5 <= 0x3F)
    {
      void v6[8] = *(void *)(v4 - 8) + 64LL;
      swift_updateClassMetadata2(a1, 256LL, 9LL, v6, a1 + 80);
    }
  }

uint64_t sub_10020BC28()
{
  return type metadata accessor for Proto_Gnss_Emergency_MeasurementReport._StorageClass(0LL);
}

void sub_10020BC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10020BC4C()
{
  return type metadata accessor for Proto_Gnss_Emergency_GanssAidRequestPerGanss._StorageClass(0LL);
}

void sub_10020BC54(uint64_t a1)
{
  v8[0] = &unk_1002D5AA0;
  v8[1] = &unk_1002D59B0;
  v8[2] = &unk_1002D59B0;
  void v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1000119EC(319LL, &qword_1003621D8, type metadata accessor for Proto_Gnss_Emergency_GanssDataBitAssist);
  if (v3 <= 0x3F)
  {
    v8[4] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_1003621E0, type metadata accessor for Proto_Gnss_Emergency_GanssNavModelAddData);
    if (v5 <= 0x3F)
    {
      void v8[5] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC( 319LL,  (unint64_t *)&unk_1003621E8,  type metadata accessor for Proto_Gnss_Emergency_GanssAddAssistDataChoices);
      if (v7 <= 0x3F)
      {
        v8[6] = *(void *)(v6 - 8) + 64LL;
        swift_updateClassMetadata2(a1, 256LL, 7LL, v8, a1 + 80);
      }
    }
  }

uint64_t sub_10020BD48()
{
  return type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport._StorageClass(0LL);
}

void sub_10020BD50(uint64_t a1)
{
  v8[0] = &unk_1002D61D8;
  v8[1] = &unk_1002D59B0;
  sub_1000119EC(319LL, &qword_100361CB8, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  if (v3 <= 0x3F)
  {
    v8[2] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100362370, type metadata accessor for Proto_Gnss_Emergency_GpsAssistanceRequest);
    if (v5 <= 0x3F)
    {
      void v8[3] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC( 319LL,  (unint64_t *)&unk_100362378,  type metadata accessor for Proto_Gnss_Emergency_GanssAssistanceRequest);
      if (v7 <= 0x3F)
      {
        v8[4] = *(void *)(v6 - 8) + 64LL;
        swift_updateClassMetadata2(a1, 256LL, 5LL, v8, a1 + 80);
      }
    }
  }

uint64_t sub_10020BE34()
{
  return type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate._StorageClass(0LL);
}

void sub_10020BE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10020BE58( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  v16[0] = &unk_1002D61D8;
  v16[1] = &unk_1002D59B0;
  sub_1000119EC(319LL, &qword_100361CB8, type metadata accessor for Proto_Gnss_Emergency_SessionInfo);
  if (v11 <= 0x3F)
  {
    v16[2] = *(void *)(v10 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100362048, type metadata accessor for Proto_Gnss_Emergency_GpsMeasurements);
    if (v13 <= 0x3F)
    {
      v16[3] = *(void *)(v12 - 8) + 64LL;
      sub_1000119EC(319LL, a4, a5);
      if (v15 <= 0x3F)
      {
        void v16[4] = *(void *)(v14 - 8) + 64LL;
        v16[5] = a6;
        v16[6] = &unk_1002D5928;
        swift_updateClassMetadata2(a1, 256LL, 7LL, v16, a1 + 80);
      }
    }
  }

unint64_t sub_10020BF54()
{
  unint64_t result = qword_100362DF8;
  if (!qword_100362DF8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CC5A8, &type metadata for Proto_Gnss_Emergency_WlanMeasurementResult);
    atomic_store(result, (unint64_t *)&qword_100362DF8);
  }

  return result;
}

unint64_t sub_10020BF98()
{
  unint64_t result = qword_100362E00;
  if (!qword_100362E00)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CC488, &type metadata for Proto_Gnss_Emergency_AfltAction);
    atomic_store(result, (unint64_t *)&qword_100362E00);
  }

  return result;
}

unint64_t sub_10020BFDC()
{
  unint64_t result = qword_100362E08;
  if (!qword_100362E08)
  {
    unint64_t result = swift_getWitnessTable( &unk_1002CC368,  &type metadata for Proto_Gnss_Emergency_MeasurementAndEstimateResponseType);
    atomic_store(result, (unint64_t *)&qword_100362E08);
  }

  return result;
}

unint64_t sub_10020C020()
{
  unint64_t result = qword_100362E10;
  if (!qword_100362E10)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CC248, &type metadata for Proto_Gnss_Emergency_GpsDopplerUncMpsExt);
    atomic_store(result, (unint64_t *)&qword_100362E10);
  }

  return result;
}

unint64_t sub_10020C064()
{
  unint64_t result = qword_100362E18;
  if (!qword_100362E18)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CC128, &type metadata for Proto_Gnss_Emergency_UtranSfnGpsUncertainty);
    atomic_store(result, (unint64_t *)&qword_100362E18);
  }

  return result;
}

unint64_t sub_10020C0A8()
{
  unint64_t result = qword_100362E20;
  if (!qword_100362E20)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CC008, &type metadata for Proto_Gnss_Emergency_AssistanceRequest);
    atomic_store(result, (unint64_t *)&qword_100362E20);
  }

  return result;
}

unint64_t sub_10020C0EC()
{
  unint64_t result = qword_100362E28;
  if (!qword_100362E28)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CBEE8, &type metadata for Proto_Gnss_Emergency_GanssSignalIdMask);
    atomic_store(result, (unint64_t *)&qword_100362E28);
  }

  return result;
}

unint64_t sub_10020C130()
{
  unint64_t result = qword_100362E30;
  if (!qword_100362E30)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CBDC8, &type metadata for Proto_Gnss_Emergency_GanssGenericAidMask);
    atomic_store(result, (unint64_t *)&qword_100362E30);
  }

  return result;
}

unint64_t sub_10020C174()
{
  unint64_t result = qword_100362E38;
  if (!qword_100362E38)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CBCA8, &type metadata for Proto_Gnss_Emergency_GanssCommonAidMask);
    atomic_store(result, (unint64_t *)&qword_100362E38);
  }

  return result;
}

unint64_t sub_10020C1B8()
{
  unint64_t result = qword_100362E40;
  if (!qword_100362E40)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CBB88, &type metadata for Proto_Gnss_Emergency_AidMask);
    atomic_store(result, (unint64_t *)&qword_100362E40);
  }

  return result;
}

unint64_t sub_10020C1FC()
{
  unint64_t result = qword_100362E48;
  if (!qword_100362E48)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB948, &type metadata for Proto_Gnss_Emergency_MeasurementsResult);
    atomic_store(result, (unint64_t *)&qword_100362E48);
  }

  return result;
}

unint64_t sub_10020C240()
{
  unint64_t result = qword_100362E50;
  if (!qword_100362E50)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB828, &type metadata for Proto_Gnss_Emergency_GanssId);
    atomic_store(result, (unint64_t *)&qword_100362E50);
  }

  return result;
}

unint64_t sub_10020C284()
{
  unint64_t result = qword_100362E58;
  if (!qword_100362E58)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB708, &type metadata for Proto_Gnss_Emergency_MultipathIndicator);
    atomic_store(result, (unint64_t *)&qword_100362E58);
  }

  return result;
}

unint64_t sub_10020C2C8()
{
  unint64_t result = qword_100362E60;
  if (!qword_100362E60)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB5E8, &type metadata for Proto_Gnss_Emergency_VelocityType);
    atomic_store(result, (unint64_t *)&qword_100362E60);
  }

  return result;
}

unint64_t sub_10020C30C()
{
  unint64_t result = qword_100362E68;
  if (!qword_100362E68)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB4C8, &type metadata for Proto_Gnss_Emergency_ShapeType);
    atomic_store(result, (unint64_t *)&qword_100362E68);
  }

  return result;
}

unint64_t sub_10020C350()
{
  unint64_t result = qword_100362E70;
  if (!qword_100362E70)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB3A8, &type metadata for Proto_Gnss_Emergency_GnssTimeId);
    atomic_store(result, (unint64_t *)&qword_100362E70);
  }

  return result;
}

unint64_t sub_10020C394()
{
  unint64_t result = qword_100362E78;
  if (!qword_100362E78)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB288, &type metadata for Proto_Gnss_Emergency_ClsNetworkType);
    atomic_store(result, (unint64_t *)&qword_100362E78);
  }

  return result;
}

unint64_t sub_10020C3D8()
{
  unint64_t result = qword_100362E80;
  if (!qword_100362E80)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB168, &type metadata for Proto_Gnss_Emergency_FixType);
    atomic_store(result, (unint64_t *)&qword_100362E80);
  }

  return result;
}

unint64_t sub_10020C41C()
{
  unint64_t result = qword_100362E88;
  if (!qword_100362E88)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CB048, &type metadata for Proto_Gnss_Emergency_SupportedGADShapes);
    atomic_store(result, (unint64_t *)&qword_100362E88);
  }

  return result;
}

unint64_t sub_10020C460()
{
  unint64_t result = qword_100362E90;
  if (!qword_100362E90)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CAF28, &type metadata for Proto_Gnss_Emergency_GnssId);
    atomic_store(result, (unint64_t *)&qword_100362E90);
  }

  return result;
}

unint64_t sub_10020C4A4()
{
  unint64_t result = qword_100362E98;
  if (!qword_100362E98)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CAE08, &type metadata for Proto_Gnss_Emergency_AdditionalInfo);
    atomic_store(result, (unint64_t *)&qword_100362E98);
  }

  return result;
}

unint64_t sub_10020C4E8()
{
  unint64_t result = qword_100362EA0;
  if (!qword_100362EA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CACE8, &type metadata for Proto_Gnss_Emergency_Environment);
    atomic_store(result, (unint64_t *)&qword_100362EA0);
  }

  return result;
}

unint64_t sub_10020C52C()
{
  unint64_t result = qword_100362EA8;
  if (!qword_100362EA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CABC8, &type metadata for Proto_Gnss_Emergency_MethodType);
    atomic_store(result, (unint64_t *)&qword_100362EA8);
  }

  return result;
}

unint64_t sub_10020C570()
{
  unint64_t result = qword_100362EB0;
  if (!qword_100362EB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CAAA8, &type metadata for Proto_Gnss_Emergency_PosProtocol);
    atomic_store(result, (unint64_t *)&qword_100362EB0);
  }

  return result;
}

unint64_t sub_10020C5B4()
{
  unint64_t result = qword_100362EB8;
  if (!qword_100362EB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA988, &type metadata for Proto_Gnss_Emergency_SessionProtocol);
    atomic_store(result, (unint64_t *)&qword_100362EB8);
  }

  return result;
}

unint64_t sub_10020C5F8()
{
  unint64_t result = qword_100362EC0;
  if (!qword_100362EC0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA868, &type metadata for Proto_Gnss_Emergency_ClsModemState);
    atomic_store(result, (unint64_t *)&qword_100362EC0);
  }

  return result;
}

unint64_t sub_10020C63C()
{
  unint64_t result = qword_100362EC8;
  if (!qword_100362EC8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA748, &type metadata for Proto_Gnss_Emergency_ErrorCodes);
    atomic_store(result, (unint64_t *)&qword_100362EC8);
  }

  return result;
}

unint64_t sub_10020C680()
{
  unint64_t result = qword_100362ED0;
  if (!qword_100362ED0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA628, &type metadata for Proto_Gnss_Emergency_SLPAddressType);
    atomic_store(result, (unint64_t *)&qword_100362ED0);
  }

  return result;
}

unint64_t sub_10020C6C4()
{
  unint64_t result = qword_100362ED8;
  if (!qword_100362ED8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA508, &type metadata for Proto_Gnss_Emergency_FreqMode);
    atomic_store(result, (unint64_t *)&qword_100362ED8);
  }

  return result;
}

unint64_t sub_10020C708()
{
  unint64_t result = qword_100362EE0;
  if (!qword_100362EE0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA3E8, &type metadata for Proto_Gnss_Emergency_CellType);
    atomic_store(result, (unint64_t *)&qword_100362EE0);
  }

  return result;
}

unint64_t sub_10020C74C()
{
  unint64_t result = qword_100362EE8;
  if (!qword_100362EE8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA2C8, &type metadata for Proto_Gnss_Emergency_ConnectionStatus);
    atomic_store(result, (unint64_t *)&qword_100362EE8);
  }

  return result;
}

unint64_t sub_10020C790()
{
  unint64_t result = qword_100362EF0;
  if (!qword_100362EF0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA1A8, &type metadata for Proto_Gnss_Emergency_EndCause);
    atomic_store(result, (unint64_t *)&qword_100362EF0);
  }

  return result;
}

unint64_t sub_10020C7D4()
{
  unint64_t result = qword_100362EF8;
  if (!qword_100362EF8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002CA088, &type metadata for Proto_Gnss_Emergency_Status);
    atomic_store(result, (unint64_t *)&qword_100362EF8);
  }

  return result;
}

unint64_t sub_10020C818()
{
  unint64_t result = qword_100362F00;
  if (!qword_100362F00)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002C9F68, &type metadata for Proto_Gnss_Emergency_TriggerType);
    atomic_store(result, (unint64_t *)&qword_100362F00);
  }

  return result;
}

unint64_t sub_10020C85C()
{
  unint64_t result = qword_100362F08;
  if (!qword_100362F08)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002C9E48, &type metadata for Proto_Gnss_Emergency_SessionErrorCode);
    atomic_store(result, (unint64_t *)&qword_100362F08);
  }

  return result;
}

unint64_t sub_10020C8A0()
{
  unint64_t result = qword_100362F10;
  if (!qword_100362F10)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002C9D28, &type metadata for Proto_Gnss_Emergency_PositionProtocol);
    atomic_store(result, (unint64_t *)&qword_100362F10);
  }

  return result;
}

unint64_t sub_10020C8E4()
{
  unint64_t result = qword_100362F18;
  if (!qword_100362F18)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002C9C08, &type metadata for Proto_Gnss_Emergency_PositionSession);
    atomic_store(result, (unint64_t *)&qword_100362F18);
  }

  return result;
}

unint64_t sub_10020C928()
{
  unint64_t result = qword_100362F20;
  if (!qword_100362F20)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002C9AE8, &type metadata for Proto_Gnss_Emergency_PositionReqType);
    atomic_store(result, (unint64_t *)&qword_100362F20);
  }

  return result;
}

unint64_t sub_10020C96C()
{
  unint64_t result = qword_100362F28;
  if (!qword_100362F28)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002C99C8, &type metadata for Proto_Gnss_Emergency_PositionMethod);
    atomic_store(result, (unint64_t *)&qword_100362F28);
  }

  return result;
}

uint64_t sub_10020C9CC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100015698();
  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_10020CA04@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021ADE4(a1);
  *a2 = result;
  return result;
}

unint64_t sub_10020CA28@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021ADE4(*a1);
  *a2 = result;
  return result;
}

_UNKNOWN **sub_10020CA50()
{
  return &off_100344E48;
}

void sub_10020CA5C(void *a1@<X8>)
{
  *a1 = &off_100344E48;
}

uint64_t sub_10020CA6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002220F4();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10020CAA4()
{
  return &off_100344E78;
}

void sub_10020CAB0(void *a1@<X8>)
{
  *a1 = &off_100344E78;
}

uint64_t sub_10020CAC0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002220B0();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10020CAF8()
{
  return &off_100344EA0;
}

void sub_10020CB04(void *a1@<X8>)
{
  *a1 = &off_100344EC8;
}

uint64_t sub_10020CB14(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10022206C();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10020CB4C()
{
  return &off_100344EF0;
}

void sub_10020CB58(void *a1@<X8>)
{
  *a1 = &off_100344EF0;
}

uint64_t sub_10020CB68(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100222028();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10020CBA0()
{
  return &off_100344F18;
}

void sub_10020CBAC(void *a1@<X8>)
{
  *a1 = &off_100344F40;
}

uint64_t sub_10020CBC0(char a1)
{
  return qword_1002D94D8[a1];
}

BOOL sub_10020CBD4(char *a1, char *a2)
{
  return qword_1002D94D8[*a1] == qword_1002D94D8[*a2];
}

uint64_t sub_10020CBF8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221FE4();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_10020CC30@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10021ADF4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10020CC54()
{
  return qword_1002D94D8[*v0];
}

uint64_t sub_10020CC68@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10021ADF4(*a1);
  *a2 = result;
  return result;
}

void sub_10020CC90(void *a1@<X8>)
{
  *a1 = qword_1002D94D8[*v1];
}

_UNKNOWN **sub_10020CCA8()
{
  return &off_100344F68;
}

void sub_10020CCB4(void *a1@<X8>)
{
  *a1 = &off_100344F68;
}

uint64_t sub_10020CCC8(char a1)
{
  return qword_1002D9528[a1];
}

BOOL sub_10020CCDC(char *a1, char *a2)
{
  return qword_1002D9528[*a1] == qword_1002D9528[*a2];
}

uint64_t sub_10020CD00(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221FA0();
  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_10020CD38@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021AE14(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10020CD5C()
{
  return qword_1002D9528[*v0];
}

unint64_t sub_10020CD70@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021AE14(*a1);
  *a2 = result;
  return result;
}

void sub_10020CD98(void *a1@<X8>)
{
  *a1 = qword_1002D9528[*v1];
}

_UNKNOWN **sub_10020CDB0()
{
  return &off_100344F98;
}

void sub_10020CDBC(void *a1@<X8>)
{
  *a1 = &off_100344FC0;
}

uint64_t sub_10020CDD0(char a1)
{
  return qword_1002D95C0[a1];
}

BOOL sub_10020CDE4(char *a1, char *a2)
{
  return qword_1002D95C0[*a1] == qword_1002D95C0[*a2];
}

uint64_t sub_10020CE08(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221F5C();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_10020CE40@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10021AE34(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10020CE64()
{
  return qword_1002D95C0[*v0];
}

uint64_t sub_10020CE78@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10021AE34(*a1);
  *a2 = result;
  return result;
}

void sub_10020CEA0(void *a1@<X8>)
{
  *a1 = qword_1002D95C0[*v1];
}

_UNKNOWN **sub_10020CEB8()
{
  return &off_100344FE8;
}

void sub_10020CEC4(void *a1@<X8>)
{
  *a1 = &off_100344FE8;
}

uint64_t sub_10020CED8(char a1)
{
  return qword_1002D9550[a1];
}

BOOL sub_10020CEEC(char *a1, char *a2)
{
  return qword_1002D9550[*a1] == qword_1002D9550[*a2];
}

uint64_t sub_10020CF10(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221F18();
  return Enum.hash(into:)(a1, a2, v4);
}

unint64_t sub_10020CF48@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021AE9C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10020CF6C()
{
  return qword_1002D9550[*v0];
}

unint64_t sub_10020CF80@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_10021AE9C(*a1);
  *a2 = result;
  return result;
}

void sub_10020CFA8(void *a1@<X8>)
{
  *a1 = qword_1002D9550[*v1];
}

_UNKNOWN **sub_10020CFC0()
{
  return &off_100345010;
}

void sub_10020CFCC(void *a1@<X8>)
{
  *a1 = &off_100345038;
}

uint64_t sub_10020CFE0(char a1)
{
  return qword_1002D9570[a1];
}

BOOL sub_10020CFF4(char *a1, char *a2)
{
  return qword_1002D9570[*a1] == qword_1002D9570[*a2];
}

uint64_t sub_10020D018(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221ED4();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_10020D050@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10021AEBC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10020D074()
{
  return qword_1002D9570[*v0];
}

uint64_t sub_10020D088@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_10021AEBC(*a1);
  *a2 = result;
  return result;
}

void sub_10020D0B0(void *a1@<X8>)
{
  *a1 = qword_1002D9570[*v1];
}

_UNKNOWN **sub_10020D0C8()
{
  return &off_100345060;
}

void sub_10020D0D4(void *a1@<X8>)
{
  *a1 = &off_100345060;
}

uint64_t sub_10020D0E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221E90();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10020D11C()
{
  return &off_100345088;
}

void sub_10020D128(void *a1@<X8>)
{
  *a1 = &off_1003450B0;
}

double sub_10020D138()
{
  return sub_10001FC20(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D144(double a1)
{
  return sub_10001FC64(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D150(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D1A8()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D1B4()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D1C0()
{
  return sub_10001FD78(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D1CC(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D1D8(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D230()
{
  return sub_10000510C(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D23C()
{
  return sub_100005148(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D248()
{
  return sub_100027BE4(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D254(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D260(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D2B8()
{
  return sub_100027CC4(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D2C4()
{
  return sub_100027D00(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D2D0()
{
  return sub_100027D3C(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D2DC(double a1)
{
  return sub_100027D80(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D2E8(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D340()
{
  return sub_100027E1C(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D34C()
{
  return sub_100027E58(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D358()
{
  return sub_10002A1C4(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D364(double a1)
{
  return sub_10002A208(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D370(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D3C8()
{
  return sub_10002A2A4(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D3D4()
{
  return sub_10002A2E0(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D3E0()
{
  return sub_1000B4298(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D3EC(double a1)
{
  return sub_1000B42DC(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D3F8(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D450()
{
  return sub_1000B4378(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D45C()
{
  return sub_1000B43B4(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D468()
{
  return sub_1000B43F0(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D474(double a1)
{
  return sub_1000B4434(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t (*sub_10020D480(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D4D8()
{
  return sub_1000B44D0(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D4E4()
{
  return sub_1000B450C(type metadata accessor for Proto_Gnss_Position);
}

double sub_10020D4F0()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 48);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_10020D524(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v4 = v1 + *(int *)(result + 48);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10020D558(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D5B0()
{
  return sub_1000B8388(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D5BC()
{
  return sub_1000B83C4(type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020D5C8()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 52));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_10020D5F8(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v4 = v1 + *(int *)(result + 52);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_10020D62C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 52);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_10020D67C()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 52) + 4) & 1) == 0;
}

uint64_t sub_10020D6A8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v2 = v0 + *(int *)(result + 52);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_10020D6D4()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 56));
  if (v1 == 6) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10020D6FC(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*sub_10020D728(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 56);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100003798;
}

BOOL sub_10020D774()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 56)) != 6;
}

uint64_t sub_10020D79C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 56)) = 6;
  return result;
}

uint64_t sub_10020D7C0()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 60));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_10020D7F0(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v4 = v1 + *(int *)(result + 60);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10020D824(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 60);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020D878()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 60) + 8) & 1) == 0;
}

uint64_t sub_10020D8A4()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v2 = v0 + *(int *)(result + 60);
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

uint64_t sub_10020D8D0()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 64));
  if (v1 == 6) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10020D8F8(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*sub_10020D924(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 64);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10020D970()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 64)) != 6;
}

uint64_t sub_10020D998()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 64)) = 6;
  return result;
}

int *sub_10020D9BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = a1 + result[8];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a1 + result[9];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1 + result[10];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + result[11];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a1 + result[12];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = a1 + result[13];
  *(_DWORD *)uint64_t v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  *(_BYTE *)(a1 + result[14]) = 6;
  uint64_t v12 = a1 + result[15];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  *(_BYTE *)(a1 + result[16]) = 6;
  return result;
}

double sub_10020DA9C()
{
  return sub_10001FC20(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DAA8(double a1)
{
  return sub_10001FC64(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*sub_10020DAB4(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DB0C()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DB18()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_Velocity);
}

double sub_10020DB24()
{
  return sub_10001FD78(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DB30(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*sub_10020DB3C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DB94()
{
  return sub_10000510C(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DBA0()
{
  return sub_100005148(type metadata accessor for Proto_Gnss_Velocity);
}

double sub_10020DBAC()
{
  return sub_100027BE4(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DBB8(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*sub_10020DBC4(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DC1C()
{
  return sub_100027CC4(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DC28()
{
  return sub_100027D00(type metadata accessor for Proto_Gnss_Velocity);
}

double sub_10020DC34()
{
  return sub_100027D3C(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DC40(double a1)
{
  return sub_100027D80(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*sub_10020DC4C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DCA4()
{
  return sub_100027E1C(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DCB0()
{
  return sub_100027E58(type metadata accessor for Proto_Gnss_Velocity);
}

double sub_10020DCBC()
{
  return sub_10002A1C4(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DCC8(double a1)
{
  return sub_10002A208(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*sub_10020DCD4(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DD2C()
{
  return sub_10002A2A4(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DD38()
{
  return sub_10002A2E0(type metadata accessor for Proto_Gnss_Velocity);
}

double sub_10020DD44()
{
  return sub_1000B4298(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DD50(double a1)
{
  return sub_1000B42DC(type metadata accessor for Proto_Gnss_Velocity, a1);
}

uint64_t (*sub_10020DD5C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DDB4()
{
  return sub_1000B4378(type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020DDC0()
{
  return sub_1000B43B4(type metadata accessor for Proto_Gnss_Velocity);
}

int *sub_10020DDCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = a1 + result[8];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a1 + result[9];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1 + result[10];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t sub_10020DE58()
{
  return sub_100027F98(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020DE64(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gnss_Time);
}

uint64_t (*sub_10020DE70(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020DEC4()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020DED0()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_Time);
}

float sub_10020DEDC()
{
  return sub_1000276E8(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020DEE8(float a1)
{
  return sub_10002772C(type metadata accessor for Proto_Gnss_Time, a1);
}

uint64_t (*sub_10020DEF4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 24);
  float v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    float v4 = 0.0;
  }
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_10020DF4C()
{
  return sub_1000277C8(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020DF58()
{
  return sub_100027804(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020DF64()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 28)) & 1;
}

uint64_t sub_10020DF88(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_10020DFB4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10020DFFC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 28)) != 2;
}

uint64_t sub_10020E024()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_10020E048()
{
  return sub_1000A9EA0(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E054(int a1)
{
  return sub_1000A9EE0(a1, type metadata accessor for Proto_Gnss_Time);
}

uint64_t (*sub_10020E060(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 32);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_10020E0B0()
{
  return sub_100027938(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E0BC()
{
  return sub_100027974(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E0C8()
{
  return sub_10020FF8C(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E0D4(uint64_t a1)
{
  return sub_10020FFCC(a1, type metadata accessor for Proto_Gnss_Time);
}

uint64_t (*sub_10020E0E0(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020E134()
{
  return sub_10002A2A4(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E140()
{
  return sub_10002A2E0(type metadata accessor for Proto_Gnss_Time);
}

double sub_10020E14C()
{
  return sub_1000B4298(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E158(double a1)
{
  return sub_1000B42DC(type metadata accessor for Proto_Gnss_Time, a1);
}

uint64_t (*sub_10020E164(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020E1BC()
{
  return sub_1000B4378(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E1C8()
{
  return sub_1000B43B4(type metadata accessor for Proto_Gnss_Time);
}

double sub_10020E1D4()
{
  return sub_1000B43F0(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E1E0(double a1)
{
  return sub_1000B4434(type metadata accessor for Proto_Gnss_Time, a1);
}

uint64_t (*sub_10020E1EC(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020E244()
{
  return sub_1000B44D0(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E250()
{
  return sub_1000B450C(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E25C()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 48));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_10020E28C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v4 = v1 + *(int *)(result + 48);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10020E2C0(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020E314()
{
  return sub_1000B8388(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E320()
{
  return sub_1000B83C4(type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E32C()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 52));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_10020E35C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v4 = v1 + *(int *)(result + 52);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10020E390(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 52);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10020E3E4()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 52) + 8) & 1) == 0;
}

uint64_t sub_10020E410()
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v2 = v0 + *(int *)(result + 52);
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

int *sub_10020E43C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  *(_BYTE *)(a1 + result[7]) = 2;
  uint64_t v5 = a1 + result[8];
  *(_DWORD *)uint64_t v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[9];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a1 + result[10];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1 + result[11];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + result[12];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a1 + result[13];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  return result;
}

uint64_t sub_10020E4F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363118);
  __chkstk_darwin(v3);
  uint64_t v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v18, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100363118);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  uint64_t v10 = a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[10];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1 + v7[11];
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  uint64_t v14 = a1 + v7[12];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  uint64_t v15 = a1 + v7[13];
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  return sub_100015764((uint64_t)v5, &qword_100363118);
}

uint64_t sub_10020E688(uint64_t a1)
{
  return sub_10020EE9C( a1,  &qword_100363118,  type metadata accessor for Proto_Gnss_Time,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time);
}

void (*sub_10020E6A4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363118);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100363118);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    v9[v6[7]] = 2;
    uint64_t v13 = &v9[v6[8]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[9]];
    *(void *)uint64_t v14 = 0LL;
    v14[8] = 1;
    uint64_t v15 = &v9[v6[10]];
    *(void *)uint64_t v15 = 0LL;
    v15[8] = 1;
    uint64_t v16 = &v9[v6[11]];
    *(void *)uint64_t v16 = 0LL;
    void v16[8] = 1;
    uint64_t v17 = &v9[v6[12]];
    *(void *)uint64_t v17 = 0LL;
    v17[8] = 1;
    uint64_t v18 = &v9[v6[13]];
    *(void *)uint64_t v18 = 0LL;
    v18[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100363118);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Time);
  }

  return sub_10020E868;
}

void sub_10020E868(uint64_t a1, char a2)
{
}

BOOL sub_10020E884()
{
  return sub_10001D054( &qword_100363118,  type metadata accessor for Proto_Gnss_Fix,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time,  type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_10020E8A8()
{
  return sub_10020EBE0( &qword_100363118,  type metadata accessor for Proto_Gnss_Time,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time);
}

uint64_t sub_10020E8C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363120);
  __chkstk_darwin(v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v20, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100363120);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a1 + v7[7];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = a1 + v7[8];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[9];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1 + v7[10];
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  uint64_t v14 = a1 + v7[11];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  uint64_t v15 = a1 + v7[12];
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  uint64_t v16 = a1 + v7[13];
  *(_DWORD *)uint64_t v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  *(_BYTE *)(a1 + v7[14]) = 6;
  uint64_t v17 = a1 + v7[15];
  *(void *)uint64_t v17 = 0LL;
  *(_BYTE *)(v17 + 8) = 1;
  *(_BYTE *)(a1 + v7[16]) = 6;
  return sub_100015764((uint64_t)v5, &qword_100363120);
}

uint64_t sub_10020EA80(uint64_t a1)
{
  return sub_10020EE9C( a1,  &qword_100363120,  type metadata accessor for Proto_Gnss_Position,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
}

void (*sub_10020EA9C(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(type metadata accessor for Proto_Gnss_Position(0LL) - 8) + 64LL);
  a1[1] = malloc(v3);
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  sub_10020E8C4((uint64_t)v4);
  return sub_10020EB04;
}

void sub_10020EB04(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  size_t v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_10000404C(*(void *)(a1 + 16), (uint64_t)v2, type metadata accessor for Proto_Gnss_Position);
    sub_10020EE9C( (uint64_t)v2,  &qword_100363120,  type metadata accessor for Proto_Gnss_Position,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
    sub_100004090((uint64_t)v3, type metadata accessor for Proto_Gnss_Position);
  }

  else
  {
    sub_10020EE9C( *(void *)(a1 + 16),  &qword_100363120,  type metadata accessor for Proto_Gnss_Position,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
  }

  free(v3);
  free(v2);
}

BOOL sub_10020EBA0()
{
  return sub_10001D054( &qword_100363120,  type metadata accessor for Proto_Gnss_Fix,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position,  type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_10020EBC4()
{
  return sub_10020EBE0( &qword_100363120,  type metadata accessor for Proto_Gnss_Position,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position);
}

uint64_t sub_10020EBE0(uint64_t *a1, uint64_t (*a2)(void), void *a3)
{
  uint64_t v7 = v3;
  uint64_t v8 = sub_100003A0C(a1);
  __chkstk_darwin(v8);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v11)) & 1) == 0)
  {
    uint64_t v12 = *(void *)(v3 + v11);
    uint64_t v13 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
    uint64_t v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    uint64_t v15 = swift_retain(v12);
    sub_10021AF40(v15);
    swift_release(v12);
    uint64_t v16 = *(void *)(v7 + v11);
    *(void *)(v7 + v11) = v14;
    swift_release(v16);
  }

  uint64_t v17 = *(void *)(v7 + v11);
  uint64_t v18 = a2(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v10, 1LL, 1LL, v18);
  uint64_t v19 = v17 + *a3;
  swift_beginAccess(v19, v22, 33LL, 0LL);
  swift_retain(v17);
  sub_10000E5D4((uint64_t)v10, v19, a1);
  swift_endAccess(v22);
  return swift_release(v17);
}

uint64_t sub_10020ED18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363128);
  __chkstk_darwin(v3);
  uint64_t v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v16, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100363128);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Velocity(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a1 + v7[7];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = a1 + v7[8];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[9];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1 + v7[10];
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  return sub_100015764((uint64_t)v5, &qword_100363128);
}

uint64_t sub_10020EE80(uint64_t a1)
{
  return sub_10020EE9C( a1,  &qword_100363128,  type metadata accessor for Proto_Gnss_Velocity,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity);
}

uint64_t sub_10020EE9C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), void *a4)
{
  uint64_t v8 = v4;
  uint64_t v10 = sub_100003A0C(a2);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v11);
  uint64_t v15 = &v27[-v14 - 8];
  uint64_t v16 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v4 + v16)) & 1) == 0)
  {
    uint64_t v17 = *(void *)(v4 + v16);
    uint64_t v18 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
    uint64_t v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    uint64_t v20 = swift_retain(v17);
    sub_10021AF40(v20);
    swift_release(v17);
    uint64_t v21 = *(void *)(v8 + v16);
    *(void *)(v8 + v16) = v19;
    swift_release(v21);
  }

  uint64_t v22 = *(void *)(v8 + v16);
  sub_100003E68(a1, (uint64_t)v15, a3);
  uint64_t v23 = a3(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v15, 0LL, 1LL, v23);
  sub_10000E590((uint64_t)v15, (uint64_t)v13, a2);
  uint64_t v24 = v22 + *a4;
  swift_beginAccess(v24, v27, 33LL, 0LL);
  swift_retain(v22);
  sub_10000E5D4((uint64_t)v13, v24, a2);
  swift_endAccess(v27);
  return swift_release(v22);
}

void (*sub_10020F020(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363128);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100363128);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    uint64_t v14 = &v9[v6[8]];
    *(void *)uint64_t v14 = 0LL;
    v14[8] = 1;
    uint64_t v15 = &v9[v6[9]];
    *(void *)uint64_t v15 = 0LL;
    v15[8] = 1;
    uint64_t v16 = &v9[v6[10]];
    *(void *)uint64_t v16 = 0LL;
    void v16[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100363128);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Velocity);
  }

  return sub_10020F1B8;
}

void sub_10020F1B8(uint64_t a1, char a2)
{
}

void sub_10020F1D4(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(void), void *a5)
{
  size_t v8 = *(void **)a1;
  uint64_t v9 = *(void **)(*(void *)a1 + 40LL);
  uint64_t v10 = *(void **)(*(void *)a1 + 48LL);
  uint64_t v11 = *(void **)(*(void *)a1 + 32LL);
  if ((a2 & 1) != 0)
  {
    sub_10000404C((uint64_t)v10, (uint64_t)v9, a4);
    sub_10020EE9C((uint64_t)v9, a3, a4, a5);
    sub_100004090((uint64_t)v10, a4);
  }

  else
  {
    sub_10020EE9C((uint64_t)v10, a3, a4, a5);
  }

  free(v10);
  free(v9);
  free(v11);
  free(v8);
}

BOOL sub_10020F280()
{
  return sub_10001D054( &qword_100363128,  type metadata accessor for Proto_Gnss_Fix,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity,  type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_10020F2A4()
{
  return sub_10020EBE0( &qword_100363128,  type metadata accessor for Proto_Gnss_Velocity,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity);
}

uint64_t sub_10020F2C0()
{
  return sub_1002108D0( type metadata accessor for Proto_Gnss_Fix,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

uint64_t sub_10020F2D4(uint64_t a1)
{
  return sub_100210958( a1,  type metadata accessor for Proto_Gnss_Fix,  type metadata accessor for Proto_Gnss_Fix._StorageClass,  (void (*)(uint64_t))sub_10021AF40,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

void (*sub_10020F2F8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)v5;
  if (*(_BYTE *)(v5 + 8)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_10020F384;
}

void sub_10020F384(uint64_t *a1, char a2)
{
}

BOOL sub_10020F3A0()
{
  return sub_100024E88( type metadata accessor for Proto_Gnss_Fix,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

uint64_t sub_10020F3B4()
{
  return sub_10008BFF4( type metadata accessor for Proto_Gnss_Fix,  type metadata accessor for Proto_Gnss_Fix._StorageClass,  (void (*)(uint64_t))sub_10021AF40,  &OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
}

uint64_t sub_10020F3D8()
{
  if (*v1 == 5) {
    return 0LL;
  }
  else {
    return *v1;
  }
}

uint64_t sub_10020F434(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10021AF40(v8);
    swift_release(v5);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = (_BYTE *)(*(void *)(v2 + v4)
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  uint64_t result = swift_beginAccess(v10, v12, 1LL, 0LL);
  *uint64_t v10 = a1;
  return result;
}

void (*sub_10020F4E8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *v5;
  if (v6 == 5) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_10020F570;
}

void sub_10020F570(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10021AF40(v12);
    swift_release(v9);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10020F650()
{
  return *v1 != 5;
}

uint64_t sub_10020F6AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10021AF40(v6);
    swift_release(v3);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = (_BYTE *)(*(void *)(v1 + v2)
               + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  uint64_t result = swift_beginAccess(v8, v10, 1LL, 0LL);
  *uint64_t v8 = 5;
  return result;
}

uint64_t sub_10020F758@<X0>(uint64_t a1@<X8>)
{
  return sub_100024054( type metadata accessor for Proto_Gnss_Fix,  &qword_1003B0DC8,  &qword_1003B0DD0,  (uint64_t)sub_100215B94,  a1);
}

uint64_t sub_10020F77C()
{
  return sub_1000365F4(&qword_1003B0DC8, &qword_1003B0DD0, (uint64_t)sub_100215B94);
}

uint64_t sub_10020F798()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 20)) & 1;
}

uint64_t sub_10020F7BC(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_10020F7E8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10020F830()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 20)) != 2;
}

uint64_t sub_10020F858()
{
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_10020F87C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363118);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100363118);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  uint64_t v10 = a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[10];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1 + v7[11];
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  uint64_t v14 = a1 + v7[12];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  uint64_t v15 = a1 + v7[13];
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  return sub_100015764((uint64_t)v5, &qword_100363118);
}

uint64_t sub_10020F9E8(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 24);
  sub_100015764(v3, &qword_100363118);
  sub_100003E68(a1, v3, type metadata accessor for Proto_Gnss_Time);
  uint64_t v4 = type metadata accessor for Proto_Gnss_Time(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_10020FA58(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363118);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100363118);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    v9[v6[7]] = 2;
    uint64_t v13 = &v9[v6[8]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[9]];
    *(void *)uint64_t v14 = 0LL;
    v14[8] = 1;
    uint64_t v15 = &v9[v6[10]];
    *(void *)uint64_t v15 = 0LL;
    v15[8] = 1;
    uint64_t v16 = &v9[v6[11]];
    *(void *)uint64_t v16 = 0LL;
    void v16[8] = 1;
    uint64_t v17 = &v9[v6[12]];
    *(void *)uint64_t v17 = 0LL;
    v17[8] = 1;
    uint64_t v18 = &v9[v6[13]];
    *(void *)uint64_t v18 = 0LL;
    v18[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100363118);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Time);
  }

  return sub_10020FC04;
}

void sub_10020FC04(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48LL);
  uint64_t v4 = *(void **)(*(void *)a1 + 32LL);
  uint64_t v5 = *(void **)(*(void *)a1 + 40LL);
  uint64_t v6 = *(void *)(*(void *)a1 + 16LL);
  uint64_t v7 = *(void *)(*(void *)a1 + 24LL);
  size_t v8 = *(void **)(*(void *)a1 + 8LL);
  uint64_t v9 = **(void **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    sub_10000404C(*(void *)(*(void *)a1 + 40LL), (uint64_t)v4, type metadata accessor for Proto_Gnss_Time);
    sub_100015764(v9, &qword_100363118);
    sub_100003E68((uint64_t)v4, v9, type metadata accessor for Proto_Gnss_Time);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0LL, 1LL, v6);
    sub_100004090((uint64_t)v5, type metadata accessor for Proto_Gnss_Time);
  }

  else
  {
    sub_100015764(**(void **)a1 + v3, &qword_100363118);
    sub_100003E68((uint64_t)v5, v9, type metadata accessor for Proto_Gnss_Time);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0LL, 1LL, v6);
  }

  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL sub_10020FD08()
{
  uint64_t v1 = sub_100003A0C(&qword_100363118);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_100363118);
  uint64_t v5 = type metadata accessor for Proto_Gnss_Time(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100363118);
  return v6;
}

uint64_t sub_10020FDBC()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 24);
  sub_100015764(v1, &qword_100363118);
  uint64_t v2 = type metadata accessor for Proto_Gnss_Time(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_10020FE14()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 28));
  if (v1 == 7) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10020FE3C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_10020FE68(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 28);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10020FEB4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 28)) != 7;
}

uint64_t sub_10020FEDC()
{
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 7;
  return result;
}

uint64_t sub_10020FF00()
{
  return sub_1000A9EA0(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10020FF0C(int a1)
{
  return sub_1000A9EE0(a1, type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t (*sub_10020FF18(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 32);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_10020FF68()
{
  return sub_100027938(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10020FF74()
{
  return sub_100027974(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10020FF80()
{
  return sub_10020FF8C(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10020FF8C(uint64_t (*a1)(void))
{
  uint64_t v2 = (_BYTE *)(v1 + *(int *)(a1(0LL) + 36));
  if (v2[8]) {
    return 0LL;
  }
  else {
    return *(void *)v2;
  }
}

uint64_t sub_10020FFC0(uint64_t a1)
{
  return sub_10020FFCC(a1, type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10020FFCC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0LL);
  uint64_t v5 = v2 + *(int *)(result + 36);
  *(void *)uint64_t v5 = a1;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t (*sub_100210000(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100210054()
{
  return sub_10002A2A4(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_100210060()
{
  return sub_10002A2E0(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10021006C()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 40));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_10021009C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v4 = v1 + *(int *)(result + 40);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_1002100D0(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100210124()
{
  return sub_1000B4378(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_100210130()
{
  return sub_1000B43B4(type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_10021013C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  *(_BYTE *)(a1 + v2[5]) = 2;
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))( v3,  1LL,  1LL,  v4);
  *(_BYTE *)(a1 + v2[7]) = 7;
  uint64_t v6 = a1 + v2[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  uint64_t v7 = a1 + v2[9];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1 + v2[10];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t sub_1002101E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Proto_Gnss_Time(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

uint64_t sub_100210224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363130);
  __chkstk_darwin(v3);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v15, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100363130);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  uint64_t v8 = a1 + v7[6];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Time(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  *(_BYTE *)(a1 + v7[7]) = 7;
  uint64_t v10 = a1 + v7[8];
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[10];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  return sub_100015764((uint64_t)v5, &qword_100363130);
}

uint64_t sub_1002103A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363130);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10021B2E0(v14);
    swift_release(v11);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferData);
  uint64_t v17 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100363130);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100363130);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10021052C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363130);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100363130);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    uint64_t v11 = &v9[v6[6]];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Time(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
    v9[v6[7]] = 7;
    uint64_t v13 = &v9[v6[8]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[9]];
    *(void *)uint64_t v14 = 0LL;
    v14[8] = 1;
    uint64_t v15 = &v9[v6[10]];
    *(void *)uint64_t v15 = 0LL;
    v15[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100363130);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferData);
  }

  return sub_1002106D8;
}

void sub_1002106D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40LL);
  uint64_t v4 = *(void **)(*(void *)a1 + 48LL);
  uint64_t v5 = *(void **)(*(void *)a1 + 32LL);
  if ((a2 & 1) != 0)
  {
    sub_10000404C( *(void *)(*(void *)a1 + 48LL),  (uint64_t)v3,  type metadata accessor for Proto_Gnss_TimeTransferData);
    sub_1002103A8((uint64_t)v3);
    sub_100004090((uint64_t)v4, type metadata accessor for Proto_Gnss_TimeTransferData);
  }

  else
  {
    sub_1002103A8(*(void *)(*(void *)a1 + 48LL));
  }

  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL sub_100210764()
{
  return sub_10001D054( &qword_100363130,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_100210788()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100363130);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10021B2E0(v9);
    swift_release(v6);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100363130);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002108BC()
{
  return sub_1002108D0( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t sub_1002108D0(uint64_t (*a1)(void), void *a2)
{
  uint64_t v3 = (_BYTE *)(*(void *)(v2 + *(int *)(a1(0LL) + 20)) + *a2);
  swift_beginAccess(v3, v5, 0LL, 0LL);
  if (v3[8]) {
    return 0LL;
  }
  else {
    return *(void *)v3;
  }
}

uint64_t sub_100210934(uint64_t a1)
{
  return sub_100210958( a1,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t sub_100210958( uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(uint64_t), void *a5)
{
  uint64_t v9 = v5;
  uint64_t v11 = *(int *)(a2(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v5 + v11)) & 1) == 0)
  {
    uint64_t v12 = *(void *)(v5 + v11);
    uint64_t v13 = a3(0LL);
    uint64_t v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
    uint64_t v15 = swift_retain(v12);
    a4(v15);
    swift_release(v12);
    uint64_t v16 = *(void *)(v9 + v11);
    *(void *)(v9 + v11) = v14;
    swift_release(v16);
  }

  uint64_t v17 = *(void *)(v9 + v11) + *a5;
  uint64_t result = swift_beginAccess(v17, v19, 1LL, 0LL);
  *(void *)uint64_t v17 = a1;
  *(_BYTE *)(v17 + 8) = 0;
  return result;
}

void (*sub_100210A20(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)v5;
  if (*(_BYTE *)(v5 + 8)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100210AAC;
}

void sub_100210AAC(uint64_t *a1, char a2)
{
}

BOOL sub_100210AC8()
{
  return sub_100024E88( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t sub_100210ADC()
{
  return sub_10008BFF4( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
}

uint64_t sub_100210B00()
{
  return sub_1002108D0( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

uint64_t sub_100210B14(uint64_t a1)
{
  return sub_100210958( a1,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

void (*sub_100210B38(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)v5;
  if (*(_BYTE *)(v5 + 8)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100210BC4;
}

void sub_100210BC4(uint64_t *a1, char a2)
{
}

BOOL sub_100210BE0()
{
  return sub_100024E88( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

uint64_t sub_100210BF4()
{
  return sub_10008BFF4( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
}

uint64_t sub_100210C18()
{
  return sub_1002108D0( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

uint64_t sub_100210C2C(uint64_t a1)
{
  return sub_100210958( a1,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

void (*sub_100210C50(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)v5;
  if (*(_BYTE *)(v5 + 8)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100210CDC;
}

void sub_100210CDC(uint64_t *a1, char a2)
{
}

BOOL sub_100210CF8()
{
  return sub_100024E88( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

uint64_t sub_100210D0C()
{
  return sub_10008BFF4( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  &OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
}

uint64_t sub_100210D30()
{
  return sub_1002108D0( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

uint64_t sub_100210D44(uint64_t a1)
{
  return sub_100210958( a1,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

void (*sub_100210D68(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs[0];
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)v5;
  if (*(_BYTE *)(v5 + 8)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100210DF4;
}

void sub_100210DF4(uint64_t *a1, char a2)
{
}

BOOL sub_100210E10()
{
  return sub_100024E88( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

uint64_t sub_100210E24()
{
  return sub_10008BFF4( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass,  (void (*)(uint64_t))sub_10021B2E0,  OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
}

uint64_t sub_100210E48@<X0>(uint64_t a1@<X8>)
{
  return sub_100024054( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &qword_1003B0DE8,  &qword_1003B0DF0,  (uint64_t)sub_100217D74,  a1);
}

uint64_t sub_100210E6C()
{
  return sub_1000365F4(&qword_1003B0DE8, &qword_1003B0DF0, (uint64_t)sub_100217D74);
}

uint64_t sub_100210E88()
{
  return sub_100027F98(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t sub_100210E94(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t (*sub_100210EA0(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_RawPressureSample(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100210EF4()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t sub_100210F00()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_RawPressureSample);
}

float sub_100210F0C()
{
  return sub_1000276E8(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t sub_100210F18(float a1)
{
  return sub_10002772C(type metadata accessor for Proto_Gnss_RawPressureSample, a1);
}

uint64_t (*sub_100210F24(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_RawPressureSample(0LL) + 24);
  float v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    float v4 = 0.0;
  }
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100210F7C()
{
  return sub_1000277C8(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t sub_100210F88()
{
  return sub_100027804(type metadata accessor for Proto_Gnss_RawPressureSample);
}

uint64_t sub_100210F94@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Proto_Gnss_RawPressureSample(0LL);
  uint64_t v3 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  return result;
}

uint64_t sub_100210FE0()
{
  return sub_100027F98(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t sub_100210FEC(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t (*sub_100210FF8(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10021104C()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t sub_100211058()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

float sub_100211064()
{
  return sub_1000276E8(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t sub_100211070(float a1)
{
  return sub_10002772C(type metadata accessor for Proto_Gnss_SensorSample3Axis, a1);
}

uint64_t (*sub_10021107C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 24);
  float v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    float v4 = 0.0;
  }
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002110D4()
{
  return sub_1000277C8(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t sub_1002110E0()
{
  return sub_100027804(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

float sub_1002110EC()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 28);
  float result = *(float *)v1;
  if (*(_BYTE *)(v1 + 4)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100211120(float a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL);
  uint64_t v4 = v1 + *(int *)(result + 28);
  *(float *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100211154(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 28);
  float v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    float v4 = 0.0;
  }
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002111AC()
{
  return sub_100020BD0(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t sub_1002111B8()
{
  return sub_100020C0C(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

float sub_1002111C4()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 32);
  float result = *(float *)v1;
  if (*(_BYTE *)(v1 + 4)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_1002111F8(float a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL);
  uint64_t v4 = v1 + *(int *)(result + 32);
  *(float *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_10021122C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 32);
  float v4 = *(float *)(v1 + v3);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    float v4 = 0.0;
  }
  *(float *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100211284()
{
  return sub_100027938(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

uint64_t sub_100211290()
{
  return sub_100027974(type metadata accessor for Proto_Gnss_SensorSample3Axis);
}

int *sub_10021129C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  return result;
}

uint64_t sub_100211308()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 20));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100211338(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v4 = v1 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_10021136C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 20);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002113BC()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 20) + 4) & 1) == 0;
}

uint64_t sub_1002113E8()
{
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v2 = v0 + *(int *)(result + 20);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_100211414()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 24));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100211444(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v4 = v1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100211478(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002114C8()
{
  return sub_1000277C8(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_1002114D4()
{
  return sub_100027804(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_1002114E0()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 28));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100211510(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v4 = v1 + *(int *)(result + 28);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100211544(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 28);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100211594()
{
  return sub_100020BD0(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_1002115A0()
{
  return sub_100020C0C(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_1002115AC()
{
  return sub_1000A9EA0(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_1002115B8(int a1)
{
  return sub_1000A9EE0(a1, type metadata accessor for Proto_Gnss_SvId);
}

uint64_t (*sub_1002115C4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 32);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100211614()
{
  return sub_100027938(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_100211620()
{
  return sub_100027974(type metadata accessor for Proto_Gnss_SvId);
}

uint64_t sub_10021162C()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 36));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_10021165C(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v4 = v1 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100211690(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 36);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002116E0()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 36) + 4) & 1) == 0;
}

uint64_t sub_10021170C()
{
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v2 = v0 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

int *sub_100211738@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  return result;
}

double sub_1002117B4()
{
  return sub_10001FC20(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_1002117C0(double a1)
{
  return sub_10001FC64(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*sub_1002117CC(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100211824()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_100211830()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

double sub_10021183C()
{
  return sub_10001FD78(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_100211848(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*sub_100211854(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002118AC()
{
  return sub_10000510C(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_1002118B8()
{
  return sub_100005148(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

double sub_1002118C4()
{
  return sub_100027BE4(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_1002118D0(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*sub_1002118DC(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100211934()
{
  return sub_100027CC4(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_100211940()
{
  return sub_100027D00(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

double sub_10021194C()
{
  return sub_100027D3C(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_100211958(double a1)
{
  return sub_100027D80(type metadata accessor for Proto_Gnss_PwrMeasurement, a1);
}

uint64_t (*sub_100211964(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002119BC()
{
  return sub_100027E1C(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_1002119C8()
{
  return sub_100027E58(type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_1002119D4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 36)) & 1;
}

uint64_t sub_1002119F8(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*sub_100211A24(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100211A6C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 36)) != 2;
}

uint64_t sub_100211A94()
{
  uint64_t result = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_100211AB8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100221E4C();
  return Enum.hash(into:)(a1, a2, v4);
}

int *sub_100211AF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = a1 + result[8];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a1 + result[9]) = 2;
  return result;
}

_UNKNOWN **sub_100211B68()
{
  return &off_1003450D8;
}

void sub_100211B74(void *a1@<X8>)
{
  *a1 = &off_100345100;
}

uint64_t sub_100211B84()
{
  return sub_100027F98(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t sub_100211B90(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t (*sub_100211B9C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100211BF0()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t sub_100211BFC()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t sub_100211C08()
{
  return sub_10001A798(type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t sub_100211C14(char a1)
{
  return sub_10001A7CC(a1, type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t (*sub_100211C20(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0LL) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100211C68()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedRti(0LL) + 24)) != 2;
}

uint64_t sub_100211C90()
{
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100211CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  uint64_t v3 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100211CFC()
{
  return sub_100027F98(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100211D08(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t (*sub_100211D14(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100211D68()
{
  return sub_10001FD00(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100211D74()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100211D80()
{
  return sub_10001A798(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100211D8C(char a1)
{
  return sub_10001A7CC(a1, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t (*sub_100211D98(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100211DE0()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 24)) != 2;
}

uint64_t sub_100211E08()
{
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100211E2C()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 28));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_100211E5C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v4 = v1 + *(int *)(result + 28);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_100211E90(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100211EE4()
{
  return sub_100027CC4(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100211EF0()
{
  return sub_100027D00(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100211EFC()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 32));
  if (v1 == 7) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100211F24(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_100211F50(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 32);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100211F9C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 32)) != 7;
}

uint64_t sub_100211FC4()
{
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 7;
  return result;
}

int *sub_100211FE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + result[6]) = 2;
  uint64_t v4 = a1 + result[7];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(a1 + result[8]) = 7;
  return result;
}

uint64_t sub_10021204C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B348);
  sub_10000E704(v0, (uint64_t)qword_10036B348);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v29 = swift_allocObject(v1, v6 + 10 * v4, v5 | 7);
  *(_OWORD *)(v29 + 16) = xmmword_1002B3300;
  uint64_t v7 = v29 + v6;
  uint64_t v8 = v29 + v6 + *(int *)(v2 + 48);
  *(void *)(v29 + v6) = 0LL;
  *(void *)uint64_t v8 = "RESULT_PROTOBUF_DEFAULT";
  *(void *)(v8 + 8) = 23LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v7 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 1LL;
  *(void *)uint64_t v12 = "kSuccess";
  *(void *)(v12 + 8) = 8LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 2LL;
  *(void *)uint64_t v14 = "kAborted";
  *((void *)v14 + 1) = 8LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v7 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 3LL;
  *(void *)uint64_t v16 = "kDropped";
  *((void *)v16 + 1) = 8LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v7 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 4LL;
  *(void *)uint64_t v18 = "kInUse";
  *((void *)v18 + 1) = 6LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v7 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 5LL;
  *(void *)uint64_t v20 = "kInvalidArgument";
  *((void *)v20 + 1) = 16LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v7 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 6LL;
  *(void *)uint64_t v22 = "kPermissionDenied";
  *((void *)v22 + 1) = 17LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v7 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 7LL;
  *(void *)uint64_t v24 = "kTimeout";
  *((void *)v24 + 1) = 8LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 8LL;
  *(void *)uint64_t v25 = "kUnavailable";
  *(void *)(v25 + 8) = 12LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v7 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 9LL;
  *(void *)uint64_t v27 = "kCompletedWithFailure";
  *((void *)v27 + 1) = 21LL;
  v27[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v29);
}

uint64_t sub_100212348()
{
  return sub_100008C30(&qword_1003B0D50, (uint64_t)qword_10036B348, (uint64_t)sub_10021204C);
}

uint64_t sub_100212364@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D50, (uint64_t)qword_10036B348, (uint64_t)sub_10021204C, a1);
}

uint64_t sub_100212380@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D50, (uint64_t)qword_10036B348, (uint64_t)sub_10021204C, a1);
}

uint64_t sub_10021239C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B360);
  sub_10000E704(v0, (uint64_t)qword_10036B360);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32E0;
  uint64_t v8 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v8 = "GnssContent_PROTOBUF_DEFAULT";
  *(void *)(v8 + 8) = 28LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v6 + v4) = 1LL;
  *(void *)uint64_t v12 = "GnssContent_kNone";
  *(void *)(v12 + 8) = 17LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + v6 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 2LL;
  *(void *)uint64_t v14 = "GnssContent_kSomeInsignificant";
  *((void *)v14 + 1) = 30LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v7 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 3LL;
  *(void *)uint64_t v16 = "GnssContent_kSomeSignificant";
  *((void *)v16 + 1) = 28LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v7 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 4LL;
  *(void *)uint64_t v18 = "GnssContent_kSufficientFor2DFix";
  *((void *)v18 + 1) = 31LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v7 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 5LL;
  *(void *)uint64_t v20 = "GnssContent_kSufficientFor3DFix";
  *((void *)v20 + 1) = 31LL;
  v20[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1002125CC()
{
  return sub_100008C30(&qword_1003B0D58, (uint64_t)qword_10036B360, (uint64_t)sub_10021239C);
}

uint64_t sub_1002125E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D58, (uint64_t)qword_10036B360, (uint64_t)sub_10021239C, a1);
}

uint64_t sub_100212604@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D58, (uint64_t)qword_10036B360, (uint64_t)sub_10021239C, a1);
}

uint64_t sub_100212620()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B378);
  sub_10000E704(v0, (uint64_t)qword_10036B378);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "EstimationTechnology_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 37LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "EstimationTechnology_kNotInitialized";
  *(void *)(v13 + 8) = 36LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "EstimationTechnology_kSingleShot";
  *((void *)v15 + 1) = 32LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "EstimationTechnology_kFiltered";
  *((void *)v17 + 1) = 30LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 4LL;
  *(void *)uint64_t v18 = "EstimationTechnology_kFilteredIns";
  *(void *)(v18 + 8) = 33LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100212820()
{
  return sub_100008C30(&qword_1003B0D60, (uint64_t)qword_10036B378, (uint64_t)sub_100212620);
}

uint64_t sub_10021283C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D60, (uint64_t)qword_10036B378, (uint64_t)sub_100212620, a1);
}

uint64_t sub_100212858@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D60, (uint64_t)qword_10036B378, (uint64_t)sub_100212620, a1);
}

uint64_t sub_100212874()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B390);
  sub_10000E704(v0, (uint64_t)qword_10036B390);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3330;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "TimeQuality_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 28LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "TimeQuality_kUnknown";
  *(void *)(v13 + 8) = 20LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "TimeQuality_kTimeFromSyncCellNetwork";
  *((void *)v15 + 1) = 36LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "TimeQuality_kTimeFromAssistance";
  *((void *)v17 + 1) = 31LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 4LL;
  *(void *)uint64_t v19 = "TimeQuality_kTimeFromPosition";
  *((void *)v19 + 1) = 29LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 5LL;
  *(void *)uint64_t v21 = "TimeQuality_kTimeFromTOW";
  *((void *)v21 + 1) = 24LL;
  v21[16] = 2;
  v12();
  uint64_t v22 = (void *)(v8 + 6 * v4);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 48);
  *uint64_t v22 = 6LL;
  *(void *)uint64_t v23 = "TimeQuality_kTimeFromTOWConfirmed";
  *((void *)v23 + 1) = 33LL;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100212AD8()
{
  return sub_100008C30(&qword_1003B0D68, (uint64_t)qword_10036B390, (uint64_t)sub_100212874);
}

uint64_t sub_100212AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D68, (uint64_t)qword_10036B390, (uint64_t)sub_100212874, a1);
}

uint64_t sub_100212B10@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D68, (uint64_t)qword_10036B390, (uint64_t)sub_100212874, a1);
}

uint64_t sub_100212B2C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B3A8);
  sub_10000E704(v0, (uint64_t)qword_10036B3A8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "PositionAssistType_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 35LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "PositionAssistType_kNormalReference";
  *(void *)(v13 + 8) = 35LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "PositionAssistType_kNormalSuitableForTightCoupling";
  *((void *)v15 + 1) = 50LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "PositionAssistType_kTunnelExit";
  *((void *)v17 + 1) = 30LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100212CEC()
{
  return sub_100008C30(&qword_1003B0D70, (uint64_t)qword_10036B3A8, (uint64_t)sub_100212B2C);
}

uint64_t sub_100212D08@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D70, (uint64_t)qword_10036B3A8, (uint64_t)sub_100212B2C, a1);
}

uint64_t sub_100212D24@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D70, (uint64_t)qword_10036B3A8, (uint64_t)sub_100212B2C, a1);
}

uint64_t sub_100212D40()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B3C0);
  sub_10000E704(v0, (uint64_t)qword_10036B3C0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 10 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3300;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "MAC_kUnknown";
  *(void *)(v9 + 8) = 12LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "MAC_kRunning";
  *(void *)(v13 + 8) = 12LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v7 + v6 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "MAC_kMoving";
  *((void *)v15 + 1) = 11LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v7 + v6 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "MAC_kWalking";
  *((void *)v17 + 1) = 12LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v7 + v6 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 4LL;
  *(void *)uint64_t v19 = "MAC_kDriving";
  *((void *)v19 + 1) = 12LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v7 + v6 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 5LL;
  *(void *)uint64_t v21 = "MAC_kCycling";
  *((void *)v21 + 1) = 12LL;
  v21[16] = 2;
  v12();
  uint64_t v22 = (void *)(v7 + v6 + 6 * v4);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 48);
  *uint64_t v22 = 6LL;
  *(void *)uint64_t v23 = "MAC_kSwimming";
  *((void *)v23 + 1) = 13LL;
  v23[16] = 2;
  v12();
  uint64_t v24 = (void *)(v7 + v6 + 7 * v4);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 48);
  void *v24 = 7LL;
  *(void *)uint64_t v25 = "MAC_kWheelchair";
  *((void *)v25 + 1) = 15LL;
  v25[16] = 2;
  v12();
  uint64_t v26 = v7 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 8 * v4) = 8LL;
  *(void *)uint64_t v26 = "MAC_PROTOBUF_DEFAULT";
  *(void *)(v26 + 8) = 20LL;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  uint64_t v27 = (void *)(v7 + v6 + 9 * v4);
  uint64_t v28 = (char *)v27 + *(int *)(v2 + 48);
  void *v27 = 9LL;
  *(void *)uint64_t v28 = "MAC_kAirborne";
  *((void *)v28 + 1) = 13LL;
  v28[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100213040()
{
  return sub_100008C30(&qword_1003B0D78, (uint64_t)qword_10036B3C0, (uint64_t)sub_100212D40);
}

uint64_t sub_10021305C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D78, (uint64_t)qword_10036B3C0, (uint64_t)sub_100212D40, a1);
}

uint64_t sub_100213078@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D78, (uint64_t)qword_10036B3C0, (uint64_t)sub_100212D40, a1);
}

uint64_t sub_100213094()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B3D8);
  sub_10000E704(v0, (uint64_t)qword_10036B3D8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "MS_kUnknown";
  *(void *)(v9 + 8) = 11LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "MS_kFrozen";
  *(void *)(v13 + 8) = 10LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "MS_kNotMoving";
  *((void *)v15 + 1) = 13LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "MS_kMoving";
  *((void *)v17 + 1) = 10LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 4LL;
  *(void *)uint64_t v18 = "MS_PROTOBUF_DEFAULT";
  *(void *)(v18 + 8) = 19LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100213294()
{
  return sub_100008C30(&qword_1003B0D80, (uint64_t)qword_10036B3D8, (uint64_t)sub_100213094);
}

uint64_t sub_1002132B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D80, (uint64_t)qword_10036B3D8, (uint64_t)sub_100213094, a1);
}

uint64_t sub_1002132CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D80, (uint64_t)qword_10036B3D8, (uint64_t)sub_100213094, a1);
}

uint64_t sub_1002132E8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B3F0);
  sub_10000E704(v0, (uint64_t)qword_10036B3F0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32E0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "REL_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 20LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "REL_kNotSet";
  *(void *)(v13 + 8) = 11LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 10LL;
  *(void *)uint64_t v15 = "REL_kVeryLow";
  *((void *)v15 + 1) = 12LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 25LL;
  *(void *)uint64_t v17 = "REL_kLow";
  *((void *)v17 + 1) = 8LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 50LL;
  *(void *)uint64_t v19 = "REL_kMedium";
  *((void *)v19 + 1) = 11LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 75LL;
  *(void *)uint64_t v21 = "REL_kHigh";
  *((void *)v21 + 1) = 9LL;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100213520()
{
  return sub_100008C30(&qword_1003B0D88, (uint64_t)qword_10036B3F0, (uint64_t)sub_1002132E8);
}

uint64_t sub_10021353C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D88, (uint64_t)qword_10036B3F0, (uint64_t)sub_1002132E8, a1);
}

uint64_t sub_100213558@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D88, (uint64_t)qword_10036B3F0, (uint64_t)sub_1002132E8, a1);
}

uint64_t sub_100213574()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B408);
  sub_10000E704(v0, (uint64_t)qword_10036B408);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "DMS_kUnknown";
  *(void *)(v9 + 8) = 12LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "DMS_kMounted";
  *(void *)(v13 + 8) = 12LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "DMS_kNotMounted";
  *((void *)v15 + 1) = 15LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "DMS_PROTOBUF_DEFAULT";
  *((void *)v17 + 1) = 20LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100213738()
{
  return sub_100008C30(&qword_1003B0D90, (uint64_t)qword_10036B408, (uint64_t)sub_100213574);
}

uint64_t sub_100213754@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D90, (uint64_t)qword_10036B408, (uint64_t)sub_100213574, a1);
}

uint64_t sub_100213770@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D90, (uint64_t)qword_10036B408, (uint64_t)sub_100213574, a1);
}

uint64_t sub_10021378C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B420);
  sub_10000E704(v0, (uint64_t)qword_10036B420);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42A0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "kSignalEnvUnavailable";
  *(void *)(v9 + 8) = 21LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "kSignalEnvRural";
  *(void *)(v13 + 8) = 15LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "kSignalEnvUrban";
  *((void *)v15 + 1) = 15LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "kSignalEnvDenseUrban";
  *((void *)v17 + 1) = 20LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 4LL;
  *(void *)uint64_t v19 = "kSignalEnvDenseUrbanCanyon";
  *((void *)v19 + 1) = 26LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 5LL;
  *(void *)uint64_t v21 = "kSignalEnvMarine";
  *((void *)v21 + 1) = 16LL;
  v21[16] = 2;
  v12();
  uint64_t v22 = (void *)(v8 + 6 * v4);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 48);
  *uint64_t v22 = 6LL;
  *(void *)uint64_t v23 = "kSignalEnvFoliage";
  *((void *)v23 + 1) = 17LL;
  v23[16] = 2;
  v12();
  uint64_t v24 = (void *)(v8 + 7 * v4);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 48);
  void *v24 = 15LL;
  *(void *)uint64_t v25 = "SIGNAL_ENV_PROTOBUF_DEFAULT";
  *((void *)v25 + 1) = 27LL;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100213A38()
{
  return sub_100008C30(&qword_1003B0D98, (uint64_t)qword_10036B420, (uint64_t)sub_10021378C);
}

uint64_t sub_100213A54@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0D98, (uint64_t)qword_10036B420, (uint64_t)sub_10021378C, a1);
}

uint64_t sub_100213A70@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0D98, (uint64_t)qword_10036B420, (uint64_t)sub_10021378C, a1);
}

uint64_t sub_100213A8C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B438);
  sub_10000E704(v0, (uint64_t)qword_10036B438);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 0LL;
  *(void *)uint64_t v9 = "DeleteGnssDataBitMask_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 38LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "DeleteGnssDataBitMask_UeReset";
  *((void *)v13 + 1) = 29LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100213BDC()
{
  return sub_100008C30(&qword_1003B0DA0, (uint64_t)qword_10036B438, (uint64_t)sub_100213A8C);
}

uint64_t sub_100213BF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DA0, (uint64_t)qword_10036B438, (uint64_t)sub_100213A8C, a1);
}

uint64_t sub_100213C14@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DA0, (uint64_t)qword_10036B438, (uint64_t)sub_100213A8C, a1);
}

void *sub_100213C30()
{
  return &unk_100344DB8;
}

unint64_t sub_100213C3C()
{
  return 0xD000000000000013LL;
}

uint64_t sub_100213C58()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B450);
  sub_10000E704(v0, (uint64_t)qword_10036B450);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v33 = swift_allocObject(v1, v6 + 12 * v4, v5 | 7);
  *(_OWORD *)(v33 + 16) = xmmword_1002C9690;
  uint64_t v7 = v33 + v6;
  uint64_t v8 = v33 + v6 + *(int *)(v2 + 48);
  *(void *)(v33 + v6) = 1LL;
  *(void *)uint64_t v8 = "latitude";
  *(void *)(v8 + 8) = 8LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v33 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 2LL;
  *(void *)uint64_t v12 = "longitude";
  *(void *)(v12 + 8) = 9LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v33 + v6 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)uint64_t v14 = "alt_wgs84";
  *((void *)v14 + 1) = 9LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v33 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 4LL;
  *(void *)uint64_t v16 = "undulation";
  *((void *)v16 + 1) = 10LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v33 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "vertical_uncertainty";
  *((void *)v18 + 1) = 20LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v33 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)uint64_t v20 = "semi_major_horizontal_uncertainty";
  *((void *)v20 + 1) = 33LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v33 + v6 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 7LL;
  *(void *)uint64_t v22 = "semi_minor_horizontal_uncertainty";
  *((void *)v22 + 1) = 33LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v33 + v6 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 8LL;
  *(void *)uint64_t v24 = "semi_major_azimuth_horizontal_uncertainty";
  *((void *)v24 + 1) = 41LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v33 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 9LL;
  *(void *)uint64_t v25 = "source";
  *(void *)(v25 + 8) = 6LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v33 + v6 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 10LL;
  *(void *)uint64_t v27 = "reliability";
  *((void *)v27 + 1) = 11LL;
  v27[16] = 2;
  v11();
  uint64_t v28 = (void *)(v33 + v6 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 11LL;
  *(void *)uint64_t v29 = "assistance_used";
  *((void *)v29 + 1) = 15LL;
  v29[16] = 2;
  v11();
  int v30 = (void *)(v33 + v6 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 12LL;
  *(void *)uint64_t v31 = "gnss_content_in_fix";
  *((void *)v31 + 1) = 19LL;
  v31[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v33);
}

uint64_t sub_100213FD4()
{
  return sub_100008C30(&qword_1003B0DA8, (uint64_t)qword_10036B450, (uint64_t)sub_100213C58);
}

uint64_t sub_100213FF0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DA8, (uint64_t)qword_10036B450, (uint64_t)sub_100213C58, a1);
}

uint64_t sub_10021400C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 20);
          goto LABEL_13;
        case 2LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 24);
          goto LABEL_13;
        case 3LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 28);
          goto LABEL_13;
        case 4LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 32);
          goto LABEL_13;
        case 5LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 36);
          goto LABEL_13;
        case 6LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 40);
          goto LABEL_13;
        case 7LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 44);
          goto LABEL_13;
        case 8LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 48);
LABEL_13:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v10, a2, a3);
          goto LABEL_19;
        case 9LL:
          uint64_t v12 = type metadata accessor for Proto_Gnss_Position(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v12 + 52), a2, a3);
          goto LABEL_19;
        case 10LL:
          uint64_t v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 56);
          unint64_t v14 = sub_100221F5C();
          uint64_t v15 = v13;
          uint64_t v16 = &type metadata for Proto_Gnss_Reliability;
          goto LABEL_18;
        case 11LL:
          uint64_t v17 = type metadata accessor for Proto_Gnss_Position(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v17 + 60), a2, a3);
          goto LABEL_19;
        case 12LL:
          uint64_t v18 = v3 + *(int *)(type metadata accessor for Proto_Gnss_Position(0LL) + 64);
          unint64_t v14 = sub_1002220F4();
          uint64_t v15 = v18;
          uint64_t v16 = &type metadata for Proto_Gnss_GnssContent;
LABEL_18:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v15, v16, v14, a2, a3);
LABEL_19:
          uint64_t v9 = v11;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_1002141F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1LL, a2, a3, *(double *)v11);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2LL, a2, a3, *(double *)v12);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3LL, a2, a3, *(double *)v13);
    }
    uint64_t v14 = v5 + v10[8];
    if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(4LL, a2, a3, *(double *)v14);
    }
    sub_1000FAE74(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Position);
    sub_1000FAEE8(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Position);
    sub_1000FAF5C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Position);
    sub_10021443C(v5, a1, a2, a3);
    sub_1002144B0(v5, a1, a2, a3);
    sub_100214524(v5, a1, a2, a3);
    sub_1002145AC(v5, a1, a2, a3);
    sub_100214620(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_10021443C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v8 = a1 + *(int *)(result + 48);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(8LL, a3, a4, *(double *)v8);
  }
  return result;
}

uint64_t sub_1002144B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v8 = (unsigned int *)(a1 + *(int *)(result + 52));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 9LL, a3, a4);
  }
  return result;
}

uint64_t sub_100214524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  if (*(_BYTE *)(a1 + *(int *)(result + 56)) != 6)
  {
    char v9 = *(_BYTE *)(a1 + *(int *)(result + 56));
    unint64_t v8 = sub_100221F5C();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v9,  10LL,  &type metadata for Proto_Gnss_Reliability,  v8,  a3,  a4);
  }

  return result;
}

uint64_t sub_1002145AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v8 = a1 + *(int *)(result + 60);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v8, 11LL, a3, a4);
  }
  return result;
}

uint64_t sub_100214620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Position(0LL);
  if (*(_BYTE *)(a1 + *(int *)(result + 64)) != 6)
  {
    char v9 = *(_BYTE *)(a1 + *(int *)(result + 64));
    unint64_t v8 = sub_1002220F4();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v9,  12LL,  &type metadata for Proto_Gnss_GnssContent,  v8,  a3,  a4);
  }

  return result;
}

Swift::Int sub_1002146AC()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_Position, &qword_100363138, (uint64_t)&unk_1002D8108);
}

uint64_t sub_1002146C8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1[8];
  uint64_t v9 = a2 + a1[7];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = a1[10];
  uint64_t v12 = a2 + a1[9];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  uint64_t v14 = a1[12];
  uint64_t v15 = a2 + a1[11];
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v16 = 0LL;
  *(_BYTE *)(v16 + 8) = 1;
  uint64_t v17 = a1[14];
  uint64_t v18 = a2 + a1[13];
  *(_DWORD *)uint64_t v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  *(_BYTE *)(a2 + v17) = 6;
  uint64_t v19 = a1[16];
  uint64_t v20 = a2 + a1[15];
  *(void *)uint64_t v20 = 0LL;
  *(_BYTE *)(v20 + 8) = 1;
  *(_BYTE *)(a2 + v19) = 6;
  return result;
}

uint64_t sub_10021478C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021400C(a1, a2, a3);
}

uint64_t sub_1002147A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002141F8(a1, a2, a3);
}

uint64_t sub_1002147B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E58, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8080);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100214804@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DA8, (uint64_t)qword_10036B450, (uint64_t)sub_100213C58, a1);
}

uint64_t sub_100214820(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363378, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8008);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100214860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363378, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8008);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002148B4()
{
  return &unk_100344DC8;
}

unint64_t sub_1002148C0()
{
  return 0xD000000000000013LL;
}

uint64_t sub_1002148DC()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B468);
  sub_10000E704(v0, (uint64_t)qword_10036B468);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32E0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "horiz_speed";
  *(void *)(v9 + 8) = 11LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "horiz_speed_unc";
  *(void *)(v13 + 8) = 15LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "vert_velocity";
  *((void *)v15 + 1) = 13LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "vert_velocity_unc";
  *((void *)v17 + 1) = 17LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 5LL;
  *(void *)uint64_t v19 = "course";
  *((void *)v19 + 1) = 6LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 6LL;
  *(void *)uint64_t v21 = "course_unc";
  *((void *)v21 + 1) = 10LL;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100214B18()
{
  return sub_100008C30(&qword_1003B0DB0, (uint64_t)qword_10036B468, (uint64_t)sub_1002148DC);
}

uint64_t sub_100214B34@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DB0, (uint64_t)qword_10036B468, (uint64_t)sub_1002148DC, a1);
}

uint64_t sub_100214B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 24);
          goto LABEL_5;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 32);
          goto LABEL_5;
        case 5LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 36);
          goto LABEL_5;
        case 6LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Velocity(0LL) + 40);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100214C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1LL, a2, a3, *(double *)v11);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2LL, a2, a3, *(double *)v12);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3LL, a2, a3, *(double *)v13);
    }
    uint64_t v14 = v5 + v10[8];
    if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(4LL, a2, a3, *(double *)v14);
    }
    sub_1000FAE74(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Velocity);
    sub_1000FAEE8(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Velocity);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100214DDC()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_Velocity, &qword_100363140, (uint64_t)&unk_1002D8270);
}

uint64_t sub_100214DF8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1[8];
  uint64_t v9 = a2 + a1[7];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = a1[10];
  uint64_t v12 = a2 + a1[9];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  return result;
}

uint64_t sub_100214E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100214B50(a1, a2, a3);
}

uint64_t sub_100214E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100214C5C(a1, a2, a3);
}

uint64_t sub_100214E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E50, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D81E8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100214EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DB0, (uint64_t)qword_10036B468, (uint64_t)sub_1002148DC, a1);
}

uint64_t sub_100214F08(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363390, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D8170);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100214F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363390, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D8170);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100214F98()
{
  return &unk_1002D70A0;
}

uint64_t sub_100214FA4()
{
  return 0x6E672E6F746F7270LL;
}

uint64_t sub_100214FC8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B480);
  sub_10000E704(v0, (uint64_t)qword_10036B480);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v27 = swift_allocObject(v1, v6 + 9 * v4, v5 | 7);
  *(_OWORD *)(v27 + 16) = xmmword_1002B3320;
  uint64_t v7 = v27 + v6;
  uint64_t v8 = v27 + v6 + *(int *)(v2 + 48);
  *(void *)(v27 + v6) = 1LL;
  *(void *)uint64_t v8 = "gps_nano_seconds";
  *(void *)(v8 + 8) = 16LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v7 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 2LL;
  *(void *)uint64_t v12 = "gps_time_uncertainty_nano_seconds";
  *(void *)(v12 + 8) = 33LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)uint64_t v14 = "leap_seconds_from_gps_start_valid";
  *((void *)v14 + 1) = 33LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v7 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 4LL;
  *(void *)uint64_t v16 = "leap_seconds_from_gps_start";
  *((void *)v16 + 1) = 27LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v7 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "clock_nano_seconds";
  *((void *)v18 + 1) = 18LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v7 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)uint64_t v20 = "mach_continuous_seconds";
  *((void *)v20 + 1) = 23LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v7 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 7LL;
  *(void *)uint64_t v22 = "mach_continuous_uncertainty_seconds";
  *((void *)v22 + 1) = 35LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v7 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 8LL;
  *(void *)uint64_t v24 = "baseband_system_time_ns";
  *((void *)v24 + 1) = 23LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 9LL;
  *(void *)uint64_t v25 = "baseband_system_time_unc_ns";
  *(void *)(v25 + 8) = 27LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v27);
}

uint64_t sub_10021529C()
{
  return sub_100008C30(&qword_1003B0DB8, (uint64_t)qword_10036B480, (uint64_t)sub_100214FC8);
}

uint64_t sub_1002152B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DB8, (uint64_t)qword_10036B480, (uint64_t)sub_100214FC8, a1);
}

uint64_t sub_1002152D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 20);
          goto LABEL_15;
        case 2LL:
          uint64_t v11 = type metadata accessor for Proto_Gnss_Time(0LL);
          uint64_t v12 = v9;
          dispatch thunk of Decoder.decodeSingularFloatField(value:)(v3 + *(int *)(v11 + 24), a2, a3);
          goto LABEL_16;
        case 3LL:
          uint64_t v13 = type metadata accessor for Proto_Gnss_Time(0LL);
          uint64_t v12 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v13 + 28), a2, a3);
          goto LABEL_16;
        case 4LL:
          uint64_t v14 = type metadata accessor for Proto_Gnss_Time(0LL);
          uint64_t v12 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v14 + 32), a2, a3);
          goto LABEL_16;
        case 5LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 36);
          goto LABEL_15;
        case 6LL:
          uint64_t v15 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 40);
          goto LABEL_12;
        case 7LL:
          uint64_t v15 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 44);
LABEL_12:
          uint64_t v12 = v9;
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v15, a2, a3);
          goto LABEL_16;
        case 8LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 48);
          goto LABEL_15;
        case 9LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_Time(0LL) + 52);
LABEL_15:
          uint64_t v12 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + v10, a2, a3);
LABEL_16:
          uint64_t v9 = v12;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100215460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 4) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(2LL, a2, a3, *(float *)v12);
    }
    int v13 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    uint64_t v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v14, 4LL, a2, a3);
    }
    sub_100217840(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Time);
    sub_1000FAEE8(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Time);
    sub_1000FAF5C(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_Time);
    sub_100215644(v5, a1, a2, a3);
    sub_1002156B8(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100215644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v8 = a1 + *(int *)(result + 48);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v8, 8LL, a3, a4);
  }
  return result;
}

uint64_t sub_1002156B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v8 = a1 + *(int *)(result + 52);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v8, 9LL, a3, a4);
  }
  return result;
}

Swift::Int sub_100215730()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_Time, &qword_100363148, (uint64_t)&unk_1002D83D8);
}

uint64_t sub_10021574C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  uint64_t v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  uint64_t v9 = a2 + v8;
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a1[10];
  uint64_t v11 = a2 + a1[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1[12];
  uint64_t v14 = a2 + a1[11];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  uint64_t v16 = a2 + a1[13];
  *(void *)uint64_t v16 = 0LL;
  *(_BYTE *)(v16 + 8) = 1;
  return result;
}

uint64_t sub_1002157F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002152D4(a1, a2, a3);
}

uint64_t sub_100215804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100215460(a1, a2, a3);
}

uint64_t sub_100215818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E48, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D8350);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100215868@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DB8, (uint64_t)qword_10036B480, (uint64_t)sub_100214FC8, a1);
}

uint64_t sub_100215884(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003633A8, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D82D8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1002158C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003633A8, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D82D8);
  return Message.hash(into:)(a1, a2, v4);
}

const char *sub_100215918()
{
  return "proto.gnss.Fix";
}

uint64_t sub_100215924()
{
  return 0x6E672E6F746F7270LL;
}

uint64_t sub_100215948()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B498);
  sub_10000E704(v0, (uint64_t)qword_10036B498);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "time";
  *(void *)(v9 + 8) = 4LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "position";
  *(void *)(v13 + 8) = 8LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "velocity";
  *((void *)v15 + 1) = 8LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "spoofing_flags";
  *((void *)v17 + 1) = 14LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 5LL;
  *(void *)uint64_t v18 = "estimation_technology";
  *(void *)(v18 + 8) = 21LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100215B5C()
{
  return sub_100008C30(&qword_1003B0DC0, (uint64_t)qword_10036B498, (uint64_t)sub_100215948);
}

uint64_t sub_100215B78@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DC0, (uint64_t)qword_10036B498, (uint64_t)sub_100215948, a1);
}

uint64_t sub_100215B94()
{
  uint64_t v0 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t v2 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  uint64_t v3 = type metadata accessor for Proto_Gnss_Time(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))(v2, 1LL, 1LL, v3);
  uint64_t v4 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  uint64_t v5 = type metadata accessor for Proto_Gnss_Position(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  uint64_t v6 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  uint64_t v7 = type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( v6,  1LL,  1LL,  v7);
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology) = 5;
  qword_1003B0DD0 = v1;
  return result;
}

uint64_t sub_100215C8C()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100215CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v9)) & 1) == 0)
  {
    uint64_t v10 = *(void *)(v3 + v9);
    uint64_t v11 = type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
    uint64_t v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    uint64_t v13 = swift_retain(v10);
    sub_10021AF40(v13);
    swift_release(v10);
    uint64_t v14 = *(void *)(v6 + v9);
    *(void *)(v6 + v9) = v12;
    swift_release(v14);
  }

  uint64_t v15 = *(void *)(v6 + v9);
  swift_retain(v15);
  uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1LL:
          uint64_t v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time,  v29,  33LL,  0LL);
          uint64_t v20 = type metadata accessor for Proto_Gnss_Time(0LL);
          uint64_t v21 = &qword_1003633A8;
          uint64_t v22 = type metadata accessor for Proto_Gnss_Time;
          uint64_t v23 = &unk_1002D82D8;
          goto LABEL_7;
        case 2LL:
          uint64_t v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position,  v29,  33LL,  0LL);
          uint64_t v20 = type metadata accessor for Proto_Gnss_Position(0LL);
          uint64_t v21 = &qword_100363378;
          uint64_t v22 = type metadata accessor for Proto_Gnss_Position;
          uint64_t v23 = &unk_1002D8008;
          goto LABEL_7;
        case 3LL:
          uint64_t v19 = v15
              + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity,  v29,  33LL,  0LL);
          uint64_t v20 = type metadata accessor for Proto_Gnss_Velocity(0LL);
          uint64_t v21 = &qword_100363390;
          uint64_t v22 = type metadata accessor for Proto_Gnss_Velocity;
          uint64_t v23 = &unk_1002D8170;
LABEL_7:
          uint64_t v24 = sub_10000FD98(v21, v22, (uint64_t)v23);
          uint64_t v25 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v19, v20, v24, a2, a3);
          goto LABEL_8;
        case 4LL:
          uint64_t v26 = v15
              + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags,  v29,  33LL,  0LL);
          uint64_t v25 = v5;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v26, a2, a3);
          goto LABEL_8;
        case 5LL:
          uint64_t v27 = v15
              + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology,  v29,  33LL,  0LL);
          unint64_t v28 = sub_1002220B0();
          uint64_t v25 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v27,  &type metadata for Proto_Gnss_EstimationTechnology,  v28,  a2,  a3);
LABEL_8:
          uint64_t v5 = v25;
          swift_endAccess(v29);
          break;
        default:
          break;
      }

      uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return swift_release(v15);
}

uint64_t sub_100215FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_Fix(0LL) + 20));
  uint64_t v10 = swift_retain(v9);
  sub_100216148(v10, a1, a2, a3);
  if (v4) {
    return swift_release(v9);
  }
  sub_1002162D4(v9, a1, a2, a3);
  sub_100216460(v9, a1, a2, a3);
  uint64_t v12 = v9
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags,  &v15,  0LL,  0LL);
  if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v12, 4LL, a2, a3);
  }
  uint64_t v13 = (char *)(v9
               + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology,  v16,  0LL,  0LL);
  if (*v13 != 5)
  {
    char v17 = *v13;
    unint64_t v14 = sub_1002220B0();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v17,  5LL,  &type metadata for Proto_Gnss_EstimationTechnology,  v14,  a2,  a3);
  }

  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100216148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363118);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100363118);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Time);
  uint64_t v15 = sub_10000FD98(&qword_1003633A8, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D82D8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_1002162D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363120);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100363120);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Position);
  uint64_t v15 = sub_10000FD98(&qword_100363378, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8008);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Position);
}

uint64_t sub_100216460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363128);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100363128);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Velocity);
  uint64_t v15 = sub_10000FD98(&qword_100363390, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D8170);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 3LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Velocity);
}

uint64_t sub_1002165EC(uint64_t a1, uint64_t a2)
{
  return sub_100065AC0( a1,  a2,  type metadata accessor for Proto_Gnss_Fix,  (uint64_t (*)(uint64_t, uint64_t))sub_100216614) & 1;
}

BOOL sub_100216614(uint64_t a1, uint64_t a2)
{
  uint64_t v83 = a2;
  uint64_t v74 = type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v68 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = sub_100003A0C(&qword_100363EC8);
  __chkstk_darwin(v71);
  uint64_t v75 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100003A0C(&qword_100363128);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v69 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v73 = (uint64_t)&v67 - v8;
  uint64_t v81 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v70 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = sub_100003A0C(&qword_100363ED0);
  __chkstk_darwin(v78);
  uint64_t v82 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_100363120);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v76 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v80 = (uint64_t)&v67 - v14;
  uint64_t v15 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v77 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100003A0C(&qword_100363EC0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100003A0C(&qword_100363118);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v67 - v25;
  uint64_t v27 = a1;
  uint64_t v28 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess(v28, v93, 0LL, 0LL);
  sub_10000E6C0(v28, (uint64_t)v26, &qword_100363118);
  uint64_t v29 = v83;
  uint64_t v30 = v83 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess( v83 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time,  v92,  0LL,  0LL);
  uint64_t v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_10000E6C0((uint64_t)v26, (uint64_t)v20, &qword_100363118);
  sub_10000E6C0(v30, v31, &qword_100363118);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v20, 1LL, v15) == 1)
  {
    swift_retain(v27);
    swift_retain(v29);
    sub_100015764((uint64_t)v26, &qword_100363118);
    uint64_t v33 = v27;
    if (v32(v31, 1LL, v15) == 1)
    {
      sub_100015764((uint64_t)v20, &qword_100363118);
      goto LABEL_8;
    }

Swift::Int sub_100216F90()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_Fix, &qword_100363150, (uint64_t)&unk_1002D8540);
}

uint64_t sub_100216FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD7C(a1, &qword_1003B0DC8, &qword_1003B0DD0, (uint64_t)sub_100215B94, a2);
}

uint64_t sub_100216FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100215CF4(a1, a2, a3);
}

uint64_t sub_100216FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100215FAC(a1, a2, a3);
}

uint64_t sub_100216FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E40, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D84B8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100217040@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DC0, (uint64_t)qword_10036B498, (uint64_t)sub_100215948, a1);
}

uint64_t sub_10021705C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003633C0, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8440);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10021709C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003633C0, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8440);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002170EC()
{
  return &unk_100344DD8;
}

unint64_t sub_1002170F8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100217114()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B4B0);
  sub_10000E704(v0, (uint64_t)qword_10036B4B0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32E0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "is_gps_week_valid";
  *(void *)(v9 + 8) = 17LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "time";
  *(void *)(v13 + 8) = 4LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "quality";
  *((void *)v15 + 1) = 7LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "constellations_used";
  *((void *)v17 + 1) = 19LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 5LL;
  *(void *)uint64_t v19 = "baseband_system_time_ns";
  *((void *)v19 + 1) = 23LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 6LL;
  *(void *)uint64_t v21 = "baseband_system_time_unc_ns";
  *((void *)v21 + 1) = 27LL;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10021735C()
{
  return sub_100008C30(&qword_1003B0DD8, (uint64_t)qword_10036B4B0, (uint64_t)sub_100217114);
}

uint64_t sub_100217378@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DD8, (uint64_t)qword_10036B4B0, (uint64_t)sub_100217114, a1);
}

uint64_t sub_100217394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v12 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v12 + 20), a2, a3);
          goto LABEL_6;
        case 2LL:
          uint64_t v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 24);
          uint64_t v14 = type metadata accessor for Proto_Gnss_Time(0LL);
          uint64_t v15 = sub_10000FD98(&qword_1003633A8, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D82D8);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v13, v14, v15, a2, a3);
          goto LABEL_6;
        case 3LL:
          uint64_t v16 = v3 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 28);
          unint64_t v17 = sub_10022206C();
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v16,  &type metadata for Proto_Gnss_TimeQuality,  v17,  a2,  a3);
          goto LABEL_6;
        case 4LL:
          uint64_t v18 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v18 + 32), a2, a3);
          goto LABEL_6;
        case 5LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 36);
          goto LABEL_5;
        case 6LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferData(0LL) + 40);
LABEL_5:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + v10, a2, a3);
LABEL_6:
          uint64_t v9 = v11;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10021754C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v10 = result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    sub_1002176CC(v5, a1, a2, a3);
    if (*(_BYTE *)(v5 + *(int *)(v10 + 28)) != 7)
    {
      char v14 = *(_BYTE *)(v5 + *(int *)(v10 + 28));
      unint64_t v12 = sub_10022206C();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v14,  3LL,  &type metadata for Proto_Gnss_TimeQuality,  v12,  a2,  a3);
    }

    uint64_t v13 = (unsigned int *)(v5 + *(int *)(v10 + 32));
    if ((v13[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 4LL, a2, a3);
    }
    sub_100217840(v5, a1, a2, a3, type metadata accessor for Proto_Gnss_TimeTransferData);
    sub_1002178B4(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_1002176CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363118);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100363118);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Time);
  uint64_t v15 = sub_10000FD98(&qword_1003633A8, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D82D8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Time);
}

uint64_t sub_100217840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t result = a5(0LL);
  uint64_t v9 = a1 + *(int *)(result + 36);
  if ((*(_BYTE *)(v9 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v9, 5LL, a3, a4);
  }
  return result;
}

uint64_t sub_1002178B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v8 = a1 + *(int *)(result + 40);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v8, 6LL, a3, a4);
  }
  return result;
}

Swift::Int sub_10021792C()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gnss_TimeTransferData,  &qword_100363158,  (uint64_t)&unk_1002D86A8);
}

uint64_t sub_100217948@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  uint64_t v5 = a2 + v4;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))( v5,  1LL,  1LL,  v6);
  uint64_t v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 7;
  uint64_t v9 = a2 + v8;
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a1[10];
  uint64_t v11 = a2 + a1[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  return result;
}

uint64_t sub_1002179E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100217394(a1, a2, a3);
}

uint64_t sub_1002179F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021754C(a1, a2, a3);
}

uint64_t sub_100217A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E38, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&unk_1002D8620);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100217A58@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DD8, (uint64_t)qword_10036B4B0, (uint64_t)sub_100217114, a1);
}

uint64_t sub_100217A74(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003633D8, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&unk_1002D85A8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100217AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003633D8, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&unk_1002D85A8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100217B04()
{
  return &unk_100344DE8;
}

unint64_t sub_100217B10()
{
  return 0xD000000000000021LL;
}

uint64_t sub_100217B2C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B4C8);
  sub_10000E704(v0, (uint64_t)qword_10036B4C8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "data";
  *(void *)(v9 + 8) = 4LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "time_mark_before_mach_abs_tick";
  *(void *)(v13 + 8) = 30LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  char v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *char v14 = 3LL;
  *(void *)uint64_t v15 = "time_mark_after_mach_abs_tick";
  *((void *)v15 + 1) = 29LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "current_mach_cont_minus_mach_abs_ns";
  *((void *)v17 + 1) = 35LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 5LL;
  *(void *)uint64_t v18 = "time_mark_center_mach_abs_time_ns";
  *(void *)(v18 + 8) = 33LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100217D3C()
{
  return sub_100008C30(&qword_1003B0DE0, (uint64_t)qword_10036B4C8, (uint64_t)sub_100217B2C);
}

uint64_t sub_100217D58@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DE0, (uint64_t)qword_10036B4C8, (uint64_t)sub_100217B2C, a1);
}

uint64_t sub_100217D74()
{
  uint64_t v0 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  uint64_t v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  uint64_t v3 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))( v2,  1LL,  1LL,  v3);
  uint64_t v5 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs[0];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  qword_1003B0DF0 = v1;
  return result;
}

uint64_t sub_100217E38()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100217E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v9)) & 1) == 0)
  {
    uint64_t v10 = *(void *)(v3 + v9);
    uint64_t v11 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0LL);
    uint64_t v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    uint64_t v13 = swift_retain(v10);
    sub_10021B2E0(v13);
    swift_release(v10);
    uint64_t v14 = *(void *)(v6 + v9);
    *(void *)(v6 + v9) = v12;
    swift_release(v14);
  }

  uint64_t v15 = *(void *)(v6 + v9);
  swift_retain(v15);
  uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1LL:
          uint64_t v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  v25,  33LL,  0LL);
          uint64_t v23 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
          uint64_t v24 = sub_10000FD98( &qword_1003633D8,  type metadata accessor for Proto_Gnss_TimeTransferData,  (uint64_t)&unk_1002D85A8);
          uint64_t v21 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v22, v23, v24, a2, a3);
          goto LABEL_8;
        case 2LL:
          uint64_t v19 = OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
          goto LABEL_7;
        case 3LL:
          uint64_t v19 = OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
          goto LABEL_7;
        case 4LL:
          uint64_t v19 = OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
          goto LABEL_7;
        case 5LL:
          uint64_t v19 = OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs[0];
LABEL_7:
          uint64_t v20 = v15 + v19;
          swift_beginAccess(v15 + v19, v25, 33LL, 0LL);
          uint64_t v21 = v5;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v20, a2, a3);
LABEL_8:
          uint64_t v5 = v21;
          swift_endAccess(v25);
          break;
        default:
          break;
      }

      uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return swift_release(v15);
}

uint64_t sub_100218070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL) + 20));
  uint64_t v10 = swift_retain(v9);
  sub_100218244(v10, a1, a2, a3);
  if (v4) {
    return swift_release(v9);
  }
  uint64_t v12 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick,  &v16,  0LL,  0LL);
  if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v12, 2LL, a2, a3);
  }
  uint64_t v13 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick,  v17,  0LL,  0LL);
  if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v13, 3LL, a2, a3);
  }
  uint64_t v14 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs,  v18,  0LL,  0LL);
  if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v14, 4LL, a2, a3);
  }
  uint64_t v15 = v9
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs[0];
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs[0],  v19,  0LL,  0LL);
  if ((*(_BYTE *)(v15 + 8) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v15, 5LL, a2, a3);
  }
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100218244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363130);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100363130);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_TimeTransferData);
  uint64_t v15 = sub_10000FD98(&qword_1003633D8, type metadata accessor for Proto_Gnss_TimeTransferData, (uint64_t)&unk_1002D85A8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_TimeTransferData);
}

uint64_t sub_1002183D0(uint64_t a1, uint64_t a2)
{
  return sub_100065AC0(a1, a2, type metadata accessor for Proto_Gnss_TimeTransferDataExtend, sub_1002183F8) & 1;
}

uint64_t sub_1002183F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100003A0C(&qword_100363EB8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100003A0C(&qword_100363130);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v45 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = a1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  v55,  0LL,  0LL);
  sub_10000E6C0(v15, (uint64_t)v14, &qword_100363130);
  uint64_t v16 = a2
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess( a2 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  v54,  0LL,  0LL);
  uint64_t v17 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10000E6C0((uint64_t)v14, (uint64_t)v9, &qword_100363130);
  sub_10000E6C0(v16, v17, &qword_100363130);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v18((uint64_t)v9, 1LL, v4) == 1)
  {
    swift_retain(a1);
    swift_retain(a2);
    sub_100015764((uint64_t)v14, &qword_100363130);
    uint64_t v19 = a2;
    if (v18(v17, 1LL, v4) == 1)
    {
      sub_100015764((uint64_t)v9, &qword_100363130);
      goto LABEL_8;
    }

Swift::Int sub_1002188B4()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  &qword_100363160,  (uint64_t)&unk_1002D8810);
}

uint64_t sub_1002188D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD7C(a1, &qword_1003B0DE8, &qword_1003B0DF0, (uint64_t)sub_100217D74, a2);
}

uint64_t sub_1002188EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100217E70(a1, a2, a3);
}

uint64_t sub_100218900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100218070(a1, a2, a3);
}

uint64_t sub_100218914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100363E30,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8788);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100218964@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DE0, (uint64_t)qword_10036B4C8, (uint64_t)sub_100217B2C, a1);
}

uint64_t sub_100218980(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_1003633F0,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8710);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1002189C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003633F0,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8710);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100218A10()
{
  return &unk_100344DF8;
}

unint64_t sub_100218A1C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100218A38()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B4E0);
  sub_10000E704(v0, (uint64_t)qword_10036B4E0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "pressure";
  *((void *)v13 + 1) = 8LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100218B90()
{
  return sub_100008C30(&qword_1003B0DF8, (uint64_t)qword_10036B4E0, (uint64_t)sub_100218A38);
}

uint64_t sub_100218BAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0DF8, (uint64_t)qword_10036B4E0, (uint64_t)sub_100218A38, a1);
}

uint64_t sub_100218BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      uint64_t v9 = type metadata accessor for Proto_Gnss_RawPressureSample(0LL);
      dispatch thunk of Decoder.decodeSingularFloatField(value:)(v3 + *(int *)(v9 + 24), a2, a3);
    }

    else if (result == 1)
    {
      uint64_t v12 = type metadata accessor for Proto_Gnss_RawPressureSample(0LL);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v12 + 20), a2, a3);
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_100218C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_RawPressureSample(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + *(int *)(v10 + 24);
    if ((*(_BYTE *)(v12 + 4) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(2LL, a2, a3, *(float *)v12);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100218D60()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gnss_RawPressureSample,  &qword_100363168,  (uint64_t)&unk_1002D8978);
}

uint64_t sub_100218D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100218BC8(a1, a2, a3);
}

uint64_t sub_100218D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100218C94(a1, a2, a3);
}

uint64_t sub_100218DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E28, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&unk_1002D88F0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100218DF4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0DF8, (uint64_t)qword_10036B4E0, (uint64_t)sub_100218A38, a1);
}

uint64_t sub_100218E10(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363408, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&unk_1002D8878);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100218E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363408, type metadata accessor for Proto_Gnss_RawPressureSample, (uint64_t)&unk_1002D8878);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100218EA0()
{
  return &unk_100344E08;
}

unint64_t sub_100218EAC()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_100218EC8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B4F8);
  sub_10000E704(v0, (uint64_t)qword_10036B4F8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "x";
  *((void *)v13 + 1) = 1LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (void *)((char *)v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "y";
  *((void *)v15 + 1) = 1LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)((char *)v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "z";
  *((void *)v17 + 1) = 1LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100219090()
{
  return sub_100008C30(&qword_1003B0E00, (uint64_t)qword_10036B4F8, (uint64_t)sub_100218EC8);
}

uint64_t sub_1002190AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0E00, (uint64_t)qword_10036B4F8, (uint64_t)sub_100218EC8, a1);
}

uint64_t sub_1002190C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          break;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 24);
          goto LABEL_5;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularFloatField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_1002191D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 4) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(2LL, a2, a3, *(float *)v12);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 4) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(3LL, a2, a3, *(float *)v13);
    }
    uint64_t v14 = v5 + v10[8];
    if ((*(_BYTE *)(v14 + 4) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularFloatField(value:fieldNumber:)(4LL, a2, a3, *(float *)v14);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100219304()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gnss_SensorSample3Axis,  &qword_100363170,  (uint64_t)&unk_1002D8AE0);
}

uint64_t sub_100219320@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  uint64_t v8 = a1[8];
  uint64_t v9 = a2 + a1[7];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

uint64_t sub_100219380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002190C8(a1, a2, a3);
}

uint64_t sub_100219394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002191D4(a1, a2, a3);
}

uint64_t sub_1002193A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E20, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&unk_1002D8A58);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002193F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0E00, (uint64_t)qword_10036B4F8, (uint64_t)sub_100218EC8, a1);
}

uint64_t sub_100219414(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363420, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&unk_1002D89E0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100219454(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363420, type metadata accessor for Proto_Gnss_SensorSample3Axis, (uint64_t)&unk_1002D89E0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002194A4()
{
  return &unk_1002D70C0;
}

uint64_t sub_1002194B0()
{
  return 0x6E672E6F746F7270LL;
}

uint64_t sub_1002194D4()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B510);
  sub_10000E704(v0, (uint64_t)qword_10036B510);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "satellite_system";
  *(void *)(v9 + 8) = 16LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "prn";
  *(void *)(v13 + 8) = 3LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "glo_slot_number";
  *((void *)v15 + 1) = 15LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "glo_slot_source";
  *((void *)v17 + 1) = 15LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 5LL;
  *(void *)uint64_t v18 = "glo_frequency_number";
  *(void *)(v18 + 8) = 20LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1002196E0()
{
  return sub_100008C30(&qword_1003B0E08, (uint64_t)qword_10036B510, (uint64_t)sub_1002194D4);
}

uint64_t sub_1002196FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0E08, (uint64_t)qword_10036B510, (uint64_t)sub_1002194D4, a1);
}

uint64_t sub_100219718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v12 = type metadata accessor for Proto_Gnss_SvId(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v12 + 24), a2, a3);
          goto LABEL_6;
        case 3LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_SvId(0LL) + 32);
LABEL_5:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
          goto LABEL_6;
        case 5LL:
          uint64_t v13 = type metadata accessor for Proto_Gnss_SvId(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularSInt32Field(value:)(v3 + *(int *)(v13 + 36), a2, a3);
LABEL_6:
          uint64_t v9 = v11;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10021983C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v12, 2LL, a2, a3);
    }
    uint64_t v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v13, 3LL, a2, a3);
    }
    uint64_t v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v14, 4LL, a2, a3);
    }
    uint64_t v15 = (unsigned int *)(v5 + v10[9]);
    if ((v15[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)(*v15, 5LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10021999C()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_SvId, &qword_100363178, (uint64_t)&unk_1002D8C48);
}

uint64_t sub_1002199B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100219718(a1, a2, a3);
}

uint64_t sub_1002199CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021983C(a1, a2, a3);
}

uint64_t sub_1002199E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E18, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8BC0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100219A30@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0E08, (uint64_t)qword_10036B510, (uint64_t)sub_1002194D4, a1);
}

uint64_t sub_100219A4C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363438, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8B48);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100219A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363438, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8B48);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100219ADC()
{
  return &unk_100344E18;
}

unint64_t sub_100219AE8()
{
  return 0xD000000000000019LL;
}

uint64_t sub_100219B04()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B528);
  sub_10000E704(v0, (uint64_t)qword_10036B528);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "local_time";
  *(void *)(v9 + 8) = 10LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "meas_interval_sec";
  *(void *)(v13 + 8) = 17LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "active_interval_sec";
  *((void *)v15 + 1) = 19LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "avg_pwr_mw";
  *((void *)v17 + 1) = 10LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 5LL;
  *(void *)uint64_t v18 = "status";
  *(void *)(v18 + 8) = 6LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100219D10()
{
  return sub_100008C30(&qword_1003B0E10, (uint64_t)qword_10036B528, (uint64_t)sub_100219B04);
}

uint64_t sub_100219D2C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0E10, (uint64_t)qword_10036B528, (uint64_t)sub_100219B04, a1);
}

uint64_t sub_100219D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 24);
          goto LABEL_5;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v9, a2, a3);
          break;
        case 5LL:
          uint64_t v10 = v3 + *(int *)(type metadata accessor for Proto_Gnss_PwrMeasurement(0LL) + 36);
          unint64_t v11 = sub_100221E4C();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v10,  &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus,  v11,  a2,  a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100219E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1LL, a2, a3, *(double *)v11);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2LL, a2, a3, *(double *)v12);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3LL, a2, a3, *(double *)v13);
    }
    uint64_t v14 = v5 + v10[8];
    if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(4LL, a2, a3, *(double *)v14);
    }
    int v15 = *(unsigned __int8 *)(v5 + v10[9]);
    if (v15 != 2)
    {
      char v17 = v15 & 1;
      unint64_t v16 = sub_100221E4C();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v17,  5LL,  &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus,  v16,  a2,  a3);
    }

    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10021A000()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_PwrMeasurement, &qword_100363180, (uint64_t)&unk_1002D8DB0);
}

uint64_t sub_10021A01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100219D48(a1, a2, a3);
}

uint64_t sub_10021A030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100219E80(a1, a2, a3);
}

uint64_t sub_10021A044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E10, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8D28);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10021A094@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0E10, (uint64_t)qword_10036B528, (uint64_t)sub_100219B04, a1);
}

uint64_t sub_10021A0B0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363450, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8CB0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10021A0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363450, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8CB0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_10021A140()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B540);
  sub_10000E704(v0, (uint64_t)qword_10036B540);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 0LL;
  *(void *)uint64_t v9 = "PowerLoggingStatus_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 35LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "PowerLoggingStatus_kPowerNormal";
  *((void *)v13 + 1) = 31LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10021A290()
{
  return sub_100008C30(&qword_1003B0E18, (uint64_t)qword_10036B540, (uint64_t)sub_10021A140);
}

uint64_t sub_10021A2AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0E18, (uint64_t)qword_10036B540, (uint64_t)sub_10021A140, a1);
}

uint64_t sub_10021A2C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0E18, (uint64_t)qword_10036B540, (uint64_t)sub_10021A140, a1);
}

void *sub_10021A2E4()
{
  return &unk_100344E28;
}

unint64_t sub_10021A2F0()
{
  return 0xD000000000000015LL;
}

uint64_t sub_10021A30C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B558);
  sub_10000E704(v0, (uint64_t)qword_10036B558);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "m_time_of_file_generation_in_seconds_since_gps_epoch";
  *(void *)(v9 + 8) = 52LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "m_is_data_integrity_valid";
  *((void *)v13 + 1) = 25LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10021A45C()
{
  return sub_100008C30(&qword_1003B0E20, (uint64_t)qword_10036B558, (uint64_t)sub_10021A30C);
}

uint64_t sub_10021A478@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0E20, (uint64_t)qword_10036B558, (uint64_t)sub_10021A30C, a1);
}

uint64_t sub_10021A494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      uint64_t v9 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v9 + 24), a2, a3);
    }

    else if (result == 1)
    {
      uint64_t v12 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v12 + 20), a2, a3);
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_10021A560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v12 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 24));
    if (v12 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10021A62C()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gnss_DecodedRti, &qword_100363188, (uint64_t)&unk_1002D8F40);
}

uint64_t sub_10021A648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = *(int *)(a1 + 24);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 2;
  return result;
}

uint64_t sub_10021A688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021A494(a1, a2, a3);
}

uint64_t sub_10021A69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021A560(a1, a2, a3);
}

uint64_t sub_10021A6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363E08, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8EB8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10021A700@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0E20, (uint64_t)qword_10036B558, (uint64_t)sub_10021A30C, a1);
}

uint64_t sub_10021A71C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100363468, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8E40);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10021A75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100363468, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8E40);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10021A7AC()
{
  return &unk_100344E38;
}

unint64_t sub_10021A7B8()
{
  return 0xD000000000000023LL;
}

uint64_t sub_10021A7D4()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B570);
  sub_10000E704(v0, (uint64_t)qword_10036B570);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "m_time_of_gps_data_start_in_seconds_since_gps_epoch";
  *(void *)(v9 + 8) = 51LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  int v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "m_is_data_integrity_valid";
  *(void *)(v13 + 8) = 25LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  int v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)int v15 = "m_time_of_gps_data_end_in_seconds_since_gps_epoch";
  *((void *)v15 + 1) = 49LL;
  v15[16] = 2;
  v12();
  unint64_t v16 = (void *)(v8 + 3 * v4);
  char v17 = (char *)v16 + *(int *)(v2 + 48);
  *unint64_t v16 = 4LL;
  *(void *)char v17 = "assistance_file_type";
  *((void *)v17 + 1) = 20LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10021A994()
{
  return sub_100008C30(&qword_1003B0E28, (uint64_t)qword_10036B570, (uint64_t)sub_10021A7D4);
}

uint64_t sub_10021A9B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B0E28, (uint64_t)qword_10036B570, (uint64_t)sub_10021A7D4, a1);
}

uint64_t sub_10021A9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v12 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v12 + 24), a2, a3);
          goto LABEL_6;
        case 3LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 28);
LABEL_5:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + v10, a2, a3);
          goto LABEL_6;
        case 4LL:
          uint64_t v13 = v3 + *(int *)(type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL) + 32);
          unint64_t v14 = sub_10007FAD0();
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v13,  &type metadata for CLP_LogEntry_PrivateData_SvPositionSource,  v14,  a2,  a3);
LABEL_6:
          uint64_t v9 = v11;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10021AB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v12 = *(unsigned __int8 *)(v5 + v10[6]);
    if (v12 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2LL, a2, a3);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v13, 3LL, a2, a3);
    }
    if (*(_BYTE *)(v5 + v10[8]) != 7)
    {
      char v15 = *(_BYTE *)(v5 + v10[8]);
      unint64_t v14 = sub_10007FAD0();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v15,  4LL,  &type metadata for CLP_LogEntry_PrivateData_SvPositionSource,  v14,  a2,  a3);
    }

    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10021AC4C()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  &qword_100363190,  (uint64_t)&unk_1002D90A8);
}

uint64_t sub_10021AC68@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 2;
  uint64_t v7 = a1[8];
  uint64_t v8 = a2 + a1[7];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a2 + v7) = 7;
  return result;
}

uint64_t sub_10021ACC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021A9CC(a1, a2, a3);
}

uint64_t sub_10021ACD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10021AB00(a1, a2, a3);
}

uint64_t sub_10021ACE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100363E00,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D9020);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10021AD38@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B0E28, (uint64_t)qword_10036B570, (uint64_t)sub_10021A7D4, a1);
}

uint64_t sub_10021AD54(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100363480,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D8FA8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10021AD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100363480,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D8FA8);
  return Message.hash(into:)(a1, a2, v4);
}

unint64_t sub_10021ADE4(unint64_t result)
{
  if (result >= 0xA) {
    return 10LL;
  }
  return result;
}

uint64_t sub_10021ADF4(unint64_t a1)
{
  if (a1 > 9) {
    return 10LL;
  }
  else {
    return byte_1002D95B0[a1];
  }
}

unint64_t sub_10021AE14(unint64_t a1)
{
  if (a1 >= 5) {
    return 5LL;
  }
  else {
    return 0x4030201uLL >> (8 * a1);
  }
}

uint64_t sub_10021AE34(uint64_t a1)
{
  uint64_t result = 0LL;
  switch(a1)
  {
    case 0LL:
      return result;
    case 1LL:
      uint64_t result = 1LL;
      break;
    case 2LL:
    case 3LL:
    case 4LL:
    case 5LL:
    case 6LL:
    case 7LL:
    case 8LL:
    case 9LL:
    case 11LL:
    case 12LL:
    case 13LL:
    case 14LL:
    case 15LL:
    case 16LL:
    case 17LL:
    case 18LL:
    case 19LL:
    case 20LL:
    case 21LL:
    case 22LL:
    case 23LL:
    case 24LL:
      goto LABEL_6;
    case 10LL:
      uint64_t result = 2LL;
      break;
    case 25LL:
      uint64_t result = 3LL;
      break;
    default:
      if (a1 == 50)
      {
        uint64_t result = 4LL;
      }

      else if (a1 == 75)
      {
        uint64_t result = 5LL;
      }

      else
      {
LABEL_6:
        uint64_t result = 6LL;
      }

      break;
  }

  return result;
}

unint64_t sub_10021AE9C(unint64_t a1)
{
  if (a1 >= 5) {
    return 4LL;
  }
  else {
    return 0x3020104uLL >> (8 * a1);
  }
}

uint64_t sub_10021AEBC(unint64_t a1)
{
  if (a1 > 0xF) {
    return 8LL;
  }
  else {
    return asc_1002F1F06[a1];
  }
}

uint64_t type metadata accessor for Proto_Gnss_Position(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B5680, (uint64_t)&nominal type descriptor for Proto_Gnss_Position);
}

uint64_t type metadata accessor for Proto_Gnss_Velocity(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B5690, (uint64_t)&nominal type descriptor for Proto_Gnss_Velocity);
}

uint64_t type metadata accessor for Proto_Gnss_Time(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B56A0, (uint64_t)&nominal type descriptor for Proto_Gnss_Time);
}

uint64_t type metadata accessor for Proto_Gnss_Fix(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B56B0, (uint64_t)&nominal type descriptor for Proto_Gnss_Fix);
}

uint64_t type metadata accessor for Proto_Gnss_Fix._StorageClass(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B5740,  (uint64_t)&nominal type descriptor for Proto_Gnss_Fix._StorageClass);
}

uint64_t sub_10021AF40(uint64_t a1)
{
  uint64_t v3 = sub_100003A0C(&qword_100363128);
  __chkstk_darwin(v3);
  uint64_t v28 = (uint64_t)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100003A0C(&qword_100363120);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100003A0C(&qword_100363118);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  uint64_t v12 = type metadata accessor for Proto_Gnss_Time(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
  uint64_t v13 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  uint64_t v14 = type metadata accessor for Proto_Gnss_Position(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  uint64_t v16 = type metadata accessor for Proto_Gnss_Velocity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = v1
      + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags;
  *(void *)uint64_t v17 = 0LL;
  *(_BYTE *)(v17 + 8) = 1;
  uint64_t v18 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology) = 5;
  uint64_t v19 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__time,  v35,  0LL,  0LL);
  sub_10000E6C0(v19, (uint64_t)v10, &qword_100363118);
  swift_beginAccess(v11, v34, 33LL, 0LL);
  sub_10000E5D4((uint64_t)v10, v11, &qword_100363118);
  swift_endAccess(v34);
  uint64_t v20 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__position,  v34,  0LL,  0LL);
  sub_10000E6C0(v20, (uint64_t)v7, &qword_100363120);
  swift_beginAccess(v13, v33, 33LL, 0LL);
  sub_10000E5D4((uint64_t)v7, v13, &qword_100363120);
  swift_endAccess(v33);
  uint64_t v21 = a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__velocity,  v33,  0LL,  0LL);
  uint64_t v22 = v28;
  sub_10000E6C0(v21, v28, &qword_100363128);
  swift_beginAccess(v15, v32, 33LL, 0LL);
  sub_10000E5D4(v22, v15, &qword_100363128);
  swift_endAccess(v32);
  uint64_t v23 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__spoofingFlags,  v32,  0LL,  0LL);
  uint64_t v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  swift_beginAccess(v17, v31, 1LL, 0LL);
  *(void *)uint64_t v17 = v24;
  *(_BYTE *)(v17 + 8) = (_BYTE)v23;
  char v25 = (_BYTE *)(a1
                + OBJC_IVAR____TtCV10ALProtobuf14Proto_Gnss_FixP33_CE77F83568258924918786B79242136A13_StorageClass__estimationTechnology);
  swift_beginAccess(v25, v30, 0LL, 0LL);
  LOBYTE(v25) = *v25;
  swift_beginAccess(v18, v29, 1LL, 0LL);
  _BYTE *v18 = (_BYTE)v25;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_TimeTransferData(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B56C0, (uint64_t)&nominal type descriptor for Proto_Gnss_TimeTransferData);
}

uint64_t type metadata accessor for Proto_Gnss_TimeTransferDataExtend(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B56D0,  (uint64_t)&nominal type descriptor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B5750,  (uint64_t)&nominal type descriptor for Proto_Gnss_TimeTransferDataExtend._StorageClass);
}

uint64_t sub_10021B2E0(uint64_t a1)
{
  uint64_t v3 = sub_100003A0C(&qword_100363130);
  __chkstk_darwin(v3);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  uint64_t v7 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick;
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = v1
     + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick;
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs;
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = v1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs;
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1
      + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__data,  v30,  0LL,  0LL);
  sub_10000E6C0(v12, (uint64_t)v5, &qword_100363130);
  swift_beginAccess(v6, v29, 33LL, 0LL);
  sub_10000E5D4((uint64_t)v5, v6, &qword_100363130);
  swift_endAccess(v29);
  uint64_t v13 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkBeforeMachAbsTick,  v29,  0LL,  0LL);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((_BYTE *)v13 + 8);
  swift_beginAccess(v8, v28, 1LL, 0LL);
  *(void *)uint64_t v8 = v14;
  *(_BYTE *)(v8 + 8) = (_BYTE)v13;
  uint64_t v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkAfterMachAbsTick,  v27,  0LL,  0LL);
  uint64_t v16 = *v15;
  LOBYTE(v15) = *((_BYTE *)v15 + 8);
  swift_beginAccess(v9, v26, 1LL, 0LL);
  *(void *)uint64_t v9 = v16;
  *(_BYTE *)(v9 + 8) = (_BYTE)v15;
  uint64_t v17 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__currentMachContMinusMachAbsNs,  v25,  0LL,  0LL);
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((_BYTE *)v17 + 8);
  swift_beginAccess(v10, v24, 1LL, 0LL);
  *(void *)uint64_t v10 = v18;
  *(_BYTE *)(v10 + 8) = (_BYTE)v17;
  uint64_t v19 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV10ALProtobuf33Proto_Gnss_TimeTransferDataExtendP33_CE77F83568258924918786B79242136A13_StorageClass__timeMarkCenterMachAbsTimeNs);
  swift_beginAccess(v19, v23, 0LL, 0LL);
  uint64_t v20 = *v19;
  LOBYTE(v19) = *((_BYTE *)v19 + 8);
  swift_beginAccess(v11, v22, 1LL, 0LL);
  *(void *)uint64_t v11 = v20;
  *(_BYTE *)(v11 + 8) = (_BYTE)v19;
  return v1;
}

uint64_t type metadata accessor for Proto_Gnss_RawPressureSample(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B56E0,  (uint64_t)&nominal type descriptor for Proto_Gnss_RawPressureSample);
}

uint64_t type metadata accessor for Proto_Gnss_SensorSample3Axis(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B56F0,  (uint64_t)&nominal type descriptor for Proto_Gnss_SensorSample3Axis);
}

uint64_t type metadata accessor for Proto_Gnss_SvId(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B5700, (uint64_t)&nominal type descriptor for Proto_Gnss_SvId);
}

uint64_t type metadata accessor for Proto_Gnss_PwrMeasurement(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B5710, (uint64_t)&nominal type descriptor for Proto_Gnss_PwrMeasurement);
}

uint64_t type metadata accessor for Proto_Gnss_DecodedRti(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003B5720, (uint64_t)&nominal type descriptor for Proto_Gnss_DecodedRti);
}

uint64_t type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B5730,  (uint64_t)&nominal type descriptor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_10021B5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v34[-v9];
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_24;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_24;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = *(unsigned __int8 *)(a1 + v17);
  int v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2) {
      goto LABEL_24;
    }
  }

  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_24;
  }

  uint64_t v20 = v11[7];
  uint64_t v21 = (void *)(a1 + v20);
  char v22 = *(_BYTE *)(a1 + v20 + 8);
  uint64_t v23 = (void *)(a2 + v20);
  int v24 = *(unsigned __int8 *)(a2 + v20 + 8);
  if ((v22 & 1) != 0)
  {
    if (!v24) {
      goto LABEL_24;
    }
  }

  else
  {
    if (*v21 != *v23) {
      LOBYTE(v24) = 1;
    }
    if ((v24 & 1) != 0) {
      goto LABEL_24;
    }
  }

  uint64_t v25 = v11[8];
  int v26 = *(unsigned __int8 *)(a1 + v25);
  int v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 7)
  {
    if (v27 == 7) {
      goto LABEL_23;
    }
LABEL_24:
    char v31 = 0;
    return v31 & 1;
  }

  char v36 = v26;
  if (v27 == 7) {
    goto LABEL_24;
  }
  char v35 = v27;
  unint64_t v28 = sub_100067CA4();
  if ((dispatch thunk of static Equatable.== infix(_:_:)( &v36,  &v35,  &type metadata for CLP_LogEntry_PrivateData_SvPositionSource,  v28) & 1) == 0) {
    goto LABEL_24;
  }
LABEL_23:
  char v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v29(v10, a1, v4);
  v29(v8, a2, v4);
  uint64_t v30 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v31 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v30);
  uint64_t v32 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v32(v8, v4);
  v32(v10, v4);
  return v31 & 1;
}

uint64_t sub_10021B7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_SensorSample3Axis(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_21;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_21;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (float *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 4);
  uint64_t v20 = (float *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_21;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_21;
    }
  }

  uint64_t v22 = v11[7];
  uint64_t v23 = (float *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 4);
  uint64_t v25 = (float *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) == 0)
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v27 = v11[8];
    unint64_t v28 = (float *)(a1 + v27);
    char v29 = *(_BYTE *)(a1 + v27 + 4);
    uint64_t v30 = (float *)(a2 + v27);
    int v31 = *(unsigned __int8 *)(a2 + v27 + 4);
    if ((v29 & 1) != 0)
    {
      if (!v31) {
        goto LABEL_21;
      }
    }

    else
    {
      if (*v28 != *v30) {
        LOBYTE(v31) = 1;
      }
      if ((v31 & 1) != 0) {
        goto LABEL_21;
      }
    }

    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v34(v10, a1, v4);
    v34(v8, a2, v4);
    uint64_t v35 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v32 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v35);
    char v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v8, v4);
    v36(v10, v4);
    return v32 & 1;
  }

  if (v26) {
    goto LABEL_19;
  }
LABEL_21:
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_10021B9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for Proto_Gnss_RawPressureSample(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) == 0)
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v17 = *(int *)(v11 + 24);
    int v18 = (float *)(a1 + v17);
    char v19 = *(_BYTE *)(a1 + v17 + 4);
    uint64_t v20 = (float *)(a2 + v17);
    int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
    if ((v19 & 1) != 0)
    {
      if (!v21) {
        goto LABEL_9;
      }
    }

    else
    {
      if (*v18 != *v20) {
        LOBYTE(v21) = 1;
      }
      if ((v21 & 1) != 0) {
        goto LABEL_9;
      }
    }

    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23(v10, a1, v4);
    v23(v8, a2, v4);
    uint64_t v24 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v24);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    v25(v8, v4);
    v25(v10, v4);
    return v22 & 1;
  }

  if (v16) {
    goto LABEL_7;
  }
LABEL_9:
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_10021BB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  int v66 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v62 - v7;
  uint64_t v8 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v68 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_100363EC0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100003A0C(&qword_100363118);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v62 - v19;
  __chkstk_darwin(v18);
  char v22 = (char *)&v62 - v21;
  uint64_t v23 = type metadata accessor for Proto_Gnss_TimeTransferData(0LL);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v25 = a1;
  int v26 = *(unsigned __int8 *)(a1 + v24);
  uint64_t v69 = a2;
  int v27 = *(unsigned __int8 *)(a2 + v24);
  if (v26 == 2)
  {
    if (v27 != 2) {
      goto LABEL_32;
    }
  }

  else if (v27 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0)
  {
    goto LABEL_32;
  }

  uint64_t v64 = v4;
  uint64_t v28 = a1;
  char v29 = (int *)v23;
  sub_10000E6C0(v25 + *(int *)(v23 + 24), (uint64_t)v22, &qword_100363118);
  int v63 = v29;
  sub_10000E6C0(v69 + v29[6], (uint64_t)v20, &qword_100363118);
  uint64_t v30 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E6C0((uint64_t)v22, (uint64_t)v13, &qword_100363118);
  sub_10000E6C0((uint64_t)v20, v30, &qword_100363118);
  int v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v31((uint64_t)v13, 1LL, v8) != 1)
  {
    sub_10000E6C0((uint64_t)v13, (uint64_t)v17, &qword_100363118);
    if (v31(v30, 1LL, v8) != 1)
    {
      uint64_t v33 = v68;
      sub_100003E68(v30, v68, type metadata accessor for Proto_Gnss_Time);
      char v34 = sub_10021C844((uint64_t)v17, v33);
      sub_100004090(v33, type metadata accessor for Proto_Gnss_Time);
      sub_100015764((uint64_t)v20, &qword_100363118);
      sub_100015764((uint64_t)v22, &qword_100363118);
      sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gnss_Time);
      sub_100015764((uint64_t)v13, &qword_100363118);
      if ((v34 & 1) == 0) {
        goto LABEL_32;
      }
      goto LABEL_13;
    }

    sub_100015764((uint64_t)v20, &qword_100363118);
    sub_100015764((uint64_t)v22, &qword_100363118);
    sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gnss_Time);
LABEL_11:
    sub_100015764((uint64_t)v13, &qword_100363EC0);
    char v32 = 0;
    return v32 & 1;
  }

  sub_100015764((uint64_t)v20, &qword_100363118);
  sub_100015764((uint64_t)v22, &qword_100363118);
  if (v31(v30, 1LL, v8) != 1) {
    goto LABEL_11;
  }
  sub_100015764((uint64_t)v13, &qword_100363118);
LABEL_13:
  uint64_t v35 = v63[7];
  int v36 = *(unsigned __int8 *)(v28 + v35);
  int v37 = *(unsigned __int8 *)(v69 + v35);
  if (v36 == 7)
  {
    uint64_t v38 = v64;
    if (v37 != 7) {
      goto LABEL_32;
    }
    goto LABEL_18;
  }

  char v32 = 0;
  uint64_t v38 = v64;
  if (v37 != 7 && v36 == v37)
  {
LABEL_18:
    uint64_t v39 = v63[8];
    int v40 = (_DWORD *)(v28 + v39);
    char v41 = *(_BYTE *)(v28 + v39 + 4);
    char v42 = (_DWORD *)(v69 + v39);
    int v43 = *(unsigned __int8 *)(v69 + v39 + 4);
    if ((v41 & 1) != 0)
    {
      if (!v43) {
        goto LABEL_32;
      }
    }

    else
    {
      if (*v40 != *v42) {
        LOBYTE(v43) = 1;
      }
      if ((v43 & 1) != 0) {
        goto LABEL_32;
      }
    }

    uint64_t v44 = v63[9];
    uint64_t v45 = (void *)(v28 + v44);
    char v46 = *(_BYTE *)(v28 + v44 + 8);
    uint64_t v47 = (void *)(v69 + v44);
    int v48 = *(unsigned __int8 *)(v69 + v44 + 8);
    if ((v46 & 1) == 0)
    {
      if (*v45 != *v47) {
        LOBYTE(v48) = 1;
      }
      if ((v48 & 1) != 0) {
        goto LABEL_32;
      }
LABEL_30:
      uint64_t v49 = v63[10];
      uint64_t v50 = (void *)(v28 + v49);
      char v51 = *(_BYTE *)(v28 + v49 + 8);
      uint64_t v52 = (void *)(v69 + v49);
      int v53 = *(unsigned __int8 *)(v69 + v49 + 8);
      if ((v51 & 1) != 0)
      {
        if (!v53) {
          goto LABEL_32;
        }
      }

      else
      {
        if (*v50 != *v52) {
          LOBYTE(v53) = 1;
        }
        if ((v53 & 1) != 0) {
          goto LABEL_32;
        }
      }

      uint64_t v55 = v67;
      uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      uint64_t v57 = v28;
      char v58 = v65;
      v56(v65, v57, v38);
      uint64_t v59 = v66;
      v56(v66, v69, v38);
      uint64_t v60 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
      char v32 = dispatch thunk of static Equatable.== infix(_:_:)(v58, v59, v38, v60);
      char v61 = *(void (**)(char *, uint64_t))(v55 + 8);
      v61(v59, v38);
      v61(v58, v38);
      return v32 & 1;
    }

    if (v48) {
      goto LABEL_30;
    }
LABEL_32:
    char v32 = 0;
  }

  return v32 & 1;
}

uint64_t sub_10021C044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v17 = v11[6];
  uint64_t v18 = (double *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v22 = v11[7];
  uint64_t v23 = (double *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 8);
  uint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v27 = v11[8];
  uint64_t v28 = (double *)(a1 + v27);
  char v29 = *(_BYTE *)(a1 + v27 + 8);
  uint64_t v30 = (double *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if ((v31 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v32 = v11[9];
  int v33 = *(unsigned __int8 *)(a1 + v32);
  int v34 = *(unsigned __int8 *)(a2 + v32);
  if (v33 == 2)
  {
    if (v34 != 2)
    {
LABEL_27:
      char v35 = 0;
      return v35 & 1;
    }

uint64_t sub_10021C25C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_13;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_13;
    }
  }

  uint64_t v17 = *(int *)(v11 + 24);
  int v18 = *(unsigned __int8 *)(a1 + v17);
  int v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 2)
  {
    if (v19 != 2)
    {
LABEL_13:
      char v22 = 0;
      return v22 & 1;
    }
  }

  else if (v19 == 2 || ((((v19 & 1) == 0) ^ v18) & 1) == 0)
  {
    goto LABEL_13;
  }

  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v20(v10, a1, v4);
  v20(v8, a2, v4);
  uint64_t v21 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v21);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v8, v4);
  v23(v10, v4);
  return v22 & 1;
}

uint64_t sub_10021C3E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Velocity(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_33;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_33;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (double *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_33;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_33;
    }
  }

  uint64_t v22 = v11[7];
  uint64_t v23 = (double *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 8);
  uint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26) {
      goto LABEL_33;
    }
  }

  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_33;
    }
  }

  uint64_t v27 = v11[8];
  uint64_t v28 = (double *)(a1 + v27);
  char v29 = *(_BYTE *)(a1 + v27 + 8);
  uint64_t v30 = (double *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31) {
      goto LABEL_33;
    }
  }

  else
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if ((v31 & 1) != 0) {
      goto LABEL_33;
    }
  }

  uint64_t v32 = v11[9];
  int v33 = (double *)(a1 + v32);
  char v34 = *(_BYTE *)(a1 + v32 + 8);
  char v35 = (double *)(a2 + v32);
  int v36 = *(unsigned __int8 *)(a2 + v32 + 8);
  if ((v34 & 1) == 0)
  {
    if (*v33 != *v35) {
      LOBYTE(v36) = 1;
    }
    if ((v36 & 1) != 0) {
      goto LABEL_33;
    }
LABEL_31:
    uint64_t v37 = v11[10];
    uint64_t v38 = (double *)(a1 + v37);
    char v39 = *(_BYTE *)(a1 + v37 + 8);
    uint64_t v40 = (double *)(a2 + v37);
    int v41 = *(unsigned __int8 *)(a2 + v37 + 8);
    if ((v39 & 1) != 0)
    {
      if (!v41) {
        goto LABEL_33;
      }
    }

    else
    {
      if (*v38 != *v40) {
        LOBYTE(v41) = 1;
      }
      if ((v41 & 1) != 0) {
        goto LABEL_33;
      }
    }

    uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v44(v10, a1, v4);
    v44(v8, a2, v4);
    uint64_t v45 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v42 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v45);
    char v46 = *(void (**)(char *, uint64_t))(v5 + 8);
    v46(v8, v4);
    v46(v10, v4);
    return v42 & 1;
  }

  if (v36) {
    goto LABEL_31;
  }
LABEL_33:
  char v42 = 0;
  return v42 & 1;
}

uint64_t sub_10021C62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_SvId(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (_DWORD *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 4);
  uint64_t v15 = (_DWORD *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (_DWORD *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 4);
  uint64_t v20 = (_DWORD *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v22 = v11[7];
  uint64_t v23 = (_DWORD *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 4);
  uint64_t v25 = (_DWORD *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26) {
      goto LABEL_27;
    }
  }

  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_27;
    }
  }

  uint64_t v27 = v11[8];
  uint64_t v28 = (_DWORD *)(a1 + v27);
  char v29 = *(_BYTE *)(a1 + v27 + 4);
  uint64_t v30 = (_DWORD *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) == 0)
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if ((v31 & 1) != 0) {
      goto LABEL_27;
    }
LABEL_25:
    uint64_t v32 = v11[9];
    int v33 = (_DWORD *)(a1 + v32);
    char v34 = *(_BYTE *)(a1 + v32 + 4);
    char v35 = (_DWORD *)(a2 + v32);
    int v36 = *(unsigned __int8 *)(a2 + v32 + 4);
    if ((v34 & 1) != 0)
    {
      if (!v36) {
        goto LABEL_27;
      }
    }

    else
    {
      if (*v33 != *v35) {
        LOBYTE(v36) = 1;
      }
      if ((v36 & 1) != 0) {
        goto LABEL_27;
      }
    }

    char v39 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v39(v10, a1, v4);
    v39(v8, a2, v4);
    uint64_t v40 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v37 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v40);
    int v41 = *(void (**)(char *, uint64_t))(v5 + 8);
    v41(v8, v4);
    v41(v10, v4);
    return v37 & 1;
  }

  if (v31) {
    goto LABEL_25;
  }
LABEL_27:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_10021C844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_50;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_50;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (float *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 4);
  uint64_t v20 = (float *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_50;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_50;
    }
  }

  uint64_t v22 = v11[7];
  int v23 = *(unsigned __int8 *)(a1 + v22);
  int v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 2)
  {
    if (v24 != 2) {
      goto LABEL_50;
    }
  }

  else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
  {
    goto LABEL_50;
  }

  uint64_t v25 = v11[8];
  int v26 = (_DWORD *)(a1 + v25);
  char v27 = *(_BYTE *)(a1 + v25 + 4);
  uint64_t v28 = (_DWORD *)(a2 + v25);
  int v29 = *(unsigned __int8 *)(a2 + v25 + 4);
  if ((v27 & 1) != 0)
  {
    if (!v29) {
      goto LABEL_50;
    }
  }

  else
  {
    if (*v26 != *v28) {
      LOBYTE(v29) = 1;
    }
    if ((v29 & 1) != 0) {
      goto LABEL_50;
    }
  }

  uint64_t v30 = v11[9];
  int v31 = (void *)(a1 + v30);
  char v32 = *(_BYTE *)(a1 + v30 + 8);
  int v33 = (void *)(a2 + v30);
  int v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if ((v32 & 1) != 0)
  {
    if (!v34) {
      goto LABEL_50;
    }
  }

  else
  {
    if (*v31 != *v33) {
      LOBYTE(v34) = 1;
    }
    if ((v34 & 1) != 0) {
      goto LABEL_50;
    }
  }

  uint64_t v35 = v11[10];
  int v36 = (double *)(a1 + v35);
  char v37 = *(_BYTE *)(a1 + v35 + 8);
  uint64_t v38 = (double *)(a2 + v35);
  int v39 = *(unsigned __int8 *)(a2 + v35 + 8);
  if ((v37 & 1) != 0)
  {
    if (!v39) {
      goto LABEL_50;
    }
  }

  else
  {
    if (*v36 != *v38) {
      LOBYTE(v39) = 1;
    }
    if ((v39 & 1) != 0) {
      goto LABEL_50;
    }
  }

  uint64_t v40 = v11[11];
  int v41 = (double *)(a1 + v40);
  char v42 = *(_BYTE *)(a1 + v40 + 8);
  int v43 = (double *)(a2 + v40);
  int v44 = *(unsigned __int8 *)(a2 + v40 + 8);
  if ((v42 & 1) != 0)
  {
    if (!v44) {
      goto LABEL_50;
    }
  }

  else
  {
    if (*v41 != *v43) {
      LOBYTE(v44) = 1;
    }
    if ((v44 & 1) != 0) {
      goto LABEL_50;
    }
  }

  uint64_t v45 = v11[12];
  char v46 = (void *)(a1 + v45);
  char v47 = *(_BYTE *)(a1 + v45 + 8);
  int v48 = (void *)(a2 + v45);
  int v49 = *(unsigned __int8 *)(a2 + v45 + 8);
  if ((v47 & 1) == 0)
  {
    if (*v46 != *v48) {
      LOBYTE(v49) = 1;
    }
    if ((v49 & 1) != 0) {
      goto LABEL_50;
    }
LABEL_48:
    uint64_t v50 = v11[13];
    char v51 = (void *)(a1 + v50);
    char v52 = *(_BYTE *)(a1 + v50 + 8);
    int v53 = (void *)(a2 + v50);
    int v54 = *(unsigned __int8 *)(a2 + v50 + 8);
    if ((v52 & 1) != 0)
    {
      if (!v54) {
        goto LABEL_50;
      }
    }

    else
    {
      if (*v51 != *v53) {
        LOBYTE(v54) = 1;
      }
      if ((v54 & 1) != 0) {
        goto LABEL_50;
      }
    }

    uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v57(v10, a1, v4);
    v57(v8, a2, v4);
    uint64_t v58 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v55 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v58);
    uint64_t v59 = *(void (**)(char *, uint64_t))(v5 + 8);
    v59(v8, v4);
    v59(v10, v4);
    return v55 & 1;
  }

  if (v49) {
    goto LABEL_48;
  }
LABEL_50:
  char v55 = 0;
  return v55 & 1;
}

uint64_t sub_10021CB30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v73 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (double *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  uint64_t v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v22 = v11[7];
  int v23 = (double *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 8);
  uint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v27 = v11[8];
  uint64_t v28 = (double *)(a1 + v27);
  char v29 = *(_BYTE *)(a1 + v27 + 8);
  uint64_t v30 = (double *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 8);
  if ((v29 & 1) != 0)
  {
    if (!v31) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if ((v31 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v32 = v11[9];
  int v33 = (double *)(a1 + v32);
  char v34 = *(_BYTE *)(a1 + v32 + 8);
  uint64_t v35 = (double *)(a2 + v32);
  int v36 = *(unsigned __int8 *)(a2 + v32 + 8);
  if ((v34 & 1) != 0)
  {
    if (!v36) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v33 != *v35) {
      LOBYTE(v36) = 1;
    }
    if ((v36 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v37 = v11[10];
  uint64_t v38 = (double *)(a1 + v37);
  char v39 = *(_BYTE *)(a1 + v37 + 8);
  uint64_t v40 = (double *)(a2 + v37);
  int v41 = *(unsigned __int8 *)(a2 + v37 + 8);
  if ((v39 & 1) != 0)
  {
    if (!v41) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v38 != *v40) {
      LOBYTE(v41) = 1;
    }
    if ((v41 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v42 = v11[11];
  int v43 = (double *)(a1 + v42);
  char v44 = *(_BYTE *)(a1 + v42 + 8);
  uint64_t v45 = (double *)(a2 + v42);
  int v46 = *(unsigned __int8 *)(a2 + v42 + 8);
  if ((v44 & 1) != 0)
  {
    if (!v46) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v43 != *v45) {
      LOBYTE(v46) = 1;
    }
    if ((v46 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v47 = v11[12];
  int v48 = (double *)(a1 + v47);
  char v49 = *(_BYTE *)(a1 + v47 + 8);
  uint64_t v50 = (double *)(a2 + v47);
  int v51 = *(unsigned __int8 *)(a2 + v47 + 8);
  if ((v49 & 1) != 0)
  {
    if (!v51) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v48 != *v50) {
      LOBYTE(v51) = 1;
    }
    if ((v51 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v52 = v11[13];
  int v53 = (_DWORD *)(a1 + v52);
  char v54 = *(_BYTE *)(a1 + v52 + 4);
  char v55 = (_DWORD *)(a2 + v52);
  int v56 = *(unsigned __int8 *)(a2 + v52 + 4);
  if ((v54 & 1) != 0)
  {
    if (!v56) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v53 != *v55) {
      LOBYTE(v56) = 1;
    }
    if ((v56 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v57 = v11[14];
  uint64_t v58 = *(char *)(a1 + v57);
  uint64_t v59 = *(char *)(a2 + v57);
  if (v58 == 6)
  {
    if ((_DWORD)v59 != 6) {
      goto LABEL_68;
    }
  }

  else if ((_DWORD)v59 == 6 || qword_1002D95C0[v58] != qword_1002D95C0[v59])
  {
    goto LABEL_68;
  }

  uint64_t v60 = v11[15];
  char v61 = (void *)(a1 + v60);
  char v62 = *(_BYTE *)(a1 + v60 + 8);
  int v63 = (void *)(a2 + v60);
  int v64 = *(unsigned __int8 *)(a2 + v60 + 8);
  if ((v62 & 1) != 0)
  {
    if (!v64) {
      goto LABEL_68;
    }
  }

  else
  {
    if (*v61 != *v63) {
      LOBYTE(v64) = 1;
    }
    if ((v64 & 1) != 0) {
      goto LABEL_68;
    }
  }

  uint64_t v65 = v11[16];
  int v66 = *(unsigned __int8 *)(a1 + v65);
  int v67 = *(unsigned __int8 *)(a2 + v65);
  if (v66 == 6)
  {
    if (v67 != 6)
    {
LABEL_68:
      char v68 = 0;
      return v68 & 1;
    }

LABEL_72:
    uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v70(v10, a1, v4);
    v70(v8, a2, v4);
    uint64_t v71 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v68 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v71);
    uint64_t v72 = *(void (**)(char *, uint64_t))(v5 + 8);
    v72(v8, v4);
    v72(v10, v4);
    return v68 & 1;
  }

  char v68 = 0;
  if (v67 != 6 && v66 == v67) {
    goto LABEL_72;
  }
  return v68 & 1;
}

      uint64_t v12 = 0;
      uint64_t v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        uint64_t v25 = a3 + 87;
        if (a3 > 10)
        {
          int v26 = a3 + 55;
        }

        else
        {
          uint64_t v25 = 97;
          int v26 = 65;
        }

        if (a3 <= 10) {
          uint64_t v27 = a3 + 48;
        }
        else {
          uint64_t v27 = 58;
        }
        if (result)
        {
          uint64_t v28 = 0;
          do
          {
            char v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                uint64_t v12 = 0;
                uint64_t v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                uint64_t v30 = -87;
              }

              else
              {
                uint64_t v30 = -55;
              }
            }

            else
            {
              uint64_t v30 = -48;
            }

            int v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_72;
            }
            uint64_t v32 = v29 + v30;
            uint64_t v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }

          while (a2);
          uint64_t v13 = 0;
          uint64_t v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v5 = a3 + 87;
        if (a3 > 10)
        {
          uint64_t v6 = a3 + 55;
        }

        else
        {
          uint64_t v5 = 97;
          uint64_t v6 = 65;
        }

        if (a3 <= 10) {
          uint64_t v7 = a3 + 48;
        }
        else {
          uint64_t v7 = 58;
        }
        if (result)
        {
          uint64_t v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            uint64_t v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                uint64_t v12 = 0;
                uint64_t v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                uint64_t v11 = -87;
              }

              else
              {
                uint64_t v11 = -55;
              }
            }

            else
            {
              uint64_t v11 = -48;
            }

            char v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_72;
            }
            uint64_t v15 = v10 + v11;
            uint64_t v8 = v14 - v15;
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

      uint64_t v12 = 0;
      uint64_t v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }

  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        uint64_t v25 = a3 + 87;
        if (a3 > 10)
        {
          int v26 = a3 + 55;
        }

        else
        {
          uint64_t v25 = 97;
          int v26 = 65;
        }

        if (a3 <= 10) {
          uint64_t v27 = a3 + 48;
        }
        else {
          uint64_t v27 = 58;
        }
        if (result)
        {
          uint64_t v28 = 0;
          do
          {
            char v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                uint64_t v12 = 0;
                uint64_t v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                uint64_t v30 = -87;
              }

              else
              {
                uint64_t v30 = -55;
              }
            }

            else
            {
              uint64_t v30 = -48;
            }

            int v31 = (int)v28 * (uint64_t)(int)a3;
            uint64_t v32 = v29 + v30;
            uint64_t v28 = v31 + v32;
            if (__OFADD__((_DWORD)v31, v32)) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }

          while (a2);
          uint64_t v13 = 0;
          uint64_t v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

      goto LABEL_72;
    }

    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v5 = a3 + 87;
        if (a3 > 10)
        {
          uint64_t v6 = a3 + 55;
        }

        else
        {
          uint64_t v5 = 97;
          uint64_t v6 = 65;
        }

        if (a3 <= 10) {
          uint64_t v7 = a3 + 48;
        }
        else {
          uint64_t v7 = 58;
        }
        if (result)
        {
          uint64_t v8 = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            uint64_t v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                uint64_t v12 = 0;
                uint64_t v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                uint64_t v11 = -87;
              }

              else
              {
                uint64_t v11 = -55;
              }
            }

            else
            {
              uint64_t v11 = -48;
            }

            char v14 = (int)v8 * (uint64_t)(int)a3;
            uint64_t v15 = v10 + v11;
            uint64_t v8 = v14 - v15;
            if (__OFSUB__((_DWORD)v14, v15)) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }

unint64_t sub_10021CEC8()
{
  unint64_t result = qword_100363198;
  if (!qword_100363198)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D70F8, &type metadata for Proto_Gnss_Result);
    atomic_store(result, (unint64_t *)&qword_100363198);
  }

  return result;
}

unint64_t sub_10021CF10()
{
  unint64_t result = qword_1003631A0;
  if (!qword_1003631A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7180, &type metadata for Proto_Gnss_Result);
    atomic_store(result, (unint64_t *)&qword_1003631A0);
  }

  return result;
}

uint64_t sub_10021CF54()
{
  return sub_100010014(&qword_1003631A8, &qword_1003631B0);
}

unint64_t sub_10021CF7C()
{
  unint64_t result = qword_1003631B8;
  if (!qword_1003631B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D71F0, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&qword_1003631B8);
  }

  return result;
}

unint64_t sub_10021CFC4()
{
  unint64_t result = qword_1003631C0;
  if (!qword_1003631C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7218, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&qword_1003631C0);
  }

  return result;
}

unint64_t sub_10021D00C()
{
  unint64_t result = qword_1003631C8;
  if (!qword_1003631C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D72A0, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&qword_1003631C8);
  }

  return result;
}

uint64_t sub_10021D050()
{
  return sub_100010014(&qword_1003631D0, &qword_1003631D8);
}

unint64_t sub_10021D078()
{
  unint64_t result = qword_1003631E0;
  if (!qword_1003631E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7310, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&qword_1003631E0);
  }

  return result;
}

unint64_t sub_10021D0C0()
{
  unint64_t result = qword_1003631E8;
  if (!qword_1003631E8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7338, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&qword_1003631E8);
  }

  return result;
}

unint64_t sub_10021D108()
{
  unint64_t result = qword_1003631F0;
  if (!qword_1003631F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D73C0, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&qword_1003631F0);
  }

  return result;
}

uint64_t sub_10021D14C()
{
  return sub_100010014(&qword_1003631F8, &qword_100363200);
}

unint64_t sub_10021D174()
{
  unint64_t result = qword_100363208;
  if (!qword_100363208)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7430, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&qword_100363208);
  }

  return result;
}

unint64_t sub_10021D1BC()
{
  unint64_t result = qword_100363210;
  if (!qword_100363210)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7458, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&qword_100363210);
  }

  return result;
}

unint64_t sub_10021D204()
{
  unint64_t result = qword_100363218;
  if (!qword_100363218)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D74E0, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&qword_100363218);
  }

  return result;
}

uint64_t sub_10021D248()
{
  return sub_100010014(&qword_100363220, &qword_100363228);
}

unint64_t sub_10021D270()
{
  unint64_t result = qword_100363230;
  if (!qword_100363230)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7550, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&qword_100363230);
  }

  return result;
}

unint64_t sub_10021D2B8()
{
  unint64_t result = qword_100363238;
  if (!qword_100363238)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7578, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&qword_100363238);
  }

  return result;
}

unint64_t sub_10021D300()
{
  unint64_t result = qword_100363240;
  if (!qword_100363240)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7600, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&qword_100363240);
  }

  return result;
}

uint64_t sub_10021D344()
{
  return sub_100010014(&qword_100363248, &qword_100363250);
}

unint64_t sub_10021D36C()
{
  unint64_t result = qword_100363258;
  if (!qword_100363258)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7670, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&qword_100363258);
  }

  return result;
}

unint64_t sub_10021D3B4()
{
  unint64_t result = qword_100363260;
  if (!qword_100363260)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7698, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&qword_100363260);
  }

  return result;
}

unint64_t sub_10021D3FC()
{
  unint64_t result = qword_100363268;
  if (!qword_100363268)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7720, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&qword_100363268);
  }

  return result;
}

uint64_t sub_10021D440()
{
  return sub_100010014(&qword_100363270, &qword_100363278);
}

unint64_t sub_10021D468()
{
  unint64_t result = qword_100363280;
  if (!qword_100363280)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7790, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&qword_100363280);
  }

  return result;
}

unint64_t sub_10021D4B0()
{
  unint64_t result = qword_100363288;
  if (!qword_100363288)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D77B8, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&qword_100363288);
  }

  return result;
}

unint64_t sub_10021D4F8()
{
  unint64_t result = qword_100363290;
  if (!qword_100363290)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7840, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&qword_100363290);
  }

  return result;
}

uint64_t sub_10021D53C()
{
  return sub_100010014(&qword_100363298, &qword_1003632A0);
}

unint64_t sub_10021D564()
{
  unint64_t result = qword_1003632A8;
  if (!qword_1003632A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D78B0, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&qword_1003632A8);
  }

  return result;
}

unint64_t sub_10021D5AC()
{
  unint64_t result = qword_1003632B0;
  if (!qword_1003632B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D78D8, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&qword_1003632B0);
  }

  return result;
}

unint64_t sub_10021D5F4()
{
  unint64_t result = qword_1003632B8;
  if (!qword_1003632B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7960, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&qword_1003632B8);
  }

  return result;
}

uint64_t sub_10021D638()
{
  return sub_100010014(&qword_1003632C0, &qword_1003632C8);
}

unint64_t sub_10021D660()
{
  unint64_t result = qword_1003632D0;
  if (!qword_1003632D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D79D0, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&qword_1003632D0);
  }

  return result;
}

unint64_t sub_10021D6A8()
{
  unint64_t result = qword_1003632D8;
  if (!qword_1003632D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D79F8, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&qword_1003632D8);
  }

  return result;
}

unint64_t sub_10021D6F0()
{
  unint64_t result = qword_1003632E0;
  if (!qword_1003632E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7A80, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&qword_1003632E0);
  }

  return result;
}

uint64_t sub_10021D734()
{
  return sub_100010014(&qword_1003632E8, &qword_1003632F0);
}

unint64_t sub_10021D75C()
{
  unint64_t result = qword_1003632F8;
  if (!qword_1003632F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7AF0, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_1003632F8);
  }

  return result;
}

unint64_t sub_10021D7A4()
{
  unint64_t result = qword_100363300;
  if (!qword_100363300)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7B18, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_100363300);
  }

  return result;
}

unint64_t sub_10021D7EC()
{
  unint64_t result = qword_100363308;
  if (!qword_100363308)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7BA0, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_100363308);
  }

  return result;
}

uint64_t sub_10021D830()
{
  return sub_100010014(&qword_100363310, &qword_100363318);
}

unint64_t sub_10021D858()
{
  unint64_t result = qword_100363320;
  if (!qword_100363320)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7C10, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&qword_100363320);
  }

  return result;
}

unint64_t sub_10021D8A0()
{
  unint64_t result = qword_100363328;
  if (!qword_100363328)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7C38, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&qword_100363328);
  }

  return result;
}

unint64_t sub_10021D8E8()
{
  unint64_t result = qword_100363330;
  if (!qword_100363330)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7CC0, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&qword_100363330);
  }

  return result;
}

uint64_t sub_10021D92C()
{
  return sub_100010014(&qword_100363338, &qword_100363340);
}

unint64_t sub_10021D954()
{
  unint64_t result = qword_100363348;
  if (!qword_100363348)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7D30, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&qword_100363348);
  }

  return result;
}

unint64_t sub_10021D99C()
{
  unint64_t result = qword_100363350;
  if (!qword_100363350)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7D58, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&qword_100363350);
  }

  return result;
}

unint64_t sub_10021D9E4()
{
  unint64_t result = qword_100363358;
  if (!qword_100363358)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7DE0, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&qword_100363358);
  }

  return result;
}

uint64_t sub_10021DA28()
{
  return sub_100010014(&qword_100363360, &qword_100363368);
}

uint64_t sub_10021DA4C()
{
  return sub_10000FD98(&qword_100363370, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D80E0);
}

uint64_t sub_10021DA78()
{
  return sub_10000FD98(&qword_100363378, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8008);
}

uint64_t sub_10021DAA4()
{
  return sub_10000FD98(&qword_100363138, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8108);
}

uint64_t sub_10021DAD0()
{
  return sub_10000FD98(&qword_100363380, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8148);
}

uint64_t sub_10021DAFC()
{
  return sub_10000FD98(&qword_100363388, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D8248);
}

uint64_t sub_10021DB28()
{
  return sub_10000FD98(&qword_100363390, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D8170);
}

uint64_t sub_10021DB54()
{
  return sub_10000FD98(&qword_100363140, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D8270);
}

uint64_t sub_10021DB80()
{
  return sub_10000FD98(&qword_100363398, type metadata accessor for Proto_Gnss_Velocity, (uint64_t)&unk_1002D82B0);
}

uint64_t sub_10021DBAC()
{
  return sub_10000FD98(&qword_1003633A0, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D83B0);
}

uint64_t sub_10021DBD8()
{
  return sub_10000FD98(&qword_1003633A8, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D82D8);
}

uint64_t sub_10021DC04()
{
  return sub_10000FD98(&qword_100363148, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D83D8);
}

uint64_t sub_10021DC30()
{
  return sub_10000FD98(&qword_1003633B0, type metadata accessor for Proto_Gnss_Time, (uint64_t)&unk_1002D8418);
}

uint64_t sub_10021DC5C()
{
  return sub_10000FD98(&qword_1003633B8, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8518);
}

uint64_t sub_10021DC88()
{
  return sub_10000FD98(&qword_1003633C0, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8440);
}

uint64_t sub_10021DCB4()
{
  return sub_10000FD98(&qword_100363150, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8540);
}

uint64_t sub_10021DCE0()
{
  return sub_10000FD98(&qword_1003633C8, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8580);
}

uint64_t sub_10021DD0C()
{
  return sub_10000FD98( &qword_1003633D0,  type metadata accessor for Proto_Gnss_TimeTransferData,  (uint64_t)&unk_1002D8680);
}

uint64_t sub_10021DD38()
{
  return sub_10000FD98( &qword_1003633D8,  type metadata accessor for Proto_Gnss_TimeTransferData,  (uint64_t)&unk_1002D85A8);
}

uint64_t sub_10021DD64()
{
  return sub_10000FD98( &qword_100363158,  type metadata accessor for Proto_Gnss_TimeTransferData,  (uint64_t)&unk_1002D86A8);
}

uint64_t sub_10021DD90()
{
  return sub_10000FD98( &qword_1003633E0,  type metadata accessor for Proto_Gnss_TimeTransferData,  (uint64_t)&unk_1002D86E8);
}

uint64_t sub_10021DDBC()
{
  return sub_10000FD98( &qword_1003633E8,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D87E8);
}

uint64_t sub_10021DDE8()
{
  return sub_10000FD98( &qword_1003633F0,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8710);
}

uint64_t sub_10021DE14()
{
  return sub_10000FD98( &qword_100363160,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8810);
}

uint64_t sub_10021DE40()
{
  return sub_10000FD98( &qword_1003633F8,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8850);
}

uint64_t sub_10021DE6C()
{
  return sub_10000FD98( &qword_100363400,  type metadata accessor for Proto_Gnss_RawPressureSample,  (uint64_t)&unk_1002D8950);
}

uint64_t sub_10021DE98()
{
  return sub_10000FD98( &qword_100363408,  type metadata accessor for Proto_Gnss_RawPressureSample,  (uint64_t)&unk_1002D8878);
}

uint64_t sub_10021DEC4()
{
  return sub_10000FD98( &qword_100363168,  type metadata accessor for Proto_Gnss_RawPressureSample,  (uint64_t)&unk_1002D8978);
}

uint64_t sub_10021DEF0()
{
  return sub_10000FD98( &qword_100363410,  type metadata accessor for Proto_Gnss_RawPressureSample,  (uint64_t)&unk_1002D89B8);
}

uint64_t sub_10021DF1C()
{
  return sub_10000FD98( &qword_100363418,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  (uint64_t)&unk_1002D8AB8);
}

uint64_t sub_10021DF48()
{
  return sub_10000FD98( &qword_100363420,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  (uint64_t)&unk_1002D89E0);
}

uint64_t sub_10021DF74()
{
  return sub_10000FD98( &qword_100363170,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  (uint64_t)&unk_1002D8AE0);
}

uint64_t sub_10021DFA0()
{
  return sub_10000FD98( &qword_100363428,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  (uint64_t)&unk_1002D8B20);
}

uint64_t sub_10021DFCC()
{
  return sub_10000FD98(&qword_100363430, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8C20);
}

uint64_t sub_10021DFF8()
{
  return sub_10000FD98(&qword_100363438, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8B48);
}

uint64_t sub_10021E024()
{
  return sub_10000FD98(&qword_100363178, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8C48);
}

uint64_t sub_10021E050()
{
  return sub_10000FD98(&qword_100363440, type metadata accessor for Proto_Gnss_SvId, (uint64_t)&unk_1002D8C88);
}

uint64_t sub_10021E07C()
{
  return sub_10000FD98(&qword_100363448, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8D88);
}

uint64_t sub_10021E0A8()
{
  return sub_10000FD98(&qword_100363450, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8CB0);
}

uint64_t sub_10021E0D4()
{
  return sub_10000FD98(&qword_100363180, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8DB0);
}

uint64_t sub_10021E100()
{
  return sub_10000FD98(&qword_100363458, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8DF0);
}

uint64_t sub_10021E12C()
{
  return sub_10000FD98(&qword_100363460, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8F18);
}

uint64_t sub_10021E158()
{
  return sub_10000FD98(&qword_100363468, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8E40);
}

uint64_t sub_10021E184()
{
  return sub_10000FD98(&qword_100363188, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8F40);
}

uint64_t sub_10021E1B0()
{
  return sub_10000FD98(&qword_100363470, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8F80);
}

uint64_t sub_10021E1DC()
{
  return sub_10000FD98( &qword_100363478,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D9080);
}

uint64_t sub_10021E208()
{
  return sub_10000FD98( &qword_100363480,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D8FA8);
}

uint64_t sub_10021E234()
{
  return sub_10000FD98( &qword_100363190,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D90A8);
}

uint64_t sub_10021E260()
{
  return sub_10000FD98( &qword_100363488,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D90E8);
}

ValueMetadata *type metadata accessor for Proto_Gnss_Result()
{
  return &type metadata for Proto_Gnss_Result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_GnssContent()
{
  return &type metadata for Proto_Gnss_GnssContent;
}

ValueMetadata *type metadata accessor for Proto_Gnss_EstimationTechnology()
{
  return &type metadata for Proto_Gnss_EstimationTechnology;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_TimeQuality(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_10021E314 + 4 * byte_1002D705C[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10021E348 + 4 * byte_1002D7057[v4]))();
}

uint64_t sub_10021E348(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E350(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021E358LL);
  }
  return result;
}

uint64_t sub_10021E364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021E36CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_10021E370(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E378(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_TimeQuality()
{
  return &type metadata for Proto_Gnss_TimeQuality;
}

ValueMetadata *type metadata accessor for Proto_Gnss_PositionAssistType()
{
  return &type metadata for Proto_Gnss_PositionAssistType;
}

uint64_t _s10ALProtobuf32Proto_Gnss_MotionActivityContextOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF6) {
    return ((uint64_t (*)(void))((char *)&loc_10021E3F4 + 4 * byte_1002D7066[v4]))();
  }
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_10021E428 + 4 * byte_1002D7061[v4]))();
}

uint64_t sub_10021E428(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E430(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021E438LL);
  }
  return result;
}

uint64_t sub_10021E444(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021E44CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 9;
  return result;
}

uint64_t sub_10021E450(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E458(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_MotionActivityContext()
{
  return &type metadata for Proto_Gnss_MotionActivityContext;
}

uint64_t _s10ALProtobuf22Proto_Gnss_MovingStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_10021E4C0 + 4 * byte_1002D7070[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10021E4F4 + 4 * byte_1002D706B[v4]))();
}

uint64_t sub_10021E4F4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E4FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021E504LL);
  }
  return result;
}

uint64_t sub_10021E510(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021E518LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_10021E51C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E524(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_MovingState()
{
  return &type metadata for Proto_Gnss_MovingState;
}

uint64_t _s10ALProtobuf22Proto_Gnss_ReliabilityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFA) {
    return ((uint64_t (*)(void))((char *)&loc_10021E58C + 4 * byte_1002D707A[v4]))();
  }
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_10021E5C0 + 4 * byte_1002D7075[v4]))();
}

uint64_t sub_10021E5C0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E5C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021E5D0LL);
  }
  return result;
}

uint64_t sub_10021E5DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021E5E4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 5;
  return result;
}

uint64_t sub_10021E5E8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E5F0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_Reliability()
{
  return &type metadata for Proto_Gnss_Reliability;
}

uint64_t _s10ALProtobuf29Proto_Gnss_PositionAssistTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_10021E658 + 4 * byte_1002D7084[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10021E68C + 4 * byte_1002D707F[v4]))();
}

uint64_t sub_10021E68C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021E69CLL);
  }
  return result;
}

uint64_t sub_10021E6A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021E6B0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_10021E6B4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E6BC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_DeviceMountState()
{
  return &type metadata for Proto_Gnss_DeviceMountState;
}

uint64_t storeEnumTagSinglePayload for Proto_Gnss_SignalEnvironmentType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF8) {
    return ((uint64_t (*)(void))((char *)&loc_10021E724 + 4 * byte_1002D708E[v4]))();
  }
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10021E758 + 4 * byte_1002D7089[v4]))();
}

uint64_t sub_10021E758(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10021E768LL);
  }
  return result;
}

uint64_t sub_10021E774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10021E77CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 7;
  return result;
}

uint64_t sub_10021E780(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021E788(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_SignalEnvironmentType()
{
  return &type metadata for Proto_Gnss_SignalEnvironmentType;
}

ValueMetadata *type metadata accessor for Proto_Gnss_DeleteGnssDataBitMask()
{
  return &type metadata for Proto_Gnss_DeleteGnssDataBitMask;
}

void *sub_10021E7BC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (void *)(v40 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v40);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    void v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    int v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)int v16 = *(void *)v17;
    void v16[8] = v17[8];
    int v18 = (char *)a1 + v15;
    char v19 = (char *)a2 + v15;
    v18[8] = v19[8];
    *(void *)int v18 = *(void *)v19;
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    int v23 = (char *)a2 + v20;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    char v24 = (char *)a1 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    uint64_t v28 = (char *)a1 + v26;
    char v29 = (char *)a2 + v26;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = (char *)a1 + v27;
    int v31 = (char *)a2 + v27;
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = a3[13];
    uint64_t v33 = a3[14];
    char v34 = (char *)a1 + v32;
    uint64_t v35 = (char *)a2 + v32;
    *(_DWORD *)char v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    *((_BYTE *)a1 + v33) = *((_BYTE *)a2 + v33);
    uint64_t v36 = a3[15];
    uint64_t v37 = a3[16];
    uint64_t v38 = (char *)a1 + v36;
    char v39 = (char *)a2 + v36;
    *(void *)uint64_t v38 = *(void *)v39;
    v38[8] = v39[8];
    *((_BYTE *)a1 + v37) = *((_BYTE *)a2 + v37);
  }

  return a1;
}

uint64_t sub_10021E950(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  uint64_t v35 = a3[15];
  uint64_t v36 = a3[16];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t sub_10021EAB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(_BYTE *)(v18 + 8) = v10;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = v10;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = v10;
  uint64_t v26 = a3[11];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 8);
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = v10;
  uint64_t v29 = a3[12];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(_BYTE *)(v30 + 8) = v10;
  uint64_t v32 = a3[13];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  LOBYTE(v10) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = v10;
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  uint64_t v35 = a3[15];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  *(_BYTE *)(v36 + 8) = *((_BYTE *)v37 + 8);
  *(void *)uint64_t v36 = v38;
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_10021EC38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  uint64_t v35 = a3[15];
  uint64_t v36 = a3[16];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t sub_10021EDA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(void *)uint64_t v17 = *(void *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(void *)uint64_t v23 = *(void *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  uint64_t v25 = a3[11];
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v25;
  uint64_t v28 = a2 + v25;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  uint64_t v29 = a1 + v26;
  uint64_t v30 = a2 + v26;
  *(void *)uint64_t v29 = *(void *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
  uint64_t v31 = a3[13];
  uint64_t v32 = a3[14];
  uint64_t v33 = a1 + v31;
  uint64_t v34 = a2 + v31;
  *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  uint64_t v35 = a3[15];
  uint64_t v36 = a3[16];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  *(_BYTE *)(v37 + 8) = *(_BYTE *)(v38 + 8);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  return a1;
}

uint64_t sub_10021EF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021EF14);
}

uint64_t sub_10021EF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 56));
  }
  unsigned int v10 = v9 - 6;
  else {
    return 0LL;
  }
}

uint64_t sub_10021EF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021EFA4);
}

uint64_t sub_10021EFA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 56)) = a2 + 6;
  return result;
}

uint64_t sub_10021F01C(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "\t";
    v4[2] = "\t";
    v4[3] = "\t";
    v4[4] = "\t";
    v4[5] = "\t";
    v4[6] = "\t";
    void v4[7] = "\t";
    void v4[8] = "\t";
    v4[9] = &unk_1002D92E0;
    void v4[10] = &unk_1002D92F8;
    v4[11] = "\t";
    v4[12] = &unk_1002D92F8;
    swift_initStructMetadata(a1, 256LL, 13LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t *sub_10021F0B4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v27);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unsigned int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)unsigned int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    void v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    void v16[8] = v17[8];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    uint64_t v24 = *(void *)v23;
    v22[8] = v23[8];
    *(void *)uint64_t v22 = v24;
    uint64_t v25 = (char *)a1 + v21;
    uint64_t v26 = (char *)a2 + v21;
    v25[8] = v26[8];
    *(void *)uint64_t v25 = *(void *)v26;
  }

  return a1;
}

uint64_t sub_10021F1CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  return a1;
}

uint64_t sub_10021F2B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 8);
  *(void *)uint64_t v16 = *(void *)v17;
  *(_BYTE *)(v16 + 8) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 8);
  *(void *)uint64_t v20 = *(void *)v21;
  *(_BYTE *)(v20 + 8) = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  char v26 = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = v26;
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  char v30 = *(_BYTE *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(_BYTE *)(v28 + 8) = v30;
  return a1;
}

uint64_t sub_10021F3B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  char v22 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  return a1;
}

uint64_t sub_10021F49C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  char v22 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a1 + v20;
  uint64_t v25 = a2 + v20;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  return a1;
}

uint64_t sub_10021F588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021F594);
}

uint64_t sub_10021F598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021F5A4);
}

uint64_t sub_10021F5A8(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "\t";
    v4[2] = "\t";
    v4[3] = "\t";
    v4[4] = "\t";
    v4[5] = "\t";
    v4[6] = "\t";
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_10021F624(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *a1 = *a2;
    a1 = (void *)(v33 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v33);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    void v12[4] = v13[4];
    uint64_t v14 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    uint64_t v17 = a3[9];
    uint64_t v18 = a3[10];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = (char *)a1 + v18;
    char v22 = (char *)a2 + v18;
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = a3[11];
    uint64_t v24 = a3[12];
    uint64_t v25 = (char *)a1 + v23;
    char v26 = (char *)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = (char *)a1 + v24;
    uint64_t v28 = (char *)a2 + v24;
    uint64_t v29 = *(void *)v28;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = v29;
    uint64_t v30 = a3[13];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    *(void *)uint64_t v31 = *(void *)v32;
    v31[8] = v32[8];
  }

  return a1;
}

uint64_t sub_10021F77C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = (uint64_t *)(a2 + v23);
  uint64_t v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t sub_10021F8A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LODWORD(v10) = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = v10;
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(_BYTE *)(v18 + 8) = v10;
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = v10;
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 8);
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = v10;
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  LOBYTE(v10) = *(_BYTE *)(v28 + 8);
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = v10;
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  LOBYTE(v10) = *(_BYTE *)(v31 + 8);
  *(void *)uint64_t v30 = *(void *)v31;
  *(_BYTE *)(v30 + 8) = v10;
  return a1;
}

uint64_t sub_10021F9E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = (uint64_t *)(a2 + v23);
  uint64_t v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t sub_10021FB10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  *(_BYTE *)(v14 + 4) = *(_BYTE *)(v15 + 4);
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  uint64_t v20 = a1 + v17;
  uint64_t v21 = a2 + v17;
  *(void *)uint64_t v20 = *(void *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  *(void *)uint64_t v24 = *(void *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  uint64_t v26 = a1 + v23;
  uint64_t v27 = (uint64_t *)(a2 + v23);
  uint64_t v28 = *v27;
  *(_BYTE *)(v26 + 8) = *((_BYTE *)v27 + 8);
  *(void *)uint64_t v26 = v28;
  uint64_t v29 = a3[13];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  *(_BYTE *)(v30 + 8) = *(_BYTE *)(v31 + 8);
  return a1;
}

uint64_t sub_10021FC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021FC48);
}

uint64_t sub_10021FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2) {
    int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v10 = -2;
  }
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10021FCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021FCEC);
}

uint64_t sub_10021FCEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

uint64_t sub_10021FD64(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = "\t";
    v4[2] = &unk_1002D92E0;
    v4[3] = &unk_1002D9338;
    v4[4] = &unk_1002D92E0;
    v4[5] = "\t";
    v4[6] = "\t";
    void v4[7] = "\t";
    void v4[8] = "\t";
    v4[9] = "\t";
    swift_initStructMetadata(a1, 256LL, 10LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_10021FDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10021FE00);
}

uint64_t sub_10021FE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10021FE10);
}

char *sub_10021FE14(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    a1[a3[5]] = a2[a3[5]];
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_100363118);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      uint64_t v20 = &v10[v19];
      uint64_t v21 = &v11[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v10[v12[7]] = v11[v12[7]];
      uint64_t v22 = v12[8];
      uint64_t v23 = &v10[v22];
      uint64_t v24 = &v11[v22];
      *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
      v23[4] = v24[4];
      uint64_t v25 = v12[9];
      uint64_t v26 = &v10[v25];
      uint64_t v27 = &v11[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v12[10];
      uint64_t v29 = &v10[v28];
      uint64_t v30 = &v11[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      v29[8] = v30[8];
      uint64_t v31 = v12[11];
      uint64_t v32 = &v10[v31];
      uint64_t v33 = &v11[v31];
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      uint64_t v34 = v12[12];
      uint64_t v35 = &v10[v34];
      uint64_t v36 = &v11[v34];
      v35[8] = v36[8];
      *(void *)uint64_t v35 = *(void *)v36;
      uint64_t v37 = v12[13];
      uint64_t v38 = &v10[v37];
      char v39 = &v11[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v39[8];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v40 = a3[8];
    a1[a3[7]] = a2[a3[7]];
    int v41 = &a1[v40];
    uint64_t v42 = &a2[v40];
    v41[4] = v42[4];
    *(_DWORD *)int v41 = *(_DWORD *)v42;
    uint64_t v43 = a3[9];
    uint64_t v44 = a3[10];
    uint64_t v45 = &a1[v43];
    int v46 = &a2[v43];
    v45[8] = v46[8];
    *(void *)uint64_t v45 = *(void *)v46;
    uint64_t v47 = &a1[v44];
    int v48 = &a2[v44];
    v47[8] = v48[8];
    *(void *)uint64_t v47 = *(void *)v48;
  }

  return a1;
}

uint64_t sub_100220078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

uint64_t sub_100220118(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_100363118);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v9[v11[7]] = v10[v11[7]];
    uint64_t v20 = v11[8];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = v11[9];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v11[10];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v11[11];
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[12];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    v33[8] = v34[8];
    *(void *)uint64_t v33 = *(void *)v34;
    uint64_t v35 = v11[13];
    uint64_t v36 = &v9[v35];
    uint64_t v37 = &v10[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v38 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  uint64_t v41 = a3[9];
  uint64_t v42 = a3[10];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(void *)uint64_t v43 = *(void *)v44;
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  *(void *)uint64_t v45 = *(void *)v46;
  return a1;
}

uint64_t sub_100220350(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v81 = a3;
  uint64_t v9 = a3[6];
  int v10 = (_BYTE *)(a1 + v9);
  uint64_t v11 = (_BYTE *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v80 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v80 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v55 = v12[5];
      int v56 = &v10[v55];
      uint64_t v57 = &v11[v55];
      uint64_t v58 = *(void *)v57;
      v56[8] = v57[8];
      *(void *)int v56 = v58;
      uint64_t v59 = v12[6];
      uint64_t v60 = &v10[v59];
      char v61 = &v11[v59];
      LOBYTE(v58) = v61[4];
      *(_DWORD *)uint64_t v60 = *(_DWORD *)v61;
      v60[4] = v58;
      v10[v12[7]] = v11[v12[7]];
      uint64_t v62 = v12[8];
      int v63 = &v10[v62];
      int v64 = &v11[v62];
      LODWORD(v58) = *(_DWORD *)v64;
      v63[4] = v64[4];
      *(_DWORD *)int v63 = v58;
      uint64_t v65 = v12[9];
      int v66 = &v10[v65];
      int v67 = &v11[v65];
      LOBYTE(v58) = v67[8];
      *(void *)int v66 = *(void *)v67;
      v66[8] = v58;
      uint64_t v68 = v12[10];
      uint64_t v69 = &v10[v68];
      uint64_t v70 = &v11[v68];
      LOBYTE(v58) = v70[8];
      *(void *)uint64_t v69 = *(void *)v70;
      v69[8] = v58;
      uint64_t v71 = v12[11];
      uint64_t v72 = &v10[v71];
      uint64_t v73 = &v11[v71];
      LOBYTE(v58) = v73[8];
      *(void *)uint64_t v72 = *(void *)v73;
      v72[8] = v58;
      uint64_t v74 = v12[12];
      uint64_t v75 = &v10[v74];
      uint64_t v76 = &v11[v74];
      LOBYTE(v58) = v76[8];
      *(void *)uint64_t v75 = *(void *)v76;
      v75[8] = v58;
      uint64_t v77 = v12[13];
      uint64_t v78 = &v10[v77];
      uint64_t v79 = &v11[v77];
      LOBYTE(v58) = v79[8];
      *(void *)uint64_t v78 = *(void *)v79;
      v78[8] = v58;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Time);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v41 = sub_100003A0C(&qword_100363118);
    memcpy(v10, v11, *(void *)(*(void *)(v41 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v16 = v12[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = v12[6];
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  LOBYTE(v19) = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v21[4] = v19;
  v10[v12[7]] = v11[v12[7]];
  uint64_t v23 = v12[8];
  uint64_t v24 = &v10[v23];
  uint64_t v25 = &v11[v23];
  LODWORD(v19) = *(_DWORD *)v25;
  v24[4] = v25[4];
  *(_DWORD *)uint64_t v24 = v19;
  uint64_t v26 = v12[9];
  uint64_t v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  LOBYTE(v19) = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v19;
  uint64_t v29 = v12[10];
  uint64_t v30 = &v10[v29];
  uint64_t v31 = &v11[v29];
  LOBYTE(v19) = v31[8];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v19;
  uint64_t v32 = v12[11];
  uint64_t v33 = &v10[v32];
  uint64_t v34 = &v11[v32];
  LOBYTE(v19) = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v19;
  uint64_t v35 = v12[12];
  uint64_t v36 = &v10[v35];
  uint64_t v37 = &v11[v35];
  LOBYTE(v19) = v37[8];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v19;
  uint64_t v38 = v12[13];
  uint64_t v39 = &v10[v38];
  uint64_t v40 = &v11[v38];
  LOBYTE(v19) = v40[8];
  *(void *)uint64_t v39 = *(void *)v40;
  v39[8] = v19;
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v80 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  *(_BYTE *)(a1 + v81[7]) = *(_BYTE *)(a2 + v81[7]);
  uint64_t v42 = v81[8];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = (int *)(a2 + v42);
  int v45 = *v44;
  *(_BYTE *)(v43 + 4) = *((_BYTE *)v44 + 4);
  *(_DWORD *)uint64_t v43 = v45;
  uint64_t v46 = v81[9];
  uint64_t v47 = a1 + v46;
  int v48 = (uint64_t *)(a2 + v46);
  uint64_t v49 = *v48;
  *(_BYTE *)(v47 + 8) = *((_BYTE *)v48 + 8);
  *(void *)uint64_t v47 = v49;
  uint64_t v50 = v81[10];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v53 = *v52;
  *(_BYTE *)(v51 + 8) = *((_BYTE *)v52 + 8);
  *(void *)uint64_t v51 = v53;
  return a1;
}

uint64_t sub_1002206DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v9 = (char *)(a1 + v8);
  int v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_100363118);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v9[v11[7]] = v10[v11[7]];
    uint64_t v20 = v11[8];
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    uint64_t v23 = v11[9];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v11[10];
    uint64_t v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v11[11];
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[12];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    v33[8] = v34[8];
    *(void *)uint64_t v33 = *(void *)v34;
    uint64_t v35 = v11[13];
    uint64_t v36 = &v9[v35];
    uint64_t v37 = &v10[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v38 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
  uint64_t v41 = a3[9];
  uint64_t v42 = a3[10];
  uint64_t v43 = a1 + v41;
  uint64_t v44 = a2 + v41;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  *(void *)uint64_t v43 = *(void *)v44;
  uint64_t v45 = a1 + v42;
  uint64_t v46 = a2 + v42;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  *(void *)uint64_t v45 = *(void *)v46;
  return a1;
}

uint64_t sub_100220914(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  uint64_t v76 = a3;
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  int v10 = (_BYTE *)(a1 + v9);
  uint64_t v11 = (_BYTE *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Time(0LL);
  uint64_t v75 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v75 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v51 = v12[5];
      uint64_t v52 = &v10[v51];
      uint64_t v53 = &v11[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      v52[8] = v53[8];
      uint64_t v54 = v12[6];
      uint64_t v55 = &v10[v54];
      int v56 = &v11[v54];
      *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
      v55[4] = v56[4];
      v10[v12[7]] = v11[v12[7]];
      uint64_t v57 = v12[8];
      uint64_t v58 = &v10[v57];
      uint64_t v59 = &v11[v57];
      *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
      v58[4] = v59[4];
      uint64_t v60 = v12[9];
      char v61 = &v10[v60];
      uint64_t v62 = &v11[v60];
      *(void *)char v61 = *(void *)v62;
      v61[8] = v62[8];
      uint64_t v63 = v12[10];
      int v64 = &v10[v63];
      uint64_t v65 = &v11[v63];
      *(void *)int v64 = *(void *)v65;
      v64[8] = v65[8];
      uint64_t v66 = v12[11];
      int v67 = &v10[v66];
      uint64_t v68 = &v11[v66];
      *(void *)int v67 = *(void *)v68;
      v67[8] = v68[8];
      uint64_t v69 = v12[12];
      uint64_t v70 = &v10[v69];
      uint64_t v71 = &v11[v69];
      v70[8] = v71[8];
      *(void *)uint64_t v70 = *(void *)v71;
      uint64_t v72 = v12[13];
      uint64_t v73 = &v10[v72];
      uint64_t v74 = &v11[v72];
      *(void *)uint64_t v73 = *(void *)v74;
      v73[8] = v74[8];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Time);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v40 = sub_100003A0C(&qword_100363118);
    memcpy(v10, v11, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v16 = v12[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = v12[6];
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v10[v12[7]] = v11[v12[7]];
  uint64_t v22 = v12[8];
  uint64_t v23 = &v10[v22];
  uint64_t v24 = &v11[v22];
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  v23[4] = v24[4];
  uint64_t v25 = v12[9];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = v12[10];
  uint64_t v29 = &v10[v28];
  uint64_t v30 = &v11[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = v12[11];
  uint64_t v32 = &v10[v31];
  uint64_t v33 = &v11[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = v12[12];
  uint64_t v35 = &v10[v34];
  uint64_t v36 = &v11[v34];
  v35[8] = v36[8];
  *(void *)uint64_t v35 = *(void *)v36;
  uint64_t v37 = v12[13];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v75 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v41 = v76[8];
  *(_BYTE *)(a1 + v76[7]) = *(_BYTE *)(a2 + v76[7]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(_BYTE *)(v42 + 4) = *(_BYTE *)(v43 + 4);
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  uint64_t v44 = v76[9];
  uint64_t v45 = v76[10];
  uint64_t v46 = a1 + v44;
  uint64_t v47 = a2 + v44;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  *(void *)uint64_t v46 = *(void *)v47;
  uint64_t v48 = a1 + v45;
  uint64_t v49 = a2 + v45;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  *(void *)uint64_t v48 = *(void *)v49;
  return a1;
}

uint64_t sub_100220C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100220CA0);
}

uint64_t sub_100220CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
    return v9(v10, a2, v8);
  }

  if ((_DWORD)a2 != 253)
  {
    uint64_t v8 = sub_100003A0C(&qword_100363118);
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL);
    return v9(v10, a2, v8);
  }

  unsigned int v11 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v11 >= 2) {
    int v12 = ((v11 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v12 = -2;
  }
  if (v12 < 0) {
    int v12 = -1;
  }
  return (v12 + 1);
}

uint64_t sub_100220D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100220D70);
}

uint64_t sub_100220D70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
      return result;
    }

    uint64_t v10 = sub_100003A0C(&qword_100363118);
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100220E14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    v6[1] = &unk_1002D9338;
    sub_1000119EC(319LL, (unint64_t *)&unk_100363750, type metadata accessor for Proto_Gnss_Time);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      v6[3] = &unk_1002D9380;
      void v6[4] = &unk_1002D92E0;
      v6[5] = "\t";
      v6[6] = "\t";
      swift_initStructMetadata(a1, 256LL, 7LL, v6, a1 + 16);
    }
  }

uint64_t sub_100220ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100220EDC);
}

uint64_t sub_100220EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100220EEC);
}

uint64_t sub_100220EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100220EFC);
}

uint64_t sub_100220F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100220F0C);
}

uint64_t sub_100220F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100221860(a1, a2, a3, (uint64_t)&unk_1002D92E0);
}

uint64_t *sub_100220F1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v20);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    unsigned int v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    void v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    void v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }

  return a1;
}

uint64_t sub_100221000(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1002210B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  char v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  char v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  return a1;
}

uint64_t sub_100221178(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_100221230(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  return a1;
}

uint64_t sub_1002212E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002212F4);
}

uint64_t sub_1002212F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100221304);
}

uint64_t sub_100221308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100221C40(a1, a2, a3, (uint64_t)&unk_1002D92E0, (uint64_t)&unk_1002D92E0, (uint64_t)&unk_1002D92E0);
}

uint64_t sub_10022131C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100221328);
}

uint64_t sub_10022132C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100221338);
}

uint64_t sub_10022133C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100221474(a1, a2, a3, (uint64_t)&unk_1002D92E0, (uint64_t)&unk_1002D92E0);
}

uint64_t sub_10022134C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100221358);
}

uint64_t sub_100221358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  }
  unsigned int v10 = v9 - 2;
  else {
    return 0LL;
  }
}

uint64_t sub_1002213DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002213E8);
}

uint64_t sub_1002213E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 2;
  return result;
}

uint64_t sub_100221460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100221474(a1, a2, a3, (uint64_t)"\t", (uint64_t)&unk_1002D9338);
}

uint64_t sub_100221474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v9 <= 0x3F)
  {
    v10[0] = *(void *)(result - 8) + 64LL;
    v10[1] = a4;
    v10[2] = a4;
    v10[3] = a4;
    v10[4] = a4;
    void v10[5] = a5;
    swift_initStructMetadata(a1, 256LL, 6LL, v10, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t _s10ALProtobuf25Proto_Gnss_PwrMeasurementV18PowerLoggingStatusOwst_0( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100221540 + 4 * byte_1002D7098[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100221574 + 4 * byte_1002D7093[v4]))();
}

uint64_t sub_100221574(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022157C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100221584LL);
  }
  return result;
}

uint64_t sub_100221590(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100221598LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_10022159C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002215A4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gnss_PwrMeasurement.PowerLoggingStatus()
{
  return &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus;
}

void *sub_1002215C0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unsigned int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)unsigned int v10 = *(void *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
  }

  return a1;
}

uint64_t sub_100221660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1002216D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10022174C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_1002217C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return a1;
}

uint64_t sub_100221834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100221840);
}

uint64_t sub_100221844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100221850);
}

uint64_t sub_100221854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100221860(a1, a2, a3, (uint64_t)&unk_1002D9338);
}

uint64_t sub_100221860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v7 <= 0x3F)
  {
    v8[0] = *(void *)(result - 8) + 64LL;
    v8[1] = "\t";
    v8[2] = a4;
    swift_initStructMetadata(a1, 256LL, 3LL, v8, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_1002218D8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v16);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (char *)a1 + v12;
    uint64_t v15 = (char *)a2 + v12;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  }

  return a1;
}

uint64_t sub_10022199C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_100221A34(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100221AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_100221B6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(a2 + v12);
  return a1;
}

uint64_t sub_100221C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100221C10);
}

uint64_t sub_100221C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100221C20);
}

uint64_t sub_100221C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100221C40(a1, a2, a3, (uint64_t)&unk_1002D9338, (uint64_t)"\t", (uint64_t)&unk_1002D9380);
}

uint64_t sub_100221C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v11 <= 0x3F)
  {
    v12[0] = *(void *)(result - 8) + 64LL;
    v12[1] = "\t";
    v12[2] = a4;
    v12[3] = a5;
    void v12[4] = a6;
    swift_initStructMetadata(a1, 256LL, 5LL, v12, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100221CCC()
{
  return type metadata accessor for Proto_Gnss_Fix._StorageClass(0LL);
}

void sub_100221CD4(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v8[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100363B90, type metadata accessor for Proto_Gnss_Position);
    if (v5 <= 0x3F)
    {
      v8[1] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, (unint64_t *)&unk_100363B98, type metadata accessor for Proto_Gnss_Velocity);
      if (v7 <= 0x3F)
      {
        v8[2] = *(void *)(v6 - 8) + 64LL;
        void v8[3] = "\t";
        v8[4] = &unk_1002D94B8;
        swift_updateClassMetadata2(a1, 256LL, 5LL, v8, a1 + 80);
      }
    }
  }

uint64_t sub_100221DB8()
{
  return type metadata accessor for Proto_Gnss_TimeTransferDataExtend._StorageClass(0LL);
}

void sub_100221DC0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(v2 - 8) + 64LL;
    v4[1] = "\t";
    v4[2] = "\t";
    v4[3] = "\t";
    v4[4] = "\t";
    swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
  }

unint64_t sub_100221E4C()
{
  unint64_t result = qword_100363E60;
  if (!qword_100363E60)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7D98, &type metadata for Proto_Gnss_PwrMeasurement.PowerLoggingStatus);
    atomic_store(result, (unint64_t *)&qword_100363E60);
  }

  return result;
}

unint64_t sub_100221E90()
{
  unint64_t result = qword_100363E68;
  if (!qword_100363E68)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7C78, &type metadata for Proto_Gnss_DeleteGnssDataBitMask);
    atomic_store(result, (unint64_t *)&qword_100363E68);
  }

  return result;
}

unint64_t sub_100221ED4()
{
  unint64_t result = qword_100363E70;
  if (!qword_100363E70)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7B58, &type metadata for Proto_Gnss_SignalEnvironmentType);
    atomic_store(result, (unint64_t *)&qword_100363E70);
  }

  return result;
}

unint64_t sub_100221F18()
{
  unint64_t result = qword_100363E78;
  if (!qword_100363E78)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7A38, &type metadata for Proto_Gnss_DeviceMountState);
    atomic_store(result, (unint64_t *)&qword_100363E78);
  }

  return result;
}

unint64_t sub_100221F5C()
{
  unint64_t result = qword_100363E80;
  if (!qword_100363E80)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7918, &type metadata for Proto_Gnss_Reliability);
    atomic_store(result, (unint64_t *)&qword_100363E80);
  }

  return result;
}

unint64_t sub_100221FA0()
{
  unint64_t result = qword_100363E88;
  if (!qword_100363E88)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D77F8, &type metadata for Proto_Gnss_MovingState);
    atomic_store(result, (unint64_t *)&qword_100363E88);
  }

  return result;
}

unint64_t sub_100221FE4()
{
  unint64_t result = qword_100363E90;
  if (!qword_100363E90)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D76D8, &type metadata for Proto_Gnss_MotionActivityContext);
    atomic_store(result, (unint64_t *)&qword_100363E90);
  }

  return result;
}

unint64_t sub_100222028()
{
  unint64_t result = qword_100363E98;
  if (!qword_100363E98)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D75B8, &type metadata for Proto_Gnss_PositionAssistType);
    atomic_store(result, (unint64_t *)&qword_100363E98);
  }

  return result;
}

unint64_t sub_10022206C()
{
  unint64_t result = qword_100363EA0;
  if (!qword_100363EA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7498, &type metadata for Proto_Gnss_TimeQuality);
    atomic_store(result, (unint64_t *)&qword_100363EA0);
  }

  return result;
}

unint64_t sub_1002220B0()
{
  unint64_t result = qword_100363EA8;
  if (!qword_100363EA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7378, &type metadata for Proto_Gnss_EstimationTechnology);
    atomic_store(result, (unint64_t *)&qword_100363EA8);
  }

  return result;
}

unint64_t sub_1002220F4()
{
  unint64_t result = qword_100363EB0;
  if (!qword_100363EB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D7258, &type metadata for Proto_Gnss_GnssContent);
    atomic_store(result, (unint64_t *)&qword_100363EB0);
  }

  return result;
}

uint64_t sub_100222150()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 24)) {
    return 0LL;
  }
  else {
    return *(void *)(v1 + 16);
  }
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B69B0,  (uint64_t)&nominal type descriptor for CLP_LogEntry_AONLoc_BtAdvertisement);
}

uint64_t sub_1002221B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 16, v12, 1LL, 0LL);
  *(void *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = 0;
  return result;
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B69F0,  (uint64_t)&nominal type descriptor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass);
}

void (*sub_100222274(void *a1))(uint64_t *a1, char a2)
{
  unint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 16, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 16);
  if (*(_BYTE *)(v5 + 24)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_1002222F4;
}

void sub_1002222F4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 80)
                                                                                            + *(int *)(*a1 + 88)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 80);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_1002223C8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 24) & 1) == 0;
}

uint64_t sub_100222418()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 16, v10, 1LL, 0LL);
  *(void *)(v8 + 16) = 0LL;
  *(_BYTE *)(v8 + 24) = 1;
  return result;
}

uint64_t sub_1002224B8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 32, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 40)) {
    return 0LL;
  }
  else {
    return *(void *)(v1 + 32);
  }
}

uint64_t sub_10022250C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 32, v12, 1LL, 0LL);
  *(void *)(v10 + 32) = a1;
  *(_BYTE *)(v10 + 40) = 0;
  return result;
}

void (*sub_1002225B4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 32, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 32);
  if (*(_BYTE *)(v5 + 40)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100222634;
}

void sub_100222634(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 80)
                                                                                            + *(int *)(*a1 + 88)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 80);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100222708()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 32, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 40) & 1) == 0;
}

uint64_t sub_100222758()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 32, v10, 1LL, 0LL);
  *(void *)(v8 + 32) = 0LL;
  *(_BYTE *)(v8 + 40) = 1;
  return result;
}

uint64_t sub_1002227F8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 44, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 48)) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v1 + 44);
  }
}

uint64_t sub_10022284C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 44, v12, 1LL, 0LL);
  *(_DWORD *)(v10 + 44) = a1;
  *(_BYTE *)(v10 + 48) = 0;
  return result;
}

void (*sub_1002228F4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 44, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)(v5 + 44);
  if (*(_BYTE *)(v5 + 48)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100222974;
}

void sub_100222974(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100222A48()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 44, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 48) & 1) == 0;
}

uint64_t sub_100222A98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 44, v10, 1LL, 0LL);
  *(_DWORD *)(v8 + 44) = 0;
  *(_BYTE *)(v8 + 48) = 1;
  return result;
}

uint64_t sub_100222B38()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 52, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 56)) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v1 + 52);
  }
}

uint64_t sub_100222B8C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 52, v12, 1LL, 0LL);
  *(_DWORD *)(v10 + 52) = a1;
  *(_BYTE *)(v10 + 56) = 0;
  return result;
}

void (*sub_100222C34(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 52, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)(v5 + 52);
  if (*(_BYTE *)(v5 + 56)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100222CB4;
}

void sub_100222CB4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100222D88()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 52, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 56) & 1) == 0;
}

uint64_t sub_100222DD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 52, v10, 1LL, 0LL);
  *(_DWORD *)(v8 + 52) = 0;
  *(_BYTE *)(v8 + 56) = 1;
  return result;
}

uint64_t sub_100222E78()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 60, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 64)) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v1 + 60);
  }
}

uint64_t sub_100222ECC(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 60, v12, 1LL, 0LL);
  *(_DWORD *)(v10 + 60) = a1;
  *(_BYTE *)(v10 + 64) = 0;
  return result;
}

void (*sub_100222F74(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 60, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)(v5 + 60);
  if (*(_BYTE *)(v5 + 64)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100222FF4;
}

void sub_100222FF4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_1002230C8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 60, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 64) & 1) == 0;
}

uint64_t sub_100223118()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 60, v10, 1LL, 0LL);
  *(_DWORD *)(v8 + 60) = 0;
  *(_BYTE *)(v8 + 64) = 1;
  return result;
}

uint64_t sub_1002231B8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 72, v6, 0LL, 0LL);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = *(void *)(v1 + 80);
  if (v3 >> 60 == 15) {
    uint64_t v4 = 0LL;
  }
  else {
    uint64_t v4 = *(void *)(v1 + 72);
  }
  sub_10005F2F8(v2, v3);
  return v4;
}

uint64_t sub_100223220(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v2 + v6)) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    uint64_t v8 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v10 = swift_retain(v7);
    sub_1002266F0(v10);
    uint64_t v11 = *(void *)(v3 + v6);
    *(void *)(v3 + v6) = v9;
    swift_release(v11);
  }

  uint64_t v12 = *(void *)(v3 + v6);
  swift_beginAccess(v12 + 72, v16, 1LL, 0LL);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = *(void *)(v12 + 80);
  *(void *)(v12 + 72) = a1;
  *(void *)(v12 + 80) = a2;
  return sub_10005F30C(v13, v14);
}

void (*sub_1002232D0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 72, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = *(void *)(v5 + 80);
  if (v7 >> 60 == 15) {
    uint64_t v8 = 0LL;
  }
  else {
    uint64_t v8 = *(void *)(v5 + 72);
  }
  unint64_t v9 = 0xC000000000000000LL;
  if (v7 >> 60 != 15) {
    unint64_t v9 = *(void *)(v5 + 80);
  }
  v3[9] = v8;
  v3[10] = v9;
  sub_10005F2F8(v6, v7);
  return sub_10022335C;
}

void sub_10022335C(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(int *)(*a1 + 96);
  unint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = *(void *)(*a1 + 88);
  if ((a2 & 1) != 0)
  {
    sub_100017F58(*(void *)(*a1 + 72), v5);
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v6 + v4)) & 1) == 0)
    {
      uint64_t v7 = *(int *)(v2 + 96);
      uint64_t v8 = *(void *)(v2 + 88);
      uint64_t v9 = *(void *)(v8 + v7);
      uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
      uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
      uint64_t v12 = swift_retain(v9);
      sub_1002266F0(v12);
      uint64_t v13 = *(void *)(v8 + v7);
      *(void *)(v8 + v7) = v11;
      swift_release(v13);
    }

    uint64_t v14 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess(v14 + 72, v2 + 24, 1LL, 0LL);
    uint64_t v15 = *(void *)(v14 + 72);
    unint64_t v16 = *(void *)(v14 + 80);
    *(void *)(v14 + 72) = v3;
    *(void *)(v14 + 80) = v5;
    sub_10005F30C(v15, v16);
    sub_100017F9C(*(void *)(v2 + 72), *(void *)(v2 + 80));
  }

  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v6 + v4)) & 1) == 0)
    {
      uint64_t v17 = *(int *)(v2 + 96);
      uint64_t v18 = *(void *)(v2 + 88);
      uint64_t v19 = *(void *)(v18 + v17);
      uint64_t v20 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
      uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      uint64_t v22 = swift_retain(v19);
      sub_1002266F0(v22);
      uint64_t v23 = *(void *)(v18 + v17);
      *(void *)(v18 + v17) = v21;
      swift_release(v23);
    }

    uint64_t v24 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess(v24 + 72, v2 + 48, 1LL, 0LL);
    uint64_t v25 = *(void *)(v24 + 72);
    unint64_t v26 = *(void *)(v24 + 80);
    *(void *)(v24 + 72) = v3;
    *(void *)(v24 + 80) = v5;
    sub_10005F30C(v25, v26);
  }

  free((void *)v2);
}

BOOL sub_1002234B8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 72, v3, 0LL, 0LL);
  return *(void *)(v1 + 80) >> 60 != 15LL;
}

uint64_t sub_10022350C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  swift_beginAccess(v8 + 72, v12, 1LL, 0LL);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = *(void *)(v8 + 80);
  *(_OWORD *)(v8 + 72) = xmmword_1002B4290;
  return sub_10005F30C(v9, v10);
}

uint64_t sub_1002235B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 88, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 88) == 3) {
    return 0LL;
  }
  else {
    return *(unsigned __int8 *)(v1 + 88);
  }
}

uint64_t sub_100223604(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 88, v12, 1LL, 0LL);
  *(_BYTE *)(v10 + 88) = a1;
  return result;
}

void (*sub_1002236A8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 88, v3, 0LL, 0LL);
  int v6 = *(unsigned __int8 *)(v5 + 88);
  if (v6 == 3) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_100223724;
}

void sub_100223724(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_1002237F8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 88, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 88) != 3;
}

uint64_t sub_100223848()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 88, v10, 1LL, 0LL);
  *(_BYTE *)(v8 + 88) = 3;
  return result;
}

uint64_t sub_1002238E4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 96, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 104)) {
    return 0LL;
  }
  else {
    return *(void *)(v1 + 96);
  }
}

uint64_t sub_100223938(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 96, v12, 1LL, 0LL);
  *(void *)(v10 + 96) = a1;
  *(_BYTE *)(v10 + 104) = 0;
  return result;
}

void (*sub_1002239E0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 96, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 96);
  if (*(_BYTE *)(v5 + 104)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100223A60;
}

void sub_100223A60(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 80)
                                                                                            + *(int *)(*a1 + 88)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 80);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100223B34()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 96, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 104) & 1) == 0;
}

uint64_t sub_100223B84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 96, v10, 1LL, 0LL);
  *(void *)(v8 + 96) = 0LL;
  *(_BYTE *)(v8 + 104) = 1;
  return result;
}

uint64_t sub_100223C24()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 112, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 120)) {
    return 0LL;
  }
  else {
    return *(void *)(v1 + 112);
  }
}

uint64_t sub_100223C78(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 112, v12, 1LL, 0LL);
  *(void *)(v10 + 112) = a1;
  *(_BYTE *)(v10 + 120) = 0;
  return result;
}

void (*sub_100223D20(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 112, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 112);
  if (*(_BYTE *)(v5 + 120)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_100223DA0;
}

void sub_100223DA0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 80)
                                                                                            + *(int *)(*a1 + 88)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 80);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100223E74()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 112, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 120) & 1) == 0;
}

uint64_t sub_100223EC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 112, v10, 1LL, 0LL);
  *(void *)(v8 + 112) = 0LL;
  *(_BYTE *)(v8 + 120) = 1;
  return result;
}

uint64_t sub_100223F64()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 124, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 128)) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v1 + 124);
  }
}

uint64_t sub_100223FB8(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_1002266F0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 124, v12, 1LL, 0LL);
  *(_DWORD *)(v10 + 124) = a1;
  *(_BYTE *)(v10 + 128) = 0;
  return result;
}

void (*sub_100224060(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 124, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)(v5 + 124);
  if (*(_BYTE *)(v5 + 128)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1002240E0;
}

void sub_1002240E0(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_1002266F0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_1002241B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 124, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 128) & 1) == 0;
}

uint64_t sub_100224204()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 124, v10, 1LL, 0LL);
  *(_DWORD *)(v8 + 124) = 0;
  *(_BYTE *)(v8 + 128) = 1;
  return result;
}

uint64_t sub_1002242A4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 136, v5, 0LL, 0LL);
  uint64_t v2 = *(void *)(v1 + 144);
  if (v2) {
    uint64_t v3 = *(void *)(v1 + 136);
  }
  else {
    uint64_t v3 = 0LL;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_100224314(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v2 + v6)) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    uint64_t v8 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v10 = swift_retain(v7);
    sub_1002266F0(v10);
    uint64_t v11 = *(void *)(v3 + v6);
    *(void *)(v3 + v6) = v9;
    swift_release(v11);
  }

  uint64_t v12 = *(void *)(v3 + v6);
  swift_beginAccess(v12 + 136, v15, 1LL, 0LL);
  uint64_t v13 = *(void *)(v12 + 144);
  *(void *)(v12 + 136) = a1;
  *(void *)(v12 + 144) = a2;
  return swift_bridgeObjectRelease(v13);
}

void (*sub_1002243C4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 136, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 144);
  if (v6)
  {
    uint64_t v7 = *(void *)(v5 + 136);
    unint64_t v8 = *(void *)(v5 + 144);
  }

  else
  {
    uint64_t v7 = 0LL;
    unint64_t v8 = 0xE000000000000000LL;
  }

  v3[9] = v7;
  v3[10] = v8;
  swift_bridgeObjectRetain(v6);
  return sub_100224460;
}

void sub_100224460(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(int *)(*a1 + 96);
  uint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = *(void *)(*a1 + 88);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(*(void *)(*a1 + 80));
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v6 + v4)) & 1) == 0)
    {
      uint64_t v7 = *(int *)(v2 + 96);
      uint64_t v8 = *(void *)(v2 + 88);
      uint64_t v9 = *(void *)(v8 + v7);
      uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
      uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
      uint64_t v12 = swift_retain(v9);
      sub_1002266F0(v12);
      uint64_t v13 = *(void *)(v8 + v7);
      *(void *)(v8 + v7) = v11;
      swift_release(v13);
    }

    uint64_t v14 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess(v14 + 136, v2 + 24, 1LL, 0LL);
    uint64_t v15 = *(void *)(v14 + 144);
    *(void *)(v14 + 136) = v3;
    *(void *)(v14 + 144) = v5;
    swift_bridgeObjectRelease(v15);
    uint64_t v16 = *(void *)(v2 + 80);
  }

  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v6 + v4)) & 1) == 0)
    {
      uint64_t v17 = *(int *)(v2 + 96);
      uint64_t v18 = *(void *)(v2 + 88);
      uint64_t v19 = *(void *)(v18 + v17);
      uint64_t v20 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
      uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      uint64_t v22 = swift_retain(v19);
      sub_1002266F0(v22);
      uint64_t v23 = *(void *)(v18 + v17);
      *(void *)(v18 + v17) = v21;
      swift_release(v23);
    }

    uint64_t v24 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess(v24 + 136, v2 + 48, 1LL, 0LL);
    uint64_t v16 = *(void *)(v24 + 144);
    *(void *)(v24 + 136) = v3;
    *(void *)(v24 + 144) = v5;
  }

  swift_bridgeObjectRelease(v16);
  free((void *)v2);
}

BOOL sub_1002245B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 136, v3, 0LL, 0LL);
  return *(void *)(v1 + 144) != 0LL;
}

uint64_t sub_100224604()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  swift_beginAccess(v8 + 136, v11, 1LL, 0LL);
  uint64_t v9 = *(void *)(v8 + 144);
  *(void *)(v8 + 136) = 0LL;
  *(void *)(v8 + 144) = 0LL;
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_1002246A4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 152, v5, 0LL, 0LL);
  uint64_t v2 = *(void *)(v1 + 160);
  if (v2) {
    uint64_t v3 = *(void *)(v1 + 152);
  }
  else {
    uint64_t v3 = 0LL;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_100224714(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v2 + v6)) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    uint64_t v8 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v10 = swift_retain(v7);
    sub_1002266F0(v10);
    uint64_t v11 = *(void *)(v3 + v6);
    *(void *)(v3 + v6) = v9;
    swift_release(v11);
  }

  uint64_t v12 = *(void *)(v3 + v6);
  swift_beginAccess(v12 + 152, v15, 1LL, 0LL);
  uint64_t v13 = *(void *)(v12 + 160);
  *(void *)(v12 + 152) = a1;
  *(void *)(v12 + 160) = a2;
  return swift_bridgeObjectRelease(v13);
}

void (*sub_1002247C4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[11] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  *((_DWORD *)v3 + 24) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 152, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 160);
  if (v6)
  {
    uint64_t v7 = *(void *)(v5 + 152);
    unint64_t v8 = *(void *)(v5 + 160);
  }

  else
  {
    uint64_t v7 = 0LL;
    unint64_t v8 = 0xE000000000000000LL;
  }

  v3[9] = v7;
  v3[10] = v8;
  swift_bridgeObjectRetain(v6);
  return sub_100224860;
}

void sub_100224860(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 72);
  uint64_t v4 = *(int *)(*a1 + 96);
  uint64_t v5 = *(void *)(*a1 + 80);
  uint64_t v6 = *(void *)(*a1 + 88);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(*(void *)(*a1 + 80));
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v6 + v4)) & 1) == 0)
    {
      uint64_t v7 = *(int *)(v2 + 96);
      uint64_t v8 = *(void *)(v2 + 88);
      uint64_t v9 = *(void *)(v8 + v7);
      uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
      uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
      uint64_t v12 = swift_retain(v9);
      sub_1002266F0(v12);
      uint64_t v13 = *(void *)(v8 + v7);
      *(void *)(v8 + v7) = v11;
      swift_release(v13);
    }

    uint64_t v14 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess(v14 + 152, v2 + 24, 1LL, 0LL);
    uint64_t v15 = *(void *)(v14 + 160);
    *(void *)(v14 + 152) = v3;
    *(void *)(v14 + 160) = v5;
    swift_bridgeObjectRelease(v15);
    uint64_t v16 = *(void *)(v2 + 80);
  }

  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v6 + v4)) & 1) == 0)
    {
      uint64_t v17 = *(int *)(v2 + 96);
      uint64_t v18 = *(void *)(v2 + 88);
      uint64_t v19 = *(void *)(v18 + v17);
      uint64_t v20 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
      uint64_t v21 = swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
      uint64_t v22 = swift_retain(v19);
      sub_1002266F0(v22);
      uint64_t v23 = *(void *)(v18 + v17);
      *(void *)(v18 + v17) = v21;
      swift_release(v23);
    }

    uint64_t v24 = *(void *)(*(void *)(v2 + 88) + *(int *)(v2 + 96));
    swift_beginAccess(v24 + 152, v2 + 48, 1LL, 0LL);
    uint64_t v16 = *(void *)(v24 + 160);
    *(void *)(v24 + 152) = v3;
    *(void *)(v24 + 160) = v5;
  }

  swift_bridgeObjectRelease(v16);
  free((void *)v2);
}

BOOL sub_1002249B4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_beginAccess(v1 + 152, v3, 0LL, 0LL);
  return *(void *)(v1 + 160) != 0LL;
}

uint64_t sub_100224A04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_1002266F0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  swift_beginAccess(v8 + 152, v11, 1LL, 0LL);
  uint64_t v9 = *(void *)(v8 + 160);
  *(void *)(v8 + 152) = 0LL;
  *(void *)(v8 + 160) = 0LL;
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_100224AA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363ED8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100363ED8);
  uint64_t v7 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  *(_BYTE *)(a1 + v7[6]) = 2;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  *(_BYTE *)(a1 + v7[10]) = 8;
  return sub_100015764((uint64_t)v5, &qword_100363ED8);
}

int *sub_100224BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  *(_BYTE *)(a1 + result[9]) = 2;
  *(_BYTE *)(a1 + result[10]) = 8;
  return result;
}

uint64_t sub_100224C40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363ED8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_1002266F0(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  uint64_t v17 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_100226BC8((uint64_t)v9, (uint64_t)v7);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_100226C10((uint64_t)v7, v18);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100224DB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363ED8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100363ED8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v9[v6[6]] = 2;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    v9[v6[10]] = 8;
    sub_100015764((uint64_t)v5, &qword_100363ED8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  }

  return sub_100224F1C;
}

void sub_100224F1C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40LL);
  uint64_t v4 = *(void **)(*(void *)a1 + 48LL);
  uint64_t v5 = *(void **)(*(void *)a1 + 32LL);
  if ((a2 & 1) != 0)
  {
    sub_10000404C( *(void *)(*(void *)a1 + 48LL),  (uint64_t)v3,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
    sub_100224C40((uint64_t)v3);
    sub_100004090((uint64_t)v4, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  }

  else
  {
    sub_100224C40(*(void *)(*(void *)a1 + 48LL));
  }

  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

BOOL sub_100224FA8()
{
  uint64_t v1 = sub_100003A0C(&qword_100363ED8);
  __chkstk_darwin(v1);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v4, v9, 0LL, 0LL);
  sub_10000E6C0(v4, (uint64_t)v3, &qword_100363ED8);
  uint64_t v5 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100363ED8);
  return v6;
}

uint64_t sub_100225084()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100363ED8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_1002266F0(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_100226C10((uint64_t)v4, v13);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002251AC(uint64_t a1)
{
  if (a1 == 7) {
    int v1 = 1;
  }
  else {
    int v1 = 3;
  }
  if (a1 == 18) {
    unsigned int v2 = 2;
  }
  else {
    unsigned int v2 = v1;
  }
  if (a1) {
    return v2;
  }
  else {
    return 0LL;
  }
}

uint64_t sub_1002251D4(char a1)
{
  return qword_1002DA040[a1];
}

BOOL sub_1002251E8(char *a1, char *a2)
{
  return qword_1002DA040[*a1] == qword_1002DA040[*a2];
}

uint64_t sub_10022520C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10000FD10();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_100225244@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result) {
    char v2 = 3;
  }
  else {
    char v2 = 0;
  }
  if (result == 7) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (result == 18) {
    char v4 = 2;
  }
  else {
    char v4 = v3;
  }
  *a2 = v4;
  return result;
}

uint64_t sub_100225270()
{
  return qword_1002DA040[*v0];
}

uint64_t *sub_100225284@<X0>(uint64_t *result@<X0>, char *a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result) {
    char v3 = 3;
  }
  else {
    char v3 = 0;
  }
  if (v2 == 7) {
    char v4 = 1;
  }
  else {
    char v4 = v3;
  }
  if (v2 == 18) {
    char v5 = 2;
  }
  else {
    char v5 = v4;
  }
  *a2 = v5;
  return result;
}

void sub_1002252B4(void *a1@<X8>)
{
  *a1 = qword_1002DA040[*v1];
}

uint64_t sub_1002252CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if (qword_1003B5768 != -1) {
    swift_once(&qword_1003B5768, sub_100226624);
  }
  uint64_t v3 = qword_1003B5770;
  *(void *)(a1 + v2) = qword_1003B5770;
  return swift_retain(v3);
}

uint64_t sub_10022532C()
{
  if (qword_1003B5768 != -1) {
    swift_once(&qword_1003B5768, sub_100226624);
  }
  return swift_retain(qword_1003B5770);
}

_UNKNOWN **sub_10022536C()
{
  return &off_100345970;
}

void sub_100225378(void *a1@<X8>)
{
  *a1 = &off_100345998;
}

uint64_t sub_100225388()
{
  int v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL) + 20));
  unint64_t v2 = v1[1];
  if (v2 >> 60 == 15) {
    uint64_t v3 = 0LL;
  }
  else {
    uint64_t v3 = *v1;
  }
  sub_10005F2F8(*v1, v2);
  return v3;
}

uint64_t sub_1002253D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL) + 20);
  uint64_t result = sub_10005F30C(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_100225418(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  char v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0LL;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000LL;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_10005F2F8(v5, v6);
  return sub_100151CB4;
}

BOOL sub_100225478()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL) + 20) + 8) >> 60 != 15LL;
}

double sub_1002254A8()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL) + 20);
  sub_10005F30C(*(void *)v1, *(void *)(v1 + 8));
  double result = 0.0;
  *(_OWORD *)uint64_t v1 = xmmword_1002B4290;
  return result;
}

double sub_1002254E4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL);
  double result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v2 + 20)) = xmmword_1002B4290;
  return result;
}

uint64_t sub_10022551C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100355538);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100355538);
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  sub_10008A220(a1);
  return sub_100015764((uint64_t)v5, &qword_100355538);
}

uint64_t sub_1002255F4(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 24);
  sub_100015764(v3, &qword_100355538);
  sub_100003E68(a1, v3, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  uint64_t v4 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_100225664(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100355538);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100355538);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10008A220((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100355538);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  }

  return sub_100225780;
}

void sub_100225780(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(int *)(*(void *)a1 + 48LL);
  uint64_t v4 = *(void **)(*(void *)a1 + 32LL);
  uint64_t v5 = *(void **)(*(void *)a1 + 40LL);
  uint64_t v6 = *(void *)(*(void *)a1 + 16LL);
  uint64_t v7 = *(void *)(*(void *)a1 + 24LL);
  size_t v8 = *(void **)(*(void *)a1 + 8LL);
  uint64_t v9 = **(void **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    sub_10000404C( *(void *)(*(void *)a1 + 40LL),  (uint64_t)v4,  type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    sub_100015764(v9, &qword_100355538);
    sub_100003E68((uint64_t)v4, v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0LL, 1LL, v6);
    sub_100004090((uint64_t)v5, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  }

  else
  {
    sub_100015764(**(void **)a1 + v3, &qword_100355538);
    sub_100003E68((uint64_t)v5, v9, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0LL, 1LL, v6);
  }

  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL sub_100225884()
{
  uint64_t v1 = sub_100003A0C(&qword_100355538);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_100355538);
  uint64_t v5 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100355538);
  return v6;
}

uint64_t sub_100225938()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 24);
  sub_100015764(v1, &qword_100355538);
  uint64_t v2 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_100225990()
{
  return sub_10001A898(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t sub_10022599C(char a1)
{
  return sub_10000534C(a1, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t (*sub_1002259A8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002259F0()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 28)) != 2;
}

uint64_t sub_100225A18()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_100225A3C()
{
  return sub_10001A96C(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t sub_100225A48(char a1)
{
  return sub_10001A9A0(a1, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t (*sub_100225A54(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100225A9C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 32)) != 2;
}

uint64_t sub_100225AC4()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_100225AE8()
{
  return sub_10001B0E0(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t sub_100225AF4(char a1)
{
  return sub_10001B114(a1, type metadata accessor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t (*sub_100225B00(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100225B48()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 36)) != 2;
}

uint64_t sub_100225B70()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_100225B94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 20);
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t sub_100225BDC(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 20);
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(v3, a1, v4);
}

uint64_t (*sub_100225C24())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_100225C4C@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  UnknownStorage.init()();
  uint64_t v3 = (char *)a1 + v2[6];
  uint64_t v4 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 1LL, 1LL, v4);
  *((_BYTE *)a1 + v2[7]) = 2;
  *((_BYTE *)a1 + v2[8]) = 2;
  *((_BYTE *)a1 + v2[9]) = 2;
  return result;
}

uint64_t sub_100225CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

uint64_t sub_100225D18()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 20)) & 1;
}

uint64_t sub_100225D3C(char a1)
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_100225D68(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100225DB0()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 20)) != 2;
}

uint64_t sub_100225DD8()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_100225DFC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 24)) & 1;
}

uint64_t sub_100225E20(char a1)
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_100225E4C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100225E94()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 24)) != 2;
}

uint64_t sub_100225EBC()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100225EE0()
{
  return sub_10001A898(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t sub_100225EEC(char a1)
{
  return sub_10000534C(a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t (*sub_100225EF8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100225F40()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 28)) != 2;
}

uint64_t sub_100225F68()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_100225F8C()
{
  return sub_10001A96C(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t sub_100225F98(char a1)
{
  return sub_10001A9A0(a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t (*sub_100225FA4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100225FEC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 32)) != 2;
}

uint64_t sub_100226014()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_100226038()
{
  return sub_10001B0E0(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t sub_100226044(char a1)
{
  return sub_10001B114(a1, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t (*sub_100226050(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100226098()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 36)) != 2;
}

uint64_t sub_1002260C0()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_1002260E4()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 40));
  if (v1 == 8) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10022610C(char a1)
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_100226138(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 40);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 8) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100003798;
}

BOOL sub_100226184()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 40)) != 8;
}

uint64_t sub_1002261AC()
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 40)) = 8;
  return result;
}

uint64_t sub_1002261D0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10022C190();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_100226208()
{
  return &off_1003459C0;
}

void sub_100226214(void *a1@<X8>)
{
  *a1 = &off_1003459C0;
}

void *sub_100226224()
{
  return &unk_100345930;
}

unint64_t sub_100226230()
{
  return 0xD000000000000023LL;
}

uint64_t sub_10022624C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B588);
  sub_10000E704(v0, (uint64_t)qword_10036B588);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v35 = swift_allocObject(v1, v6 + 13 * v4, v5 | 7);
  *(_OWORD *)(v35 + 16) = xmmword_1002B42B0;
  uint64_t v7 = v35 + v6;
  uint64_t v8 = v35 + v6 + *(int *)(v2 + 48);
  *(void *)(v35 + v6) = 1LL;
  *(void *)uint64_t v8 = "mach_cont_time_ns";
  *(void *)(v8 + 8) = 17LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v7 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 2LL;
  *(void *)uint64_t v12 = "mac";
  *(void *)(v12 + 8) = 3LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)uint64_t v14 = "rssi_db";
  *((void *)v14 + 1) = 7LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v7 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 4LL;
  *(void *)uint64_t v16 = "channel";
  *((void *)v16 + 1) = 7LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v7 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "antenna_index";
  *((void *)v18 + 1) = 13LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v7 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)uint64_t v20 = "payload";
  *((void *)v20 + 1) = 7LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v7 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 8LL;
  *(void *)uint64_t v22 = "bt_type";
  *((void *)v22 + 1) = 7LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v7 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 9LL;
  *(void *)uint64_t v24 = "device_flags";
  *((void *)v24 + 1) = 12LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v7 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 10LL;
  *(void *)uint64_t v25 = "discovery_flags";
  *(void *)(v25 + 8) = 15LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  unint64_t v26 = (void *)(v7 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *unint64_t v26 = 11LL;
  *(void *)uint64_t v27 = "product_ID";
  *((void *)v27 + 1) = 10LL;
  v27[16] = 2;
  v11();
  uint64_t v28 = (void *)(v7 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 12LL;
  *(void *)uint64_t v29 = "identifier";
  *((void *)v29 + 1) = 10LL;
  v29[16] = 2;
  v11();
  uint64_t v30 = (void *)(v7 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 13LL;
  *(void *)uint64_t v31 = "ids_device_ID";
  *((void *)v31 + 1) = 13LL;
  v31[16] = 2;
  v11();
  uint64_t v32 = (void *)(v7 + 12 * v4);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 48);
  *uint64_t v32 = 31LL;
  *(void *)uint64_t v33 = "type7_info";
  *((void *)v33 + 1) = 10LL;
  v33[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v35);
}

uint64_t sub_1002265EC()
{
  return sub_100008C30(&qword_1003B5760, (uint64_t)qword_10036B588, (uint64_t)sub_10022624C);
}

uint64_t sub_100226608@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B5760, (uint64_t)qword_10036B588, (uint64_t)sub_10022624C, a1);
}

uint64_t sub_100226624()
{
  uint64_t v0 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(void *)(v1 + 16) = 0LL;
  *(_BYTE *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0LL;
  *(_BYTE *)(v1 + 40) = 1;
  *(_DWORD *)(v1 + 44) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  *(_DWORD *)(v1 + 52) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_DWORD *)(v1 + 60) = 0;
  *(_BYTE *)(v1 + 64) = 1;
  *(_OWORD *)(v1 + 72) = xmmword_1002B4290;
  *(_BYTE *)(v1 + 88) = 3;
  *(void *)(v1 + 96) = 0LL;
  *(_BYTE *)(v1 + 104) = 1;
  *(void *)(v1 + 112) = 0LL;
  *(_BYTE *)(v1 + 120) = 1;
  *(_DWORD *)(v1 + 124) = 0;
  *(_BYTE *)(v1 + 128) = 1;
  *(_OWORD *)(v1 + 152) = 0u;
  uint64_t v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  *(_OWORD *)(v1 + 136) = 0u;
  uint64_t v3 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))( v2,  1LL,  1LL,  v3);
  qword_1003B5770 = v1;
  return result;
}

uint64_t sub_1002266F0(uint64_t a1)
{
  uint64_t v3 = sub_100003A0C(&qword_100363ED8);
  __chkstk_darwin(v3);
  uint64_t v46 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v1 + 16) = 0LL;
  *(_BYTE *)(v1 + 24) = 1;
  *(void *)(v1 + 32) = 0LL;
  *(_BYTE *)(v1 + 40) = 1;
  *(_DWORD *)(v1 + 44) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  *(_DWORD *)(v1 + 52) = 0;
  *(_BYTE *)(v1 + 56) = 1;
  *(_DWORD *)(v1 + 60) = 0;
  uint64_t v38 = (_DWORD *)(v1 + 60);
  *(_BYTE *)(v1 + 64) = 1;
  *(_OWORD *)(v1 + 72) = xmmword_1002B4290;
  *(_BYTE *)(v1 + 88) = 3;
  *(void *)(v1 + 96) = 0LL;
  uint64_t v39 = (_BYTE *)(v1 + 88);
  uint64_t v40 = (void *)(v1 + 96);
  *(_BYTE *)(v1 + 104) = 1;
  *(void *)(v1 + 112) = 0LL;
  uint64_t v41 = (void *)(v1 + 112);
  *(_DWORD *)(v1 + 124) = 0;
  uint64_t v42 = (_DWORD *)(v1 + 124);
  *(_BYTE *)(v1 + 120) = 1;
  *(_BYTE *)(v1 + 128) = 1;
  *(_OWORD *)(v1 + 152) = 0u;
  uint64_t v44 = (void *)(v1 + 152);
  uint64_t v5 = v1
     + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  uint64_t v45 = v1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  *(_OWORD *)(v1 + 136) = 0u;
  uint64_t v43 = (void *)(v1 + 136);
  uint64_t v6 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  swift_beginAccess(a1 + 16, v72, 0LL, 0LL);
  uint64_t v7 = *(void *)(a1 + 16);
  char v8 = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v1 + 16, v71, 1LL, 0LL);
  *(void *)(v1 + 16) = v7;
  *(_BYTE *)(v1 + 24) = v8;
  swift_beginAccess(a1 + 32, v70, 0LL, 0LL);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(_BYTE *)(a1 + 40);
  swift_beginAccess(v1 + 32, v69, 1LL, 0LL);
  *(void *)(v1 + 32) = v9;
  *(_BYTE *)(v1 + 40) = v10;
  swift_beginAccess(a1 + 44, v68, 0LL, 0LL);
  LODWORD(v9) = *(_DWORD *)(a1 + 44);
  char v11 = *(_BYTE *)(a1 + 48);
  swift_beginAccess(v1 + 44, v67, 1LL, 0LL);
  *(_DWORD *)(v1 + 44) = v9;
  *(_BYTE *)(v1 + 48) = v11;
  swift_beginAccess(a1 + 52, v66, 0LL, 0LL);
  LODWORD(v9) = *(_DWORD *)(a1 + 52);
  char v12 = *(_BYTE *)(a1 + 56);
  swift_beginAccess(v1 + 52, &v65, 1LL, 0LL);
  *(_DWORD *)(v1 + 52) = v9;
  *(_BYTE *)(v1 + 56) = v12;
  swift_beginAccess(a1 + 60, &v64, 0LL, 0LL);
  LODWORD(v9) = *(_DWORD *)(a1 + 60);
  char v13 = *(_BYTE *)(a1 + 64);
  uint64_t v14 = v38;
  swift_beginAccess(v38, &v63, 1LL, 0LL);
  *uint64_t v14 = v9;
  *(_BYTE *)(v1 + 64) = v13;
  swift_beginAccess(a1 + 72, &v62, 0LL, 0LL);
  uint64_t v15 = *(void *)(a1 + 72);
  unint64_t v16 = *(void *)(a1 + 80);
  swift_beginAccess(v1 + 72, &v61, 1LL, 0LL);
  uint64_t v17 = *(void *)(v1 + 72);
  unint64_t v18 = *(void *)(v1 + 80);
  *(void *)(v1 + 72) = v15;
  *(void *)(v1 + 80) = v16;
  sub_10005F2F8(v15, v16);
  sub_10005F30C(v17, v18);
  swift_beginAccess(a1 + 88, &v60, 0LL, 0LL);
  LOBYTE(v9) = *(_BYTE *)(a1 + 88);
  uint64_t v19 = v39;
  swift_beginAccess(v39, &v59, 1LL, 0LL);
  _BYTE *v19 = v9;
  swift_beginAccess(a1 + 96, &v58, 0LL, 0LL);
  uint64_t v20 = *(void *)(a1 + 96);
  LOBYTE(v19) = *(_BYTE *)(a1 + 104);
  uint64_t v21 = v40;
  swift_beginAccess(v40, &v57, 1LL, 0LL);
  *uint64_t v21 = v20;
  *(_BYTE *)(v1 + 104) = (_BYTE)v19;
  swift_beginAccess(a1 + 112, &v56, 0LL, 0LL);
  uint64_t v22 = *(void *)(a1 + 112);
  LOBYTE(v19) = *(_BYTE *)(a1 + 120);
  uint64_t v23 = v41;
  swift_beginAccess(v41, &v55, 1LL, 0LL);
  *uint64_t v23 = v22;
  *(_BYTE *)(v1 + 120) = (_BYTE)v19;
  swift_beginAccess(a1 + 124, &v54, 0LL, 0LL);
  LODWORD(v22) = *(_DWORD *)(a1 + 124);
  LOBYTE(v19) = *(_BYTE *)(a1 + 128);
  uint64_t v24 = v42;
  swift_beginAccess(v42, &v53, 1LL, 0LL);
  _DWORD *v24 = v22;
  *(_BYTE *)(v1 + 128) = (_BYTE)v19;
  swift_beginAccess(a1 + 136, &v52, 0LL, 0LL);
  uint64_t v26 = *(void *)(a1 + 136);
  uint64_t v25 = *(void *)(a1 + 144);
  uint64_t v27 = v43;
  swift_beginAccess(v43, &v51, 1LL, 0LL);
  uint64_t v28 = *(void *)(v1 + 144);
  void *v27 = v26;
  *(void *)(v1 + 144) = v25;
  swift_bridgeObjectRetain(v25);
  swift_bridgeObjectRelease(v28);
  swift_beginAccess(a1 + 152, &v50, 0LL, 0LL);
  uint64_t v30 = *(void *)(a1 + 152);
  uint64_t v29 = *(void *)(a1 + 160);
  uint64_t v31 = v44;
  swift_beginAccess(v44, &v49, 1LL, 0LL);
  uint64_t v32 = *(void *)(v1 + 160);
  void *v31 = v30;
  *(void *)(v1 + 160) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v32);
  uint64_t v33 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info,  &v48,  0LL,  0LL);
  uint64_t v34 = v33;
  uint64_t v35 = v46;
  sub_10000E6C0(v34, v46, &qword_100363ED8);
  swift_release(a1);
  uint64_t v36 = v45;
  swift_beginAccess(v45, v47, 33LL, 0LL);
  sub_100226C10(v35, v36);
  swift_endAccess(v47);
  return v1;
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B69E0,  (uint64_t)&nominal type descriptor for CLP_LogEntry_AONLoc_Type7Info);
}

uint64_t sub_100226BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_100363ED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100226C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_100363ED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B69C0,  (uint64_t)&nominal type descriptor for CLP_LogEntry_AONLoc_BtDeviceInfo);
}

uint64_t type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003B69D0,  (uint64_t)&nominal type descriptor for CLP_LogEntry_AONLoc_BtNotification);
}

uint64_t sub_100226C80()
{
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t sub_100226CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v9)) & 1) == 0)
  {
    uint64_t v10 = *(void *)(v3 + v9);
    uint64_t v11 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
    uint64_t v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    uint64_t v13 = swift_retain(v10);
    sub_1002266F0(v13);
    uint64_t v14 = *(void *)(v6 + v9);
    *(void *)(v6 + v9) = v12;
    swift_release(v14);
  }

  uint64_t v15 = *(void *)(v6 + v9);
  swift_retain(v15);
  uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    uint64_t v32 = v15 + 112;
    uint64_t v30 = v15 + 88;
    uint64_t v29 = v15 + 72;
    uint64_t v28 = v15 + 44;
    uint64_t v27 = v15 + 32;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1LL:
          uint64_t v19 = v15 + 16;
          goto LABEL_18;
        case 2LL:
          swift_beginAccess(v27, v31, 33LL, 0LL);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularFixed64Field(value:)(v27, a2, a3);
          goto LABEL_24;
        case 3LL:
          swift_beginAccess(v28, v31, 33LL, 0LL);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularSInt32Field(value:)(v28, a2, a3);
          goto LABEL_24;
        case 4LL:
          uint64_t v21 = v15 + 52;
          goto LABEL_13;
        case 5LL:
          uint64_t v21 = v15 + 60;
LABEL_13:
          swift_beginAccess(v21, v31, 33LL, 0LL);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v21, a2, a3);
          goto LABEL_24;
        case 6LL:
          swift_beginAccess(v29, v31, 33LL, 0LL);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularBytesField(value:)(v29, a2, a3);
          goto LABEL_24;
        case 8LL:
          swift_beginAccess(v30, v31, 33LL, 0LL);
          unint64_t v22 = sub_10000FD10();
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v30,  &type metadata for CLP_LogEntry_AONLoc_BtAdvertisement.BtType,  v22,  a2,  a3);
          goto LABEL_24;
        case 9LL:
          uint64_t v19 = v15 + 96;
          goto LABEL_18;
        case 10LL:
          uint64_t v19 = v32;
LABEL_18:
          swift_beginAccess(v19, v31, 33LL, 0LL);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v19, a2, a3);
          goto LABEL_24;
        case 11LL:
          swift_beginAccess(v15 + 124, v31, 33LL, 0LL);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v15 + 124, a2, a3);
          goto LABEL_24;
        case 12LL:
          swift_beginAccess(v15 + 136, v31, 33LL, 0LL);
          uint64_t v23 = v15 + 136;
          goto LABEL_22;
        case 13LL:
          swift_beginAccess(v15 + 152, v31, 33LL, 0LL);
          uint64_t v23 = v15 + 152;
LABEL_22:
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v23, a2, a3);
          goto LABEL_24;
        case 31LL:
          uint64_t v24 = v15
              + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info,  v31,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
          uint64_t v25 = sub_10000FD98( &qword_100363F80,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9CD0);
          uint64_t v20 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v24, v26, v25, a2, a3);
LABEL_24:
          uint64_t v5 = v20;
          swift_endAccess(v31);
          break;
        default:
          break;
      }

      uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return swift_release(v15);
}

uint64_t sub_100227098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v18, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)(v9 + 16), 1LL, a2, a3);
  }
  if (v4) {
    return swift_release(v9);
  }
  swift_beginAccess(v9 + 32, v19, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 40) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularFixed64Field(value:fieldNumber:)(*(void *)(v9 + 32), 2LL, a2, a3);
  }
  swift_beginAccess(v9 + 44, v20, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 48) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularSInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 44), 3LL, a2, a3);
  }
  swift_beginAccess(v9 + 52, v21, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 56) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 52), 4LL, a2, a3);
  }
  swift_beginAccess(v9 + 60, v29, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 64) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 60), 5LL, a2, a3);
  }
  swift_beginAccess(v9 + 72, v28, 0LL, 0LL);
  unint64_t v11 = *(void *)(v9 + 80);
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *(void *)(v9 + 72);
    sub_100017F58(v12, *(void *)(v9 + 80));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(v12, v11, 6LL, a2, a3);
    sub_10005F30C(v12, v11);
  }

  swift_beginAccess(v9 + 88, v27, 0LL, 0LL);
  if (*(_BYTE *)(v9 + 88) != 3)
  {
    v26[0] = *(_BYTE *)(v9 + 88);
    unint64_t v13 = sub_10000FD10();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v26,  8LL,  &type metadata for CLP_LogEntry_AONLoc_BtAdvertisement.BtType,  v13,  a2,  a3);
  }

  swift_beginAccess(v9 + 96, v26, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 104) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)(v9 + 96), 9LL, a2, a3);
  }
  swift_beginAccess(v9 + 112, v25, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 120) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)(v9 + 112), 10LL, a2, a3);
  }
  swift_beginAccess(v9 + 124, v24, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 128) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 124), 11LL, a2, a3);
  }
  swift_beginAccess(v9 + 136, v23, 0LL, 0LL);
  uint64_t v14 = *(void *)(v9 + 144);
  if (v14)
  {
    uint64_t v15 = *(void *)(v9 + 136);
    swift_bridgeObjectRetain(*(void *)(v9 + 144));
    dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(v15, v14, 12LL, a2, a3);
    swift_bridgeObjectRelease(v14);
  }

  swift_beginAccess(v9 + 152, v22, 0LL, 0LL);
  uint64_t v16 = *(void *)(v9 + 160);
  if (v16)
  {
    uint64_t v17 = *(void *)(v9 + 152);
    swift_bridgeObjectRetain(*(void *)(v9 + 160));
    dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(v17, v16, 13LL, a2, a3);
    swift_bridgeObjectRelease(v16);
  }

  sub_1002274C4(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_1002274C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363ED8);
  __chkstk_darwin(v6);
  char v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100363ED8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  uint64_t v15 = sub_10000FD98( &qword_100363F80,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9CD0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 31LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
}

BOOL sub_100227654(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  uint64_t v4 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v62 = &v59[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v6 = sub_100003A0C(&qword_100364428);
  __chkstk_darwin(v6);
  uint64_t v64 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v8 = sub_100003A0C(&qword_100363ED8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = &v59[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v59[-v12];
  swift_beginAccess(a1 + 16, v90, 0LL, 0LL);
  uint64_t v14 = *(void *)(a1 + 16);
  char v15 = *(_BYTE *)(a1 + 24);
  swift_beginAccess(a2 + 16, v89, 0LL, 0LL);
  char v16 = *(_BYTE *)(a2 + 24);
  if ((v15 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24)) {
      return 0LL;
    }
  }

  else
  {
    if (v14 != *(void *)(a2 + 16)) {
      char v16 = 1;
    }
    if ((v16 & 1) != 0) {
      return 0LL;
    }
  }

  swift_beginAccess(a1 + 32, v88, 0LL, 0LL);
  uint64_t v17 = *(void *)(a1 + 32);
  char v18 = *(_BYTE *)(a1 + 40);
  swift_beginAccess(a2 + 32, v87, 0LL, 0LL);
  char v19 = *(_BYTE *)(a2 + 40);
  if ((v18 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 40)) {
      return 0LL;
    }
  }

  else
  {
    if (v17 != *(void *)(a2 + 32)) {
      char v19 = 1;
    }
    if ((v19 & 1) != 0) {
      return 0LL;
    }
  }

  swift_beginAccess(a1 + 44, v86, 0LL, 0LL);
  int v20 = *(_DWORD *)(a1 + 44);
  char v21 = *(_BYTE *)(a1 + 48);
  swift_beginAccess(a2 + 44, v85, 0LL, 0LL);
  char v22 = *(_BYTE *)(a2 + 48);
  if ((v21 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 48)) {
      return 0LL;
    }
  }

  else
  {
    if (v20 != *(_DWORD *)(a2 + 44)) {
      char v22 = 1;
    }
    if ((v22 & 1) != 0) {
      return 0LL;
    }
  }

  swift_beginAccess(a1 + 52, v84, 0LL, 0LL);
  int v23 = *(_DWORD *)(a1 + 52);
  char v24 = *(_BYTE *)(a1 + 56);
  swift_beginAccess(a2 + 52, &v83, 0LL, 0LL);
  char v25 = *(_BYTE *)(a2 + 56);
  if ((v24 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 56)) {
      return 0LL;
    }
  }

  else
  {
    if (v23 != *(_DWORD *)(a2 + 52)) {
      char v25 = 1;
    }
    if ((v25 & 1) != 0) {
      return 0LL;
    }
  }

  swift_beginAccess(a1 + 60, &v82, 0LL, 0LL);
  int v26 = *(_DWORD *)(a1 + 60);
  char v27 = *(_BYTE *)(a1 + 64);
  swift_beginAccess(a2 + 60, &v81, 0LL, 0LL);
  char v28 = *(_BYTE *)(a2 + 64);
  if ((v27 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 64)) {
      return 0LL;
    }
  }

  else
  {
    if (v26 != *(_DWORD *)(a2 + 60)) {
      char v28 = 1;
    }
    if ((v28 & 1) != 0) {
      return 0LL;
    }
  }

  swift_beginAccess(a1 + 72, &v80, 0LL, 0LL);
  uint64_t v29 = *(void *)(a1 + 72);
  unint64_t v30 = *(void *)(a1 + 80);
  swift_beginAccess(a2 + 72, &v79, 0LL, 0LL);
  uint64_t v31 = *(void *)(a2 + 72);
  unint64_t v32 = *(void *)(a2 + 80);
  if (v30 >> 60 == 15)
  {
    if (v32 >> 60 == 15)
    {
      swift_retain(a1);
      swift_retain(a2);
      goto LABEL_37;
    }

LABEL_69:
  uint64_t v51 = a1
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info,  &v66,  0LL,  0LL);
  sub_10000E6C0(v51, (uint64_t)v13, &qword_100363ED8);
  uint64_t v52 = a2
      + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info;
  swift_beginAccess( a2 + OBJC_IVAR____TtCV10ALProtobuf35CLP_LogEntry_AONLoc_BtAdvertisementP33_E9587737FC1639A911680431159314D113_StorageClass__type7Info,  &v65,  0LL,  0LL);
  uint64_t v53 = v64;
  uint64_t v54 = (uint64_t)&v64[*(int *)(v6 + 48)];
  sub_10000E6C0((uint64_t)v13, (uint64_t)v64, &qword_100363ED8);
  sub_10000E6C0(v52, v54, &qword_100363ED8);
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v55((uint64_t)v53, 1LL, v63) == 1)
  {
    swift_release(a1);
    swift_release(a2);
    sub_100015764((uint64_t)v13, &qword_100363ED8);
    if (v55(v54, 1LL, v63) == 1)
    {
      sub_100015764((uint64_t)v64, &qword_100363ED8);
      return 1LL;
    }

Swift::Int sub_100227E28()
{
  return sub_10000DF8C( type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  &qword_100363EE0,  (uint64_t)&unk_1002D9970);
}

uint64_t sub_100227E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(int *)(a1 + 20);
  if (qword_1003B5768 != -1) {
    swift_once(&qword_1003B5768, sub_100226624);
  }
  uint64_t v5 = qword_1003B5770;
  *(void *)(a2 + v4) = qword_1003B5770;
  return swift_retain(v5);
}

uint64_t sub_100227EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100226CD0(a1, a2, a3);
}

uint64_t sub_100227EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100227098(a1, a2, a3);
}

uint64_t sub_100227EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364418,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D98E8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100227F18@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B5760, (uint64_t)qword_10036B588, (uint64_t)sub_10022624C, a1);
}

uint64_t sub_100227F34(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_1003517B0,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9870);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100227F74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003517B0,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9870);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100227FC8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B5A0);
  sub_10000E704(v0, (uint64_t)qword_10036B5A0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 0LL;
  *(void *)uint64_t v9 = "BT_TYPE_UNKNOWN";
  *(void *)(v9 + 8) = 15LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 7LL;
  *(void *)uint64_t v13 = "BT_TYPE_TYPE7";
  *((void *)v13 + 1) = 13LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 18LL;
  *(void *)uint64_t v14 = "BT_TYPE_TYPE18";
  *(void *)(v14 + 8) = 14LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10022815C()
{
  return sub_100008C30(&qword_1003B5778, (uint64_t)qword_10036B5A0, (uint64_t)sub_100227FC8);
}

uint64_t sub_100228178@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B5778, (uint64_t)qword_10036B5A0, (uint64_t)sub_100227FC8, a1);
}

uint64_t sub_100228194@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B5778, (uint64_t)qword_10036B5A0, (uint64_t)sub_100227FC8, a1);
}

void *sub_1002281B0()
{
  return &unk_100345940;
}

unint64_t sub_1002281BC()
{
  return 0xD000000000000020LL;
}

uint64_t sub_1002281D8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B5B8);
  sub_10000E704(v0, (uint64_t)qword_10036B5B8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002BAD60;
  uint64_t v8 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v8 = "cb_device_bytes";
  *(void *)(v8 + 8) = 15LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104LL))(v8, v9, v10);
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1002282DC()
{
  return sub_100008C30(&qword_1003B5780, (uint64_t)qword_10036B5B8, (uint64_t)sub_1002281D8);
}

uint64_t sub_1002282F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B5780, (uint64_t)qword_10036B5B8, (uint64_t)sub_1002281D8, a1);
}

uint64_t sub_100228314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v10 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      uint64_t v11 = type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL);
      dispatch thunk of Decoder.decodeSingularBytesField(value:)(v3 + *(int *)(v11 + 20), a2, a3);
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_1002283A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL);
  uint64_t v10 = v5 + *(int *)(result + 20);
  unint64_t v11 = *(void *)(v10 + 8);
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *(void *)v10;
    sub_100017F58(*(void *)v10, *(void *)(v10 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(v12, v11, 1LL, a2, a3);
    uint64_t result = sub_10005F30C(v12, v11);
  }

  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_100228470()
{
  return sub_10000DF8C( type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  &qword_100363EE8,  (uint64_t)&unk_1002D9B00);
}

double sub_10022848C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_1002B4290;
  return result;
}

uint64_t sub_1002284C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100228314(a1, a2, a3);
}

uint64_t sub_1002284D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002283A8(a1, a2, a3);
}

uint64_t sub_1002284E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364410,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9A78);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100228538@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B5780, (uint64_t)qword_10036B5B8, (uint64_t)sub_1002281D8, a1);
}

uint64_t sub_100228554(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100363F60,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9A00);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100228594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100363F60,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9A00);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002285E4()
{
  return &unk_100345950;
}

unint64_t sub_1002285F0()
{
  return 0xD000000000000022LL;
}

uint64_t sub_10022860C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B5D0);
  sub_10000E704(v0, (uint64_t)qword_10036B5D0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "event_receipt_time";
  *(void *)(v9 + 8) = 18LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "advertisements";
  *(void *)(v13 + 8) = 14LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  char v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 4LL;
  *(void *)char v15 = "is_simulated";
  *((void *)v15 + 1) = 12LL;
  v15[16] = 2;
  v12();
  char v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *char v16 = 5LL;
  *(void *)uint64_t v17 = "is_ap_on";
  *((void *)v17 + 1) = 8LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 6LL;
  *(void *)uint64_t v18 = "is_screen_on";
  *(void *)(v18 + 8) = 12LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100228818()
{
  return sub_100008C30(&qword_1003B5788, (uint64_t)qword_10036B5D0, (uint64_t)sub_10022860C);
}

uint64_t sub_100228834@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B5788, (uint64_t)qword_10036B5D0, (uint64_t)sub_10022860C, a1);
}

uint64_t sub_100228850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v12 = v3 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 24);
          uint64_t v13 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
          uint64_t v14 = sub_10000FD98( (unint64_t *)&qword_1003552B8,  type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp,  (uint64_t)&unk_1002BF798);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v12, v13, v14, a2, a3);
          goto LABEL_6;
        case 2LL:
          uint64_t v15 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL);
          uint64_t v16 = sub_10000FD98( &qword_1003517B0,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9870);
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v15, v16, a2, a3);
          goto LABEL_6;
        case 4LL:
          uint64_t v10 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 28);
          goto LABEL_5;
        case 5LL:
          uint64_t v10 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 32);
          goto LABEL_5;
        case 6LL:
          uint64_t v10 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL) + 36);
LABEL_5:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v10, a2, a3);
LABEL_6:
          uint64_t v9 = v11;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_1002289E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_100228B6C(v3, a1, a2, a3);
  if (!v4)
  {
    uint64_t v9 = *(void *)v3;
    if (*(void *)(*(void *)v3 + 16LL))
    {
      uint64_t v10 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL);
      uint64_t v11 = sub_10000FD98( &qword_1003517B0,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9870);
      dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v9, 2LL, v10, v11, a2, a3);
    }

    uint64_t v12 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
    int v13 = *(unsigned __int8 *)(v3 + v12[7]);
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 4LL, a2, a3);
    }
    int v14 = *(unsigned __int8 *)(v3 + v12[8]);
    if (v14 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 5LL, a2, a3);
    }
    int v15 = *(unsigned __int8 *)(v3 + v12[9]);
    if (v15 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v15 & 1, 6LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100228B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100355538);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100355538);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
  uint64_t v15 = sub_10000FD98( (unint64_t *)&qword_1003552B8,  type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp,  (uint64_t)&unk_1002BF798);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
}

Swift::Int sub_100228CE4()
{
  return sub_10000DF8C( type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  &qword_100363EF0,  (uint64_t)&unk_1002D9C68);
}

uint64_t sub_100228D00@<X0>(int *a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + a1[6];
  uint64_t v5 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  uint64_t v7 = a1[8];
  *((_BYTE *)a2 + a1[7]) = 2;
  *((_BYTE *)a2 + v7) = 2;
  *((_BYTE *)a2 + a1[9]) = 2;
  return result;
}

uint64_t sub_100228D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100228850(a1, a2, a3);
}

uint64_t sub_100228D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002289E0(a1, a2, a3);
}

uint64_t sub_100228DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364408,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9BE0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100228DFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B5788, (uint64_t)qword_10036B5D0, (uint64_t)sub_10022860C, a1);
}

uint64_t sub_100228E18(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100350F98,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9B68);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100228E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100350F98,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9B68);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100228EA8()
{
  return &unk_100345960;
}

unint64_t sub_100228EB4()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_100228ED0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B5E8);
  sub_10000E704(v0, (uint64_t)qword_10036B5E8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32E0;
  uint64_t v8 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v8 = "is_same_account";
  *(void *)(v8 + 8) = 15LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v6 + v4) = 2LL;
  *(void *)uint64_t v12 = "is_family";
  *(void *)(v12 + 8) = 9LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + v6 + 2 * v4);
  int v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)int v14 = "is_shared_home";
  *((void *)v14 + 1) = 14LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v7 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 4LL;
  *(void *)uint64_t v16 = "is_left_bud";
  *((void *)v16 + 1) = 11LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v7 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "is_case";
  *((void *)v18 + 1) = 7LL;
  v18[16] = 2;
  v11();
  char v19 = (void *)(v7 + v6 + 5 * v4);
  int v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)int v20 = "placement";
  *((void *)v20 + 1) = 9LL;
  v20[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100229110()
{
  return sub_100008C30(&qword_1003B5790, (uint64_t)qword_10036B5E8, (uint64_t)sub_100228ED0);
}

uint64_t sub_10022912C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B5790, (uint64_t)qword_10036B5E8, (uint64_t)sub_100228ED0, a1);
}

uint64_t sub_100229148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 24);
          goto LABEL_5;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 32);
          goto LABEL_5;
        case 5LL:
          uint64_t v9 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 36);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
          break;
        case 6LL:
          uint64_t v10 = v3 + *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL) + 40);
          unint64_t v11 = sub_10022C190();
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v10,  &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement,  v11,  a2,  a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100229290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  uint64_t v10 = (int *)result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v12 = *(unsigned __int8 *)(v5 + v10[6]);
    if (v12 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2LL, a2, a3);
    }
    int v13 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    int v14 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v14 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 4LL, a2, a3);
    }
    sub_1002293FC(v5, a1, a2, a3);
    sub_100229470(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_1002293FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 36));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 5LL, a3, a4);
  }
  return result;
}

uint64_t sub_100229470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 8)
  {
    char v9 = *(_BYTE *)(a1 + *(int *)(result + 40));
    unint64_t v8 = sub_10022C190();
    return dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v9,  6LL,  &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement,  v8,  a3,  a4);
  }

  return result;
}

Swift::Int sub_1002294FC()
{
  return sub_10000DF8C( type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  &qword_100363EF8,  (uint64_t)&unk_1002D9DD0);
}

uint64_t sub_100229518@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  *(_BYTE *)(a2 + v5) = 2;
  uint64_t v6 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v6) = 2;
  uint64_t v7 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 2;
  *(_BYTE *)(a2 + v7) = 8;
  return result;
}

uint64_t sub_100229568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100229148(a1, a2, a3);
}

uint64_t sub_10022957C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100229290(a1, a2, a3);
}

uint64_t sub_100229590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364400,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9D48);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002295E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B5790, (uint64_t)qword_10036B5E8, (uint64_t)sub_100228ED0, a1);
}

uint64_t sub_1002295FC(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100363F80,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9CD0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10022963C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100363F80,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9CD0);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100229690()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B600);
  sub_10000E704(v0, (uint64_t)qword_10036B600);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42A0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "PLACEMENT_UNKNOWN";
  *(void *)(v9 + 8) = 17LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  int v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "PLACEMENT_IN_EAR";
  *(void *)(v13 + 8) = 16LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  int v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *int v14 = 2LL;
  *(void *)uint64_t v15 = "PLACEMENT_OUT_OF_EAR";
  *((void *)v15 + 1) = 20LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "PLACEMENT_IN_CASE";
  *((void *)v17 + 1) = 17LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  char v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 4LL;
  *(void *)char v19 = "PLACEMENT_ON_EAR";
  *((void *)v19 + 1) = 16LL;
  v19[16] = 2;
  v12();
  int v20 = (void *)(v8 + 5 * v4);
  char v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 5LL;
  *(void *)char v21 = "PLACEMENT_OFF_EAR";
  *((void *)v21 + 1) = 17LL;
  v21[16] = 2;
  v12();
  char v22 = (void *)(v8 + 6 * v4);
  int v23 = (char *)v22 + *(int *)(v2 + 48);
  *char v22 = 6LL;
  *(void *)int v23 = "PLACEMENT_ON_NECK";
  *((void *)v23 + 1) = 17LL;
  v23[16] = 2;
  v12();
  char v24 = (void *)(v8 + 7 * v4);
  char v25 = (char *)v24 + *(int *)(v2 + 48);
  void *v24 = 7LL;
  *(void *)char v25 = "PLACEMENT_DISABLED";
  *((void *)v25 + 1) = 18LL;
  v25[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100229934()
{
  return sub_100008C30(&qword_1003B5798, (uint64_t)qword_10036B600, (uint64_t)sub_100229690);
}

uint64_t sub_100229950@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B5798, (uint64_t)qword_10036B600, (uint64_t)sub_100229690, a1);
}

uint64_t sub_10022996C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B5798, (uint64_t)qword_10036B600, (uint64_t)sub_100229690, a1);
}

uint64_t sub_100229988(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL);
  uint64_t v4 = __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v19 = 0;
    return v19 & 1;
  }

  if (v10 && a1 != a2)
  {
    unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v23 = *(void *)(v7 + 72);
    uint64_t v12 = v10 - 1;
    while (1)
    {
      sub_10000404C(a1 + v11, (uint64_t)v9, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement);
      sub_10000404C(a2 + v11, (uint64_t)v6, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement);
      uint64_t v13 = *(int *)(v24 + 20);
      uint64_t v14 = *(void *)&v9[v13];
      uint64_t v15 = *(void *)&v6[v13];
      if (v14 != v15)
      {
        swift_retain(*(void *)&v9[v13]);
        swift_retain(v15);
        BOOL v16 = sub_100227654(v14, v15);
        swift_release(v15);
        swift_release(v14);
        if (!v16) {
          break;
        }
      }

      uint64_t v17 = type metadata accessor for UnknownStorage(0LL);
      uint64_t v18 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v17, v18);
      sub_100004090((uint64_t)v6, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement);
      sub_100004090((uint64_t)v9, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement);
      BOOL v21 = v12-- != 0;
      if ((v19 & 1) != 0)
      {
        v11 += v23;
        if (v21) {
          continue;
        }
      }

      return v19 & 1;
    }

    sub_100004090((uint64_t)v6, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement);
    sub_100004090((uint64_t)v9, type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement);
    goto LABEL_15;
  }

  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_100229B70(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v54 - v7;
  uint64_t v8 = type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100003A0C(&qword_10035C418);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100003A0C(&qword_100355538);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v61 = (uint64_t)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v16);
  int v20 = (char *)&v54 - v19;
  __chkstk_darwin(v18);
  char v22 = (char *)&v54 - v21;
  uint64_t v23 = type metadata accessor for CLP_LogEntry_AONLoc_BtNotification(0LL);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v59 = a1;
  uint64_t v25 = (uint64_t)a1 + v24;
  int v26 = (int *)v23;
  sub_10000E6C0(v25, (uint64_t)v22, &qword_100355538);
  uint64_t v27 = v26[6];
  int v60 = a2;
  sub_10000E6C0((uint64_t)a2 + v27, (uint64_t)v20, &qword_100355538);
  uint64_t v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10000E6C0((uint64_t)v22, (uint64_t)v14, &qword_100355538);
  sub_10000E6C0((uint64_t)v20, v28, &qword_100355538);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v14, 1LL, v8) == 1)
  {
    sub_100015764((uint64_t)v20, &qword_100355538);
    sub_100015764((uint64_t)v22, &qword_100355538);
    if (v29(v28, 1LL, v8) == 1)
    {
      sub_100015764((uint64_t)v14, &qword_100355538);
      goto LABEL_8;
    }

uint64_t sub_10022A020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v23[-v9];
  uint64_t v11 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo(0LL) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  uint64_t v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }

  if (v16 >> 60 == 15)
  {
LABEL_5:
    sub_10005F2F8(v12, v13);
    sub_10005F2F8(v15, v16);
    sub_10005F30C(v12, v13);
    sub_10005F30C(v15, v16);
LABEL_8:
    char v20 = 0;
    return v20 & 1;
  }

  sub_10005F2F8(v12, v13);
  sub_10005F2F8(v15, v16);
  sub_1000600A8(v12, v13);
  int v24 = v17;
  sub_10005F30C(v15, v16);
  sub_10005F30C(v12, v13);
  if ((v24 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  uint64_t v19 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v19);
  uint64_t v21 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_10022A204(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = (int *)type metadata accessor for CLP_LogEntry_AONLoc_Type7Info(0LL);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_28;
    }
  }

  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_28;
  }

  uint64_t v15 = v11[6];
  int v16 = *(unsigned __int8 *)(a1 + v15);
  int v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2) {
      goto LABEL_28;
    }
  }

  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_28;
  }

  uint64_t v18 = v11[7];
  int v19 = *(unsigned __int8 *)(a1 + v18);
  int v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2) {
      goto LABEL_28;
    }
  }

  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_28;
  }

  uint64_t v21 = v11[8];
  int v22 = *(unsigned __int8 *)(a1 + v21);
  int v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 != 2) {
      goto LABEL_28;
    }
  }

  else if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
  {
    goto LABEL_28;
  }

  uint64_t v24 = v11[9];
  int v25 = *(unsigned __int8 *)(a1 + v24);
  int v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2) {
      goto LABEL_28;
    }
  }

  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_28;
  }

  uint64_t v27 = v11[10];
  int v28 = *(unsigned __int8 *)(a1 + v27);
  int v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 8)
  {
    if (v29 != 8)
    {
LABEL_28:
      char v30 = 0;
      return v30 & 1;
    }

LABEL_32:
    char v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v32(v10, a1, v4);
    v32(v8, a2, v4);
    uint64_t v33 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v30 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v33);
    uint64_t v34 = *(void (**)(char *, uint64_t))(v5 + 8);
    v34(v8, v4);
    v34(v10, v4);
    return v30 & 1;
  }

  char v30 = 0;
  if (v29 != 8 && v28 == v29) {
    goto LABEL_32;
  }
  return v30 & 1;
}

          sub_10029A178(v1);
          return (unint64_t)v3;
        }
      }
    }
  }

uint64_t sub_10022A464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement(0LL) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  if (v12 == v13
    || (swift_retain(*(void *)(a1 + v11)),
        swift_retain(v13),
        BOOL v14 = sub_100227654(v12, v13),
        swift_release(v13),
        swift_release(v12),
        v14))
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, a1, v4);
    v15(v8, a2, v4);
    uint64_t v16 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v17 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v16);
    uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v8, v4);
    v18(v10, v4);
  }

  else
  {
    char v17 = 0;
  }

  return v17 & 1;
}

unint64_t sub_10022A5D4()
{
  unint64_t result = qword_100363F00;
  if (!qword_100363F00)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D9658, &type metadata for CLP_LogEntry_AONLoc_BtAdvertisement.BtType);
    atomic_store(result, (unint64_t *)&qword_100363F00);
  }

  return result;
}

unint64_t sub_10022A61C()
{
  unint64_t result = qword_100363F08;
  if (!qword_100363F08)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D96E0, &type metadata for CLP_LogEntry_AONLoc_BtAdvertisement.BtType);
    atomic_store(result, (unint64_t *)&qword_100363F08);
  }

  return result;
}

uint64_t sub_10022A660()
{
  return sub_100010014(&qword_100363F10, &qword_100363F18);
}

unint64_t sub_10022A688()
{
  unint64_t result = qword_100363F20;
  if (!qword_100363F20)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D9750, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&qword_100363F20);
  }

  return result;
}

unint64_t sub_10022A6D0()
{
  unint64_t result = qword_100363F28;
  if (!qword_100363F28)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D9778, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&qword_100363F28);
  }

  return result;
}

unint64_t sub_10022A718()
{
  unint64_t result = qword_100363F30;
  if (!qword_100363F30)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D9800, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&qword_100363F30);
  }

  return result;
}

uint64_t sub_10022A75C()
{
  return sub_100010014(&qword_100363F38, &qword_100363F40);
}

uint64_t sub_10022A780()
{
  return sub_10000FD98( &qword_100363F48,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9948);
}

uint64_t sub_10022A7AC()
{
  return sub_10000FD98( &qword_1003517B0,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9870);
}

uint64_t sub_10022A7D8()
{
  return sub_10000FD98( &qword_100363EE0,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D9970);
}

uint64_t sub_10022A804()
{
  return sub_10000FD98( &qword_100363F50,  type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement,  (uint64_t)&unk_1002D99B0);
}

uint64_t sub_10022A830()
{
  return sub_10000FD98( &qword_100363F58,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9AD8);
}

uint64_t sub_10022A85C()
{
  return sub_10000FD98( &qword_100363F60,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9A00);
}

uint64_t sub_10022A888()
{
  return sub_10000FD98( &qword_100363EE8,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9B00);
}

uint64_t sub_10022A8B4()
{
  return sub_10000FD98( &qword_100363F68,  type metadata accessor for CLP_LogEntry_AONLoc_BtDeviceInfo,  (uint64_t)&unk_1002D9B40);
}

uint64_t sub_10022A8E0()
{
  return sub_10000FD98( &qword_100363F70,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9C40);
}

uint64_t sub_10022A90C()
{
  return sub_10000FD98( &qword_100350F98,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9B68);
}

uint64_t sub_10022A938()
{
  return sub_10000FD98( &qword_100363EF0,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9C68);
}

uint64_t sub_10022A964()
{
  return sub_10000FD98( &qword_100351750,  type metadata accessor for CLP_LogEntry_AONLoc_BtNotification,  (uint64_t)&unk_1002D9CA8);
}

uint64_t sub_10022A990()
{
  return sub_10000FD98( &qword_100363F78,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9DA8);
}

uint64_t sub_10022A9BC()
{
  return sub_10000FD98( &qword_100363F80,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9CD0);
}

uint64_t sub_10022A9E8()
{
  return sub_10000FD98( &qword_100363EF8,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9DD0);
}

uint64_t sub_10022AA14()
{
  return sub_10000FD98( &qword_100363F88,  type metadata accessor for CLP_LogEntry_AONLoc_Type7Info,  (uint64_t)&unk_1002D9E10);
}

uint64_t sub_10022AA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022AA4C);
}

uint64_t sub_10022AA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  return (v9 + 1);
}

uint64_t sub_10022AAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022AAD4);
}

uint64_t sub_10022AAD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_BtAdvertisement.BtType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10022AB98 + 4 * byte_1002D9620[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10022ABCC + 4 * byte_1002D961B[v4]))();
}

uint64_t sub_10022ABCC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022ABD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10022ABDCLL);
  }
  return result;
}

uint64_t sub_10022ABE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10022ABF0LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_10022ABF4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022ABFC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement.BtType()
{
  return &type metadata for CLP_LogEntry_AONLoc_BtAdvertisement.BtType;
}

uint64_t *sub_10022AC18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }

    else
    {
      uint64_t v13 = *(void *)v10;
      sub_100017F58(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
  }

  return a1;
}

uint64_t sub_10022ACD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }

  else
  {
    uint64_t v11 = *v9;
    sub_100017F58(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }

  return a1;
}

uint64_t sub_10022AD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15LL)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      sub_100017F58(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      sub_100017F9C(v13, v14);
      return a1;
    }

    sub_1001DEDE4((uint64_t)v8);
    goto LABEL_6;
  }

  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }

  uint64_t v11 = *v9;
  sub_100017F58(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
  return a1;
}

uint64_t sub_10022AE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10022AE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      sub_100017F9C(v12, v10);
      return a1;
    }

    sub_1001DEDE4((uint64_t)v8);
  }

  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  return a1;
}

uint64_t sub_10022AF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022AF34);
}

uint64_t sub_10022AF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  uint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  BOOL v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  unsigned int v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10) {
    return 0LL;
  }
  else {
    return v11;
  }
}

uint64_t sub_10022AFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022AFC8);
}

uint64_t sub_10022AFC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  BOOL v10 = (void *)(a1 + *(int *)(a4 + 20));
  *BOOL v10 = 0LL;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_10022B050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002D9EC8);
}

void *sub_10022B05C(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    BOOL v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    unint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1LL, v16))
    {
      uint64_t v18 = sub_100003A0C(&qword_100355538);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      v12(v14, v15, v11);
      uint64_t v19 = v16[5];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v16[6];
      int v23 = &v14[v22];
      uint64_t v24 = &v15[v22];
      *(void *)int v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v16[7];
      int v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      *(void *)int v26 = *(void *)v27;
      v26[8] = v27[8];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0LL, 1LL, v16);
    }

    uint64_t v28 = a3[8];
    *((_BYTE *)v7 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v7 + v28) = *((_BYTE *)a2 + v28);
    *((_BYTE *)v7 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }

  return v7;
}

void *sub_10022B200(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  unint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_100003A0C(&qword_100355538);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    v11(v13, v14, v10);
    uint64_t v18 = v15[5];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = v15[6];
    uint64_t v22 = &v13[v21];
    int v23 = &v14[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = v15[7];
    uint64_t v25 = &v13[v24];
    int v26 = &v14[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  uint64_t v27 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

void *sub_10022B37C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  uint64_t v48 = a3;
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t v47 = *((void *)v17 - 1);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, int *))(v47 + 48);
  int v19 = v18(v15, 1LL, v17);
  int v20 = v18(v16, 1LL, v17);
  if (!v19)
  {
    if (!v20)
    {
      v13(v15, v16, v11);
      uint64_t v35 = v17[5];
      int v36 = &v15[v35];
      int v37 = &v16[v35];
      char v38 = v37[8];
      *(void *)int v36 = *(void *)v37;
      v36[8] = v38;
      uint64_t v39 = v17[6];
      int v40 = &v15[v39];
      uint64_t v41 = &v16[v39];
      char v42 = v41[8];
      *(void *)int v40 = *(void *)v41;
      v40[8] = v42;
      uint64_t v43 = v17[7];
      char v44 = &v15[v43];
      uint64_t v45 = &v16[v43];
      char v46 = v45[8];
      *(void *)char v44 = *(void *)v45;
      v44[8] = v46;
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v15, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }

  if (v20)
  {
LABEL_6:
    uint64_t v33 = sub_100003A0C(&qword_100355538);
    memcpy(v15, v16, *(void *)(*(void *)(v33 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v16, v11);
  uint64_t v21 = v17[5];
  uint64_t v22 = &v15[v21];
  int v23 = &v16[v21];
  char v24 = v23[8];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v24;
  uint64_t v25 = v17[6];
  int v26 = &v15[v25];
  uint64_t v27 = &v16[v25];
  char v28 = v27[8];
  *(void *)int v26 = *(void *)v27;
  v26[8] = v28;
  uint64_t v29 = v17[7];
  char v30 = &v15[v29];
  uint64_t v31 = &v16[v29];
  char v32 = v31[8];
  *(void *)char v30 = *(void *)v31;
  v30[8] = v32;
  (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v15, 0LL, 1LL, v17);
LABEL_7:
  *((_BYTE *)a1 + v48[7]) = *((_BYTE *)a2 + v48[7]);
  *((_BYTE *)a1 + v48[8]) = *((_BYTE *)a2 + v48[8]);
  *((_BYTE *)a1 + v48[9]) = *((_BYTE *)a2 + v48[9]);
  return a1;
}

void *sub_10022B5B4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1LL, v14))
  {
    uint64_t v16 = sub_100003A0C(&qword_100355538);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    v10(v12, v13, v9);
    uint64_t v17 = v14[5];
    uint64_t v18 = &v12[v17];
    int v19 = &v13[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v14[6];
    uint64_t v21 = &v12[v20];
    uint64_t v22 = &v13[v20];
    *(void *)uint64_t v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v14[7];
    char v24 = &v12[v23];
    uint64_t v25 = &v13[v23];
    *(void *)char v24 = *(void *)v25;
    v24[8] = v25[8];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0LL, 1LL, v14);
  }

  uint64_t v26 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  return a1;
}

void *sub_10022B728(void *a1, void *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  char v42 = a3;
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (int *)type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp(0LL);
  uint64_t v41 = *((void *)v16 - 1);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, int *))(v41 + 48);
  int v18 = v17(v14, 1LL, v16);
  int v19 = v17(v15, 1LL, v16);
  if (!v18)
  {
    if (!v19)
    {
      v12(v14, v15, v10);
      uint64_t v32 = v16[5];
      uint64_t v33 = &v14[v32];
      uint64_t v34 = &v15[v32];
      *(void *)uint64_t v33 = *(void *)v34;
      v33[8] = v34[8];
      uint64_t v35 = v16[6];
      int v36 = &v14[v35];
      int v37 = &v15[v35];
      *(void *)int v36 = *(void *)v37;
      v36[8] = v37[8];
      uint64_t v38 = v16[7];
      uint64_t v39 = &v14[v38];
      int v40 = &v15[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v40[8];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v14, type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    goto LABEL_6;
  }

  if (v19)
  {
LABEL_6:
    uint64_t v29 = sub_100003A0C(&qword_100355538);
    memcpy(v14, v15, *(void *)(*(void *)(v29 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  uint64_t v20 = v16[5];
  uint64_t v21 = &v14[v20];
  uint64_t v22 = &v15[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = v16[6];
  char v24 = &v14[v23];
  uint64_t v25 = &v15[v23];
  *(void *)char v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = v16[7];
  uint64_t v27 = &v14[v26];
  char v28 = &v15[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  (*(void (**)(char *, void, uint64_t, int *))(v41 + 56))(v14, 0LL, 1LL, v16);
LABEL_7:
  uint64_t v30 = v42[8];
  *((_BYTE *)a1 + v42[7]) = *((_BYTE *)a2 + v42[7]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  *((_BYTE *)a1 + v42[9]) = *((_BYTE *)a2 + v42[9]);
  return a1;
}

uint64_t sub_10022B954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022B960);
}

uint64_t sub_10022B960(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_100355538);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_10022BA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022BA10);
}

char *sub_10022BA10(char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_100355538);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 24);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_10022BAB0(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_100356B40,  type metadata accessor for CLP_LogEntry_PrivateData_TimeStamp);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      v6[3] = &unk_1002D9F08;
      void v6[4] = &unk_1002D9F08;
      v6[5] = &unk_1002D9F08;
      swift_initStructMetadata(a1, 256LL, 6LL, v6, a1 + 16);
    }
  }

void *sub_10022BB60(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    uint64_t v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    uint64_t v10 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  }

  return a1;
}

uint64_t sub_10022BC18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t sub_10022BCA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10022BD3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t sub_10022BDC8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t sub_10022BE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10022BE60);
}

uint64_t sub_10022BE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2) {
    int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v10 = -2;
  }
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10022BEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10022BF04);
}

uint64_t sub_10022BF04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
  return result;
}

uint64_t sub_10022BF7C(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002D9F08;
    v4[2] = &unk_1002D9F08;
    v4[3] = &unk_1002D9F08;
    v4[4] = &unk_1002D9F08;
    void v4[5] = &unk_1002D9F08;
    v4[6] = &unk_1002D9F40;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t storeEnumTagSinglePayload for CLP_LogEntry_AONLoc_Type7Info.Placement( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF8) {
    return ((uint64_t (*)(void))((char *)&loc_10022C04C + 4 * byte_1002D962A[v4]))();
  }
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10022C080 + 4 * byte_1002D9625[v4]))();
}

uint64_t sub_10022C080(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022C088(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10022C090LL);
  }
  return result;
}

uint64_t sub_10022C09C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10022C0A4LL);
  }
  *(_BYTE *)uint64_t result = a2 + 7;
  return result;
}

uint64_t sub_10022C0A8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022C0B0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CLP_LogEntry_AONLoc_Type7Info.Placement()
{
  return &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement;
}

uint64_t sub_10022C0CC()
{
  return type metadata accessor for CLP_LogEntry_AONLoc_BtAdvertisement._StorageClass(0LL);
}

void sub_10022C0D4(uint64_t a1)
{
  v4[0] = "\t";
  v4[1] = "\t";
  v4[2] = &unk_1002D9FF0;
  v4[3] = &unk_1002D9FF0;
  v4[4] = &unk_1002D9FF0;
  void v4[5] = &unk_1002D9EC8;
  v4[6] = &unk_1002DA008;
  void v4[7] = "\t";
  void v4[8] = "\t";
  v4[9] = &unk_1002D9FF0;
  void v4[10] = &unk_1002DA020;
  v4[11] = &unk_1002DA020;
  sub_1000119EC(319LL, (unint64_t *)&unk_1003641E0, type metadata accessor for CLP_LogEntry_AONLoc_Type7Info);
  if (v3 <= 0x3F)
  {
    v4[12] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 13LL, v4, a1 + 80);
  }

unint64_t sub_10022C190()
{
  unint64_t result = qword_100364420;
  if (!qword_100364420)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002D97B8, &type metadata for CLP_LogEntry_AONLoc_Type7Info.Placement);
    atomic_store(result, (unint64_t *)&qword_100364420);
  }

  return result;
}

uint64_t sub_10022C1D4(char a1)
{
  return qword_1002DF0A0[a1];
}

BOOL sub_10022C1E8(char *a1, char *a2)
{
  return qword_1002DF0A0[*a1] == qword_1002DF0A0[*a2];
}

BOOL sub_10022C20C(char a1, char a2)
{
  return qword_1002DF128[a1] == qword_1002DF128[a2];
}

uint64_t sub_10022C230(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10028469C();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_10022C268()
{
  return qword_1002DF0A0[*v0];
}

void sub_10022C27C(void *a1@<X8>)
{
  *a1 = qword_1002DF0A0[*v1];
}

_UNKNOWN **sub_10022C294()
{
  return &off_100345EB0;
}

void sub_10022C2A0(void *a1@<X8>)
{
  *a1 = &off_100345ED8;
}

uint64_t sub_10022C2B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100284658();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10022C2E8()
{
  return &off_100345F00;
}

void sub_10022C2F4(void *a1@<X8>)
{
  *a1 = &off_100345F28;
}

uint64_t sub_10022C304(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100284614();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10022C33C()
{
  return &off_100345F50;
}

void sub_10022C348(void *a1@<X8>)
{
  *a1 = &off_100345F78;
}

uint64_t sub_10022C358(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1002845D0();
  return Enum.hash(into:)(a1, a2, v4);
}

_UNKNOWN **sub_10022C390()
{
  return &off_100345FA0;
}

void sub_10022C39C(void *a1@<X8>)
{
  *a1 = &off_100345FA0;
}

uint64_t sub_10022C3AC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 24)) {
    return 0LL;
  }
  else {
    return *(void *)(v1 + 16);
  }
}

uint64_t sub_10022C400(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10024C760(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 16, v12, 1LL, 0LL);
  *(void *)(v10 + 16) = a1;
  *(_BYTE *)(v10 + 24) = 0;
  return result;
}

void (*sub_10022C4A8(void *a1))(uint64_t *a1, char a2)
{
  unint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 16, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 16);
  if (*(_BYTE *)(v5 + 24)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_10022C528;
}

void sub_10022C528(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 80)
                                                                                            + *(int *)(*a1 + 88)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 80);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10024C760(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10022C5FC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 24) & 1) == 0;
}

uint64_t sub_10022C64C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10024C760(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 16, v10, 1LL, 0LL);
  *(void *)(v8 + 16) = 0LL;
  *(_BYTE *)(v8 + 24) = 1;
  return result;
}

uint64_t sub_10022C6EC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_beginAccess(v1 + 28, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 32)) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v1 + 28);
  }
}

uint64_t sub_10022C740(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10024C760(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 28, v12, 1LL, 0LL);
  *(_DWORD *)(v10 + 28) = a1;
  *(_BYTE *)(v10 + 32) = 0;
  return result;
}

void (*sub_10022C7E8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 28, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)(v5 + 28);
  if (*(_BYTE *)(v5 + 32)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_10022C868;
}

void sub_10022C868(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10024C760(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10022C93C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_beginAccess(v1 + 28, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 32) & 1) == 0;
}

uint64_t sub_10022C98C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10024C760(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 28, v10, 1LL, 0LL);
  *(_DWORD *)(v8 + 28) = 0;
  *(_BYTE *)(v8 + 32) = 1;
  return result;
}

uint64_t sub_10022CA2C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_beginAccess(v1 + 33, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 33) == 61) {
    return 0LL;
  }
  else {
    return *(unsigned __int8 *)(v1 + 33);
  }
}

uint64_t sub_10022CA7C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10024C760(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 33, v12, 1LL, 0LL);
  *(_BYTE *)(v10 + 33) = a1;
  return result;
}

void (*sub_10022CB20(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 33, v3, 0LL, 0LL);
  int v6 = *(unsigned __int8 *)(v5 + 33);
  if (v6 == 61) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_10022CB9C;
}

void sub_10022CB9C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10024C760(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10022CC70()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_beginAccess(v1 + 33, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 33) != 61;
}

uint64_t sub_10022CCC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10024C760(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 33, v10, 1LL, 0LL);
  *(_BYTE *)(v8 + 33) = 61;
  return result;
}

uint64_t sub_10022CD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364430);
  __chkstk_darwin(v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v13, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364430);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Position(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  *(_BYTE *)(a1 + v7[6]) = 4;
  *(_BYTE *)(a1 + v7[7]) = 2;
  uint64_t v10 = a1 + v7[8];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  return sub_100015764((uint64_t)v5, &qword_100364430);
}

uint64_t sub_10022CEC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  uint64_t v3 = a1 + v2[5];
  uint64_t v4 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))( v3,  1LL,  1LL,  v4);
  *(_BYTE *)(a1 + v2[6]) = 4;
  *(_BYTE *)(a1 + v2[7]) = 2;
  uint64_t v6 = a1 + v2[8];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  return result;
}

uint64_t sub_10022CF4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364430);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364430);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364430);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022D0CC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364430);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364430);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    uint64_t v12 = type metadata accessor for Proto_Gnss_Position(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
    v9[v6[6]] = 4;
    v9[v6[7]] = 2;
    uint64_t v13 = &v9[v6[8]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100364430);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  }

  return sub_10022D258;
}

void sub_10022D258(uint64_t a1, char a2)
{
}

BOOL sub_10022D26C()
{
  return sub_10001D054( &qword_100364430,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t sub_10022D290()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364430);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364430);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022D3C0@<X0>(uint64_t a1@<X8>)
{
  return sub_10023074C( &qword_100364438,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  a1);
}

int *sub_10022D3DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10002EB64(type metadata accessor for Proto_Gpsd_InjectAssistanceTime, a1);
}

uint64_t sub_10022D3E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364438);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364438);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364438);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022D568(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364438);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364438);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100364438);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  }

  return sub_10022D6D0;
}

void sub_10022D6D0(uint64_t a1, char a2)
{
}

BOOL sub_10022D6E4()
{
  return sub_10001D054( &qword_100364438,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_10022D708()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364438);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364438);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022D838@<X0>(void *a1@<X8>)
{
  return sub_10023180C( &qword_100364440,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  a1);
}

uint64_t sub_10022D854@<X0>(void *a1@<X8>)
{
  return sub_10022DCB4((void (*)(void))type metadata accessor for Proto_Gpsd_SetAssistancePressure, a1);
}

uint64_t sub_10022D860(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364440);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364440);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364440);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022D9E0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364440);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364440);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    sub_100015764((uint64_t)v5, &qword_100364440);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  }

  return sub_10022DB24;
}

void sub_10022DB24(uint64_t a1, char a2)
{
}

BOOL sub_10022DB38()
{
  return sub_10001D054( &qword_100364440,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure,  type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t sub_10022DB5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364440);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364440);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022DC8C@<X0>(void *a1@<X8>)
{
  return sub_10023180C( &qword_100364448,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  a1);
}

uint64_t sub_10022DCA8@<X0>(void *a1@<X8>)
{
  return sub_10022DCB4((void (*)(void))type metadata accessor for Proto_Gpsd_SetAssistanceAccel, a1);
}

uint64_t sub_10022DCB4@<X0>(void (*a1)(void)@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  a1(0LL);
  return UnknownStorage.init()();
}

uint64_t sub_10022DCF4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364448);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364448);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364448);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022DE74(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364448);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364448);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    sub_100015764((uint64_t)v5, &qword_100364448);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  }

  return sub_10022DFB8;
}

void sub_10022DFB8(uint64_t a1, char a2)
{
}

BOOL sub_10022DFCC()
{
  return sub_10001D054( &qword_100364448,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t sub_10022DFF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364448);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364448);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022E120@<X0>(void *a1@<X8>)
{
  return sub_10023180C( &qword_100364450,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  a1);
}

uint64_t sub_10022E13C@<X0>(void *a1@<X8>)
{
  return sub_10022DCB4((void (*)(void))type metadata accessor for Proto_Gpsd_SetAssistanceGyro, a1);
}

uint64_t sub_10022E148(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364450);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364450);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364450);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022E2C8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364450);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364450);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    sub_100015764((uint64_t)v5, &qword_100364450);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  }

  return sub_10022E40C;
}

void sub_10022E40C(uint64_t a1, char a2)
{
}

BOOL sub_10022E420()
{
  return sub_10001D054( &qword_100364450,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t sub_10022E444()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364450);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364450);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022E574@<X0>(uint64_t a1@<X8>)
{
  return sub_10023074C( &qword_100364458,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem,  type metadata accessor for Proto_Gpsd_SetAssistanceDem,  a1);
}

int *sub_10022E590@<X0>(uint64_t a1@<X8>)
{
  return sub_10002EB64(type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

uint64_t sub_10022E59C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364458);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364458);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364458);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022E71C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364458);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364458);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100364458);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  }

  return sub_10022E884;
}

void sub_10022E884(uint64_t a1, char a2)
{
}

BOOL sub_10022E898()
{
  return sub_10001D054( &qword_100364458,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem,  type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_10022E8BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364458);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364458);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022E9EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364460);
  __chkstk_darwin(v3);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v17, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364460);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a1 + v7[7];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  *(_BYTE *)(a1 + v7[8]) = 2;
  uint64_t v11 = a1 + v7[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a1 + v7[10];
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1 + v7[11];
  *(void *)uint64_t v13 = 0LL;
  *(_BYTE *)(v13 + 8) = 1;
  uint64_t v14 = a1 + v7[12];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  *(_BYTE *)(a1 + v7[13]) = 2;
  *(_BYTE *)(a1 + v7[14]) = 2;
  *(_BYTE *)(a1 + v7[15]) = 2;
  *(_BYTE *)(a1 + v7[16]) = 2;
  *(_BYTE *)(a1 + v7[17]) = 2;
  return sub_100015764((uint64_t)v5, &qword_100364460);
}

int *sub_10022EB98@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  *(_BYTE *)(a1 + result[8]) = 2;
  uint64_t v6 = a1 + result[9];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a1 + result[10];
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1 + result[11];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + result[12];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(a1 + result[13]) = 2;
  *(_BYTE *)(a1 + result[14]) = 2;
  *(_BYTE *)(a1 + result[15]) = 2;
  *(_BYTE *)(a1 + result[16]) = 2;
  *(_BYTE *)(a1 + result[17]) = 2;
  return result;
}

uint64_t sub_10022EC68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364460);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364460);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364460);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022EDE8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364460);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364460);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    v9[v6[8]] = 2;
    uint64_t v14 = &v9[v6[9]];
    *(void *)uint64_t v14 = 0LL;
    v14[8] = 1;
    uint64_t v15 = &v9[v6[10]];
    *(void *)uint64_t v15 = 0LL;
    v15[8] = 1;
    uint64_t v16 = &v9[v6[11]];
    *(void *)uint64_t v16 = 0LL;
    void v16[8] = 1;
    uint64_t v17 = &v9[v6[12]];
    *(void *)uint64_t v17 = 0LL;
    v17[8] = 1;
    v9[v6[13]] = 2;
    v9[v6[14]] = 2;
    v9[v6[15]] = 2;
    v9[v6[16]] = 2;
    v9[v6[17]] = 2;
    sub_100015764((uint64_t)v5, &qword_100364460);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  }

  return sub_10022EFC4;
}

void sub_10022EFC4(uint64_t a1, char a2)
{
}

BOOL sub_10022EFD8()
{
  return sub_10001D054( &qword_100364460,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_10022EFFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364460);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364460);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022F12C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364468);
  __chkstk_darwin(v3);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v11, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364468);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a1 + v7[6]) = 10;
  *(_BYTE *)(a1 + v7[7]) = 5;
  *(_BYTE *)(a1 + v7[8]) = 6;
  return sub_100015764((uint64_t)v5, &qword_100364468);
}

int *sub_10022F268@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + result[6]) = 10;
  *(_BYTE *)(a1 + result[7]) = 5;
  *(_BYTE *)(a1 + result[8]) = 6;
  return result;
}

uint64_t sub_10022F2C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364468);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364468);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364468);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022F448(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364468);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364468);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    v9[v6[6]] = 10;
    v9[v6[7]] = 5;
    v9[v6[8]] = 6;
    sub_100015764((uint64_t)v5, &qword_100364468);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  }

  return sub_10022F5B4;
}

void sub_10022F5B4(uint64_t a1, char a2)
{
}

BOOL sub_10022F5C8()
{
  return sub_10001D054( &qword_100364468,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t sub_10022F5EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364468);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364468);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022F71C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364470);
  __chkstk_darwin(v3);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v11, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364470);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(v7 + 20);
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = 4;
  return sub_100015764((uint64_t)v5, &qword_100364470);
}

uint64_t sub_10022F840@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  uint64_t v3 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 4;
  return result;
}

uint64_t sub_10022F888(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364470);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364470);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364470);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022FA08(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364470);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364470);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    v9[*(int *)(v6 + 24)] = 4;
    sub_100015764((uint64_t)v5, &qword_100364470);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  }

  return sub_10022FB5C;
}

void sub_10022FB5C(uint64_t a1, char a2)
{
}

BOOL sub_10022FB70()
{
  return sub_10001D054( &qword_100364470,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t sub_10022FB94()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364470);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364470);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10022FCC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100235108( &qword_100364478,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  8,  a1);
}

uint64_t sub_10022FCE4@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C784(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment, 8, a1);
}

uint64_t sub_10022FCF4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364478);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364478);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364478);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10022FE74(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364478);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364478);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 8;
    sub_100015764((uint64_t)v5, &qword_100364478);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  }

  return sub_10022FFB4;
}

void sub_10022FFB4(uint64_t a1, char a2)
{
}

BOOL sub_10022FFC8()
{
  return sub_10001D054( &qword_100364478,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t sub_10022FFEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364478);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364478);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023011C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364480);
  __chkstk_darwin(v3);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v14, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364480);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = a1 + v7[7];
  *(void *)uint64_t v10 = 0LL;
  *(_BYTE *)(v10 + 8) = 1;
  uint64_t v11 = a1 + v7[8];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  return sub_100015764((uint64_t)v5, &qword_100364480);
}

int *sub_100230264@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  uint64_t v5 = a1 + result[7];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = a1 + result[8];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  return result;
}

uint64_t sub_1002302D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364480);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364480);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364480);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100230450(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364480);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364480);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    uint64_t v14 = &v9[v6[8]];
    *(void *)uint64_t v14 = 0LL;
    v14[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100364480);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  }

  return sub_1002305C8;
}

void sub_1002305C8(uint64_t a1, char a2)
{
}

BOOL sub_1002305DC()
{
  return sub_10001D054( &qword_100364480,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100230600()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364480);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364480);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100230730@<X0>(uint64_t a1@<X8>)
{
  return sub_10023074C( &qword_100364488,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  a1);
}

uint64_t sub_10023074C@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_100003A0C(a1);
  __chkstk_darwin(v9);
  uint64_t v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = *(void *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20)) + *a2;
  swift_beginAccess(v12, v19, 0LL, 0LL);
  sub_10000E6C0(v12, (uint64_t)v11, a1);
  uint64_t v13 = (int *)a3(0LL);
  UnknownStorage.init()();
  uint64_t v14 = a4 + v13[5];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  uint64_t v15 = a4 + v13[6];
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  uint64_t v16 = a4 + v13[7];
  *(void *)uint64_t v16 = 0LL;
  *(_BYTE *)(v16 + 8) = 1;
  return sub_100015764((uint64_t)v11, a1);
}

int *sub_100230880@<X0>(uint64_t a1@<X8>)
{
  return sub_10002EB64(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t sub_10023088C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364488);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364488);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364488);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100230A0C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364488);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364488);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    v13[8] = 1;
    sub_100015764((uint64_t)v5, &qword_100364488);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  }

  return sub_100230B74;
}

void sub_100230B74(uint64_t a1, char a2)
{
}

BOOL sub_100230B88()
{
  return sub_10001D054( &qword_100364488,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_100230BAC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364488);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364488);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100230CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364490);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364490);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  UnknownStorage.init()();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = xmmword_1002B4290;
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = 3;
  return sub_100015764((uint64_t)v5, &qword_100364490);
}

double sub_100230DFC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  double result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v2 + 20)) = xmmword_1002B4290;
  *(_BYTE *)(a1 + *(int *)(v2 + 24)) = 3;
  return result;
}

uint64_t sub_100230E40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364490);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364490);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364490);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100230FC0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364490);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364490);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    *(_OWORD *)&v9[*(int *)(v6 + 20)] = xmmword_1002B4290;
    v9[*(int *)(v6 + 24)] = 3;
    sub_100015764((uint64_t)v5, &qword_100364490);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  }

  return sub_100231110;
}

void sub_100231110(uint64_t a1, char a2)
{
}

BOOL sub_100231124()
{
  return sub_10001D054( &qword_100364490,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t sub_100231148()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364490);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364490);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100231278@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364498);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364498);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  UnknownStorage.init()();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = xmmword_1002B4290;
  return sub_100015764((uint64_t)v5, &qword_100364498);
}

double sub_10023138C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  double result = 0.0;
  *(_OWORD *)(a1 + *(int *)(v2 + 20)) = xmmword_1002B4290;
  return result;
}

uint64_t sub_1002313C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364498);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364498);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364498);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100231544(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364498);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364498);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    *(_OWORD *)&v9[*(int *)(v6 + 20)] = xmmword_1002B4290;
    sub_100015764((uint64_t)v5, &qword_100364498);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  }

  return sub_100231688;
}

void sub_100231688(uint64_t a1, char a2)
{
}

BOOL sub_10023169C()
{
  return sub_10001D054( &qword_100364498,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile,  type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t sub_1002316C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364498);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364498);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002317F0@<X0>(void *a1@<X8>)
{
  return sub_10023180C( &qword_1003644A0,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  a1);
}

uint64_t sub_10023180C@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, void *a4@<X8>)
{
  uint64_t v9 = sub_100003A0C(a1);
  __chkstk_darwin(v9);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = *(void *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20)) + *a2;
  swift_beginAccess(v12, v16, 0LL, 0LL);
  sub_10000E6C0(v12, (uint64_t)v11, a1);
  uint64_t v13 = a3(0LL);
  *a4 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  return sub_100015764((uint64_t)v11, a1);
}

uint64_t sub_10023191C@<X0>(void *a1@<X8>)
{
  return sub_10022DCB4((void (*)(void))type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, a1);
}

uint64_t sub_100231928(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644A0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644A0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644A0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100231AA8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644A0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644A0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    sub_100015764((uint64_t)v5, &qword_1003644A0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  }

  return sub_100231BEC;
}

void sub_100231BEC(uint64_t a1, char a2)
{
}

BOOL sub_100231C00()
{
  return sub_10001D054( &qword_1003644A0,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t sub_100231C24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644A0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644A0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100231D54@<X0>(uint64_t a1@<X8>)
{
  return sub_1002327AC( &qword_1003644A8,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData,  type metadata accessor for Proto_Gpsd_DeleteGnssData,  a1);
}

uint64_t sub_100231D70@<X0>(uint64_t a1@<X8>)
{
  return sub_1002328CC(type metadata accessor for Proto_Gpsd_DeleteGnssData, a1);
}

uint64_t sub_100231D7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644A8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644A8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644A8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100231EFC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644A8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644A8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    sub_100015764((uint64_t)v5, &qword_1003644A8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  }

  return sub_100232044;
}

void sub_100232044(uint64_t a1, char a2)
{
}

BOOL sub_100232058()
{
  return sub_10001D054( &qword_1003644A8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData,  type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_10023207C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644A8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644A8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002321AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003644B0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003644B0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  *(_BYTE *)(a1 + v7[6]) = 2;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  *(_BYTE *)(a1 + v7[10]) = 2;
  return sub_100015764((uint64_t)v5, &qword_1003644B0);
}

int *sub_1002322E4@<X0>(uint64_t a1@<X8>)
{
  double result = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  *(_BYTE *)(a1 + result[9]) = 2;
  *(_BYTE *)(a1 + result[10]) = 2;
  return result;
}

uint64_t sub_100232340(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644B0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644B0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644B0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002324C0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644B0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644B0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    v9[v6[6]] = 2;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    v9[v6[10]] = 2;
    sub_100015764((uint64_t)v5, &qword_1003644B0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  }

  return sub_100232628;
}

void sub_100232628(uint64_t a1, char a2)
{
}

BOOL sub_10023263C()
{
  return sub_10001D054( &qword_1003644B0,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport,  type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t sub_100232660()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644B0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644B0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100232790@<X0>(uint64_t a1@<X8>)
{
  return sub_1002327AC( &qword_1003644B8,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler,  type metadata accessor for Proto_Gpsd_SetNmeaHandler,  a1);
}

uint64_t sub_1002327AC@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_100003A0C(a1);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = *(void *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20)) + *a2;
  swift_beginAccess(v12, v17, 0LL, 0LL);
  sub_10000E6C0(v12, (uint64_t)v11, a1);
  uint64_t v13 = a3(0LL);
  UnknownStorage.init()();
  uint64_t v14 = a4 + *(int *)(v13 + 20);
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  return sub_100015764((uint64_t)v11, a1);
}

uint64_t sub_1002328C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002328CC(type metadata accessor for Proto_Gpsd_SetNmeaHandler, a1);
}

uint64_t sub_1002328CC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = a1(0LL);
  uint64_t v5 = a2 + *(int *)(result + 20);
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  return result;
}

uint64_t sub_10023290C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644B8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644B8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644B8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100232A8C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644B8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644B8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    sub_100015764((uint64_t)v5, &qword_1003644B8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  }

  return sub_100232BD4;
}

void sub_100232BD4(uint64_t a1, char a2)
{
}

BOOL sub_100232BE8()
{
  return sub_10001D054( &qword_1003644B8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler,  type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_100232C0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644B8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644B8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100232D3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003644C0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v11, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003644C0);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = 2;
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  return sub_100015764((uint64_t)v5, &qword_1003644C0);
}

uint64_t sub_100232E60@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  *(_BYTE *)(a1 + *(int *)(result + 20)) = 2;
  uint64_t v3 = a1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  return result;
}

uint64_t sub_100232EA8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644C0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644C0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644C0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100233028(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644C0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644C0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    uint64_t v11 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    sub_100015764((uint64_t)v5, &qword_1003644C0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  }

  return sub_10023317C;
}

void sub_10023317C(uint64_t a1, char a2)
{
}

BOOL sub_100233190()
{
  return sub_10001D054( &qword_1003644C0,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t sub_1002331B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644C0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644C0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002332E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100248148( &qword_1003644C8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  a1);
}

uint64_t sub_100233308@<X0>(uint64_t a1@<X8>)
{
  return sub_10015AC98(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations, a1);
}

uint64_t sub_100233314(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644C8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644C8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644C8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100233494(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644C8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644C8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    sub_100015764((uint64_t)v5, &qword_1003644C8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  }

  return sub_1002335EC;
}

void sub_1002335EC(uint64_t a1, char a2)
{
}

BOOL sub_100233600()
{
  return sub_10001D054( &qword_1003644C8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_100233624()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644C8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644C8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100233754@<X0>(uint64_t a1@<X8>)
{
  return sub_100235108( &qword_1003644D0,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  2,  a1);
}

uint64_t sub_100233774@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C784(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling, 2, a1);
}

uint64_t sub_100233784(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644D0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644D0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644D0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100233904(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644D0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644D0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    sub_100015764((uint64_t)v5, &qword_1003644D0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  }

  return sub_100233A44;
}

void sub_100233A44(uint64_t a1, char a2)
{
}

BOOL sub_100233A58()
{
  return sub_10001D054( &qword_1003644D0,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t sub_100233A7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644D0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644D0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100233BAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100234018( &qword_1003644D8,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent,  type metadata accessor for Proto_Gpsd_TerminationImminent,  a1);
}

uint64_t sub_100233BC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100234130(type metadata accessor for Proto_Gpsd_TerminationImminent, a1);
}

uint64_t sub_100233BD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644D8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_TerminationImminent);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644D8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644D8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100233D54(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644D8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644D8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(void *)uint64_t v11 = 0LL;
    *((void *)v11 + 1) = 0LL;
    sub_100015764((uint64_t)v5, &qword_1003644D8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_TerminationImminent);
  }

  return sub_100233E94;
}

void sub_100233E94(uint64_t a1, char a2)
{
}

BOOL sub_100233EA8()
{
  return sub_10001D054( &qword_1003644D8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent,  type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t sub_100233ECC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644D8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644D8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100233FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_100234018( &qword_1003644E0,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage,  type metadata accessor for Proto_Gpsd_ExitMessage,  a1);
}

uint64_t sub_100234018@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_100003A0C(a1);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v12 = *(void *)(v4 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20)) + *a2;
  swift_beginAccess(v12, v17, 0LL, 0LL);
  sub_10000E6C0(v12, (uint64_t)v11, a1);
  uint64_t v13 = a3(0LL);
  UnknownStorage.init()();
  uint64_t v14 = (void *)(a4 + *(int *)(v13 + 20));
  *uint64_t v14 = 0LL;
  v14[1] = 0LL;
  return sub_100015764((uint64_t)v11, a1);
}

uint64_t sub_100234124@<X0>(uint64_t a1@<X8>)
{
  return sub_100234130(type metadata accessor for Proto_Gpsd_ExitMessage, a1);
}

uint64_t sub_100234130@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = a1(0LL);
  uint64_t v5 = (void *)(a2 + *(int *)(result + 20));
  *uint64_t v5 = 0LL;
  v5[1] = 0LL;
  return result;
}

uint64_t sub_100234168(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644E0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_ExitMessage);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644E0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644E0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002342E8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(void *)uint64_t v11 = 0LL;
    *((void *)v11 + 1) = 0LL;
    sub_100015764((uint64_t)v5, &qword_1003644E0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_ExitMessage);
  }

  return sub_100234428;
}

void sub_100234428(uint64_t a1, char a2)
{
}

BOOL sub_10023443C()
{
  return sub_10001D054( &qword_1003644E0,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage,  type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t sub_100234460()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644E0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644E0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100234590@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003644E8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v12, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003644E8);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_1003B6B70 != -1) {
    swift_once(&qword_1003B6B70, sub_10026E7D4);
  }
  uint64_t v9 = qword_1003B6B78;
  *(void *)(a1 + v8) = qword_1003B6B78;
  swift_retain(v9);
  return sub_100015764((uint64_t)v5, &qword_1003644E8);
}

uint64_t sub_1002346D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100024054( type metadata accessor for Proto_Gpsd_LtlInfo,  &qword_1003B6B70,  &qword_1003B6B78,  (uint64_t)sub_10026E7D4,  a1);
}

uint64_t sub_1002346F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644E8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644E8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644E8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100234874(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644E8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644E8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_1003B6B70 != -1) {
      swift_once(&qword_1003B6B70, sub_10026E7D4);
    }
    uint64_t v12 = qword_1003B6B78;
    *(void *)&v9[v11] = qword_1003B6B78;
    swift_retain(v12);
    sub_100015764((uint64_t)v5, &qword_1003644E8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo);
  }

  return sub_1002349E4;
}

void sub_1002349E4(uint64_t a1, char a2)
{
}

BOOL sub_1002349F8()
{
  return sub_10001D054( &qword_1003644E8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo,  type metadata accessor for Proto_Gpsd_LtlInfo);
}

uint64_t sub_100234A1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644E8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644E8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100234B4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003644F0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003644F0);
  started = (int *)type metadata accessor for Proto_Gpsd_StartContext(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + started[5]) = 2;
  *(_BYTE *)(a1 + started[6]) = 2;
  *(_BYTE *)(a1 + started[7]) = 2;
  return sub_100015764((uint64_t)v5, &qword_1003644F0);
}

int *sub_100234C6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_StartContext(0LL);
  *(_BYTE *)(a1 + result[5]) = 2;
  *(_BYTE *)(a1 + result[6]) = 2;
  *(_BYTE *)(a1 + result[7]) = 2;
  return result;
}

uint64_t sub_100234CB0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644F0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_StartContext);
  uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(started - 8) + 56LL))(v9, 0LL, 1LL, started);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644F0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644F0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100234E30(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644F0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t started = (int *)type metadata accessor for Proto_Gpsd_StartContext(0LL);
  uint64_t v7 = *((void *)started - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644F0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, started) == 1)
  {
    UnknownStorage.init()();
    v9[started[5]] = 2;
    v9[started[6]] = 2;
    v9[started[7]] = 2;
    sub_100015764((uint64_t)v5, &qword_1003644F0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_StartContext);
  }

  return sub_100234F80;
}

void sub_100234F80(uint64_t a1, char a2)
{
}

BOOL sub_100234F94()
{
  return sub_10001D054( &qword_1003644F0,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext,  type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t sub_100234FB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644F0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56LL))(v4, 1LL, 1LL, started);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644F0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002350E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100235108( &qword_1003644F8,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  7,  a1);
}

uint64_t sub_100235108@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_100003A0C(a1);
  __chkstk_darwin(v11);
  uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20)) + *a2;
  swift_beginAccess(v14, v18, 0LL, 0LL);
  sub_10000E6C0(v14, (uint64_t)v13, a1);
  uint64_t v15 = a3(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a5 + *(int *)(v15 + 20)) = a4;
  return sub_100015764((uint64_t)v13, a1);
}

uint64_t sub_10023521C@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C784(type metadata accessor for Proto_Gpsd_CntinStatusMessage, 7, a1);
}

uint64_t sub_10023522C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644F8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003644F8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003644F8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002353AC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003644F8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003644F8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 7;
    sub_100015764((uint64_t)v5, &qword_1003644F8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  }

  return sub_1002354EC;
}

void sub_1002354EC(uint64_t a1, char a2)
{
}

BOOL sub_100235500()
{
  return sub_10001D054( &qword_1003644F8,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate,  type metadata accessor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t sub_100235524()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003644F8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003644F8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100235654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364500);
  __chkstk_darwin(v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v12, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364500);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + *(int *)(v7 + 20);
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return sub_100015764((uint64_t)v5, &qword_100364500);
}

uint64_t sub_10023577C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  uint64_t v3 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + *(int *)(result + 24);
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  return result;
}

uint64_t sub_1002357C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364500);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364500);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364500);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100235948(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364500);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364500);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    sub_100015764((uint64_t)v5, &qword_100364500);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  }

  return sub_100235AA0;
}

void sub_100235AA0(uint64_t a1, char a2)
{
}

BOOL sub_100235AB4()
{
  return sub_10001D054( &qword_100364500,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState,  type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_100235AD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364500);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364500);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100235C08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364508);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364508);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + *(int *)(v7 + 20)) = 2;
  *(_BYTE *)(a1 + *(int *)(v7 + 24)) = 2;
  return sub_100015764((uint64_t)v5, &qword_100364508);
}

uint64_t sub_100235D20@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  *(_BYTE *)(a1 + *(int *)(result + 20)) = 2;
  *(_BYTE *)(a1 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100235D5C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364508);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364508);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364508);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100235EDC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364508);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364508);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    v9[*(int *)(v6 + 24)] = 2;
    sub_100015764((uint64_t)v5, &qword_100364508);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  }

  return sub_100236024;
}

void sub_100236024(uint64_t a1, char a2)
{
}

BOOL sub_100236038()
{
  return sub_10001D054( &qword_100364508,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t sub_10023605C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364508);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364508);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023618C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364510);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364510);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  sub_10017B5A8(a1);
  return sub_100015764((uint64_t)v5, &qword_100364510);
}

uint64_t sub_10023628C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364510);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364510);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364510);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023640C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364510);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364510);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017B5A8((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364510);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  }

  return sub_100236540;
}

void sub_100236540(uint64_t a1, char a2)
{
}

BOOL sub_100236554()
{
  return sub_10001D054( &qword_100364510,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig,  type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t sub_100236578()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364510);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364510);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002366A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364518);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364518);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  sub_10015A634(a1);
  return sub_100015764((uint64_t)v5, &qword_100364518);
}

uint64_t sub_1002367A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364518);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364518);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364518);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100236928(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364518);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364518);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10015A634((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364518);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  }

  return sub_100236A5C;
}

void sub_100236A5C(uint64_t a1, char a2)
{
}

BOOL sub_100236A70()
{
  return sub_10001D054( &qword_100364518,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest,  type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_100236A94()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364518);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364518);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100236BC4()
{
  return sub_10008D164( type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

uint64_t sub_100236BD8(int a1)
{
  return sub_10009FE24( a1,  type metadata accessor for Proto_Gpsd_Request,  type metadata accessor for Proto_Gpsd_Request._StorageClass,  (void (*)(uint64_t))sub_10024C760,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

void (*sub_100236BFC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100236C88;
}

void sub_100236C88(uint64_t *a1, char a2)
{
}

BOOL sub_100236CA4()
{
  return sub_100022E8C( type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

uint64_t sub_100236CB8()
{
  return sub_100022F10( type metadata accessor for Proto_Gpsd_Request,  type metadata accessor for Proto_Gpsd_Request._StorageClass,  (void (*)(uint64_t))sub_10024C760,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
}

uint64_t sub_100236CDC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364520);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364520);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  sub_100172680(a1);
  return sub_100015764((uint64_t)v5, &qword_100364520);
}

uint64_t sub_100236DDC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364520);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364520);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364520);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100236F5C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364520);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364520);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100172680(v9);
    sub_100015764((uint64_t)v5, &qword_100364520);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  }

  return sub_100237090;
}

void sub_100237090(uint64_t a1, char a2)
{
}

BOOL sub_1002370A4()
{
  return sub_10001D054( &qword_100364520,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime,  type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1002370C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364520);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364520);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002371F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364528);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364528);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  sub_10017304C(a1);
  return sub_100015764((uint64_t)v5, &qword_100364528);
}

uint64_t sub_1002372F8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364528);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364528);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364528);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100237478(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364528);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364528);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017304C((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364528);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  }

  return sub_1002375AC;
}

void sub_1002375AC(uint64_t a1, char a2)
{
}

BOOL sub_1002375C0()
{
  return sub_10001D054( &qword_100364528,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation,  type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_1002375E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364528);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364528);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100237714@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364530);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364530);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  sub_10017A814(a1);
  return sub_100015764((uint64_t)v5, &qword_100364530);
}

uint64_t sub_100237814(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364530);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364530);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364530);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100237994(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364530);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364530);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017A814(v9);
    sub_100015764((uint64_t)v5, &qword_100364530);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  }

  return sub_100237AC8;
}

void sub_100237AC8(uint64_t a1, char a2)
{
}

BOOL sub_100237ADC()
{
  return sub_10001D054( &qword_100364530,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel,  type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_100237B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364530);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364530);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100237C30@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364538);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364538);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  sub_10017C5C8(a1);
  return sub_100015764((uint64_t)v5, &qword_100364538);
}

uint64_t sub_100237D30(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364538);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364538);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364538);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100237EB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364538);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364538);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017C5C8(v9);
    sub_100015764((uint64_t)v5, &qword_100364538);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  }

  return sub_100237FE4;
}

void sub_100237FE4(uint64_t a1, char a2)
{
}

BOOL sub_100237FF8()
{
  return sub_10001D054( &qword_100364538,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance,  type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_10023801C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364538);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364538);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023814C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364540);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364540);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  sub_10017CCA8(a1);
  return sub_100015764((uint64_t)v5, &qword_100364540);
}

uint64_t sub_10023824C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364540);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364540);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364540);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002383CC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364540);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364540);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017CCA8((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364540);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  }

  return sub_100238500;
}

void sub_100238500(uint64_t a1, char a2)
{
}

BOOL sub_100238514()
{
  return sub_10001D054( &qword_100364540,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
}

uint64_t sub_100238538()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364540);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364540);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100238668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364548);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364548);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  sub_10017AEDC(a1);
  return sub_100015764((uint64_t)v5, &qword_100364548);
}

uint64_t sub_100238768(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364548);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364548);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364548);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002388E8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364548);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364548);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017AEDC((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364548);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  }

  return sub_100238A1C;
}

void sub_100238A1C(uint64_t a1, char a2)
{
}

BOOL sub_100238A30()
{
  return sub_10001D054( &qword_100364548,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext,  type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
}

uint64_t sub_100238A54()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364548);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364548);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100238B84()
{
  return sub_100239270(&OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
}

uint64_t sub_100238B90(uint64_t a1)
{
  return sub_1002392D4( a1,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
}

void (*sub_100238B9C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *v5;
  v3[9] = *v5;
  swift_bridgeObjectRetain(v6);
  return sub_100238C24;
}

void sub_100238C24(uint64_t *a1, char a2)
{
}

uint64_t sub_100238C30@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364550);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364550);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  sub_100151A00(a1);
  return sub_100015764((uint64_t)v5, &qword_100364550);
}

uint64_t sub_100238D30(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364550);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364550);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364550);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100238EB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364550);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364550);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100151A00(v9);
    sub_100015764((uint64_t)v5, &qword_100364550);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  }

  return sub_100238FE4;
}

void sub_100238FE4(uint64_t a1, char a2)
{
}

BOOL sub_100238FF8()
{
  return sub_10001D054( &qword_100364550,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID,  type metadata accessor for Proto_Gnss_Emergency_LocationId);
}

uint64_t sub_10023901C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364550);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364550);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023914C()
{
  return sub_10008D164( type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t sub_100239160(int a1)
{
  return sub_10009FE24( a1,  type metadata accessor for Proto_Gpsd_Request,  type metadata accessor for Proto_Gpsd_Request._StorageClass,  (void (*)(uint64_t))sub_10024C760,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

void (*sub_100239184(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100239210;
}

void sub_100239210(uint64_t *a1, char a2)
{
}

BOOL sub_10023922C()
{
  return sub_100022E8C( type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t sub_100239240()
{
  return sub_100022F10( type metadata accessor for Proto_Gpsd_Request,  type metadata accessor for Proto_Gpsd_Request._StorageClass,  (void (*)(uint64_t))sub_10024C760,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t sub_100239264()
{
  return sub_100239270(&OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
}

uint64_t sub_100239270(void *a1)
{
  uint64_t v2 = (void *)(*(void *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20)) + *a1);
  swift_beginAccess(v2, v4, 0LL, 0LL);
  return swift_bridgeObjectRetain(*v2);
}

uint64_t sub_1002392C8(uint64_t a1)
{
  return sub_1002392D4( a1,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
}

uint64_t sub_1002392D4(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v2 + v6)) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    uint64_t v8 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v10 = swift_retain(v7);
    sub_10024C760(v10);
    uint64_t v11 = *(void *)(v4 + v6);
    *(void *)(v4 + v6) = v9;
    swift_release(v11);
  }

  uint64_t v12 = (uint64_t *)(*(void *)(v4 + v6) + *a2);
  swift_beginAccess(v12, v15, 1LL, 0LL);
  uint64_t v13 = *v12;
  *uint64_t v12 = a1;
  return swift_bridgeObjectRelease(v13);
}

void (*sub_10023938C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  uint64_t v6 = *v5;
  v3[9] = *v5;
  swift_bridgeObjectRetain(v6);
  return sub_100239414;
}

void sub_100239414(uint64_t *a1, char a2)
{
}

void sub_100239420(uint64_t *a1, char a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 72);
  uint64_t v6 = *(int *)(*a1 + 88);
  uint64_t v7 = *(void *)(*a1 + 80);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(*(void *)(*a1 + 72));
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v7 + v6)) & 1) == 0)
    {
      uint64_t v8 = *(int *)(v4 + 88);
      uint64_t v9 = *(void *)(v4 + 80);
      uint64_t v10 = *(void *)(v9 + v8);
      uint64_t v11 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
      uint64_t v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
      uint64_t v13 = swift_retain(v10);
      sub_10024C760(v13);
      uint64_t v14 = *(void *)(v9 + v8);
      *(void *)(v9 + v8) = v12;
      swift_release(v14);
    }

    uint64_t v15 = (uint64_t *)(*(void *)(*(void *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess(v15, v4 + 24, 1LL, 0LL);
    uint64_t v16 = *v15;
    *uint64_t v15 = v5;
    swift_bridgeObjectRelease(v16);
    uint64_t v17 = *(void *)(v4 + 72);
  }

  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v7 + v6)) & 1) == 0)
    {
      uint64_t v18 = *(int *)(v4 + 88);
      uint64_t v19 = *(void *)(v4 + 80);
      uint64_t v20 = *(void *)(v19 + v18);
      uint64_t v21 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
      uint64_t v22 = swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
      uint64_t v23 = swift_retain(v20);
      sub_10024C760(v23);
      uint64_t v24 = *(void *)(v19 + v18);
      *(void *)(v19 + v18) = v22;
      swift_release(v24);
    }

    uint64_t v25 = (uint64_t *)(*(void *)(*(void *)(v4 + 80) + *(int *)(v4 + 88)) + *a3);
    swift_beginAccess(v25, v4 + 48, 1LL, 0LL);
    uint64_t v17 = *v25;
    uint64_t *v25 = v5;
  }

  swift_bridgeObjectRelease(v17);
  free((void *)v4);
}

uint64_t sub_100239588()
{
  return *v1 & 1;
}

uint64_t sub_1002395E0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10024C760(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  char v10 = a1 & 1;
  uint64_t v11 = (_BYTE *)(*(void *)(v2 + v4)
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  uint64_t result = swift_beginAccess(v11, v13, 1LL, 0LL);
  *uint64_t v11 = v10;
  return result;
}

void (*sub_100239694(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = (_BYTE *)(*(void *)(v1 + v4)
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess(v5, v3, 0LL, 0LL);
  *((_BYTE *)v3 + 84) = *v5 & 1;
  return sub_100239718;
}

void sub_100239718(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10024C760(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_1002397F0()
{
  return *v1 != 2;
}

uint64_t sub_10023984C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10024C760(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = (_BYTE *)(*(void *)(v1 + v2)
               + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  uint64_t result = swift_beginAccess(v8, v10, 1LL, 0LL);
  *uint64_t v8 = 2;
  return result;
}

uint64_t sub_1002398F4()
{
  return sub_10008D164( type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t sub_100239908(int a1)
{
  return sub_10009FE24( a1,  type metadata accessor for Proto_Gpsd_Request,  type metadata accessor for Proto_Gpsd_Request._StorageClass,  (void (*)(uint64_t))sub_10024C760,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

void (*sub_10023992C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_1002399B8;
}

void sub_1002399B8(uint64_t *a1, char a2)
{
}

BOOL sub_1002399D4()
{
  return sub_100022E8C( type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t sub_1002399E8()
{
  return sub_100022F10( type metadata accessor for Proto_Gpsd_Request,  type metadata accessor for Proto_Gpsd_Request._StorageClass,  (void (*)(uint64_t))sub_10024C760,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t sub_100239A0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364558);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364558);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  sub_100154F10(a1);
  return sub_100015764((uint64_t)v5, &qword_100364558);
}

uint64_t sub_100239B0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364558);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364558);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364558);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100239C8C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364558);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364558);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100154F10((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364558);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  }

  return sub_100239DC0;
}

void sub_100239DC0(uint64_t a1, char a2)
{
}

BOOL sub_100239DD4()
{
  return sub_10001D054( &qword_100364558,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext,  type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_100239DF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364558);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364558);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100239F28@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364560);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364560);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  sub_10015218C(a1);
  return sub_100015764((uint64_t)v5, &qword_100364560);
}

uint64_t sub_10023A028(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364560);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10024C760(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364560);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364560);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023A1A8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364560);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364560);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10015218C(v9);
    sub_100015764((uint64_t)v5, &qword_100364560);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  }

  return sub_10023A2DC;
}

void sub_10023A2DC(uint64_t a1, char a2)
{
}

BOOL sub_10023A2F0()
{
  return sub_10001D054( &qword_100364560,  type metadata accessor for Proto_Gpsd_Request,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

uint64_t sub_10023A314()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364560);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10024C760(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364560);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023A448(char a1)
{
  return qword_1002DF128[a1];
}

BOOL sub_10023A45C(char *a1, char *a2)
{
  return qword_1002DF128[*a1] == qword_1002DF128[*a2];
}

uint64_t sub_10023A480(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_10028458C();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_10023A4B8@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_100274C20(a1);
  *a2 = result;
  return result;
}

uint64_t sub_10023A4DC()
{
  return qword_1002DF128[*v0];
}

uint64_t sub_10023A4F0@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_100274C20(*a1);
  *a2 = result;
  return result;
}

void sub_10023A518(void *a1@<X8>)
{
  *a1 = qword_1002DF128[*v1];
}

uint64_t sub_10023A530@<X0>(uint64_t a1@<X8>)
{
  return sub_100024054( type metadata accessor for Proto_Gpsd_Request,  &qword_1003B6A28,  &qword_1003B6A30,  (uint64_t)sub_10024BF4C,  a1);
}

uint64_t sub_10023A554()
{
  return sub_1000365F4(&qword_1003B6A28, &qword_1003B6A30, (uint64_t)sub_10024BF4C);
}

_UNKNOWN **sub_10023A570()
{
  return &off_100345FC8;
}

void sub_10023A57C(void *a1@<X8>)
{
  *a1 = &off_100345FC8;
}

uint64_t sub_10023A58C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 20));
  if (v1 == 61) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10023A5B4(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Response(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_10023A5E0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 20);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 61) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10023A62C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 20)) != 61;
}

uint64_t sub_10023A654()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Response(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 61;
  return result;
}

uint64_t sub_10023A678()
{
  return sub_100005038(type metadata accessor for Proto_Gpsd_Response);
}

uint64_t sub_10023A684(uint64_t a1)
{
  return sub_100005078(a1, type metadata accessor for Proto_Gpsd_Response);
}

uint64_t (*sub_10023A690(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10023A6E4()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_Response);
}

uint64_t sub_10023A6F0()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_Response);
}

uint64_t sub_10023A6FC()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 28));
  if (v1 == 10) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10023A724(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Response(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_10023A750(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 28);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 10) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100003798;
}

BOOL sub_10023A79C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 28)) != 10;
}

uint64_t sub_10023A7C4()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Response(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 10;
  return result;
}

int *sub_10023A7E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  *(_BYTE *)(a1 + result[5]) = 61;
  uint64_t v3 = a1 + result[6];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  *(_BYTE *)(a1 + result[7]) = 10;
  return result;
}

uint64_t sub_10023A83C()
{
  return 61LL;
}

uint64_t sub_10023A844()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 16) == 24) {
    return 0LL;
  }
  else {
    return *(unsigned __int8 *)(v1 + 16);
  }
}

uint64_t sub_10023A894(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10025CE54(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 16, v12, 1LL, 0LL);
  *(_BYTE *)(v10 + 16) = a1;
  return result;
}

void (*sub_10023A938(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 16, v3, 0LL, 0LL);
  int v6 = *(unsigned __int8 *)(v5 + 16);
  if (v6 == 24) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_10023A9B4;
}

void sub_10023A9B4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10025CE54(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10023AA88()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 16) != 24;
}

uint64_t sub_10023AAD8()
{
  return sub_10016D7B8( type metadata accessor for Proto_Gpsd_Indication,  type metadata accessor for Proto_Gpsd_Indication._StorageClass,  (void (*)(uint64_t))sub_10025CE54,  24);
}

uint64_t sub_10023AAF8()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_beginAccess(v1 + 17, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 17) == 61) {
    return 0LL;
  }
  else {
    return *(unsigned __int8 *)(v1 + 17);
  }
}

uint64_t sub_10023AB48(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10025CE54(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 17, v12, 1LL, 0LL);
  *(_BYTE *)(v10 + 17) = a1;
  return result;
}

void (*sub_10023ABEC(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 17, v3, 0LL, 0LL);
  int v6 = *(unsigned __int8 *)(v5 + 17);
  if (v6 == 61) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_10023AC68;
}

void sub_10023AC68(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10025CE54(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10023AD3C()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_beginAccess(v1 + 17, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 17) != 61;
}

uint64_t sub_10023AD8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10025CE54(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 17, v10, 1LL, 0LL);
  *(_BYTE *)(v8 + 17) = 61;
  return result;
}

uint64_t sub_10023AE28()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_beginAccess(v1 + 24, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 32)) {
    return 0LL;
  }
  else {
    return *(void *)(v1 + 24);
  }
}

uint64_t sub_10023AE7C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10025CE54(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 24, v12, 1LL, 0LL);
  *(void *)(v10 + 24) = a1;
  *(_BYTE *)(v10 + 32) = 0;
  return result;
}

void (*sub_10023AF24(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 22) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 24, v3, 0LL, 0LL);
  uint64_t v6 = *(void *)(v5 + 24);
  if (*(_BYTE *)(v5 + 32)) {
    uint64_t v6 = 0LL;
  }
  v3[9] = v6;
  return sub_10023AFA4;
}

void sub_10023AFA4(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 80)
                                                                                            + *(int *)(*a1 + 88)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 88);
    uint64_t v8 = *(void *)(v3 + 80);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10025CE54(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_10023B078()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_beginAccess(v1 + 24, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 32) & 1) == 0;
}

uint64_t sub_10023B0C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10025CE54(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 24, v10, 1LL, 0LL);
  *(void *)(v8 + 24) = 0LL;
  *(_BYTE *)(v8 + 32) = 1;
  return result;
}

uint64_t sub_10023B168@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364568);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364568);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Fix(0LL);
  sub_10020F758(a1);
  return sub_100015764((uint64_t)v5, &qword_100364568);
}

uint64_t sub_10023B268(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364568);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Fix);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Fix(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364568);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364568);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023B3E8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364568);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Fix(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364568);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10020F758((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364568);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Fix);
  }

  return sub_10023B51C;
}

void sub_10023B51C(uint64_t a1, char a2)
{
}

BOOL sub_10023B530()
{
  return sub_10001D054( &qword_100364568,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  type metadata accessor for Proto_Gnss_Fix);
}

uint64_t sub_10023B554()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364568);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Fix(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364568);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023B684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364570);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364570);
  uint64_t v7 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48LL))(v5, 1LL, v7) != 1) {
    return sub_100003E68( (uint64_t)v5,  a1,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  }
  sub_1000365B4(a1);
  return sub_100015764((uint64_t)v5, &qword_100364570);
}

uint64_t sub_10023B784(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364570);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  uint64_t v17 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364570);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364570);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023B904(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364570);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364570);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_1000365B4((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364570);
  }

  else
  {
    sub_100003E68( (uint64_t)v5,  (uint64_t)v9,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  }

  return sub_10023BA38;
}

void sub_10023BA38(uint64_t a1, char a2)
{
}

BOOL sub_10023BA4C()
{
  return sub_10001D054( &qword_100364570,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
}

uint64_t sub_10023BA70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364570);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364570);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023BBA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364578);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364578);
  uint64_t v7 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  sub_100211AF0(a1);
  return sub_100015764((uint64_t)v5, &qword_100364578);
}

uint64_t sub_10023BCA0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364578);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_PwrMeasurement);
  uint64_t v17 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364578);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364578);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023BE20(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364578);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364578);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100211AF0((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364578);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_PwrMeasurement);
  }

  return sub_10023BF54;
}

void sub_10023BF54(uint64_t a1, char a2)
{
}

BOOL sub_10023BF68()
{
  return sub_10001D054( &qword_100364578,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_10023BF8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364578);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364578);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023C0BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364580);
  __chkstk_darwin(v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v12, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364580);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_Status(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  *(_BYTE *)(a1 + v7[9]) = 2;
  return sub_100015764((uint64_t)v5, &qword_100364580);
}

int *sub_10023C200@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_Status(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  *(_BYTE *)(a1 + result[9]) = 2;
  return result;
}

uint64_t sub_10023C268(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364580);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Status);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_Status(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364580);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364580);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023C3E8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364580);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_Status(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364580);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    v9[v6[9]] = 2;
    sub_100015764((uint64_t)v5, &qword_100364580);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Status);
  }

  return sub_10023C55C;
}

void sub_10023C55C(uint64_t a1, char a2)
{
}

BOOL sub_10023C570()
{
  return sub_10001D054( &qword_100364580,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_10023C594()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364580);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_Status(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364580);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023C6C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364588);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364588);
  uint64_t v7 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  sub_100210E48(a1);
  return sub_100015764((uint64_t)v5, &qword_100364588);
}

uint64_t sub_10023C7C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364588);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  uint64_t v17 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364588);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364588);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023C944(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364588);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364588);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100210E48((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364588);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  }

  return sub_10023CA78;
}

void sub_10023CA78(uint64_t a1, char a2)
{
}

BOOL sub_10023CA8C()
{
  return sub_10001D054( &qword_100364588,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t sub_10023CAB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364588);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364588);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023CBE0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364590);
  __chkstk_darwin(v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v12, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364590);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + *(int *)(v7 + 24);
  uint64_t v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  return sub_100015764((uint64_t)v5, &qword_100364590);
}

uint64_t sub_10023CD20@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  UnknownStorage.init()();
  uint64_t v3 = (char *)a1 + *(int *)(v2 + 24);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 1LL, 1LL, v4);
}

uint64_t sub_10023CD88(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364590);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364590);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364590);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023CF08(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364590);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364590);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 24);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
    sub_100015764((uint64_t)v5, &qword_100364590);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  }

  return sub_10023D078;
}

void sub_10023D078(uint64_t a1, char a2)
{
}

BOOL sub_10023D08C()
{
  return sub_10001D054( &qword_100364590,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t sub_10023D0B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364590);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364590);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023D1E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10023D200( &qword_100364598,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  type metadata accessor for Proto_Gpsd_LtlInfoRequest,  5,  a1);
}

uint64_t sub_10023D200@<X0>( uint64_t *a1@<X0>, void *a2@<X1>, uint64_t (*a3)(void)@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_100003A0C(a1);
  __chkstk_darwin(v11);
  uint64_t v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20)) + *a2;
  swift_beginAccess(v14, v18, 0LL, 0LL);
  sub_10000E6C0(v14, (uint64_t)v13, a1);
  uint64_t v15 = a3(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a5 + *(int *)(v15 + 20)) = a4;
  return sub_100015764((uint64_t)v13, a1);
}

uint64_t sub_10023D314@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C784(type metadata accessor for Proto_Gpsd_LtlInfoRequest, 5, a1);
}

uint64_t sub_10023D324(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364598);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364598);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364598);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023D4A4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364598);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364598);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 5;
    sub_100015764((uint64_t)v5, &qword_100364598);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  }

  return sub_10023D5E4;
}

void sub_10023D5E4(uint64_t a1, char a2)
{
}

BOOL sub_10023D5F8()
{
  return sub_10001D054( &qword_100364598,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  type metadata accessor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t sub_10023D61C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364598);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364598);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023D74C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645A0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645A0);
  uint64_t v7 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  sub_100211FE8(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645A0);
}

uint64_t sub_10023D84C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645A0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  uint64_t v17 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645A0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645A0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023D9CC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645A0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645A0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100211FE8((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645A0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  }

  return sub_10023DB00;
}

void sub_10023DB00(uint64_t a1, char a2)
{
}

BOOL sub_10023DB14()
{
  return sub_10001D054( &qword_1003645A0,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_10023DB38()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645A0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645A0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023DC68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645A8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645A8);
  uint64_t v7 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  sub_100211CB4(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645A8);
}

uint64_t sub_10023DD68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645A8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_DecodedRti);
  uint64_t v17 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645A8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645A8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023DEE8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645A8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645A8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100211CB4((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645A8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_DecodedRti);
  }

  return sub_10023E01C;
}

void sub_10023E01C(uint64_t a1, char a2)
{
}

BOOL sub_10023E030()
{
  return sub_10001D054( &qword_1003645A8,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t sub_10023E054()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645A8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645A8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023E184()
{
  return sub_10023E258(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

uint64_t sub_10023E190(char a1)
{
  return sub_10023E2C0( a1,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

void (*sub_10023E19C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *v5;
  if (v6 == 10) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_10023E224;
}

void sub_10023E224(uint64_t *a1, char a2)
{
}

BOOL sub_10023E230()
{
  return sub_10023E4EC(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
}

uint64_t sub_10023E23C()
{
  return sub_10023E558( &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus,  10);
}

uint64_t sub_10023E24C()
{
  return sub_10023E258(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

uint64_t sub_10023E258(void *a1)
{
  uint64_t v2 = (unsigned __int8 *)(*(void *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20)) + *a1);
  swift_beginAccess(v2, v4, 0LL, 0LL);
  if (*v2 == 10) {
    return 0LL;
  }
  else {
    return *v2;
  }
}

uint64_t sub_10023E2B4(char a1)
{
  return sub_10023E2C0( a1,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

uint64_t sub_10023E2C0(char a1, void *a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v2 + v6)) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    uint64_t v8 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v10 = swift_retain(v7);
    sub_10025CE54(v10);
    uint64_t v11 = *(void *)(v4 + v6);
    *(void *)(v4 + v6) = v9;
    swift_release(v11);
  }

  uint64_t v12 = (_BYTE *)(*(void *)(v4 + v6) + *a2);
  uint64_t result = swift_beginAccess(v12, v14, 1LL, 0LL);
  *uint64_t v12 = a1;
  return result;
}

void (*sub_10023E370(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *v5;
  if (v6 == 10) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_10023E3F8;
}

void sub_10023E3F8(uint64_t *a1, char a2)
{
}

void sub_10023E404(uint64_t *a1, char a2, void *a3)
{
  uint64_t v5 = *a1;
  char v6 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v8 = v5 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v8 = v5 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v9 = *(int *)(v5 + 80);
    uint64_t v10 = *(void *)(v5 + 72);
    uint64_t v11 = *(void *)(v10 + v9);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v10 + v9);
    *(void *)(v10 + v9) = v13;
    swift_release(v15);
  }

BOOL sub_10023E4E0()
{
  return sub_10023E4EC(&OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
}

BOOL sub_10023E4EC(void *a1)
{
  uint64_t v2 = (unsigned __int8 *)(*(void *)(v1 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20)) + *a1);
  swift_beginAccess(v2, v4, 0LL, 0LL);
  return *v2 != 10;
}

uint64_t sub_10023E548()
{
  return sub_10023E558( &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus,  10);
}

uint64_t sub_10023E558(void *a1, char a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v2 + v6)) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + v6);
    uint64_t v8 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
    uint64_t v10 = swift_retain(v7);
    sub_10025CE54(v10);
    uint64_t v11 = *(void *)(v5 + v6);
    *(void *)(v5 + v6) = v9;
    swift_release(v11);
  }

  uint64_t v12 = (_BYTE *)(*(void *)(v5 + v6) + *a1);
  uint64_t result = swift_beginAccess(v12, v14, 1LL, 0LL);
  *uint64_t v12 = a2;
  return result;
}

uint64_t sub_10023E608@<X0>(uint64_t a1@<X8>)
{
  return sub_10023D200( &qword_1003645B0,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  type metadata accessor for Proto_Gpsd_CntinClockControl,  2,  a1);
}

uint64_t sub_10023E628@<X0>(uint64_t a1@<X8>)
{
  return sub_10017C784(type metadata accessor for Proto_Gpsd_CntinClockControl, 2, a1);
}

uint64_t sub_10023E638(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645B0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_CntinClockControl);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645B0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645B0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023E7B8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645B0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645B0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[*(int *)(v6 + 20)] = 2;
    sub_100015764((uint64_t)v5, &qword_1003645B0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_CntinClockControl);
  }

  return sub_10023E8F8;
}

void sub_10023E8F8(uint64_t a1, char a2)
{
}

BOOL sub_10023E90C()
{
  return sub_10001D054( &qword_1003645B0,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t sub_10023E930()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645B0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645B0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023EA60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645B8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v13, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645B8);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_Exception(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return sub_100015764((uint64_t)v5, &qword_1003645B8);
}

int *sub_10023EB98@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_Exception(0LL);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  return result;
}

uint64_t sub_10023EBF4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645B8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Exception);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_Exception(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645B8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645B8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023ED74(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645B8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_Exception(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645B8);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    sub_100015764((uint64_t)v5, &qword_1003645B8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Exception);
  }

  return sub_10023EEDC;
}

void sub_10023EEDC(uint64_t a1, char a2)
{
}

BOOL sub_10023EEF0()
{
  return sub_10001D054( &qword_1003645B8,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_10023EF14()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645B8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_Exception(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645B8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023F044@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645C0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v13, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645C0);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  uint64_t v9 = a1 + v7[6];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  uint64_t v10 = (void *)(a1 + v7[7]);
  *uint64_t v10 = 0LL;
  v10[1] = 0LL;
  return sub_100015764((uint64_t)v5, &qword_1003645C0);
}

int *sub_10023F178@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v3 = a1 + result[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = a1 + result[6];
  *(void *)uint64_t v4 = 0LL;
  *(_BYTE *)(v4 + 8) = 1;
  uint64_t v5 = (void *)(a1 + result[7]);
  *uint64_t v5 = 0LL;
  v5[1] = 0LL;
  return result;
}

uint64_t sub_10023F1D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645C0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645C0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645C0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023F350(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645C0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645C0);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(void *)uint64_t v12 = 0LL;
    void v12[8] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(void *)uint64_t v13 = 0LL;
    *((void *)v13 + 1) = 0LL;
    sub_100015764((uint64_t)v5, &qword_1003645C0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  }

  return sub_10023F4B4;
}

void sub_10023F4B4(uint64_t a1, char a2)
{
}

BOOL sub_10023F4C8()
{
  return sub_10001D054( &qword_1003645C0,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_10023F4EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645C0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645C0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023F61C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645C8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645C8);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  sub_1001504DC(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645C8);
}

uint64_t sub_10023F71C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645C8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645C8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645C8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023F89C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645C8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645C8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_1001504DC((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645C8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  }

  return sub_10023F9D0;
}

void sub_10023F9D0(uint64_t a1, char a2)
{
}

BOOL sub_10023F9E4()
{
  return sub_10001D054( &qword_1003645C8,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

uint64_t sub_10023FA08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645C8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645C8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10023FB38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645D0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645D0);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  sub_10016738C(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645D0);
}

uint64_t sub_10023FC38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645D0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645D0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645D0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_10023FDB8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645D0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645D0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10016738C((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645D0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  }

  return sub_10023FEEC;
}

void sub_10023FEEC(uint64_t a1, char a2)
{
}

BOOL sub_10023FF00()
{
  return sub_10001D054( &qword_1003645D0,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t sub_10023FF24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645D0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645D0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100240054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645D8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645D8);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  sub_10016C710(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645D8);
}

uint64_t sub_100240154(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645D8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645D8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645D8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002402D4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645D8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645D8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10016C710((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645D8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  }

  return sub_100240408;
}

void sub_100240408(uint64_t a1, char a2)
{
}

BOOL sub_10024041C()
{
  return sub_10001D054( &qword_1003645D8,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

uint64_t sub_100240440()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645D8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645D8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100240570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645E0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645E0);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  sub_10017074C(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645E0);
}

uint64_t sub_100240670(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645E0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645E0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645E0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_1002407F0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645E0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645E0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017074C((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645E0);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  }

  return sub_100240924;
}

void sub_100240924(uint64_t a1, char a2)
{
}

BOOL sub_100240938()
{
  return sub_10001D054( &qword_1003645E0,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t sub_10024095C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645E0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645E0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100240A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645E8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645E8);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  sub_10017C774(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645E8);
}

uint64_t sub_100240B8C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645E8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645E8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645E8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100240D0C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645E8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645E8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10017C774((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645E8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  }

  return sub_100240E40;
}

void sub_100240E40(uint64_t a1, char a2)
{
}

BOOL sub_100240E54()
{
  return sub_10001D054( &qword_1003645E8,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

uint64_t sub_100240E78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645E8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645E8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100240FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645F0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645F0);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  sub_1001804E4(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645F0);
}

uint64_t sub_1002410A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645F0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645F0);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645F0);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100241228(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645F0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645F0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_1001804E4((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645F0);
  }

  else
  {
    sub_100003E68( (uint64_t)v5,  (uint64_t)v9,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  }

  return sub_10024135C;
}

void sub_10024135C(uint64_t a1, char a2)
{
}

BOOL sub_100241370()
{
  return sub_10001D054( &qword_1003645F0,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t sub_100241394()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645F0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645F0);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002414C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_1003645F8);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_1003645F8);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  sub_100158758(a1);
  return sub_100015764((uint64_t)v5, &qword_1003645F8);
}

uint64_t sub_1002415C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645F8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_1003645F8);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_1003645F8);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100241744(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_1003645F8);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_1003645F8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100158758((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_1003645F8);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  }

  return sub_100241878;
}

void sub_100241878(uint64_t a1, char a2)
{
}

BOOL sub_10024188C()
{
  return sub_10001D054( &qword_1003645F8,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

uint64_t sub_1002418B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_1003645F8);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_1003645F8);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002419E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364600);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364600);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  sub_10015452C(a1);
  return sub_100015764((uint64_t)v5, &qword_100364600);
}

uint64_t sub_100241AE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364600);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Init);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364600);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364600);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100241C60(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364600);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364600);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10015452C((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364600);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_Init);
  }

  return sub_100241D94;
}

void sub_100241D94(uint64_t a1, char a2)
{
}

BOOL sub_100241DA8()
{
  return sub_10001D054( &qword_100364600,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  type metadata accessor for Proto_Gnss_Emergency_Init);
}

uint64_t sub_100241DCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364600);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364600);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100241EFC()
{
  return sub_10008D164( type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t sub_100241F10(int a1)
{
  return sub_10009FE24( a1,  type metadata accessor for Proto_Gpsd_Indication,  type metadata accessor for Proto_Gpsd_Indication._StorageClass,  (void (*)(uint64_t))sub_10025CE54,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

void (*sub_100241F34(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100241FC0;
}

void sub_100241FC0(uint64_t *a1, char a2)
{
}

BOOL sub_100241FDC()
{
  return sub_100022E8C( type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t sub_100241FF0()
{
  return sub_100022F10( type metadata accessor for Proto_Gpsd_Indication,  type metadata accessor for Proto_Gpsd_Indication._StorageClass,  (void (*)(uint64_t))sub_10025CE54,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
}

uint64_t sub_100242014()
{
  if (*v1 == 4) {
    return 0LL;
  }
  else {
    return *v1;
  }
}

uint64_t sub_100242070(char a1)
{
  return sub_10023E2C0( a1,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
}

void (*sub_10024207C(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *v5;
  if (v6 == 4) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_100242104;
}

void sub_100242104(uint64_t *a1, char a2)
{
}

BOOL sub_100242110()
{
  return *v1 != 4;
}

uint64_t sub_10024216C()
{
  return sub_10023E558( &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult,  4);
}

uint64_t sub_10024217C()
{
  return sub_10008D164( type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t sub_100242190(int a1)
{
  return sub_10009FE24( a1,  type metadata accessor for Proto_Gpsd_Indication,  type metadata accessor for Proto_Gpsd_Indication._StorageClass,  (void (*)(uint64_t))sub_10025CE54,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

void (*sub_1002421B4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4)
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess(v5, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)v5;
  if (*(_BYTE *)(v5 + 4)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100242240;
}

void sub_100242240(uint64_t *a1, char a2)
{
}

BOOL sub_10024225C()
{
  return sub_100022E8C( type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t sub_100242270()
{
  return sub_100022F10( type metadata accessor for Proto_Gpsd_Indication,  type metadata accessor for Proto_Gpsd_Indication._StorageClass,  (void (*)(uint64_t))sub_10025CE54,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
}

uint64_t sub_100242294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364608);
  __chkstk_darwin(v3);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v10, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364608);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  sub_100151B7C(a1);
  return sub_100015764((uint64_t)v5, &qword_100364608);
}

uint64_t sub_100242394(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364608);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10025CE54(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  uint64_t v17 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364608);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364608);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100242514(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364608);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364608);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_100151B7C((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100364608);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  }

  return sub_100242648;
}

void sub_100242648(uint64_t a1, char a2)
{
}

BOOL sub_10024265C()
{
  return sub_10001D054( &qword_100364608,  type metadata accessor for Proto_Gpsd_Indication,  &OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_100242680()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364608);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10025CE54(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364608);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002427B4(char a1)
{
  return qword_1002DEFE0[a1];
}

BOOL sub_1002427C8(char *a1, char *a2)
{
  return qword_1002DEFE0[*a1] == qword_1002DEFE0[*a2];
}

uint64_t sub_1002427EC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100284548();
  return Enum.hash(into:)(a1, a2, v4);
}

uint64_t sub_100242824@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_100274D08(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100242848()
{
  return qword_1002DEFE0[*v0];
}

uint64_t sub_10024285C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_100274D08(*a1);
  *a2 = result;
  return result;
}

void sub_100242884(void *a1@<X8>)
{
  *a1 = qword_1002DEFE0[*v1];
}

uint64_t sub_10024289C@<X0>(uint64_t a1@<X8>)
{
  return sub_100024054( type metadata accessor for Proto_Gpsd_Indication,  &qword_1003B6A50,  &qword_1003B6A58,  (uint64_t)sub_10025C9BC,  a1);
}

uint64_t sub_1002428C0()
{
  return sub_1000365F4(&qword_1003B6A50, &qword_1003B6A58, (uint64_t)sub_10025C9BC);
}

_UNKNOWN **sub_1002428DC()
{
  return &off_100346028;
}

void sub_1002428E8(void *a1@<X8>)
{
  *a1 = &off_100346028;
}

uint64_t sub_1002428F8()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242904(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*sub_100242910(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100242964()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242970()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_10024297C()
{
  return sub_100005038(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242988(uint64_t a1)
{
  return sub_100005078(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*sub_100242994(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002429E8()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_1002429F4()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242A00()
{
  return sub_10001A898(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242A0C(char a1)
{
  return sub_10000534C(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*sub_100242A18(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242A60()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 28)) != 2;
}

uint64_t sub_100242A88()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Status(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_100242AAC()
{
  return sub_10001A96C(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242AB8(char a1)
{
  return sub_10001A9A0(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*sub_100242AC4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242B0C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 32)) != 2;
}

uint64_t sub_100242B34()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Status(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_100242B58()
{
  return sub_10001B0E0(type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_100242B64(char a1)
{
  return sub_10001B114(a1, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t (*sub_100242B70(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242BB8()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 36)) != 2;
}

uint64_t sub_100242BE0()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_Status(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_100242C04()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 20));
  return (v1 == 2) | v1 & 1u;
}

uint64_t sub_100242C34(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*sub_100242C40(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 20);
  *(_BYTE *)(a1 + 12) = (*(_BYTE *)(v1 + v3) == 2) | *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242C94()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 20)) != 2;
}

uint64_t sub_100242CBC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_100242CE0()
{
  return sub_10001A798(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t sub_100242CEC(char a1)
{
  return sub_10001A7CC(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*sub_100242CF8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242D40()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 24)) != 2;
}

uint64_t sub_100242D68()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100242D8C()
{
  return sub_10001A898(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t sub_100242D98(char a1)
{
  return sub_10000534C(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*sub_100242DA4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242DEC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 28)) != 2;
}

uint64_t sub_100242E14()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_100242E38()
{
  return sub_10001A96C(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t sub_100242E44(char a1)
{
  return sub_10001A9A0(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*sub_100242E50(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242E98()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 32)) != 2;
}

uint64_t sub_100242EC0()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_100242EE4()
{
  return sub_10001B0E0(type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t sub_100242EF0(char a1)
{
  return sub_10001B114(a1, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t (*sub_100242EFC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 36);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100242F44()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 36)) != 2;
}

uint64_t sub_100242F6C()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 36)) = 2;
  return result;
}

uint64_t sub_100242F90()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 40)) & 1;
}

uint64_t sub_100242FB4(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_100242FE0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 40);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100243028()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 40)) != 2;
}

uint64_t sub_100243050()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 40)) = 2;
  return result;
}

uint64_t sub_100243074()
{
  return sub_100243200(type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t sub_100243080(uint64_t a1, uint64_t a2)
{
  return sub_10024325C(a1, a2, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t (*sub_10024308C(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  unint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0LL;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000LL;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_10005F2F8(v5, v6);
  return sub_1002430EC;
}

BOOL sub_1002430F0()
{
  return sub_10024330C(type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

double sub_1002430FC()
{
  return sub_10024334C(type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t sub_100243108()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL) + 24));
  if (v1 == 3) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100243130(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_10024315C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL) + 24);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 3) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002431A8()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL) + 24)) != 3;
}

uint64_t sub_1002431D0()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 3;
  return result;
}

uint64_t sub_1002431F4()
{
  return sub_100243200(type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t sub_100243200(uint64_t (*a1)(void))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1(0LL) + 20));
  unint64_t v3 = v2[1];
  if (v3 >> 60 == 15) {
    uint64_t v4 = 0LL;
  }
  else {
    uint64_t v4 = *v2;
  }
  sub_10005F2F8(*v2, v3);
  return v4;
}

uint64_t sub_100243250(uint64_t a1, uint64_t a2)
{
  return sub_10024325C(a1, a2, type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t sub_10024325C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *(int *)(a3(0LL) + 20);
  uint64_t result = sub_10005F30C(*(void *)v6, *(void *)(v6 + 8));
  *(void *)uint64_t v6 = a1;
  *(void *)(v6 + 8) = a2;
  return result;
}

uint64_t (*sub_1002432A0(uint64_t a1))(uint64_t, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  if (v6 >> 60 == 15) {
    uint64_t v7 = 0LL;
  }
  else {
    uint64_t v7 = *v4;
  }
  unint64_t v8 = 0xC000000000000000LL;
  if (v6 >> 60 != 15) {
    unint64_t v8 = v6;
  }
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  sub_10005F2F8(v5, v6);
  return sub_1002430EC;
}

BOOL sub_100243300()
{
  return sub_10024330C(type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

BOOL sub_10024330C(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0LL) + 20) + 8) >> 60 != 15LL;
}

double sub_100243340()
{
  return sub_10024334C(type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

double sub_10024334C(uint64_t (*a1)(void))
{
  uint64_t v2 = v1 + *(int *)(a1(0LL) + 20);
  sub_10005F30C(*(void *)v2, *(void *)(v2 + 8));
  double result = 0.0;
  *(_OWORD *)uint64_t v2 = xmmword_1002B4290;
  return result;
}

uint64_t sub_10024338C@<X0>(uint64_t a1@<X8>)
{
  return sub_100005424(type metadata accessor for Proto_Gpsd_InjectSvidBlocklist, a1);
}

uint64_t sub_100243398(uint64_t a1)
{
  return sub_10000547C(a1, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t (*sub_1002433A4())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1002433CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100363120);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 20), (uint64_t)v5, &qword_100363120);
  uint64_t v7 = type metadata accessor for Proto_Gnss_Position(0LL);
  sub_10020D9BC(a1);
  return sub_100015764((uint64_t)v5, &qword_100363120);
}

uint64_t sub_1002434A4(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 20);
  sub_100015764(v3, &qword_100363120);
  sub_100003E68(a1, v3, type metadata accessor for Proto_Gnss_Position);
  uint64_t v4 = type metadata accessor for Proto_Gnss_Position(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_100243514(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100363120);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gnss_Position(0LL);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 20);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100363120);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    sub_10020D9BC((uint64_t)v9);
    sub_100015764((uint64_t)v5, &qword_100363120);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gnss_Position);
  }

  return sub_100243630;
}

void sub_100243630(uint64_t a1, char a2)
{
}

BOOL sub_100243644()
{
  uint64_t v1 = sub_100003A0C(&qword_100363120);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 20), (uint64_t)v3, &qword_100363120);
  uint64_t v5 = type metadata accessor for Proto_Gnss_Position(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100363120);
  return v6;
}

uint64_t sub_1002436F8()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 20);
  sub_100015764(v1, &qword_100363120);
  uint64_t v2 = type metadata accessor for Proto_Gnss_Position(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_100243750()
{
  return sub_1000B7AB4(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t sub_10024375C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_100243788(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 24);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002437D4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 24)) != 4;
}

uint64_t sub_1002437FC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 4;
  return result;
}

uint64_t sub_100243820()
{
  return sub_10001A898(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t sub_10024382C(char a1)
{
  return sub_10000534C(a1, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t (*sub_100243838(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100243880()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 28)) != 2;
}

uint64_t sub_1002438A8()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_1002438CC()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 32));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_1002438FC(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  uint64_t v4 = v1 + *(int *)(result + 32);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_100243930(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243984()
{
  return sub_100027E1C(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t sub_100243990()
{
  return sub_100027E58(type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t sub_10024399C@<X0>(uint64_t a1@<X8>)
{
  return sub_100004D18(type metadata accessor for Proto_Gnss_Position, a1);
}

uint64_t sub_1002439A8()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_1002439B4(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t (*sub_1002439C0(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243A14()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243A20()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243A2C()
{
  return sub_100005038(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243A38(uint64_t a1)
{
  return sub_100005078(a1, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t (*sub_100243A44(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243A98()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243AA4()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243AB0()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL) + 28));
  if (v1[8]) {
    return 0LL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_100243AE0(uint64_t a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  uint64_t v4 = v1 + *(int *)(result + 28);
  *(void *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_100243B14(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243B68()
{
  return sub_100027CC4(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243B74()
{
  return sub_100027D00(type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_100243B80()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_100243B8C(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t (*sub_100243B98(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243BEC()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_100243BF8()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_100243C04()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_100243C10(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t (*sub_100243C1C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243C70()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_100243C7C()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_100243C88@<X0>(uint64_t a1@<X8>)
{
  return sub_100005424(type metadata accessor for Proto_Gpsd_SetAssistancePressure, a1);
}

uint64_t sub_100243C94(uint64_t a1)
{
  return sub_10000547C(a1, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t (*sub_100243CA0())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_100243CC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100005424(type metadata accessor for Proto_Gpsd_SetAssistanceAccel, a1);
}

uint64_t sub_100243CD4(uint64_t a1)
{
  return sub_10000547C(a1, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t (*sub_100243CE0())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_100243D08@<X0>(uint64_t a1@<X8>)
{
  return sub_100005424(type metadata accessor for Proto_Gpsd_SetAssistanceGyro, a1);
}

uint64_t sub_100243D14(uint64_t a1)
{
  return sub_10000547C(a1, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t (*sub_100243D20())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_100243D48()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243D54(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t (*sub_100243D60(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243DB4()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243DC0()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

double sub_100243DCC()
{
  return sub_10001FD78(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243DD8(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

uint64_t (*sub_100243DE4(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243E3C()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243E48()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

double sub_100243E54()
{
  return sub_100027BE4(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243E60(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gpsd_SetAssistanceDem, a1);
}

uint64_t (*sub_100243E6C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243EC4()
{
  return sub_100027CC4(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243ED0()
{
  return sub_100027D00(type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100243EDC()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100243EE8(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t (*sub_100243EF4(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243F48()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100243F54()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

double sub_100243F60()
{
  return sub_10001FD78(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100243F6C(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, a1);
}

uint64_t (*sub_100243F78(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100243FD0()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100243FDC()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

double sub_100243FE8()
{
  return sub_100027BE4(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100243FF4(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector, a1);
}

uint64_t (*sub_100244000(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100244058()
{
  return sub_100027CC4(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100244064()
{
  return sub_100027D00(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_100244070()
{
  return sub_10001A96C(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_10024407C(char a1)
{
  return sub_10001A9A0(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t (*sub_100244088(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002440D0()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 32)) != 2;
}

uint64_t sub_1002440F8()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

double sub_10024411C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 36);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100244150(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v4 = v1 + *(int *)(result + 36);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_100244184(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 36);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002441DC()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 36) + 8) & 1) == 0;
}

uint64_t sub_100244208()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v2 = v0 + *(int *)(result + 36);
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

double sub_100244234()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 40);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100244268(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v4 = v1 + *(int *)(result + 40);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_10024429C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002442F4()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 40) + 8) & 1) == 0;
}

uint64_t sub_100244320()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v2 = v0 + *(int *)(result + 40);
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

double sub_10024434C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 44);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100244380(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v4 = v1 + *(int *)(result + 44);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_1002443B4(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 44);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10024440C()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 44) + 8) & 1) == 0;
}

uint64_t sub_100244438()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v2 = v0 + *(int *)(result + 44);
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

double sub_100244464()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 48);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100244498(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v4 = v1 + *(int *)(result + 48);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_1002444CC(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 48);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100244524()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 48) + 8) & 1) == 0;
}

uint64_t sub_100244550()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v2 = v0 + *(int *)(result + 48);
  *(void *)uint64_t v2 = 0LL;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

uint64_t sub_10024457C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 52)) & 1;
}

uint64_t sub_1002445A0(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_1002445CC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 52);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100244614()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 52)) != 2;
}

uint64_t sub_10024463C()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 52)) = 2;
  return result;
}

uint64_t sub_100244660()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 56)) & 1;
}

uint64_t sub_100244684(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*sub_1002446B0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 56);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002446F8()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 56)) != 2;
}

uint64_t sub_100244720()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 56)) = 2;
  return result;
}

uint64_t sub_100244744()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 60)) & 1;
}

uint64_t sub_100244768(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*sub_100244794(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 60);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002447DC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 60)) != 2;
}

uint64_t sub_100244804()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 60)) = 2;
  return result;
}

uint64_t sub_100244828()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 64)) & 1;
}

uint64_t sub_10024484C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*sub_100244878(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 64);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002448C0()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 64)) != 2;
}

uint64_t sub_1002448E8()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 64)) = 2;
  return result;
}

uint64_t sub_10024490C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 68)) & 1;
}

uint64_t sub_100244930(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*sub_10024495C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 68);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002449A4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 68)) != 2;
}

uint64_t sub_1002449CC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 68)) = 2;
  return result;
}

uint64_t sub_1002449F0()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t sub_1002449FC(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t (*sub_100244A08(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100244A5C()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t sub_100244A68()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t sub_100244A74()
{
  unsigned int v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 24));
  if (v1 == 10) {
    return 1LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100244A9C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_100244AC8(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 24);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 10) {
    LOBYTE(v4) = 1;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100244B14()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 24)) != 10;
}

uint64_t sub_100244B3C()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 10;
  return result;
}

uint64_t sub_100244B60()
{
  unsigned int v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 28));
  if (v1 == 5) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100244B88(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_100244BB4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 28);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 5) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100244C00()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 28)) != 5;
}

uint64_t sub_100244C28()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 5;
  return result;
}

uint64_t sub_100244C4C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0
                          + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 32));
  if (v1 == 6) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100244C74(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_100244CA0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 32);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 6) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100244CEC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 32)) != 6;
}

uint64_t sub_100244D14()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 6;
  return result;
}

uint64_t sub_100244D38()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t sub_100244D44(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t (*sub_100244D50(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100244DA4()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t sub_100244DB0()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t sub_100244DBC()
{
  return sub_1000B7AB4(type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t sub_100244DC8(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_100244DF4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL) + 24);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 4) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100244E40()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL) + 24)) != 4;
}

uint64_t sub_100244E68()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 4;
  return result;
}

uint64_t sub_100244E8C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL) + 20));
  if (v1 == 8) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100244EB4(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_100244EE0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL) + 20);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 8) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100244F2C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL) + 20)) != 8;
}

uint64_t sub_100244F54()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 8;
  return result;
}

uint64_t sub_100244F78()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100244F84(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t (*sub_100244F90(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100244FE4()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100244FF0()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

double sub_100244FFC()
{
  return sub_10001FD78(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100245008(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, a1);
}

uint64_t (*sub_100245014(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_10024506C()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100245078()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

double sub_100245084()
{
  return sub_100027BE4(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100245090(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint, a1);
}

uint64_t (*sub_10024509C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002450F4()
{
  return sub_100027CC4(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100245100()
{
  return sub_100027D00(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

double sub_10024510C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 32);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100245140(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v4 = v1 + *(int *)(result + 32);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_100245174(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 32);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002451CC()
{
  return sub_100027E1C(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_1002451D8()
{
  return sub_100027E58(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_1002451E4()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_1002451F0(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t (*sub_1002451FC(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100245250()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_10024525C()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

double sub_100245268()
{
  return sub_10001FD78(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_100245274(double a1)
{
  return sub_10001FDBC(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t (*sub_100245280(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002452D8()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_1002452E4()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

double sub_1002452F0()
{
  return sub_100027BE4(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_1002452FC(double a1)
{
  return sub_100027C28(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity, a1);
}

uint64_t (*sub_100245308(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL) + 28);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100245360()
{
  return sub_100027CC4(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_10024536C()
{
  return sub_100027D00(type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_100245378()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_100245384(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t (*sub_100245390(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002453E4()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_1002453F0()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_1002453FC()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_100245408(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t (*sub_100245414(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100245464()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_100245470()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_10024547C()
{
  return sub_10001A698(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t sub_100245488(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t (*sub_100245494(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002454DC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL) + 20)) != 2;
}

uint64_t sub_100245504()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_100245528()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t sub_100245534(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t (*sub_100245540(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100245590()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t sub_10024559C()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t sub_1002455A8()
{
  return sub_1000191E8(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_1002455B4(int a1)
{
  return sub_100019228(a1, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t (*sub_1002455C0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL) + 20);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100245610()
{
  return sub_1000192B8(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_10024561C()
{
  return sub_1000192F4(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_100245628()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_100245634(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t (*sub_100245640(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100245690()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_10024569C()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_1002456A8()
{
  return sub_10001A698(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t sub_1002456B4(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t (*sub_1002456C0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100245708()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL) + 20)) != 2;
}

uint64_t sub_100245730()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_100245754()
{
  return sub_10001A798(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t sub_100245760(char a1)
{
  return sub_10001A7CC(a1, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t (*sub_10024576C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002457B4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL) + 24)) != 2;
}

uint64_t sub_1002457DC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_100245800()
{
  return sub_10001A698(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t sub_10024580C(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t (*sub_100245818(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100245860()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL) + 20)) != 2;
}

uint64_t sub_100245888()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_1002458AC()
{
  return sub_100245950(type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t sub_1002458B8(uint64_t a1, uint64_t a2)
{
  return sub_1002459B0(a1, a2, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t (*sub_1002458C4(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_TerminationImminent(0LL) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0xE000000000000000LL;
  }

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B94;
}

BOOL sub_10024592C()
{
  return sub_100245A68(type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t sub_100245938()
{
  return sub_100245AA4(type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t sub_100245944()
{
  return sub_100245950(type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t sub_100245950(uint64_t (*a1)(void))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1(0LL) + 20));
  uint64_t v3 = v2[1];
  if (v3) {
    uint64_t v4 = *v2;
  }
  else {
    uint64_t v4 = 0LL;
  }
  swift_bridgeObjectRetain(v3);
  return v4;
}

uint64_t sub_1002459A4(uint64_t a1, uint64_t a2)
{
  return sub_1002459B0(a1, a2, type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t sub_1002459B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0LL) + 20));
  uint64_t result = swift_bridgeObjectRelease(v6[1]);
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1002459F4(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_ExitMessage(0LL) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0xE000000000000000LL;
  }

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B94;
}

BOOL sub_100245A5C()
{
  return sub_100245A68(type metadata accessor for Proto_Gpsd_ExitMessage);
}

BOOL sub_100245A68(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0LL) + 20) + 8) != 0LL;
}

uint64_t sub_100245A98()
{
  return sub_100245AA4(type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t sub_100245AA4(uint64_t (*a1)(void))
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1(0LL) + 20));
  uint64_t result = swift_bridgeObjectRelease(v2[1]);
  *uint64_t v2 = 0LL;
  v2[1] = 0LL;
  return result;
}

uint64_t sub_100245ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364610);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 24), (uint64_t)v5, &qword_100364610);
  unint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 2;
  uint64_t v8 = a1 + v7[6];
  *(_DWORD *)uint64_t v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  *(_BYTE *)(a1 + v7[7]) = 2;
  *(_BYTE *)(a1 + v7[8]) = 2;
  return sub_100015764((uint64_t)v5, &qword_100364610);
}

int *sub_100245BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  *(_BYTE *)(a1 + result[5]) = 2;
  uint64_t v3 = a1 + result[6];
  *(_DWORD *)uint64_t v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  *(_BYTE *)(a1 + result[7]) = 2;
  *(_BYTE *)(a1 + result[8]) = 2;
  return result;
}

uint64_t sub_100245C40(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL) + 24);
  sub_100015764(v3, &qword_100364610);
  sub_100003E68(a1, v3, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_100245CB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364610);
  unint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL) + 24);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100364610);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 2;
    uint64_t v11 = &v9[v6[6]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    v9[v6[7]] = 2;
    v9[v6[8]] = 2;
    sub_100015764((uint64_t)v5, &qword_100364610);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  }

  return sub_100245DFC;
}

void sub_100245DFC(uint64_t a1, char a2)
{
}

BOOL sub_100245E10()
{
  uint64_t v1 = sub_100003A0C(&qword_100364610);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_100364610);
  uint64_t v5 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100364610);
  return v6;
}

uint64_t sub_100245EC4()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL) + 24);
  sub_100015764(v1, &qword_100364610);
  uint64_t v2 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_100245F1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100005424(type metadata accessor for Proto_Gpsd_RecoveryStatistics, a1);
}

uint64_t sub_100245F28(uint64_t a1)
{
  return sub_10000547C(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t (*sub_100245F34())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_100245F5C()
{
  return sub_10001A698(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t sub_100245F68(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*sub_100245F74(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100245FBC()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 20)) != 2;
}

uint64_t sub_100245FE4()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_100246008()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t sub_100246014(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*sub_100246020(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100246070()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t sub_10024607C()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t sub_100246088()
{
  return sub_10001A898(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t sub_100246094(char a1)
{
  return sub_10000534C(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*sub_1002460A0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002460E8()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 28)) != 2;
}

uint64_t sub_100246110()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_100246134()
{
  return sub_10001A96C(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t sub_100246140(char a1)
{
  return sub_10001A9A0(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t (*sub_10024614C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 32);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100246194()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 32)) != 2;
}

uint64_t sub_1002461BC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 32)) = 2;
  return result;
}

uint64_t sub_1002461E0()
{
  return sub_100245950(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_1002461EC(uint64_t a1, uint64_t a2)
{
  return sub_1002459B0(a1, a2, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t (*sub_1002461F8(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0xE000000000000000LL;
  }

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B94;
}

BOOL sub_100246260()
{
  return sub_100245A68(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_10024626C()
{
  return sub_100245AA4(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_100246278()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_100246284(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t (*sub_100246290(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002462E0()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_1002462EC()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_1002462F8()
{
  return sub_100249884(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_100246304(uint64_t a1, uint64_t a2)
{
  return sub_1002498E4(a1, a2, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t (*sub_100246310(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  int v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0xE000000000000000LL;
  }

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B94;
}

BOOL sub_100246378()
{
  return sub_10024999C(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t sub_100246384()
{
  return sub_1002499D8(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

int *sub_100246390@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL);
  uint64_t v3 = (void *)(a1 + result[5]);
  *uint64_t v3 = 0LL;
  v3[1] = 0LL;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  unint64_t v5 = (void *)(a1 + result[7]);
  *unint64_t v5 = 0LL;
  v5[1] = 0LL;
  return result;
}

uint64_t sub_1002463E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100004D18(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus, a1);
}

uint64_t sub_1002463F0()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL) + 20));
  if (v1 == 5) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_100246418(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_100246444(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL) + 20);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 5) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100246490()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL) + 20)) != 5;
}

uint64_t sub_1002464B8()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 5;
  return result;
}

uint64_t sub_1002464DC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 16) & 1;
}

uint64_t sub_100246528(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10026E8E0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 16, v12, 1LL, 0LL);
  *(_BYTE *)(v10 + 16) = a1 & 1;
  return result;
}

void (*sub_1002465D0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 16, v3, 0LL, 0LL);
  *((_BYTE *)v3 + 84) = *(_BYTE *)(v5 + 16) & 1;
  return sub_100246648;
}

void sub_100246648(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10026E8E0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100246714()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_beginAccess(v1 + 16, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 16) != 2;
}

uint64_t sub_100246764()
{
  return sub_10016D7B8( type metadata accessor for Proto_Gpsd_LtlInfo,  type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass,  (void (*)(uint64_t))sub_10026E8E0,  2);
}

uint64_t sub_100246784()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_beginAccess(v1 + 20, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 24)) {
    return 0LL;
  }
  else {
    return *(unsigned int *)(v1 + 20);
  }
}

uint64_t sub_1002467D8(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10026E8E0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 20, v12, 1LL, 0LL);
  *(_DWORD *)(v10 + 20) = a1;
  *(_BYTE *)(v10 + 24) = 0;
  return result;
}

void (*sub_100246880(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  *((_DWORD *)v3 + 21) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 20, v3, 0LL, 0LL);
  int v6 = *(_DWORD *)(v5 + 20);
  if (*(_BYTE *)(v5 + 24)) {
    int v6 = 0;
  }
  *((_DWORD *)v3 + 20) = v6;
  return sub_100246900;
}

void sub_100246900(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  int v4 = *(_DWORD *)(*a1 + 80);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 84)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 84);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10026E8E0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_1002469D4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_beginAccess(v1 + 20, v3, 0LL, 0LL);
  return (*(_BYTE *)(v1 + 24) & 1) == 0;
}

uint64_t sub_100246A24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10026E8E0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 20, v10, 1LL, 0LL);
  *(_DWORD *)(v8 + 20) = 0;
  *(_BYTE *)(v8 + 24) = 1;
  return result;
}

uint64_t sub_100246AC4()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_beginAccess(v1 + 25, v3, 0LL, 0LL);
  if (*(_BYTE *)(v1 + 25) == 5) {
    return 0LL;
  }
  else {
    return *(unsigned __int8 *)(v1 + 25);
  }
}

uint64_t sub_100246B14(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v4)) & 1) == 0)
  {
    uint64_t v5 = *(void *)(v1 + v4);
    uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v7 = swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    uint64_t v8 = swift_retain(v5);
    sub_10026E8E0(v8);
    uint64_t v9 = *(void *)(v2 + v4);
    *(void *)(v2 + v4) = v7;
    swift_release(v9);
  }

  uint64_t v10 = *(void *)(v2 + v4);
  uint64_t result = swift_beginAccess(v10 + 25, v12, 1LL, 0LL);
  *(_BYTE *)(v10 + 25) = a1;
  return result;
}

void (*sub_100246BB8(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  *((_DWORD *)v3 + 20) = v4;
  uint64_t v5 = *(void *)(v1 + v4);
  swift_beginAccess(v5 + 25, v3, 0LL, 0LL);
  int v6 = *(unsigned __int8 *)(v5 + 25);
  if (v6 == 5) {
    LOBYTE(v6) = 0;
  }
  *((_BYTE *)v3 + 84) = v6;
  return sub_100246C34;
}

void sub_100246C34(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  char v4 = *(_BYTE *)(*a1 + 84);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)(*(void *)(*a1 + 72)
                                                                                            + *(int *)(*a1 + 80)));
  if ((a2 & 1) == 0)
  {
    uint64_t v6 = v3 + 48;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }

  uint64_t v6 = v3 + 24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    uint64_t v7 = *(int *)(v3 + 80);
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + v7);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10026E8E0(v12);
    uint64_t v13 = *(void *)(v8 + v7);
    *(void *)(v8 + v7) = v11;
    swift_release(v13);
  }

BOOL sub_100246D08()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_beginAccess(v1 + 25, v3, 0LL, 0LL);
  return *(_BYTE *)(v1 + 25) != 5;
}

uint64_t sub_100246D58()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v2)) & 1) == 0)
  {
    uint64_t v3 = *(void *)(v0 + v2);
    uint64_t v4 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
    uint64_t v6 = swift_retain(v3);
    sub_10026E8E0(v6);
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    swift_release(v7);
  }

  uint64_t v8 = *(void *)(v1 + v2);
  uint64_t result = swift_beginAccess(v8 + 25, v10, 1LL, 0LL);
  *(_BYTE *)(v8 + 25) = 5;
  return result;
}

uint64_t sub_100246DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364618);
  __chkstk_darwin(v3);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v20, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364618);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  UnknownStorage.init()();
  uint64_t v8 = a1 + v7[5];
  *(_DWORD *)uint64_t v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  uint64_t v9 = a1 + v7[6];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a1 + v7[7];
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  uint64_t v11 = a1 + v7[8];
  *(_DWORD *)uint64_t v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  uint64_t v12 = a1 + v7[9];
  *(_DWORD *)uint64_t v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  uint64_t v13 = a1 + v7[10];
  *(_DWORD *)uint64_t v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  *(_BYTE *)(a1 + v7[11]) = 2;
  uint64_t v14 = a1 + v7[12];
  *(_DWORD *)uint64_t v14 = 0;
  *(_BYTE *)(v14 + 4) = 1;
  uint64_t v15 = a1 + v7[13];
  *(_DWORD *)uint64_t v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  uint64_t v16 = a1 + v7[14];
  *(_DWORD *)uint64_t v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  uint64_t v17 = a1 + v7[15];
  *(_DWORD *)uint64_t v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  return sub_100015764((uint64_t)v5, &qword_100364618);
}

int *sub_100246FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v3 = a1 + result[5];
  *(_DWORD *)uint64_t v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  uint64_t v4 = a1 + result[6];
  *(_DWORD *)uint64_t v4 = 0;
  *(_BYTE *)(v4 + 4) = 1;
  uint64_t v5 = a1 + result[7];
  *(_DWORD *)uint64_t v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  uint64_t v6 = a1 + result[8];
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  uint64_t v7 = a1 + result[9];
  *(_DWORD *)uint64_t v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  uint64_t v8 = a1 + result[10];
  *(_DWORD *)uint64_t v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  *(_BYTE *)(a1 + result[11]) = 2;
  uint64_t v9 = a1 + result[12];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a1 + result[13];
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  uint64_t v11 = a1 + result[14];
  *(_DWORD *)uint64_t v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  uint64_t v12 = a1 + result[15];
  *(_DWORD *)uint64_t v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  return result;
}

uint64_t sub_100247080(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364618);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10026E8E0(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364618);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364618);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100247200(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364618);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v7 = *((void *)v6 - 1);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364618);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[v6[5]];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[v6[6]];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    uint64_t v13 = &v9[v6[7]];
    *(_DWORD *)uint64_t v13 = 0;
    v13[4] = 1;
    uint64_t v14 = &v9[v6[8]];
    *(_DWORD *)uint64_t v14 = 0;
    v14[4] = 1;
    uint64_t v15 = &v9[v6[9]];
    *(_DWORD *)uint64_t v15 = 0;
    v15[4] = 1;
    uint64_t v16 = &v9[v6[10]];
    *(_DWORD *)uint64_t v16 = 0;
    void v16[4] = 1;
    v9[v6[11]] = 2;
    uint64_t v17 = &v9[v6[12]];
    *(_DWORD *)uint64_t v17 = 0;
    v17[4] = 1;
    uint64_t v18 = &v9[v6[13]];
    *(_DWORD *)uint64_t v18 = 0;
    v18[4] = 1;
    uint64_t v19 = &v9[v6[14]];
    *(_DWORD *)uint64_t v19 = 0;
    v19[4] = 1;
    uint64_t v20 = &v9[v6[15]];
    *(_DWORD *)uint64_t v20 = 0;
    v20[4] = 1;
    sub_100015764((uint64_t)v5, &qword_100364618);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  }

  return sub_1002473E4;
}

void sub_1002473E4(uint64_t a1, char a2)
{
}

BOOL sub_1002473F8()
{
  return sub_10001D054( &qword_100364618,  type metadata accessor for Proto_Gpsd_LtlInfo,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_10024741C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364618);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10026E8E0(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364618);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_10024754C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364620);
  __chkstk_darwin(v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v12, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364620);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  *a1 = &_swiftEmptyArrayStorage;
  a1[1] = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + *(int *)(v7 + 28);
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  uint64_t v9 = (char *)a1 + *(int *)(v7 + 32);
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  return sub_100015764((uint64_t)v5, &qword_100364620);
}

uint64_t sub_100247684@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  a1[1] = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  uint64_t result = UnknownStorage.init()();
  uint64_t v4 = (char *)a1 + *(int *)(v2 + 28);
  *(_DWORD *)uint64_t v4 = 0;
  v4[4] = 1;
  uint64_t v5 = (char *)a1 + *(int *)(v2 + 32);
  *(_DWORD *)uint64_t v5 = 0;
  v5[4] = 1;
  return result;
}

uint64_t sub_1002476E8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364620);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10026E8E0(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364620);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364620);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100247868(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364620);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364620);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    v9[1] = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 28);
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = (char *)v9 + *(int *)(v6 + 32);
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    sub_100015764((uint64_t)v5, &qword_100364620);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  }

  return sub_1002479D0;
}

void sub_1002479D0(uint64_t a1, char a2)
{
}

BOOL sub_1002479E4()
{
  return sub_10001D054( &qword_100364620,  type metadata accessor for Proto_Gpsd_LtlInfo,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_100247A08()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364620);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10026E8E0(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364620);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100247B38@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100364628);
  __chkstk_darwin(v3);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6, v12, 0LL, 0LL);
  sub_10000E6C0(v6, (uint64_t)v5, &qword_100364628);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  *a1 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v8 = (char *)a1 + *(int *)(v7 + 24);
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  uint64_t v9 = (char *)a1 + *(int *)(v7 + 28);
  *(_DWORD *)uint64_t v9 = 0;
  v9[4] = 1;
  return sub_100015764((uint64_t)v5, &qword_100364628);
}

uint64_t sub_100247C70@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  uint64_t v2 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  uint64_t result = UnknownStorage.init()();
  uint64_t v4 = (char *)a1 + *(int *)(v2 + 24);
  *(_DWORD *)uint64_t v4 = 0;
  v4[4] = 1;
  uint64_t v5 = (char *)a1 + *(int *)(v2 + 28);
  *(_DWORD *)uint64_t v5 = 0;
  v5[4] = 1;
  return result;
}

uint64_t sub_100247CD4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364628);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10026E8E0(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364628);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364628);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100247E54(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364628);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364628);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    *uint64_t v9 = &_swiftEmptyArrayStorage;
    UnknownStorage.init()();
    uint64_t v11 = (char *)v9 + *(int *)(v6 + 24);
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = (char *)v9 + *(int *)(v6 + 28);
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    sub_100015764((uint64_t)v5, &qword_100364628);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  }

  return sub_100247FBC;
}

void sub_100247FBC(uint64_t a1, char a2)
{
}

BOOL sub_100247FD0()
{
  return sub_10001D054( &qword_100364628,  type metadata accessor for Proto_Gpsd_LtlInfo,  &OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_100247FF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364628);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10026E8E0(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364628);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_100248124@<X0>(uint64_t a1@<X8>)
{
  return sub_100248148( &qword_100364630,  type metadata accessor for Proto_Gpsd_LtlInfo,  OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  a1);
}

uint64_t sub_100248148@<X0>( uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, void *a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = sub_100003A0C(a1);
  __chkstk_darwin(v11);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v14 = *(void *)(v5 + *(int *)(a2(0LL) + 20)) + *a3;
  swift_beginAccess(v14, v20, 0LL, 0LL);
  sub_10000E6C0(v14, (uint64_t)v13, a1);
  uint64_t v15 = a4(0LL);
  UnknownStorage.init()();
  uint64_t v16 = a5 + *(int *)(v15 + 20);
  *(_DWORD *)uint64_t v16 = 0;
  *(_BYTE *)(v16 + 4) = 1;
  uint64_t v17 = a5 + *(int *)(v15 + 24);
  *(_DWORD *)uint64_t v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  return sub_100015764((uint64_t)v13, a1);
}

uint64_t sub_100248278@<X0>(uint64_t a1@<X8>)
{
  return sub_10015AC98(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData, a1);
}

uint64_t sub_100248284(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364630);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  __chkstk_darwin(v5);
  uint64_t v9 = &v21[-v8 - 8];
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v1 + v10)) & 1) == 0)
  {
    uint64_t v11 = *(void *)(v1 + v10);
    uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
    uint64_t v14 = swift_retain(v11);
    sub_10026E8E0(v14);
    uint64_t v15 = *(void *)(v2 + v10);
    *(void *)(v2 + v10) = v13;
    swift_release(v15);
  }

  uint64_t v16 = *(void *)(v2 + v10);
  sub_100003E68(a1, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v9, 0LL, 1LL, v17);
  sub_10000E590((uint64_t)v9, (uint64_t)v7, &qword_100364630);
  uint64_t v18 = v16
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0];
  swift_beginAccess( v16 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0],  v21,  33LL,  0LL);
  swift_retain(v16);
  sub_10000E5D4((uint64_t)v7, v18, &qword_100364630);
  swift_endAccess(v21);
  return swift_release(v16);
}

void (*sub_100248404(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364630);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[4] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  size_t v8 = *(void *)(v7 + 64);
  v3[5] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[6] = v9;
  swift_beginAccess(v10, v3, 0LL, 0LL);
  sub_10000E6C0(v10, (uint64_t)v5, &qword_100364630);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = &v9[*(int *)(v6 + 20)];
    *(_DWORD *)uint64_t v11 = 0;
    v11[4] = 1;
    uint64_t v12 = &v9[*(int *)(v6 + 24)];
    *(_DWORD *)uint64_t v12 = 0;
    void v12[4] = 1;
    sub_100015764((uint64_t)v5, &qword_100364630);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  }

  return sub_10024855C;
}

void sub_10024855C(uint64_t a1, char a2)
{
}

BOOL sub_100248570()
{
  return sub_10001D054( &qword_100364630,  type metadata accessor for Proto_Gpsd_LtlInfo,  OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_100248594()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100364630);
  __chkstk_darwin(v2);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v0 + v5)) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + v5);
    uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
    uint64_t v9 = swift_retain(v6);
    sub_10026E8E0(v9);
    uint64_t v10 = *(void *)(v1 + v5);
    *(void *)(v1 + v5) = v8;
    swift_release(v10);
  }

  uint64_t v11 = *(void *)(v1 + v5);
  uint64_t v12 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v4, 1LL, 1LL, v12);
  uint64_t v13 = v11
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0];
  swift_beginAccess( v11 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0],  v16,  33LL,  0LL);
  swift_retain(v11);
  sub_10000E5D4((uint64_t)v4, v13, &qword_100364630);
  swift_endAccess(v16);
  return swift_release(v11);
}

uint64_t sub_1002486C4()
{
  return sub_1000B8E14(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_1002486D0(int a1)
{
  return sub_1000B8E54(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t (*sub_1002486DC(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL) + 28);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_10024872C()
{
  return sub_100020BD0(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_100248738()
{
  return sub_100020C0C(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_100248744()
{
  return sub_1000A9EA0(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_100248750(int a1)
{
  return sub_1000A9EE0(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t (*sub_10024875C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL) + 32);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002487AC()
{
  return sub_100027938(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_1002487B8()
{
  return sub_100027974(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_1002487C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL) + 24);
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a1, v3, v4);
}

uint64_t sub_10024880C(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL) + 24);
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(v3, a1, v4);
}

uint64_t (*sub_100248854())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_10024887C()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_100248888(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t (*sub_100248894(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_1002488E4()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_1002488F0()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_1002488FC()
{
  return sub_1000B8E14(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_100248908(int a1)
{
  return sub_1000B8E54(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t (*sub_100248914(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL) + 28);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248964()
{
  return sub_100020BD0(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_100248970()
{
  return sub_100020C0C(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_10024897C@<X0>(uint64_t a1@<X8>)
{
  return sub_100005424(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData, a1);
}

uint64_t sub_100248988(uint64_t a1)
{
  return sub_10000547C(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t (*sub_100248994())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_1002489BC()
{
  return sub_1000191E8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_1002489C8(int a1)
{
  return sub_100019228(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t (*sub_1002489D4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL) + 20);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248A24()
{
  return sub_1000192B8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_100248A30()
{
  return sub_1000192F4(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_100248A3C()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_100248A48(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t (*sub_100248A54(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248AA4()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_100248AB0()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_100248ABC()
{
  return sub_1000191E8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248AC8(int a1)
{
  return sub_100019228(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*sub_100248AD4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 20);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248B24()
{
  return sub_1000192B8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248B30()
{
  return sub_1000192F4(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248B3C()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248B48(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*sub_100248B54(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248BA4()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248BB0()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248BBC()
{
  return sub_1000B8E14(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248BC8(int a1)
{
  return sub_1000B8E54(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*sub_100248BD4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 28);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248C24()
{
  return sub_100020BD0(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248C30()
{
  return sub_100020C0C(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248C3C()
{
  return sub_1000A9EA0(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248C48(int a1)
{
  return sub_1000A9EE0(a1, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t (*sub_100248C54(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 32);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248CA4()
{
  return sub_100027938(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248CB0()
{
  return sub_100027974(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_100248CBC()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 36));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100248CEC(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v4 = v1 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100248D20(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 36);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248D70()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 36) + 4) & 1) == 0;
}

uint64_t sub_100248D9C()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v2 = v0 + *(int *)(result + 36);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_100248DC8()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 40));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100248DF8(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100248E2C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 40);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100248E7C()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 40) + 4) & 1) == 0;
}

uint64_t sub_100248EA8()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v2 = v0 + *(int *)(result + 40);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_100248ED4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 44)) & 1;
}

uint64_t sub_100248EF8(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_100248F24(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 44);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100248F6C()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 44)) != 2;
}

uint64_t sub_100248F94()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 44)) = 2;
  return result;
}

uint64_t sub_100248FB8()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 48));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100248FE8(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v4 = v1 + *(int *)(result + 48);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_10024901C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 48);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_10024906C()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 48) + 4) & 1) == 0;
}

uint64_t sub_100249098()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v2 = v0 + *(int *)(result + 48);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_1002490C4()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 52));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_1002490F4(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v4 = v1 + *(int *)(result + 52);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100249128(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 52);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100249178()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 52) + 4) & 1) == 0;
}

uint64_t sub_1002491A4()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v2 = v0 + *(int *)(result + 52);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_1002491D0()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 56));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_100249200(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v4 = v1 + *(int *)(result + 56);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100249234(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 56);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100249284()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 56) + 4) & 1) == 0;
}

uint64_t sub_1002492B0()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v2 = v0 + *(int *)(result + 56);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_1002492DC()
{
  uint64_t v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 60));
  if (v1[4]) {
    return 0LL;
  }
  else {
    return *(unsigned int *)v1;
  }
}

uint64_t sub_10024930C(int a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v4 = v1 + *(int *)(result + 60);
  *(_DWORD *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_100249340(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 60);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100249390()
{
  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 60) + 4) & 1) == 0;
}

uint64_t sub_1002493BC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v2 = v0 + *(int *)(result + 60);
  *(_DWORD *)uint64_t v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t sub_1002493E8()
{
  return sub_1000365F4(&qword_1003B6B70, &qword_1003B6B78, (uint64_t)sub_10026E7D4);
}

uint64_t sub_100249404()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL) + 20));
  if (v1 == 7) {
    return 0LL;
  }
  else {
    return v1;
  }
}

uint64_t sub_10024942C(char a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*sub_100249458(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL) + 20);
  int v4 = *(unsigned __int8 *)(v1 + v3);
  if (v4 == 7) {
    LOBYTE(v4) = 0;
  }
  *(_BYTE *)(a1 + 12) = v4;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_1002494A4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL) + 20)) != 7;
}

uint64_t sub_1002494CC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 7;
  return result;
}

uint64_t sub_1002494F0()
{
  return sub_10001A698(type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t sub_1002494FC(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t (*sub_100249508(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_CntinClockControl(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_100249550()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_CntinClockControl(0LL) + 20)) != 2;
}

uint64_t sub_100249578()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_10024959C()
{
  return sub_1000191E8(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_1002495A8(int a1)
{
  return sub_100019228(a1, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t (*sub_1002495B4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0LL) + 20);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100249604()
{
  return sub_1000192B8(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_100249610()
{
  return sub_1000192F4(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_10024961C()
{
  return sub_10002DF9C(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_100249628(int a1)
{
  return sub_10002DFDC(a1, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t (*sub_100249634(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0LL) + 24);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100249684()
{
  return sub_1000277C8(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_100249690()
{
  return sub_100027804(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_10024969C()
{
  return sub_1000B8E14(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_1002496A8(int a1)
{
  return sub_1000B8E54(a1, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t (*sub_1002496B4(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0LL) + 28);
  if (*(_BYTE *)(v1 + v3 + 4)) {
    int v4 = 0;
  }
  else {
    int v4 = *(_DWORD *)(v1 + v3);
  }
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_100003590;
}

BOOL sub_100249704()
{
  return sub_100020BD0(type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_100249710()
{
  return sub_100020C0C(type metadata accessor for Proto_Gpsd_Exception);
}

double sub_10024971C()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL) + 20);
  double result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_100249750(double a1)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v4 = v1 + *(int *)(result + 20);
  *(double *)uint64_t v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_100249784(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = v1 + v3;
  double v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8)) {
    double v5 = 0.0;
  }
  *(double *)a1 = v5;
  return sub_100003480;
}

BOOL sub_1002497DC()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_1002497E8()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_1002497F4()
{
  return sub_100005038(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_100249800(uint64_t a1)
{
  return sub_100005078(a1, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t (*sub_10024980C(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100249860()
{
  return sub_10000510C(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_10024986C()
{
  return sub_100005148(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_100249878()
{
  return sub_100249884(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_100249884(uint64_t (*a1)(void))
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1(0LL) + 28));
  uint64_t v3 = v2[1];
  if (v3) {
    uint64_t v4 = *v2;
  }
  else {
    uint64_t v4 = 0LL;
  }
  swift_bridgeObjectRetain(v3);
  return v4;
}

uint64_t sub_1002498D8(uint64_t a1, uint64_t a2)
{
  return sub_1002498E4(a1, a2, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_1002498E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0LL) + 28));
  uint64_t result = swift_bridgeObjectRelease(v6[1]);
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_100249928(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0xE000000000000000LL;
  }

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B94;
}

BOOL sub_100249990()
{
  return sub_10024999C(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

BOOL sub_10024999C(uint64_t (*a1)(void))
{
  return *(void *)(v1 + *(int *)(a1(0LL) + 28) + 8) != 0LL;
}

uint64_t sub_1002499CC()
{
  return sub_1002499D8(type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_1002499D8(uint64_t (*a1)(void))
{
  uint64_t v2 = (void *)(v1 + *(int *)(a1(0LL) + 28));
  uint64_t result = swift_bridgeObjectRelease(v2[1]);
  *uint64_t v2 = 0LL;
  v2[1] = 0LL;
  return result;
}

uint64_t sub_100249A10()
{
  return sub_100027F98(type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t sub_100249A1C(uint64_t a1)
{
  return sub_100027FD8(a1, type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t (*sub_100249A28(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 8) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  if (*((_BYTE *)v4 + 8)) {
    uint64_t v5 = 0LL;
  }
  else {
    uint64_t v5 = *v4;
  }
  *(void *)a1 = v5;
  return sub_100003480;
}

BOOL sub_100249A7C()
{
  return sub_10001FD00(type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t sub_100249A88()
{
  return sub_10001FD3C(type metadata accessor for Proto_Gpsd_LogEntry);
}

uint64_t sub_100249A94()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 24));
  uint64_t v2 = v1[1];
  if (v2) {
    uint64_t v3 = *v1;
  }
  else {
    uint64_t v3 = 0LL;
  }
  swift_bridgeObjectRetain(v2);
  return v3;
}

uint64_t sub_100249AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 24));
  uint64_t result = swift_bridgeObjectRelease(v5[1]);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_100249B28(uint64_t a1))(uint64_t *, char)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  unint64_t v5 = v4[1];
  if (v5)
  {
    uint64_t v6 = *v4;
    unint64_t v7 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
    unint64_t v7 = 0xE000000000000000LL;
  }

  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v5);
  return sub_100096B94;
}

BOOL sub_100249B90()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 24) + 8) != 0LL;
}

uint64_t sub_100249BBC()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 24));
  uint64_t result = swift_bridgeObjectRelease(v1[1]);
  void *v1 = 0LL;
  v1[1] = 0LL;
  return result;
}

uint64_t sub_100249BF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100350F20);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_100350F20);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_Request(0LL);
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_1003B6A28 != -1) {
    swift_once(&qword_1003B6A28, sub_10024BF4C);
  }
  uint64_t v9 = qword_1003B6A30;
  *(void *)(a1 + v8) = qword_1003B6A30;
  swift_retain(v9);
  return sub_100015764((uint64_t)v5, &qword_100350F20);
}

uint64_t sub_100249D08(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 28);
  sub_100015764(v3, &qword_100350F20);
  sub_100003E68(a1, v3, type metadata accessor for Proto_Gpsd_Request);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_Request(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_100249D78(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100350F20);
  unint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_Request(0LL);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100350F20);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_1003B6A28 != -1) {
      swift_once(&qword_1003B6A28, sub_10024BF4C);
    }
    uint64_t v12 = qword_1003B6A30;
    *(void *)&v9[v11] = qword_1003B6A30;
    swift_retain(v12);
    sub_100015764((uint64_t)v5, &qword_100350F20);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Request);
  }

  return sub_100249ED0;
}

void sub_100249ED0(uint64_t a1, char a2)
{
}

BOOL sub_100249EE4()
{
  uint64_t v1 = sub_100003A0C(&qword_100350F20);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 28), (uint64_t)v3, &qword_100350F20);
  uint64_t v5 = type metadata accessor for Proto_Gpsd_Request(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100350F20);
  return v6;
}

uint64_t sub_100249F98()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 28);
  sub_100015764(v1, &qword_100350F20);
  uint64_t v2 = type metadata accessor for Proto_Gpsd_Request(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_100249FF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100350F28);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 32), (uint64_t)v5, &qword_100350F28);
  uint64_t v7 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  UnknownStorage.init()();
  *(_BYTE *)(a1 + v7[5]) = 61;
  uint64_t v8 = a1 + v7[6];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  *(_BYTE *)(a1 + v7[7]) = 10;
  return sub_100015764((uint64_t)v5, &qword_100350F28);
}

uint64_t sub_10024A0F8(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 32);
  sub_100015764(v3, &qword_100350F28);
  sub_100003E68(a1, v3, type metadata accessor for Proto_Gpsd_Response);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_Response(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_10024A168(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100350F28);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  v3[2] = v6;
  uint64_t v7 = *((void *)v6 - 1);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 32);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100350F28);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    v9[v6[5]] = 61;
    uint64_t v11 = &v9[v6[6]];
    *(void *)uint64_t v11 = 0LL;
    v11[8] = 1;
    v9[v6[7]] = 10;
    sub_100015764((uint64_t)v5, &qword_100350F28);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Response);
  }

  return sub_10024A2B0;
}

void sub_10024A2B0(uint64_t a1, char a2)
{
}

BOOL sub_10024A2C4()
{
  uint64_t v1 = sub_100003A0C(&qword_100350F28);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 32), (uint64_t)v3, &qword_100350F28);
  uint64_t v5 = type metadata accessor for Proto_Gpsd_Response(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100350F28);
  return v6;
}

uint64_t sub_10024A378()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 32);
  sub_100015764(v1, &qword_100350F28);
  uint64_t v2 = type metadata accessor for Proto_Gpsd_Response(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_10024A3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100003A0C(&qword_100350F30);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(v1 + *(int *)(v6 + 36), (uint64_t)v5, &qword_100350F30);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  UnknownStorage.init()();
  uint64_t v8 = *(int *)(v7 + 20);
  if (qword_1003B6A50 != -1) {
    swift_once(&qword_1003B6A50, sub_10025C9BC);
  }
  uint64_t v9 = qword_1003B6A58;
  *(void *)(a1 + v8) = qword_1003B6A58;
  swift_retain(v9);
  return sub_100015764((uint64_t)v5, &qword_100350F30);
}

uint64_t sub_10024A4E8(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 36);
  sub_100015764(v3, &qword_100350F30);
  sub_100003E68(a1, v3, type metadata accessor for Proto_Gpsd_Indication);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 0LL, 1LL, v4);
}

void (*sub_10024A558(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100350F30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64LL));
  v3[1] = v5;
  uint64_t v6 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  v3[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v3[4] = malloc(v8);
  uint64_t v9 = (char *)malloc(v8);
  v3[5] = v9;
  uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 36);
  *((_DWORD *)v3 + 12) = v10;
  sub_10000E6C0(v1 + v10, (uint64_t)v5, &qword_100350F30);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
    UnknownStorage.init()();
    uint64_t v11 = *(int *)(v6 + 20);
    if (qword_1003B6A50 != -1) {
      swift_once(&qword_1003B6A50, sub_10025C9BC);
    }
    uint64_t v12 = qword_1003B6A58;
    *(void *)&v9[v11] = qword_1003B6A58;
    swift_retain(v12);
    sub_100015764((uint64_t)v5, &qword_100350F30);
  }

  else
  {
    sub_100003E68((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_Gpsd_Indication);
  }

  return sub_10024A6B0;
}

void sub_10024A6B0(uint64_t a1, char a2)
{
}

BOOL sub_10024A6C4()
{
  uint64_t v1 = sub_100003A0C(&qword_100350F30);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(v0 + *(int *)(v4 + 36), (uint64_t)v3, &qword_100350F30);
  uint64_t v5 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48LL))(v3, 1LL, v5) != 1;
  sub_100015764((uint64_t)v3, &qword_100350F30);
  return v6;
}

uint64_t sub_10024A778()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 36);
  sub_100015764(v1, &qword_100350F30);
  uint64_t v2 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
}

uint64_t sub_10024A7D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  uint64_t v3 = a1 + v2[5];
  *(void *)uint64_t v3 = 0LL;
  *(_BYTE *)(v3 + 8) = 1;
  uint64_t v4 = (void *)(a1 + v2[6]);
  *uint64_t v4 = 0LL;
  v4[1] = 0LL;
  uint64_t v5 = a1 + v2[7];
  uint64_t v6 = type metadata accessor for Proto_Gpsd_Request(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56LL))(v5, 1LL, 1LL, v6);
  uint64_t v7 = a1 + v2[8];
  uint64_t v8 = type metadata accessor for Proto_Gpsd_Response(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v7, 1LL, 1LL, v8);
  uint64_t v9 = a1 + v2[9];
  uint64_t v10 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))( v9,  1LL,  1LL,  v10);
}

uint64_t sub_10024A8A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100004D18(type metadata accessor for Proto_Gpsd_Request, a1);
}

uint64_t sub_10024A8B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100004D18(type metadata accessor for Proto_Gpsd_Response, a1);
}

uint64_t sub_10024A8BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100004D18(type metadata accessor for Proto_Gpsd_Indication, a1);
}

uint64_t sub_10024A8C8()
{
  return sub_10001A698(type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t sub_10024A8D4(char a1)
{
  return sub_10001A6CC(a1, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t (*sub_10024A8E0(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10024A928()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 20)) != 2;
}

uint64_t sub_10024A950()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 20)) = 2;
  return result;
}

uint64_t sub_10024A974()
{
  return sub_10001A798(type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t sub_10024A980(char a1)
{
  return sub_10001A7CC(a1, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t (*sub_10024A98C(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 24);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10024A9D4()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 24)) != 2;
}

uint64_t sub_10024A9FC()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 24)) = 2;
  return result;
}

uint64_t sub_10024AA20()
{
  return sub_10001A898(type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t sub_10024AA2C(char a1)
{
  return sub_10000534C(a1, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t (*sub_10024AA38(uint64_t a1))(uint64_t result)
{
  *(void *)a1 = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 28);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3) & 1;
  *(_DWORD *)(a1 + 8) = v3;
  return sub_100004390;
}

BOOL sub_10024AA80()
{
  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 28)) != 2;
}

uint64_t sub_10024AAA8()
{
  uint64_t result = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  *(_BYTE *)(v0 + *(int *)(result + 28)) = 2;
  return result;
}

uint64_t sub_10024AACC()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B618);
  sub_10000E704(v0, (uint64_t)qword_10036B618);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "SuplInit_None";
  *(void *)(v9 + 8) = 13LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "SuplInit_DecodeSuccess";
  *(void *)(v13 + 8) = 22LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "SuplInit_DecodeFailure";
  *((void *)v15 + 1) = 22LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "SuplInit_Timeout";
  *((void *)v17 + 1) = 16LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10024AC8C()
{
  return sub_100008C30(&qword_1003B6A00, (uint64_t)qword_10036B618, (uint64_t)sub_10024AACC);
}

uint64_t sub_10024ACA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A00, (uint64_t)qword_10036B618, (uint64_t)sub_10024AACC, a1);
}

uint64_t sub_10024ACC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A00, (uint64_t)qword_10036B618, (uint64_t)sub_10024AACC, a1);
}

uint64_t sub_10024ACE0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B630);
  sub_10000E704(v0, (uint64_t)qword_10036B630);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 0LL;
  *(void *)uint64_t v9 = "CompressionType_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 32LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "CompressionType_None";
  *((void *)v13 + 1) = 20LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 2LL;
  *(void *)uint64_t v14 = "CompressionType_LZMA";
  *(void *)(v14 + 8) = 20LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10024AE6C()
{
  return sub_100008C30(&qword_1003B6A08, (uint64_t)qword_10036B630, (uint64_t)sub_10024ACE0);
}

uint64_t sub_10024AE88@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A08, (uint64_t)qword_10036B630, (uint64_t)sub_10024ACE0, a1);
}

uint64_t sub_10024AEA4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A08, (uint64_t)qword_10036B630, (uint64_t)sub_10024ACE0, a1);
}

uint64_t sub_10024AEC0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B648);
  sub_10000E704(v0, (uint64_t)qword_10036B648);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "LtlInfoType_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 28LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "LtlInfoType_kInvalid";
  *(void *)(v13 + 8) = 20LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "LtlInfoType_kInitial";
  *((void *)v15 + 1) = 20LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "LtlInfoType_kLtlRefitted";
  *((void *)v17 + 1) = 24LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 4LL;
  *(void *)uint64_t v18 = "LtlInfoType_kLearntArray";
  *(void *)(v18 + 8) = 24LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10024B0C0()
{
  return sub_100008C30(&qword_1003B6A10, (uint64_t)qword_10036B648, (uint64_t)sub_10024AEC0);
}

uint64_t sub_10024B0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A10, (uint64_t)qword_10036B648, (uint64_t)sub_10024AEC0, a1);
}

uint64_t sub_10024B0F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A10, (uint64_t)qword_10036B648, (uint64_t)sub_10024AEC0, a1);
}

uint64_t sub_10024B114()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B660);
  sub_10000E704(v0, (uint64_t)qword_10036B660);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3330;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 0LL;
  *(void *)uint64_t v9 = "CntinStatus_PROTOBUF_DEFAULT";
  *(void *)(v9 + 8) = 28LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 1LL;
  *(void *)uint64_t v13 = "CntinStatus_kDisabled";
  *(void *)(v13 + 8) = 21LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 2LL;
  *(void *)uint64_t v15 = "CntinStatus_kEnabled";
  *((void *)v15 + 1) = 20LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 3LL;
  *(void *)uint64_t v17 = "CntinStatus_kEnableFailed";
  *((void *)v17 + 1) = 25LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 4LL;
  *(void *)uint64_t v19 = "CntinStatus_kDisableFailed";
  *((void *)v19 + 1) = 26LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 5LL;
  *(void *)uint64_t v21 = "CntinStatus_kInterfaceOn";
  *((void *)v21 + 1) = 24LL;
  v21[16] = 2;
  v12();
  uint64_t v22 = (void *)(v8 + 6 * v4);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 48);
  *uint64_t v22 = 6LL;
  *(void *)uint64_t v23 = "CntinStatus_kInterfaceOff";
  *((void *)v23 + 1) = 25LL;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10024B37C()
{
  return sub_100008C30(&qword_1003B6A18, (uint64_t)qword_10036B660, (uint64_t)sub_10024B114);
}

uint64_t sub_10024B398@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A18, (uint64_t)qword_10036B660, (uint64_t)sub_10024B114, a1);
}

uint64_t sub_10024B3B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A18, (uint64_t)qword_10036B660, (uint64_t)sub_10024B114, a1);
}

void *sub_10024B3D0()
{
  return &unk_100345C50;
}

unint64_t sub_10024B3DC()
{
  return 0xD000000000000012LL;
}

uint64_t sub_10024B3F8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B678);
  sub_10000E704(v0, (uint64_t)qword_10036B678);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v103 = swift_allocObject(v1, v6 + 48 * v4, v5 | 7);
  *(_OWORD *)(v103 + 16) = xmmword_1002DA060;
  uint64_t v7 = v103 + v6;
  uint64_t v8 = v103 + v6 + *(int *)(v2 + 48);
  *(void *)(v103 + v6) = 1LL;
  *(void *)uint64_t v8 = "mach_continuous_time_ns";
  *(void *)(v8 + 8) = 23LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v103 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 2LL;
  *(void *)uint64_t v12 = "transaction_id";
  *(void *)(v12 + 8) = 14LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v103 + v6 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)uint64_t v14 = "type";
  *((void *)v14 + 1) = 4LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v103 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 4LL;
  *(void *)uint64_t v16 = "inject_assistance_position";
  *((void *)v16 + 1) = 26LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v103 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "inject_assistance_time";
  *((void *)v18 + 1) = 22LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v103 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)uint64_t v20 = "set_assistance_pressure";
  *((void *)v20 + 1) = 23LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v103 + v6 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 7LL;
  *(void *)uint64_t v22 = "set_assistance_accel";
  *((void *)v22 + 1) = 20LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v103 + v6 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 8LL;
  *(void *)uint64_t v24 = "set_assistance_gyro";
  *((void *)v24 + 1) = 19LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v103 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 9LL;
  *(void *)uint64_t v25 = "set_assistance_dem";
  *(void *)(v25 + 8) = 18LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v103 + v6 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 10LL;
  *(void *)uint64_t v27 = "set_assistance_map_vector";
  *((void *)v27 + 1) = 25LL;
  v27[16] = 2;
  v11();
  char v28 = (void *)(v103 + v6 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 11LL;
  *(void *)uint64_t v29 = "set_assistance_motion_activity_context";
  *((void *)v29 + 1) = 38LL;
  v29[16] = 2;
  v11();
  uint64_t v30 = (void *)(v103 + v6 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 12LL;
  *(void *)uint64_t v31 = "set_assistance_mount_state";
  *((void *)v31 + 1) = 26LL;
  v31[16] = 2;
  v11();
  uint64_t v32 = (void *)(v103 + v6 + 12 * v4);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 48);
  *uint64_t v32 = 13LL;
  *(void *)uint64_t v33 = "set_assistance_signal_environment";
  *((void *)v33 + 1) = 33LL;
  v33[16] = 2;
  v11();
  uint64_t v34 = (void *)(v103 + v6 + 13 * v4);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 48);
  void *v34 = 14LL;
  *(void *)uint64_t v35 = "set_assistance_speed_constraint";
  *((void *)v35 + 1) = 31LL;
  v35[16] = 2;
  v11();
  int v36 = (void *)(v103 + v6 + 14 * v4);
  int v37 = (char *)v36 + *(int *)(v2 + 48);
  *int v36 = 15LL;
  *(void *)int v37 = "set_assistance_along_track_velocity";
  *((void *)v37 + 1) = 35LL;
  v37[16] = 2;
  v11();
  uint64_t v38 = (void *)(v103 + v6 + 15 * v4);
  uint64_t v39 = (char *)v38 + *(int *)(v2 + 48);
  *uint64_t v38 = 16LL;
  *(void *)uint64_t v39 = "inject_assistance_file";
  *((void *)v39 + 1) = 22LL;
  v39[16] = 2;
  v11();
  uint64_t v40 = v103 + v6 + 16 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 16 * v4) = 17LL;
  *(void *)uint64_t v40 = "inject_rti_file";
  *(void *)(v40 + 8) = 15LL;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  uint64_t v41 = (void *)(v103 + v6 + 17 * v4);
  char v42 = (char *)v41 + *(int *)(v2 + 48);
  *uint64_t v41 = 18LL;
  *(void *)char v42 = "inject_svid_blocklist";
  *((void *)v42 + 1) = 21LL;
  v42[16] = 2;
  v11();
  uint64_t v43 = (void *)(v103 + v6 + 18 * v4);
  char v44 = (char *)v43 + *(int *)(v2 + 48);
  void *v43 = 19LL;
  *(void *)char v44 = "delete_gnss_data";
  *((void *)v44 + 1) = 16LL;
  v44[16] = 2;
  v11();
  uint64_t v45 = (void *)(v103 + v6 + 19 * v4);
  char v46 = (char *)v45 + *(int *)(v2 + 48);
  void *v45 = 20LL;
  *(void *)char v46 = "set_pvtm_report";
  *((void *)v46 + 1) = 15LL;
  v46[16] = 2;
  v11();
  uint64_t v47 = (void *)(v103 + v6 + 20 * v4);
  uint64_t v48 = (char *)v47 + *(int *)(v2 + 48);
  void *v47 = 21LL;
  *(void *)uint64_t v48 = "set_nmea_handler";
  *((void *)v48 + 1) = 16LL;
  v48[16] = 2;
  v11();
  uint64_t v49 = (void *)(v103 + v6 + 21 * v4);
  uint64_t v50 = (char *)v49 + *(int *)(v2 + 48);
  *uint64_t v49 = 22LL;
  *(void *)uint64_t v50 = "set_config_simulator_mode";
  *((void *)v50 + 1) = 25LL;
  v50[16] = 2;
  v11();
  char v51 = (void *)(v103 + v6 + 22 * v4);
  uint64_t v52 = (char *)v51 + *(int *)(v2 + 48);
  *char v51 = 23LL;
  *(void *)uint64_t v52 = "set_config_enable_gnss_constellations";
  *((void *)v52 + 1) = 37LL;
  v52[16] = 2;
  v11();
  uint64_t v53 = (void *)(v103 + v6 + 23 * v4);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 48);
  void *v53 = 24LL;
  *(void *)uint64_t v54 = "set_config_duty_cycling";
  *((void *)v54 + 1) = 23LL;
  v54[16] = 2;
  v11();
  uint64_t v55 = (void *)(v103 + v6 + 24 * v4);
  uint64_t v56 = (char *)v55 + *(int *)(v2 + 48);
  *uint64_t v55 = 25LL;
  *(void *)uint64_t v56 = "termination_imminent";
  *((void *)v56 + 1) = 20LL;
  v56[16] = 2;
  v11();
  uint64_t v57 = (void *)(v103 + v6 + 25 * v4);
  uint64_t v58 = (char *)v57 + *(int *)(v2 + 48);
  void *v57 = 26LL;
  *(void *)uint64_t v58 = "exit_message";
  *((void *)v58 + 1) = 12LL;
  v58[16] = 2;
  v11();
  uint64_t v59 = (void *)(v103 + v6 + 26 * v4);
  int v60 = (char *)v59 + *(int *)(v2 + 48);
  *uint64_t v59 = 27LL;
  *(void *)int v60 = "inject_ltl_info";
  *((void *)v60 + 1) = 15LL;
  v60[16] = 2;
  v11();
  uint64_t v61 = (void *)(v103 + v6 + 27 * v4);
  uint64_t v62 = (char *)v61 + *(int *)(v2 + 48);
  *uint64_t v61 = 28LL;
  *(void *)uint64_t v62 = "start_context";
  *((void *)v62 + 1) = 13LL;
  v62[16] = 2;
  v11();
  uint64_t v63 = (void *)(v103 + v6 + 28 * v4);
  uint64_t v64 = (char *)v63 + *(int *)(v2 + 48);
  *uint64_t v63 = 29LL;
  *(void *)uint64_t v64 = "cntin_status_update";
  *((void *)v64 + 1) = 19LL;
  v64[16] = 2;
  v11();
  uint64_t v65 = (void *)(v103 + v6 + 29 * v4);
  uint64_t v66 = (char *)v65 + *(int *)(v2 + 48);
  *uint64_t v65 = 30LL;
  *(void *)uint64_t v66 = "set_thermal_risk_state";
  *((void *)v66 + 1) = 22LL;
  v66[16] = 2;
  v11();
  uint64_t v67 = (void *)(v103 + v6 + 30 * v4);
  uint64_t v68 = (char *)v67 + *(int *)(v2 + 48);
  void *v67 = 31LL;
  *(void *)uint64_t v68 = "set_config_rf_band_enable";
  *((void *)v68 + 1) = 25LL;
  v68[16] = 2;
  v11();
  uint64_t v69 = (void *)(v103 + v6 + 31 * v4);
  uint64_t v70 = (char *)v69 + *(int *)(v2 + 48);
  *uint64_t v69 = 50LL;
  *(void *)uint64_t v70 = "emerg_config";
  *((void *)v70 + 1) = 12LL;
  v70[16] = 2;
  v11();
  uint64_t v71 = v103 + v6 + 32 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 32 * v4) = 60LL;
  *(void *)uint64_t v71 = "position_request";
  *(void *)(v71 + 8) = 16LL;
  *(_BYTE *)(v71 + 16) = 2;
  v11();
  uint64_t v72 = (void *)(v103 + v6 + 33 * v4);
  uint64_t v73 = (char *)v72 + *(int *)(v2 + 48);
  void *v72 = 61LL;
  *(void *)uint64_t v73 = "session_id";
  *((void *)v73 + 1) = 10LL;
  v73[16] = 2;
  v11();
  uint64_t v74 = (void *)(v103 + v6 + 34 * v4);
  uint64_t v75 = (char *)v74 + *(int *)(v2 + 48);
  *uint64_t v74 = 62LL;
  *(void *)uint64_t v75 = "gps_reference_time";
  *((void *)v75 + 1) = 18LL;
  v75[16] = 2;
  v11();
  uint64_t v76 = (void *)(v103 + v6 + 35 * v4);
  uint64_t v77 = (char *)v76 + *(int *)(v2 + 48);
  void *v76 = 63LL;
  *(void *)uint64_t v77 = "reference_location";
  *((void *)v77 + 1) = 18LL;
  v77[16] = 2;
  v11();
  uint64_t v78 = (void *)(v103 + v6 + 36 * v4);
  uint64_t v79 = (char *)v78 + *(int *)(v2 + 48);
  void *v78 = 64LL;
  *(void *)uint64_t v79 = "gps_navigation_model";
  *((void *)v79 + 1) = 20LL;
  v79[16] = 2;
  v11();
  uint64_t v80 = (void *)(v103 + v6 + 37 * v4);
  uint64_t v81 = (char *)v80 + *(int *)(v2 + 48);
  void *v80 = 65LL;
  *(void *)uint64_t v81 = "gps_acq_assistance";
  *((void *)v81 + 1) = 18LL;
  v81[16] = 2;
  v11();
  uint64_t v82 = (void *)(v103 + v6 + 38 * v4);
  uint64_t v83 = (char *)v82 + *(int *)(v2 + 48);
  *uint64_t v82 = 66LL;
  *(void *)uint64_t v83 = "cell_ft_assistance";
  *((void *)v83 + 1) = 18LL;
  v83[16] = 2;
  v11();
  uint64_t v84 = (void *)(v103 + v6 + 39 * v4);
  uint64_t v85 = (char *)v84 + *(int *)(v2 + 48);
  *uint64_t v84 = 67LL;
  *(void *)uint64_t v85 = "cplane_context";
  *((void *)v85 + 1) = 14LL;
  v85[16] = 2;
  v11();
  char v86 = (void *)(v103 + v6 + 40 * v4);
  uint64_t v87 = (char *)v86 + *(int *)(v2 + 48);
  void *v86 = 70LL;
  *(void *)uint64_t v87 = "supl_init_vec";
  *((void *)v87 + 1) = 13LL;
  v87[16] = 2;
  v11();
  int v88 = (void *)(v103 + v6 + 41 * v4);
  char v89 = (char *)v88 + *(int *)(v2 + 48);
  *int v88 = 71LL;
  *(void *)char v89 = "location_id";
  *((void *)v89 + 1) = 11LL;
  v89[16] = 2;
  v11();
  uint64_t v90 = (void *)(v103 + v6 + 42 * v4);
  uint64_t v91 = (char *)v90 + *(int *)(v2 + 48);
  *uint64_t v90 = 72LL;
  *(void *)uint64_t v91 = "supl_init_index";
  *((void *)v91 + 1) = 15LL;
  v91[16] = 2;
  v11();
  int v92 = (void *)(v103 + v6 + 43 * v4);
  int v93 = (char *)v92 + *(int *)(v2 + 48);
  *int v92 = 73LL;
  *(void *)int v93 = "supl_cert";
  *((void *)v93 + 1) = 9LL;
  v93[16] = 2;
  v11();
  uint64_t v94 = (void *)(v103 + v6 + 44 * v4);
  uint64_t v95 = (char *)v94 + *(int *)(v2 + 48);
  void *v94 = 74LL;
  *(void *)uint64_t v95 = "serving_cell_lte";
  *((void *)v95 + 1) = 16LL;
  v95[16] = 2;
  v11();
  uint64_t v96 = (void *)(v103 + v6 + 45 * v4);
  uint64_t v97 = (char *)v96 + *(int *)(v2 + 48);
  *uint64_t v96 = 75LL;
  *(void *)uint64_t v97 = "sim_instance";
  *((void *)v97 + 1) = 12LL;
  v97[16] = 2;
  v11();
  char v98 = (void *)(v103 + v6 + 46 * v4);
  uint64_t v99 = (char *)v98 + *(int *)(v2 + 48);
  void *v98 = 76LL;
  *(void *)uint64_t v99 = "supl_context";
  *((void *)v99 + 1) = 12LL;
  v99[16] = 2;
  v11();
  uint64_t v100 = (void *)(v103 + v6 + 47 * v4);
  uint64_t v101 = (char *)v100 + *(int *)(v2 + 48);
  *uint64_t v100 = 77LL;
  *(void *)uint64_t v101 = "wlan_measurement_list";
  *((void *)v101 + 1) = 21LL;
  v101[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v103);
}

uint64_t sub_10024BF14()
{
  return sub_100008C30(&qword_1003B6A20, (uint64_t)qword_10036B678, (uint64_t)sub_10024B3F8);
}

uint64_t sub_10024BF30@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A20, (uint64_t)qword_10036B678, (uint64_t)sub_10024B3F8, a1);
}

uint64_t sub_10024BF4C()
{
  uint64_t v0 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(void *)(v1 + 16) = 0LL;
  *(_BYTE *)(v1 + 24) = 1;
  *(_DWORD *)(v1 + 28) = 0;
  *(_WORD *)(v1 + 32) = 15617;
  uint64_t v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  uint64_t v3 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))(v2, 1LL, 1LL, v3);
  uint64_t v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  uint64_t v5 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  uint64_t v7 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  uint64_t v11 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  uint64_t v13 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  uint64_t v15 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v14, 1LL, 1LL, v15);
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  uint64_t v17 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v16, 1LL, 1LL, v17);
  uint64_t v18 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  uint64_t v19 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  uint64_t v21 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  uint64_t v22 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  uint64_t v23 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  uint64_t v24 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v24, 1LL, 1LL, v25);
  uint64_t v26 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  uint64_t v27 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v26, 1LL, 1LL, v27);
  uint64_t v28 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  uint64_t v29 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v28, 1LL, 1LL, v29);
  uint64_t v30 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  uint64_t v31 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v30, 1LL, 1LL, v31);
  uint64_t v32 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  uint64_t v33 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v32, 1LL, 1LL, v33);
  uint64_t v34 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  uint64_t v35 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v34, 1LL, 1LL, v35);
  uint64_t v36 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  uint64_t v37 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v36, 1LL, 1LL, v37);
  uint64_t v38 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  uint64_t v39 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v38, 1LL, 1LL, v39);
  uint64_t v40 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  uint64_t v41 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v40, 1LL, 1LL, v41);
  uint64_t v42 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  uint64_t v43 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL))(v42, 1LL, 1LL, v43);
  uint64_t v44 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  uint64_t v45 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v44, 1LL, 1LL, v45);
  uint64_t v46 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  uint64_t v47 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  uint64_t v48 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  uint64_t v49 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v48, 1LL, 1LL, v49);
  uint64_t v50 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56LL))(v50, 1LL, 1LL, started);
  uint64_t v52 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  uint64_t v53 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v52, 1LL, 1LL, v53);
  uint64_t v54 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  uint64_t v55 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v54, 1LL, 1LL, v55);
  uint64_t v56 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  uint64_t v57 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56LL))(v56, 1LL, 1LL, v57);
  uint64_t v58 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  uint64_t v59 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56LL))(v58, 1LL, 1LL, v59);
  uint64_t v60 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  uint64_t v61 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v60, 1LL, 1LL, v61);
  uint64_t v62 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  *(_DWORD *)uint64_t v62 = 0;
  *(_BYTE *)(v62 + 4) = 1;
  uint64_t v63 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  uint64_t v64 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56LL))(v63, 1LL, 1LL, v64);
  uint64_t v65 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  uint64_t v66 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56LL))(v65, 1LL, 1LL, v66);
  uint64_t v67 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  uint64_t v68 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56LL))(v67, 1LL, 1LL, v68);
  uint64_t v69 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  uint64_t v70 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))(v69, 1LL, 1LL, v70);
  uint64_t v71 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  uint64_t v72 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v71, 1LL, 1LL, v72);
  uint64_t v73 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  uint64_t v74 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56LL))(v73, 1LL, 1LL, v74);
  *(void *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec) = &_swiftEmptyArrayStorage;
  uint64_t v75 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  uint64_t v76 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56LL))(v75, 1LL, 1LL, v76);
  uint64_t v77 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  *(_DWORD *)uint64_t v77 = 0;
  *(_BYTE *)(v77 + 4) = 1;
  *(void *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert) = &_swiftEmptyArrayStorage;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte) = 2;
  uint64_t v78 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  *(_DWORD *)uint64_t v78 = 0;
  *(_BYTE *)(v78 + 4) = 1;
  uint64_t v79 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  uint64_t v80 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56LL))(v79, 1LL, 1LL, v80);
  uint64_t v81 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  uint64_t v82 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56LL))( v81,  1LL,  1LL,  v82);
  qword_1003B6A30 = v1;
  return result;
}

uint64_t sub_10024C760(uint64_t a1)
{
  uint64_t v3 = sub_100003A0C(&qword_100364560);
  __chkstk_darwin(v3);
  uint64_t v378 = (uint64_t)&v296 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100003A0C(&qword_100364558);
  __chkstk_darwin(v5);
  uint64_t v377 = (uint64_t)&v296 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100003A0C(&qword_100364550);
  __chkstk_darwin(v7);
  uint64_t v376 = (uint64_t)&v296 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100003A0C(&qword_100364548);
  __chkstk_darwin(v9);
  uint64_t v375 = (uint64_t)&v296 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_100364540);
  __chkstk_darwin(v11);
  uint64_t v374 = (uint64_t)&v296 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100003A0C(&qword_100364538);
  __chkstk_darwin(v13);
  uint64_t v373 = (uint64_t)&v296 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100003A0C(&qword_100364530);
  __chkstk_darwin(v15);
  uint64_t v372 = (uint64_t)&v296 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100003A0C(&qword_100364528);
  __chkstk_darwin(v17);
  uint64_t v371 = (uint64_t)&v296 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100003A0C(&qword_100364520);
  __chkstk_darwin(v19);
  uint64_t v370 = (uint64_t)&v296 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100003A0C(&qword_100364518);
  __chkstk_darwin(v21);
  uint64_t v369 = (uint64_t)&v296 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100003A0C(&qword_100364510);
  __chkstk_darwin(v23);
  uint64_t v368 = (uint64_t)&v296 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_100003A0C(&qword_100364508);
  __chkstk_darwin(v25);
  uint64_t v367 = (uint64_t)&v296 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_100003A0C(&qword_100364500);
  __chkstk_darwin(v27);
  uint64_t v366 = (uint64_t)&v296 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_100003A0C(&qword_1003644F8);
  __chkstk_darwin(v29);
  uint64_t v365 = (uint64_t)&v296 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_100003A0C(&qword_1003644F0);
  __chkstk_darwin(v31);
  uint64_t v364 = (uint64_t)&v296 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_100003A0C(&qword_1003644E8);
  __chkstk_darwin(v33);
  uint64_t v363 = (uint64_t)&v296 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_100003A0C(&qword_1003644E0);
  __chkstk_darwin(v35);
  uint64_t v362 = (uint64_t)&v296 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_100003A0C(&qword_1003644D8);
  __chkstk_darwin(v37);
  uint64_t v361 = (uint64_t)&v296 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_100003A0C(&qword_1003644D0);
  __chkstk_darwin(v39);
  uint64_t v360 = (uint64_t)&v296 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_100003A0C(&qword_1003644C8);
  __chkstk_darwin(v41);
  uint64_t v359 = (uint64_t)&v296 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = sub_100003A0C(&qword_1003644C0);
  __chkstk_darwin(v43);
  uint64_t v358 = (uint64_t)&v296 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = sub_100003A0C(&qword_1003644B8);
  __chkstk_darwin(v45);
  uint64_t v357 = (uint64_t)&v296 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = sub_100003A0C(&qword_1003644B0);
  __chkstk_darwin(v47);
  uint64_t v356 = (uint64_t)&v296 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = sub_100003A0C(&qword_1003644A8);
  __chkstk_darwin(v49);
  uint64_t v355 = (uint64_t)&v296 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = sub_100003A0C(&qword_1003644A0);
  __chkstk_darwin(v51);
  uint64_t v352 = (uint64_t)&v296 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = sub_100003A0C(&qword_100364498);
  __chkstk_darwin(v53);
  uint64_t v348 = (uint64_t)&v296 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v55 = sub_100003A0C(&qword_100364490);
  __chkstk_darwin(v55);
  uint64_t v344 = (uint64_t)&v296 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v57 = sub_100003A0C(&qword_100364488);
  __chkstk_darwin(v57);
  uint64_t v340 = (uint64_t)&v296 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = sub_100003A0C(&qword_100364480);
  __chkstk_darwin(v59);
  uint64_t v336 = (uint64_t)&v296 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = sub_100003A0C(&qword_100364478);
  __chkstk_darwin(v61);
  uint64_t v332 = (uint64_t)&v296 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v63 = sub_100003A0C(&qword_100364470);
  __chkstk_darwin(v63);
  uint64_t v328 = (uint64_t)&v296 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = sub_100003A0C(&qword_100364468);
  __chkstk_darwin(v65);
  uint64_t v324 = (uint64_t)&v296 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v67 = sub_100003A0C(&qword_100364460);
  __chkstk_darwin(v67);
  uint64_t v320 = (uint64_t)&v296 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v69 = sub_100003A0C(&qword_100364458);
  __chkstk_darwin(v69);
  uint64_t v316 = (uint64_t)&v296 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = sub_100003A0C(&qword_100364450);
  __chkstk_darwin(v71);
  uint64_t v312 = (uint64_t)&v296 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = sub_100003A0C(&qword_100364448);
  __chkstk_darwin(v73);
  uint64_t v308 = (uint64_t)&v296 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = sub_100003A0C(&qword_100364440);
  __chkstk_darwin(v75);
  uint64_t v304 = (uint64_t)&v296 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v77 = sub_100003A0C(&qword_100364438);
  __chkstk_darwin(v77);
  uint64_t v300 = (uint64_t)&v296 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v79 = sub_100003A0C(&qword_100364430);
  __chkstk_darwin(v79);
  uint64_t v81 = (char *)&v296 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v1 + 16) = 0LL;
  *(_BYTE *)(v1 + 24) = 1;
  *(_DWORD *)(v1 + 28) = 0;
  *(_WORD *)(v1 + 32) = 15617;
  uint64_t v297 = v1 + 33;
  uint64_t v82 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  uint64_t v83 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56LL))(v82, 1LL, 1LL, v83);
  uint64_t v84 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  uint64_t v85 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56LL))(v84, 1LL, 1LL, v85);
  uint64_t v86 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  uint64_t v298 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  uint64_t v87 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56LL))(v86, 1LL, 1LL, v87);
  uint64_t v88 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  uint64_t v299 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  uint64_t v89 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56LL))(v88, 1LL, 1LL, v89);
  uint64_t v90 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  uint64_t v301 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  uint64_t v91 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56LL))(v90, 1LL, 1LL, v91);
  uint64_t v92 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  uint64_t v302 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  uint64_t v93 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56LL))(v92, 1LL, 1LL, v93);
  uint64_t v94 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  uint64_t v303 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  uint64_t v95 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56LL))(v94, 1LL, 1LL, v95);
  uint64_t v96 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  uint64_t v305 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  uint64_t v97 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56LL))(v96, 1LL, 1LL, v97);
  uint64_t v98 = v1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  uint64_t v306 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  uint64_t v99 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56LL))(v98, 1LL, 1LL, v99);
  uint64_t v100 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  uint64_t v307 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  uint64_t v101 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 56LL))(v100, 1LL, 1LL, v101);
  uint64_t v102 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  uint64_t v309 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  uint64_t v103 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56LL))(v102, 1LL, 1LL, v103);
  uint64_t v104 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  uint64_t v310 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  uint64_t v105 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56LL))(v104, 1LL, 1LL, v105);
  uint64_t v106 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  uint64_t v311 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  uint64_t v107 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56LL))(v106, 1LL, 1LL, v107);
  uint64_t v108 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  uint64_t v313 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  uint64_t v109 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56LL))(v108, 1LL, 1LL, v109);
  uint64_t v110 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  uint64_t v314 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  uint64_t v111 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56LL))(v110, 1LL, 1LL, v111);
  uint64_t v112 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  uint64_t v315 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  uint64_t v113 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56LL))(v112, 1LL, 1LL, v113);
  uint64_t v114 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  uint64_t v317 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  uint64_t v115 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v114, 1LL, 1LL, v115);
  uint64_t v116 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  uint64_t v318 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  uint64_t v117 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56LL))(v116, 1LL, 1LL, v117);
  uint64_t v118 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  uint64_t v319 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  uint64_t v119 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 56LL))(v118, 1LL, 1LL, v119);
  uint64_t v120 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  uint64_t v321 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  uint64_t v121 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56LL))(v120, 1LL, 1LL, v121);
  uint64_t v122 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  uint64_t v322 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  uint64_t v123 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56LL))(v122, 1LL, 1LL, v123);
  uint64_t v124 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  uint64_t v323 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  uint64_t v125 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56LL))(v124, 1LL, 1LL, v125);
  uint64_t v126 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  uint64_t v325 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  uint64_t v127 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56LL))(v126, 1LL, 1LL, v127);
  uint64_t v128 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  uint64_t v326 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  uint64_t v129 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v129 - 8) + 56LL))(v128, 1LL, 1LL, v129);
  uint64_t v130 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  uint64_t v327 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(started - 8) + 56LL))( v130,  1LL,  1LL,  started);
  uint64_t v132 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  uint64_t v329 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  uint64_t v133 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v133 - 8) + 56LL))(v132, 1LL, 1LL, v133);
  uint64_t v134 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  uint64_t v330 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  uint64_t v135 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56LL))(v134, 1LL, 1LL, v135);
  uint64_t v136 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  uint64_t v331 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  uint64_t v137 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56LL))(v136, 1LL, 1LL, v137);
  uint64_t v138 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  uint64_t v333 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  uint64_t v139 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56LL))(v138, 1LL, 1LL, v139);
  uint64_t v140 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  uint64_t v334 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  uint64_t v141 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56LL))(v140, 1LL, 1LL, v141);
  uint64_t v142 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  uint64_t v335 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  *(_DWORD *)uint64_t v142 = 0;
  *(_BYTE *)(v142 + 4) = 1;
  uint64_t v143 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  uint64_t v337 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  uint64_t v144 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56LL))(v143, 1LL, 1LL, v144);
  uint64_t v145 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  uint64_t v338 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  uint64_t v146 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 56LL))(v145, 1LL, 1LL, v146);
  uint64_t v147 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  uint64_t v339 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  uint64_t v148 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56LL))(v147, 1LL, 1LL, v148);
  uint64_t v149 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  uint64_t v341 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  uint64_t v150 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 56LL))(v149, 1LL, 1LL, v150);
  uint64_t v151 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  uint64_t v342 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  uint64_t v152 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v152 - 8) + 56LL))(v151, 1LL, 1LL, v152);
  uint64_t v153 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  uint64_t v343 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  uint64_t v154 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56LL))(v153, 1LL, 1LL, v154);
  v345 = (uint64_t *)(v1
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  *(void *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec) = &_swiftEmptyArrayStorage;
  uint64_t v155 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  uint64_t v346 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  uint64_t v156 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56LL))(v155, 1LL, 1LL, v156);
  uint64_t v157 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  uint64_t v347 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  *(_DWORD *)uint64_t v157 = 0;
  *(_BYTE *)(v157 + 4) = 1;
  v349 = (uint64_t *)(v1
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  *(void *)(v1
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert) = &_swiftEmptyArrayStorage;
  uint64_t v158 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  _BYTE *v158 = 2;
  uint64_t v159 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  v350 = v158;
  uint64_t v351 = v159;
  *(_DWORD *)uint64_t v159 = 0;
  *(_BYTE *)(v159 + 4) = 1;
  uint64_t v160 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  uint64_t v353 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  uint64_t v161 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v161 - 8) + 56LL))(v160, 1LL, 1LL, v161);
  uint64_t v162 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  uint64_t v354 = v1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  uint64_t v163 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 56LL))(v162, 1LL, 1LL, v163);
  swift_beginAccess(a1 + 16, v436, 0LL, 0LL);
  uint64_t v164 = *(void *)(a1 + 16);
  LOBYTE(v162) = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v1 + 16, v435, 1LL, 0LL);
  *(void *)(v1 + 16) = v164;
  *(_BYTE *)(v1 + 24) = v162;
  swift_beginAccess(a1 + 28, v434, 0LL, 0LL);
  LODWORD(v162) = *(_DWORD *)(a1 + 28);
  LOBYTE(v164) = *(_BYTE *)(a1 + 32);
  swift_beginAccess(v1 + 28, v433, 1LL, 0LL);
  *(_DWORD *)(v1 + 28) = v162;
  *(_BYTE *)(v1 + 32) = v164;
  swift_beginAccess(a1 + 33, v432, 0LL, 0LL);
  LOBYTE(v162) = *(_BYTE *)(a1 + 33);
  swift_beginAccess(v297, v431, 1LL, 0LL);
  *(_BYTE *)(v1 + 33) = v162;
  uint64_t v165 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  v430,  0LL,  0LL);
  sub_10000E6C0(v165, (uint64_t)v81, &qword_100364430);
  swift_beginAccess(v82, v429, 33LL, 0LL);
  sub_10000E5D4((uint64_t)v81, v82, &qword_100364430);
  swift_endAccess(v429);
  uint64_t v166 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  v429,  0LL,  0LL);
  uint64_t v167 = v300;
  sub_10000E6C0(v166, v300, &qword_100364438);
  swift_beginAccess(v84, v428, 33LL, 0LL);
  sub_10000E5D4(v167, v84, &qword_100364438);
  swift_endAccess(v428);
  uint64_t v168 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure,  v428,  0LL,  0LL);
  uint64_t v169 = v304;
  sub_10000E6C0(v168, v304, &qword_100364440);
  uint64_t v170 = v298;
  swift_beginAccess(v298, v427, 33LL, 0LL);
  sub_10000E5D4(v169, v170, &qword_100364440);
  swift_endAccess(v427);
  uint64_t v171 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel,  v427,  0LL,  0LL);
  uint64_t v172 = v308;
  sub_10000E6C0(v171, v308, &qword_100364448);
  uint64_t v173 = v299;
  swift_beginAccess(v299, v426, 33LL, 0LL);
  sub_10000E5D4(v172, v173, &qword_100364448);
  swift_endAccess(v426);
  uint64_t v174 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro,  v426,  0LL,  0LL);
  uint64_t v175 = v312;
  sub_10000E6C0(v174, v312, &qword_100364450);
  uint64_t v176 = v301;
  swift_beginAccess(v301, v425, 33LL, 0LL);
  sub_10000E5D4(v175, v176, &qword_100364450);
  swift_endAccess(v425);
  uint64_t v177 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem,  v425,  0LL,  0LL);
  uint64_t v178 = v316;
  sub_10000E6C0(v177, v316, &qword_100364458);
  uint64_t v179 = v302;
  swift_beginAccess(v302, v424, 33LL, 0LL);
  sub_10000E5D4(v178, v179, &qword_100364458);
  swift_endAccess(v424);
  uint64_t v180 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector,  v424,  0LL,  0LL);
  uint64_t v181 = v320;
  sub_10000E6C0(v180, v320, &qword_100364460);
  uint64_t v182 = v303;
  swift_beginAccess(v303, v423, 33LL, 0LL);
  sub_10000E5D4(v181, v182, &qword_100364460);
  swift_endAccess(v423);
  uint64_t v183 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext,  v423,  0LL,  0LL);
  uint64_t v184 = v324;
  sub_10000E6C0(v183, v324, &qword_100364468);
  uint64_t v185 = v305;
  swift_beginAccess(v305, v422, 33LL, 0LL);
  sub_10000E5D4(v184, v185, &qword_100364468);
  swift_endAccess(v422);
  uint64_t v186 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState,  v422,  0LL,  0LL);
  uint64_t v187 = v328;
  sub_10000E6C0(v186, v328, &qword_100364470);
  uint64_t v188 = v306;
  swift_beginAccess(v306, v421, 33LL, 0LL);
  sub_10000E5D4(v187, v188, &qword_100364470);
  swift_endAccess(v421);
  uint64_t v189 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment,  v421,  0LL,  0LL);
  uint64_t v190 = v332;
  sub_10000E6C0(v189, v332, &qword_100364478);
  uint64_t v191 = v307;
  swift_beginAccess(v307, v420, 33LL, 0LL);
  sub_10000E5D4(v190, v191, &qword_100364478);
  swift_endAccess(v420);
  uint64_t v192 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint,  v420,  0LL,  0LL);
  uint64_t v193 = v336;
  sub_10000E6C0(v192, v336, &qword_100364480);
  uint64_t v194 = v309;
  swift_beginAccess(v309, v419, 33LL, 0LL);
  sub_10000E5D4(v193, v194, &qword_100364480);
  swift_endAccess(v419);
  uint64_t v195 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity,  v419,  0LL,  0LL);
  uint64_t v196 = v340;
  sub_10000E6C0(v195, v340, &qword_100364488);
  uint64_t v197 = v310;
  swift_beginAccess(v310, v418, 33LL, 0LL);
  sub_10000E5D4(v196, v197, &qword_100364488);
  swift_endAccess(v418);
  uint64_t v198 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile,  v418,  0LL,  0LL);
  uint64_t v199 = v344;
  sub_10000E6C0(v198, v344, &qword_100364490);
  uint64_t v200 = v311;
  swift_beginAccess(v311, v417, 33LL, 0LL);
  sub_10000E5D4(v199, v200, &qword_100364490);
  swift_endAccess(v417);
  uint64_t v201 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile,  v417,  0LL,  0LL);
  uint64_t v202 = v348;
  sub_10000E6C0(v201, v348, &qword_100364498);
  uint64_t v203 = v313;
  swift_beginAccess(v313, v416, 33LL, 0LL);
  sub_10000E5D4(v202, v203, &qword_100364498);
  swift_endAccess(v416);
  uint64_t v204 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist,  v416,  0LL,  0LL);
  uint64_t v205 = v352;
  sub_10000E6C0(v204, v352, &qword_1003644A0);
  uint64_t v206 = v314;
  swift_beginAccess(v314, v415, 33LL, 0LL);
  sub_10000E5D4(v205, v206, &qword_1003644A0);
  swift_endAccess(v415);
  uint64_t v207 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData,  v415,  0LL,  0LL);
  uint64_t v208 = v355;
  sub_10000E6C0(v207, v355, &qword_1003644A8);
  uint64_t v209 = v315;
  swift_beginAccess(v315, v414, 33LL, 0LL);
  sub_10000E5D4(v208, v209, &qword_1003644A8);
  swift_endAccess(v414);
  uint64_t v210 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport,  v414,  0LL,  0LL);
  uint64_t v211 = v356;
  sub_10000E6C0(v210, v356, &qword_1003644B0);
  uint64_t v212 = v317;
  swift_beginAccess(v317, v413, 33LL, 0LL);
  sub_10000E5D4(v211, v212, &qword_1003644B0);
  swift_endAccess(v413);
  uint64_t v213 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler,  v413,  0LL,  0LL);
  uint64_t v214 = v357;
  sub_10000E6C0(v213, v357, &qword_1003644B8);
  uint64_t v215 = v318;
  swift_beginAccess(v318, v412, 33LL, 0LL);
  sub_10000E5D4(v214, v215, &qword_1003644B8);
  swift_endAccess(v412);
  uint64_t v216 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode,  v412,  0LL,  0LL);
  uint64_t v217 = v358;
  sub_10000E6C0(v216, v358, &qword_1003644C0);
  uint64_t v218 = v319;
  swift_beginAccess(v319, v411, 33LL, 0LL);
  sub_10000E5D4(v217, v218, &qword_1003644C0);
  swift_endAccess(v411);
  uint64_t v219 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations,  v411,  0LL,  0LL);
  uint64_t v220 = v359;
  sub_10000E6C0(v219, v359, &qword_1003644C8);
  uint64_t v221 = v321;
  swift_beginAccess(v321, v410, 33LL, 0LL);
  sub_10000E5D4(v220, v221, &qword_1003644C8);
  swift_endAccess(v410);
  uint64_t v222 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling,  v410,  0LL,  0LL);
  uint64_t v223 = v360;
  sub_10000E6C0(v222, v360, &qword_1003644D0);
  uint64_t v224 = v322;
  swift_beginAccess(v322, v409, 33LL, 0LL);
  sub_10000E5D4(v223, v224, &qword_1003644D0);
  swift_endAccess(v409);
  uint64_t v225 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent,  v409,  0LL,  0LL);
  uint64_t v226 = v361;
  sub_10000E6C0(v225, v361, &qword_1003644D8);
  uint64_t v227 = v323;
  swift_beginAccess(v323, v408, 33LL, 0LL);
  sub_10000E5D4(v226, v227, &qword_1003644D8);
  swift_endAccess(v408);
  uint64_t v228 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage,  v408,  0LL,  0LL);
  uint64_t v229 = v362;
  sub_10000E6C0(v228, v362, &qword_1003644E0);
  uint64_t v230 = v325;
  swift_beginAccess(v325, v407, 33LL, 0LL);
  sub_10000E5D4(v229, v230, &qword_1003644E0);
  swift_endAccess(v407);
  uint64_t v231 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo,  v407,  0LL,  0LL);
  uint64_t v232 = v363;
  sub_10000E6C0(v231, v363, &qword_1003644E8);
  uint64_t v233 = v326;
  swift_beginAccess(v326, v406, 33LL, 0LL);
  sub_10000E5D4(v232, v233, &qword_1003644E8);
  swift_endAccess(v406);
  uint64_t v234 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext,  v406,  0LL,  0LL);
  uint64_t v235 = v364;
  sub_10000E6C0(v234, v364, &qword_1003644F0);
  uint64_t v236 = v327;
  swift_beginAccess(v327, v405, 33LL, 0LL);
  sub_10000E5D4(v235, v236, &qword_1003644F0);
  swift_endAccess(v405);
  uint64_t v237 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate,  v405,  0LL,  0LL);
  uint64_t v238 = v365;
  sub_10000E6C0(v237, v365, &qword_1003644F8);
  uint64_t v239 = v329;
  swift_beginAccess(v329, v404, 33LL, 0LL);
  sub_10000E5D4(v238, v239, &qword_1003644F8);
  swift_endAccess(v404);
  uint64_t v240 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState,  v404,  0LL,  0LL);
  uint64_t v241 = v366;
  sub_10000E6C0(v240, v366, &qword_100364500);
  uint64_t v242 = v330;
  swift_beginAccess(v330, v403, 33LL, 0LL);
  sub_10000E5D4(v241, v242, &qword_100364500);
  swift_endAccess(v403);
  uint64_t v243 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable,  v403,  0LL,  0LL);
  uint64_t v244 = v367;
  sub_10000E6C0(v243, v367, &qword_100364508);
  uint64_t v245 = v331;
  swift_beginAccess(v331, v402, 33LL, 0LL);
  sub_10000E5D4(v244, v245, &qword_100364508);
  swift_endAccess(v402);
  uint64_t v246 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig,  v402,  0LL,  0LL);
  uint64_t v247 = v368;
  sub_10000E6C0(v246, v368, &qword_100364510);
  uint64_t v248 = v333;
  swift_beginAccess(v333, v401, 33LL, 0LL);
  sub_10000E5D4(v247, v248, &qword_100364510);
  swift_endAccess(v401);
  uint64_t v249 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest,  v401,  0LL,  0LL);
  uint64_t v250 = v369;
  sub_10000E6C0(v249, v369, &qword_100364518);
  uint64_t v251 = v334;
  swift_beginAccess(v334, v400, 33LL, 0LL);
  sub_10000E5D4(v250, v251, &qword_100364518);
  swift_endAccess(v400);
  uint64_t v252 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID,  v400,  0LL,  0LL);
  LODWORD(v250) = *(_DWORD *)v252;
  LOBYTE(v252) = *(_BYTE *)(v252 + 4);
  uint64_t v253 = v335;
  swift_beginAccess(v335, &v399, 1LL, 0LL);
  *(_DWORD *)uint64_t v253 = v250;
  *(_BYTE *)(v253 + 4) = v252;
  uint64_t v254 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime,  &v398,  0LL,  0LL);
  uint64_t v255 = v370;
  sub_10000E6C0(v254, v370, &qword_100364520);
  uint64_t v256 = v337;
  swift_beginAccess(v337, v397, 33LL, 0LL);
  sub_10000E5D4(v255, v256, &qword_100364520);
  swift_endAccess(v397);
  uint64_t v257 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation,  v397,  0LL,  0LL);
  uint64_t v258 = v371;
  sub_10000E6C0(v257, v371, &qword_100364528);
  uint64_t v259 = v338;
  swift_beginAccess(v338, v396, 33LL, 0LL);
  sub_10000E5D4(v258, v259, &qword_100364528);
  swift_endAccess(v396);
  uint64_t v260 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel,  v396,  0LL,  0LL);
  uint64_t v261 = v372;
  sub_10000E6C0(v260, v372, &qword_100364530);
  uint64_t v262 = v339;
  swift_beginAccess(v339, v395, 33LL, 0LL);
  sub_10000E5D4(v261, v262, &qword_100364530);
  swift_endAccess(v395);
  uint64_t v263 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance,  v395,  0LL,  0LL);
  uint64_t v264 = v373;
  sub_10000E6C0(v263, v373, &qword_100364538);
  uint64_t v265 = v341;
  swift_beginAccess(v341, v394, 33LL, 0LL);
  sub_10000E5D4(v264, v265, &qword_100364538);
  swift_endAccess(v394);
  uint64_t v266 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance,  v394,  0LL,  0LL);
  uint64_t v267 = v374;
  sub_10000E6C0(v266, v374, &qword_100364540);
  uint64_t v268 = v342;
  swift_beginAccess(v342, v393, 33LL, 0LL);
  sub_10000E5D4(v267, v268, &qword_100364540);
  swift_endAccess(v393);
  uint64_t v269 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext,  v393,  0LL,  0LL);
  uint64_t v270 = v375;
  sub_10000E6C0(v269, v375, &qword_100364548);
  uint64_t v271 = v343;
  swift_beginAccess(v343, v392, 33LL, 0LL);
  sub_10000E5D4(v270, v271, &qword_100364548);
  swift_endAccess(v392);
  v272 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec,  v392,  0LL,  0LL);
  uint64_t v273 = *v272;
  v274 = v345;
  swift_beginAccess(v345, &v391, 1LL, 0LL);
  uint64_t v275 = *v274;
  uint64_t *v274 = v273;
  swift_bridgeObjectRetain(v273);
  swift_bridgeObjectRelease(v275);
  uint64_t v276 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID,  &v390,  0LL,  0LL);
  uint64_t v277 = v376;
  sub_10000E6C0(v276, v376, &qword_100364550);
  uint64_t v278 = v346;
  swift_beginAccess(v346, v389, 33LL, 0LL);
  sub_10000E5D4(v277, v278, &qword_100364550);
  swift_endAccess(v389);
  uint64_t v279 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex,  v389,  0LL,  0LL);
  LODWORD(v277) = *(_DWORD *)v279;
  LOBYTE(v279) = *(_BYTE *)(v279 + 4);
  uint64_t v280 = v347;
  swift_beginAccess(v347, &v388, 1LL, 0LL);
  *(_DWORD *)uint64_t v280 = v277;
  *(_BYTE *)(v280 + 4) = v279;
  v281 = (uint64_t *)(a1
                   + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert,  &v387,  0LL,  0LL);
  uint64_t v282 = *v281;
  v283 = v349;
  swift_beginAccess(v349, &v386, 1LL, 0LL);
  uint64_t v284 = *v283;
  uint64_t *v283 = v282;
  swift_bridgeObjectRetain(v282);
  swift_bridgeObjectRelease(v284);
  v285 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte,  &v385,  0LL,  0LL);
  LOBYTE(v285) = *v285;
  v286 = v350;
  swift_beginAccess(v350, &v384, 1LL, 0LL);
  _BYTE *v286 = (_BYTE)v285;
  uint64_t v287 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance,  &v383,  0LL,  0LL);
  LODWORD(v286) = *(_DWORD *)v287;
  LOBYTE(v287) = *(_BYTE *)(v287 + 4);
  uint64_t v288 = v351;
  swift_beginAccess(v351, &v382, 1LL, 0LL);
  *(_DWORD *)uint64_t v288 = (_DWORD)v286;
  *(_BYTE *)(v288 + 4) = v287;
  uint64_t v289 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext,  &v381,  0LL,  0LL);
  uint64_t v290 = v377;
  sub_10000E6C0(v289, v377, &qword_100364558);
  uint64_t v291 = v353;
  swift_beginAccess(v353, v380, 33LL, 0LL);
  sub_10000E5D4(v290, v291, &qword_100364558);
  swift_endAccess(v380);
  uint64_t v292 = a1
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  v380,  0LL,  0LL);
  uint64_t v293 = v378;
  sub_10000E6C0(v292, v378, &qword_100364560);
  swift_release(a1);
  uint64_t v294 = v354;
  swift_beginAccess(v354, v379, 33LL, 0LL);
  sub_10000E5D4(v293, v294, &qword_100364560);
  swift_endAccess(v379);
  return v1;
}

uint64_t sub_10024EC3C()
{
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec));
  sub_100015764( v0 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID,  &qword_100364550);
  swift_bridgeObjectRelease(*(void *)(v0
                                      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert));
  sub_100015764( v0 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext,  &qword_100364558);
  sub_100015764( v0 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  &qword_100364560);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10024F024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v8)) & 1) == 0)
  {
    uint64_t v9 = *(void *)(v3 + v8);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10024C760(v12);
    uint64_t v13 = *(void *)(v5 + v8);
    *(void *)(v5 + v8) = v11;
    swift_release(v13);
  }

  uint64_t v14 = *(void *)(v5 + v8);
  swift_retain(v14);
  uint64_t v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v17 = v4;
  if (!v4)
  {
    uint64_t v34 = v14 + 33;
    while ((v16 & 1) == 0)
    {
      switch(v15)
      {
        case 1LL:
          swift_beginAccess(v14 + 16, v33, 33LL, 0LL);
          uint64_t v19 = v17;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v14 + 16, a2, a3);
          goto LABEL_60;
        case 2LL:
          uint64_t v20 = v14 + 28;
          goto LABEL_56;
        case 3LL:
          uint64_t v21 = v34;
          swift_beginAccess(v34, v33, 33LL, 0LL);
          unint64_t v22 = sub_10028458C();
          uint64_t v19 = v17;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v21,  &type metadata for Proto_Gpsd_Request.TypeEnum,  v22,  a2,  a3);
          goto LABEL_60;
        case 4LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition;
          uint64_t v26 = (unint64_t *)&unk_100364928;
          uint64_t v27 = &unk_1002DB510;
          goto LABEL_59;
        case 5LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime;
          uint64_t v26 = (unint64_t *)&unk_100364940;
          uint64_t v27 = &unk_1002DB678;
          goto LABEL_59;
        case 6LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistancePressure;
          uint64_t v26 = (unint64_t *)&unk_100364988;
          uint64_t v27 = &unk_1002DBAB0;
          goto LABEL_59;
        case 7LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel;
          uint64_t v26 = (unint64_t *)&unk_1003649A0;
          uint64_t v27 = &unk_1002DBC18;
          goto LABEL_59;
        case 8LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro;
          uint64_t v26 = (unint64_t *)&unk_1003649B8;
          uint64_t v27 = &unk_1002DBD80;
          goto LABEL_59;
        case 9LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceDem;
          uint64_t v26 = (unint64_t *)&unk_1003649D0;
          uint64_t v27 = &unk_1002DBEE8;
          goto LABEL_59;
        case 10LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector;
          uint64_t v26 = (unint64_t *)&unk_1003649E8;
          uint64_t v27 = &unk_1002DC050;
          goto LABEL_59;
        case 11LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext;
          uint64_t v26 = (unint64_t *)&unk_100364A00;
          uint64_t v27 = &unk_1002DC1B8;
          goto LABEL_59;
        case 12LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState;
          uint64_t v26 = (unint64_t *)&unk_100364A18;
          uint64_t v27 = &unk_1002DC320;
          goto LABEL_59;
        case 13LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment;
          uint64_t v26 = (unint64_t *)&unk_100364A30;
          uint64_t v27 = &unk_1002DC488;
          goto LABEL_59;
        case 14LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint;
          uint64_t v26 = (unint64_t *)&unk_100364A48;
          uint64_t v27 = &unk_1002DC5F0;
          goto LABEL_59;
        case 15LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity;
          uint64_t v26 = (unint64_t *)&unk_100364A60;
          uint64_t v27 = &unk_1002DC758;
          goto LABEL_59;
        case 16LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile;
          uint64_t v26 = (unint64_t *)&unk_1003648E0;
          uint64_t v27 = &unk_1002DB0D8;
          goto LABEL_59;
        case 17LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_InjectRtiFile;
          uint64_t v26 = (unint64_t *)&unk_1003648F8;
          uint64_t v27 = &unk_1002DB240;
          goto LABEL_59;
        case 18LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist;
          uint64_t v26 = (unint64_t *)&unk_100364910;
          uint64_t v27 = &unk_1002DB3A8;
          goto LABEL_59;
        case 19LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_DeleteGnssData;
          uint64_t v26 = (unint64_t *)&unk_100364958;
          uint64_t v27 = &unk_1002DB7E0;
          goto LABEL_59;
        case 20LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetPvtmReport;
          uint64_t v26 = (unint64_t *)&unk_1003648C8;
          uint64_t v27 = &unk_1002DAF70;
          goto LABEL_59;
        case 21LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetNmeaHandler;
          uint64_t v26 = (unint64_t *)&unk_100364970;
          uint64_t v27 = &unk_1002DB948;
          goto LABEL_59;
        case 22LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode;
          uint64_t v26 = (unint64_t *)&unk_100364A90;
          uint64_t v27 = &unk_1002DCA28;
          goto LABEL_59;
        case 23LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations;
          uint64_t v26 = (unint64_t *)&unk_100364AA8;
          uint64_t v27 = &unk_1002DCB90;
          goto LABEL_59;
        case 24LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling;
          uint64_t v26 = (unint64_t *)&unk_100364AD8;
          uint64_t v27 = &unk_1002DCE60;
          goto LABEL_59;
        case 25LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_TerminationImminent;
          uint64_t v26 = (unint64_t *)&unk_100364AF0;
          uint64_t v27 = &unk_1002DCFC8;
          goto LABEL_59;
        case 26LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_ExitMessage;
          uint64_t v26 = (unint64_t *)&unk_100364B08;
          uint64_t v27 = &unk_1002DD130;
          goto LABEL_59;
        case 27LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_LtlInfo;
          uint64_t v26 = (unint64_t *)&unk_100364B78;
          uint64_t v27 = &unk_1002DD838;
          goto LABEL_59;
        case 28LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_StartContext;
          uint64_t v26 = (unint64_t *)&unk_100364C58;
          uint64_t v27 = &unk_1002DE648;
          goto LABEL_59;
        case 29LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_CntinStatusMessage;
          uint64_t v26 = (unint64_t *)&unk_100364BF0;
          uint64_t v27 = &unk_1002DDF40;
          goto LABEL_59;
        case 30LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetThermalRiskState;
          uint64_t v26 = (unint64_t *)&unk_100364A78;
          uint64_t v27 = &unk_1002DC8C0;
          goto LABEL_59;
        case 31LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable;
          uint64_t v26 = (unint64_t *)&unk_100364AC0;
          uint64_t v27 = &unk_1002DCCF8;
          goto LABEL_59;
        case 50LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig;
          uint64_t v26 = &qword_10035D908;
          uint64_t v27 = &unk_1002D3FF0;
          goto LABEL_59;
        case 60LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest;
          uint64_t v26 = &qword_10035D388;
          uint64_t v27 = &unk_1002CEA28;
          goto LABEL_59;
        case 61LL:
          uint64_t v28 = OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID;
          goto LABEL_55;
        case 62LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime;
          uint64_t v26 = &qword_10035D880;
          uint64_t v27 = &unk_1002D3780;
          goto LABEL_59;
        case 63LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation;
          uint64_t v26 = &qword_10035D898;
          uint64_t v27 = &unk_1002D38E8;
          goto LABEL_59;
        case 64LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel;
          uint64_t v26 = &qword_10035D8C0;
          uint64_t v27 = &unk_1002D3BB8;
          goto LABEL_59;
        case 65LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance;
          uint64_t v26 = &qword_10035D930;
          uint64_t v27 = &unk_1002D42C0;
          goto LABEL_59;
        case 66LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance;
          uint64_t v26 = &qword_10035D960;
          uint64_t v27 = &unk_1002D4590;
          goto LABEL_59;
        case 67LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext;
          uint64_t v26 = &qword_10035D8F0;
          uint64_t v27 = &unk_1002D3E88;
          goto LABEL_59;
        case 70LL:
          uint64_t v29 = OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec;
          goto LABEL_52;
        case 71LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_LocationId;
          uint64_t v26 = &qword_10035D228;
          uint64_t v27 = &unk_1002CD510;
          goto LABEL_59;
        case 72LL:
          uint64_t v28 = OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
          goto LABEL_55;
        case 73LL:
          uint64_t v29 = OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert;
LABEL_52:
          uint64_t v30 = v14 + v29;
          swift_beginAccess(v14 + v29, v33, 33LL, 0LL);
          uint64_t v19 = v17;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v30, a2, a3);
          goto LABEL_60;
        case 74LL:
          uint64_t v31 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte,  v33,  33LL,  0LL);
          uint64_t v19 = v17;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v31, a2, a3);
          goto LABEL_60;
        case 75LL:
          uint64_t v28 = OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
LABEL_55:
          uint64_t v20 = v14 + v28;
LABEL_56:
          swift_beginAccess(v20, v33, 33LL, 0LL);
          uint64_t v19 = v17;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v20, a2, a3);
          goto LABEL_60;
        case 76LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_SuplContext;
          uint64_t v26 = &qword_10035D2F8;
          uint64_t v27 = &unk_1002CE1B8;
          goto LABEL_59;
        case 77LL:
          uint64_t v23 = v14
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  v33,  33LL,  0LL);
          uint64_t started = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
          uint64_t v25 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList;
          uint64_t v26 = &qword_10035D268;
          uint64_t v27 = &unk_1002CD948;
LABEL_59:
          uint64_t v32 = sub_10000FD98(v26, v25, (uint64_t)v27);
          uint64_t v19 = v17;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v23, started, v32, a2, a3);
LABEL_60:
          uint64_t v17 = v19;
          swift_endAccess(v33);
          break;
        default:
          break;
      }

      uint64_t v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return swift_release(v14);
}

uint64_t sub_10024FDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Request(0LL) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v25, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)(v9 + 16), 1LL, a2, a3);
  }
  if (v4) {
    return swift_release(v9);
  }
  swift_beginAccess(v9 + 28, v26, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 32) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 28), 2LL, a2, a3);
  }
  swift_beginAccess(v9 + 33, v27, 0LL, 0LL);
  if (*(_BYTE *)(v9 + 33) != 61)
  {
    v31[0] = *(_BYTE *)(v9 + 33);
    unint64_t v10 = sub_10028458C();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v31,  3LL,  &type metadata for Proto_Gpsd_Request.TypeEnum,  v10,  a2,  a3);
  }

  sub_100250604(v9, a1, a2, a3);
  sub_100250790(v9, a1, a2, a3);
  sub_10025091C(v9, a1, a2, a3);
  sub_100250AA8(v9, a1, a2, a3);
  sub_100250C34(v9, a1, a2, a3);
  sub_100250DC0(v9, a1, a2, a3);
  sub_100250F4C(v9, a1, a2, a3);
  sub_1002510D8(v9, a1, a2, a3);
  sub_100251264(v9, a1, a2, a3);
  sub_1002513F0(v9, a1, a2, a3);
  sub_10025157C(v9, a1, a2, a3);
  sub_100251708(v9, a1, a2, a3);
  sub_100251894(v9, a1, a2, a3);
  sub_100251A20(v9, a1, a2, a3);
  sub_100251BAC(v9, a1, a2, a3);
  sub_100251D38(v9, a1, a2, a3);
  sub_100251EC4(v9, a1, a2, a3);
  sub_100252050(v9, a1, a2, a3);
  sub_1002521DC(v9, a1, a2, a3);
  sub_100252368(v9, a1, a2, a3);
  sub_1002524F4(v9, a1, a2, a3);
  sub_100252680(v9, a1, a2, a3);
  sub_10025280C(v9, a1, a2, a3);
  sub_100252998(v9, a1, a2, a3);
  sub_100252B24(v9, a1, a2, a3);
  sub_100252CB0(v9, a1, a2, a3);
  sub_100252E3C(v9, a1, a2, a3);
  sub_100252FC8(v9, a1, a2, a3);
  sub_100253154(v9, a1, a2, a3);
  sub_1002532E0(v9, a1, a2, a3);
  uint64_t v11 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__sessionID,  v31,  0LL,  0LL);
  if ((v11[1] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 61LL, a2, a3);
  }
  sub_10025346C(v9, a1, a2, a3);
  sub_1002535F8(v9, a1, a2, a3);
  sub_100253784(v9, a1, a2, a3);
  sub_100253910(v9, a1, a2, a3);
  sub_100253A9C(v9, a1, a2, a3);
  sub_100253C28(v9, a1, a2, a3);
  uint64_t v12 = (uint64_t *)(v9
                  + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitVec,  v24,  0LL,  0LL);
  uint64_t v13 = *v12;
  if (*(void *)(v13 + 16))
  {
    uint64_t v14 = swift_bridgeObjectRetain(v13);
    dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(v14, 70LL, a2, a3);
    swift_bridgeObjectRelease(v13);
  }

  sub_100253DB4(v9, a1, a2, a3);
  uint64_t v15 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex,  v30,  0LL,  0LL);
  if ((v15[1] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 72LL, a2, a3);
  }
  char v16 = (uint64_t *)(v9
                  + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplCert,  v23,  0LL,  0LL);
  uint64_t v17 = *v16;
  if (*(void *)(v17 + 16))
  {
    uint64_t v18 = swift_bridgeObjectRetain(v17);
    dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(v18, 73LL, a2, a3);
    swift_bridgeObjectRelease(v17);
  }

  uint64_t v19 = (unsigned __int8 *)(v9
                          + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__servingCellLte,  v29,  0LL,  0LL);
  int v20 = *v19;
  if (v20 != 2) {
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v20 & 1, 74LL, a2, a3);
  }
  uint64_t v21 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance,  v28,  0LL,  0LL);
  if ((v21[1] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v21, 75LL, a2, a3);
  }
  sub_100253F40(v9, a1, a2, a3);
  sub_1002540CC(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_100250604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364430);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364430);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  uint64_t v15 = sub_10000FD98( &qword_100364928,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB510);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t sub_100250790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364438);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364438);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
  uint64_t v15 = sub_10000FD98( &qword_100364940,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB678);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t sub_10025091C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364440);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistancePressure;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364440);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
  uint64_t v15 = sub_10000FD98( &qword_100364988,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBAB0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t sub_100250AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364448);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAccel;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364448);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
  uint64_t v15 = sub_10000FD98( &qword_1003649A0,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBC18);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t sub_100250C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364450);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceGyro;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364450);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
  uint64_t v15 = sub_10000FD98( &qword_1003649B8,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  (uint64_t)&unk_1002DBD80);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 8LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t sub_100250DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364458);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceDem;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364458);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
  uint64_t v15 = sub_10000FD98(&qword_1003649D0, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&unk_1002DBEE8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 9LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100250F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364460);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMapVector;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364460);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
  uint64_t v15 = sub_10000FD98( &qword_1003649E8,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC050);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 10LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t sub_1002510D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364468);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMotionActivityContext;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364468);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
  uint64_t v15 = sub_10000FD98( &qword_100364A00,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC1B8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 11LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t sub_100251264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364470);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceMountState;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364470);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
  uint64_t v15 = sub_10000FD98( &qword_100364A18,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC320);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 12LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t sub_1002513F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364478);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSignalEnvironment;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364478);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
  uint64_t v15 = sub_10000FD98( &qword_100364A30,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC488);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 13LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t sub_10025157C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364480);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceSpeedConstraint;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364480);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
  uint64_t v15 = sub_10000FD98( &qword_100364A48,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC5F0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 14LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t sub_100251708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364488);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setAssistanceAlongTrackVelocity;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364488);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
  uint64_t v15 = sub_10000FD98( &qword_100364A60,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC758);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 15LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_100251894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364490);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceFile;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364490);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
  uint64_t v15 = sub_10000FD98( &qword_1003648E0,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB0D8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 16LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t sub_100251A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364498);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectRtiFile;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364498);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectRtiFile);
  uint64_t v15 = sub_10000FD98(&qword_1003648F8, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB240);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 17LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectRtiFile);
}

uint64_t sub_100251BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644A0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectSvidBlocklist;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644A0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
  uint64_t v15 = sub_10000FD98( &qword_100364910,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB3A8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 18LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t sub_100251D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644A8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__deleteGnssData;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644A8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_DeleteGnssData);
  uint64_t v15 = sub_10000FD98(&qword_100364958, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB7E0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 19LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_100251EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644B0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setPvtmReport;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644B0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetPvtmReport);
  uint64_t v15 = sub_10000FD98(&qword_1003648C8, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DAF70);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 20LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetPvtmReport);
}

uint64_t sub_100252050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644B8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setNmeaHandler;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644B8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
  uint64_t v15 = sub_10000FD98(&qword_100364970, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DB948);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 21LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_1002521DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644C0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigSimulatorMode;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644C0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
  uint64_t v15 = sub_10000FD98( &qword_100364A90,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCA28);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 22LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t sub_100252368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644C8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigEnableGnssConstellations;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644C8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
  uint64_t v15 = sub_10000FD98( &qword_100364AA8,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCB90);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 23LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t sub_1002524F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644D0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigDutyCycling;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644D0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
  uint64_t v15 = sub_10000FD98( &qword_100364AD8,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCE60);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 24LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t sub_100252680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644D8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__terminationImminent;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644D8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_TerminationImminent);
  uint64_t v15 = sub_10000FD98( &qword_100364AF0,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DCFC8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 25LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t sub_10025280C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644E0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exitMessage;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644E0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_ExitMessage);
  uint64_t v15 = sub_10000FD98(&qword_100364B08, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD130);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 26LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t sub_100252998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644E8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectLtlInfo;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644E8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo);
  uint64_t v15 = sub_10000FD98(&qword_100364B78, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD838);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 27LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo);
}

uint64_t sub_100252B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644F0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  uint64_t v10 = *(void *)(started - 8);
  __chkstk_darwin(started);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startContext;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644F0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_StartContext);
  uint64_t v15 = sub_10000FD98(&qword_100364C58, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE648);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 28LL, started, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_StartContext);
}

uint64_t sub_100252CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003644F8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinStatusUpdate;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003644F8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
  uint64_t v15 = sub_10000FD98( &qword_100364BF0,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DDF40);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 29LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t sub_100252E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364500);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setThermalRiskState;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364500);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
  uint64_t v15 = sub_10000FD98( &qword_100364A78,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC8C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 30LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t sub_100252FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364508);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__setConfigRfBandEnable;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364508);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
  uint64_t v15 = sub_10000FD98( &qword_100364AC0,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCCF8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 31LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t sub_100253154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364510);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__emergConfig;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364510);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
  uint64_t v15 = sub_10000FD98( &qword_10035D908,  type metadata accessor for Proto_Gnss_Emergency_EmergConfig,  (uint64_t)&unk_1002D3FF0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 50LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
}

uint64_t sub_1002532E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364518);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionRequest;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364518);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
  uint64_t v15 = sub_10000FD98( &qword_10035D388,  type metadata accessor for Proto_Gnss_Emergency_PositionRequest,  (uint64_t)&unk_1002CEA28);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 60LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
}

uint64_t sub_10025346C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364520);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsReferenceTime;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364520);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
  uint64_t v15 = sub_10000FD98( &qword_10035D880,  type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime,  (uint64_t)&unk_1002D3780);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 62LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
}

uint64_t sub_1002535F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364528);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__referenceLocation;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364528);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
  uint64_t v15 = sub_10000FD98( &qword_10035D898,  type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation,  (uint64_t)&unk_1002D38E8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 63LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
}

uint64_t sub_100253784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364530);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsNavigationModel;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364530);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
  uint64_t v15 = sub_10000FD98( &qword_10035D8C0,  type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel,  (uint64_t)&unk_1002D3BB8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 64LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
}

uint64_t sub_100253910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364538);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__gpsAcqAssistance;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364538);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
  uint64_t v15 = sub_10000FD98( &qword_10035D930,  type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance,  (uint64_t)&unk_1002D42C0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 65LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
}

uint64_t sub_100253A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364540);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistance;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364540);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
  uint64_t v15 = sub_10000FD98( &qword_10035D960,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance,  (uint64_t)&unk_1002D4590);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 66LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
}

uint64_t sub_100253C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364548);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneContext;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364548);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
  uint64_t v15 = sub_10000FD98( &qword_10035D8F0,  type metadata accessor for Proto_Gnss_Emergency_CplaneContext,  (uint64_t)&unk_1002D3E88);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 67LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
}

uint64_t sub_100253DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364550);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__locationID;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364550);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_LocationId);
  uint64_t v15 = sub_10000FD98( &qword_10035D228,  type metadata accessor for Proto_Gnss_Emergency_LocationId,  (uint64_t)&unk_1002CD510);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 71LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_LocationId);
}

uint64_t sub_100253F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364558);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplContext;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364558);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
  uint64_t v15 = sub_10000FD98( &qword_10035D2F8,  type metadata accessor for Proto_Gnss_Emergency_SuplContext,  (uint64_t)&unk_1002CE1B8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 76LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SuplContext);
}

uint64_t sub_1002540CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364560);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364560);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  uint64_t v15 = sub_10000FD98( &qword_10035D268,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList,  (uint64_t)&unk_1002CD948);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 77LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
}

uint64_t sub_100254258(uint64_t a1, uint64_t a2)
{
  return sub_100065AC0( a1,  a2,  type metadata accessor for Proto_Gpsd_Request,  (uint64_t (*)(uint64_t, uint64_t))sub_100254280) & 1;
}

BOOL sub_100254280(uint64_t a1, uint64_t a2)
{
  uint64_t v821 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList(0LL);
  uint64_t v817 = *(void *)(v821 - 8);
  __chkstk_darwin(v821);
  uint64_t v820 = (uint64_t)&v652 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v816 = sub_100003A0C(&qword_100367498);
  __chkstk_darwin(v816);
  uint64_t v822 = (uint64_t)&v652 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100003A0C(&qword_100364560);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v819 = (uint64_t)&v652 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v818 = (uint64_t)&v652 - v9;
  uint64_t v814 = type metadata accessor for Proto_Gnss_Emergency_SuplContext(0LL);
  uint64_t v810 = *(void *)(v814 - 8);
  __chkstk_darwin(v814);
  uint64_t v813 = (uint64_t)&v652 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v809 = sub_100003A0C(&qword_1003674A0);
  __chkstk_darwin(v809);
  uint64_t v815 = (uint64_t)&v652 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100003A0C(&qword_100364558);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v812 = (uint64_t)&v652 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v811 = (uint64_t)&v652 - v15;
  uint64_t v807 = type metadata accessor for Proto_Gnss_Emergency_LocationId(0LL);
  uint64_t v803 = *(void *)(v807 - 8);
  __chkstk_darwin(v807);
  uint64_t v806 = (uint64_t)&v652 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v802 = sub_100003A0C(&qword_1003674A8);
  __chkstk_darwin(v802);
  uint64_t v808 = (uint64_t)&v652 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100003A0C(&qword_100364550);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v805 = (uint64_t)&v652 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v804 = (uint64_t)&v652 - v21;
  uint64_t v800 = type metadata accessor for Proto_Gnss_Emergency_CplaneContext(0LL);
  uint64_t v796 = *(void *)(v800 - 8);
  __chkstk_darwin(v800);
  uint64_t v799 = (uint64_t)&v652 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v795 = sub_100003A0C(&qword_1003674B0);
  __chkstk_darwin(v795);
  uint64_t v801 = (uint64_t)&v652 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_100003A0C(&qword_100364548);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v798 = (uint64_t)&v652 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v797 = (uint64_t)&v652 - v27;
  uint64_t v793 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance(0LL);
  uint64_t v789 = *(void *)(v793 - 8);
  __chkstk_darwin(v793);
  uint64_t v792 = (uint64_t)&v652 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v788 = sub_100003A0C(&qword_1003674B8);
  __chkstk_darwin(v788);
  uint64_t v794 = (uint64_t)&v652 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_100003A0C(&qword_100364540);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v791 = (uint64_t)&v652 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  uint64_t v790 = (uint64_t)&v652 - v33;
  uint64_t v786 = type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance(0LL);
  uint64_t v782 = *(void *)(v786 - 8);
  __chkstk_darwin(v786);
  uint64_t v785 = (uint64_t)&v652 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v781 = sub_100003A0C(&qword_1003674C0);
  __chkstk_darwin(v781);
  uint64_t v787 = (uint64_t)&v652 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_100003A0C(&qword_100364538);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v784 = (uint64_t)&v652 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v37);
  uint64_t v783 = (uint64_t)&v652 - v39;
  uint64_t v779 = type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel(0LL);
  uint64_t v775 = *(void *)(v779 - 8);
  __chkstk_darwin(v779);
  uint64_t v778 = (uint64_t)&v652 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v774 = sub_100003A0C(&qword_1003674C8);
  __chkstk_darwin(v774);
  uint64_t v780 = (uint64_t)&v652 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = sub_100003A0C(&qword_100364530);
  uint64_t v43 = __chkstk_darwin(v42);
  uint64_t v777 = (uint64_t)&v652 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v43);
  uint64_t v776 = (uint64_t)&v652 - v45;
  uint64_t v772 = type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation(0LL);
  uint64_t v768 = *(void *)(v772 - 8);
  __chkstk_darwin(v772);
  uint64_t v771 = (uint64_t)&v652 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v767 = sub_100003A0C(&qword_1003674D0);
  __chkstk_darwin(v767);
  uint64_t v773 = (uint64_t)&v652 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = sub_100003A0C(&qword_100364528);
  uint64_t v49 = __chkstk_darwin(v48);
  uint64_t v770 = (uint64_t)&v652 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v49);
  uint64_t v769 = (uint64_t)&v652 - v51;
  uint64_t v765 = type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime(0LL);
  uint64_t v761 = *(void *)(v765 - 8);
  __chkstk_darwin(v765);
  uint64_t v764 = (uint64_t)&v652 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v760 = sub_100003A0C(&qword_1003674D8);
  __chkstk_darwin(v760);
  uint64_t v766 = (uint64_t)&v652 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = sub_100003A0C(&qword_100364520);
  uint64_t v55 = __chkstk_darwin(v54);
  uint64_t v763 = (uint64_t)&v652 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v55);
  uint64_t v762 = (uint64_t)&v652 - v57;
  uint64_t v758 = type metadata accessor for Proto_Gnss_Emergency_PositionRequest(0LL);
  uint64_t v754 = *(void *)(v758 - 8);
  __chkstk_darwin(v758);
  uint64_t v757 = (uint64_t)&v652 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v753 = sub_100003A0C(&qword_1003674E0);
  __chkstk_darwin(v753);
  uint64_t v759 = (uint64_t)&v652 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = sub_100003A0C(&qword_100364518);
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v756 = (uint64_t)&v652 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v61);
  uint64_t v755 = (uint64_t)&v652 - v63;
  uint64_t v751 = type metadata accessor for Proto_Gnss_Emergency_EmergConfig(0LL);
  uint64_t v747 = *(void *)(v751 - 8);
  __chkstk_darwin(v751);
  uint64_t v750 = (uint64_t)&v652 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v746 = sub_100003A0C(&qword_1003674E8);
  __chkstk_darwin(v746);
  uint64_t v752 = (uint64_t)&v652 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = sub_100003A0C(&qword_100364510);
  uint64_t v67 = __chkstk_darwin(v66);
  uint64_t v749 = (uint64_t)&v652 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v67);
  uint64_t v748 = (uint64_t)&v652 - v69;
  uint64_t v743 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  uint64_t v740 = *(void *)(v743 - 8);
  __chkstk_darwin(v743);
  uint64_t v744 = (uint64_t)&v652 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v739 = sub_100003A0C(&qword_1003674F0);
  __chkstk_darwin(v739);
  uint64_t v745 = (uint64_t)&v652 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = sub_100003A0C(&qword_100364508);
  uint64_t v73 = __chkstk_darwin(v72);
  uint64_t v742 = (uint64_t)&v652 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v73);
  uint64_t v741 = (uint64_t)&v652 - v75;
  uint64_t v736 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  uint64_t v733 = *(void *)(v736 - 8);
  __chkstk_darwin(v736);
  uint64_t v737 = (uint64_t)&v652 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v732 = sub_100003A0C(&qword_1003674F8);
  __chkstk_darwin(v732);
  uint64_t v738 = (uint64_t)&v652 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = sub_100003A0C(&qword_100364500);
  uint64_t v79 = __chkstk_darwin(v78);
  uint64_t v735 = (uint64_t)&v652 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v79);
  uint64_t v734 = (uint64_t)&v652 - v81;
  uint64_t v729 = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  uint64_t v726 = *(void *)(v729 - 8);
  __chkstk_darwin(v729);
  uint64_t v730 = (uint64_t)&v652 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v725 = sub_100003A0C(&qword_100367500);
  __chkstk_darwin(v725);
  uint64_t v731 = (uint64_t)&v652 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = sub_100003A0C(&qword_1003644F8);
  uint64_t v85 = __chkstk_darwin(v84);
  uint64_t v728 = (uint64_t)&v652 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v85);
  uint64_t v727 = (uint64_t)&v652 - v87;
  uint64_t started = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  uint64_t v719 = *(void *)(started - 8);
  __chkstk_darwin(started);
  uint64_t v723 = (uint64_t)&v652 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v718 = sub_100003A0C(&qword_100367508);
  __chkstk_darwin(v718);
  uint64_t v724 = (uint64_t)&v652 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = sub_100003A0C(&qword_1003644F0);
  uint64_t v91 = __chkstk_darwin(v90);
  uint64_t v721 = (uint64_t)&v652 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v91);
  uint64_t v720 = (uint64_t)&v652 - v93;
  uint64_t v715 = type metadata accessor for Proto_Gpsd_LtlInfo(0LL);
  uint64_t v712 = *(void *)(v715 - 8);
  __chkstk_darwin(v715);
  uint64_t v716 = (uint64_t)&v652 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v711 = sub_100003A0C(&qword_100367510);
  __chkstk_darwin(v711);
  uint64_t v717 = (uint64_t)&v652 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = sub_100003A0C(&qword_1003644E8);
  uint64_t v97 = __chkstk_darwin(v96);
  uint64_t v714 = (uint64_t)&v652 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v97);
  uint64_t v713 = (uint64_t)&v652 - v99;
  uint64_t v708 = type metadata accessor for Proto_Gpsd_ExitMessage(0LL);
  uint64_t v705 = *(void *)(v708 - 8);
  __chkstk_darwin(v708);
  uint64_t v709 = (uint64_t)&v652 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v704 = sub_100003A0C(&qword_100367518);
  __chkstk_darwin(v704);
  uint64_t v710 = (uint64_t)&v652 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = sub_100003A0C(&qword_1003644E0);
  uint64_t v103 = __chkstk_darwin(v102);
  uint64_t v707 = (uint64_t)&v652 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v103);
  uint64_t v706 = (uint64_t)&v652 - v105;
  uint64_t v701 = type metadata accessor for Proto_Gpsd_TerminationImminent(0LL);
  uint64_t v698 = *(void *)(v701 - 8);
  __chkstk_darwin(v701);
  uint64_t v702 = (uint64_t)&v652 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v697 = sub_100003A0C(&qword_100367520);
  __chkstk_darwin(v697);
  uint64_t v703 = (uint64_t)&v652 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = sub_100003A0C(&qword_1003644D8);
  uint64_t v109 = __chkstk_darwin(v108);
  uint64_t v700 = (uint64_t)&v652 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v109);
  uint64_t v699 = (uint64_t)&v652 - v111;
  uint64_t v694 = type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(0LL);
  uint64_t v691 = *(void *)(v694 - 8);
  __chkstk_darwin(v694);
  uint64_t v695 = (uint64_t)&v652 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v690 = sub_100003A0C(&qword_100367528);
  __chkstk_darwin(v690);
  uint64_t v696 = (uint64_t)&v652 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = sub_100003A0C(&qword_1003644D0);
  uint64_t v115 = __chkstk_darwin(v114);
  uint64_t v693 = (uint64_t)&v652 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v115);
  uint64_t v692 = (uint64_t)&v652 - v117;
  uint64_t v687 = type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(0LL);
  uint64_t v684 = *(void *)(v687 - 8);
  __chkstk_darwin(v687);
  uint64_t v688 = (uint64_t)&v652 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v683 = sub_100003A0C(&qword_100367530);
  __chkstk_darwin(v683);
  uint64_t v689 = (uint64_t)&v652 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = sub_100003A0C(&qword_1003644C8);
  uint64_t v121 = __chkstk_darwin(v120);
  uint64_t v686 = (uint64_t)&v652 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v121);
  uint64_t v685 = (uint64_t)&v652 - v123;
  uint64_t v680 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  uint64_t v677 = *(void *)(v680 - 8);
  __chkstk_darwin(v680);
  uint64_t v681 = (uint64_t)&v652 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v676 = sub_100003A0C(&qword_100367538);
  __chkstk_darwin(v676);
  uint64_t v682 = (uint64_t)&v652 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v126 = sub_100003A0C(&qword_1003644C0);
  uint64_t v127 = __chkstk_darwin(v126);
  uint64_t v679 = (uint64_t)&v652 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v127);
  uint64_t v678 = (uint64_t)&v652 - v129;
  uint64_t v673 = type metadata accessor for Proto_Gpsd_SetNmeaHandler(0LL);
  uint64_t v670 = *(void *)(v673 - 8);
  __chkstk_darwin(v673);
  uint64_t v674 = (uint64_t)&v652 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v669 = sub_100003A0C(&qword_100367540);
  __chkstk_darwin(v669);
  uint64_t v675 = (uint64_t)&v652 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v132 = sub_100003A0C(&qword_1003644B8);
  uint64_t v133 = __chkstk_darwin(v132);
  uint64_t v672 = (uint64_t)&v652 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v133);
  uint64_t v671 = (uint64_t)&v652 - v135;
  uint64_t v666 = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  uint64_t v663 = *(void *)(v666 - 8);
  __chkstk_darwin(v666);
  uint64_t v667 = (uint64_t)&v652 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v662 = sub_100003A0C(&qword_100367548);
  __chkstk_darwin(v662);
  uint64_t v668 = (uint64_t)&v652 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v138 = sub_100003A0C(&qword_1003644B0);
  uint64_t v139 = __chkstk_darwin(v138);
  uint64_t v665 = (uint64_t)&v652 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v139);
  uint64_t v664 = (uint64_t)&v652 - v141;
  uint64_t v659 = type metadata accessor for Proto_Gpsd_DeleteGnssData(0LL);
  uint64_t v656 = *(void *)(v659 - 8);
  __chkstk_darwin(v659);
  uint64_t v660 = (uint64_t)&v652 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v655 = sub_100003A0C(&qword_100367550);
  __chkstk_darwin(v655);
  uint64_t v661 = (uint64_t)&v652 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v144 = sub_100003A0C(&qword_1003644A8);
  uint64_t v145 = __chkstk_darwin(v144);
  uint64_t v658 = (uint64_t)&v652 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v145);
  uint64_t v657 = (uint64_t)&v652 - v147;
  uint64_t v827 = type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(0LL);
  uint64_t v825 = *(void *)(v827 - 8);
  __chkstk_darwin(v827);
  v654 = (uint64_t *)((char *)&v652 - ((v148 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v824 = sub_100003A0C(&qword_100367558);
  __chkstk_darwin(v824);
  uint64_t v828 = (uint64_t)&v652 - ((v149 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v150 = sub_100003A0C(&qword_1003644A0);
  uint64_t v151 = __chkstk_darwin(v150);
  v653 = (uint64_t *)((char *)&v652 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v151);
  uint64_t v826 = (uint64_t)&v652 - v153;
  uint64_t v834 = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  uint64_t v831 = *(void *)(v834 - 8);
  __chkstk_darwin(v834);
  uint64_t v823 = (uint64_t)&v652 - ((v154 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v830 = sub_100003A0C(&qword_100367560);
  __chkstk_darwin(v830);
  uint64_t v838 = (uint64_t)&v652 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v156 = sub_100003A0C(&qword_100364498);
  uint64_t v157 = __chkstk_darwin(v156);
  uint64_t v832 = (uint64_t)&v652 - ((v158 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v157);
  uint64_t v835 = (uint64_t)&v652 - v159;
  uint64_t v841 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  uint64_t v837 = *(void *)(v841 - 8);
  __chkstk_darwin(v841);
  uint64_t v829 = (uint64_t)&v652 - ((v160 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v836 = sub_100003A0C(&qword_100367568);
  __chkstk_darwin(v836);
  uint64_t v846 = (uint64_t)&v652 - ((v161 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v162 = sub_100003A0C(&qword_100364490);
  uint64_t v163 = __chkstk_darwin(v162);
  uint64_t v839 = (uint64_t)&v652 - ((v164 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v163);
  uint64_t v842 = (uint64_t)&v652 - v165;
  uint64_t v849 = type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(0LL);
  uint64_t v844 = *(void *)(v849 - 8);
  __chkstk_darwin(v849);
  uint64_t v833 = (uint64_t)&v652 - ((v166 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v843 = sub_100003A0C(&qword_100367570);
  __chkstk_darwin(v843);
  uint64_t v850 = (uint64_t)&v652 - ((v167 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v168 = sub_100003A0C(&qword_100364488);
  uint64_t v169 = __chkstk_darwin(v168);
  uint64_t v845 = (uint64_t)&v652 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v169);
  uint64_t v848 = (uint64_t)&v652 - v171;
  uint64_t v856 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v852 = *(void *)(v856 - 8);
  __chkstk_darwin(v856);
  uint64_t v840 = (uint64_t)&v652 - ((v172 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v851 = sub_100003A0C(&qword_100367578);
  __chkstk_darwin(v851);
  uint64_t v857 = (uint64_t)&v652 - ((v173 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v174 = sub_100003A0C(&qword_100364480);
  uint64_t v175 = __chkstk_darwin(v174);
  uint64_t v853 = (uint64_t)&v652 - ((v176 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v175);
  uint64_t v855 = (uint64_t)&v652 - v177;
  uint64_t v863 = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  uint64_t v859 = *(void *)(v863 - 8);
  __chkstk_darwin(v863);
  uint64_t v847 = (uint64_t)&v652 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v858 = sub_100003A0C(&qword_100367580);
  __chkstk_darwin(v858);
  uint64_t v864 = (uint64_t)&v652 - ((v179 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v180 = sub_100003A0C(&qword_100364478);
  uint64_t v181 = __chkstk_darwin(v180);
  uint64_t v860 = (uint64_t)&v652 - ((v182 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v181);
  uint64_t v862 = (uint64_t)&v652 - v183;
  uint64_t v870 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  uint64_t v866 = *(void *)(v870 - 8);
  __chkstk_darwin(v870);
  uint64_t v854 = (uint64_t)&v652 - ((v184 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v865 = sub_100003A0C(&qword_100367588);
  __chkstk_darwin(v865);
  uint64_t v871 = (uint64_t)&v652 - ((v185 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v186 = sub_100003A0C(&qword_100364470);
  uint64_t v187 = __chkstk_darwin(v186);
  uint64_t v867 = (uint64_t)&v652 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v187);
  uint64_t v869 = (uint64_t)&v652 - v189;
  uint64_t v875 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  uint64_t v873 = *(void *)(v875 - 8);
  __chkstk_darwin(v875);
  uint64_t v861 = (uint64_t)&v652 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v872 = sub_100003A0C(&qword_100367590);
  __chkstk_darwin(v872);
  uint64_t v879 = (uint64_t)&v652 - ((v191 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v192 = sub_100003A0C(&qword_100364468);
  uint64_t v193 = __chkstk_darwin(v192);
  uint64_t v874 = (uint64_t)&v652 - ((v194 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v193);
  uint64_t v878 = (uint64_t)&v652 - v195;
  uint64_t v882 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v881 = *(void *)(v882 - 8);
  __chkstk_darwin(v882);
  uint64_t v868 = (uint64_t)&v652 - ((v196 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v880 = sub_100003A0C(&qword_100367598);
  __chkstk_darwin(v880);
  uint64_t v886 = (uint64_t)&v652 - ((v197 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v198 = sub_100003A0C(&qword_100364460);
  uint64_t v199 = __chkstk_darwin(v198);
  uint64_t v876 = (uint64_t)&v652 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v199);
  uint64_t v884 = (uint64_t)&v652 - v201;
  uint64_t v889 = type metadata accessor for Proto_Gpsd_SetAssistanceDem(0LL);
  uint64_t v888 = *(void *)(v889 - 8);
  __chkstk_darwin(v889);
  uint64_t v877 = (uint64_t)&v652 - ((v202 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v887 = sub_100003A0C(&qword_1003675A0);
  __chkstk_darwin(v887);
  uint64_t v892 = (uint64_t)&v652 - ((v203 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v204 = sub_100003A0C(&qword_100364458);
  uint64_t v205 = __chkstk_darwin(v204);
  uint64_t v883 = (uint64_t)&v652 - ((v206 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v205);
  uint64_t v891 = (uint64_t)&v652 - v207;
  uint64_t v896 = type metadata accessor for Proto_Gpsd_SetAssistanceGyro(0LL);
  uint64_t v895 = *(void *)(v896 - 8);
  __chkstk_darwin(v896);
  v885 = (uint64_t *)((char *)&v652 - ((v208 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v894 = sub_100003A0C(&qword_1003675A8);
  __chkstk_darwin(v894);
  uint64_t v899 = (uint64_t)&v652 - ((v209 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v210 = sub_100003A0C(&qword_100364450);
  uint64_t v211 = __chkstk_darwin(v210);
  v890 = (uint64_t *)((char *)&v652 - ((v212 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v211);
  uint64_t v898 = (uint64_t)&v652 - v213;
  uint64_t v903 = type metadata accessor for Proto_Gpsd_SetAssistanceAccel(0LL);
  uint64_t v902 = *(void *)(v903 - 8);
  __chkstk_darwin(v903);
  v893 = (uint64_t *)((char *)&v652 - ((v214 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v901 = sub_100003A0C(&qword_1003675B0);
  __chkstk_darwin(v901);
  uint64_t v906 = (uint64_t)&v652 - ((v215 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v216 = sub_100003A0C(&qword_100364448);
  uint64_t v217 = __chkstk_darwin(v216);
  v897 = (uint64_t *)((char *)&v652 - ((v218 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v217);
  uint64_t v905 = (uint64_t)&v652 - v219;
  uint64_t v910 = type metadata accessor for Proto_Gpsd_SetAssistancePressure(0LL);
  uint64_t v909 = *(void *)(v910 - 8);
  __chkstk_darwin(v910);
  v900 = (uint64_t *)((char *)&v652 - ((v220 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v908 = sub_100003A0C(&qword_1003675B8);
  __chkstk_darwin(v908);
  uint64_t v913 = (uint64_t)&v652 - ((v221 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v222 = sub_100003A0C(&qword_100364440);
  uint64_t v223 = __chkstk_darwin(v222);
  v904 = (uint64_t *)((char *)&v652 - ((v224 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v223);
  uint64_t v912 = (uint64_t)&v652 - v225;
  uint64_t v917 = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  uint64_t v916 = *(void *)(v917 - 8);
  __chkstk_darwin(v917);
  uint64_t v907 = (uint64_t)&v652 - ((v226 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v915 = sub_100003A0C(&qword_1003675C0);
  __chkstk_darwin(v915);
  uint64_t v920 = (uint64_t)&v652 - ((v227 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v228 = sub_100003A0C(&qword_100364438);
  uint64_t v229 = __chkstk_darwin(v228);
  uint64_t v911 = (uint64_t)&v652 - ((v230 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v229);
  uint64_t v919 = (uint64_t)&v652 - v231;
  uint64_t v232 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  uint64_t v233 = *(void *)(v232 - 8);
  __chkstk_darwin(v232);
  uint64_t v914 = (uint64_t)&v652 - ((v234 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v235 = sub_100003A0C(&qword_1003675C8);
  __chkstk_darwin(v235);
  uint64_t v921 = (uint64_t)&v652 - ((v236 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v237 = sub_100003A0C(&qword_100364430);
  uint64_t v238 = __chkstk_darwin(v237);
  uint64_t v918 = (uint64_t)&v652 - ((v239 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v238);
  uint64_t v241 = (char *)&v652 - v240;
  swift_beginAccess(a1 + 16, v1018, 0LL, 0LL);
  uint64_t v242 = *(void *)(a1 + 16);
  uint64_t v243 = a1;
  LOBYTE(a1) = *(_BYTE *)(a1 + 24);
  swift_beginAccess(a2 + 16, v1017, 0LL, 0LL);
  uint64_t v922 = a2;
  char v244 = *(_BYTE *)(a2 + 24);
  if ((a1 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24)) {
      return 0LL;
    }
  }

  else
  {
    if (v242 != *(void *)(a2 + 16)) {
      char v244 = 1;
    }
    if ((v244 & 1) != 0) {
      return 0LL;
    }
  }

  swift_beginAccess(v243 + 28, v1016, 0LL, 0LL);
  int v245 = *(_DWORD *)(v243 + 28);
  uint64_t v652 = v243;
  char v246 = *(_BYTE *)(v243 + 32);
  uint64_t v247 = v922;
  swift_beginAccess(v922 + 28, v1015, 0LL, 0LL);
  char v248 = *(_BYTE *)(v247 + 32);
  if ((v246 & 1) != 0)
  {
    if (!*(_BYTE *)(v247 + 32)) {
      return 0LL;
    }
  }

  else
  {
    if (v245 != *(_DWORD *)(v247 + 28)) {
      char v248 = 1;
    }
    if ((v248 & 1) != 0) {
      return 0LL;
    }
  }

  uint64_t v249 = v652;
  swift_beginAccess(v652 + 33, v1014, 0LL, 0LL);
  int v250 = *(unsigned __int8 *)(v249 + 33);
  uint64_t v251 = v922;
  swift_beginAccess(v922 + 33, v1013, 0LL, 0LL);
  int v252 = *(unsigned __int8 *)(v251 + 33);
  if (v250 == 61)
  {
    if (v252 != 61) {
      return 0LL;
    }
  }

  else if (v252 == 61 || !sub_10022C20C(v250, v252))
  {
    return 0LL;
  }

  uint64_t v253 = v249
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess( v249 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  v1012,  0LL,  0LL);
  sub_10000E6C0(v253, (uint64_t)v241, &qword_100364430);
  uint64_t v254 = v922;
  uint64_t v255 = v922
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition;
  swift_beginAccess( v922 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistancePosition,  &v1011,  0LL,  0LL);
  uint64_t v256 = v921;
  uint64_t v257 = v921 + *(int *)(v235 + 48);
  sub_10000E6C0((uint64_t)v241, v921, &qword_100364430);
  sub_10000E6C0(v255, v257, &qword_100364430);
  uint64_t v258 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48);
  if (v258(v256, 1LL, v232) == 1)
  {
    swift_retain(v249);
    swift_retain(v254);
    sub_100015764((uint64_t)v241, &qword_100364430);
    if (v258(v257, 1LL, v232) == 1)
    {
      sub_100015764(v921, &qword_100364430);
      goto LABEL_26;
    }

    goto LABEL_23;
  }

  uint64_t v259 = v918;
  sub_10000E6C0(v256, v918, &qword_100364430);
  if (v258(v257, 1LL, v232) == 1)
  {
    swift_retain(v249);
    uint64_t v254 = v922;
    swift_retain(v922);
    sub_100015764((uint64_t)v241, &qword_100364430);
    sub_100004090(v259, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
LABEL_23:
    sub_100015764(v921, &qword_1003675C8);
LABEL_24:
    swift_release(v249);
    uint64_t v260 = v254;
LABEL_70:
    swift_release(v260);
    return 0LL;
  }

  uint64_t v261 = v914;
  sub_100003E68(v257, v914, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  swift_retain(v249);
  uint64_t v254 = v922;
  swift_retain(v922);
  char v262 = sub_1002787DC(v259, v261);
  sub_100004090(v261, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  sub_100015764((uint64_t)v241, &qword_100364430);
  sub_100004090(v259, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  uint64_t v249 = v652;
  sub_100015764(v256, &qword_100364430);
  if ((v262 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_26:
  uint64_t v263 = v249
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess( v249 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  &v1010,  0LL,  0LL);
  uint64_t v264 = v919;
  sub_10000E6C0(v263, v919, &qword_100364438);
  uint64_t v265 = v254
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime;
  swift_beginAccess( v254 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__injectAssistanceTime,  &v1009,  0LL,  0LL);
  uint64_t v266 = v920;
  uint64_t v267 = v920 + *(int *)(v915 + 48);
  sub_10000E6C0(v264, v920, &qword_100364438);
  sub_10000E6C0(v265, v267, &qword_100364438);
  uint64_t v268 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v916 + 48);
  uint64_t v269 = v917;
  if (v268(v266, 1LL, v917) == 1)
  {
    sub_100015764(v264, &qword_100364438);
    if (v268(v267, 1LL, v269) == 1)
    {
      sub_100015764(v920, &qword_100364438);
      goto LABEL_33;
    }

LABEL_313:
  uint64_t v642 = v652
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess( v652 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  &v924,  0LL,  0LL);
  uint64_t v643 = v818;
  sub_10000E6C0(v642, v818, &qword_100364560);
  uint64_t v644 = v922
       + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList;
  swift_beginAccess( v922 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_RequestP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementList,  &v923,  0LL,  0LL);
  uint64_t v645 = v822;
  uint64_t v646 = v822 + *(int *)(v816 + 48);
  sub_10000E6C0(v643, v822, &qword_100364560);
  sub_10000E6C0(v644, v646, &qword_100364560);
  v647 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v817 + 48);
  if (v647(v645, 1LL, v821) == 1)
  {
    swift_release(v652);
    swift_release(v922);
    sub_100015764(v818, &qword_100364560);
    if (v647(v646, 1LL, v821) == 1)
    {
      sub_100015764(v822, &qword_100364560);
      return 1LL;
    }

LABEL_319:
    sub_100015764(v822, &qword_100367498);
    return 0LL;
  }

  sub_10000E6C0(v822, v819, &qword_100364560);
  if (v647(v646, 1LL, v821) == 1)
  {
    swift_release(v652);
    swift_release(v922);
    sub_100015764(v818, &qword_100364560);
    sub_100004090(v819, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
    goto LABEL_319;
  }

  uint64_t v648 = v820;
  sub_100003E68(v646, v820, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  uint64_t v649 = sub_10000FD98( &qword_10035D270,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList,  (uint64_t)&unk_1002CDA88);
  uint64_t v650 = v819;
  char v651 = dispatch thunk of static Equatable.== infix(_:_:)(v819, v648, v821, v649);
  swift_release(v652);
  swift_release(v922);
  sub_100004090(v648, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  sub_100015764(v818, &qword_100364560);
  sub_100004090(v650, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
  sub_100015764(v822, &qword_100364560);
  return (v651 & 1) != 0;
}

Swift::Int sub_10025AD2C()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_Request, &qword_100364638, (uint64_t)&unk_1002DAA80);
}

uint64_t sub_10025AD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD7C(a1, &qword_1003B6A28, &qword_1003B6A30, (uint64_t)sub_10024BF4C, a2);
}

uint64_t sub_10025AD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10024F024(a1, a2, a3);
}

uint64_t sub_10025AD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10024FDD8(a1, a2, a3);
}

uint64_t sub_10025AD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367390, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DA9F8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10025ADDC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A20, (uint64_t)qword_10036B678, (uint64_t)sub_10024B3F8, a1);
}

uint64_t sub_10025ADF8(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100351798, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DA980);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10025AE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100351798, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DA980);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_10025AE88()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B690);
  sub_10000E704(v0, (uint64_t)qword_10036B690);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v129 = swift_allocObject(v1, v6 + 61 * v4, v5 | 7);
  *(_OWORD *)(v129 + 16) = xmmword_1002DA070;
  uint64_t v7 = v129 + v6;
  uint64_t v8 = v129 + v6 + *(int *)(v2 + 48);
  *(void *)(v129 + v6) = 0LL;
  *(void *)uint64_t v8 = "PROTOBUF_DEFAULT";
  *(void *)(v8 + 8) = 16LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v129 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 1LL;
  *(void *)uint64_t v12 = "START";
  *(void *)(v12 + 8) = 5LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v129 + v6 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 2LL;
  *(void *)uint64_t v14 = "STOP";
  *((void *)v14 + 1) = 4LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v129 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 3LL;
  *(void *)uint64_t v16 = "RESET";
  *((void *)v16 + 1) = 5LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v129 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 4LL;
  *(void *)uint64_t v18 = "CLEAR";
  *((void *)v18 + 1) = 5LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v129 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 5LL;
  *(void *)uint64_t v20 = "DELETE_GNSS_DATA";
  *((void *)v20 + 1) = 16LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v129 + v6 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 6LL;
  *(void *)uint64_t v22 = "SET_PVTM_REPORT";
  *((void *)v22 + 1) = 15LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v129 + v6 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 7LL;
  *(void *)uint64_t v24 = "SET_NMEA_HANDLER";
  *((void *)v24 + 1) = 16LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v129 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 8LL;
  *(void *)uint64_t v25 = "INJECT_ASSISTANCE_POSITION";
  *(void *)(v25 + 8) = 26LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v129 + v6 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 9LL;
  *(void *)uint64_t v27 = "INJECT_ASSISTANCE_TIME";
  *((void *)v27 + 1) = 22LL;
  v27[16] = 2;
  v11();
  uint64_t v28 = (void *)(v129 + v6 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 10LL;
  *(void *)uint64_t v29 = "INJECT_ASSISTANCE_FILE";
  *((void *)v29 + 1) = 22LL;
  v29[16] = 2;
  v11();
  uint64_t v30 = (void *)(v129 + v6 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 11LL;
  *(void *)uint64_t v31 = "INJECT_RTI_FILE";
  *((void *)v31 + 1) = 15LL;
  v31[16] = 2;
  v11();
  uint64_t v32 = (void *)(v129 + v6 + 12 * v4);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 48);
  *uint64_t v32 = 12LL;
  *(void *)uint64_t v33 = "INJECT_SVID_BLOCKLIST";
  *((void *)v33 + 1) = 21LL;
  v33[16] = 2;
  v11();
  uint64_t v34 = (void *)(v129 + v6 + 13 * v4);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 48);
  void *v34 = 13LL;
  *(void *)uint64_t v35 = "SET_ASSISTANCE_PRESSURE";
  *((void *)v35 + 1) = 23LL;
  v35[16] = 2;
  v11();
  uint64_t v36 = (void *)(v129 + v6 + 14 * v4);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 48);
  *uint64_t v36 = 14LL;
  *(void *)uint64_t v37 = "SET_ASSISTANCE_ACCEL";
  *((void *)v37 + 1) = 20LL;
  v37[16] = 2;
  v11();
  uint64_t v38 = (void *)(v129 + v6 + 15 * v4);
  uint64_t v39 = (char *)v38 + *(int *)(v2 + 48);
  *uint64_t v38 = 15LL;
  *(void *)uint64_t v39 = "SET_ASSISTANCE_GYRO";
  *((void *)v39 + 1) = 19LL;
  v39[16] = 2;
  v11();
  uint64_t v40 = v129 + v6 + 16 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 16 * v4) = 16LL;
  *(void *)uint64_t v40 = "SET_ASSISTANCE_DEM";
  *(void *)(v40 + 8) = 18LL;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  uint64_t v41 = (void *)(v129 + v6 + 17 * v4);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 48);
  *uint64_t v41 = 17LL;
  *(void *)uint64_t v42 = "SET_ASSISTANCE_MAP_VECTOR";
  *((void *)v42 + 1) = 25LL;
  v42[16] = 2;
  v11();
  uint64_t v43 = (void *)(v129 + v6 + 18 * v4);
  uint64_t v44 = (char *)v43 + *(int *)(v2 + 48);
  void *v43 = 18LL;
  *(void *)uint64_t v44 = "SET_ASSISTANCE_MOTION_ACTIVITY_CONTEXT";
  *((void *)v44 + 1) = 38LL;
  v44[16] = 2;
  v11();
  uint64_t v45 = (void *)(v129 + v6 + 19 * v4);
  uint64_t v46 = (char *)v45 + *(int *)(v2 + 48);
  void *v45 = 19LL;
  *(void *)uint64_t v46 = "SET_ASSISTANCE_MOUNT_STATE";
  *((void *)v46 + 1) = 26LL;
  v46[16] = 2;
  v11();
  uint64_t v47 = (void *)(v129 + v6 + 20 * v4);
  uint64_t v48 = (char *)v47 + *(int *)(v2 + 48);
  void *v47 = 20LL;
  *(void *)uint64_t v48 = "SET_ASSISTANCE_SIGNAL_ENVIRONMENT";
  *((void *)v48 + 1) = 33LL;
  v48[16] = 2;
  v11();
  uint64_t v49 = (void *)(v129 + v6 + 21 * v4);
  uint64_t v50 = (char *)v49 + *(int *)(v2 + 48);
  *uint64_t v49 = 21LL;
  *(void *)uint64_t v50 = "SET_ASSISTANCE_SPEED_CONSTRAINT";
  *((void *)v50 + 1) = 31LL;
  v50[16] = 2;
  v11();
  uint64_t v51 = (void *)(v129 + v6 + 22 * v4);
  uint64_t v52 = (char *)v51 + *(int *)(v2 + 48);
  *uint64_t v51 = 22LL;
  *(void *)uint64_t v52 = "SET_ASSISTANCE_ALONG_TRACK_VELOCITY";
  *((void *)v52 + 1) = 35LL;
  v52[16] = 2;
  v11();
  uint64_t v53 = (void *)(v129 + v6 + 23 * v4);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 48);
  void *v53 = 23LL;
  *(void *)uint64_t v54 = "SET_POWER_REPORT";
  *((void *)v54 + 1) = 16LL;
  v54[16] = 2;
  v11();
  uint64_t v55 = (void *)(v129 + v6 + 24 * v4);
  uint64_t v56 = (char *)v55 + *(int *)(v2 + 48);
  *uint64_t v55 = 24LL;
  *(void *)uint64_t v56 = "SET_CONFIG_SIMULATOR_MODE";
  *((void *)v56 + 1) = 25LL;
  v56[16] = 2;
  v11();
  uint64_t v57 = (void *)(v129 + v6 + 25 * v4);
  uint64_t v58 = (char *)v57 + *(int *)(v2 + 48);
  void *v57 = 25LL;
  *(void *)uint64_t v58 = "SET_CONFIG_ENABLE_GNSS_CONSTELLATIONS";
  *((void *)v58 + 1) = 37LL;
  v58[16] = 2;
  v11();
  uint64_t v59 = (void *)(v129 + v6 + 26 * v4);
  uint64_t v60 = (char *)v59 + *(int *)(v2 + 48);
  *uint64_t v59 = 26LL;
  *(void *)uint64_t v60 = "SET_CONFIG_DUTY_CYCLING";
  *((void *)v60 + 1) = 23LL;
  v60[16] = 2;
  v11();
  uint64_t v61 = (void *)(v129 + v6 + 27 * v4);
  uint64_t v62 = (char *)v61 + *(int *)(v2 + 48);
  *uint64_t v61 = 27LL;
  *(void *)uint64_t v62 = "SET_TIME_TRANSFER_PULSE";
  *((void *)v62 + 1) = 23LL;
  v62[16] = 2;
  v11();
  uint64_t v63 = (void *)(v129 + v6 + 28 * v4);
  uint64_t v64 = (char *)v63 + *(int *)(v2 + 48);
  *uint64_t v63 = 28LL;
  *(void *)uint64_t v64 = "CLEAN_TIME_TRANSFER_PULSE";
  *((void *)v64 + 1) = 25LL;
  v64[16] = 2;
  v11();
  uint64_t v65 = (void *)(v129 + v6 + 29 * v4);
  uint64_t v66 = (char *)v65 + *(int *)(v2 + 48);
  *uint64_t v65 = 29LL;
  *(void *)uint64_t v66 = "INJECT_LTL_INFO";
  *((void *)v66 + 1) = 15LL;
  v66[16] = 2;
  v11();
  uint64_t v67 = (void *)(v129 + v6 + 30 * v4);
  uint64_t v68 = (char *)v67 + *(int *)(v2 + 48);
  void *v67 = 30LL;
  *(void *)uint64_t v68 = "CNTIN_STATUS_UPDATE";
  *((void *)v68 + 1) = 19LL;
  v68[16] = 2;
  v11();
  uint64_t v69 = (void *)(v129 + v6 + 31 * v4);
  uint64_t v70 = (char *)v69 + *(int *)(v2 + 48);
  *uint64_t v69 = 31LL;
  *(void *)uint64_t v70 = "SET_THERMAL_RISK_STATE";
  *((void *)v70 + 1) = 22LL;
  v70[16] = 2;
  v11();
  uint64_t v71 = v129 + v6 + 32 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 32 * v4) = 32LL;
  *(void *)uint64_t v71 = "PING";
  *(void *)(v71 + 8) = 4LL;
  *(_BYTE *)(v71 + 16) = 2;
  v11();
  uint64_t v72 = (void *)(v129 + v6 + 33 * v4);
  uint64_t v73 = (char *)v72 + *(int *)(v2 + 48);
  void *v72 = 34LL;
  *(void *)uint64_t v73 = "BUILD_DEVICE";
  *((void *)v73 + 1) = 12LL;
  v73[16] = 2;
  v11();
  uint64_t v74 = (void *)(v129 + v6 + 34 * v4);
  uint64_t v75 = (char *)v74 + *(int *)(v2 + 48);
  *uint64_t v74 = 35LL;
  *(void *)uint64_t v75 = "TERMINATION_IMMINENT";
  *((void *)v75 + 1) = 20LL;
  v75[16] = 2;
  v11();
  uint64_t v76 = (void *)(v129 + v6 + 35 * v4);
  uint64_t v77 = (char *)v76 + *(int *)(v2 + 48);
  void *v76 = 36LL;
  *(void *)uint64_t v77 = "EXIT";
  *((void *)v77 + 1) = 4LL;
  v77[16] = 2;
  v11();
  uint64_t v78 = (void *)(v129 + v6 + 36 * v4);
  uint64_t v79 = (char *)v78 + *(int *)(v2 + 48);
  void *v78 = 37LL;
  *(void *)uint64_t v79 = "FORCE_CLEAR_ALL_NV";
  *((void *)v79 + 1) = 18LL;
  v79[16] = 2;
  v11();
  uint64_t v80 = (void *)(v129 + v6 + 37 * v4);
  uint64_t v81 = (char *)v80 + *(int *)(v2 + 48);
  void *v80 = 38LL;
  *(void *)uint64_t v81 = "SET_CONFIG_RF_BAND_ENABLE";
  *((void *)v81 + 1) = 25LL;
  v81[16] = 2;
  v11();
  uint64_t v82 = (void *)(v129 + v6 + 38 * v4);
  uint64_t v83 = (char *)v82 + *(int *)(v2 + 48);
  *uint64_t v82 = 51LL;
  *(void *)uint64_t v83 = "START_EMERGENCY_PREEMPTIVE_SESSION";
  *((void *)v83 + 1) = 34LL;
  v83[16] = 2;
  v11();
  uint64_t v84 = (void *)(v129 + v6 + 39 * v4);
  uint64_t v85 = (char *)v84 + *(int *)(v2 + 48);
  *uint64_t v84 = 52LL;
  *(void *)uint64_t v85 = "STOP_EMERGENCY_PREEMPTIVE_SESSION";
  *((void *)v85 + 1) = 33LL;
  v85[16] = 2;
  v11();
  uint64_t v86 = (void *)(v129 + v6 + 40 * v4);
  uint64_t v87 = (char *)v86 + *(int *)(v2 + 48);
  void *v86 = 53LL;
  *(void *)uint64_t v87 = "SET_EMERGENCY_CONFIG";
  *((void *)v87 + 1) = 20LL;
  v87[16] = 2;
  v11();
  uint64_t v88 = (void *)(v129 + v6 + 41 * v4);
  uint64_t v89 = (char *)v88 + *(int *)(v2 + 48);
  *uint64_t v88 = 54LL;
  *(void *)uint64_t v89 = "SET_EMERGENCY_SESSION_SUMMARY_REPORT";
  *((void *)v89 + 1) = 36LL;
  v89[16] = 2;
  v11();
  uint64_t v90 = (void *)(v129 + v6 + 42 * v4);
  uint64_t v91 = (char *)v90 + *(int *)(v2 + 48);
  *uint64_t v90 = 55LL;
  *(void *)uint64_t v91 = "ENTER_EMERGENCY_MODE";
  *((void *)v91 + 1) = 20LL;
  v91[16] = 2;
  v11();
  uint64_t v92 = (void *)(v129 + v6 + 43 * v4);
  uint64_t v93 = (char *)v92 + *(int *)(v2 + 48);
  *uint64_t v92 = 56LL;
  *(void *)uint64_t v93 = "EXIT_EMERGENCY_MODE";
  *((void *)v93 + 1) = 19LL;
  v93[16] = 2;
  v11();
  uint64_t v94 = (void *)(v129 + v6 + 44 * v4);
  uint64_t v95 = (char *)v94 + *(int *)(v2 + 48);
  void *v94 = 60LL;
  *(void *)uint64_t v95 = "START_EMERGENCY_POSITION";
  *((void *)v95 + 1) = 24LL;
  v95[16] = 2;
  v11();
  uint64_t v96 = (void *)(v129 + v6 + 45 * v4);
  uint64_t v97 = (char *)v96 + *(int *)(v2 + 48);
  *uint64_t v96 = 61LL;
  *(void *)uint64_t v97 = "STOP_EMERGENCY_POSITION";
  *((void *)v97 + 1) = 23LL;
  v97[16] = 2;
  v11();
  uint64_t v98 = (void *)(v129 + v6 + 46 * v4);
  uint64_t v99 = (char *)v98 + *(int *)(v2 + 48);
  void *v98 = 62LL;
  *(void *)uint64_t v99 = "SET_EMERGENCY_POSITION_REPORT";
  *((void *)v99 + 1) = 29LL;
  v99[16] = 2;
  v11();
  uint64_t v100 = (void *)(v129 + v6 + 47 * v4);
  uint64_t v101 = (char *)v100 + *(int *)(v2 + 48);
  *uint64_t v100 = 63LL;
  *(void *)uint64_t v101 = "SET_EMERGENCY_MEASUREMENT_REPORT";
  *((void *)v101 + 1) = 32LL;
  v101[16] = 2;
  v11();
  uint64_t v102 = (void *)(v129 + v6 + 48 * v4);
  uint64_t v103 = (char *)v102 + *(int *)(v2 + 48);
  void *v102 = 64LL;
  *(void *)uint64_t v103 = "SET_NW_ASSISTANCE_NEEDED_REPORT";
  *((void *)v103 + 1) = 31LL;
  v103[16] = 2;
  v11();
  uint64_t v104 = (void *)(v129 + v6 + 49 * v4);
  uint64_t v105 = (char *)v104 + *(int *)(v2 + 48);
  *uint64_t v104 = 65LL;
  *(void *)uint64_t v105 = "SET_NW_ASSISTANCE_GPS_REF_TIME";
  *((void *)v105 + 1) = 30LL;
  v105[16] = 2;
  v11();
  uint64_t v106 = (void *)(v129 + v6 + 50 * v4);
  uint64_t v107 = (char *)v106 + *(int *)(v2 + 48);
  void *v106 = 66LL;
  *(void *)uint64_t v107 = "SET_NW_ASSISTANCE_REF_POSITION";
  *((void *)v107 + 1) = 30LL;
  v107[16] = 2;
  v11();
  uint64_t v108 = (void *)(v129 + v6 + 51 * v4);
  uint64_t v109 = (char *)v108 + *(int *)(v2 + 48);
  *uint64_t v108 = 67LL;
  *(void *)uint64_t v109 = "SET_NW_ASSISTANCE_GPS_EPHEMERIS";
  *((void *)v109 + 1) = 31LL;
  v109[16] = 2;
  v11();
  uint64_t v110 = (void *)(v129 + v6 + 52 * v4);
  uint64_t v111 = (char *)v110 + *(int *)(v2 + 48);
  void *v110 = 68LL;
  *(void *)uint64_t v111 = "SET_NW_ASSISTANCE_GPS_ACQUISITION";
  *((void *)v111 + 1) = 33LL;
  v111[16] = 2;
  v11();
  uint64_t v112 = (void *)(v129 + v6 + 53 * v4);
  uint64_t v113 = (char *)v112 + *(int *)(v2 + 48);
  *uint64_t v112 = 69LL;
  *(void *)uint64_t v113 = "INJECT_FT_ASSISTANCE";
  *((void *)v113 + 1) = 20LL;
  v113[16] = 2;
  v11();
  uint64_t v114 = (void *)(v129 + v6 + 54 * v4);
  uint64_t v115 = (char *)v114 + *(int *)(v2 + 48);
  void *v114 = 70LL;
  *(void *)uint64_t v115 = "DECODE_SUPL_INIT";
  *((void *)v115 + 1) = 16LL;
  v115[16] = 2;
  v11();
  uint64_t v116 = (void *)(v129 + v6 + 55 * v4);
  uint64_t v117 = (char *)v116 + *(int *)(v2 + 48);
  *uint64_t v116 = 71LL;
  *(void *)uint64_t v117 = "SET_SUPL_INIT";
  *((void *)v117 + 1) = 13LL;
  v117[16] = 2;
  v11();
  uint64_t v118 = (void *)(v129 + v6 + 56 * v4);
  uint64_t v119 = (char *)v118 + *(int *)(v2 + 48);
  void *v118 = 72LL;
  *(void *)uint64_t v119 = "SET_SUPL_LOCATIONID_NEEDED_REPORT";
  *((void *)v119 + 1) = 33LL;
  v119[16] = 2;
  v11();
  uint64_t v120 = (void *)(v129 + v6 + 57 * v4);
  uint64_t v121 = (char *)v120 + *(int *)(v2 + 48);
  *uint64_t v120 = 73LL;
  *(void *)uint64_t v121 = "SET_SUPL_LOCATIONID";
  *((void *)v121 + 1) = 19LL;
  v121[16] = 2;
  v11();
  uint64_t v122 = (void *)(v129 + v6 + 58 * v4);
  uint64_t v123 = (char *)v122 + *(int *)(v2 + 48);
  void *v122 = 74LL;
  *(void *)uint64_t v123 = "ABORT_SUPL_SESSION";
  *((void *)v123 + 1) = 18LL;
  v123[16] = 2;
  v11();
  uint64_t v124 = (void *)(v129 + v6 + 59 * v4);
  uint64_t v125 = (char *)v124 + *(int *)(v2 + 48);
  *uint64_t v124 = 75LL;
  *(void *)uint64_t v125 = "SET_SUPL_SESSION_STATUS_REPORT";
  *((void *)v125 + 1) = 30LL;
  v125[16] = 2;
  v11();
  uint64_t v126 = (void *)(v129 + v6 + 60 * v4);
  uint64_t v127 = (char *)v126 + *(int *)(v2 + 48);
  void *v126 = 76LL;
  *(void *)uint64_t v127 = "SET_SUPL_WLAN_MEAS";
  *((void *)v127 + 1) = 18LL;
  v127[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v129);
}

uint64_t sub_10025BC1C()
{
  return sub_100008C30(&qword_1003B6A38, (uint64_t)qword_10036B690, (uint64_t)sub_10025AE88);
}

uint64_t sub_10025BC38@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A38, (uint64_t)qword_10036B690, (uint64_t)sub_10025AE88, a1);
}

uint64_t sub_10025BC54@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A38, (uint64_t)qword_10036B690, (uint64_t)sub_10025AE88, a1);
}

void *sub_10025BC70()
{
  return &unk_100345C60;
}

unint64_t sub_10025BC7C()
{
  return 0xD000000000000013LL;
}

uint64_t sub_10025BC98()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B6A8);
  sub_10000E704(v0, (uint64_t)qword_10036B6A8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "request_type";
  *(void *)(v9 + 8) = 12LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "mach_continuous_time_ns";
  *((void *)v13 + 1) = 23LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "result_code";
  *(void *)(v14 + 8) = 11LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10025BE2C()
{
  return sub_100008C30(&qword_1003B6A40, (uint64_t)qword_10036B6A8, (uint64_t)sub_10025BC98);
}

uint64_t sub_10025BE48@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A40, (uint64_t)qword_10036B6A8, (uint64_t)sub_10025BC98, a1);
}

uint64_t sub_10025BE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while (1)
    {
      if ((v8 & 1) != 0) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        uint64_t v14 = type metadata accessor for Proto_Gpsd_Response(0LL);
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v14 + 24), a2, a3);
      }

      else if (result == 1)
      {
        uint64_t v13 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_Response(0LL) + 20);
        unint64_t v10 = sub_10028458C();
        uint64_t v11 = v13;
        uint64_t v12 = &type metadata for Proto_Gpsd_Request.TypeEnum;
        goto LABEL_5;
      }

uint64_t sub_10025BF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v10 = result;
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 61)
  {
    char v14 = *(_BYTE *)(v5 + *(int *)(result + 20));
    unint64_t v11 = sub_10028458C();
    uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v14,  1LL,  &type metadata for Proto_Gpsd_Request.TypeEnum,  v11,  a2,  a3);
  }

  if (!v4)
  {
    uint64_t v12 = v5 + *(int *)(v10 + 24);
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v12, 2LL, a2, a3);
    }
    if (*(_BYTE *)(v5 + *(int *)(v10 + 28)) != 10)
    {
      char v15 = *(_BYTE *)(v5 + *(int *)(v10 + 28));
      unint64_t v13 = sub_100015698();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v15,  3LL,  &type metadata for Proto_Gnss_Result,  v13,  a2,  a3);
    }

    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10025C0BC()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_Response, &qword_100364640, (uint64_t)&unk_1002DAC10);
}

uint64_t sub_10025C0D8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 61;
  uint64_t v6 = a2 + v5;
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + a1[7]) = 10;
  return result;
}

uint64_t sub_10025C124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025BE64(a1, a2, a3);
}

uint64_t sub_10025C138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025BF90(a1, a2, a3);
}

uint64_t sub_10025C14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367388, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAB88);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10025C19C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A40, (uint64_t)qword_10036B6A8, (uint64_t)sub_10025BC98, a1);
}

uint64_t sub_10025C1B8(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100351748, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAB10);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10025C1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100351748, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAB10);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10025C24C()
{
  return &unk_100345C70;
}

unint64_t sub_10025C258()
{
  return 0xD000000000000015LL;
}

uint64_t sub_10025C274()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B6C0);
  sub_10000E704(v0, (uint64_t)qword_10036B6C0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v66 = swift_allocObject(v1, v6 + 29 * v4, v5 | 7);
  *(_OWORD *)(v66 + 16) = xmmword_1002DA080;
  uint64_t v7 = v66 + v6;
  uint64_t v8 = v66 + v6 + *(int *)(v2 + 48);
  *(void *)(v66 + v6) = 1LL;
  *(void *)uint64_t v8 = "type";
  *(void *)(v8 + 8) = 4LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  unint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v66 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 2LL;
  *(void *)uint64_t v12 = "request_type";
  *(void *)(v12 + 8) = 12LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  unint64_t v13 = (void *)(v66 + v6 + 2 * v4);
  char v14 = (char *)v13 + *(int *)(v2 + 48);
  *unint64_t v13 = 3LL;
  *(void *)char v14 = "mach_continuous_time_ns";
  *((void *)v14 + 1) = 23LL;
  v14[16] = 2;
  v11();
  char v15 = (void *)(v66 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *char v15 = 4LL;
  *(void *)uint64_t v16 = "fix";
  *((void *)v16 + 1) = 3LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v66 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "meas";
  *((void *)v18 + 1) = 4LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v66 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)uint64_t v20 = "power_measurement";
  *((void *)v20 + 1) = 17LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v66 + v6 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 9LL;
  *(void *)uint64_t v22 = "status";
  *((void *)v22 + 1) = 6LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v66 + v6 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 10LL;
  *(void *)uint64_t v24 = "time_transfer_data_extend";
  *((void *)v24 + 1) = 25LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v66 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 16LL;
  *(void *)uint64_t v25 = "recovery_statistics";
  *(void *)(v25 + 8) = 19LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v66 + v6 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 17LL;
  *(void *)uint64_t v27 = "ltl_info_request";
  *((void *)v27 + 1) = 16LL;
  v27[16] = 2;
  v11();
  uint64_t v28 = (void *)(v66 + v6 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 18LL;
  *(void *)uint64_t v29 = "decoded_extended_ephemeris";
  *((void *)v29 + 1) = 26LL;
  v29[16] = 2;
  v11();
  uint64_t v30 = (void *)(v66 + v6 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 19LL;
  *(void *)uint64_t v31 = "decoded_rti";
  *((void *)v31 + 1) = 11LL;
  v31[16] = 2;
  v11();
  uint64_t v32 = (void *)(v66 + v6 + 12 * v4);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 48);
  *uint64_t v32 = 22LL;
  *(void *)uint64_t v33 = "start_status";
  *((void *)v33 + 1) = 12LL;
  v33[16] = 2;
  v11();
  uint64_t v34 = (void *)(v66 + v6 + 13 * v4);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 48);
  void *v34 = 20LL;
  *(void *)uint64_t v35 = "stop_status";
  *((void *)v35 + 1) = 11LL;
  v35[16] = 2;
  v11();
  uint64_t v36 = (void *)(v66 + v6 + 14 * v4);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 48);
  *uint64_t v36 = 21LL;
  *(void *)uint64_t v37 = "cntin_clock_control";
  *((void *)v37 + 1) = 19LL;
  v37[16] = 2;
  v11();
  uint64_t v38 = (void *)(v66 + v6 + 15 * v4);
  uint64_t v39 = (char *)v38 + *(int *)(v2 + 48);
  *uint64_t v38 = 23LL;
  *(void *)uint64_t v39 = "exception";
  *((void *)v39 + 1) = 9LL;
  v39[16] = 2;
  v11();
  uint64_t v40 = v66 + v6 + 16 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 16 * v4) = 25LL;
  *(void *)uint64_t v40 = "ask_baseband_reset";
  *(void *)(v40 + 8) = 18LL;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  uint64_t v41 = (void *)(v66 + v6 + 17 * v4);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 48);
  *uint64_t v41 = 30LL;
  *(void *)uint64_t v42 = "summary_report";
  *((void *)v42 + 1) = 14LL;
  v42[16] = 2;
  v11();
  uint64_t v43 = (void *)(v66 + v6 + 18 * v4);
  uint64_t v44 = (char *)v43 + *(int *)(v2 + 48);
  void *v43 = 40LL;
  *(void *)uint64_t v44 = "position_report";
  *((void *)v44 + 1) = 15LL;
  v44[16] = 2;
  v11();
  uint64_t v45 = (void *)(v66 + v6 + 19 * v4);
  uint64_t v46 = (char *)v45 + *(int *)(v2 + 48);
  void *v45 = 41LL;
  *(void *)uint64_t v46 = "cplane_measurement_report";
  *((void *)v46 + 1) = 25LL;
  v46[16] = 2;
  v11();
  uint64_t v47 = (void *)(v66 + v6 + 20 * v4);
  uint64_t v48 = (char *)v47 + *(int *)(v2 + 48);
  void *v47 = 42LL;
  *(void *)uint64_t v48 = "assistance_needed_report";
  *((void *)v48 + 1) = 24LL;
  v48[16] = 2;
  v11();
  uint64_t v49 = (void *)(v66 + v6 + 21 * v4);
  uint64_t v50 = (char *)v49 + *(int *)(v2 + 48);
  *uint64_t v49 = 43LL;
  *(void *)uint64_t v50 = "cell_ft_assistance_request";
  *((void *)v50 + 1) = 26LL;
  v50[16] = 2;
  v11();
  uint64_t v51 = (void *)(v66 + v6 + 22 * v4);
  uint64_t v52 = (char *)v51 + *(int *)(v2 + 48);
  *uint64_t v51 = 44LL;
  *(void *)uint64_t v52 = "cplane_measurement_report_with_estimate";
  *((void *)v52 + 1) = 39LL;
  v52[16] = 2;
  v11();
  uint64_t v53 = (void *)(v66 + v6 + 23 * v4);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 48);
  void *v53 = 50LL;
  *(void *)uint64_t v54 = "supl_session_status";
  *((void *)v54 + 1) = 19LL;
  v54[16] = 2;
  v11();
  uint64_t v55 = (void *)(v66 + v6 + 24 * v4);
  uint64_t v56 = (char *)v55 + *(int *)(v2 + 48);
  *uint64_t v55 = 51LL;
  *(void *)uint64_t v56 = "decoded_supl_init";
  *((void *)v56 + 1) = 17LL;
  v56[16] = 2;
  v11();
  uint64_t v57 = (void *)(v66 + v6 + 25 * v4);
  uint64_t v58 = (char *)v57 + *(int *)(v2 + 48);
  void *v57 = 52LL;
  *(void *)uint64_t v58 = "supl_init_index";
  *((void *)v58 + 1) = 15LL;
  v58[16] = 2;
  v11();
  uint64_t v59 = (void *)(v66 + v6 + 26 * v4);
  uint64_t v60 = (char *)v59 + *(int *)(v2 + 48);
  *uint64_t v59 = 53LL;
  *(void *)uint64_t v60 = "supl_init_decode_result";
  *((void *)v60 + 1) = 23LL;
  v60[16] = 2;
  v11();
  uint64_t v61 = (void *)(v66 + v6 + 27 * v4);
  uint64_t v62 = (char *)v61 + *(int *)(v2 + 48);
  *uint64_t v61 = 54LL;
  *(void *)uint64_t v62 = "sim_instance";
  *((void *)v62 + 1) = 12LL;
  v62[16] = 2;
  v11();
  uint64_t v63 = (void *)(v66 + v6 + 28 * v4);
  uint64_t v64 = (char *)v63 + *(int *)(v2 + 48);
  *uint64_t v63 = 55LL;
  *(void *)uint64_t v64 = "wlan_measurement_request";
  *((void *)v64 + 1) = 24LL;
  v64[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v66);
}

uint64_t sub_10025C984()
{
  return sub_100008C30(&qword_1003B6A48, (uint64_t)qword_10036B6C0, (uint64_t)sub_10025C274);
}

uint64_t sub_10025C9A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A48, (uint64_t)qword_10036B6C0, (uint64_t)sub_10025C274, a1);
}

uint64_t sub_10025C9BC()
{
  uint64_t v0 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_WORD *)(v1 + 16) = 15640;
  *(void *)(v1 + 24) = 0LL;
  *(_BYTE *)(v1 + 32) = 1;
  uint64_t v2 = v1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  uint64_t v3 = type metadata accessor for Proto_Gnss_Fix(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))(v2, 1LL, 1LL, v3);
  uint64_t v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  uint64_t v5 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  uint64_t v7 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Status(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))(v8, 1LL, 1LL, v9);
  uint64_t v10 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  uint64_t v11 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  uint64_t v12 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  uint64_t v13 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  uint64_t v14 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  uint64_t v15 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v14, 1LL, 1LL, v15);
  uint64_t v16 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  uint64_t v17 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56LL))(v16, 1LL, 1LL, v17);
  uint64_t v18 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  uint64_t v19 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL))(v18, 1LL, 1LL, v19);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus) = 10;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus) = 10;
  uint64_t v20 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  uint64_t v21 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v20, 1LL, 1LL, v21);
  uint64_t v22 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  uint64_t v23 = type metadata accessor for Proto_Gpsd_Exception(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56LL))(v22, 1LL, 1LL, v23);
  uint64_t v24 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  uint64_t v25 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v24, 1LL, 1LL, v25);
  uint64_t v26 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v26, 1LL, 1LL, v27);
  uint64_t v28 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  uint64_t v29 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56LL))(v28, 1LL, 1LL, v29);
  uint64_t v30 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  uint64_t v31 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v30, 1LL, 1LL, v31);
  uint64_t v32 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  uint64_t v33 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v32, 1LL, 1LL, v33);
  uint64_t v34 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  uint64_t v35 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v34, 1LL, 1LL, v35);
  uint64_t v36 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  uint64_t v37 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56LL))(v36, 1LL, 1LL, v37);
  uint64_t v38 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  uint64_t v39 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v38, 1LL, 1LL, v39);
  uint64_t v40 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  uint64_t v41 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v40, 1LL, 1LL, v41);
  uint64_t v42 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  *(_DWORD *)uint64_t v42 = 0;
  *(_BYTE *)(v42 + 4) = 1;
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult) = 4;
  uint64_t v43 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  *(_DWORD *)uint64_t v43 = 0;
  *(_BYTE *)(v43 + 4) = 1;
  uint64_t v44 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  uint64_t v45 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))( v44,  1LL,  1LL,  v45);
  qword_1003B6A58 = v1;
  return result;
}

uint64_t sub_10025CE54(uint64_t a1)
{
  uint64_t v3 = sub_100003A0C(&qword_100364608);
  __chkstk_darwin(v3);
  uint64_t v208 = (uint64_t)&v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100003A0C(&qword_100364600);
  __chkstk_darwin(v5);
  uint64_t v207 = (uint64_t)&v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_100003A0C(&qword_1003645F8);
  __chkstk_darwin(v7);
  uint64_t v206 = (uint64_t)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100003A0C(&qword_1003645F0);
  __chkstk_darwin(v9);
  uint64_t v205 = (uint64_t)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_1003645E8);
  __chkstk_darwin(v11);
  uint64_t v204 = (uint64_t)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_100003A0C(&qword_1003645E0);
  __chkstk_darwin(v13);
  uint64_t v203 = (uint64_t)&v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_100003A0C(&qword_1003645D8);
  __chkstk_darwin(v15);
  uint64_t v202 = (uint64_t)&v164 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100003A0C(&qword_1003645D0);
  __chkstk_darwin(v17);
  uint64_t v201 = (uint64_t)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100003A0C(&qword_1003645C8);
  __chkstk_darwin(v19);
  uint64_t v200 = (uint64_t)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100003A0C(&qword_1003645C0);
  __chkstk_darwin(v21);
  uint64_t v199 = (uint64_t)&v164 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100003A0C(&qword_1003645B8);
  __chkstk_darwin(v23);
  uint64_t v198 = (uint64_t)&v164 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_100003A0C(&qword_1003645B0);
  __chkstk_darwin(v25);
  uint64_t v197 = (uint64_t)&v164 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_100003A0C(&qword_1003645A8);
  __chkstk_darwin(v27);
  uint64_t v195 = (uint64_t)&v164 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_100003A0C(&qword_1003645A0);
  __chkstk_darwin(v29);
  uint64_t v191 = (uint64_t)&v164 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_100003A0C(&qword_100364598);
  __chkstk_darwin(v31);
  uint64_t v188 = (uint64_t)&v164 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v33 = sub_100003A0C(&qword_100364590);
  __chkstk_darwin(v33);
  uint64_t v184 = (uint64_t)&v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_100003A0C(&qword_100364588);
  __chkstk_darwin(v35);
  uint64_t v180 = (uint64_t)&v164 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v37 = sub_100003A0C(&qword_100364580);
  __chkstk_darwin(v37);
  uint64_t v175 = (uint64_t)&v164 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = sub_100003A0C(&qword_100364578);
  __chkstk_darwin(v39);
  uint64_t v171 = (uint64_t)&v164 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_100003A0C(&qword_100364570);
  __chkstk_darwin(v41);
  uint64_t v167 = (uint64_t)&v164 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v43 = sub_100003A0C(&qword_100364568);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v164 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(_WORD *)(v1 + 16) = 15640;
  *(void *)(v1 + 24) = 0LL;
  uint64_t v165 = v1 + 17;
  *(_BYTE *)(v1 + 32) = 1;
  uint64_t v46 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  uint64_t v47 = type metadata accessor for Proto_Gnss_Fix(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v46, 1LL, 1LL, v47);
  uint64_t v48 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  uint64_t v49 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56LL))(v48, 1LL, 1LL, v49);
  uint64_t v50 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  uint64_t v51 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56LL))(v50, 1LL, 1LL, v51);
  uint64_t v52 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  uint64_t v166 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  uint64_t v53 = type metadata accessor for Proto_Gpsd_Status(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56LL))(v52, 1LL, 1LL, v53);
  uint64_t v54 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  uint64_t v168 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  uint64_t v55 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56LL))(v54, 1LL, 1LL, v55);
  uint64_t v56 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  uint64_t v169 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  uint64_t v57 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56LL))(v56, 1LL, 1LL, v57);
  uint64_t v58 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  uint64_t v170 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  uint64_t v59 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56LL))(v58, 1LL, 1LL, v59);
  uint64_t v60 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  uint64_t v172 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  uint64_t v61 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56LL))(v60, 1LL, 1LL, v61);
  uint64_t v62 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  uint64_t v173 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  uint64_t v63 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56LL))(v62, 1LL, 1LL, v63);
  uint64_t v174 = (_BYTE *)(v1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  *(_BYTE *)(v1
           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus) = 10;
  uint64_t v64 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  _BYTE *v64 = 10;
  uint64_t v65 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  uint64_t v176 = v64;
  uint64_t v177 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  uint64_t v66 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56LL))(v65, 1LL, 1LL, v66);
  uint64_t v67 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  uint64_t v178 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  uint64_t v68 = type metadata accessor for Proto_Gpsd_Exception(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56LL))(v67, 1LL, 1LL, v68);
  uint64_t v69 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  uint64_t v179 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  uint64_t v70 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))(v69, 1LL, 1LL, v70);
  uint64_t v71 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  uint64_t v181 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  uint64_t v72 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56LL))(v71, 1LL, 1LL, v72);
  uint64_t v73 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  uint64_t v182 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  uint64_t v74 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56LL))(v73, 1LL, 1LL, v74);
  uint64_t v75 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  uint64_t v183 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  uint64_t v76 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56LL))(v75, 1LL, 1LL, v76);
  uint64_t v77 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  uint64_t v185 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  uint64_t v78 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56LL))(v77, 1LL, 1LL, v78);
  uint64_t v79 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  uint64_t v186 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  uint64_t v80 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56LL))(v79, 1LL, 1LL, v80);
  uint64_t v81 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  uint64_t v187 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  uint64_t v82 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56LL))(v81, 1LL, 1LL, v82);
  uint64_t v83 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  uint64_t v189 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  uint64_t v84 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56LL))(v83, 1LL, 1LL, v84);
  uint64_t v85 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  uint64_t v190 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  uint64_t v86 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56LL))(v85, 1LL, 1LL, v86);
  uint64_t v87 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  uint64_t v192 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  *(_DWORD *)uint64_t v87 = 0;
  *(_BYTE *)(v87 + 4) = 1;
  uint64_t v88 = (_BYTE *)(v1
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  *uint64_t v88 = 4;
  uint64_t v89 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  uint64_t v193 = v88;
  uint64_t v194 = v89;
  *(_DWORD *)uint64_t v89 = 0;
  *(_BYTE *)(v89 + 4) = 1;
  uint64_t v90 = v1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  uint64_t v196 = v1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  uint64_t v91 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56LL))(v90, 1LL, 1LL, v91);
  swift_beginAccess(a1 + 16, v246, 0LL, 0LL);
  LOBYTE(v90) = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v1 + 16, v245, 1LL, 0LL);
  *(_BYTE *)(v1 + 16) = v90;
  swift_beginAccess(a1 + 17, v244, 0LL, 0LL);
  char v92 = *(_BYTE *)(a1 + 17);
  swift_beginAccess(v165, v243, 1LL, 0LL);
  *(_BYTE *)(v1 + 17) = v92;
  swift_beginAccess(a1 + 24, v242, 0LL, 0LL);
  uint64_t v93 = *(void *)(a1 + 24);
  LOBYTE(v90) = *(_BYTE *)(a1 + 32);
  swift_beginAccess(v1 + 24, v241, 1LL, 0LL);
  *(void *)(v1 + 24) = v93;
  *(_BYTE *)(v1 + 32) = v90;
  uint64_t v94 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  v240,  0LL,  0LL);
  sub_10000E6C0(v94, (uint64_t)v45, &qword_100364568);
  swift_beginAccess(v46, v239, 33LL, 0LL);
  sub_10000E5D4((uint64_t)v45, v46, &qword_100364568);
  swift_endAccess(v239);
  uint64_t v95 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas,  v239,  0LL,  0LL);
  uint64_t v96 = v167;
  sub_10000E6C0(v95, v167, &qword_100364570);
  swift_beginAccess(v48, v238, 33LL, 0LL);
  sub_10000E5D4(v96, v48, &qword_100364570);
  swift_endAccess(v238);
  uint64_t v97 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  v238,  0LL,  0LL);
  uint64_t v98 = v171;
  sub_10000E6C0(v97, v171, &qword_100364578);
  swift_beginAccess(v50, v237, 33LL, 0LL);
  sub_10000E5D4(v98, v50, &qword_100364578);
  swift_endAccess(v237);
  uint64_t v99 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  v237,  0LL,  0LL);
  uint64_t v100 = v175;
  sub_10000E6C0(v99, v175, &qword_100364580);
  uint64_t v101 = v166;
  swift_beginAccess(v166, v236, 33LL, 0LL);
  sub_10000E5D4(v100, v101, &qword_100364580);
  swift_endAccess(v236);
  uint64_t v102 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  v236,  0LL,  0LL);
  uint64_t v103 = v180;
  sub_10000E6C0(v102, v180, &qword_100364588);
  uint64_t v104 = v168;
  swift_beginAccess(v168, v235, 33LL, 0LL);
  sub_10000E5D4(v103, v104, &qword_100364588);
  swift_endAccess(v235);
  uint64_t v105 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  v235,  0LL,  0LL);
  uint64_t v106 = v184;
  sub_10000E6C0(v105, v184, &qword_100364590);
  uint64_t v107 = v169;
  swift_beginAccess(v169, v234, 33LL, 0LL);
  sub_10000E5D4(v106, v107, &qword_100364590);
  swift_endAccess(v234);
  uint64_t v108 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  v234,  0LL,  0LL);
  uint64_t v109 = v188;
  sub_10000E6C0(v108, v188, &qword_100364598);
  uint64_t v110 = v170;
  swift_beginAccess(v170, v233, 33LL, 0LL);
  sub_10000E5D4(v109, v110, &qword_100364598);
  swift_endAccess(v233);
  uint64_t v111 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  v233,  0LL,  0LL);
  uint64_t v112 = v191;
  sub_10000E6C0(v111, v191, &qword_1003645A0);
  uint64_t v113 = v172;
  swift_beginAccess(v172, v232, 33LL, 0LL);
  sub_10000E5D4(v112, v113, &qword_1003645A0);
  swift_endAccess(v232);
  uint64_t v114 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  v232,  0LL,  0LL);
  uint64_t v115 = v195;
  sub_10000E6C0(v114, v195, &qword_1003645A8);
  uint64_t v116 = v173;
  swift_beginAccess(v173, v231, 33LL, 0LL);
  sub_10000E5D4(v115, v116, &qword_1003645A8);
  swift_endAccess(v231);
  uint64_t v117 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus,  v231,  0LL,  0LL);
  LOBYTE(v117) = *v117;
  uint64_t v118 = v174;
  swift_beginAccess(v174, &v230, 1LL, 0LL);
  _BYTE *v118 = (_BYTE)v117;
  uint64_t v119 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus,  &v229,  0LL,  0LL);
  LOBYTE(v119) = *v119;
  uint64_t v120 = v176;
  swift_beginAccess(v176, &v228, 1LL, 0LL);
  *uint64_t v120 = (_BYTE)v119;
  uint64_t v121 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  &v227,  0LL,  0LL);
  uint64_t v122 = v197;
  sub_10000E6C0(v121, v197, &qword_1003645B0);
  uint64_t v123 = v177;
  swift_beginAccess(v177, v226, 33LL, 0LL);
  sub_10000E5D4(v122, v123, &qword_1003645B0);
  swift_endAccess(v226);
  uint64_t v124 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  v226,  0LL,  0LL);
  uint64_t v125 = v198;
  sub_10000E6C0(v124, v198, &qword_1003645B8);
  uint64_t v126 = v178;
  swift_beginAccess(v178, v225, 33LL, 0LL);
  sub_10000E5D4(v125, v126, &qword_1003645B8);
  swift_endAccess(v225);
  uint64_t v127 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  v225,  0LL,  0LL);
  uint64_t v128 = v199;
  sub_10000E6C0(v127, v199, &qword_1003645C0);
  uint64_t v129 = v179;
  swift_beginAccess(v179, v224, 33LL, 0LL);
  sub_10000E5D4(v128, v129, &qword_1003645C0);
  swift_endAccess(v224);
  uint64_t v130 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  v224,  0LL,  0LL);
  uint64_t v131 = v200;
  sub_10000E6C0(v130, v200, &qword_1003645C8);
  uint64_t v132 = v181;
  swift_beginAccess(v181, v223, 33LL, 0LL);
  sub_10000E5D4(v131, v132, &qword_1003645C8);
  swift_endAccess(v223);
  uint64_t v133 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  v223,  0LL,  0LL);
  uint64_t v134 = v201;
  sub_10000E6C0(v133, v201, &qword_1003645D0);
  uint64_t v135 = v182;
  swift_beginAccess(v182, v222, 33LL, 0LL);
  sub_10000E5D4(v134, v135, &qword_1003645D0);
  swift_endAccess(v222);
  uint64_t v136 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  v222,  0LL,  0LL);
  uint64_t v137 = v202;
  sub_10000E6C0(v136, v202, &qword_1003645D8);
  uint64_t v138 = v183;
  swift_beginAccess(v183, v221, 33LL, 0LL);
  sub_10000E5D4(v137, v138, &qword_1003645D8);
  swift_endAccess(v221);
  uint64_t v139 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  v221,  0LL,  0LL);
  uint64_t v140 = v203;
  sub_10000E6C0(v139, v203, &qword_1003645E0);
  uint64_t v141 = v185;
  swift_beginAccess(v185, v220, 33LL, 0LL);
  sub_10000E5D4(v140, v141, &qword_1003645E0);
  swift_endAccess(v220);
  uint64_t v142 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  v220,  0LL,  0LL);
  uint64_t v143 = v204;
  sub_10000E6C0(v142, v204, &qword_1003645E8);
  uint64_t v144 = v186;
  swift_beginAccess(v186, v219, 33LL, 0LL);
  sub_10000E5D4(v143, v144, &qword_1003645E8);
  swift_endAccess(v219);
  uint64_t v145 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  v219,  0LL,  0LL);
  uint64_t v146 = v205;
  sub_10000E6C0(v145, v205, &qword_1003645F0);
  uint64_t v147 = v187;
  swift_beginAccess(v187, v218, 33LL, 0LL);
  sub_10000E5D4(v146, v147, &qword_1003645F0);
  swift_endAccess(v218);
  uint64_t v148 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  v218,  0LL,  0LL);
  uint64_t v149 = v206;
  sub_10000E6C0(v148, v206, &qword_1003645F8);
  uint64_t v150 = v189;
  swift_beginAccess(v189, v217, 33LL, 0LL);
  sub_10000E5D4(v149, v150, &qword_1003645F8);
  swift_endAccess(v217);
  uint64_t v151 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  v217,  0LL,  0LL);
  uint64_t v152 = v207;
  sub_10000E6C0(v151, v207, &qword_100364600);
  uint64_t v153 = v190;
  swift_beginAccess(v190, v216, 33LL, 0LL);
  sub_10000E5D4(v152, v153, &qword_100364600);
  swift_endAccess(v216);
  uint64_t v154 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex,  v216,  0LL,  0LL);
  LODWORD(v152) = *(_DWORD *)v154;
  LOBYTE(v154) = *(_BYTE *)(v154 + 4);
  uint64_t v155 = v192;
  swift_beginAccess(v192, &v215, 1LL, 0LL);
  *(_DWORD *)uint64_t v155 = v152;
  *(_BYTE *)(v155 + 4) = v154;
  uint64_t v156 = (_BYTE *)(a1
                 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult,  &v214,  0LL,  0LL);
  LOBYTE(v156) = *v156;
  uint64_t v157 = v193;
  swift_beginAccess(v193, &v213, 1LL, 0LL);
  _BYTE *v157 = (_BYTE)v156;
  uint64_t v158 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance,  &v212,  0LL,  0LL);
  LODWORD(v157) = *(_DWORD *)v158;
  LOBYTE(v158) = *(_BYTE *)(v158 + 4);
  uint64_t v159 = v194;
  swift_beginAccess(v194, &v211, 1LL, 0LL);
  *(_DWORD *)uint64_t v159 = (_DWORD)v157;
  *(_BYTE *)(v159 + 4) = v158;
  uint64_t v160 = a1
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  &v210,  0LL,  0LL);
  uint64_t v161 = v208;
  sub_10000E6C0(v160, v208, &qword_100364608);
  swift_release(a1);
  uint64_t v162 = v196;
  swift_beginAccess(v196, v209, 33LL, 0LL);
  sub_10000E5D4(v161, v162, &qword_100364608);
  swift_endAccess(v209);
  return v1;
}

uint64_t sub_10025E310()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10025E528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v8 = *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v8)) & 1) == 0)
  {
    uint64_t v9 = *(void *)(v3 + v8);
    uint64_t v10 = type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
    uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
    uint64_t v12 = swift_retain(v9);
    sub_10025CE54(v12);
    uint64_t v13 = *(void *)(v5 + v8);
    *(void *)(v5 + v8) = v11;
    swift_release(v13);
  }

  uint64_t v14 = *(void *)(v5 + v8);
  swift_retain(v14);
  uint64_t v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v17 = v4;
  if (!v4)
  {
    uint64_t v35 = v14 + 24;
    while ((v16 & 1) == 0)
    {
      switch(v15)
      {
        case 1LL:
          swift_beginAccess(v14 + 16, v34, 33LL, 0LL);
          unint64_t v19 = sub_100284548();
          uint64_t v20 = &type metadata for Proto_Gpsd_Indication.TypeEnum;
          uint64_t v21 = v14 + 16;
          goto LABEL_37;
        case 2LL:
          uint64_t v22 = v14 + 17;
          swift_beginAccess(v14 + 17, v34, 33LL, 0LL);
          unint64_t v19 = sub_10028458C();
          uint64_t v20 = &type metadata for Proto_Gpsd_Request.TypeEnum;
          goto LABEL_36;
        case 3LL:
          uint64_t v23 = v35;
          swift_beginAccess(v35, v34, 33LL, 0LL);
          uint64_t v24 = v17;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v23, a2, a3);
          goto LABEL_42;
        case 4LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Fix(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Fix;
          uint64_t v28 = &qword_1003633C0;
          uint64_t v29 = &unk_1002D8440;
          goto LABEL_41;
        case 5LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
          uint64_t v27 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents;
          uint64_t v28 = &qword_100352138;
          uint64_t v29 = &unk_1002B9894;
          goto LABEL_41;
        case 6LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_PwrMeasurement;
          uint64_t v28 = &qword_100363450;
          uint64_t v29 = &unk_1002D8CB0;
          goto LABEL_41;
        case 9LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gpsd_Status(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gpsd_Status;
          uint64_t v28 = (unint64_t *)&unk_1003648B0;
          uint64_t v29 = &unk_1002DAE08;
          goto LABEL_41;
        case 10LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend;
          uint64_t v28 = &qword_1003633F0;
          uint64_t v29 = &unk_1002D8710;
          goto LABEL_41;
        case 16LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gpsd_RecoveryStatistics;
          uint64_t v28 = (unint64_t *)&unk_100364B20;
          uint64_t v29 = &unk_1002DD298;
          goto LABEL_41;
        case 17LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gpsd_LtlInfoRequest;
          uint64_t v28 = (unint64_t *)&unk_100364B60;
          uint64_t v29 = &unk_1002DD6D0;
          goto LABEL_41;
        case 18LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris;
          uint64_t v28 = &qword_100363480;
          uint64_t v29 = &unk_1002D8FA8;
          goto LABEL_41;
        case 19LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_DecodedRti;
          uint64_t v28 = &qword_100363468;
          uint64_t v29 = &unk_1002D8E40;
          goto LABEL_41;
        case 20LL:
          uint64_t v30 = OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus;
          goto LABEL_23;
        case 21LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gpsd_CntinClockControl;
          uint64_t v28 = (unint64_t *)&unk_100364C08;
          uint64_t v29 = &unk_1002DE0A8;
          goto LABEL_41;
        case 22LL:
          uint64_t v30 = OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus;
LABEL_23:
          uint64_t v22 = v14 + v30;
          swift_beginAccess(v14 + v30, v34, 33LL, 0LL);
          unint64_t v19 = sub_100015698();
          uint64_t v20 = &type metadata for Proto_Gnss_Result;
          goto LABEL_36;
        case 23LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gpsd_Exception(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gpsd_Exception;
          uint64_t v28 = (unint64_t *)&unk_100364C20;
          uint64_t v29 = &unk_1002DE210;
          goto LABEL_41;
        case 25LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gpsd_AskBasebandReset;
          uint64_t v28 = (unint64_t *)&unk_100364C38;
          uint64_t v29 = &unk_1002DE378;
          goto LABEL_41;
        case 30LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport;
          uint64_t v28 = &qword_10035D1C8;
          uint64_t v29 = &unk_1002CCE08;
          goto LABEL_41;
        case 40LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_PositionReport;
          uint64_t v28 = &qword_10035D648;
          uint64_t v29 = &unk_1002D1458;
          goto LABEL_41;
        case 41LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport;
          uint64_t v28 = &qword_10035D6E8;
          uint64_t v29 = &unk_1002D1E30;
          goto LABEL_41;
        case 42LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport;
          uint64_t v28 = &qword_10035D7B0;
          uint64_t v29 = &unk_1002D2AD8;
          goto LABEL_41;
        case 43LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest;
          uint64_t v28 = &qword_10035D948;
          uint64_t v29 = &unk_1002D4428;
          goto LABEL_41;
        case 44LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate;
          uint64_t v28 = &qword_10035DA08;
          uint64_t v29 = &unk_1002D4F68;
          goto LABEL_41;
        case 50LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus;
          uint64_t v28 = &qword_10035D310;
          uint64_t v29 = &unk_1002CE320;
          goto LABEL_41;
        case 51LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_Init;
          uint64_t v28 = &qword_10035D2E0;
          uint64_t v29 = &unk_1002CE050;
          goto LABEL_41;
        case 52LL:
          uint64_t v31 = OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
          goto LABEL_39;
        case 53LL:
          uint64_t v22 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult,  v34,  33LL,  0LL);
          unint64_t v19 = sub_10028469C();
          uint64_t v20 = &type metadata for Proto_Gpsd_SuplInitDecodeResult;
LABEL_36:
          uint64_t v21 = v22;
LABEL_37:
          uint64_t v24 = v17;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v21, v20, v19, a2, a3);
          goto LABEL_42;
        case 54LL:
          uint64_t v31 = OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
LABEL_39:
          uint64_t v32 = v14 + v31;
          swift_beginAccess(v14 + v31, v34, 33LL, 0LL);
          uint64_t v24 = v17;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v32, a2, a3);
          goto LABEL_42;
        case 55LL:
          uint64_t v25 = v14
              + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
          swift_beginAccess( v14 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  v34,  33LL,  0LL);
          uint64_t v26 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
          uint64_t v27 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest;
          uint64_t v28 = &qword_10035D240;
          uint64_t v29 = &unk_1002CD678;
LABEL_41:
          uint64_t v33 = sub_10000FD98(v28, v27, (uint64_t)v29);
          uint64_t v24 = v17;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v25, v26, v33, a2, a3);
LABEL_42:
          uint64_t v17 = v24;
          swift_endAccess(v34);
          break;
        default:
          break;
      }

      uint64_t v15 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return swift_release(v14);
}

uint64_t sub_10025EDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_Indication(0LL) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, &v21, 0LL, 0LL);
  if (*(_BYTE *)(v9 + 16) != 24)
  {
    v28[0] = *(_BYTE *)(v9 + 16);
    unint64_t v10 = sub_100284548();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v28,  1LL,  &type metadata for Proto_Gpsd_Indication.TypeEnum,  v10,  a2,  a3);
  }

  if (v4) {
    return swift_release(v9);
  }
  swift_beginAccess(v9 + 17, v22, 0LL, 0LL);
  if (*(_BYTE *)(v9 + 17) != 61)
  {
    v28[0] = *(_BYTE *)(v9 + 17);
    unint64_t v12 = sub_10028458C();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v28,  2LL,  &type metadata for Proto_Gpsd_Request.TypeEnum,  v12,  a2,  a3);
  }

  swift_beginAccess(v9 + 24, v23, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 32) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)(v9 + 24), 3LL, a2, a3);
  }
  sub_10025F3A4(v9, a1, a2, a3);
  sub_10025F530(v9, a1, a2, a3);
  sub_10025F6BC(v9, a1, a2, a3);
  sub_10025F848(v9, a1, a2, a3);
  sub_10025F9D4(v9, a1, a2, a3);
  sub_10025FB60(v9, a1, a2, a3);
  sub_10025FCEC(v9, a1, a2, a3);
  sub_10025FE78(v9, a1, a2, a3);
  sub_100260004(v9, a1, a2, a3);
  uint64_t v13 = (_BYTE *)(v9
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus,  v28,  0LL,  0LL);
  if (*v13 != 10)
  {
    v27[0] = *v13;
    unint64_t v14 = sub_100015698();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v27,  20LL,  &type metadata for Proto_Gnss_Result,  v14,  a2,  a3);
  }

  sub_100260190(v9, a1, a2, a3);
  uint64_t v15 = (_BYTE *)(v9
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus,  v27,  0LL,  0LL);
  if (*v15 != 10)
  {
    v26[0] = *v15;
    unint64_t v16 = sub_100015698();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v26,  22LL,  &type metadata for Proto_Gnss_Result,  v16,  a2,  a3);
  }

  sub_10026031C(v9, a1, a2, a3);
  sub_1002604A8(v9, a1, a2, a3);
  sub_100260634(v9, a1, a2, a3);
  sub_1002607C0(v9, a1, a2, a3);
  sub_10026094C(v9, a1, a2, a3);
  sub_100260AD8(v9, a1, a2, a3);
  sub_100260C64(v9, a1, a2, a3);
  sub_100260DF0(v9, a1, a2, a3);
  sub_100260F7C(v9, a1, a2, a3);
  sub_100261108(v9, a1, a2, a3);
  uint64_t v17 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex,  v26,  0LL,  0LL);
  if ((v17[1] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v17, 52LL, a2, a3);
  }
  uint64_t v18 = (_BYTE *)(v9
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult,  v25,  0LL,  0LL);
  if (*v18 != 4)
  {
    v24[0] = *v18;
    unint64_t v19 = sub_10028469C();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( v24,  53LL,  &type metadata for Proto_Gpsd_SuplInitDecodeResult,  v19,  a2,  a3);
  }

  uint64_t v20 = (unsigned int *)(v9
                       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
  swift_beginAccess( v9 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance,  v24,  0LL,  0LL);
  if ((v20[1] & 1) == 0) {
    dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v20, 54LL, a2, a3);
  }
  sub_100261294(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10025F3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364568);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Fix(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364568);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Fix);
  uint64_t v15 = sub_10000FD98(&qword_1003633C0, type metadata accessor for Proto_Gnss_Fix, (uint64_t)&unk_1002D8440);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Fix);
}

uint64_t sub_10025F530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364570);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__meas;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364570);
  sub_100003E68( (uint64_t)v8,  (uint64_t)v12,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  uint64_t v15 = sub_10000FD98( &qword_100352138,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents,  (uint64_t)&unk_1002B9894);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5LL, v9, v15, a3, v18);
  return sub_100004090( (uint64_t)v12,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
}

uint64_t sub_10025F6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364578);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364578);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_PwrMeasurement);
  uint64_t v15 = sub_10000FD98(&qword_100363450, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8CB0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_PwrMeasurement);
}

uint64_t sub_10025F848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364580);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Status(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364580);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_Status);
  uint64_t v15 = sub_10000FD98(&qword_1003648B0, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAE08);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 9LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_Status);
}

uint64_t sub_10025F9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364588);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364588);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  uint64_t v15 = sub_10000FD98( &qword_1003633F0,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8710);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 10LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
}

uint64_t sub_10025FB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364590);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364590);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  uint64_t v15 = sub_10000FD98( &qword_100364B20,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD298);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 16LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t sub_10025FCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364598);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364598);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  uint64_t v15 = sub_10000FD98(&qword_100364B60, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD6D0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 17LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t sub_10025FE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645A0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645A0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  uint64_t v15 = sub_10000FD98( &qword_100363480,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D8FA8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 18LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
}

uint64_t sub_100260004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645A8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645A8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_DecodedRti);
  uint64_t v15 = sub_10000FD98(&qword_100363468, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8E40);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 19LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_DecodedRti);
}

uint64_t sub_100260190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645B0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645B0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_CntinClockControl);
  uint64_t v15 = sub_10000FD98( &qword_100364C08,  type metadata accessor for Proto_Gpsd_CntinClockControl,  (uint64_t)&unk_1002DE0A8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 21LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t sub_10026031C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645B8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Exception(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645B8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_Exception);
  uint64_t v15 = sub_10000FD98(&qword_100364C20, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE210);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 23LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_Exception);
}

uint64_t sub_1002604A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645C0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645C0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  uint64_t v15 = sub_10000FD98(&qword_100364C38, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&unk_1002DE378);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 25LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_100260634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645C8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645C8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  uint64_t v15 = sub_10000FD98( &qword_10035D1C8,  type metadata accessor for Proto_Gnss_Emergency_SummaryReport,  (uint64_t)&unk_1002CCE08);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 30LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
}

uint64_t sub_1002607C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645D0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645D0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  uint64_t v15 = sub_10000FD98( &qword_10035D648,  type metadata accessor for Proto_Gnss_Emergency_PositionReport,  (uint64_t)&unk_1002D1458);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 40LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
}

uint64_t sub_10026094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645D8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645D8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  uint64_t v15 = sub_10000FD98( &qword_10035D6E8,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReport,  (uint64_t)&unk_1002D1E30);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 41LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
}

uint64_t sub_100260AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645E0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645E0);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  uint64_t v15 = sub_10000FD98( &qword_10035D7B0,  type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport,  (uint64_t)&unk_1002D2AD8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 42LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
}

uint64_t sub_100260C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645E8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645E8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  uint64_t v15 = sub_10000FD98( &qword_10035D948,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest,  (uint64_t)&unk_1002D4428);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 43LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
}

uint64_t sub_100260DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645F0);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645F0);
  sub_100003E68( (uint64_t)v8,  (uint64_t)v12,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  uint64_t v15 = sub_10000FD98( &qword_10035DA08,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate,  (uint64_t)&unk_1002D4F68);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 44LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
}

uint64_t sub_100260F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_1003645F8);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_1003645F8);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  uint64_t v15 = sub_10000FD98( &qword_10035D310,  type metadata accessor for Proto_Gnss_Emergency_SessionStatus,  (uint64_t)&unk_1002CE320);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 50LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
}

uint64_t sub_100261108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364600);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364600);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Init);
  uint64_t v15 = sub_10000FD98(&qword_10035D2E0, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002CE050);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 51LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_Init);
}

uint64_t sub_100261294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364608);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364608);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  uint64_t v15 = sub_10000FD98( &qword_10035D240,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest,  (uint64_t)&unk_1002CD678);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 55LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
}

uint64_t sub_100261420(uint64_t a1, uint64_t a2)
{
  return sub_100065AC0( a1,  a2,  type metadata accessor for Proto_Gpsd_Indication,  (uint64_t (*)(uint64_t, uint64_t))sub_100261448) & 1;
}

BOOL sub_100261448(uint64_t a1, uint64_t a2)
{
  uint64_t v462 = type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest(0LL);
  uint64_t v458 = *(void *)(v462 - 8);
  __chkstk_darwin(v462);
  uint64_t v461 = (uint64_t)&v401 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v457 = sub_100003A0C(&qword_1003673F0);
  __chkstk_darwin(v457);
  uint64_t v463 = (uint64_t)&v401 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100003A0C(&qword_100364608);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v460 = (uint64_t)&v401 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v459 = (uint64_t)&v401 - v9;
  uint64_t v455 = type metadata accessor for Proto_Gnss_Emergency_Init(0LL);
  uint64_t v451 = *(void *)(v455 - 8);
  __chkstk_darwin(v455);
  uint64_t v454 = (uint64_t)&v401 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v450 = sub_100003A0C(&qword_1003673F8);
  __chkstk_darwin(v450);
  uint64_t v456 = (uint64_t)&v401 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100003A0C(&qword_100364600);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v453 = (uint64_t)&v401 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13);
  uint64_t v452 = (uint64_t)&v401 - v15;
  uint64_t v448 = type metadata accessor for Proto_Gnss_Emergency_SessionStatus(0LL);
  uint64_t v444 = *(void *)(v448 - 8);
  __chkstk_darwin(v448);
  uint64_t v447 = (uint64_t)&v401 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v443 = sub_100003A0C(&qword_100367400);
  __chkstk_darwin(v443);
  uint64_t v449 = (uint64_t)&v401 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_100003A0C(&qword_1003645F8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v446 = (uint64_t)&v401 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v445 = (uint64_t)&v401 - v21;
  uint64_t v441 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate(0LL);
  uint64_t v437 = *(void *)(v441 - 8);
  __chkstk_darwin(v441);
  uint64_t v440 = (uint64_t)&v401 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v436 = sub_100003A0C(&qword_100367408);
  __chkstk_darwin(v436);
  uint64_t v442 = (uint64_t)&v401 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = sub_100003A0C(&qword_1003645F0);
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v439 = (uint64_t)&v401 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v25);
  uint64_t v438 = (uint64_t)&v401 - v27;
  uint64_t v434 = type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest(0LL);
  uint64_t v430 = *(void *)(v434 - 8);
  __chkstk_darwin(v434);
  uint64_t v433 = (uint64_t)&v401 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v429 = sub_100003A0C(&qword_100367410);
  __chkstk_darwin(v429);
  uint64_t v435 = (uint64_t)&v401 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_100003A0C(&qword_1003645E8);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v432 = (uint64_t)&v401 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v31);
  uint64_t v431 = (uint64_t)&v401 - v33;
  uint64_t v427 = type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport(0LL);
  uint64_t v423 = *(void *)(v427 - 8);
  __chkstk_darwin(v427);
  uint64_t v426 = (uint64_t)&v401 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v422 = sub_100003A0C(&qword_100367418);
  __chkstk_darwin(v422);
  uint64_t v428 = (uint64_t)&v401 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_100003A0C(&qword_1003645E0);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v425 = (uint64_t)&v401 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v37);
  uint64_t v424 = (uint64_t)&v401 - v39;
  uint64_t v420 = type metadata accessor for Proto_Gnss_Emergency_MeasurementReport(0LL);
  uint64_t v416 = *(void *)(v420 - 8);
  __chkstk_darwin(v420);
  uint64_t v419 = (uint64_t)&v401 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v415 = sub_100003A0C(&qword_100367420);
  __chkstk_darwin(v415);
  uint64_t v421 = (uint64_t)&v401 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = sub_100003A0C(&qword_1003645D8);
  uint64_t v43 = __chkstk_darwin(v42);
  uint64_t v418 = (uint64_t)&v401 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v43);
  uint64_t v417 = (uint64_t)&v401 - v45;
  uint64_t v413 = type metadata accessor for Proto_Gnss_Emergency_PositionReport(0LL);
  uint64_t v409 = *(void *)(v413 - 8);
  __chkstk_darwin(v413);
  uint64_t v412 = (uint64_t)&v401 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v408 = sub_100003A0C(&qword_100367428);
  __chkstk_darwin(v408);
  uint64_t v414 = (uint64_t)&v401 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = sub_100003A0C(&qword_1003645D0);
  uint64_t v49 = __chkstk_darwin(v48);
  uint64_t v411 = (uint64_t)&v401 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v49);
  uint64_t v410 = (uint64_t)&v401 - v51;
  uint64_t v469 = type metadata accessor for Proto_Gnss_Emergency_SummaryReport(0LL);
  uint64_t v467 = *(void *)(v469 - 8);
  __chkstk_darwin(v469);
  uint64_t v407 = (uint64_t)&v401 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v466 = sub_100003A0C(&qword_100367430);
  __chkstk_darwin(v466);
  uint64_t v470 = (uint64_t)&v401 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = sub_100003A0C(&qword_1003645C8);
  uint64_t v55 = __chkstk_darwin(v54);
  uint64_t v406 = (uint64_t)&v401 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v55);
  uint64_t v468 = (uint64_t)&v401 - v57;
  uint64_t v476 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v472 = *(void *)(v476 - 8);
  __chkstk_darwin(v476);
  uint64_t v405 = (uint64_t)&v401 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v471 = sub_100003A0C(&qword_100367438);
  __chkstk_darwin(v471);
  uint64_t v477 = (uint64_t)&v401 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = sub_100003A0C(&qword_1003645C0);
  uint64_t v61 = __chkstk_darwin(v60);
  uint64_t v465 = (uint64_t)&v401 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v61);
  uint64_t v474 = (uint64_t)&v401 - v63;
  uint64_t v481 = type metadata accessor for Proto_Gpsd_Exception(0LL);
  uint64_t v479 = *(void *)(v481 - 8);
  __chkstk_darwin(v481);
  uint64_t v464 = (uint64_t)&v401 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v478 = sub_100003A0C(&qword_100367440);
  __chkstk_darwin(v478);
  uint64_t v482 = (uint64_t)&v401 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = sub_100003A0C(&qword_1003645B8);
  uint64_t v67 = __chkstk_darwin(v66);
  uint64_t v475 = (uint64_t)&v401 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v67);
  uint64_t v480 = (uint64_t)&v401 - v69;
  uint64_t v487 = type metadata accessor for Proto_Gpsd_CntinClockControl(0LL);
  uint64_t v484 = *(void *)(v487 - 8);
  __chkstk_darwin(v487);
  uint64_t v473 = (uint64_t)&v401 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v483 = sub_100003A0C(&qword_100367448);
  __chkstk_darwin(v483);
  uint64_t v488 = (uint64_t)&v401 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = sub_100003A0C(&qword_1003645B0);
  uint64_t v73 = __chkstk_darwin(v72);
  uint64_t v485 = (uint64_t)&v401 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v73);
  uint64_t v486 = (uint64_t)&v401 - v75;
  uint64_t v496 = type metadata accessor for Proto_Gnss_DecodedRti(0LL);
  uint64_t v492 = *(void *)(v496 - 8);
  __chkstk_darwin(v496);
  uint64_t v489 = (uint64_t)&v401 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v491 = sub_100003A0C(&qword_100367450);
  __chkstk_darwin(v491);
  uint64_t v497 = (uint64_t)&v401 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = sub_100003A0C(&qword_1003645A8);
  uint64_t v79 = __chkstk_darwin(v78);
  uint64_t v493 = (uint64_t)&v401 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v79);
  uint64_t v495 = (uint64_t)&v401 - v81;
  uint64_t v501 = type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris(0LL);
  uint64_t v499 = *(void *)(v501 - 8);
  __chkstk_darwin(v501);
  uint64_t v490 = (uint64_t)&v401 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v498 = sub_100003A0C(&qword_100367458);
  __chkstk_darwin(v498);
  uint64_t v505 = (uint64_t)&v401 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = sub_100003A0C(&qword_1003645A0);
  uint64_t v85 = __chkstk_darwin(v84);
  uint64_t v500 = (uint64_t)&v401 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v85);
  uint64_t v504 = (uint64_t)&v401 - v87;
  uint64_t v508 = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  uint64_t v507 = *(void *)(v508 - 8);
  __chkstk_darwin(v508);
  uint64_t v494 = (uint64_t)&v401 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v506 = sub_100003A0C(&qword_100367460);
  __chkstk_darwin(v506);
  uint64_t v512 = (uint64_t)&v401 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = sub_100003A0C(&qword_100364598);
  uint64_t v91 = __chkstk_darwin(v90);
  uint64_t v502 = (uint64_t)&v401 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v91);
  uint64_t v511 = (uint64_t)&v401 - v93;
  uint64_t v515 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  uint64_t v514 = *(void *)(v515 - 8);
  __chkstk_darwin(v515);
  uint64_t v503 = (uint64_t *)((char *)&v401 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v513 = sub_100003A0C(&qword_100367468);
  __chkstk_darwin(v513);
  uint64_t v516 = (uint64_t)&v401 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = sub_100003A0C(&qword_100364590);
  uint64_t v97 = __chkstk_darwin(v96);
  uint64_t v509 = (uint64_t *)((char *)&v401 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v97);
  uint64_t v530 = (char *)&v401 - v99;
  uint64_t v521 = type metadata accessor for Proto_Gnss_TimeTransferDataExtend(0LL);
  uint64_t v520 = *(void *)(v521 - 8);
  __chkstk_darwin(v521);
  uint64_t v510 = (uint64_t)&v401 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v519 = sub_100003A0C(&qword_100367470);
  __chkstk_darwin(v519);
  uint64_t v522 = (uint64_t)&v401 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = sub_100003A0C(&qword_100364588);
  uint64_t v103 = __chkstk_darwin(v102);
  uint64_t v517 = (uint64_t)&v401 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v103);
  uint64_t v524 = (uint64_t)&v401 - v105;
  uint64_t v528 = type metadata accessor for Proto_Gpsd_Status(0LL);
  uint64_t v527 = *(void *)(v528 - 8);
  __chkstk_darwin(v528);
  uint64_t v518 = (uint64_t)&v401 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v526 = sub_100003A0C(&qword_100367478);
  __chkstk_darwin(v526);
  uint64_t v529 = (uint64_t)&v401 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = sub_100003A0C(&qword_100364580);
  uint64_t v109 = __chkstk_darwin(v108);
  uint64_t v523 = (uint64_t)&v401 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v109);
  uint64_t v542 = (uint64_t)&v401 - v111;
  uint64_t v534 = type metadata accessor for Proto_Gnss_PwrMeasurement(0LL);
  uint64_t v533 = *(void *)(v534 - 8);
  __chkstk_darwin(v534);
  uint64_t v525 = (uint64_t)&v401 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v532 = sub_100003A0C(&qword_100367480);
  __chkstk_darwin(v532);
  uint64_t v535 = (uint64_t)&v401 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v114 = sub_100003A0C(&qword_100364578);
  uint64_t v115 = __chkstk_darwin(v114);
  int v541 = (char *)&v401 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v115);
  uint64_t v543 = (uint64_t)&v401 - v117;
  uint64_t v539 = type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents(0LL);
  uint64_t v538 = *(void *)(v539 - 8);
  __chkstk_darwin(v539);
  uint64_t v531 = (uint64_t)&v401 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v537 = sub_100003A0C(&qword_100367488);
  __chkstk_darwin(v537);
  uint64_t v540 = (uint64_t)&v401 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = sub_100003A0C(&qword_100364570);
  uint64_t v121 = __chkstk_darwin(v120);
  uint64_t v536 = (uint64_t)&v401 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v121);
  uint64_t v544 = (uint64_t)&v401 - v123;
  uint64_t v124 = type metadata accessor for Proto_Gnss_Fix(0LL);
  uint64_t v125 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v127 = (char *)&v401 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v128 = sub_100003A0C(&qword_100367490);
  __chkstk_darwin(v128);
  uint64_t v545 = (uint64_t)&v401 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v130 = sub_100003A0C(&qword_100364568);
  uint64_t v131 = __chkstk_darwin(v130);
  uint64_t v133 = (char *)&v401 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v131);
  uint64_t v135 = (char *)&v401 - v134;
  swift_beginAccess(a1 + 16, v603, 0LL, 0LL);
  uint64_t v136 = *(char *)(a1 + 16);
  swift_beginAccess(a2 + 16, v602, 0LL, 0LL);
  uint64_t v137 = *(char *)(a2 + 16);
  if (v136 == 24)
  {
    if ((_DWORD)v137 != 24) {
      return 0LL;
    }
  }

  else if ((_DWORD)v137 == 24 || qword_1002DEFE0[v136] != qword_1002DEFE0[v137])
  {
    return 0LL;
  }

  swift_beginAccess(a1 + 17, v601, 0LL, 0LL);
  uint64_t v138 = *(char *)(a1 + 17);
  swift_beginAccess(a2 + 17, v600, 0LL, 0LL);
  uint64_t v139 = *(char *)(a2 + 17);
  if (v138 == 61)
  {
    if ((_DWORD)v139 != 61) {
      return 0LL;
    }
  }

  else if ((_DWORD)v139 == 61 || qword_1002DF128[v138] != qword_1002DF128[v139])
  {
    return 0LL;
  }

  swift_beginAccess(a1 + 24, v599, 0LL, 0LL);
  uint64_t v402 = *(void *)(a1 + 24);
  uint64_t v403 = a1;
  char v140 = *(_BYTE *)(a1 + 32);
  swift_beginAccess(a2 + 24, v598, 0LL, 0LL);
  uint64_t v404 = a2;
  char v141 = *(_BYTE *)(a2 + 32);
  if ((v140 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 32)) {
      return 0LL;
    }
  }

  else
  {
    if (v402 != *(void *)(a2 + 24)) {
      char v141 = 1;
    }
    if ((v141 & 1) != 0) {
      return 0LL;
    }
  }

  uint64_t v142 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  v597,  0LL,  0LL);
  sub_10000E6C0(v142, (uint64_t)v135, &qword_100364568);
  uint64_t v143 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__fix,  &v596,  0LL,  0LL);
  uint64_t v144 = v545;
  uint64_t v145 = v545 + *(int *)(v128 + 48);
  sub_10000E6C0((uint64_t)v135, v545, &qword_100364568);
  sub_10000E6C0(v143, v145, &qword_100364568);
  uint64_t v146 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
  if (v146(v144, 1LL, v124) == 1)
  {
    uint64_t v147 = v403;
    swift_retain(v403);
    swift_retain(v404);
    sub_100015764((uint64_t)v135, &qword_100364568);
    if (v146(v145, 1LL, v124) == 1)
    {
      sub_100015764(v545, &qword_100364568);
      goto LABEL_24;
    }

LABEL_29:
    uint64_t v149 = &qword_100367488;
LABEL_58:
    uint64_t v150 = v160;
    goto LABEL_59;
  }

  uint64_t v167 = v536;
  sub_10000E6C0(v157, v536, &qword_100364570);
  int v168 = v161(v158, 1LL, v162);
  uint64_t v169 = v542;
  uint64_t v170 = v541;
  uint64_t v166 = v543;
  if (v168 == 1)
  {
    sub_100015764(v544, &qword_100364570);
    sub_100004090(v167, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
    uint64_t v147 = v403;
    goto LABEL_29;
  }

  uint64_t v171 = v531;
  sub_100003E68(v158, v531, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  uint64_t v172 = sub_10000FD98( &qword_100352140,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents,  (uint64_t)&unk_1002B99D4);
  char v173 = dispatch thunk of static Equatable.== infix(_:_:)(v167, v171, v162, v172);
  sub_100004090(v171, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  sub_100015764(v544, &qword_100364570);
  uint64_t v174 = v167;
  uint64_t v164 = v169;
  sub_100004090(v174, type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
  sub_100015764(v160, &qword_100364570);
  uint64_t v147 = v403;
  uint64_t v165 = (uint64_t)v170;
  if ((v173 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_31:
  uint64_t v175 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess( v147 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  &v593,  0LL,  0LL);
  sub_10000E6C0(v175, v166, &qword_100364578);
  uint64_t v176 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__powerMeasurement,  &v592,  0LL,  0LL);
  uint64_t v177 = v166;
  uint64_t v178 = v535;
  uint64_t v179 = v535 + *(int *)(v532 + 48);
  sub_10000E6C0(v177, v535, &qword_100364578);
  uint64_t v180 = v176;
  uint64_t v160 = v178;
  sub_10000E6C0(v180, v179, &qword_100364578);
  uint64_t v181 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v533 + 48);
  uint64_t v182 = v178;
  uint64_t v183 = v534;
  if (v181(v182, 1LL, v534) == 1)
  {
    sub_100015764(v177, &qword_100364578);
    if (v181(v179, 1LL, v183) == 1)
    {
      sub_100015764(v160, &qword_100364578);
      goto LABEL_38;
    }

    goto LABEL_36;
  }

  sub_10000E6C0(v160, v165, &qword_100364578);
  if (v181(v179, 1LL, v183) == 1)
  {
    sub_100015764(v543, &qword_100364578);
    sub_100004090(v165, type metadata accessor for Proto_Gnss_PwrMeasurement);
LABEL_36:
    uint64_t v149 = &qword_100367480;
    goto LABEL_58;
  }

  uint64_t v184 = v165;
  uint64_t v185 = v525;
  sub_100003E68(v179, v525, type metadata accessor for Proto_Gnss_PwrMeasurement);
  uint64_t v186 = sub_10000FD98(&qword_100363458, type metadata accessor for Proto_Gnss_PwrMeasurement, (uint64_t)&unk_1002D8DF0);
  char v187 = dispatch thunk of static Equatable.== infix(_:_:)(v184, v185, v183, v186);
  sub_100004090(v185, type metadata accessor for Proto_Gnss_PwrMeasurement);
  sub_100015764(v543, &qword_100364578);
  sub_100004090(v184, type metadata accessor for Proto_Gnss_PwrMeasurement);
  sub_100015764(v160, &qword_100364578);
  if ((v187 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_38:
  uint64_t v188 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess( v147 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  &v591,  0LL,  0LL);
  sub_10000E6C0(v188, v164, &qword_100364580);
  uint64_t v189 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__status,  &v590,  0LL,  0LL);
  uint64_t v190 = v529;
  uint64_t v191 = v529 + *(int *)(v526 + 48);
  sub_10000E6C0(v164, v529, &qword_100364580);
  uint64_t v192 = v189;
  uint64_t v160 = v190;
  sub_10000E6C0(v192, v191, &qword_100364580);
  uint64_t v193 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v527 + 48);
  uint64_t v194 = v190;
  uint64_t v195 = v528;
  if (v193(v194, 1LL, v528) == 1)
  {
    sub_100015764(v164, &qword_100364580);
    int v196 = v193(v191, 1LL, v195);
    uint64_t v197 = (uint64_t)v530;
    if (v196 == 1)
    {
      sub_100015764(v160, &qword_100364580);
      goto LABEL_45;
    }

    goto LABEL_43;
  }

  uint64_t v198 = v523;
  sub_10000E6C0(v160, v523, &qword_100364580);
  int v199 = v193(v191, 1LL, v195);
  uint64_t v197 = (uint64_t)v530;
  if (v199 == 1)
  {
    sub_100015764(v542, &qword_100364580);
    sub_100004090(v198, type metadata accessor for Proto_Gpsd_Status);
LABEL_43:
    uint64_t v149 = &qword_100367478;
    goto LABEL_58;
  }

  uint64_t v200 = v518;
  sub_100003E68(v191, v518, type metadata accessor for Proto_Gpsd_Status);
  char v201 = sub_100279324(v198, v200);
  sub_100004090(v200, type metadata accessor for Proto_Gpsd_Status);
  sub_100015764(v542, &qword_100364580);
  sub_100004090(v198, type metadata accessor for Proto_Gpsd_Status);
  sub_100015764(v160, &qword_100364580);
  if ((v201 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_45:
  uint64_t v202 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess( v147 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  &v589,  0LL,  0LL);
  uint64_t v203 = v524;
  sub_10000E6C0(v202, v524, &qword_100364588);
  uint64_t v204 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__timeTransferDataExtend,  &v588,  0LL,  0LL);
  uint64_t v205 = v522;
  uint64_t v206 = v522 + *(int *)(v519 + 48);
  sub_10000E6C0(v203, v522, &qword_100364588);
  uint64_t v207 = v204;
  uint64_t v160 = v205;
  sub_10000E6C0(v207, v206, &qword_100364588);
  uint64_t v208 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v520 + 48);
  uint64_t v209 = v205;
  uint64_t v210 = v521;
  if (v208(v209, 1LL, v521) == 1)
  {
    sub_100015764(v203, &qword_100364588);
    if (v208(v206, 1LL, v210) == 1)
    {
      sub_100015764(v160, &qword_100364588);
      goto LABEL_52;
    }

    goto LABEL_50;
  }

  uint64_t v211 = v517;
  sub_10000E6C0(v160, v517, &qword_100364588);
  if (v208(v206, 1LL, v210) == 1)
  {
    sub_100015764(v524, &qword_100364588);
    sub_100004090(v211, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
LABEL_50:
    uint64_t v149 = &qword_100367470;
    goto LABEL_58;
  }

  uint64_t v212 = v510;
  sub_100003E68(v206, v510, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  uint64_t v213 = sub_10000FD98( &qword_1003633F8,  type metadata accessor for Proto_Gnss_TimeTransferDataExtend,  (uint64_t)&unk_1002D8850);
  char v214 = dispatch thunk of static Equatable.== infix(_:_:)(v211, v212, v210, v213);
  uint64_t v215 = v212;
  uint64_t v197 = (uint64_t)v530;
  sub_100004090(v215, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  sub_100015764(v524, &qword_100364588);
  sub_100004090(v211, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
  sub_100015764(v160, &qword_100364588);
  if ((v214 & 1) == 0)
  {
LABEL_60:
    uint64_t v225 = v147;
LABEL_61:
    swift_release(v225);
    swift_release(v404);
    return 0LL;
  }

LABEL_52:
  uint64_t v216 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess( v147 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  &v587,  0LL,  0LL);
  sub_10000E6C0(v216, v197, &qword_100364590);
  uint64_t v217 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__recoveryStatistics,  &v586,  0LL,  0LL);
  uint64_t v218 = v516;
  uint64_t v219 = v516 + *(int *)(v513 + 48);
  sub_10000E6C0(v197, v516, &qword_100364590);
  uint64_t v220 = v217;
  uint64_t v160 = v218;
  sub_10000E6C0(v220, v219, &qword_100364590);
  uint64_t v221 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v514 + 48);
  uint64_t v222 = v218;
  uint64_t v223 = v515;
  if (v221(v222, 1LL, v515) == 1)
  {
    sub_100015764(v197, &qword_100364590);
    if (v221(v219, 1LL, v223) == 1)
    {
      sub_100015764(v160, &qword_100364590);
      goto LABEL_64;
    }

    goto LABEL_57;
  }

  uint64_t v224 = v509;
  sub_10000E6C0(v160, (uint64_t)v509, &qword_100364590);
  if (v221(v219, 1LL, v223) == 1)
  {
    sub_100015764(v197, &qword_100364590);
    sub_100004090((uint64_t)v224, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
LABEL_57:
    uint64_t v149 = &qword_100367468;
    goto LABEL_58;
  }

  uint64_t v227 = v503;
  sub_100003E68(v219, (uint64_t)v503, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  char v228 = sub_100276280(v224, v227);
  sub_100004090((uint64_t)v227, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  sub_100015764(v197, &qword_100364590);
  sub_100004090((uint64_t)v224, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
  sub_100015764(v160, &qword_100364590);
  if ((v228 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_64:
  uint64_t v229 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess( v147 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  &v585,  0LL,  0LL);
  uint64_t v230 = v511;
  sub_10000E6C0(v229, v511, &qword_100364598);
  uint64_t v231 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__ltlInfoRequest,  &v584,  0LL,  0LL);
  uint64_t v232 = v512;
  uint64_t v233 = v512 + *(int *)(v506 + 48);
  sub_10000E6C0(v230, v512, &qword_100364598);
  sub_10000E6C0(v231, v233, &qword_100364598);
  uint64_t v234 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v507 + 48);
  uint64_t v235 = v508;
  if (v234(v232, 1LL, v508) == 1)
  {
    sub_100015764(v511, &qword_100364598);
    if (v234(v233, 1LL, v235) == 1)
    {
      sub_100015764(v512, &qword_100364598);
      goto LABEL_71;
    }

    goto LABEL_69;
  }

  uint64_t v236 = v502;
  sub_10000E6C0(v512, v502, &qword_100364598);
  if (v234(v233, 1LL, v235) == 1)
  {
    sub_100015764(v511, &qword_100364598);
    sub_100004090(v236, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
LABEL_69:
    uint64_t v149 = &qword_100367460;
    uint64_t v150 = v512;
    goto LABEL_59;
  }

  uint64_t v237 = v494;
  sub_100003E68(v233, v494, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  char v238 = sub_100277050(v236, v237);
  sub_100004090(v237, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  sub_100015764(v511, &qword_100364598);
  sub_100004090(v236, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
  sub_100015764(v512, &qword_100364598);
  if ((v238 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_71:
  uint64_t v239 = v147
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess( v147 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  &v583,  0LL,  0LL);
  uint64_t v240 = v504;
  sub_10000E6C0(v239, v504, &qword_1003645A0);
  uint64_t v241 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedExtendedEphemeris,  &v582,  0LL,  0LL);
  uint64_t v242 = v505;
  uint64_t v243 = v505 + *(int *)(v498 + 48);
  sub_10000E6C0(v240, v505, &qword_1003645A0);
  sub_10000E6C0(v241, v243, &qword_1003645A0);
  char v244 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48);
  uint64_t v245 = v501;
  if (v244(v242, 1LL, v501) == 1)
  {
    sub_100015764(v504, &qword_1003645A0);
    if (v244(v243, 1LL, v245) == 1)
    {
      sub_100015764(v505, &qword_1003645A0);
      goto LABEL_78;
    }

                a3 = (uint64_t)sub_10028BFF0(0LL, *(void *)(a3 + 16) + 1LL, 1, (char *)a3);
                goto LABEL_47;
              }
            }
          }

          else
          {
            uint64_t v17 = String.index(after:)(v17, a3, a4);
          }

          if (v54 == v17 >> 14) {
            goto LABEL_42;
          }
        }

        __break(1u);
        goto LABEL_52;
      }
    }

    if ((a4 & 0x2000000000000000LL) == 0) {
      uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v14 = (v11 & ((a3 & 0x800000000000000LL) == 0)) == 0;
    uint64_t v38 = 7LL;
    if (!v14) {
      uint64_t v38 = 11LL;
    }
    sub_10028BC90(v38 | (v12 << 16), v9, a2 & 1, v8, a3, a4);
    swift_bridgeObjectRelease(a4);
    uint64_t v16 = *(char **)(v8 + 16);
LABEL_50:
    swift_bridgeObjectRetain(v16);
    swift_release(v8);
    swift_release(v10);
    return (uint64_t)v16;
  }

  return result;
}

                a3 = (uint64_t)sub_10028BFF0(0LL, *(void *)(a3 + 16) + 1LL, 1, (char *)a3);
                goto LABEL_47;
              }
            }
          }

          else
          {
            uint64_t v17 = String.index(after:)(v17, a3, a4);
          }

          if (v54 == v17 >> 14) {
            goto LABEL_42;
          }
        }

        __break(1u);
        goto LABEL_52;
      }
    }

    if ((a4 & 0x2000000000000000LL) == 0) {
      uint64_t v12 = a3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v14 = (v11 & ((a3 & 0x800000000000000LL) == 0)) == 0;
    uint64_t v38 = 7LL;
    if (!v14) {
      uint64_t v38 = 11LL;
    }
    sub_10028BC90(v38 | (v12 << 16), v9, a2 & 1, v8, a3, a4);
    swift_bridgeObjectRelease(a4);
    uint64_t v16 = *(char **)(v8 + 16);
LABEL_50:
    swift_bridgeObjectRetain(v16);
    swift_release(v8);
    swift_release(v10);
    return (uint64_t)v16;
  }

  return result;
}

LABEL_76:
    char v246 = &qword_100367458;
    uint64_t v247 = v505;
LABEL_84:
    sub_100015764(v247, v246);
    uint64_t v225 = v403;
    goto LABEL_61;
  }

  sub_10000E6C0(v505, v500, &qword_1003645A0);
  if (v244(v243, 1LL, v245) == 1)
  {
    sub_100015764(v504, &qword_1003645A0);
    sub_100004090(v500, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
    goto LABEL_76;
  }

  uint64_t v248 = v490;
  sub_100003E68(v243, v490, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  uint64_t v249 = sub_10000FD98( &qword_100363488,  type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris,  (uint64_t)&unk_1002D90E8);
  uint64_t v250 = v500;
  char v251 = dispatch thunk of static Equatable.== infix(_:_:)(v500, v248, v501, v249);
  sub_100004090(v248, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  sub_100015764(v504, &qword_1003645A0);
  sub_100004090(v250, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
  sub_100015764(v505, &qword_1003645A0);
  if ((v251 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_78:
  uint64_t v252 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  &v581,  0LL,  0LL);
  uint64_t v253 = v495;
  sub_10000E6C0(v252, v495, &qword_1003645A8);
  uint64_t v254 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedRti,  &v580,  0LL,  0LL);
  uint64_t v255 = v497;
  uint64_t v256 = v497 + *(int *)(v491 + 48);
  sub_10000E6C0(v253, v497, &qword_1003645A8);
  sub_10000E6C0(v254, v256, &qword_1003645A8);
  uint64_t v257 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v492 + 48);
  if (v257(v255, 1LL, v496) == 1)
  {
    sub_100015764(v495, &qword_1003645A8);
    if (v257(v256, 1LL, v496) == 1)
    {
      sub_100015764(v497, &qword_1003645A8);
      goto LABEL_86;
    }

    goto LABEL_83;
  }

  sub_10000E6C0(v497, v493, &qword_1003645A8);
  if (v257(v256, 1LL, v496) == 1)
  {
    sub_100015764(v495, &qword_1003645A8);
    sub_100004090(v493, type metadata accessor for Proto_Gnss_DecodedRti);
LABEL_83:
    char v246 = &qword_100367450;
    uint64_t v247 = v497;
    goto LABEL_84;
  }

  uint64_t v258 = v489;
  sub_100003E68(v256, v489, type metadata accessor for Proto_Gnss_DecodedRti);
  uint64_t v259 = sub_10000FD98(&qword_100363470, type metadata accessor for Proto_Gnss_DecodedRti, (uint64_t)&unk_1002D8F80);
  uint64_t v260 = v493;
  char v261 = dispatch thunk of static Equatable.== infix(_:_:)(v493, v258, v496, v259);
  sub_100004090(v258, type metadata accessor for Proto_Gnss_DecodedRti);
  sub_100015764(v495, &qword_1003645A8);
  sub_100004090(v260, type metadata accessor for Proto_Gnss_DecodedRti);
  sub_100015764(v497, &qword_1003645A8);
  if ((v261 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_86:
  char v262 = (unsigned __int8 *)(v403
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus,  &v579,  0LL,  0LL);
  int v263 = *v262;
  uint64_t v264 = (unsigned __int8 *)(v404
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus);
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__startStatus,  &v578,  0LL,  0LL);
  int v265 = *v264;
  if (v263 == 10)
  {
    if (v265 != 10) {
      goto LABEL_191;
    }
  }

  else
  {
    v577[0] = v263;
    if (v265 == 10) {
      goto LABEL_191;
    }
    v576[0] = v265;
    unint64_t v266 = sub_100015654();
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v577, v576, &type metadata for Proto_Gnss_Result, v266) & 1) == 0) {
      goto LABEL_191;
    }
  }

  uint64_t v267 = (unsigned __int8 *)(v403
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus,  v577,  0LL,  0LL);
  int v268 = *v267;
  uint64_t v269 = (unsigned __int8 *)(v404
                           + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus);
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__stopStatus,  v576,  0LL,  0LL);
  int v270 = *v269;
  if (v268 == 10)
  {
    if (v270 != 10) {
      goto LABEL_191;
    }
  }

  else
  {
    v575[0] = v268;
    if (v270 == 10) {
      goto LABEL_191;
    }
    v574[0] = v270;
    unint64_t v271 = sub_100015654();
    if ((dispatch thunk of static Equatable.== infix(_:_:)(v575, v574, &type metadata for Proto_Gnss_Result, v271) & 1) == 0) {
      goto LABEL_191;
    }
  }

  uint64_t v272 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  v575,  0LL,  0LL);
  uint64_t v273 = v486;
  sub_10000E6C0(v272, v486, &qword_1003645B0);
  uint64_t v274 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cntinClockControl,  v574,  0LL,  0LL);
  uint64_t v275 = v488;
  uint64_t v276 = v488 + *(int *)(v483 + 48);
  sub_10000E6C0(v273, v488, &qword_1003645B0);
  sub_10000E6C0(v274, v276, &qword_1003645B0);
  uint64_t v277 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v484 + 48);
  if (v277(v275, 1LL, v487) == 1)
  {
    sub_100015764(v486, &qword_1003645B0);
    if (v277(v276, 1LL, v487) == 1)
    {
      sub_100015764(v488, &qword_1003645B0);
      goto LABEL_103;
    }

    goto LABEL_101;
  }

  sub_10000E6C0(v488, v485, &qword_1003645B0);
  if (v277(v276, 1LL, v487) == 1)
  {
    sub_100015764(v486, &qword_1003645B0);
    sub_100004090(v485, type metadata accessor for Proto_Gpsd_CntinClockControl);
LABEL_101:
    char v246 = &qword_100367448;
    uint64_t v247 = v488;
    goto LABEL_84;
  }

  uint64_t v278 = v473;
  sub_100003E68(v276, v473, type metadata accessor for Proto_Gpsd_CntinClockControl);
  uint64_t v279 = v485;
  char v280 = sub_100276B80(v485, v278, type metadata accessor for Proto_Gpsd_CntinClockControl);
  sub_100004090(v278, type metadata accessor for Proto_Gpsd_CntinClockControl);
  sub_100015764(v486, &qword_1003645B0);
  sub_100004090(v279, type metadata accessor for Proto_Gpsd_CntinClockControl);
  sub_100015764(v488, &qword_1003645B0);
  if ((v280 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_103:
  uint64_t v281 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  &v573,  0LL,  0LL);
  uint64_t v282 = v480;
  sub_10000E6C0(v281, v480, &qword_1003645B8);
  uint64_t v283 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__exception,  &v572,  0LL,  0LL);
  uint64_t v284 = v482;
  uint64_t v285 = v482 + *(int *)(v478 + 48);
  sub_10000E6C0(v282, v482, &qword_1003645B8);
  sub_10000E6C0(v283, v285, &qword_1003645B8);
  uint64_t v286 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v479 + 48);
  if (v286(v284, 1LL, v481) == 1)
  {
    sub_100015764(v480, &qword_1003645B8);
    if (v286(v285, 1LL, v481) == 1)
    {
      sub_100015764(v482, &qword_1003645B8);
      goto LABEL_110;
    }

    goto LABEL_108;
  }

  sub_10000E6C0(v482, v475, &qword_1003645B8);
  if (v286(v285, 1LL, v481) == 1)
  {
    sub_100015764(v480, &qword_1003645B8);
    sub_100004090(v475, type metadata accessor for Proto_Gpsd_Exception);
LABEL_108:
    char v246 = &qword_100367440;
    uint64_t v247 = v482;
    goto LABEL_84;
  }

  uint64_t v287 = v464;
  sub_100003E68(v285, v464, type metadata accessor for Proto_Gpsd_Exception);
  uint64_t v288 = v475;
  char v289 = sub_100277A4C(v475, v287);
  sub_100004090(v287, type metadata accessor for Proto_Gpsd_Exception);
  sub_100015764(v480, &qword_1003645B8);
  sub_100004090(v288, type metadata accessor for Proto_Gpsd_Exception);
  sub_100015764(v482, &qword_1003645B8);
  if ((v289 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_110:
  uint64_t v290 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  &v571,  0LL,  0LL);
  uint64_t v291 = v474;
  sub_10000E6C0(v290, v474, &qword_1003645C0);
  uint64_t v292 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__askBasebandReset,  &v570,  0LL,  0LL);
  uint64_t v293 = v477;
  uint64_t v294 = v477 + *(int *)(v471 + 48);
  sub_10000E6C0(v291, v477, &qword_1003645C0);
  sub_10000E6C0(v292, v294, &qword_1003645C0);
  uint64_t v295 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v472 + 48);
  if (v295(v293, 1LL, v476) == 1)
  {
    sub_100015764(v474, &qword_1003645C0);
    if (v295(v294, 1LL, v476) == 1)
    {
      sub_100015764(v477, &qword_1003645C0);
      goto LABEL_117;
    }

    goto LABEL_115;
  }

  sub_10000E6C0(v477, v465, &qword_1003645C0);
  if (v295(v294, 1LL, v476) == 1)
  {
    sub_100015764(v474, &qword_1003645C0);
    sub_100004090(v465, type metadata accessor for Proto_Gpsd_AskBasebandReset);
LABEL_115:
    char v246 = &qword_100367438;
    uint64_t v247 = v477;
    goto LABEL_84;
  }

  uint64_t v296 = v405;
  sub_100003E68(v294, v405, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  uint64_t v297 = v465;
  char v298 = sub_100276E88(v465, v296);
  sub_100004090(v296, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  sub_100015764(v474, &qword_1003645C0);
  sub_100004090(v297, type metadata accessor for Proto_Gpsd_AskBasebandReset);
  sub_100015764(v477, &qword_1003645C0);
  if ((v298 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_117:
  uint64_t v299 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  &v569,  0LL,  0LL);
  uint64_t v300 = v468;
  sub_10000E6C0(v299, v468, &qword_1003645C8);
  uint64_t v301 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__summaryReport,  &v568,  0LL,  0LL);
  uint64_t v302 = v470;
  uint64_t v303 = v470 + *(int *)(v466 + 48);
  sub_10000E6C0(v300, v470, &qword_1003645C8);
  sub_10000E6C0(v301, v303, &qword_1003645C8);
  char v304 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v467 + 48);
  if (v304(v302, 1LL, v469) == 1)
  {
    sub_100015764(v468, &qword_1003645C8);
    if (v304(v303, 1LL, v469) == 1)
    {
      sub_100015764(v470, &qword_1003645C8);
      goto LABEL_124;
    }

    goto LABEL_122;
  }

  sub_10000E6C0(v470, v406, &qword_1003645C8);
  if (v304(v303, 1LL, v469) == 1)
  {
    sub_100015764(v468, &qword_1003645C8);
    sub_100004090(v406, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
LABEL_122:
    char v246 = &qword_100367430;
    uint64_t v247 = v470;
    goto LABEL_84;
  }

  uint64_t v305 = v407;
  sub_100003E68(v303, v407, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  uint64_t v306 = sub_10000FD98( &qword_10035D1D0,  type metadata accessor for Proto_Gnss_Emergency_SummaryReport,  (uint64_t)&unk_1002CCF48);
  uint64_t v307 = v406;
  char v308 = dispatch thunk of static Equatable.== infix(_:_:)(v406, v305, v469, v306);
  sub_100004090(v305, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  sub_100015764(v468, &qword_1003645C8);
  sub_100004090(v307, type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
  sub_100015764(v470, &qword_1003645C8);
  if ((v308 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_124:
  uint64_t v309 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  &v567,  0LL,  0LL);
  uint64_t v310 = v410;
  sub_10000E6C0(v309, v410, &qword_1003645D0);
  uint64_t v311 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__positionReport,  &v566,  0LL,  0LL);
  uint64_t v312 = v414;
  uint64_t v313 = v414 + *(int *)(v408 + 48);
  sub_10000E6C0(v310, v414, &qword_1003645D0);
  sub_10000E6C0(v311, v313, &qword_1003645D0);
  char v314 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v409 + 48);
  if (v314(v312, 1LL, v413) == 1)
  {
    sub_100015764(v410, &qword_1003645D0);
    if (v314(v313, 1LL, v413) == 1)
    {
      sub_100015764(v414, &qword_1003645D0);
      goto LABEL_131;
    }

    goto LABEL_129;
  }

  sub_10000E6C0(v414, v411, &qword_1003645D0);
  if (v314(v313, 1LL, v413) == 1)
  {
    sub_100015764(v410, &qword_1003645D0);
    sub_100004090(v411, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
LABEL_129:
    char v246 = &qword_100367428;
    uint64_t v247 = v414;
    goto LABEL_84;
  }

  uint64_t v315 = v412;
  sub_100003E68(v313, v412, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  uint64_t v316 = sub_10000FD98( &qword_10035D650,  type metadata accessor for Proto_Gnss_Emergency_PositionReport,  (uint64_t)&unk_1002D1598);
  uint64_t v317 = v411;
  char v318 = dispatch thunk of static Equatable.== infix(_:_:)(v411, v315, v413, v316);
  sub_100004090(v315, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  sub_100015764(v410, &qword_1003645D0);
  sub_100004090(v317, type metadata accessor for Proto_Gnss_Emergency_PositionReport);
  sub_100015764(v414, &qword_1003645D0);
  if ((v318 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_131:
  uint64_t v319 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  &v565,  0LL,  0LL);
  uint64_t v320 = v417;
  sub_10000E6C0(v319, v417, &qword_1003645D8);
  uint64_t v321 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReport,  &v564,  0LL,  0LL);
  uint64_t v322 = v421;
  uint64_t v323 = v421 + *(int *)(v415 + 48);
  sub_10000E6C0(v320, v421, &qword_1003645D8);
  sub_10000E6C0(v321, v323, &qword_1003645D8);
  uint64_t v324 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v416 + 48);
  if (v324(v322, 1LL, v420) == 1)
  {
    sub_100015764(v417, &qword_1003645D8);
    if (v324(v323, 1LL, v420) == 1)
    {
      sub_100015764(v421, &qword_1003645D8);
      goto LABEL_138;
    }

    goto LABEL_136;
  }

  sub_10000E6C0(v421, v418, &qword_1003645D8);
  if (v324(v323, 1LL, v420) == 1)
  {
    sub_100015764(v417, &qword_1003645D8);
    sub_100004090(v418, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
LABEL_136:
    char v246 = &qword_100367420;
    uint64_t v247 = v421;
    goto LABEL_84;
  }

  uint64_t v325 = v419;
  sub_100003E68(v323, v419, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  uint64_t v326 = sub_10000FD98( &qword_10035D6F0,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReport,  (uint64_t)&unk_1002D1F70);
  uint64_t v327 = v418;
  char v328 = dispatch thunk of static Equatable.== infix(_:_:)(v418, v325, v420, v326);
  sub_100004090(v325, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  sub_100015764(v417, &qword_1003645D8);
  sub_100004090(v327, type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
  sub_100015764(v421, &qword_1003645D8);
  if ((v328 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_138:
  uint64_t v329 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  &v563,  0LL,  0LL);
  uint64_t v330 = v424;
  sub_10000E6C0(v329, v424, &qword_1003645E0);
  uint64_t v331 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__assistanceNeededReport,  &v562,  0LL,  0LL);
  uint64_t v332 = v428;
  uint64_t v333 = v428 + *(int *)(v422 + 48);
  sub_10000E6C0(v330, v428, &qword_1003645E0);
  sub_10000E6C0(v331, v333, &qword_1003645E0);
  uint64_t v334 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v423 + 48);
  if (v334(v332, 1LL, v427) == 1)
  {
    sub_100015764(v424, &qword_1003645E0);
    if (v334(v333, 1LL, v427) == 1)
    {
      sub_100015764(v428, &qword_1003645E0);
      goto LABEL_145;
    }

    goto LABEL_143;
  }

  sub_10000E6C0(v428, v425, &qword_1003645E0);
  if (v334(v333, 1LL, v427) == 1)
  {
    sub_100015764(v424, &qword_1003645E0);
    sub_100004090(v425, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
LABEL_143:
    char v246 = &qword_100367418;
    uint64_t v247 = v428;
    goto LABEL_84;
  }

  uint64_t v335 = v426;
  sub_100003E68(v333, v426, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  uint64_t v336 = sub_10000FD98( &qword_10035D7B8,  type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport,  (uint64_t)&unk_1002D2C18);
  uint64_t v337 = v425;
  char v338 = dispatch thunk of static Equatable.== infix(_:_:)(v425, v335, v427, v336);
  sub_100004090(v335, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  sub_100015764(v424, &qword_1003645E0);
  sub_100004090(v337, type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
  sub_100015764(v428, &qword_1003645E0);
  if ((v338 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_145:
  uint64_t v339 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  &v561,  0LL,  0LL);
  uint64_t v340 = v431;
  sub_10000E6C0(v339, v431, &qword_1003645E8);
  uint64_t v341 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cellFtAssistanceRequest,  &v560,  0LL,  0LL);
  uint64_t v342 = v435;
  uint64_t v343 = v435 + *(int *)(v429 + 48);
  sub_10000E6C0(v340, v435, &qword_1003645E8);
  sub_10000E6C0(v341, v343, &qword_1003645E8);
  uint64_t v344 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v430 + 48);
  if (v344(v342, 1LL, v434) == 1)
  {
    sub_100015764(v431, &qword_1003645E8);
    if (v344(v343, 1LL, v434) == 1)
    {
      sub_100015764(v435, &qword_1003645E8);
      goto LABEL_152;
    }

    goto LABEL_150;
  }

  sub_10000E6C0(v435, v432, &qword_1003645E8);
  if (v344(v343, 1LL, v434) == 1)
  {
    sub_100015764(v431, &qword_1003645E8);
    sub_100004090(v432, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
LABEL_150:
    char v246 = &qword_100367410;
    uint64_t v247 = v435;
    goto LABEL_84;
  }

  uint64_t v345 = v433;
  sub_100003E68(v343, v433, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  uint64_t v346 = sub_10000FD98( &qword_10035D950,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest,  (uint64_t)&unk_1002D4568);
  uint64_t v347 = v432;
  char v348 = dispatch thunk of static Equatable.== infix(_:_:)(v432, v345, v434, v346);
  sub_100004090(v345, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  sub_100015764(v431, &qword_1003645E8);
  sub_100004090(v347, type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
  sub_100015764(v435, &qword_1003645E8);
  if ((v348 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_152:
  uint64_t v349 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  &v559,  0LL,  0LL);
  uint64_t v350 = v438;
  sub_10000E6C0(v349, v438, &qword_1003645F0);
  uint64_t v351 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__cplaneMeasurementReportWithEstimate,  &v558,  0LL,  0LL);
  uint64_t v352 = v442;
  uint64_t v353 = v442 + *(int *)(v436 + 48);
  sub_10000E6C0(v350, v442, &qword_1003645F0);
  sub_10000E6C0(v351, v353, &qword_1003645F0);
  uint64_t v354 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v437 + 48);
  if (v354(v352, 1LL, v441) == 1)
  {
    sub_100015764(v438, &qword_1003645F0);
    if (v354(v353, 1LL, v441) == 1)
    {
      sub_100015764(v442, &qword_1003645F0);
      goto LABEL_159;
    }

    goto LABEL_157;
  }

  sub_10000E6C0(v442, v439, &qword_1003645F0);
  if (v354(v353, 1LL, v441) == 1)
  {
    sub_100015764(v438, &qword_1003645F0);
    sub_100004090(v439, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
LABEL_157:
    char v246 = &qword_100367408;
    uint64_t v247 = v442;
    goto LABEL_84;
  }

  uint64_t v355 = v440;
  sub_100003E68(v353, v440, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  uint64_t v356 = sub_10000FD98( &qword_10035DA10,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate,  (uint64_t)&unk_1002D50A8);
  uint64_t v357 = v439;
  char v358 = dispatch thunk of static Equatable.== infix(_:_:)(v439, v355, v441, v356);
  sub_100004090(v355, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  sub_100015764(v438, &qword_1003645F0);
  sub_100004090(v357, type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
  sub_100015764(v442, &qword_1003645F0);
  if ((v358 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_159:
  uint64_t v359 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  &v557,  0LL,  0LL);
  uint64_t v360 = v445;
  sub_10000E6C0(v359, v445, &qword_1003645F8);
  uint64_t v361 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplSessionStatus,  &v556,  0LL,  0LL);
  uint64_t v362 = v449;
  uint64_t v363 = v449 + *(int *)(v443 + 48);
  sub_10000E6C0(v360, v449, &qword_1003645F8);
  sub_10000E6C0(v361, v363, &qword_1003645F8);
  uint64_t v364 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v444 + 48);
  if (v364(v362, 1LL, v448) == 1)
  {
    sub_100015764(v445, &qword_1003645F8);
    if (v364(v363, 1LL, v448) == 1)
    {
      sub_100015764(v449, &qword_1003645F8);
      goto LABEL_166;
    }

    goto LABEL_164;
  }

  sub_10000E6C0(v449, v446, &qword_1003645F8);
  if (v364(v363, 1LL, v448) == 1)
  {
    sub_100015764(v445, &qword_1003645F8);
    sub_100004090(v446, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
LABEL_164:
    char v246 = &qword_100367400;
    uint64_t v247 = v449;
    goto LABEL_84;
  }

  uint64_t v365 = v447;
  sub_100003E68(v363, v447, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  uint64_t v366 = sub_10000FD98( &qword_10035D318,  type metadata accessor for Proto_Gnss_Emergency_SessionStatus,  (uint64_t)&unk_1002CE460);
  uint64_t v367 = v446;
  char v368 = dispatch thunk of static Equatable.== infix(_:_:)(v446, v365, v448, v366);
  sub_100004090(v365, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  sub_100015764(v445, &qword_1003645F8);
  sub_100004090(v367, type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
  sub_100015764(v449, &qword_1003645F8);
  if ((v368 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_166:
  uint64_t v369 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  &v555,  0LL,  0LL);
  uint64_t v370 = v452;
  sub_10000E6C0(v369, v452, &qword_100364600);
  uint64_t v371 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__decodedSuplInit,  &v554,  0LL,  0LL);
  uint64_t v372 = v456;
  uint64_t v373 = v456 + *(int *)(v450 + 48);
  sub_10000E6C0(v370, v456, &qword_100364600);
  sub_10000E6C0(v371, v373, &qword_100364600);
  uint64_t v374 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v451 + 48);
  if (v374(v372, 1LL, v455) == 1)
  {
    sub_100015764(v452, &qword_100364600);
    if (v374(v373, 1LL, v455) == 1)
    {
      sub_100015764(v456, &qword_100364600);
      goto LABEL_173;
    }

    goto LABEL_171;
  }

  sub_10000E6C0(v456, v453, &qword_100364600);
  if (v374(v373, 1LL, v455) == 1)
  {
    sub_100015764(v452, &qword_100364600);
    sub_100004090(v453, type metadata accessor for Proto_Gnss_Emergency_Init);
LABEL_171:
    char v246 = &qword_1003673F8;
    uint64_t v247 = v456;
    goto LABEL_84;
  }

  uint64_t v375 = v454;
  sub_100003E68(v373, v454, type metadata accessor for Proto_Gnss_Emergency_Init);
  uint64_t v376 = sub_10000FD98(&qword_10035D2E8, type metadata accessor for Proto_Gnss_Emergency_Init, (uint64_t)&unk_1002CE190);
  uint64_t v377 = v453;
  char v378 = dispatch thunk of static Equatable.== infix(_:_:)(v453, v375, v455, v376);
  sub_100004090(v375, type metadata accessor for Proto_Gnss_Emergency_Init);
  sub_100015764(v452, &qword_100364600);
  sub_100004090(v377, type metadata accessor for Proto_Gnss_Emergency_Init);
  sub_100015764(v456, &qword_100364600);
  if ((v378 & 1) == 0) {
    goto LABEL_191;
  }
LABEL_173:
  uint64_t v379 = (int *)(v403
               + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex);
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex,  &v553,  0LL,  0LL);
  int v380 = *v379;
  char v381 = *((_BYTE *)v379 + 4);
  uint64_t v382 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitIndex,  &v552,  0LL,  0LL);
  if ((v381 & 1) != 0)
  {
    if ((*(_BYTE *)(v382 + 4) & 1) == 0) {
      goto LABEL_191;
    }
  }

  else if ((*(_BYTE *)(v382 + 4) & 1) != 0 || v380 != *(_DWORD *)v382)
  {
    goto LABEL_191;
  }

  uint64_t v383 = (char *)(v403
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult,  &v551,  0LL,  0LL);
  uint64_t v384 = *v383;
  uint64_t v385 = (char *)(v404
                + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult);
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__suplInitDecodeResult,  &v550,  0LL,  0LL);
  uint64_t v386 = *v385;
  if (v384 == 4)
  {
    if ((_DWORD)v386 != 4) {
      goto LABEL_191;
    }
  }

  else if ((_DWORD)v386 == 4 || qword_1002DF0A0[v384] != qword_1002DF0A0[v386])
  {
    goto LABEL_191;
  }

  uint64_t v387 = (int *)(v403
               + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance);
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance,  &v549,  0LL,  0LL);
  int v388 = *v387;
  char v389 = *((_BYTE *)v387 + 4);
  uint64_t v390 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__simInstance,  &v548,  0LL,  0LL);
  if ((v389 & 1) != 0)
  {
    if ((*(_BYTE *)(v390 + 4) & 1) != 0) {
      goto LABEL_188;
    }
LABEL_191:
    uint64_t v225 = v403;
    goto LABEL_61;
  }

  if ((*(_BYTE *)(v390 + 4) & 1) != 0 || v388 != *(_DWORD *)v390) {
    goto LABEL_191;
  }
LABEL_188:
  uint64_t v391 = v403
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess( v403 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  &v547,  0LL,  0LL);
  uint64_t v392 = v459;
  sub_10000E6C0(v391, v459, &qword_100364608);
  uint64_t v393 = v404
       + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest;
  swift_beginAccess( v404 + OBJC_IVAR____TtCV10ALProtobuf21Proto_Gpsd_IndicationP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__wlanMeasurementRequest,  &v546,  0LL,  0LL);
  uint64_t v394 = v463;
  uint64_t v395 = v463 + *(int *)(v457 + 48);
  sub_10000E6C0(v392, v463, &qword_100364608);
  sub_10000E6C0(v393, v395, &qword_100364608);
  uint64_t v396 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v458 + 48);
  if (v396(v394, 1LL, v462) == 1)
  {
    swift_release(v403);
    swift_release(v404);
    sub_100015764(v459, &qword_100364608);
    if (v396(v395, 1LL, v462) == 1)
    {
      sub_100015764(v463, &qword_100364608);
      return 1LL;
    }

LABEL_194:
    sub_100015764(v463, &qword_1003673F0);
    return 0LL;
  }

  sub_10000E6C0(v463, v460, &qword_100364608);
  if (v396(v395, 1LL, v462) == 1)
  {
    swift_release(v403);
    swift_release(v404);
    sub_100015764(v459, &qword_100364608);
    sub_100004090(v460, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
    goto LABEL_194;
  }

  uint64_t v397 = v461;
  sub_100003E68(v395, v461, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  uint64_t v398 = sub_10000FD98( &qword_10035D248,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest,  (uint64_t)&unk_1002CD7B8);
  uint64_t v399 = v460;
  char v400 = dispatch thunk of static Equatable.== infix(_:_:)(v460, v397, v462, v398);
  swift_release(v403);
  swift_release(v404);
  sub_100004090(v397, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  sub_100015764(v459, &qword_100364608);
  sub_100004090(v399, type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
  sub_100015764(v463, &qword_100364608);
  return (v400 & 1) != 0;
}

Swift::Int sub_100265108()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_Indication, &qword_100364648, (uint64_t)&unk_1002DAD78);
}

uint64_t sub_100265124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD7C(a1, &qword_1003B6A50, &qword_1003B6A58, (uint64_t)sub_10025C9BC, a2);
}

uint64_t sub_100265140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025E528(a1, a2, a3);
}

uint64_t sub_100265154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10025EDD4(a1, a2, a3);
}

uint64_t sub_100265168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367380, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DACF0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002651B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A48, (uint64_t)qword_10036B6C0, (uint64_t)sub_10025C274, a1);
}

uint64_t sub_1002651D4(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100351740, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DAC78);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100265214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100351740, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DAC78);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_100265264()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B6D8);
  sub_10000E704(v0, (uint64_t)qword_10036B6D8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v56 = swift_allocObject(v1, v6 + 24 * v4, v5 | 7);
  *(_OWORD *)(v56 + 16) = xmmword_1002BAD50;
  uint64_t v7 = v56 + v6;
  uint64_t v8 = v56 + v6 + *(int *)(v2 + 48);
  *(void *)(v56 + v6) = 0LL;
  *(void *)uint64_t v8 = "PROTOBUF_DEFAULT";
  *(void *)(v8 + 8) = 16LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v56 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 1LL;
  *(void *)uint64_t v12 = "PVTM";
  *(void *)(v12 + 8) = 4LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v56 + v6 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 2LL;
  *(void *)uint64_t v14 = "STATUS";
  *((void *)v14 + 1) = 6LL;
  v14[16] = 2;
  v11();
  uint64_t v15 = (void *)(v56 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *uint64_t v15 = 3LL;
  *(void *)uint64_t v16 = "POWER_MEASUREMENT";
  *((void *)v16 + 1) = 17LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v56 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 4LL;
  *(void *)uint64_t v18 = "RECOVERY_STATISTICS";
  *((void *)v18 + 1) = 19LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v56 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 5LL;
  *(void *)uint64_t v20 = "LTL_INFO_REQUEST";
  *((void *)v20 + 1) = 16LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v56 + v6 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 9LL;
  *(void *)uint64_t v22 = "TIME_TRANSFER_DATA";
  *((void *)v22 + 1) = 18LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v56 + v6 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 10LL;
  *(void *)uint64_t v24 = "EMERG_SUMMARY_REPORT";
  *((void *)v24 + 1) = 20LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v56 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 11LL;
  *(void *)uint64_t v25 = "EMERG_POSITION_REPORT";
  *(void *)(v25 + 8) = 21LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v56 + v6 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 12LL;
  *(void *)uint64_t v27 = "EMERG_MEASUREMENT_REPORT";
  *((void *)v27 + 1) = 24LL;
  v27[16] = 2;
  v11();
  uint64_t v28 = (void *)(v56 + v6 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 13LL;
  *(void *)uint64_t v29 = "EMERG_ASSISTANCE_NEEDED_REPORT";
  *((void *)v29 + 1) = 30LL;
  v29[16] = 2;
  v11();
  uint64_t v30 = (void *)(v56 + v6 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 14LL;
  *(void *)uint64_t v31 = "EMERG_SUPL_SESSION_STATUS_REPORT";
  *((void *)v31 + 1) = 32LL;
  v31[16] = 2;
  v11();
  uint64_t v32 = (void *)(v56 + v6 + 12 * v4);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 48);
  *uint64_t v32 = 15LL;
  *(void *)uint64_t v33 = "EMERG_SUPL_LOCATION_ID_NEEDED_REPORT";
  *((void *)v33 + 1) = 36LL;
  v33[16] = 2;
  v11();
  uint64_t v34 = (void *)(v56 + v6 + 13 * v4);
  uint64_t v35 = (char *)v34 + *(int *)(v2 + 48);
  void *v34 = 16LL;
  *(void *)uint64_t v35 = "EMERG_DECODED_SUPL_INIT";
  *((void *)v35 + 1) = 23LL;
  v35[16] = 2;
  v11();
  uint64_t v36 = (void *)(v56 + v6 + 14 * v4);
  uint64_t v37 = (char *)v36 + *(int *)(v2 + 48);
  *uint64_t v36 = 17LL;
  *(void *)uint64_t v37 = "EMERG_FT_ASSISTANCE_NEEDED_REPORT";
  *((void *)v37 + 1) = 33LL;
  v37[16] = 2;
  v11();
  uint64_t v38 = (void *)(v56 + v6 + 15 * v4);
  uint64_t v39 = (char *)v38 + *(int *)(v2 + 48);
  *uint64_t v38 = 18LL;
  *(void *)uint64_t v39 = "DECODED_EXTENDED_EPHEMERIS";
  *((void *)v39 + 1) = 26LL;
  v39[16] = 2;
  v11();
  uint64_t v40 = v56 + v6 + 16 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 16 * v4) = 19LL;
  *(void *)uint64_t v40 = "DECODED_RTI";
  *(void *)(v40 + 8) = 11LL;
  *(_BYTE *)(v40 + 16) = 2;
  v11();
  uint64_t v41 = (void *)(v56 + v6 + 17 * v4);
  uint64_t v42 = (char *)v41 + *(int *)(v2 + 48);
  *uint64_t v41 = 20LL;
  *(void *)uint64_t v42 = "STOP_COMPLETED";
  *((void *)v42 + 1) = 14LL;
  v42[16] = 2;
  v11();
  uint64_t v43 = (void *)(v56 + v6 + 18 * v4);
  uint64_t v44 = (char *)v43 + *(int *)(v2 + 48);
  void *v43 = 21LL;
  *(void *)uint64_t v44 = "CNTIN_CLOCK_CONTROL";
  *((void *)v44 + 1) = 19LL;
  v44[16] = 2;
  v11();
  uint64_t v45 = (void *)(v56 + v6 + 19 * v4);
  uint64_t v46 = (char *)v45 + *(int *)(v2 + 48);
  void *v45 = 22LL;
  *(void *)uint64_t v46 = "START_COMPLETED";
  *((void *)v46 + 1) = 15LL;
  v46[16] = 2;
  v11();
  uint64_t v47 = (void *)(v56 + v6 + 20 * v4);
  uint64_t v48 = (char *)v47 + *(int *)(v2 + 48);
  void *v47 = 23LL;
  *(void *)uint64_t v48 = "EXCEPTION";
  *((void *)v48 + 1) = 9LL;
  v48[16] = 2;
  v11();
  uint64_t v49 = (void *)(v56 + v6 + 21 * v4);
  uint64_t v50 = (char *)v49 + *(int *)(v2 + 48);
  *uint64_t v49 = 24LL;
  *(void *)uint64_t v50 = "EMERG_SUPL_WLAN_MEAS_NEEDED_REPORT";
  *((void *)v50 + 1) = 34LL;
  v50[16] = 2;
  v11();
  uint64_t v51 = (void *)(v56 + v6 + 22 * v4);
  uint64_t v52 = (char *)v51 + *(int *)(v2 + 48);
  *uint64_t v51 = 25LL;
  *(void *)uint64_t v52 = "ASK_BASEBAND_RESET";
  *((void *)v52 + 1) = 18LL;
  v52[16] = 2;
  v11();
  uint64_t v53 = (void *)(v56 + v6 + 23 * v4);
  uint64_t v54 = (char *)v53 + *(int *)(v2 + 48);
  void *v53 = 26LL;
  *(void *)uint64_t v54 = "EMERG_MEASUREMENT_REPORT_WITH_ESTIMATE";
  *((void *)v54 + 1) = 38LL;
  v54[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v56);
}

uint64_t sub_100265854()
{
  return sub_100008C30(&qword_1003B6A60, (uint64_t)qword_10036B6D8, (uint64_t)sub_100265264);
}

uint64_t sub_100265870@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A60, (uint64_t)qword_10036B6D8, (uint64_t)sub_100265264, a1);
}

uint64_t sub_10026588C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A60, (uint64_t)qword_10036B6D8, (uint64_t)sub_100265264, a1);
}

void *sub_1002658A8()
{
  return &unk_100345C80;
}

unint64_t sub_1002658B4()
{
  return 0xD000000000000011LL;
}

uint64_t sub_1002658D0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B6F0);
  sub_10000E704(v0, (uint64_t)qword_10036B6F0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "gpsd_uptime";
  *(void *)(v9 + 8) = 11LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "device_uptime";
  *(void *)(v13 + 8) = 13LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "is_device_initialized";
  *((void *)v15 + 1) = 21LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "is_device_interface_busy";
  *((void *)v17 + 1) = 24LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 5LL;
  *(void *)uint64_t v18 = "is_device_active";
  *(void *)(v18 + 8) = 16LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100265AD4()
{
  return sub_100008C30(&qword_1003B6A68, (uint64_t)qword_10036B6F0, (uint64_t)sub_1002658D0);
}

uint64_t sub_100265AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A68, (uint64_t)qword_10036B6F0, (uint64_t)sub_1002658D0, a1);
}

uint64_t sub_100265B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 20);
          goto LABEL_10;
        case 2LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 24);
LABEL_10:
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + v10, a2, a3);
          break;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 32);
          goto LABEL_5;
        case 5LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_Status(0LL) + 36);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100265C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_Status(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v12, 2LL, a2, a3);
    }
    int v13 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    int v14 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v14 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 4LL, a2, a3);
    }
    int v15 = *(unsigned __int8 *)(v5 + v10[9]);
    if (v15 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v15 & 1, 5LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100265D88()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_Status, &qword_100364650, (uint64_t)&unk_1002DAF08);
}

uint64_t sub_100265DA4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v8) = 2;
  *(_BYTE *)(a2 + a1[9]) = 2;
  return result;
}

uint64_t sub_100265E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100265B0C(a1, a2, a3);
}

uint64_t sub_100265E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100265C28(a1, a2, a3);
}

uint64_t sub_100265E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367378, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAE80);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100265E78@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A68, (uint64_t)qword_10036B6F0, (uint64_t)sub_1002658D0, a1);
}

uint64_t sub_100265E94(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003648B0, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAE08);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100265ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003648B0, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAE08);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100265F24()
{
  return &unk_100345C90;
}

unint64_t sub_100265F30()
{
  return 0xD000000000000018LL;
}

uint64_t sub_100265F4C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B708);
  sub_10000E704(v0, (uint64_t)qword_10036B708);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 6 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32E0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "report_pvt";
  *(void *)(v9 + 8) = 10LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "report_measurement";
  *(void *)(v13 + 8) = 18LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  int v14 = (void *)(v8 + 2 * v4);
  int v15 = (char *)v14 + *(int *)(v2 + 48);
  *int v14 = 3LL;
  *(void *)int v15 = "include_extended_measurement_info";
  *((void *)v15 + 1) = 33LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "report_sv_info";
  *((void *)v17 + 1) = 14LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 5LL;
  *(void *)uint64_t v19 = "report_band_corrections";
  *((void *)v19 + 1) = 23LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 6LL;
  *(void *)uint64_t v21 = "report_time_conversion";
  *((void *)v21 + 1) = 22LL;
  v21[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100266180()
{
  return sub_100008C30(&qword_1003B6A70, (uint64_t)qword_10036B708, (uint64_t)sub_100265F4C);
}

uint64_t sub_10026619C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A70, (uint64_t)qword_10036B708, (uint64_t)sub_100265F4C, a1);
}

uint64_t sub_1002661B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 24);
          goto LABEL_5;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 32);
          goto LABEL_5;
        case 5LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 36);
          goto LABEL_5;
        case 6LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL) + 40);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_1002662C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  uint64_t v10 = (int *)result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v12 = *(unsigned __int8 *)(v5 + v10[6]);
    if (v12 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2LL, a2, a3);
    }
    int v13 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    int v14 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v14 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 4LL, a2, a3);
    }
    sub_100266430(v5, a1, a2, a3);
    sub_1002664A4(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100266430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 36));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 5LL, a3, a4);
  }
  return result;
}

uint64_t sub_1002664A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 6LL, a3, a4);
  }
  return result;
}

Swift::Int sub_10026651C()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_SetPvtmReport, &qword_100364658, (uint64_t)&unk_1002DB070);
}

uint64_t sub_100266538@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  *(_BYTE *)(a2 + v5) = 2;
  uint64_t v6 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v6) = 2;
  uint64_t v7 = a1[10];
  *(_BYTE *)(a2 + a1[9]) = 2;
  *(_BYTE *)(a2 + v7) = 2;
  return result;
}

uint64_t sub_100266584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002661B8(a1, a2, a3);
}

uint64_t sub_100266598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002662C4(a1, a2, a3);
}

uint64_t sub_1002665AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367370, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DAFE8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002665FC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A70, (uint64_t)qword_10036B708, (uint64_t)sub_100265F4C, a1);
}

uint64_t sub_100266618(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003648C8, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DAF70);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100266658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003648C8, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DAF70);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002666A8()
{
  return &unk_100345CA0;
}

unint64_t sub_1002666B4()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1002666D0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B720);
  sub_10000E704(v0, (uint64_t)qword_10036B720);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  int v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *int v8 = 1LL;
  *(void *)uint64_t v9 = "predictions_file";
  *(void *)(v9 + 8) = 16LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  int v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  int v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)int v13 = "compression_type";
  *((void *)v13 + 1) = 16LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100266824()
{
  return sub_100008C30(&qword_1003B6A78, (uint64_t)qword_10036B720, (uint64_t)sub_1002666D0);
}

uint64_t sub_100266840@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A78, (uint64_t)qword_10036B720, (uint64_t)sub_1002666D0, a1);
}

uint64_t sub_10026685C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        uint64_t v9 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL) + 24);
        unint64_t v10 = sub_100284658();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v9,  &type metadata for Proto_Gpsd_CompressionType,  v10,  a2,  a3);
      }

      else if (result == 1)
      {
        uint64_t v11 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
        dispatch thunk of Decoder.decodeSingularBytesField(value:)(v3 + *(int *)(v11 + 20), a2, a3);
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100266954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  unint64_t v12 = *(void *)(v11 + 8);
  if (v12 >> 60 != 15)
  {
    uint64_t v13 = *(void *)v11;
    sub_100017F58(*(void *)v11, *(void *)(v11 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(v13, v12, 1LL, a2, a3);
    uint64_t result = sub_10005F30C(v13, v12);
  }

  if (!v4)
  {
    if (*(_BYTE *)(v5 + *(int *)(v10 + 24)) != 3)
    {
      char v15 = *(_BYTE *)(v5 + *(int *)(v10 + 24));
      unint64_t v14 = sub_100284658();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v15,  2LL,  &type metadata for Proto_Gpsd_CompressionType,  v14,  a2,  a3);
    }

    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100266A6C()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  &qword_100364660,  (uint64_t)&unk_1002DB1D8);
}

double sub_100266A88@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result = 0.0;
  uint64_t v5 = *(int *)(a1 + 24);
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_1002B4290;
  *(_BYTE *)(a2 + v5) = 3;
  return result;
}

uint64_t sub_100266AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026685C(a1, a2, a3);
}

uint64_t sub_100266AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100266954(a1, a2, a3);
}

uint64_t sub_100266AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367368,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB150);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100266B3C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A78, (uint64_t)qword_10036B720, (uint64_t)sub_1002666D0, a1);
}

uint64_t sub_100266B58(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_1003648E0,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB0D8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100266B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003648E0,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB0D8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100266BE8()
{
  return &unk_100345CB0;
}

unint64_t sub_100266BF4()
{
  return 0xD000000000000018LL;
}

uint64_t sub_100266C10(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B738,  (uint64_t)"rti_file",  8LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_100266C30()
{
  return sub_100008C30(&qword_1003B6A80, (uint64_t)qword_10036B738, (uint64_t)sub_100266C10);
}

uint64_t sub_100266C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A80, (uint64_t)qword_10036B738, (uint64_t)sub_100266C10, a1);
}

uint64_t sub_100266C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026C8E4( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_InjectRtiFile,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularBytesField(value:));
}

uint64_t sub_100266C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL);
  uint64_t v10 = v5 + *(int *)(result + 20);
  unint64_t v11 = *(void *)(v10 + 8);
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *(void *)v10;
    sub_100017F58(*(void *)v10, *(void *)(v10 + 8));
    dispatch thunk of Visitor.visitSingularBytesField(value:fieldNumber:)(v12, v11, 1LL, a2, a3);
    uint64_t result = sub_10005F30C(v12, v11);
  }

  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_100266D54()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_InjectRtiFile, &qword_100364668, (uint64_t)&unk_1002DB340);
}

uint64_t sub_100266D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100266C8C(a1, a2, a3);
}

uint64_t sub_100266D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367360, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB2B8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100266DD4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A80, (uint64_t)qword_10036B738, (uint64_t)sub_100266C10, a1);
}

uint64_t sub_100266DF0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003648F8, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB240);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100266E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003648F8, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB240);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100266E80()
{
  return &unk_100345CC0;
}

unint64_t sub_100266E8C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_100266EA8(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B750,  (uint64_t)"blocklist",  9LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_100266EC8()
{
  return sub_100008C30(&qword_1003B6A88, (uint64_t)qword_10036B750, (uint64_t)sub_100266EA8);
}

uint64_t sub_100266EE4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A88, (uint64_t)qword_10036B750, (uint64_t)sub_100266EA8, a1);
}

uint64_t sub_100266F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026872C( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_SvId,  &qword_100363438,  (uint64_t)&unk_1002D8B48);
}

uint64_t sub_100266F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268828( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_SvId,  &qword_100363438,  (uint64_t)&unk_1002D8B48,  (void (*)(void))type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t sub_100266F60(uint64_t *a1, uint64_t *a2)
{
  return sub_100276128( a1,  a2,  type metadata accessor for Proto_Gnss_SvId,  &qword_100363440,  (uint64_t)&unk_1002D8C88,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist) & 1;
}

Swift::Int sub_100266F98()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  &qword_100364670,  (uint64_t)&unk_1002DB4A8);
}

uint64_t sub_100266FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367358,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB420);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100267004@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A88, (uint64_t)qword_10036B750, (uint64_t)sub_100266EA8, a1);
}

uint64_t sub_100267020(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364910,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB3A8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100267060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364910,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB3A8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002670B0()
{
  return &unk_100345CD0;
}

unint64_t sub_1002670BC()
{
  return 0xD000000000000023LL;
}

uint64_t sub_1002670D8()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B768);
  sub_10000E704(v0, (uint64_t)qword_10036B768);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v8 = "position";
  *(void *)(v8 + 8) = 8LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  unint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v6 + v4) = 2LL;
  *(void *)uint64_t v12 = "position_assist_type";
  *(void *)(v12 + 8) = 20LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v7 + v6 + 2 * v4);
  unint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)unint64_t v14 = "altitude_valid";
  *((void *)v14 + 1) = 14LL;
  v14[16] = 2;
  v11();
  char v15 = (void *)(v7 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *char v15 = 10LL;
  *(void *)uint64_t v16 = "mach_continuous_time_ns";
  *((void *)v16 + 1) = 23LL;
  v16[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1002672A4()
{
  return sub_100008C30(&qword_1003B6A90, (uint64_t)qword_10036B768, (uint64_t)sub_1002670D8);
}

uint64_t sub_1002672C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A90, (uint64_t)qword_10036B768, (uint64_t)sub_1002670D8, a1);
}

uint64_t sub_1002672DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 20);
          uint64_t v11 = type metadata accessor for Proto_Gnss_Position(0LL);
          uint64_t v12 = sub_10000FD98(&qword_100363378, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8008);
          uint64_t v13 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v10, v11, v12, a2, a3);
          goto LABEL_5;
        case 2LL:
          uint64_t v14 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL) + 24);
          unint64_t v15 = sub_100222028();
          uint64_t v13 = v9;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v14,  &type metadata for Proto_Gnss_PositionAssistType,  v15,  a2,  a3);
          goto LABEL_5;
        case 3LL:
          uint64_t v16 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
          uint64_t v13 = v9;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v16 + 28), a2, a3);
          goto LABEL_5;
        case 10LL:
          uint64_t v17 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
          uint64_t v13 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v17 + 32), a2, a3);
LABEL_5:
          uint64_t v9 = v13;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100267460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = sub_100267590(v5, a1, a2, a3);
  if (!v4)
  {
    uint64_t v10 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
    uint64_t v11 = v10;
    if (*(_BYTE *)(v5 + *(int *)(v10 + 24)) != 4)
    {
      char v15 = *(_BYTE *)(v5 + *(int *)(v10 + 24));
      unint64_t v12 = sub_100222028();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v15,  2LL,  &type metadata for Proto_Gnss_PositionAssistType,  v12,  a2,  a3);
    }

    int v13 = *(unsigned __int8 *)(v5 + *(int *)(v11 + 28));
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    uint64_t v14 = v5 + *(int *)(v11 + 32);
    if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v14, 10LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100267590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100363120);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 20), (uint64_t)v8, &qword_100363120);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gnss_Position);
  uint64_t v15 = sub_10000FD98(&qword_100363378, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8008);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 1LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gnss_Position);
}

Swift::Int sub_100267708()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  &qword_100364678,  (uint64_t)&unk_1002DB610);
}

uint64_t sub_100267724@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a2 + a1[5];
  uint64_t v5 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))( v4,  1LL,  1LL,  v5);
  uint64_t v7 = a1[7];
  *(_BYTE *)(a2 + a1[6]) = 4;
  *(_BYTE *)(a2 + v7) = 2;
  uint64_t v8 = a2 + a1[8];
  *(void *)uint64_t v8 = 0LL;
  *(_BYTE *)(v8 + 8) = 1;
  return result;
}

uint64_t sub_1002677A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002672DC(a1, a2, a3);
}

uint64_t sub_1002677B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100267460(a1, a2, a3);
}

uint64_t sub_1002677CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367350,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB588);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026781C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A90, (uint64_t)qword_10036B768, (uint64_t)sub_1002670D8, a1);
}

uint64_t sub_100267838(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364928,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB510);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100267878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364928,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB510);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002678CC()
{
  return &unk_100345CE0;
}

unint64_t sub_1002678D8()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1002678F4()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B780);
  sub_10000E704(v0, (uint64_t)qword_10036B780);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "gps_nanoseconds";
  *(void *)(v9 + 8) = 15LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  unint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "uncertainty_nanoseconds";
  *((void *)v13 + 1) = 23LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "mach_continuous_time_ns";
  *(void *)(v14 + 8) = 23LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100267A84()
{
  return sub_100008C30(&qword_1003B6A98, (uint64_t)qword_10036B780, (uint64_t)sub_1002678F4);
}

uint64_t sub_100267AA0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6A98, (uint64_t)qword_10036B780, (uint64_t)sub_1002678F4, a1);
}

uint64_t sub_100267ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268CB0( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt64Field(value:));
}

uint64_t sub_100267AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + *(int *)(v10 + 24);
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v12, 2LL, a2, a3);
    }
    uint64_t v13 = v5 + *(int *)(v10 + 28);
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v13, 3LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100267BDC()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  &qword_100364680,  (uint64_t)&unk_1002DB778);
}

uint64_t sub_100267BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100267AE0(a1, a2, a3);
}

uint64_t sub_100267C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367348,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB6F0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100267C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6A98, (uint64_t)qword_10036B780, (uint64_t)sub_1002678F4, a1);
}

uint64_t sub_100267C78(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364940,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB678);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100267CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364940,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB678);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100267D08()
{
  return &unk_100345CF0;
}

unint64_t sub_100267D14()
{
  return 0xD000000000000019LL;
}

uint64_t sub_100267D30(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B798,  (uint64_t)"delete_flags",  12LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_100267D50()
{
  return sub_100008C30(&qword_1003B6AA0, (uint64_t)qword_10036B798, (uint64_t)sub_100267D30);
}

uint64_t sub_100267D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AA0, (uint64_t)qword_10036B798, (uint64_t)sub_100267D30, a1);
}

uint64_t sub_100267D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100267FCC(a1, a2, a3, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_100267DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268080(a1, a2, a3, type metadata accessor for Proto_Gpsd_DeleteGnssData);
}

uint64_t sub_100267DC0(uint64_t a1, uint64_t a2)
{
  return sub_100277190(a1, a2, type metadata accessor for Proto_Gpsd_DeleteGnssData) & 1;
}

Swift::Int sub_100267DE0()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_DeleteGnssData, &qword_100364688, (uint64_t)&unk_1002DB8E0);
}

uint64_t sub_100267DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a2 + *(int *)(a1 + 20);
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  return result;
}

uint64_t sub_100267E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367340, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB858);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100267E84@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AA0, (uint64_t)qword_10036B798, (uint64_t)sub_100267D30, a1);
}

uint64_t sub_100267EA0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364958, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB7E0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100267EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364958, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB7E0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100267F30()
{
  return &unk_100345D00;
}

unint64_t sub_100267F3C()
{
  return 0xD000000000000019LL;
}

uint64_t sub_100267F58(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B7B0,  (uint64_t)"nmea_mask",  9LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_100267F78()
{
  return sub_100008C30(&qword_1003B6AA8, (uint64_t)qword_10036B7B0, (uint64_t)sub_100267F58);
}

uint64_t sub_100267F94@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AA8, (uint64_t)qword_10036B7B0, (uint64_t)sub_100267F58, a1);
}

uint64_t sub_100267FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100267FCC(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_100267FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v9 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v9, i);
    if (v5 || (v12 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      uint64_t v13 = a4(0LL);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v4 + *(int *)(v13 + 20), a2, a3);
    }

    uint64_t v5 = 0LL;
    uint64_t v9 = a2;
  }

  return result;
}

uint64_t sub_100268064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268080(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t sub_100268080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4;
  uint64_t result = a4(0LL);
  uint64_t v11 = v6 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v5) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100268114(uint64_t a1, uint64_t a2)
{
  return sub_100277190(a1, a2, type metadata accessor for Proto_Gpsd_SetNmeaHandler) & 1;
}

Swift::Int sub_100268134()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_SetNmeaHandler, &qword_100364690, (uint64_t)&unk_1002DBA48);
}

uint64_t sub_100268150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367338, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DB9C0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002681A0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AA8, (uint64_t)qword_10036B7B0, (uint64_t)sub_100267F58, a1);
}

uint64_t sub_1002681BC(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364970, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DB948);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1002681FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364970, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DB948);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026824C()
{
  return &unk_100345D10;
}

unint64_t sub_100268258()
{
  return 0xD000000000000020LL;
}

uint64_t sub_100268274(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B7C8,  (uint64_t)"samples",  7LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_100268294()
{
  return sub_100008C30(&qword_1003B6AB0, (uint64_t)qword_10036B7C8, (uint64_t)sub_100268274);
}

uint64_t sub_1002682B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AB0, (uint64_t)qword_10036B7C8, (uint64_t)sub_100268274, a1);
}

uint64_t sub_1002682CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026872C( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_RawPressureSample,  &qword_100363408,  (uint64_t)&unk_1002D8878);
}

uint64_t sub_1002682F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268828( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_RawPressureSample,  &qword_100363408,  (uint64_t)&unk_1002D8878,  (void (*)(void))type metadata accessor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t sub_10026832C(uint64_t *a1, uint64_t *a2)
{
  return sub_100276128( a1,  a2,  type metadata accessor for Proto_Gnss_RawPressureSample,  &qword_100363410,  (uint64_t)&unk_1002D89B8,  type metadata accessor for Proto_Gpsd_SetAssistancePressure) & 1;
}

Swift::Int sub_100268364()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistancePressure,  &qword_100364698,  (uint64_t)&unk_1002DBBB0);
}

uint64_t sub_100268380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367330,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBB28);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002683D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AB0, (uint64_t)qword_10036B7C8, (uint64_t)sub_100268274, a1);
}

uint64_t sub_1002683EC(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364988,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBAB0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026842C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364988,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBAB0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026847C()
{
  return &unk_100345D20;
}

unint64_t sub_100268488()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1002684A4(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B7E0,  (uint64_t)"samples",  7LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_1002684C4()
{
  return sub_100008C30(&qword_1003B6AB8, (uint64_t)qword_10036B7E0, (uint64_t)sub_1002684A4);
}

uint64_t sub_1002684E0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AB8, (uint64_t)qword_10036B7E0, (uint64_t)sub_1002684A4, a1);
}

uint64_t sub_1002684FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026872C( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  &qword_100363420,  (uint64_t)&unk_1002D89E0);
}

uint64_t sub_100268528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268828( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  &qword_100363420,  (uint64_t)&unk_1002D89E0,  (void (*)(void))type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t sub_10026855C(uint64_t *a1, uint64_t *a2)
{
  return sub_100276128( a1,  a2,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  &qword_100363428,  (uint64_t)&unk_1002D8B20,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel) & 1;
}

Swift::Int sub_100268594()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  &qword_1003646A0,  (uint64_t)&unk_1002DBD18);
}

uint64_t sub_1002685B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367328,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBC90);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100268600@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AB8, (uint64_t)qword_10036B7E0, (uint64_t)sub_1002684A4, a1);
}

uint64_t sub_10026861C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_1003649A0,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBC18);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026865C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003649A0,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBC18);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002686AC()
{
  return &unk_100345D30;
}

unint64_t sub_1002686B8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1002686D4(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B7F8,  (uint64_t)"samples",  7LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_1002686F4()
{
  return sub_100008C30(&qword_1003B6AC0, (uint64_t)qword_10036B7F8, (uint64_t)sub_1002686D4);
}

uint64_t sub_100268710@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AC0, (uint64_t)qword_10036B7F8, (uint64_t)sub_1002686D4, a1);
}

uint64_t sub_10026872C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v13 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v13, i);
    if (v7 || (v16 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      uint64_t v17 = a4(0LL);
      uint64_t v18 = sub_10000FD98(a5, a4, a6);
      dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v6, v17, v18, a2, a3);
    }

    uint64_t v7 = 0LL;
    uint64_t v13 = a2;
  }

  return result;
}

uint64_t sub_1002687F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268828( a1,  a2,  a3,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  &qword_100363420,  (uint64_t)&unk_1002D89E0,  (void (*)(void))type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t sub_100268828( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(void))
{
  uint64_t v9 = v7;
  uint64_t v10 = a3;
  uint64_t v13 = *v9;
  if (*(void *)(*v9 + 16))
  {
    uint64_t v23 = a7;
    uint64_t v17 = a4(0LL);
    uint64_t v18 = sub_10000FD98(a5, a4, a6);
    uint64_t v19 = v17;
    uint64_t v10 = a3;
    uint64_t result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v13, 1LL, v19, v18, a2, a3);
    a7 = v23;
    uint64_t v21 = a1;
    if (v8) {
      return result;
    }
  }

  else
  {
    uint64_t v21 = a1;
  }

  a7(0LL);
  return UnknownStorage.traverse<A>(visitor:)(v21, a2, v10);
}

uint64_t sub_100268920(uint64_t *a1, uint64_t *a2)
{
  return sub_100276128( a1,  a2,  type metadata accessor for Proto_Gnss_SensorSample3Axis,  &qword_100363428,  (uint64_t)&unk_1002D8B20,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro) & 1;
}

Swift::Int sub_100268958()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  &qword_1003646A8,  (uint64_t)&unk_1002DBE80);
}

uint64_t sub_100268974@<X0>(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
  return UnknownStorage.init()();
}

uint64_t sub_10026899C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367320, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&unk_1002DBDF8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002689EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AC0, (uint64_t)qword_10036B7F8, (uint64_t)sub_1002686D4, a1);
}

uint64_t sub_100268A08(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003649B8, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&unk_1002DBD80);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100268A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003649B8, type metadata accessor for Proto_Gpsd_SetAssistanceGyro, (uint64_t)&unk_1002DBD80);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100268A98()
{
  return &unk_100345D40;
}

unint64_t sub_100268AA4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100268AC0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B810);
  sub_10000E704(v0, (uint64_t)qword_10036B810);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  char v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "ellipsoidal_altitude_wgs84";
  *((void *)v13 + 1) = 26LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "altitude_uncertainty";
  *(void *)(v14 + 8) = 20LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100268C54()
{
  return sub_100008C30(&qword_1003B6AC8, (uint64_t)qword_10036B810, (uint64_t)sub_100268AC0);
}

uint64_t sub_100268C70@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AC8, (uint64_t)qword_10036B810, (uint64_t)sub_100268AC0, a1);
}

uint64_t sub_100268C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268CB0( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_SetAssistanceDem,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularDoubleField(value:));
}

uint64_t sub_100268CB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v11, i);
    if (v6 || (v15 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3LL:
        uint64_t v13 = *(int *)(a4(0LL) + 28);
LABEL_3:
        a5(v5 + v13, a2, a3);
        break;
      case 2LL:
        uint64_t v13 = *(int *)(a4(0LL) + 24);
        goto LABEL_3;
      case 1LL:
        uint64_t v16 = a4(0LL);
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v5 + *(int *)(v16 + 20), a2, a3);
        break;
    }

    uint64_t v6 = 0LL;
    uint64_t v11 = a2;
  }

  return result;
}

uint64_t sub_100268DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026B334(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t sub_100268DC0(uint64_t a1, uint64_t a2)
{
  return sub_100276CD4(a1, a2, type metadata accessor for Proto_Gpsd_SetAssistanceDem) & 1;
}

Swift::Int sub_100268DE0()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceDem,  &qword_1003646B0,  (uint64_t)&unk_1002DBFE8);
}

uint64_t sub_100268DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367318, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&unk_1002DBF60);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100268E4C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AC8, (uint64_t)qword_10036B810, (uint64_t)sub_100268AC0, a1);
}

uint64_t sub_100268E68(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_1003649D0, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&unk_1002DBEE8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100268EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003649D0, type metadata accessor for Proto_Gpsd_SetAssistanceDem, (uint64_t)&unk_1002DBEE8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100268EF8()
{
  return &unk_100345D50;
}

unint64_t sub_100268F04()
{
  return 0xD000000000000021LL;
}

uint64_t sub_100268F20()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B828);
  sub_10000E704(v0, (uint64_t)qword_10036B828);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v35 = swift_allocObject(v1, v6 + 13 * v4, v5 | 7);
  *(_OWORD *)(v35 + 16) = xmmword_1002B42B0;
  uint64_t v7 = v35 + v6;
  uint64_t v8 = v35 + v6 + *(int *)(v2 + 48);
  *(void *)(v35 + v6) = 1LL;
  *(void *)uint64_t v8 = "mach_continuous_time_ns";
  *(void *)(v8 + 8) = 23LL;
  *(_BYTE *)(v8 + 16) = 2;
  uint64_t v9 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v10 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v11 = *(void (**)(void))(*(void *)(v10 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v8, v9, v10);
  uint64_t v12 = v35 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v7 + v4) = 2LL;
  *(void *)uint64_t v12 = "segment_start_latitude";
  *(void *)(v12 + 8) = 22LL;
  *(_BYTE *)(v12 + 16) = 2;
  v11();
  uint64_t v13 = (void *)(v35 + v6 + 2 * v4);
  uint64_t v14 = (char *)v13 + *(int *)(v2 + 48);
  *uint64_t v13 = 3LL;
  *(void *)uint64_t v14 = "segment_start_longitude";
  *((void *)v14 + 1) = 23LL;
  v14[16] = 2;
  v11();
  char v15 = (void *)(v35 + v6 + 3 * v4);
  uint64_t v16 = (char *)v15 + *(int *)(v2 + 48);
  *char v15 = 4LL;
  *(void *)uint64_t v16 = "altitude_valid";
  *((void *)v16 + 1) = 14LL;
  v16[16] = 2;
  v11();
  uint64_t v17 = (void *)(v35 + v6 + 4 * v4);
  uint64_t v18 = (char *)v17 + *(int *)(v2 + 48);
  *uint64_t v17 = 5LL;
  *(void *)uint64_t v18 = "segment_start_alt_wgs84";
  *((void *)v18 + 1) = 23LL;
  v18[16] = 2;
  v11();
  uint64_t v19 = (void *)(v35 + v6 + 5 * v4);
  uint64_t v20 = (char *)v19 + *(int *)(v2 + 48);
  void *v19 = 6LL;
  *(void *)uint64_t v20 = "segment_length_m";
  *((void *)v20 + 1) = 16LL;
  v20[16] = 2;
  v11();
  uint64_t v21 = (void *)(v35 + v6 + 6 * v4);
  uint64_t v22 = (char *)v21 + *(int *)(v2 + 48);
  *uint64_t v21 = 7LL;
  *(void *)uint64_t v22 = "segment_direction_deg";
  *((void *)v22 + 1) = 21LL;
  v22[16] = 2;
  v11();
  uint64_t v23 = (void *)(v35 + v6 + 7 * v4);
  uint64_t v24 = (char *)v23 + *(int *)(v2 + 48);
  *uint64_t v23 = 8LL;
  *(void *)uint64_t v24 = "segment_width_m";
  *((void *)v24 + 1) = 15LL;
  v24[16] = 2;
  v11();
  uint64_t v25 = v35 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v7 + 8 * v4) = 9LL;
  *(void *)uint64_t v25 = "is_freeway";
  *(void *)(v25 + 8) = 10LL;
  *(_BYTE *)(v25 + 16) = 2;
  v11();
  uint64_t v26 = (void *)(v35 + v6 + 9 * v4);
  uint64_t v27 = (char *)v26 + *(int *)(v2 + 48);
  *uint64_t v26 = 10LL;
  *(void *)uint64_t v27 = "is_railway";
  *((void *)v27 + 1) = 10LL;
  v27[16] = 2;
  v11();
  uint64_t v28 = (void *)(v35 + v6 + 10 * v4);
  uint64_t v29 = (char *)v28 + *(int *)(v2 + 48);
  void *v28 = 11LL;
  *(void *)uint64_t v29 = "is_one_way_road";
  *((void *)v29 + 1) = 15LL;
  v29[16] = 2;
  v11();
  uint64_t v30 = (void *)(v35 + v6 + 11 * v4);
  uint64_t v31 = (char *)v30 + *(int *)(v2 + 48);
  void *v30 = 12LL;
  *(void *)uint64_t v31 = "is_tunnel";
  *((void *)v31 + 1) = 9LL;
  v31[16] = 2;
  v11();
  uint64_t v32 = (void *)(v35 + v6 + 12 * v4);
  uint64_t v33 = (char *)v32 + *(int *)(v2 + 48);
  *uint64_t v32 = 13LL;
  *(void *)uint64_t v33 = "is_bridge";
  *((void *)v33 + 1) = 9LL;
  v33[16] = 2;
  v11();
  return _NameMap.init(dictionaryLiteral:)(v35);
}

uint64_t sub_1002692B8()
{
  return sub_100008C30(&qword_1003B6AD0, (uint64_t)qword_10036B828, (uint64_t)sub_100268F20);
}

uint64_t sub_1002692D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AD0, (uint64_t)qword_10036B828, (uint64_t)sub_100268F20, a1);
}

uint64_t sub_1002692F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v9 + 20), a2, a3);
          break;
        case 2LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 24);
          goto LABEL_13;
        case 3LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 28);
          goto LABEL_13;
        case 4LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 32);
          goto LABEL_19;
        case 5LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 36);
          goto LABEL_13;
        case 6LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 40);
          goto LABEL_13;
        case 7LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 44);
          goto LABEL_13;
        case 8LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 48);
LABEL_13:
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v10, a2, a3);
          break;
        case 9LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 52);
          goto LABEL_19;
        case 10LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 56);
          goto LABEL_19;
        case 11LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 60);
          goto LABEL_19;
        case 12LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 64);
          goto LABEL_19;
        case 13LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL) + 68);
LABEL_19:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v11, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_1002694A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2LL, a2, a3, *(double *)v12);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3LL, a2, a3, *(double *)v13);
    }
    int v14 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v14 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 4LL, a2, a3);
    }
    sub_1002696F0(v5, a1, a2, a3);
    sub_100269764(v5, a1, a2, a3);
    sub_1002697D8(v5, a1, a2, a3);
    sub_10026984C(v5, a1, a2, a3);
    sub_1002698C0(v5, a1, a2, a3);
    sub_100269934(v5, a1, a2, a3);
    sub_1002699A8(v5, a1, a2, a3);
    sub_100269A1C(v5, a1, a2, a3);
    sub_100269A90(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_1002696F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v8 = a1 + *(int *)(result + 36);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(5LL, a3, a4, *(double *)v8);
  }
  return result;
}

uint64_t sub_100269764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v8 = a1 + *(int *)(result + 40);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(6LL, a3, a4, *(double *)v8);
  }
  return result;
}

uint64_t sub_1002697D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v8 = a1 + *(int *)(result + 44);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(7LL, a3, a4, *(double *)v8);
  }
  return result;
}

uint64_t sub_10026984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v8 = a1 + *(int *)(result + 48);
  if ((*(_BYTE *)(v8 + 8) & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(8LL, a3, a4, *(double *)v8);
  }
  return result;
}

uint64_t sub_1002698C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 52));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 9LL, a3, a4);
  }
  return result;
}

uint64_t sub_100269934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 56));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 10LL, a3, a4);
  }
  return result;
}

uint64_t sub_1002699A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 60));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 11LL, a3, a4);
  }
  return result;
}

uint64_t sub_100269A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 64));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 12LL, a3, a4);
  }
  return result;
}

uint64_t sub_100269A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 68));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 13LL, a3, a4);
  }
  return result;
}

Swift::Int sub_100269B08()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  &qword_1003646B8,  (uint64_t)&unk_1002DC150);
}

uint64_t sub_100269B24@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = a1[8];
  uint64_t v9 = a2 + a1[7];
  *(void *)uint64_t v9 = 0LL;
  *(_BYTE *)(v9 + 8) = 1;
  *(_BYTE *)(a2 + v8) = 2;
  uint64_t v10 = a1[10];
  uint64_t v11 = a2 + a1[9];
  *(void *)uint64_t v11 = 0LL;
  *(_BYTE *)(v11 + 8) = 1;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v12 = 0LL;
  *(_BYTE *)(v12 + 8) = 1;
  uint64_t v13 = a1[12];
  uint64_t v14 = a2 + a1[11];
  *(void *)uint64_t v14 = 0LL;
  *(_BYTE *)(v14 + 8) = 1;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v15 = 0LL;
  *(_BYTE *)(v15 + 8) = 1;
  uint64_t v16 = a1[14];
  *(_BYTE *)(a2 + a1[13]) = 2;
  *(_BYTE *)(a2 + v16) = 2;
  uint64_t v17 = a1[16];
  *(_BYTE *)(a2 + a1[15]) = 2;
  *(_BYTE *)(a2 + v17) = 2;
  *(_BYTE *)(a2 + a1[17]) = 2;
  return result;
}

uint64_t sub_100269BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002692F0(a1, a2, a3);
}

uint64_t sub_100269BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002694A4(a1, a2, a3);
}

uint64_t sub_100269C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367310,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC0C8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100269C50@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AD0, (uint64_t)qword_10036B828, (uint64_t)sub_100268F20, a1);
}

uint64_t sub_100269C6C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_1003649E8,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC050);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100269CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003649E8,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC050);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100269CFC()
{
  return &unk_100345D60;
}

unint64_t sub_100269D08()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_100269D24()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B840);
  sub_10000E704(v0, (uint64_t)qword_10036B840);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "context";
  *(void *)(v13 + 8) = 7LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "moving_state";
  *((void *)v15 + 1) = 12LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "motion_reliability";
  *((void *)v17 + 1) = 18LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100269EEC()
{
  return sub_100008C30(&qword_1003B6AD8, (uint64_t)qword_10036B840, (uint64_t)sub_100269D24);
}

uint64_t sub_100269F08@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AD8, (uint64_t)qword_10036B840, (uint64_t)sub_100269D24, a1);
}

uint64_t sub_100269F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v13 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v13 + 20), a2, a3);
          break;
        case 2LL:
          uint64_t v9 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 24);
          unint64_t v10 = sub_100221FE4();
          uint64_t v11 = v9;
          uint64_t v12 = &type metadata for Proto_Gnss_MotionActivityContext;
          goto LABEL_5;
        case 3LL:
          uint64_t v14 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 28);
          unint64_t v10 = sub_100221FA0();
          uint64_t v11 = v14;
          uint64_t v12 = &type metadata for Proto_Gnss_MovingState;
          goto LABEL_5;
        case 4LL:
          uint64_t v15 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL) + 32);
          unint64_t v10 = sub_100221F5C();
          uint64_t v11 = v15;
          uint64_t v12 = &type metadata for Proto_Gnss_Reliability;
LABEL_5:
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v11, v12, v10, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10026A08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  unint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    if (*(_BYTE *)(v5 + v10[6]) != 10)
    {
      char v15 = *(_BYTE *)(v5 + v10[6]);
      unint64_t v12 = sub_100221FE4();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v15,  2LL,  &type metadata for Proto_Gnss_MotionActivityContext,  v12,  a2,  a3);
    }

    if (*(_BYTE *)(v5 + v10[7]) != 5)
    {
      char v16 = *(_BYTE *)(v5 + v10[7]);
      unint64_t v13 = sub_100221FA0();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v16,  3LL,  &type metadata for Proto_Gnss_MovingState,  v13,  a2,  a3);
    }

    if (*(_BYTE *)(v5 + v10[8]) != 6)
    {
      char v17 = *(_BYTE *)(v5 + v10[8]);
      unint64_t v14 = sub_100221F5C();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v17,  4LL,  &type metadata for Proto_Gnss_Reliability,  v14,  a2,  a3);
    }

    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026A200()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  &qword_1003646C0,  (uint64_t)&unk_1002DC2B8);
}

uint64_t sub_10026A21C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 10;
  uint64_t v7 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 5;
  *(_BYTE *)(a2 + v7) = 6;
  return result;
}

uint64_t sub_10026A270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100269F24(a1, a2, a3);
}

uint64_t sub_10026A284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026A08C(a1, a2, a3);
}

uint64_t sub_10026A298(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367308,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC230);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026A2E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AD8, (uint64_t)qword_10036B840, (uint64_t)sub_100269D24, a1);
}

uint64_t sub_10026A304(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A00,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC1B8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026A344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A00,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC1B8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026A394()
{
  return &unk_100345D70;
}

unint64_t sub_10026A3A0()
{
  return 0xD000000000000022LL;
}

uint64_t sub_10026A3BC()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B858);
  sub_10000E704(v0, (uint64_t)qword_10036B858);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  unint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  unint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)unint64_t v13 = "mount_state";
  *((void *)v13 + 1) = 11LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026A50C()
{
  return sub_100008C30(&qword_1003B6AE0, (uint64_t)qword_10036B858, (uint64_t)sub_10026A3BC);
}

uint64_t sub_10026A528@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AE0, (uint64_t)qword_10036B858, (uint64_t)sub_10026A3BC, a1);
}

uint64_t sub_10026A544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        uint64_t v9 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL) + 24);
        unint64_t v10 = sub_100221F18();
        dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v9,  &type metadata for Proto_Gnss_DeviceMountState,  v10,  a2,  a3);
      }

      else if (result == 1)
      {
        uint64_t v11 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
        dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v11 + 20), a2, a3);
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10026A63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    if (*(_BYTE *)(v5 + *(int *)(v10 + 24)) != 4)
    {
      char v13 = *(_BYTE *)(v5 + *(int *)(v10 + 24));
      unint64_t v12 = sub_100221F18();
      dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v13,  2LL,  &type metadata for Proto_Gnss_DeviceMountState,  v12,  a2,  a3);
    }

    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026A724()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  &qword_1003646C8,  (uint64_t)&unk_1002DC420);
}

uint64_t sub_10026A740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = *(int *)(a1 + 24);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  *(_BYTE *)(a2 + v5) = 4;
  return result;
}

uint64_t sub_10026A780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026A544(a1, a2, a3);
}

uint64_t sub_10026A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026A63C(a1, a2, a3);
}

uint64_t sub_10026A7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367300,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC398);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026A7F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AE0, (uint64_t)qword_10036B858, (uint64_t)sub_10026A3BC, a1);
}

uint64_t sub_10026A814(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A18,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC320);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026A854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A18,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC320);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026A8A4()
{
  return &unk_100345D80;
}

unint64_t sub_10026A8B0()
{
  return 0xD000000000000029LL;
}

uint64_t sub_10026A8CC(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B870,  (uint64_t)"signal_environment_type",  23LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_10026A8EC()
{
  return sub_100008C30(&qword_1003B6AE8, (uint64_t)qword_10036B870, (uint64_t)sub_10026A8CC);
}

uint64_t sub_10026A908@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AE8, (uint64_t)qword_10036B870, (uint64_t)sub_10026A8CC, a1);
}

uint64_t sub_10026A924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026E234( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t (*)(void))sub_100221ED4,  (uint64_t)&type metadata for Proto_Gnss_SignalEnvironmentType);
}

uint64_t sub_10026A950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL);
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 8)
  {
    char v11 = *(_BYTE *)(v5 + *(int *)(result + 20));
    unint64_t v10 = sub_100221ED4();
    uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v11,  1LL,  &type metadata for Proto_Gnss_SignalEnvironmentType,  v10,  a2,  a3);
  }

  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10026A9FC()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  &qword_1003646D0,  (uint64_t)&unk_1002DC588);
}

uint64_t sub_10026AA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 8;
  return result;
}

uint64_t sub_10026AA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026A950(a1, a2, a3);
}

uint64_t sub_10026AA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672F8,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC500);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026AAAC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AE8, (uint64_t)qword_10036B870, (uint64_t)sub_10026A8CC, a1);
}

uint64_t sub_10026AAC8(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A30,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC488);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026AB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A30,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC488);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026AB58()
{
  return &unk_100345D90;
}

unint64_t sub_10026AB64()
{
  return 0xD000000000000027LL;
}

uint64_t sub_10026AB80()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B888);
  sub_10000E704(v0, (uint64_t)qword_10036B888);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  unint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "duration";
  *(void *)(v13 + 8) = 8LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  unint64_t v14 = (void *)(v8 + 2 * v4);
  char v15 = (char *)v14 + *(int *)(v2 + 48);
  *unint64_t v14 = 3LL;
  *(void *)char v15 = "speed_lower_bound";
  *((void *)v15 + 1) = 17LL;
  v15[16] = 2;
  v12();
  char v16 = (void *)(v8 + 3 * v4);
  char v17 = (char *)v16 + *(int *)(v2 + 48);
  *char v16 = 4LL;
  *(void *)char v17 = "speed_upper_bound";
  *((void *)v17 + 1) = 17LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026AD4C()
{
  return sub_100008C30(&qword_1003B6AF0, (uint64_t)qword_10036B888, (uint64_t)sub_10026AB80);
}

uint64_t sub_10026AD68@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AF0, (uint64_t)qword_10036B888, (uint64_t)sub_10026AB80, a1);
}

uint64_t sub_10026AD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v10 + 20), a2, a3);
          break;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 24);
          goto LABEL_5;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10026AE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + v10[6];
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2LL, a2, a3, *(double *)v12);
    }
    uint64_t v13 = v5 + v10[7];
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3LL, a2, a3, *(double *)v13);
    }
    uint64_t v14 = v5 + v10[8];
    if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(4LL, a2, a3, *(double *)v14);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026AFC0()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  &qword_1003646D8,  (uint64_t)&unk_1002DC6F0);
}

uint64_t sub_10026AFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026AD84(a1, a2, a3);
}

uint64_t sub_10026AFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026AE90(a1, a2, a3);
}

uint64_t sub_10026B004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672F0,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC668);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026B054@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AF0, (uint64_t)qword_10036B888, (uint64_t)sub_10026AB80, a1);
}

uint64_t sub_10026B070(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A48,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC5F0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026B0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A48,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC5F0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026B100()
{
  return &unk_100345DA0;
}

unint64_t sub_10026B10C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_10026B128()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B8A0);
  sub_10000E704(v0, (uint64_t)qword_10036B8A0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "vel_along_track";
  *((void *)v13 + 1) = 15LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "vel_along_track_uncertainty";
  *(void *)(v14 + 8) = 27LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026B2BC()
{
  return sub_100008C30(&qword_1003B6AF8, (uint64_t)qword_10036B8A0, (uint64_t)sub_10026B128);
}

uint64_t sub_10026B2D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6AF8, (uint64_t)qword_10036B8A0, (uint64_t)sub_10026B128, a1);
}

uint64_t sub_10026B2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100268CB0( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularDoubleField(value:));
}

uint64_t sub_10026B318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026B334(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t sub_10026B334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4;
  uint64_t result = a4(0LL);
  uint64_t v11 = result;
  uint64_t v12 = v6 + *(int *)(result + 20);
  if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v12, 1LL, a2, a3);
  }
  if (!v5)
  {
    uint64_t v13 = v6 + *(int *)(v11 + 24);
    if ((*(_BYTE *)(v13 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(2LL, a2, a3, *(double *)v13);
    }
    uint64_t v14 = v6 + *(int *)(v11 + 28);
    if ((*(_BYTE *)(v14 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(3LL, a2, a3, *(double *)v14);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_10026B42C(uint64_t a1, uint64_t a2)
{
  return sub_100276CD4(a1, a2, type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity) & 1;
}

Swift::Int sub_10026B44C()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  &qword_1003646E0,  (uint64_t)&unk_1002DC858);
}

uint64_t sub_10026B468(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672E8,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC7D0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026B4B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6AF8, (uint64_t)qword_10036B8A0, (uint64_t)sub_10026B128, a1);
}

uint64_t sub_10026B4D4(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A60,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC758);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026B514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A60,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC758);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026B564()
{
  return &unk_100345DB0;
}

unint64_t sub_10026B570()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10026B58C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B8B8);
  sub_10000E704(v0, (uint64_t)qword_10036B8B8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_time_ns";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "thermal_risk_scale";
  *((void *)v13 + 1) = 18LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026B6DC()
{
  return sub_100008C30(&qword_1003B6B00, (uint64_t)qword_10036B8B8, (uint64_t)sub_10026B58C);
}

uint64_t sub_10026B6F8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B00, (uint64_t)qword_10036B8B8, (uint64_t)sub_10026B58C, a1);
}

uint64_t sub_10026B714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      uint64_t v9 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + *(int *)(v9 + 24), a2, a3);
    }

    else if (result == 1)
    {
      uint64_t v12 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
      dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v12 + 20), a2, a3);
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_10026B7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v12, 2LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026B8AC()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetThermalRiskState,  &qword_1003646E8,  (uint64_t)&unk_1002DC9C0);
}

uint64_t sub_10026B8C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026B714(a1, a2, a3);
}

uint64_t sub_10026B8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026B7E0(a1, a2, a3);
}

uint64_t sub_10026B8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672E0,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC938);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026B940@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B00, (uint64_t)qword_10036B8B8, (uint64_t)sub_10026B58C, a1);
}

uint64_t sub_10026B95C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A78,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC8C0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026B99C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A78,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC8C0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026B9EC()
{
  return &unk_100345DC0;
}

unint64_t sub_10026B9F8()
{
  return 0xD000000000000021LL;
}

uint64_t sub_10026BA14()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B8D0);
  sub_10000E704(v0, (uint64_t)qword_10036B8D0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "is_enabled";
  *(void *)(v9 + 8) = 10LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "default_gps_week";
  *((void *)v13 + 1) = 16LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026BB64()
{
  return sub_100008C30(&qword_1003B6B08, (uint64_t)qword_10036B8D0, (uint64_t)sub_10026BA14);
}

uint64_t sub_10026BB80@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B08, (uint64_t)qword_10036B8D0, (uint64_t)sub_10026BA14, a1);
}

uint64_t sub_10026BB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      uint64_t v9 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
      dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v9 + 24), a2, a3);
    }

    else if (result == 1)
    {
      uint64_t v12 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v12 + 20), a2, a3);
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_10026BC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  uint64_t v10 = result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v12, 2LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026BD34()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  &qword_1003646F0,  (uint64_t)&unk_1002DCB28);
}

uint64_t sub_10026BD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = *(int *)(a1 + 24);
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 2;
  uint64_t v6 = a2 + v5;
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  return result;
}

uint64_t sub_10026BD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026BB9C(a1, a2, a3);
}

uint64_t sub_10026BDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026BC68(a1, a2, a3);
}

uint64_t sub_10026BDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672D8,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCAA0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026BE08@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B08, (uint64_t)qword_10036B8D0, (uint64_t)sub_10026BA14, a1);
}

uint64_t sub_10026BE24(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364A90,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCA28);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026BE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364A90,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCA28);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026BEB4()
{
  return &unk_100345DD0;
}

unint64_t sub_10026BEC0()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_10026BEDC()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B8E8);
  sub_10000E704(v0, (uint64_t)qword_10036B8E8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "enable_flags";
  *(void *)(v9 + 8) = 12LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "disable_flags";
  *((void *)v13 + 1) = 13LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026C02C()
{
  return sub_100008C30(&qword_1003B6B10, (uint64_t)qword_10036B8E8, (uint64_t)sub_10026BEDC);
}

uint64_t sub_10026C048@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B10, (uint64_t)qword_10036B8E8, (uint64_t)sub_10026BEDC, a1);
}

uint64_t sub_10026C064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271634( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularUInt32Field(value:));
}

uint64_t sub_10026C088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271734( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:));
}

uint64_t sub_10026C0AC(uint64_t a1, uint64_t a2)
{
  return sub_1001D3CAC(a1, a2, type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations) & 1;
}

Swift::Int sub_10026C0CC()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  &qword_1003646F8,  (uint64_t)&unk_1002DCC90);
}

uint64_t sub_10026C0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672D0,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCC08);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026C138@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B10, (uint64_t)qword_10036B8E8, (uint64_t)sub_10026BEDC, a1);
}

uint64_t sub_10026C154(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364AA8,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCB90);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026C194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364AA8,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCB90);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026C1E4()
{
  return &unk_100345DE0;
}

unint64_t sub_10026C1F0()
{
  return 0xD000000000000020LL;
}

uint64_t sub_10026C20C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B900);
  sub_10000E704(v0, (uint64_t)qword_10036B900);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "enable_l1";
  *(void *)(v9 + 8) = 9LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "enable_l5";
  *((void *)v13 + 1) = 9LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026C360()
{
  return sub_100008C30(&qword_1003B6B18, (uint64_t)qword_10036B900, (uint64_t)sub_10026C20C);
}

uint64_t sub_10026C37C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B18, (uint64_t)qword_10036B900, (uint64_t)sub_10026C20C, a1);
}

uint64_t sub_10026C398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL) + 24);
LABEL_3:
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
      goto LABEL_4;
    }

    if (result == 1)
    {
      uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL) + 20);
      goto LABEL_3;
    }

uint64_t sub_10026C444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  uint64_t v10 = result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v12 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 24));
    if (v12 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026C510()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  &qword_100364700,  (uint64_t)&unk_1002DCDF8);
}

uint64_t sub_10026C52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026C398(a1, a2, a3);
}

uint64_t sub_10026C540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026C444(a1, a2, a3);
}

uint64_t sub_10026C554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672C8,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCD70);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026C5A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B18, (uint64_t)qword_10036B900, (uint64_t)sub_10026C20C, a1);
}

uint64_t sub_10026C5C0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364AC0,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCCF8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026C600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364AC0,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCCF8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026C650()
{
  return &unk_100345DF0;
}

unint64_t sub_10026C65C()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_10026C678(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B918,  (uint64_t)"is_enabled",  10LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_10026C698()
{
  return sub_100008C30(&qword_1003B6B20, (uint64_t)qword_10036B918, (uint64_t)sub_10026C678);
}

uint64_t sub_10026C6B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B20, (uint64_t)qword_10036B918, (uint64_t)sub_10026C678, a1);
}

uint64_t sub_10026C6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002729E0(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t sub_10026C6EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100272A94(a1, a2, a3, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t sub_10026C708(uint64_t a1, uint64_t a2)
{
  return sub_100276B80(a1, a2, type metadata accessor for Proto_Gpsd_SetConfigDutyCycling) & 1;
}

Swift::Int sub_10026C728()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  &qword_100364708,  (uint64_t)&unk_1002DCF60);
}

uint64_t sub_10026C744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672C0,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCED8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026C794@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B20, (uint64_t)qword_10036B918, (uint64_t)sub_10026C678, a1);
}

uint64_t sub_10026C7B0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364AD8,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCE60);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026C7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364AD8,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCE60);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026C840()
{
  return &unk_100345E00;
}

unint64_t sub_10026C84C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_10026C868(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B930,  (uint64_t)"reason",  6LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_10026C888()
{
  return sub_100008C30(&qword_1003B6B28, (uint64_t)qword_10036B930, (uint64_t)sub_10026C868);
}

uint64_t sub_10026C8A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B28, (uint64_t)qword_10036B930, (uint64_t)sub_10026C868, a1);
}

uint64_t sub_10026C8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026C8E4( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
}

uint64_t sub_10026C8E4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v11, i);
    if (v6 || (v14 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      uint64_t v15 = a4(0LL);
      a5(v5 + *(int *)(v15 + 20), a2, a3);
    }

    uint64_t v6 = 0LL;
    uint64_t v11 = a2;
  }

  return result;
}

uint64_t sub_10026C988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026CB9C(a1, a2, a3, type metadata accessor for Proto_Gpsd_TerminationImminent);
}

uint64_t sub_10026C9A4(uint64_t a1, uint64_t a2)
{
  return sub_1002778E8(a1, a2, type metadata accessor for Proto_Gpsd_TerminationImminent) & 1;
}

Swift::Int sub_10026C9C4()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_TerminationImminent,  &qword_100364710,  (uint64_t)&unk_1002DD0C8);
}

uint64_t sub_10026C9E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672B8,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DD040);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026CA30@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B28, (uint64_t)qword_10036B930, (uint64_t)sub_10026C868, a1);
}

uint64_t sub_10026CA4C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364AF0,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DCFC8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026CA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364AF0,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DCFC8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026CADC()
{
  return &unk_100345E10;
}

unint64_t sub_10026CAE8()
{
  return 0xD000000000000016LL;
}

uint64_t sub_10026CB04(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B948,  (uint64_t)"reason",  6LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_10026CB24()
{
  return sub_100008C30(&qword_1003B6B30, (uint64_t)qword_10036B948, (uint64_t)sub_10026CB04);
}

uint64_t sub_10026CB40@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B30, (uint64_t)qword_10036B948, (uint64_t)sub_10026CB04, a1);
}

uint64_t sub_10026CB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026C8E4( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_ExitMessage,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularStringField(value:));
}

uint64_t sub_10026CB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026CB9C(a1, a2, a3, type metadata accessor for Proto_Gpsd_ExitMessage);
}

uint64_t sub_10026CB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4;
  uint64_t result = a4(0LL);
  uint64_t v11 = (void *)(v6 + *(int *)(result + 20));
  uint64_t v12 = v11[1];
  if (v12) {
    uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v11, v12, 1LL, a2, a3);
  }
  if (!v5) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_10026CC30(uint64_t a1, uint64_t a2)
{
  return sub_1002778E8(a1, a2, type metadata accessor for Proto_Gpsd_ExitMessage) & 1;
}

Swift::Int sub_10026CC50()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_ExitMessage, &qword_100364718, (uint64_t)&unk_1002DD230);
}

uint64_t sub_10026CC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = (void *)(a2 + *(int *)(a1 + 20));
  *uint64_t v5 = 0LL;
  v5[1] = 0LL;
  return result;
}

uint64_t sub_10026CC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_1003672B0, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD1A8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026CCEC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B30, (uint64_t)qword_10036B948, (uint64_t)sub_10026CB04, a1);
}

uint64_t sub_10026CD08(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364B08, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD130);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026CD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364B08, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD130);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026CD98()
{
  return &unk_100345E20;
}

unint64_t sub_10026CDA4()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_10026CDC0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B960);
  sub_10000E704(v0, (uint64_t)qword_10036B960);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "recovery_point_vector";
  *(void *)(v9 + 8) = 21LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "recovery_status";
  *((void *)v13 + 1) = 15LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026CF10()
{
  return sub_100008C30(&qword_1003B6B38, (uint64_t)qword_10036B960, (uint64_t)sub_10026CDC0);
}

uint64_t sub_10026CF2C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B38, (uint64_t)qword_10036B960, (uint64_t)sub_10026CDC0, a1);
}

uint64_t sub_10026CF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      if (result == 2)
      {
        uint64_t v9 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL) + 24);
        uint64_t v10 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
        uint64_t v11 = sub_10000FD98( &qword_100364B38,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD400);
        dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v9, v10, v11, a2, a3);
      }

      else if (result == 1)
      {
        uint64_t v12 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL);
        uint64_t v13 = sub_10000FD98( &qword_100364720,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD568);
        dispatch thunk of Decoder.decodeRepeatedMessageField<A>(value:)(v3, v12, v13, a2, a3);
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10026D090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void *)v3;
  if (!*(void *)(*(void *)v3 + 16LL)
    || (uint64_t v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL),
        uint64_t v10 = sub_10000FD98( &qword_100364720,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD568),  result = dispatch thunk of Visitor.visitRepeatedMessageField<A>(value:fieldNumber:)(v8, 1LL, v9, v10, a2, a3),  !v4))
  {
    uint64_t result = sub_10026D180(v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }

  return result;
}

uint64_t sub_10026D180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364610);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 24), (uint64_t)v8, &qword_100364610);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  uint64_t v15 = sub_10000FD98( &qword_100364B38,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD400);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 2LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

Swift::Int sub_10026D2F8()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_RecoveryStatistics,  &qword_100364728,  (uint64_t)&unk_1002DD398);
}

uint64_t sub_10026D314@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v4 = (char *)a2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
}

uint64_t sub_10026D374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026CF48(a1, a2, a3);
}

uint64_t sub_10026D388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026D090(a1, a2, a3);
}

uint64_t sub_10026D39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672A8,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD310);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026D3EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B38, (uint64_t)qword_10036B960, (uint64_t)sub_10026CDC0, a1);
}

uint64_t sub_10026D408(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364B20,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD298);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026D448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364B20,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD298);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_10026D498()
{
  v0._countAndFlagsBits = 0x7265766F6365522ELL;
  v0._object = (void *)0xEF73757461745379LL;
  String.append(_:)(v0);
  qword_10036B978 = 0xD00000000000001DLL;
  unk_10036B980 = 0x80000001002F2750LL;
}

uint64_t *sub_10026D50C()
{
  if (qword_1003B6B40 != -1) {
    swift_once(&qword_1003B6B40, sub_10026D498);
  }
  return &qword_10036B978;
}

uint64_t sub_10026D54C()
{
  return sub_1001036C8(&qword_1003B6B40, &qword_10036B978, &qword_10036B980, (uint64_t)sub_10026D498);
}

uint64_t sub_10026D56C()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B988);
  sub_10000E704(v0, (uint64_t)qword_10036B988);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "recovery_attempted";
  *(void *)(v9 + 8) = 18LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "num_recovery_attempts";
  *(void *)(v13 + 8) = 21LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  char v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *char v14 = 3LL;
  *(void *)uint64_t v15 = "recovered";
  *((void *)v15 + 1) = 9LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "in_out_recovery";
  *((void *)v17 + 1) = 15LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026D734()
{
  return sub_100008C30(&qword_1003B6B48, (uint64_t)qword_10036B988, (uint64_t)sub_10026D56C);
}

uint64_t sub_10026D750@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B48, (uint64_t)qword_10036B988, (uint64_t)sub_10026D56C, a1);
}

uint64_t sub_10026D76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 20);
          goto LABEL_5;
        case 2LL:
          uint64_t v10 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v10 + 24), a2, a3);
          break;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 28);
          goto LABEL_5;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL) + 32);
LABEL_5:
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_10026D878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v10 = (int *)result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v12, 2LL, a2, a3);
    }
    int v13 = *(unsigned __int8 *)(v5 + v10[7]);
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    int v14 = *(unsigned __int8 *)(v5 + v10[8]);
    if (v14 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v14 & 1, 4LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026D9A8()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  &qword_100364730,  (uint64_t)&unk_1002DD500);
}

uint64_t sub_10026D9C4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 2;
  uint64_t v6 = a2 + v5;
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  uint64_t v7 = a1[8];
  *(_BYTE *)(a2 + a1[7]) = 2;
  *(_BYTE *)(a2 + v7) = 2;
  return result;
}

uint64_t sub_10026DA10(uint64_t a1, uint64_t a2)
{
  return sub_100103A60(a1, a2, &qword_1003B6B40, &qword_10036B978, &qword_10036B980, (uint64_t)sub_10026D498);
}

uint64_t sub_10026DA30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026D76C(a1, a2, a3);
}

uint64_t sub_10026DA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026D878(a1, a2, a3);
}

uint64_t sub_10026DA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_1003672A0,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD478);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026DAA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B48, (uint64_t)qword_10036B988, (uint64_t)sub_10026D56C, a1);
}

uint64_t sub_10026DAC4(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364B38,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD400);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026DB04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364B38,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD400);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_10026DB54()
{
  v0._countAndFlagsBits = 0x7265766F6365522ELL;
  v0._object = (void *)0xEE00746E696F5079LL;
  String.append(_:)(v0);
  qword_10036B9A0 = 0xD00000000000001DLL;
  *(void *)algn_10036B9A8 = 0x80000001002F2750LL;
}

uint64_t *sub_10026DBC8()
{
  if (qword_1003B6B50 != -1) {
    swift_once(&qword_1003B6B50, sub_10026DB54);
  }
  return &qword_10036B9A0;
}

uint64_t sub_10026DC08()
{
  return sub_1001036C8(&qword_1003B6B50, &qword_10036B9A0, algn_10036B9A8, (uint64_t)sub_10026DB54);
}

uint64_t sub_10026DC28()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B9B0);
  sub_10000E704(v0, (uint64_t)qword_10036B9B0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "file";
  *(void *)(v9 + 8) = 4LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  int v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)int v13 = "line_number";
  *((void *)v13 + 1) = 11LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "function";
  *(void *)(v14 + 8) = 8LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026DDC4()
{
  return sub_100008C30(&qword_1003B6B58, (uint64_t)qword_10036B9B0, (uint64_t)sub_10026DC28);
}

uint64_t sub_10026DDE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B58, (uint64_t)qword_10036B9B0, (uint64_t)sub_10026DC28, a1);
}

uint64_t sub_10026DDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL) + 28);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + v9, a2, a3);
        break;
      case 2LL:
        uint64_t v12 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL);
        dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + *(int *)(v12 + 24), a2, a3);
        break;
      case 1LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL) + 20);
        goto LABEL_3;
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_10026DEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL);
  uint64_t v10 = result;
  char v11 = (void *)(v5 + *(int *)(result + 20));
  uint64_t v12 = v11[1];
  if (v12) {
    uint64_t result = dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v11, v12, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v13 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v13[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v13, 2LL, a2, a3);
    }
    uint64_t v14 = (void *)(v5 + *(int *)(v10 + 28));
    uint64_t v15 = v14[1];
    if (v15) {
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v14, v15, 3LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10026DFDC()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  &qword_100364738,  (uint64_t)&unk_1002DD668);
}

uint64_t sub_10026DFF8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = (void *)(a2 + a1[5]);
  *uint64_t v6 = 0LL;
  v6[1] = 0LL;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  char v8 = (void *)(a2 + a1[7]);
  *char v8 = 0LL;
  v8[1] = 0LL;
  return result;
}

uint64_t sub_10026E044(uint64_t a1, uint64_t a2)
{
  return sub_100103A60(a1, a2, &qword_1003B6B50, &qword_10036B9A0, algn_10036B9A8, (uint64_t)sub_10026DB54);
}

uint64_t sub_10026E064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026DDFC(a1, a2, a3);
}

uint64_t sub_10026E078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026DEE0(a1, a2, a3);
}

uint64_t sub_10026E08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367298,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD5E0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026E0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B58, (uint64_t)qword_10036B9B0, (uint64_t)sub_10026DC28, a1);
}

uint64_t sub_10026E0F8(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364720,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD568);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026E138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364720,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD568);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026E188()
{
  return &unk_100345E30;
}

unint64_t sub_10026E194()
{
  return 0xD000000000000019LL;
}

uint64_t sub_10026E1B0(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036B9C8,  (uint64_t)"info_type",  9LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_10026E1D0()
{
  return sub_100008C30(&qword_1003B6B60, (uint64_t)qword_10036B9C8, (uint64_t)sub_10026E1B0);
}

uint64_t sub_10026E1EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B60, (uint64_t)qword_10036B9C8, (uint64_t)sub_10026E1B0, a1);
}

uint64_t sub_10026E208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026E234( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_LtlInfoRequest,  (uint64_t (*)(void))sub_100284614,  (uint64_t)&type metadata for Proto_Gpsd_LtlInfoType);
}

uint64_t sub_10026E234( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v13 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v13, i);
    if (v7 || (v16 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      uint64_t v17 = v6 + *(int *)(a4(0LL) + 20);
      uint64_t v18 = a5();
      dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)(v17, a6, v18, a2, a3);
    }

    uint64_t v7 = 0LL;
    uint64_t v13 = a2;
  }

  return result;
}

uint64_t sub_10026E2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL);
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 5)
  {
    char v11 = *(_BYTE *)(v5 + *(int *)(result + 20));
    unint64_t v10 = sub_100284614();
    uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v11,  1LL,  &type metadata for Proto_Gpsd_LtlInfoType,  v10,  a2,  a3);
  }

  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_10026E3A0()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_LtlInfoRequest, &qword_100364740, (uint64_t)&unk_1002DD7D0);
}

uint64_t sub_10026E3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 5;
  return result;
}

uint64_t sub_10026E3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026E2F4(a1, a2, a3);
}

uint64_t sub_10026E400(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367290, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD748);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10026E450@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B60, (uint64_t)qword_10036B9C8, (uint64_t)sub_10026E1B0, a1);
}

uint64_t sub_10026E46C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364B60, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD6D0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10026E4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364B60, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD6D0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10026E4FC()
{
  return &unk_100345E40;
}

unint64_t sub_10026E508()
{
  return 0xD000000000000012LL;
}

uint64_t sub_10026E524()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036B9E0);
  sub_10000E704(v0, (uint64_t)qword_10036B9E0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 - v4 + 8 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3330;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "success";
  *(void *)(v9 + 8) = 7LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "error_code";
  *(void *)(v13 + 8) = 10LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "info_type";
  *((void *)v15 + 1) = 9LL;
  v15[16] = 2;
  v12();
  char v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *char v16 = 4LL;
  *(void *)uint64_t v17 = "initial_params";
  *((void *)v17 + 1) = 14LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v8 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 5LL;
  *(void *)uint64_t v19 = "lut_params";
  *((void *)v19 + 1) = 10LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v8 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 6LL;
  *(void *)uint64_t v21 = "current_src_calib";
  *((void *)v21 + 1) = 17LL;
  v21[16] = 2;
  v12();
  uint64_t v22 = (void *)(v8 + 6 * v4);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 48);
  *uint64_t v22 = 7LL;
  *(void *)uint64_t v23 = "rac_pmic_adcr_pre_cal";
  *((void *)v23 + 1) = 21LL;
  v23[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_10026E79C()
{
  return sub_100008C30(&qword_1003B6B68, (uint64_t)qword_10036B9E0, (uint64_t)sub_10026E524);
}

uint64_t sub_10026E7B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B68, (uint64_t)qword_10036B9E0, (uint64_t)sub_10026E524, a1);
}

uint64_t sub_10026E7D4()
{
  uint64_t v0 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
  uint64_t v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  *(_BYTE *)(v1 + 16) = 2;
  *(_DWORD *)(v1 + 20) = 0;
  *(_WORD *)(v1 + 24) = 1281;
  uint64_t v2 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  uint64_t v3 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56LL))(v2, 1LL, 1LL, v3);
  uint64_t v4 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  uint64_t v5 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  uint64_t v7 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  uint64_t v8 = v1
     + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56LL))( v8,  1LL,  1LL,  v9);
  qword_1003B6B78 = v1;
  return result;
}

uint64_t sub_10026E8E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100003A0C(&qword_100364630);
  __chkstk_darwin(v4);
  uint64_t v37 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100003A0C(&qword_100364628);
  __chkstk_darwin(v6);
  uint64_t v36 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100003A0C(&qword_100364620);
  __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100003A0C(&qword_100364618);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(_BYTE *)(v1 + 16) = 2;
  uint64_t v13 = (_BYTE *)(v1 + 16);
  *(_DWORD *)(v1 + 20) = 0;
  uint64_t v14 = (_DWORD *)(v1 + 20);
  *(_WORD *)(v2 + 24) = 1281;
  uint64_t v33 = v2 + 25;
  uint64_t v15 = v2
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  uint64_t v16 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  uint64_t v17 = v2
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  uint64_t v18 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56LL))(v17, 1LL, 1LL, v18);
  uint64_t v19 = v2
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  uint64_t v20 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v19, 1LL, 1LL, v20);
  uint64_t v21 = v2
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  uint64_t v34 = v2
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  uint64_t v22 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56LL))(v21, 1LL, 1LL, v22);
  swift_beginAccess(a1 + 16, v48, 0LL, 0LL);
  LOBYTE(v21) = *(_BYTE *)(a1 + 16);
  swift_beginAccess(v13, v47, 1LL, 0LL);
  *uint64_t v13 = v21;
  swift_beginAccess(a1 + 20, v46, 0LL, 0LL);
  LODWORD(v13) = *(_DWORD *)(a1 + 20);
  LOBYTE(v21) = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v14, v45, 1LL, 0LL);
  *uint64_t v14 = (_DWORD)v13;
  *(_BYTE *)(v2 + 24) = v21;
  swift_beginAccess(a1 + 25, &v44, 0LL, 0LL);
  LOBYTE(v14) = *(_BYTE *)(a1 + 25);
  swift_beginAccess(v33, &v43, 1LL, 0LL);
  *(_BYTE *)(v2 + 25) = (_BYTE)v14;
  uint64_t v23 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  &v42,  0LL,  0LL);
  sub_10000E6C0(v23, (uint64_t)v12, &qword_100364618);
  swift_beginAccess(v15, v41, 33LL, 0LL);
  sub_10000E5D4((uint64_t)v12, v15, &qword_100364618);
  swift_endAccess(v41);
  uint64_t v24 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  v41,  0LL,  0LL);
  uint64_t v25 = v35;
  sub_10000E6C0(v24, v35, &qword_100364620);
  swift_beginAccess(v17, v40, 33LL, 0LL);
  sub_10000E5D4(v25, v17, &qword_100364620);
  swift_endAccess(v40);
  uint64_t v26 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  v40,  0LL,  0LL);
  uint64_t v27 = v36;
  sub_10000E6C0(v26, v36, &qword_100364628);
  swift_beginAccess(v19, v39, 33LL, 0LL);
  sub_10000E5D4(v27, v19, &qword_100364628);
  swift_endAccess(v39);
  uint64_t v28 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal;
  swift_beginAccess( a1 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal,  v39,  0LL,  0LL);
  uint64_t v29 = v37;
  sub_10000E6C0(v28, v37, &qword_100364630);
  swift_release(a1);
  uint64_t v30 = v34;
  swift_beginAccess(v34, v38, 33LL, 0LL);
  sub_10000E5D4(v29, v30, &qword_100364630);
  swift_endAccess(v38);
  return v2;
}

uint64_t sub_10026ED40()
{
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_10026EDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native(*(void *)(v3 + v9)) & 1) == 0)
  {
    uint64_t v10 = *(void *)(v3 + v9);
    uint64_t v11 = type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
    uint64_t v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
    uint64_t v13 = swift_retain(v10);
    sub_10026E8E0(v13);
    uint64_t v14 = *(void *)(v6 + v9);
    *(void *)(v6 + v9) = v12;
    swift_release(v14);
  }

  uint64_t v15 = *(void *)(v6 + v9);
  swift_retain(v15);
  uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    uint64_t v30 = v15 + 25;
    uint64_t v28 = v15 + 20;
    while ((v17 & 1) == 0)
    {
      switch(v16)
      {
        case 1LL:
          swift_beginAccess(v15 + 16, v29, 33LL, 0LL);
          uint64_t v19 = v5;
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v15 + 16, a2, a3);
          goto LABEL_16;
        case 2LL:
          swift_beginAccess(v28, v29, 33LL, 0LL);
          uint64_t v19 = v5;
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v28, a2, a3);
          goto LABEL_16;
        case 3LL:
          uint64_t v20 = v30;
          swift_beginAccess(v30, v29, 33LL, 0LL);
          unint64_t v21 = sub_100284614();
          uint64_t v19 = v5;
          dispatch thunk of Decoder.decodeSingularEnumField<A>(value:)( v20,  &type metadata for Proto_Gpsd_LtlInfoType,  v21,  a2,  a3);
          goto LABEL_16;
        case 4LL:
          uint64_t v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  v29,  33LL,  0LL);
          uint64_t v23 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
          uint64_t v24 = (unint64_t *)&unk_100364BD8;
          uint64_t v25 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams;
          uint64_t v26 = &unk_1002DDDD8;
          goto LABEL_15;
        case 5LL:
          uint64_t v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  v29,  33LL,  0LL);
          uint64_t v23 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
          uint64_t v24 = (unint64_t *)&unk_100364B90;
          uint64_t v25 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams;
          uint64_t v26 = &unk_1002DD9A0;
          goto LABEL_15;
        case 6LL:
          uint64_t v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  v29,  33LL,  0LL);
          uint64_t v23 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
          uint64_t v24 = (unint64_t *)&unk_100364BA8;
          uint64_t v25 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData;
          uint64_t v26 = &unk_1002DDB08;
          goto LABEL_15;
        case 7LL:
          uint64_t v22 = v15
              + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0];
          swift_beginAccess( v15 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0],  v29,  33LL,  0LL);
          uint64_t v23 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
          uint64_t v24 = (unint64_t *)&unk_100364BC0;
          uint64_t v25 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData;
          uint64_t v26 = &unk_1002DDC70;
LABEL_15:
          uint64_t v27 = sub_10000FD98(v24, v25, (uint64_t)v26);
          uint64_t v19 = v5;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v22, v23, v27, a2, a3);
LABEL_16:
          uint64_t v5 = v19;
          swift_endAccess(v29);
          break;
        default:
          break;
      }

      uint64_t v16 = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return swift_release(v15);
}

uint64_t sub_10026F0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = *(void *)(v5 + *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo(0LL) + 20));
  swift_retain(v9);
  swift_beginAccess(v9 + 16, v13, 0LL, 0LL);
  int v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 != 2) {
    dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v10 & 1, 1LL, a2, a3);
  }
  if (v4) {
    return swift_release(v9);
  }
  swift_beginAccess(v9 + 20, v14, 0LL, 0LL);
  if ((*(_BYTE *)(v9 + 24) & 1) == 0) {
    dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*(unsigned int *)(v9 + 20), 2LL, a2, a3);
  }
  swift_beginAccess(v9 + 25, v15, 0LL, 0LL);
  if (*(_BYTE *)(v9 + 25) != 5)
  {
    char v16 = *(_BYTE *)(v9 + 25);
    unint64_t v12 = sub_100284614();
    dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v16,  3LL,  &type metadata for Proto_Gpsd_LtlInfoType,  v12,  a2,  a3);
  }

  sub_10026F2D8(v9, a1, a2, a3);
  sub_10026F464(v9, a1, a2, a3);
  sub_10026F5F0(v9, a1, a2, a3);
  sub_10026F77C(v9, a1, a2, a3);
  swift_release(v9);
  return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_10026F2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364618);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364618);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  uint64_t v15 = sub_10000FD98( &qword_100364BD8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDDD8);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 4LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t sub_10026F464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364620);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364620);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
  uint64_t v15 = sub_10000FD98( &qword_100364B90,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DD9A0);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t sub_10026F5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364628);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364628);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
  uint64_t v15 = sub_10000FD98( &qword_100364BA8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDB08);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t sub_10026F77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100364630);
  __chkstk_darwin(v6);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  uint64_t v13 = a1
      + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0];
  swift_beginAccess(v13, v17, 0LL, 0LL);
  sub_10000E6C0(v13, (uint64_t)v8, &qword_100364630);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
  uint64_t v15 = sub_10000FD98( &qword_100364BC0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDC70);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7LL, v9, v15, a3, v18);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t sub_10026F908(uint64_t a1, uint64_t a2)
{
  return sub_100065AC0( a1,  a2,  type metadata accessor for Proto_Gpsd_LtlInfo,  (uint64_t (*)(uint64_t, uint64_t))sub_10026F930) & 1;
}

BOOL sub_10026F930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(0LL);
  uint64_t v106 = *(void *)(v4 - 8);
  uint64_t v107 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = sub_100003A0C(&qword_1003673C8);
  __chkstk_darwin(v105);
  uint64_t v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100003A0C(&qword_100364630);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v103 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  uint64_t v108 = (uint64_t)&v100 - v12;
  uint64_t v13 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  uint64_t v111 = *(void *)(v13 - 8);
  uint64_t v112 = v13;
  __chkstk_darwin(v13);
  uint64_t v104 = (uint64_t *)((char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v110 = sub_100003A0C(&qword_1003673D0);
  __chkstk_darwin(v110);
  uint64_t v113 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100003A0C(&qword_100364628);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v117 = (uint64_t *)((char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v17);
  uint64_t v115 = (uint64_t)&v100 - v19;
  uint64_t v20 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  uint64_t v119 = *(void *)(v20 - 8);
  uint64_t v120 = v20;
  __chkstk_darwin(v20);
  uint64_t v109 = (uint64_t *)((char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v118 = sub_100003A0C(&qword_1003673D8);
  __chkstk_darwin(v118);
  uint64_t v121 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100003A0C(&qword_100364620);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v114 = (uint64_t *)((char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v24);
  uint64_t v123 = (uint64_t)&v100 - v26;
  uint64_t v27 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v116 = (uint64_t)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_100003A0C(&qword_1003673E0);
  __chkstk_darwin(v30);
  uint64_t v124 = (uint64_t)&v100 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_100003A0C(&qword_100364618);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v122 = (uint64_t)&v100 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v100 - v35;
  swift_beginAccess(a1 + 16, v138, 0LL, 0LL);
  int v37 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess(a2 + 16, v137, 0LL, 0LL);
  int v38 = *(unsigned __int8 *)(a2 + 16);
  if (v37 == 2)
  {
    if (v38 != 2) {
      return 0LL;
    }
  }

  else if (v38 == 2 || ((((v38 & 1) == 0) ^ v37) & 1) == 0)
  {
    return 0LL;
  }

  uint64_t v100 = v6;
  uint64_t v101 = v8;
  swift_beginAccess(a1 + 20, v136, 0LL, 0LL);
  int v39 = *(_DWORD *)(a1 + 20);
  uint64_t v40 = a2;
  uint64_t v102 = a1;
  char v41 = *(_BYTE *)(a1 + 24);
  swift_beginAccess(v40 + 20, v135, 0LL, 0LL);
  char v42 = *(_BYTE *)(v40 + 24);
  if ((v41 & 1) != 0)
  {
    if (!*(_BYTE *)(v40 + 24)) {
      return 0LL;
    }
  }

  else
  {
    if (v39 != *(_DWORD *)(v40 + 20)) {
      char v42 = 1;
    }
    if ((v42 & 1) != 0) {
      return 0LL;
    }
  }

  uint64_t v43 = v102;
  swift_beginAccess(v102 + 25, v134, 0LL, 0LL);
  int v44 = *(unsigned __int8 *)(v43 + 25);
  uint64_t v45 = v40;
  swift_beginAccess(v40 + 25, v133, 0LL, 0LL);
  int v46 = *(unsigned __int8 *)(v40 + 25);
  if (v44 == 5)
  {
    if (v46 != 5) {
      return 0LL;
    }
LABEL_17:
    uint64_t v48 = v102;
    uint64_t v49 = v102
        + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
    swift_beginAccess( v102 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  v132,  0LL,  0LL);
    sub_10000E6C0(v49, (uint64_t)v36, &qword_100364618);
    uint64_t v50 = v40
        + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams;
    swift_beginAccess( v40 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__initialParams,  &v131,  0LL,  0LL);
    uint64_t v51 = v124;
    uint64_t v52 = v124 + *(int *)(v30 + 48);
    sub_10000E6C0((uint64_t)v36, v124, &qword_100364618);
    uint64_t v53 = v50;
    uint64_t v54 = v51;
    sub_10000E6C0(v53, v52, &qword_100364618);
    uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
    if (v55(v51, 1LL, v27) == 1)
    {
      swift_retain(v48);
      swift_retain(v40);
      sub_100015764((uint64_t)v36, &qword_100364618);
      int v56 = v55(v52, 1LL, v27);
      uint64_t v57 = (uint64_t)v101;
      if (v56 == 1)
      {
        sub_100015764(v54, &qword_100364618);
        uint64_t v58 = (uint64_t)v100;
LABEL_24:
        uint64_t v66 = v48
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
        swift_beginAccess( v48 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  &v130,  0LL,  0LL);
        uint64_t v67 = v123;
        sub_10000E6C0(v66, v123, &qword_100364620);
        uint64_t v68 = v45
            + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams;
        swift_beginAccess( v45 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__lutParams,  &v129,  0LL,  0LL);
        uint64_t v69 = v121;
        uint64_t v70 = v121 + *(int *)(v118 + 48);
        sub_10000E6C0(v67, v121, &qword_100364620);
        sub_10000E6C0(v68, v70, &qword_100364620);
        uint64_t v71 = v120;
        uint64_t v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48);
        if (v72(v69, 1LL, v120) == 1)
        {
          sub_100015764(v67, &qword_100364620);
          int v73 = v72(v70, 1LL, v71);
          uint64_t v48 = v102;
          uint64_t v74 = v117;
          if (v73 == 1)
          {
            sub_100015764(v69, &qword_100364620);
LABEL_36:
            uint64_t v80 = v48
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
            swift_beginAccess( v48 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  &v128,  0LL,  0LL);
            uint64_t v81 = v115;
            sub_10000E6C0(v80, v115, &qword_100364628);
            uint64_t v82 = v45
                + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib;
            swift_beginAccess( v45 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__currentSrcCalib,  &v127,  0LL,  0LL);
            uint64_t v83 = v113;
            uint64_t v84 = v113 + *(int *)(v110 + 48);
            sub_10000E6C0(v81, v113, &qword_100364628);
            uint64_t v85 = v83;
            sub_10000E6C0(v82, v84, &qword_100364628);
            uint64_t v86 = v112;
            uint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
            if (v87(v85, 1LL, v112) == 1)
            {
              sub_100015764(v81, &qword_100364628);
              int v88 = v87(v84, 1LL, v86);
              uint64_t v89 = v102;
              if (v88 == 1)
              {
                sub_100015764(v85, &qword_100364628);
LABEL_43:
                uint64_t v92 = v89
                    + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0];
                swift_beginAccess( v89 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0],  &v126,  0LL,  0LL);
                uint64_t v93 = v108;
                sub_10000E6C0(v92, v108, &qword_100364630);
                uint64_t v94 = v45
                    + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0];
                swift_beginAccess( v45 + OBJC_IVAR____TtCV10ALProtobuf18Proto_Gpsd_LtlInfoP33_D7E5B2DD45535F54EF008B6FDC82B89E13_StorageClass__racPmicAdcrPreCal[0],  &v125,  0LL,  0LL);
                uint64_t v95 = v57 + *(int *)(v105 + 48);
                sub_10000E6C0(v93, v57, &qword_100364630);
                sub_10000E6C0(v94, v95, &qword_100364630);
                uint64_t v96 = v107;
                uint64_t v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
                if (v97(v57, 1LL, v107) == 1)
                {
                  swift_release(v89);
                  swift_release(v45);
                  sub_100015764(v93, &qword_100364630);
                  if (v97(v95, 1LL, v96) == 1)
                  {
                    sub_100015764(v57, &qword_100364630);
                    return 1LL;
                  }

                  goto LABEL_48;
                }

                uint64_t v98 = v103;
                sub_10000E6C0(v57, v103, &qword_100364630);
                if (v97(v95, 1LL, v96) == 1)
                {
                  swift_release(v102);
                  swift_release(v45);
                  sub_100015764(v108, &qword_100364630);
                  sub_100004090(v98, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
LABEL_48:
                  sub_100015764(v57, &qword_1003673C8);
                  return 0LL;
                }

                sub_100003E68(v95, v58, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                char v99 = sub_1001D3CAC(v98, v58, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                swift_release(v102);
                swift_release(v45);
                sub_100004090(v58, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                sub_100015764(v108, &qword_100364630);
                sub_100004090(v98, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
                sub_100015764(v57, &qword_100364630);
                return (v99 & 1) != 0;
              }

              goto LABEL_41;
            }

            sub_10000E6C0(v85, (uint64_t)v74, &qword_100364628);
            if (v87(v84, 1LL, v86) == 1)
            {
              sub_100015764(v115, &qword_100364628);
              sub_100004090((uint64_t)v74, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
              uint64_t v89 = v102;
LABEL_41:
              sub_100015764(v85, &qword_1003673D0);
              uint64_t v77 = v89;
              goto LABEL_32;
            }

            uint64_t v90 = v104;
            sub_100003E68(v84, (uint64_t)v104, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
            char v91 = sub_100278E38(v74, v90);
            sub_100004090((uint64_t)v90, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
            sub_100015764(v115, &qword_100364628);
            sub_100004090((uint64_t)v74, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
            sub_100015764(v85, &qword_100364628);
            uint64_t v89 = v102;
            if ((v91 & 1) != 0) {
              goto LABEL_43;
            }
            uint64_t v77 = v102;
LABEL_32:
            swift_release(v77);
            swift_release(v45);
            return 0LL;
          }

          goto LABEL_29;
        }

        uint64_t v75 = v114;
        sub_10000E6C0(v69, (uint64_t)v114, &qword_100364620);
        int v76 = v72(v70, 1LL, v71);
        uint64_t v74 = v117;
        if (v76 == 1)
        {
          sub_100015764(v123, &qword_100364620);
          sub_100004090((uint64_t)v75, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
          uint64_t v48 = v102;
LABEL_29:
          uint64_t v61 = &qword_1003673D8;
          uint64_t v62 = v69;
          goto LABEL_30;
        }

        uint64_t v78 = v109;
        sub_100003E68(v70, (uint64_t)v109, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
        char v79 = sub_100278C8C(v75, v78);
        sub_100004090((uint64_t)v78, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
        sub_100015764(v123, &qword_100364620);
        sub_100004090((uint64_t)v75, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
        sub_100015764(v69, &qword_100364620);
        uint64_t v48 = v102;
        if ((v79 & 1) != 0) {
          goto LABEL_36;
        }
LABEL_31:
        uint64_t v77 = v48;
        goto LABEL_32;
      }
    }

    else
    {
      uint64_t v59 = v122;
      sub_10000E6C0(v51, v122, &qword_100364618);
      int v60 = v55(v52, 1LL, v27);
      uint64_t v57 = (uint64_t)v101;
      if (v60 != 1)
      {
        uint64_t v63 = v59;
        uint64_t v64 = v116;
        sub_100003E68(v52, v116, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
        swift_retain(v48);
        swift_retain(v45);
        char v65 = sub_100278FD0(v63, v64);
        sub_100004090(v64, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
        sub_100015764((uint64_t)v36, &qword_100364618);
        sub_100004090(v63, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
        uint64_t v58 = (uint64_t)v100;
        sub_100015764(v54, &qword_100364618);
        if ((v65 & 1) == 0) {
          goto LABEL_31;
        }
        goto LABEL_24;
      }

      swift_retain(v48);
      swift_retain(v45);
      sub_100015764((uint64_t)v36, &qword_100364618);
      sub_100004090(v59, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
    }

    uint64_t v61 = &qword_1003673E0;
    uint64_t v62 = v54;
LABEL_30:
    sub_100015764(v62, v61);
    goto LABEL_31;
  }

  BOOL result = 0LL;
  if (v46 != 5 && v44 == v46) {
    goto LABEL_17;
  }
  return result;
}

Swift::Int sub_100270568()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_LtlInfo, &qword_100364748, (uint64_t)&unk_1002DD938);
}

uint64_t sub_100270584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005DD7C(a1, &qword_1003B6B70, &qword_1003B6B78, (uint64_t)sub_10026E7D4, a2);
}

uint64_t sub_1002705A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026EDC0(a1, a2, a3);
}

uint64_t sub_1002705B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026F0EC(a1, a2, a3);
}

uint64_t sub_1002705C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367288, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD8B0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100270618@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B68, (uint64_t)qword_10036B9E0, (uint64_t)sub_10026E524, a1);
}

uint64_t sub_100270634(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364B78, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD838);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100270674(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364B78, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD838);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_1002706C4()
{
  v0._countAndFlagsBits = 0x5074754C6C744C2ELL;
  v0._object = (void *)0xED0000736D617261LL;
  String.append(_:)(v0);
  qword_10036B9F8 = 0xD000000000000012LL;
  unk_10036BA00 = 0x80000001002F2790LL;
}

uint64_t *sub_100270738()
{
  if (qword_1003B6B80 != -1) {
    swift_once(&qword_1003B6B80, sub_1002706C4);
  }
  return &qword_10036B9F8;
}

uint64_t sub_100270778()
{
  return sub_1001036C8(&qword_1003B6B80, &qword_10036B9F8, &qword_10036BA00, (uint64_t)sub_1002706C4);
}

uint64_t sub_100270798()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BA08);
  sub_10000E704(v0, (uint64_t)qword_10036BA08);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 4 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42C0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "ltl_update_count";
  *(void *)(v9 + 8) = 16LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "ltl_cleanup_count";
  *(void *)(v13 + 8) = 17LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)uint64_t v15 = "s_curve_val";
  *((void *)v15 + 1) = 11LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "s_curve_history";
  *((void *)v17 + 1) = 15LL;
  v17[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100270958()
{
  return sub_100008C30(&qword_1003B6B88, (uint64_t)qword_10036BA08, (uint64_t)sub_100270798);
}

uint64_t sub_100270974@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B88, (uint64_t)qword_10036BA08, (uint64_t)sub_100270798, a1);
}

uint64_t sub_100270990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL) + 28);
          goto LABEL_5;
        case 2LL:
          uint64_t v10 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL) + 32);
LABEL_5:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v10, a2, a3);
          goto LABEL_6;
        case 3LL:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)(v3, a2, a3);
          goto LABEL_6;
        case 4LL:
          uint64_t v11 = v9;
          dispatch thunk of Decoder.decodeRepeatedUInt32Field(value:)(v3 + 8, a2, a3);
LABEL_6:
          uint64_t v9 = v11;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100270A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  uint64_t v9 = result;
  uint64_t v10 = (unsigned int *)((char *)v3 + *(int *)(result + 28));
  if ((v10[1] & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v11 = (unsigned int *)((char *)v3 + *(int *)(v9 + 32));
    if ((v11[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 2LL, a2, a3);
    }
    if (*(void *)(*v3 + 16LL)) {
      dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)();
    }
    uint64_t v12 = v3[1];
    if (*(void *)(v12 + 16)) {
      dispatch thunk of Visitor.visitRepeatedUInt32Field(value:fieldNumber:)(v12, 4LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100270BD4()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  &qword_100364750,  (uint64_t)&unk_1002DDAA0);
}

uint64_t sub_100270BF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  a2[1] = &_swiftEmptyArrayStorage;
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = *(int *)(a1 + 32);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 28);
  *(_DWORD *)uint64_t v6 = 0;
  void v6[4] = 1;
  uint64_t v7 = (char *)a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  return result;
}

uint64_t sub_100270C48(uint64_t a1, uint64_t a2)
{
  return sub_100103A60(a1, a2, &qword_1003B6B80, &qword_10036B9F8, &qword_10036BA00, (uint64_t)sub_1002706C4);
}

uint64_t sub_100270C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100270990(a1, a2, a3);
}

uint64_t sub_100270C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100270A98(a1, a2, a3);
}

uint64_t sub_100270C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367280,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DDA18);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100270CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B88, (uint64_t)qword_10036BA08, (uint64_t)sub_100270798, a1);
}

uint64_t sub_100270CFC(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364B90,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DD9A0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100270D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364B90,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DD9A0);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_100270D8C()
{
  v0._countAndFlagsBits = 0xD000000000000017LL;
  v0._object = (void *)0x80000001002F32F0LL;
  String.append(_:)(v0);
  qword_10036BA20 = 0xD000000000000012LL;
  *(void *)algn_10036BA28 = 0x80000001002F2790LL;
}

uint64_t *sub_100270DF8()
{
  if (qword_1003B6B90 != -1) {
    swift_once(&qword_1003B6B90, sub_100270D8C);
  }
  return &qword_10036BA20;
}

uint64_t sub_100270E38()
{
  return sub_1001036C8(&qword_1003B6B90, &qword_10036BA20, algn_10036BA28, (uint64_t)sub_100270D8C);
}

uint64_t sub_100270E58()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BA30);
  sub_10000E704(v0, (uint64_t)qword_10036BA30);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "correction_factor";
  *(void *)(v9 + 8) = 17LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "prod_version";
  *((void *)v13 + 1) = 12LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "post_cal_version";
  *(void *)(v14 + 8) = 16LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100270FEC()
{
  return sub_100008C30(&qword_1003B6B98, (uint64_t)qword_10036BA30, (uint64_t)sub_100270E58);
}

uint64_t sub_100271008@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6B98, (uint64_t)qword_10036BA30, (uint64_t)sub_100270E58, a1);
}

uint64_t sub_100271024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL) + 28);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v9, a2, a3);
        break;
      case 2LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL) + 24);
        goto LABEL_3;
      case 1LL:
        dispatch thunk of Decoder.decodeRepeatedInt32Field(value:)(v3, a2, a3);
        break;
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_1002710FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(*(void *)v3 + 16LL)
    || (uint64_t result = dispatch thunk of Visitor.visitRepeatedInt32Field(value:fieldNumber:)(), !v4))
  {
    uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
    uint64_t v9 = result;
    uint64_t v10 = (unsigned int *)(v3 + *(int *)(result + 24));
    if ((v10[1] & 1) == 0) {
      uint64_t result = dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v10, 2LL, a2, a3);
    }
    if (!v4)
    {
      char v11 = (unsigned int *)(v3 + *(int *)(v9 + 28));
      if ((v11[1] & 1) == 0) {
        dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v11, 3LL, a2, a3);
      }
      return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
    }
  }

  return result;
}

Swift::Int sub_100271208()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  &qword_100364758,  (uint64_t)&unk_1002DDC08);
}

uint64_t sub_100271224@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = &_swiftEmptyArrayStorage;
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = *(int *)(a1 + 28);
  uint64_t v6 = (char *)a2 + *(int *)(a1 + 24);
  *(_DWORD *)uint64_t v6 = 0;
  void v6[4] = 1;
  uint64_t v7 = (char *)a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  return result;
}

uint64_t sub_10027127C(uint64_t a1, uint64_t a2)
{
  return sub_100103A60(a1, a2, &qword_1003B6B90, &qword_10036BA20, algn_10036BA28, (uint64_t)sub_100270D8C);
}

uint64_t sub_10027129C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271024(a1, a2, a3);
}

uint64_t sub_1002712B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002710FC(a1, a2, a3);
}

uint64_t sub_1002712C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367278,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDB80);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100271314@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6B98, (uint64_t)qword_10036BA30, (uint64_t)sub_100270E58, a1);
}

uint64_t sub_100271330(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364BA8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDB08);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100271370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364BA8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDB08);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_1002713C0()
{
  v0._countAndFlagsBits = 0xD000000000000018LL;
  v0._object = (void *)0x80000001002F3290LL;
  String.append(_:)(v0);
  qword_10036BA48 = 0xD000000000000012LL;
  unk_10036BA50 = 0x80000001002F2790LL;
}

uint64_t *sub_100271428()
{
  if (qword_1003B6BA0 != -1) {
    swift_once(&qword_1003B6BA0, sub_1002713C0);
  }
  return &qword_10036BA48;
}

uint64_t sub_100271468()
{
  return sub_1001036C8(&qword_1003B6BA0, &qword_10036BA48, &qword_10036BA50, (uint64_t)sub_1002713C0);
}

uint64_t sub_100271488()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BA58);
  sub_10000E704(v0, (uint64_t)qword_10036BA58);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 2 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3340;
  char v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *char v8 = 1LL;
  *(void *)uint64_t v9 = "adc_gain";
  *(void *)(v9 + 8) = 8LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "adc_offset";
  *((void *)v13 + 1) = 10LL;
  v13[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_1002715D8()
{
  return sub_100008C30(&qword_1003B6BA8, (uint64_t)qword_10036BA58, (uint64_t)sub_100271488);
}

uint64_t sub_1002715F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BA8, (uint64_t)qword_10036BA58, (uint64_t)sub_100271488, a1);
}

uint64_t sub_100271610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271634( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (void (*)(uint64_t, uint64_t, uint64_t))&dispatch thunk of Decoder.decodeSingularInt32Field(value:));
}

uint64_t sub_100271634( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v11, i);
    if (v6 || (v15 & 1) != 0) {
      break;
    }
    if (result == 2)
    {
      uint64_t v13 = a4(0LL);
      dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v5 + *(int *)(v13 + 24), a2, a3);
    }

    else if (result == 1)
    {
      uint64_t v16 = a4(0LL);
      a5(v5 + *(int *)(v16 + 20), a2, a3);
    }

    uint64_t v6 = 0LL;
    uint64_t v11 = a2;
  }

  return result;
}

uint64_t sub_100271710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271734( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))&dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:));
}

uint64_t sub_100271734( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = v5;
  uint64_t result = a4(0LL);
  uint64_t v13 = result;
  uint64_t v14 = (unsigned int *)(v8 + *(int *)(result + 20));
  if ((v14[1] & 1) == 0) {
    uint64_t result = a5(*v14, 1LL, a2, a3);
  }
  if (!v6)
  {
    char v15 = (unsigned int *)(v8 + *(int *)(v13 + 24));
    if ((v15[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v15, 2LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100271808(uint64_t a1, uint64_t a2)
{
  return sub_1001D3CAC(a1, a2, type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData) & 1;
}

Swift::Int sub_100271828()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  &qword_100364760,  (uint64_t)&unk_1002DDD70);
}

uint64_t sub_100271844(uint64_t a1, uint64_t a2)
{
  return sub_100103A60(a1, a2, &qword_1003B6BA0, &qword_10036BA48, &qword_10036BA50, (uint64_t)sub_1002713C0);
}

uint64_t sub_100271864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367270,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDCE8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002718B4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BA8, (uint64_t)qword_10036BA58, (uint64_t)sub_100271488, a1);
}

uint64_t sub_1002718D0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364BC0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDC70);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100271910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364BC0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDC70);
  return Message.hash(into:)(a1, a2, v4);
}

void sub_100271960()
{
  v0._object = (void *)0x80000001002F3260LL;
  v0._countAndFlagsBits = 0xD000000000000011LL;
  String.append(_:)(v0);
  qword_10036BA70 = 0xD000000000000012LL;
  *(void *)algn_10036BA78 = 0x80000001002F2790LL;
}

uint64_t *sub_1002719D0()
{
  if (qword_1003B6BB0 != -1) {
    swift_once(&qword_1003B6BB0, sub_100271960);
  }
  return &qword_10036BA70;
}

uint64_t sub_100271A10()
{
  return sub_1001036C8(&qword_1003B6BB0, &qword_10036BA70, algn_10036BA78, (uint64_t)sub_100271960);
}

uint64_t sub_100271A30()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BA80);
  sub_10000E704(v0, (uint64_t)qword_10036BA80);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 11 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B42D0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "c5";
  *(void *)(v9 + 8) = 2LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.same(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v7 + v6 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "c4";
  *(void *)(v13 + 8) = 2LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v7 + v6 + 2 * v4);
  char v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 3LL;
  *(void *)char v15 = "c3";
  *((void *)v15 + 1) = 2LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v7 + v6 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 4LL;
  *(void *)uint64_t v17 = "c2";
  *((void *)v17 + 1) = 2LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = (void *)(v7 + v6 + 4 * v4);
  uint64_t v19 = (char *)v18 + *(int *)(v2 + 48);
  void *v18 = 5LL;
  *(void *)uint64_t v19 = "c1";
  *((void *)v19 + 1) = 2LL;
  v19[16] = 2;
  v12();
  uint64_t v20 = (void *)(v7 + v6 + 5 * v4);
  uint64_t v21 = (char *)v20 + *(int *)(v2 + 48);
  void *v20 = 6LL;
  *(void *)uint64_t v21 = "c0";
  *((void *)v21 + 1) = 2LL;
  v21[16] = 2;
  v12();
  uint64_t v22 = (void *)(v7 + v6 + 6 * v4);
  uint64_t v23 = (char *)v22 + *(int *)(v2 + 48);
  *uint64_t v22 = 7LL;
  *(void *)uint64_t v23 = "coeff_calibrated";
  *((void *)v23 + 1) = 16LL;
  v23[16] = 2;
  v12();
  uint64_t v24 = (void *)(v7 + v6 + 7 * v4);
  uint64_t v25 = (char *)v24 + *(int *)(v2 + 48);
  void *v24 = 8LL;
  *(void *)uint64_t v25 = "ref_temp";
  *((void *)v25 + 1) = 8LL;
  v25[16] = 2;
  v12();
  uint64_t v26 = v7 + v6 + 8 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 8 * v4) = 9LL;
  *(void *)uint64_t v26 = "ltl_cleanup_factor";
  *(void *)(v26 + 8) = 18LL;
  *(_BYTE *)(v26 + 16) = 2;
  v12();
  uint64_t v27 = (void *)(v7 + v6 + 9 * v4);
  uint64_t v28 = (char *)v27 + *(int *)(v2 + 48);
  void *v27 = 10LL;
  *(void *)uint64_t v28 = "hw_id";
  *((void *)v28 + 1) = 5LL;
  v28[16] = 2;
  v12();
  uint64_t v29 = (void *)(v7 + v6 + 10 * v4);
  uint64_t v30 = (char *)v29 + *(int *)(v2 + 48);
  *uint64_t v29 = 11LL;
  *(void *)uint64_t v30 = "clock_id";
  *((void *)v30 + 1) = 8LL;
  v30[16] = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100271D68()
{
  return sub_100008C30(&qword_1003B6BB8, (uint64_t)qword_10036BA80, (uint64_t)sub_100271A30);
}

uint64_t sub_100271D84@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BB8, (uint64_t)qword_10036BA80, (uint64_t)sub_100271A30, a1);
}

uint64_t sub_100271DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 20);
          goto LABEL_13;
        case 2LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 24);
          goto LABEL_13;
        case 3LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 28);
          goto LABEL_13;
        case 4LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 32);
          goto LABEL_13;
        case 5LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 36);
          goto LABEL_13;
        case 6LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 40);
          goto LABEL_13;
        case 7LL:
          uint64_t v10 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
          dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + *(int *)(v10 + 44), a2, a3);
          break;
        case 8LL:
          uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 48);
LABEL_13:
          dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + v9, a2, a3);
          break;
        case 9LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 52);
          goto LABEL_17;
        case 10LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 56);
          goto LABEL_17;
        case 11LL:
          uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL) + 60);
LABEL_17:
          dispatch thunk of Decoder.decodeSingularUInt32Field(value:)(v3 + v11, a2, a3);
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100271F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v10 = (int *)result;
  uint64_t v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = (unsigned int *)(v5 + v10[6]);
    if ((v12[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v12, 2LL, a2, a3);
    }
    uint64_t v13 = (unsigned int *)(v5 + v10[7]);
    if ((v13[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v13, 3LL, a2, a3);
    }
    uint64_t v14 = (unsigned int *)(v5 + v10[8]);
    if ((v14[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v14, 4LL, a2, a3);
    }
    sub_100272140(v5, a1, a2, a3);
    sub_1002721B4(v5, a1, a2, a3);
    sub_100272228(v5, a1, a2, a3);
    sub_10027229C(v5, a1, a2, a3);
    sub_100272310(v5, a1, a2, a3);
    sub_100272384(v5, a1, a2, a3);
    sub_1002723F8(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100272140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  char v8 = (unsigned int *)(a1 + *(int *)(result + 36));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v8, 5LL, a3, a4);
  }
  return result;
}

uint64_t sub_1002721B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  char v8 = (unsigned int *)(a1 + *(int *)(result + 40));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v8, 6LL, a3, a4);
  }
  return result;
}

uint64_t sub_100272228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(result + 44));
  if (v8 != 2) {
    return dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v8 & 1, 7LL, a3, a4);
  }
  return result;
}

uint64_t sub_10027229C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  int v8 = (unsigned int *)(a1 + *(int *)(result + 48));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v8, 8LL, a3, a4);
  }
  return result;
}

uint64_t sub_100272310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  int v8 = (unsigned int *)(a1 + *(int *)(result + 52));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 9LL, a3, a4);
  }
  return result;
}

uint64_t sub_100272384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  int v8 = (unsigned int *)(a1 + *(int *)(result + 56));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 10LL, a3, a4);
  }
  return result;
}

uint64_t sub_1002723F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  int v8 = (unsigned int *)(a1 + *(int *)(result + 60));
  if ((v8[1] & 1) == 0) {
    return dispatch thunk of Visitor.visitSingularUInt32Field(value:fieldNumber:)(*v8, 11LL, a3, a4);
  }
  return result;
}

Swift::Int sub_100272470()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  &qword_100364768,  (uint64_t)&unk_1002DDED8);
}

uint64_t sub_10027248C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(_DWORD *)uint64_t v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  uint64_t v7 = a2 + v5;
  *(_DWORD *)uint64_t v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  uint64_t v8 = a1[8];
  uint64_t v9 = a2 + a1[7];
  *(_DWORD *)uint64_t v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  uint64_t v10 = a2 + v8;
  *(_DWORD *)uint64_t v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  uint64_t v11 = a1[10];
  uint64_t v12 = a2 + a1[9];
  *(_DWORD *)uint64_t v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  uint64_t v13 = a2 + v11;
  *(_DWORD *)uint64_t v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  uint64_t v14 = a1[12];
  *(_BYTE *)(a2 + a1[11]) = 2;
  uint64_t v15 = a2 + v14;
  *(_DWORD *)uint64_t v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  uint64_t v16 = a1[14];
  uint64_t v17 = a2 + a1[13];
  *(_DWORD *)uint64_t v17 = 0;
  *(_BYTE *)(v17 + 4) = 1;
  uint64_t v18 = a2 + v16;
  *(_DWORD *)uint64_t v18 = 0;
  *(_BYTE *)(v18 + 4) = 1;
  uint64_t v19 = a2 + a1[15];
  *(_DWORD *)uint64_t v19 = 0;
  *(_BYTE *)(v19 + 4) = 1;
  return result;
}

uint64_t sub_10027254C(uint64_t a1, uint64_t a2)
{
  return sub_100103A60(a1, a2, &qword_1003B6BB0, &qword_10036BA70, algn_10036BA78, (uint64_t)sub_100271960);
}

uint64_t sub_10027256C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271DA0(a1, a2, a3);
}

uint64_t sub_100272580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100271F34(a1, a2, a3);
}

uint64_t sub_100272594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367268,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDE50);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002725E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BB8, (uint64_t)qword_10036BA80, (uint64_t)sub_100271A30, a1);
}

uint64_t sub_100272600(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364BD8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDDD8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100272640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364BD8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDDD8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100272690()
{
  return &unk_100345E50;
}

unint64_t sub_10027269C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1002726B8(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036BA98,  (uint64_t)"status",  6LL,  (unsigned int *)&enum case for _NameMap.NameDescription.same(_:));
}

uint64_t sub_1002726D8()
{
  return sub_100008C30(&qword_1003B6BC0, (uint64_t)qword_10036BA98, (uint64_t)sub_1002726B8);
}

uint64_t sub_1002726F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BC0, (uint64_t)qword_10036BA98, (uint64_t)sub_1002726B8, a1);
}

uint64_t sub_100272710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10026E234( a1,  a2,  a3,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t (*)(void))sub_1002845D0,  (uint64_t)&type metadata for Proto_Gpsd_CntinStatus);
}

uint64_t sub_10027273C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL);
  if (*(_BYTE *)(v5 + *(int *)(result + 20)) != 7)
  {
    char v11 = *(_BYTE *)(v5 + *(int *)(result + 20));
    unint64_t v10 = sub_1002845D0();
    uint64_t result = dispatch thunk of Visitor.visitSingularEnumField<A>(value:fieldNumber:)( &v11,  1LL,  &type metadata for Proto_Gpsd_CntinStatus,  v10,  a2,  a3);
  }

  if (!v4) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

Swift::Int sub_1002727E8()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_CntinStatusMessage,  &qword_100364770,  (uint64_t)&unk_1002DE040);
}

uint64_t sub_100272804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  *(_BYTE *)(a2 + *(int *)(a1 + 20)) = 7;
  return result;
}

uint64_t sub_100272834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027273C(a1, a2, a3);
}

uint64_t sub_100272848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100367260,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DDFB8);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100272898@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BC0, (uint64_t)qword_10036BA98, (uint64_t)sub_1002726B8, a1);
}

uint64_t sub_1002728B4(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100364BF0,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DDF40);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_1002728F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100364BF0,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DDF40);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100272944()
{
  return &unk_100345E60;
}

unint64_t sub_100272950()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_10027296C(uint64_t a1)
{
  return sub_1000FB384( a1,  qword_10036BAB0,  (uint64_t)"enable_cntin_clock",  18LL,  (unsigned int *)&enum case for _NameMap.NameDescription.standard(_:));
}

uint64_t sub_10027298C()
{
  return sub_100008C30(&qword_1003B6BC8, (uint64_t)qword_10036BAB0, (uint64_t)sub_10027296C);
}

uint64_t sub_1002729A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BC8, (uint64_t)qword_10036BAB0, (uint64_t)sub_10027296C, a1);
}

uint64_t sub_1002729C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002729E0(a1, a2, a3, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t sub_1002729E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v9 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v9, i);
    if (v5 || (v12 & 1) != 0) {
      break;
    }
    if (result == 1)
    {
      uint64_t v13 = a4(0LL);
      dispatch thunk of Decoder.decodeSingularBoolField(value:)(v4 + *(int *)(v13 + 20), a2, a3);
    }

    uint64_t v5 = 0LL;
    uint64_t v9 = a2;
  }

  return result;
}

uint64_t sub_100272A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100272A94(a1, a2, a3, type metadata accessor for Proto_Gpsd_CntinClockControl);
}

uint64_t sub_100272A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = v4;
  uint64_t result = a4(0LL);
  int v11 = *(unsigned __int8 *)(v6 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v5) {
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }
  return result;
}

uint64_t sub_100272B28(uint64_t a1, uint64_t a2)
{
  return sub_100276B80(a1, a2, type metadata accessor for Proto_Gpsd_CntinClockControl) & 1;
}

Swift::Int sub_100272B48()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_CntinClockControl,  &qword_100364778,  (uint64_t)&unk_1002DE1A8);
}

uint64_t sub_100272B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367258, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&unk_1002DE120);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_100272BB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BC8, (uint64_t)qword_10036BAB0, (uint64_t)sub_10027296C, a1);
}

uint64_t sub_100272BD0(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364C08, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&unk_1002DE0A8);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100272C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364C08, type metadata accessor for Proto_Gpsd_CntinClockControl, (uint64_t)&unk_1002DE0A8);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100272C60()
{
  return &unk_100345E70;
}

unint64_t sub_100272C6C()
{
  return 0xD000000000000014LL;
}

uint64_t sub_100272C88()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BAC8);
  sub_10000E704(v0, (uint64_t)qword_10036BAC8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "type_deprecated";
  *(void *)(v9 + 8) = 15LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  char v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "payload";
  *((void *)v13 + 1) = 7LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "type_integer";
  *(void *)(v14 + 8) = 12LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100272E24()
{
  return sub_100008C30(&qword_1003B6BD0, (uint64_t)qword_10036BAC8, (uint64_t)sub_100272C88);
}

uint64_t sub_100272E40@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BD0, (uint64_t)qword_10036BAC8, (uint64_t)sub_100272C88, a1);
}

uint64_t sub_100272E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0LL) + 28);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularInt32Field(value:)(v3 + v9, a2, a3);
        break;
      case 2LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0LL) + 24);
        goto LABEL_3;
      case 1LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_Exception(0LL) + 20);
        goto LABEL_3;
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_100272F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_Exception(0LL);
  uint64_t v10 = result;
  char v11 = (unsigned int *)(v5 + *(int *)(result + 20));
  if ((v11[1] & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    char v12 = (unsigned int *)(v5 + *(int *)(v10 + 24));
    if ((v12[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v12, 2LL, a2, a3);
    }
    uint64_t v13 = (unsigned int *)(v5 + *(int *)(v10 + 28));
    if ((v13[1] & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt32Field(value:fieldNumber:)(*v13, 3LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10027301C()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_Exception, &qword_100364780, (uint64_t)&unk_1002DE310);
}

uint64_t sub_100273038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100272E5C(a1, a2, a3);
}

uint64_t sub_10027304C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100272F20(a1, a2, a3);
}

uint64_t sub_100273060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367250, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE288);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002730B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BD0, (uint64_t)qword_10036BAC8, (uint64_t)sub_100272C88, a1);
}

uint64_t sub_1002730CC(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364C20, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE210);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10027310C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364C20, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE210);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_10027315C()
{
  return &unk_100345E80;
}

unint64_t sub_100273168()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_100273184()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BAE0);
  sub_10000E704(v0, (uint64_t)qword_10036BAE0);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "mach_continuous_seconds";
  *(void *)(v9 + 8) = 23LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  char v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "reason_code";
  *((void *)v13 + 1) = 11LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "reason_string";
  *(void *)(v14 + 8) = 13LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100273318()
{
  return sub_100008C30(&qword_1003B6BD8, (uint64_t)qword_10036BAE0, (uint64_t)sub_100273184);
}

uint64_t sub_100273334@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BD8, (uint64_t)qword_10036BAE0, (uint64_t)sub_100273184, a1);
}

uint64_t sub_100273350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    uint64_t v10 = v4;
    if (v4 || (v12 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3LL:
        uint64_t v9 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
        dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + *(int *)(v9 + 28), a2, a3);
LABEL_3:
        uint64_t v10 = 0LL;
        break;
      case 2LL:
        uint64_t v14 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
        dispatch thunk of Decoder.decodeSingularInt64Field(value:)(v3 + *(int *)(v14 + 24), a2, a3);
        goto LABEL_3;
      case 1LL:
        uint64_t v13 = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
        dispatch thunk of Decoder.decodeSingularDoubleField(value:)(v3 + *(int *)(v13 + 20), a2, a3);
        goto LABEL_3;
    }

    uint64_t v4 = v10;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_10027343C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularDoubleField(value:fieldNumber:)(1LL, a2, a3, *(double *)v11);
  }
  if (!v4)
  {
    uint64_t v12 = v5 + *(int *)(v10 + 24);
    if ((*(_BYTE *)(v12 + 8) & 1) == 0) {
      dispatch thunk of Visitor.visitSingularInt64Field(value:fieldNumber:)(*(void *)v12, 2LL, a2, a3);
    }
    uint64_t v13 = (void *)(v5 + *(int *)(v10 + 28));
    uint64_t v14 = v13[1];
    if (v14) {
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v13, v14, 3LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_100273538()
{
  return sub_10000DF8C( type metadata accessor for Proto_Gpsd_AskBasebandReset,  &qword_100364788,  (uint64_t)&unk_1002DE478);
}

uint64_t sub_100273554@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = UnknownStorage.init()();
  uint64_t v5 = a1[6];
  uint64_t v6 = a2 + a1[5];
  *(void *)uint64_t v6 = 0LL;
  *(_BYTE *)(v6 + 8) = 1;
  uint64_t v7 = a2 + v5;
  *(void *)uint64_t v7 = 0LL;
  *(_BYTE *)(v7 + 8) = 1;
  uint64_t v8 = (void *)(a2 + a1[7]);
  *uint64_t v8 = 0LL;
  v8[1] = 0LL;
  return result;
}

uint64_t sub_1002735A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100273350(a1, a2, a3);
}

uint64_t sub_1002735B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027343C(a1, a2, a3);
}

uint64_t sub_1002735CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367248, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&unk_1002DE3F0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_10027361C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BD8, (uint64_t)qword_10036BAE0, (uint64_t)sub_100273184, a1);
}

uint64_t sub_100273638(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364C38, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&unk_1002DE378);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100273678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364C38, type metadata accessor for Proto_Gpsd_AskBasebandReset, (uint64_t)&unk_1002DE378);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_1002736C8()
{
  return &unk_100345E90;
}

unint64_t sub_1002736D4()
{
  return 0xD000000000000013LL;
}

uint64_t sub_1002736F0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BAF8);
  sub_10000E704(v0, (uint64_t)qword_10036BAF8);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 5 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B32F0;
  uint64_t v8 = v7 + v6;
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *(void *)(v7 + v6) = 1LL;
  *(void *)uint64_t v9 = "print_time_mach_continuous_ns";
  *(void *)(v9 + 8) = 29LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = v8 + v4 + *(int *)(v2 + 48);
  *(void *)(v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "comment";
  *(void *)(v13 + 8) = 7LL;
  *(_BYTE *)(v13 + 16) = 2;
  v12();
  uint64_t v14 = (void *)(v8 + 2 * v4);
  uint64_t v15 = (char *)v14 + *(int *)(v2 + 48);
  *uint64_t v14 = 5LL;
  *(void *)uint64_t v15 = "request";
  *((void *)v15 + 1) = 7LL;
  v15[16] = 2;
  v12();
  uint64_t v16 = (void *)(v8 + 3 * v4);
  uint64_t v17 = (char *)v16 + *(int *)(v2 + 48);
  *uint64_t v16 = 6LL;
  *(void *)uint64_t v17 = "response";
  *((void *)v17 + 1) = 8LL;
  v17[16] = 2;
  v12();
  uint64_t v18 = v8 + 4 * v4 + *(int *)(v2 + 48);
  *(void *)(v8 + 4 * v4) = 7LL;
  *(void *)uint64_t v18 = "indication";
  *(void *)(v18 + 8) = 10LL;
  *(_BYTE *)(v18 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100273900()
{
  return sub_100008C30(&qword_1003B6BE0, (uint64_t)qword_10036BAF8, (uint64_t)sub_1002736F0);
}

uint64_t sub_10027391C@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BE0, (uint64_t)qword_10036BAF8, (uint64_t)sub_1002736F0, a1);
}

uint64_t sub_100273938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
  uint64_t v9 = v4;
  if (!v4)
  {
    while ((v8 & 1) == 0)
    {
      switch(result)
      {
        case 1LL:
          uint64_t v17 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
          uint64_t v16 = v9;
          dispatch thunk of Decoder.decodeSingularUInt64Field(value:)(v3 + *(int *)(v17 + 20), a2, a3);
          goto LABEL_6;
        case 2LL:
          uint64_t v18 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
          uint64_t v16 = v9;
          dispatch thunk of Decoder.decodeSingularStringField(value:)(v3 + *(int *)(v18 + 24), a2, a3);
          goto LABEL_6;
        case 5LL:
          uint64_t v10 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 28);
          uint64_t v11 = type metadata accessor for Proto_Gpsd_Request(0LL);
          uint64_t v12 = &qword_100351798;
          uint64_t v13 = type metadata accessor for Proto_Gpsd_Request;
          uint64_t v14 = &unk_1002DA980;
          goto LABEL_5;
        case 6LL:
          uint64_t v10 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 32);
          uint64_t v11 = type metadata accessor for Proto_Gpsd_Response(0LL);
          uint64_t v12 = &qword_100351748;
          uint64_t v13 = type metadata accessor for Proto_Gpsd_Response;
          uint64_t v14 = &unk_1002DAB10;
          goto LABEL_5;
        case 7LL:
          uint64_t v10 = v3 + *(int *)(type metadata accessor for Proto_Gpsd_LogEntry(0LL) + 36);
          uint64_t v11 = type metadata accessor for Proto_Gpsd_Indication(0LL);
          uint64_t v12 = &qword_100351740;
          uint64_t v13 = type metadata accessor for Proto_Gpsd_Indication;
          uint64_t v14 = &unk_1002DAC78;
LABEL_5:
          uint64_t v15 = sub_10000FD98(v12, v13, (uint64_t)v14);
          uint64_t v16 = v9;
          dispatch thunk of Decoder.decodeSingularMessageField<A>(value:)(v10, v11, v15, a2, a3);
LABEL_6:
          uint64_t v9 = v16;
          break;
        default:
          break;
      }

      uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(a2, a3);
    }
  }

  return result;
}

uint64_t sub_100273AF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  uint64_t v10 = result;
  uint64_t v11 = v5 + *(int *)(result + 20);
  if ((*(_BYTE *)(v11 + 8) & 1) == 0) {
    uint64_t result = dispatch thunk of Visitor.visitSingularUInt64Field(value:fieldNumber:)(*(void *)v11, 1LL, a2, a3);
  }
  if (!v4)
  {
    uint64_t v12 = (void *)(v5 + *(int *)(v10 + 24));
    uint64_t v13 = v12[1];
    if (v13) {
      dispatch thunk of Visitor.visitSingularStringField(value:fieldNumber:)(*v12, v13, 2LL, a2, a3);
    }
    sub_100273C20(v5, a1, a2, a3);
    sub_100273D94(v5, a1, a2, a3);
    sub_100273F08(v5, a1, a2, a3);
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

uint64_t sub_100273C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100350F20);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Request(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 28), (uint64_t)v8, &qword_100350F20);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_Request);
  uint64_t v15 = sub_10000FD98(&qword_100351798, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DA980);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 5LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_Request);
}

uint64_t sub_100273D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100350F28);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 32), (uint64_t)v8, &qword_100350F28);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_Response);
  uint64_t v15 = sub_10000FD98(&qword_100351748, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAB10);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 6LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_Response);
}

uint64_t sub_100273F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a4;
  uint64_t v6 = sub_100003A0C(&qword_100350F30);
  __chkstk_darwin(v6);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  sub_10000E6C0(a1 + *(int *)(v13 + 36), (uint64_t)v8, &qword_100350F30);
  sub_100003E68((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Gpsd_Indication);
  uint64_t v15 = sub_10000FD98(&qword_100351740, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DAC78);
  dispatch thunk of Visitor.visitSingularMessageField<A>(value:fieldNumber:)(v12, 7LL, v9, v15, a3, v17);
  return sub_100004090((uint64_t)v12, type metadata accessor for Proto_Gpsd_Indication);
}

Swift::Int sub_100274080()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_LogEntry, &qword_100364790, (uint64_t)&unk_1002DE5E0);
}

uint64_t sub_10027409C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[6];
  uint64_t v5 = a2 + a1[5];
  *(void *)uint64_t v5 = 0LL;
  *(_BYTE *)(v5 + 8) = 1;
  uint64_t v6 = (void *)(a2 + v4);
  *uint64_t v6 = 0LL;
  v6[1] = 0LL;
  uint64_t v7 = a2 + a1[7];
  uint64_t v8 = type metadata accessor for Proto_Gpsd_Request(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v7, 1LL, 1LL, v8);
  uint64_t v9 = a2 + a1[8];
  uint64_t v10 = type metadata accessor for Proto_Gpsd_Response(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v9, 1LL, 1LL, v10);
  uint64_t v11 = a2 + a1[9];
  uint64_t v12 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))( v11,  1LL,  1LL,  v12);
}

uint64_t sub_100274164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100273938(a1, a2, a3);
}

uint64_t sub_100274178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100273AF4(a1, a2, a3);
}

uint64_t sub_10027418C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367240, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE558);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002741DC@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BE0, (uint64_t)qword_10036BAF8, (uint64_t)sub_1002736F0, a1);
}

uint64_t sub_1002741F8(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100355530, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE4E0);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_100274238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100355530, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE4E0);
  return Message.hash(into:)(a1, a2, v4);
}

void *sub_100274288()
{
  return &unk_100345EA0;
}

unint64_t sub_100274294()
{
  return 0xD000000000000017LL;
}

uint64_t sub_1002742B0()
{
  uint64_t v0 = type metadata accessor for _NameMap(0LL);
  sub_100015614(v0, qword_10036BB10);
  sub_10000E704(v0, (uint64_t)qword_10036BB10);
  uint64_t v1 = sub_100003A0C(&qword_1003516F8);
  uint64_t v2 = sub_100003A0C(&qword_100351700);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = swift_allocObject(v1, v6 + 3 * v4, v5 | 7);
  *(_OWORD *)(v7 + 16) = xmmword_1002B3310;
  uint64_t v8 = (void *)(v7 + v6);
  uint64_t v9 = v7 + v6 + *(int *)(v2 + 48);
  *uint64_t v8 = 1LL;
  *(void *)uint64_t v9 = "enable_lte_band13_filter";
  *(void *)(v9 + 8) = 24LL;
  *(_BYTE *)(v9 + 16) = 2;
  uint64_t v10 = enum case for _NameMap.NameDescription.standard(_:);
  uint64_t v11 = type metadata accessor for _NameMap.NameDescription(0LL);
  uint64_t v12 = *(void (**)(void))(*(void *)(v11 - 8) + 104LL);
  ((void (*)(uint64_t, uint64_t, uint64_t))v12)(v9, v10, v11);
  uint64_t v13 = (char *)v8 + v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + v4) = 2LL;
  *(void *)uint64_t v13 = "enable_benign_environment_power_saving";
  *((void *)v13 + 1) = 38LL;
  v13[16] = 2;
  v12();
  uint64_t v14 = (uint64_t)v8 + 2 * v4 + *(int *)(v2 + 48);
  *(void *)((char *)v8 + 2 * v4) = 3LL;
  *(void *)uint64_t v14 = "in_region_where_cold_searches_should_prioritize_beidou";
  *(void *)(v14 + 8) = 54LL;
  *(_BYTE *)(v14 + 16) = 2;
  v12();
  return _NameMap.init(dictionaryLiteral:)(v7);
}

uint64_t sub_100274444()
{
  return sub_100008C30(&qword_1003B6BE8, (uint64_t)qword_10036BB10, (uint64_t)sub_1002742B0);
}

uint64_t sub_100274460@<X0>(uint64_t a1@<X8>)
{
  return sub_100008C8C(&qword_1003B6BE8, (uint64_t)qword_10036BB10, (uint64_t)sub_1002742B0, a1);
}

uint64_t sub_10027447C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = a2;
  for (uint64_t i = a3; ; uint64_t i = a3)
  {
    uint64_t result = dispatch thunk of Decoder.nextFieldNumber()(v7, i);
    if (v4 || (v11 & 1) != 0) {
      break;
    }
    switch(result)
    {
      case 3LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 28);
LABEL_3:
        dispatch thunk of Decoder.decodeSingularBoolField(value:)(v3 + v9, a2, a3);
        break;
      case 2LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 24);
        goto LABEL_3;
      case 1LL:
        uint64_t v9 = *(int *)(type metadata accessor for Proto_Gpsd_StartContext(0LL) + 20);
        goto LABEL_3;
    }

    uint64_t v4 = 0LL;
    uint64_t v7 = a2;
  }

  return result;
}

uint64_t sub_100274540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t result = type metadata accessor for Proto_Gpsd_StartContext(0LL);
  uint64_t v10 = result;
  int v11 = *(unsigned __int8 *)(v5 + *(int *)(result + 20));
  if (v11 != 2) {
    uint64_t result = dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v11 & 1, 1LL, a2, a3);
  }
  if (!v4)
  {
    int v12 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 24));
    if (v12 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v12 & 1, 2LL, a2, a3);
    }
    int v13 = *(unsigned __int8 *)(v5 + *(int *)(v10 + 28));
    if (v13 != 2) {
      dispatch thunk of Visitor.visitSingularBoolField(value:fieldNumber:)(v13 & 1, 3LL, a2, a3);
    }
    return UnknownStorage.traverse<A>(visitor:)(a1, a2, a3);
  }

  return result;
}

Swift::Int sub_10027463C()
{
  return sub_10000DF8C(type metadata accessor for Proto_Gpsd_StartContext, &qword_100364798, (uint64_t)&unk_1002DE748);
}

uint64_t sub_100274658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10027447C(a1, a2, a3);
}

uint64_t sub_10027466C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100274540(a1, a2, a3);
}

uint64_t sub_100274680(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100367238, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE6C0);
  return _MessageImplementationBase.isEqualTo(message:)(a1, a2, v4);
}

uint64_t sub_1002746D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100008D10(&qword_1003B6BE8, (uint64_t)qword_10036BB10, (uint64_t)sub_1002742B0, a1);
}

uint64_t sub_1002746EC(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98(&qword_100364C58, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE648);
  return Message.debugDescription.getter(a1, v2);
}

uint64_t sub_10027472C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98(&qword_100364C58, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE648);
  return Message.hash(into:)(a1, a2, v4);
}

uint64_t sub_10027477C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (v11 && a1 != a2)
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      while (1)
      {
        sub_10000404C(a1 + v12, (uint64_t)v10, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
        sub_10000404C(a2 + v12, (uint64_t)v7, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
        uint64_t v15 = v4[5];
        uint64_t v16 = &v10[v15];
        uint64_t v17 = *(void *)&v10[v15 + 8];
        uint64_t v18 = &v7[v15];
        uint64_t v19 = *((void *)v18 + 1);
        if (v17)
        {
          if (!v19) {
            goto LABEL_36;
          }
          BOOL v20 = *(void *)v16 == *(void *)v18 && v17 == v19;
          if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v16, v17) & 1) == 0) {
            goto LABEL_36;
          }
        }

        else if (v19)
        {
          goto LABEL_36;
        }

        uint64_t v21 = v4[6];
        uint64_t v22 = &v10[v21];
        char v23 = v10[v21 + 4];
        uint64_t v24 = &v7[v21];
        int v25 = v7[v21 + 4];
        if ((v23 & 1) != 0)
        {
          if (!v25) {
            goto LABEL_36;
          }
        }

        else
        {
          if (*(_DWORD *)v22 != *(_DWORD *)v24) {
            LOBYTE(v25) = 1;
          }
          if ((v25 & 1) != 0)
          {
LABEL_36:
            sub_100004090((uint64_t)v7, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
            sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
            goto LABEL_37;
          }
        }

        uint64_t v26 = v4[7];
        uint64_t v27 = &v10[v26];
        uint64_t v28 = *(void *)&v10[v26 + 8];
        uint64_t v29 = &v7[v26];
        uint64_t v30 = *((void *)v29 + 1);
        if (v28)
        {
          if (!v30) {
            goto LABEL_36;
          }
          BOOL v31 = *(void *)v27 == *(void *)v29 && v28 == v30;
          if (!v31 && (_stringCompareWithSmolCheck(_:_:expecting:)(*(void *)v27, v28) & 1) == 0) {
            goto LABEL_36;
          }
        }

        else if (v30)
        {
          goto LABEL_36;
        }

        uint64_t v32 = type metadata accessor for UnknownStorage(0LL);
        uint64_t v33 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
        char v34 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v7, v32, v33);
        sub_100004090((uint64_t)v7, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
        sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
        BOOL v36 = v14-- != 0;
        if ((v34 & 1) != 0)
        {
          v12 += v13;
          if (v36) {
            continue;
          }
        }

        return v34 & 1;
      }
    }

    char v34 = 1;
  }

  else
  {
LABEL_37:
    char v34 = 0;
  }

  return v34 & 1;
}

uint64_t type metadata accessor for Proto_Gpsd_Request(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0450, (uint64_t)&nominal type descriptor for Proto_Gpsd_Request);
}

uint64_t type metadata accessor for Proto_Gpsd_Request._StorageClass(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0710,  (uint64_t)&nominal type descriptor for Proto_Gpsd_Request._StorageClass);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectAssistancePosition(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C04D0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_InjectAssistancePosition);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectAssistanceTime(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C04E0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_InjectAssistanceTime);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistancePressure(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0510,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistancePressure);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceAccel(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0520,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceAccel);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceGyro(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0530,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceGyro);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceDem(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0540, (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceDem);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0550,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceMapVector);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0560,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceMotionActivityContext);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceMountState(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0570,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceMountState);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0580,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceSignalEnvironment);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0590,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceSpeedConstraint);
}

uint64_t type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C05A0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectAssistanceFile(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C04A0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_InjectAssistanceFile);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectRtiFile(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C04B0, (uint64_t)&nominal type descriptor for Proto_Gpsd_InjectRtiFile);
}

uint64_t type metadata accessor for Proto_Gpsd_InjectSvidBlocklist(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C04C0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_InjectSvidBlocklist);
}

uint64_t type metadata accessor for Proto_Gpsd_DeleteGnssData(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C04F0, (uint64_t)&nominal type descriptor for Proto_Gpsd_DeleteGnssData);
}

uint64_t type metadata accessor for Proto_Gpsd_SetPvtmReport(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0490, (uint64_t)&nominal type descriptor for Proto_Gpsd_SetPvtmReport);
}

uint64_t type metadata accessor for Proto_Gpsd_SetNmeaHandler(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0500, (uint64_t)&nominal type descriptor for Proto_Gpsd_SetNmeaHandler);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C05C0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetConfigSimulatorMode);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C05D0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetConfigEnableGnssConstellations);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigDutyCycling(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C05F0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetConfigDutyCycling);
}

uint64_t type metadata accessor for Proto_Gpsd_TerminationImminent(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0600,  (uint64_t)&nominal type descriptor for Proto_Gpsd_TerminationImminent);
}

uint64_t type metadata accessor for Proto_Gpsd_ExitMessage(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0610, (uint64_t)&nominal type descriptor for Proto_Gpsd_ExitMessage);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0660, (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfo);
}

uint64_t type metadata accessor for Proto_Gpsd_StartContext(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0700, (uint64_t)&nominal type descriptor for Proto_Gpsd_StartContext);
}

uint64_t type metadata accessor for Proto_Gpsd_CntinStatusMessage(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C06B0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_CntinStatusMessage);
}

uint64_t type metadata accessor for Proto_Gpsd_SetThermalRiskState(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C05B0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetThermalRiskState);
}

uint64_t type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C05E0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_SetConfigRfBandEnable);
}

uint64_t sub_100274C20(unint64_t a1)
{
  if (a1 > 0x4C) {
    return 61LL;
  }
  else {
    return byte_1002DF0C0[a1];
  }
}

uint64_t type metadata accessor for Proto_Gpsd_Response(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0460, (uint64_t)&nominal type descriptor for Proto_Gpsd_Response);
}

uint64_t type metadata accessor for Proto_Gpsd_Indication(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0470, (uint64_t)&nominal type descriptor for Proto_Gpsd_Indication);
}

uint64_t type metadata accessor for Proto_Gpsd_Indication._StorageClass(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0720,  (uint64_t)&nominal type descriptor for Proto_Gpsd_Indication._StorageClass);
}

uint64_t type metadata accessor for Proto_Gpsd_Status(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0480, (uint64_t)&nominal type descriptor for Proto_Gpsd_Status);
}

uint64_t type metadata accessor for Proto_Gpsd_RecoveryStatistics(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0620,  (uint64_t)&nominal type descriptor for Proto_Gpsd_RecoveryStatistics);
}

uint64_t type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0630,  (uint64_t)&nominal type descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfoRequest(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C0650, (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfoRequest);
}

uint64_t type metadata accessor for Proto_Gpsd_CntinClockControl(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C06C0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_CntinClockControl);
}

uint64_t type metadata accessor for Proto_Gpsd_Exception(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C06D0, (uint64_t)&nominal type descriptor for Proto_Gpsd_Exception);
}

uint64_t type metadata accessor for Proto_Gpsd_AskBasebandReset(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C06E0, (uint64_t)&nominal type descriptor for Proto_Gpsd_AskBasebandReset);
}

uint64_t sub_100274D08(unint64_t a1)
{
  if (a1 > 0x1A) {
    return 24LL;
  }
  else {
    return byte_1002DF10D[a1];
  }
}

uint64_t type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0640,  (uint64_t)&nominal type descriptor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0730,  (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfo._StorageClass);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C06A0,  (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfo.LtlInitialParams);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0670,  (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfo.LtlLutParams);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0680,  (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
}

uint64_t type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData(uint64_t a1)
{
  return sub_10000E68C( a1,  (uint64_t *)&unk_1003C0690,  (uint64_t)&nominal type descriptor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
}

uint64_t type metadata accessor for Proto_Gpsd_LogEntry(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C06F0, (uint64_t)&nominal type descriptor for Proto_Gpsd_LogEntry);
}

uint64_t sub_100274DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v35[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v35[-v9];
  uint64_t v11 = type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext(0LL);
  uint64_t v12 = v11;
  uint64_t v13 = *(int *)(v11 + 20);
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = *(_BYTE *)(a1 + v13 + 8);
  uint64_t v16 = (void *)(a2 + v13);
  int v17 = *(unsigned __int8 *)(a2 + v13 + 8);
  if ((v15 & 1) != 0)
  {
    if (!v17) {
      goto LABEL_23;
    }
  }

  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if ((v17 & 1) != 0) {
      goto LABEL_23;
    }
  }

  uint64_t v18 = *(int *)(v11 + 24);
  int v19 = *(unsigned __int8 *)(a1 + v18);
  int v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 10)
  {
    if (v20 != 10) {
      goto LABEL_23;
    }
  }

  else
  {
    char v37 = v19;
    if (v20 == 10) {
      goto LABEL_23;
    }
    char v36 = v20;
    unint64_t v21 = sub_10021D36C();
    if ((dispatch thunk of static Equatable.== infix(_:_:)( &v37,  &v36,  &type metadata for Proto_Gnss_MotionActivityContext,  v21) & 1) == 0) {
      goto LABEL_23;
    }
  }

  uint64_t v22 = *(int *)(v12 + 28);
  int v23 = *(unsigned __int8 *)(a1 + v22);
  int v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 5)
  {
    if (v24 != 5) {
      goto LABEL_23;
    }
  }

  else
  {
    char v39 = v23;
    if (v24 == 5) {
      goto LABEL_23;
    }
    char v38 = v24;
    unint64_t v25 = sub_10021D468();
    if ((dispatch thunk of static Equatable.== infix(_:_:)(&v39, &v38, &type metadata for Proto_Gnss_MovingState, v25) & 1) == 0) {
      goto LABEL_23;
    }
  }

  uint64_t v26 = *(int *)(v12 + 32);
  int v27 = *(unsigned __int8 *)(a1 + v26);
  int v28 = *(unsigned __int8 *)(a2 + v26);
  if (v27 == 6)
  {
    if (v28 == 6) {
      goto LABEL_22;
    }
LABEL_23:
    char v32 = 0;
    return v32 & 1;
  }

  char v41 = v27;
  if (v28 == 6) {
    goto LABEL_23;
  }
  char v40 = v28;
  unint64_t v29 = sub_10021D564();
  if ((dispatch thunk of static Equatable.== infix(_:_:)(&v41, &v40, &type metadata for Proto_Gnss_Reliability, v29) & 1) == 0) {
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v30(v10, a1, v4);
  v30(v8, a2, v4);
  uint64_t v31 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v32 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v31);
  uint64_t v33 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v33(v8, v4);
  v33(v10, v4);
  return v32 & 1;
}

uint64_t sub_100275008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v20[-v9];
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment(0LL) + 20);
  int v12 = *(unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 == 8)
  {
    if (v13 != 8)
    {
LABEL_7:
      char v17 = 0;
      return v17 & 1;
    }
  }

  else
  {
    char v22 = v12;
    if (v13 == 8) {
      goto LABEL_7;
    }
    char v21 = v13;
    unint64_t v14 = sub_10021D75C();
    if ((dispatch thunk of static Equatable.== infix(_:_:)( &v22,  &v21,  &type metadata for Proto_Gnss_SignalEnvironmentType,  v14) & 1) == 0) {
      goto LABEL_7;
    }
  }

  char v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v15(v10, a1, v4);
  v15(v8, a2, v4);
  uint64_t v16 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v17 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v16);
  uint64_t v18 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v18(v8, v4);
  v18(v10, v4);
  return v17 & 1;
}

uint64_t sub_10027517C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v37 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint(0LL);
  uint64_t v12 = v11[5];
  int v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  char v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_21;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_21;
    }
  }

  uint64_t v17 = v11[6];
  uint64_t v18 = (double *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  int v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_21;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_21;
    }
  }

  uint64_t v22 = v11[7];
  int v23 = (double *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 8);
  unint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) == 0)
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v27 = v11[8];
    int v28 = (double *)(a1 + v27);
    char v29 = *(_BYTE *)(a1 + v27 + 8);
    uint64_t v30 = (double *)(a2 + v27);
    int v31 = *(unsigned __int8 *)(a2 + v27 + 8);
    if ((v29 & 1) != 0)
    {
      if (!v31) {
        goto LABEL_21;
      }
    }

    else
    {
      if (*v28 != *v30) {
        LOBYTE(v31) = 1;
      }
      if ((v31 & 1) != 0) {
        goto LABEL_21;
      }
    }

    char v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v34(v10, a1, v4);
    v34(v8, a2, v4);
    uint64_t v35 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v32 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v35);
    char v36 = *(void (**)(char *, uint64_t))(v5 + 8);
    v36(v8, v4);
    v36(v10, v4);
    return v32 & 1;
  }

  if (v26) {
    goto LABEL_19;
  }
LABEL_21:
  char v32 = 0;
  return v32 & 1;
}

uint64_t sub_100275360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v26[-v9];
  uint64_t v11 = type metadata accessor for Proto_Gpsd_SetAssistanceMountState(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  char v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_13;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_13;
    }
  }

  uint64_t v17 = *(int *)(v11 + 24);
  int v18 = *(unsigned __int8 *)(a1 + v17);
  int v19 = *(unsigned __int8 *)(a2 + v17);
  if (v18 == 4)
  {
    if (v19 != 4)
    {
LABEL_13:
      char v23 = 0;
      return v23 & 1;
    }
  }

  else
  {
    char v28 = v18;
    if (v19 == 4) {
      goto LABEL_13;
    }
    char v27 = v19;
    unint64_t v20 = sub_10021D660();
    if ((dispatch thunk of static Equatable.== infix(_:_:)( &v28,  &v27,  &type metadata for Proto_Gnss_DeviceMountState,  v20) & 1) == 0) {
      goto LABEL_13;
    }
  }

  int v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v21(v10, a1, v4);
  v21(v8, a2, v4);
  uint64_t v22 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v22);
  char v24 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v24(v8, v4);
  v24(v10, v4);
  return v23 & 1;
}

uint64_t sub_100275508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_8;
    }
  }

  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_8;
  }

  uint64_t v15 = *(int *)(v11 + 24);
  int v16 = (_DWORD *)(a1 + v15);
  char v17 = *(_BYTE *)(a1 + v15 + 4);
  int v18 = (_DWORD *)(a2 + v15);
  int v19 = *(unsigned __int8 *)(a2 + v15 + 4);
  if ((v17 & 1) == 0)
  {
    if (*v16 != *v18) {
      LOBYTE(v19) = 1;
    }
    if ((v19 & 1) != 0) {
      goto LABEL_8;
    }
LABEL_13:
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v22(v10, a1, v4);
    v22(v8, a2, v4);
    uint64_t v23 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v23);
    char v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    v24(v10, v4);
    return v20 & 1;
  }

  if (v19) {
    goto LABEL_13;
  }
LABEL_8:
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100275688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v70 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_SetAssistanceMapVector(0LL);
  uint64_t v12 = v11[5];
  int v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (double *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  char v20 = (double *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v22 = v11[7];
  uint64_t v23 = (double *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 8);
  uint64_t v25 = (double *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
  if ((v24 & 1) != 0)
  {
    if (!v26) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v27 = v11[8];
  int v28 = *(unsigned __int8 *)(a1 + v27);
  int v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 2)
  {
    if (v29 != 2) {
      goto LABEL_74;
    }
  }

  else if (v29 == 2 || ((((v29 & 1) == 0) ^ v28) & 1) == 0)
  {
    goto LABEL_74;
  }

  uint64_t v30 = v11[9];
  int v31 = (double *)(a1 + v30);
  char v32 = *(_BYTE *)(a1 + v30 + 8);
  uint64_t v33 = (double *)(a2 + v30);
  int v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if ((v32 & 1) != 0)
  {
    if (!v34) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v31 != *v33) {
      LOBYTE(v34) = 1;
    }
    if ((v34 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v35 = v11[10];
  char v36 = (double *)(a1 + v35);
  char v37 = *(_BYTE *)(a1 + v35 + 8);
  char v38 = (double *)(a2 + v35);
  int v39 = *(unsigned __int8 *)(a2 + v35 + 8);
  if ((v37 & 1) != 0)
  {
    if (!v39) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v36 != *v38) {
      LOBYTE(v39) = 1;
    }
    if ((v39 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v40 = v11[11];
  char v41 = (double *)(a1 + v40);
  char v42 = *(_BYTE *)(a1 + v40 + 8);
  uint64_t v43 = (double *)(a2 + v40);
  int v44 = *(unsigned __int8 *)(a2 + v40 + 8);
  if ((v42 & 1) != 0)
  {
    if (!v44) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v41 != *v43) {
      LOBYTE(v44) = 1;
    }
    if ((v44 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v45 = v11[12];
  int v46 = (double *)(a1 + v45);
  char v47 = *(_BYTE *)(a1 + v45 + 8);
  uint64_t v48 = (double *)(a2 + v45);
  int v49 = *(unsigned __int8 *)(a2 + v45 + 8);
  if ((v47 & 1) != 0)
  {
    if (!v49) {
      goto LABEL_74;
    }
  }

  else
  {
    if (*v46 != *v48) {
      LOBYTE(v49) = 1;
    }
    if ((v49 & 1) != 0) {
      goto LABEL_74;
    }
  }

  uint64_t v50 = v11[13];
  int v51 = *(unsigned __int8 *)(a1 + v50);
  int v52 = *(unsigned __int8 *)(a2 + v50);
  if (v51 == 2)
  {
    if (v52 != 2) {
      goto LABEL_74;
    }
  }

  else if (v52 == 2 || ((((v52 & 1) == 0) ^ v51) & 1) == 0)
  {
    goto LABEL_74;
  }

  uint64_t v53 = v11[14];
  int v54 = *(unsigned __int8 *)(a1 + v53);
  int v55 = *(unsigned __int8 *)(a2 + v53);
  if (v54 == 2)
  {
    if (v55 != 2) {
      goto LABEL_74;
    }
  }

  else if (v55 == 2 || ((((v55 & 1) == 0) ^ v54) & 1) == 0)
  {
    goto LABEL_74;
  }

  uint64_t v56 = v11[15];
  int v57 = *(unsigned __int8 *)(a1 + v56);
  int v58 = *(unsigned __int8 *)(a2 + v56);
  if (v57 == 2)
  {
    if (v58 != 2) {
      goto LABEL_74;
    }
  }

  else if (v58 == 2 || ((((v58 & 1) == 0) ^ v57) & 1) == 0)
  {
    goto LABEL_74;
  }

  uint64_t v59 = v11[16];
  int v60 = *(unsigned __int8 *)(a1 + v59);
  int v61 = *(unsigned __int8 *)(a2 + v59);
  if (v60 == 2)
  {
    if (v61 != 2) {
      goto LABEL_74;
    }
  }

  else if (v61 == 2 || ((((v61 & 1) == 0) ^ v60) & 1) == 0)
  {
    goto LABEL_74;
  }

  uint64_t v62 = v11[17];
  int v63 = *(unsigned __int8 *)(a1 + v62);
  int v64 = *(unsigned __int8 *)(a2 + v62);
  if (v63 == 2)
  {
    if (v64 == 2) {
      goto LABEL_73;
    }
LABEL_74:
    char v67 = 0;
    return v67 & 1;
  }

  if (v64 == 2 || ((((v64 & 1) == 0) ^ v63) & 1) == 0) {
    goto LABEL_74;
  }
LABEL_73:
  char v65 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v65(v10, a1, v4);
  v65(v8, a2, v4);
  uint64_t v66 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v66);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v5 + 8);
  v68(v8, v4);
  v68(v10, v4);
  return v67 & 1;
}

uint64_t sub_100275A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_12;
    }
  }

  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_12;
  }

  uint64_t v15 = *(int *)(v11 + 24);
  int v16 = *(unsigned __int8 *)(a1 + v15);
  int v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2)
    {
LABEL_12:
      char v20 = 0;
      return v20 & 1;
    }
  }

  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_12;
  }

  int v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  uint64_t v19 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v19);
  int v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_100275BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_InjectAssistanceTime(0LL);
  uint64_t v12 = v11[5];
  int v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_15;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_15;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (void *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  char v20 = (void *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) == 0)
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v22 = v11[7];
    uint64_t v23 = (void *)(a1 + v22);
    char v24 = *(_BYTE *)(a1 + v22 + 8);
    uint64_t v25 = (void *)(a2 + v22);
    int v26 = *(unsigned __int8 *)(a2 + v22 + 8);
    if ((v24 & 1) != 0)
    {
      if (!v26) {
        goto LABEL_15;
      }
    }

    else
    {
      if (*v23 != *v25) {
        LOBYTE(v26) = 1;
      }
      if ((v26 & 1) != 0) {
        goto LABEL_15;
      }
    }

    int v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v10, a1, v4);
    v29(v8, a2, v4);
    uint64_t v30 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v30);
    int v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v8, v4);
    v31(v10, v4);
    return v27 & 1;
  }

  if (v21) {
    goto LABEL_13;
  }
LABEL_15:
  char v27 = 0;
  return v27 & 1;
}

uint64_t sub_100275D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v28[-v8];
  uint64_t v10 = type metadata accessor for Proto_Gpsd_InjectAssistanceFile(0LL);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  char v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v13 >> 60 != 15)
  {
    if (v16 >> 60 != 15)
    {
      sub_10005F2F8(v12, v13);
      sub_10005F2F8(v15, v16);
      sub_1000600A8(v12, v13);
      int v29 = v19;
      sub_10005F30C(v15, v16);
      sub_10005F30C(v12, v13);
      if ((v29 & 1) == 0) {
        goto LABEL_6;
      }
      goto LABEL_9;
    }

uint64_t sub_100275FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for Proto_Gpsd_SetThermalRiskState(0LL);
  uint64_t v12 = *(int *)(v11 + 20);
  unint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) == 0)
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v17 = *(int *)(v11 + 24);
    int v18 = (_DWORD *)(a1 + v17);
    char v19 = *(_BYTE *)(a1 + v17 + 4);
    uint64_t v20 = (_DWORD *)(a2 + v17);
    int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
    if ((v19 & 1) != 0)
    {
      if (!v21) {
        goto LABEL_9;
      }
    }

    else
    {
      if (*v18 != *v20) {
        LOBYTE(v21) = 1;
      }
      if ((v21 & 1) != 0) {
        goto LABEL_9;
      }
    }

    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v23(v10, a1, v4);
    v23(v8, a2, v4);
    uint64_t v24 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v22 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v24);
    uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
    v25(v8, v4);
    v25(v10, v4);
    return v22 & 1;
  }

  if (v16) {
    goto LABEL_7;
  }
LABEL_9:
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_100276128( uint64_t *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, uint64_t (*a6)(void))
{
  uint64_t v12 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  int v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14);
  int v18 = (char *)&v26 - v17;
  if ((sub_10000E250(*a1, *a2, a3, a4, a5) & 1) != 0)
  {
    uint64_t v19 = a6(0LL);
    uint64_t v20 = (char *)a1 + *(int *)(v19 + 20);
    int v21 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v21(v18, v20, v12);
    v21(v16, (char *)a2 + *(int *)(v19 + 20), v12);
    uint64_t v22 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v16, v12, v22);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    v24(v16, v12);
    v24(v18, v12);
  }

  else
  {
    char v23 = 0;
  }

  return v23 & 1;
}

uint64_t sub_100276280(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  char v41 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - v7;
  uint64_t v9 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = sub_100003A0C(&qword_1003673E8);
  __chkstk_darwin(v44);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100003A0C(&qword_100364610);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v39 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v39 - v21;
  char v23 = a1;
  if ((sub_10027477C(*a1, *a2) & 1) == 0) {
    goto LABEL_8;
  }
  int v39 = v11;
  uint64_t v40 = v8;
  uint64_t v24 = type metadata accessor for Proto_Gpsd_RecoveryStatistics(0LL);
  uint64_t v25 = v23;
  sub_10000E6C0((uint64_t)v23 + *(int *)(v24 + 24), (uint64_t)v22, &qword_100364610);
  sub_10000E6C0((uint64_t)a2 + *(int *)(v24 + 24), (uint64_t)v20, &qword_100364610);
  uint64_t v26 = (uint64_t)&v13[*(int *)(v44 + 48)];
  sub_10000E6C0((uint64_t)v22, (uint64_t)v13, &qword_100364610);
  sub_10000E6C0((uint64_t)v20, v26, &qword_100364610);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
  if (v27((uint64_t)v13, 1LL, v46) == 1)
  {
    sub_100015764((uint64_t)v20, &qword_100364610);
    sub_100015764((uint64_t)v22, &qword_100364610);
    if (v27(v26, 1LL, v46) == 1)
    {
      sub_100015764((uint64_t)v13, &qword_100364610);
LABEL_11:
      uint64_t v33 = v42;
      uint64_t v32 = v43;
      int v34 = *(void (**)(char *, char *, uint64_t))(v42 + 16);
      uint64_t v35 = v40;
      v34(v40, (char *)v25 + *(int *)(v24 + 20), v43);
      char v36 = v41;
      v34(v41, (char *)a2 + *(int *)(v24 + 20), v32);
      uint64_t v37 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)(v35, v36, v32, v37);
      char v38 = *(void (**)(char *, uint64_t))(v33 + 8);
      v38(v36, v32);
      v38(v35, v32);
      return v28 & 1;
    }

    goto LABEL_7;
  }

  sub_10000E6C0((uint64_t)v13, (uint64_t)v17, &qword_100364610);
  if (v27(v26, 1LL, v46) == 1)
  {
    sub_100015764((uint64_t)v20, &qword_100364610);
    sub_100015764((uint64_t)v22, &qword_100364610);
    sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
LABEL_7:
    sub_100015764((uint64_t)v13, &qword_1003673E8);
    goto LABEL_8;
  }

  uint64_t v30 = (uint64_t)v39;
  sub_100003E68(v26, (uint64_t)v39, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  char v31 = sub_10027666C((uint64_t)v17, v30);
  sub_100004090(v30, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  sub_100015764((uint64_t)v20, &qword_100364610);
  sub_100015764((uint64_t)v22, &qword_100364610);
  sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
  sub_100015764((uint64_t)v13, &qword_100364610);
  if ((v31 & 1) != 0) {
    goto LABEL_11;
  }
LABEL_8:
  char v28 = 0;
  return v28 & 1;
}

uint64_t sub_10027666C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_23;
    }
  }

  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_23;
  }

  uint64_t v15 = v11[6];
  uint64_t v16 = (_DWORD *)(a1 + v15);
  char v17 = *(_BYTE *)(a1 + v15 + 4);
  uint64_t v18 = (_DWORD *)(a2 + v15);
  int v19 = *(unsigned __int8 *)(a2 + v15 + 4);
  if ((v17 & 1) != 0)
  {
    if (!v19) {
      goto LABEL_23;
    }
  }

  else
  {
    if (*v16 != *v18) {
      LOBYTE(v19) = 1;
    }
    if ((v19 & 1) != 0) {
      goto LABEL_23;
    }
  }

  uint64_t v20 = v11[7];
  int v21 = *(unsigned __int8 *)(a1 + v20);
  int v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 2)
  {
    if (v22 != 2) {
      goto LABEL_23;
    }
  }

  else if (v22 == 2 || ((((v22 & 1) == 0) ^ v21) & 1) == 0)
  {
    goto LABEL_23;
  }

  uint64_t v23 = v11[8];
  int v24 = *(unsigned __int8 *)(a1 + v23);
  int v25 = *(unsigned __int8 *)(a2 + v23);
  if (v24 == 2)
  {
    if (v25 == 2) {
      goto LABEL_22;
    }
LABEL_23:
    char v28 = 0;
    return v28 & 1;
  }

  if (v25 == 2 || ((((v25 & 1) == 0) ^ v24) & 1) == 0) {
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26(v10, a1, v4);
  v26(v8, a2, v4);
  uint64_t v27 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v28 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v27);
  int v29 = *(void (**)(char *, uint64_t))(v5 + 8);
  v29(v8, v4);
  v29(v10, v4);
  return v28 & 1;
}

uint64_t sub_100276860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint(0LL);
  uint64_t v12 = v11[5];
  int v13 = (void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  if (!v14)
  {
    if (v16) {
      goto LABEL_25;
    }
    goto LABEL_10;
  }

  if (!v16) {
    goto LABEL_25;
  }
  BOOL v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (char v18 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)(*v13, v14) & 1) != 0))
  {
LABEL_10:
    uint64_t v19 = v11[6];
    uint64_t v20 = (_DWORD *)(a1 + v19);
    char v21 = *(_BYTE *)(a1 + v19 + 4);
    int v22 = (_DWORD *)(a2 + v19);
    int v23 = *(unsigned __int8 *)(a2 + v19 + 4);
    if ((v21 & 1) != 0)
    {
      if (!v23) {
        goto LABEL_25;
      }
    }

    else
    {
      if (*v20 != *v22) {
        LOBYTE(v23) = 1;
      }
      if ((v23 & 1) != 0) {
        goto LABEL_25;
      }
    }

    uint64_t v24 = v11[7];
    int v25 = (void *)(a1 + v24);
    uint64_t v26 = *(void *)(a1 + v24 + 8);
    uint64_t v27 = (void *)(a2 + v24);
    uint64_t v28 = v27[1];
    if (v26)
    {
      if (v28)
      {
        if (*v25 != *v27 || v26 != v28)
        {
          char v18 = 0;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v25, v26) & 1) == 0) {
            return v18 & 1;
          }
        }

uint64_t sub_100276A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_CntinStatusMessage(0LL) + 20);
  int v12 = *(unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 != 7)
  {
    if (v13 != 7 && v12 == v13) {
      goto LABEL_3;
    }
LABEL_8:
    char v16 = 0;
    return v16 & 1;
  }

  if (v13 != 7) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  uint64_t v15 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v15);
  BOOL v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t sub_100276B80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  int v12 = (char *)&v21 - v11;
  uint64_t v13 = *(int *)(a3(0LL) + 20);
  int v14 = *(unsigned __int8 *)(a1 + v13);
  int v15 = *(unsigned __int8 *)(a2 + v13);
  if (v14 == 2)
  {
    if (v15 != 2)
    {
LABEL_7:
      char v18 = 0;
      return v18 & 1;
    }
  }

  else if (v15 == 2 || ((((v15 & 1) == 0) ^ v14) & 1) == 0)
  {
    goto LABEL_7;
  }

  char v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v12, a1, v6);
  v16(v10, a2, v6);
  uint64_t v17 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v18 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v17);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v10, v6);
  v19(v12, v6);
  return v18 & 1;
}

uint64_t sub_100276CD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  int v12 = (char *)&v34 - v11;
  uint64_t v13 = (int *)a3(0LL);
  uint64_t v14 = v13[5];
  int v15 = (void *)(a1 + v14);
  char v16 = *(_BYTE *)(a1 + v14 + 8);
  uint64_t v17 = (void *)(a2 + v14);
  int v18 = *(unsigned __int8 *)(a2 + v14 + 8);
  if ((v16 & 1) != 0)
  {
    if (!v18) {
      goto LABEL_15;
    }
  }

  else
  {
    if (*v15 != *v17) {
      LOBYTE(v18) = 1;
    }
    if ((v18 & 1) != 0) {
      goto LABEL_15;
    }
  }

  uint64_t v19 = v13[6];
  uint64_t v20 = (double *)(a1 + v19);
  char v21 = *(_BYTE *)(a1 + v19 + 8);
  int v22 = (double *)(a2 + v19);
  int v23 = *(unsigned __int8 *)(a2 + v19 + 8);
  if ((v21 & 1) == 0)
  {
    if (*v20 != *v22) {
      LOBYTE(v23) = 1;
    }
    if ((v23 & 1) != 0) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v24 = v13[7];
    int v25 = (double *)(a1 + v24);
    char v26 = *(_BYTE *)(a1 + v24 + 8);
    uint64_t v27 = (double *)(a2 + v24);
    int v28 = *(unsigned __int8 *)(a2 + v24 + 8);
    if ((v26 & 1) != 0)
    {
      if (!v28) {
        goto LABEL_15;
      }
    }

    else
    {
      if (*v25 != *v27) {
        LOBYTE(v28) = 1;
      }
      if ((v28 & 1) != 0) {
        goto LABEL_15;
      }
    }

    uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v31(v12, a1, v6);
    v31(v10, a2, v6);
    uint64_t v32 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v29 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v32);
    uint64_t v33 = *(void (**)(char *, uint64_t))(v7 + 8);
    v33(v10, v6);
    v33(v12, v6);
    return v29 & 1;
  }

  if (v23) {
    goto LABEL_13;
  }
LABEL_15:
  char v29 = 0;
  return v29 & 1;
}

uint64_t sub_100276E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_AskBasebandReset(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (double *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  int v15 = (double *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_22;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_22;
    }
  }

  uint64_t v17 = v11[6];
  int v18 = (void *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_22;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_22;
    }
  }

  uint64_t v22 = v11[7];
  int v23 = (void *)(a1 + v22);
  uint64_t v24 = *(void *)(a1 + v22 + 8);
  int v25 = (void *)(a2 + v22);
  uint64_t v26 = v25[1];
  if (!v24)
  {
    if (!v26)
    {
LABEL_24:
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v30(v10, a1, v4);
      v30(v8, a2, v4);
      uint64_t v31 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v31);
      uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
      v32(v8, v4);
      v32(v10, v4);
      return v28 & 1;
    }

uint64_t sub_100277050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_LtlInfoRequest(0LL) + 20);
  int v12 = *(unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 != 5)
  {
    if (v13 != 5 && v12 == v13) {
      goto LABEL_3;
    }
LABEL_8:
    char v16 = 0;
    return v16 & 1;
  }

  if (v13 != 5) {
    goto LABEL_8;
  }
LABEL_3:
  char v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  v14(v8, a2, v4);
  uint64_t v15 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v15);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t sub_100277190(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  int v12 = (char *)&v23 - v11;
  uint64_t v13 = *(int *)(a3(0LL) + 20);
  char v14 = (void *)(a1 + v13);
  char v15 = *(_BYTE *)(a1 + v13 + 8);
  char v16 = (void *)(a2 + v13);
  int v17 = *(unsigned __int8 *)(a2 + v13 + 8);
  if ((v15 & 1) == 0)
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if ((v17 & 1) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    char v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v19(v12, a1, v6);
    v19(v10, a2, v6);
    uint64_t v20 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v18 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v20);
    int v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v21(v10, v6);
    v21(v12, v6);
    return v18 & 1;
  }

  if (v17) {
    goto LABEL_7;
  }
LABEL_3:
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_1002772DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_SetPvtmReport(0LL);
  uint64_t v12 = v11[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_32;
    }
  }

  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_32;
  }

  uint64_t v15 = v11[6];
  int v16 = *(unsigned __int8 *)(a1 + v15);
  int v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2) {
      goto LABEL_32;
    }
  }

  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_32;
  }

  uint64_t v18 = v11[7];
  int v19 = *(unsigned __int8 *)(a1 + v18);
  int v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 != 2) {
      goto LABEL_32;
    }
  }

  else if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
  {
    goto LABEL_32;
  }

  uint64_t v21 = v11[8];
  int v22 = *(unsigned __int8 *)(a1 + v21);
  int v23 = *(unsigned __int8 *)(a2 + v21);
  if (v22 == 2)
  {
    if (v23 != 2) {
      goto LABEL_32;
    }
  }

  else if (v23 == 2 || ((((v23 & 1) == 0) ^ v22) & 1) == 0)
  {
    goto LABEL_32;
  }

  uint64_t v24 = v11[9];
  int v25 = *(unsigned __int8 *)(a1 + v24);
  int v26 = *(unsigned __int8 *)(a2 + v24);
  if (v25 == 2)
  {
    if (v26 != 2) {
      goto LABEL_32;
    }
  }

  else if (v26 == 2 || ((((v26 & 1) == 0) ^ v25) & 1) == 0)
  {
    goto LABEL_32;
  }

  uint64_t v27 = v11[10];
  int v28 = *(unsigned __int8 *)(a1 + v27);
  int v29 = *(unsigned __int8 *)(a2 + v27);
  if (v28 == 2)
  {
    if (v29 == 2) {
      goto LABEL_31;
    }
LABEL_32:
    char v32 = 0;
    return v32 & 1;
  }

  if (v29 == 2 || ((((v29 & 1) == 0) ^ v28) & 1) == 0) {
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v30(v10, a1, v4);
  v30(v8, a2, v4);
  uint64_t v31 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v32 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v31);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v5 + 8);
  v33(v8, v4);
  v33(v10, v4);
  return v32 & 1;
}

uint64_t sub_100277544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v23[-v9];
  uint64_t v11 = *(int *)(type metadata accessor for Proto_Gpsd_InjectRtiFile(0LL) + 20);
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  int v14 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15) {
      goto LABEL_7;
    }
    goto LABEL_5;
  }

  if (v16 >> 60 == 15)
  {
LABEL_5:
    sub_10005F2F8(v12, v13);
    sub_10005F2F8(v15, v16);
    sub_10005F30C(v12, v13);
    sub_10005F30C(v15, v16);
LABEL_8:
    char v20 = 0;
    return v20 & 1;
  }

  sub_10005F2F8(v12, v13);
  sub_10005F2F8(v15, v16);
  sub_1000600A8(v12, v13);
  int v24 = v17;
  sub_10005F30C(v15, v16);
  sub_10005F30C(v12, v13);
  if ((v24 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v18 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v18(v10, a1, v4);
  v18(v8, a2, v4);
  uint64_t v19 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v19);
  uint64_t v21 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v21(v8, v4);
  v21(v10, v4);
  return v20 & 1;
}

uint64_t sub_100277728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t started = (int *)type metadata accessor for Proto_Gpsd_StartContext(0LL);
  uint64_t v12 = started[5];
  int v13 = *(unsigned __int8 *)(a1 + v12);
  int v14 = *(unsigned __int8 *)(a2 + v12);
  if (v13 == 2)
  {
    if (v14 != 2) {
      goto LABEL_17;
    }
  }

  else if (v14 == 2 || ((((v14 & 1) == 0) ^ v13) & 1) == 0)
  {
    goto LABEL_17;
  }

  uint64_t v15 = started[6];
  int v16 = *(unsigned __int8 *)(a1 + v15);
  int v17 = *(unsigned __int8 *)(a2 + v15);
  if (v16 == 2)
  {
    if (v17 != 2) {
      goto LABEL_17;
    }
  }

  else if (v17 == 2 || ((((v17 & 1) == 0) ^ v16) & 1) == 0)
  {
    goto LABEL_17;
  }

  uint64_t v18 = started[7];
  int v19 = *(unsigned __int8 *)(a1 + v18);
  int v20 = *(unsigned __int8 *)(a2 + v18);
  if (v19 == 2)
  {
    if (v20 == 2) {
      goto LABEL_16;
    }
LABEL_17:
    char v23 = 0;
    return v23 & 1;
  }

  if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0) {
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v21(v10, a1, v4);
  v21(v8, a2, v4);
  uint64_t v22 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v22);
  int v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v8, v4);
  v24(v10, v4);
  return v23 & 1;
}

uint64_t sub_1002778E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = *(int *)(a3(0LL) + 20);
  int v14 = (void *)(a1 + v13);
  uint64_t v15 = *(void *)(a1 + v13 + 8);
  int v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  if (!v15)
  {
    if (!v17)
    {
LABEL_11:
      int v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v20(v12, a1, v6);
      v20(v10, a2, v6);
      uint64_t v21 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v6, v21);
      uint64_t v22 = *(void (**)(char *, uint64_t))(v7 + 8);
      v22(v10, v6);
      v22(v12, v6);
      return v19 & 1;
    }

LABEL_10:
    char v19 = 0;
    return v19 & 1;
  }

  if (!v17) {
    goto LABEL_10;
  }
  if (*v14 == *v16 && v15 == v17) {
    goto LABEL_11;
  }
  char v19 = 0;
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15) & 1) != 0) {
    goto LABEL_11;
  }
  return v19 & 1;
}

uint64_t sub_100277A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_Exception(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (_DWORD *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 4);
  uint64_t v15 = (_DWORD *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_15;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_15;
    }
  }

  uint64_t v17 = v11[6];
  uint64_t v18 = (_DWORD *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 4);
  int v20 = (_DWORD *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) == 0)
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_15;
    }
LABEL_13:
    uint64_t v22 = v11[7];
    char v23 = (_DWORD *)(a1 + v22);
    char v24 = *(_BYTE *)(a1 + v22 + 4);
    int v25 = (_DWORD *)(a2 + v22);
    int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
    if ((v24 & 1) != 0)
    {
      if (!v26) {
        goto LABEL_15;
      }
    }

    else
    {
      if (*v23 != *v25) {
        LOBYTE(v26) = 1;
      }
      if ((v26 & 1) != 0) {
        goto LABEL_15;
      }
    }

    int v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v10, a1, v4);
    v29(v8, a2, v4);
    uint64_t v30 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v27 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v30);
    uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v8, v4);
    v31(v10, v4);
    return v27 & 1;
  }

  if (v21) {
    goto LABEL_13;
  }
LABEL_15:
  char v27 = 0;
  return v27 & 1;
}

uint64_t sub_100277BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v29[-v9];
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = *(char *)(a1 + v12);
  uint64_t v14 = *(char *)(a2 + v12);
  if (v13 == 61)
  {
    if ((_DWORD)v14 != 61) {
      goto LABEL_18;
    }
  }

  else if ((_DWORD)v14 == 61 || qword_1002DF128[v13] != qword_1002DF128[v14])
  {
    goto LABEL_18;
  }

  uint64_t v15 = v11[6];
  int v16 = (void *)(a1 + v15);
  char v17 = *(_BYTE *)(a1 + v15 + 8);
  uint64_t v18 = (void *)(a2 + v15);
  int v19 = *(unsigned __int8 *)(a2 + v15 + 8);
  if ((v17 & 1) != 0)
  {
    if (!v19) {
      goto LABEL_18;
    }
  }

  else
  {
    if (*v16 != *v18) {
      LOBYTE(v19) = 1;
    }
    if ((v19 & 1) != 0) {
      goto LABEL_18;
    }
  }

  uint64_t v20 = v11[7];
  int v21 = *(unsigned __int8 *)(a1 + v20);
  int v22 = *(unsigned __int8 *)(a2 + v20);
  if (v21 == 10)
  {
    if (v22 == 10) {
      goto LABEL_17;
    }
LABEL_18:
    char v26 = 0;
    return v26 & 1;
  }

  char v31 = v21;
  if (v22 == 10) {
    goto LABEL_18;
  }
  char v30 = v22;
  unint64_t v23 = sub_100015654();
  if ((dispatch thunk of static Equatable.== infix(_:_:)(&v31, &v30, &type metadata for Proto_Gnss_Result, v23) & 1) == 0) {
    goto LABEL_18;
  }
LABEL_17:
  char v24 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v24(v10, a1, v4);
  v24(v8, a2, v4);
  uint64_t v25 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v25);
  char v27 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v27(v8, v4);
  v27(v10, v4);
  return v26 & 1;
}

uint64_t sub_100277DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v112 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v98 = *(void *)(v112 - 8);
  uint64_t v4 = __chkstk_darwin(v112);
  uint64_t v97 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v96 = (char *)&v94 - v6;
  uint64_t v7 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t v101 = *(void *)(v7 - 8);
  uint64_t v102 = v7;
  __chkstk_darwin(v7);
  uint64_t v95 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v100 = sub_100003A0C(&qword_100351720);
  __chkstk_darwin(v100);
  uint64_t v103 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_100003A0C(&qword_100350F30);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v111 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v109 = (char *)&v94 - v14;
  __chkstk_darwin(v13);
  uint64_t v110 = (char *)&v94 - v15;
  uint64_t v16 = type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v106 = *(void *)(v16 - 8);
  uint64_t v107 = v16;
  __chkstk_darwin(v16);
  uint64_t v99 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = sub_100003A0C(&qword_100351728);
  __chkstk_darwin(v105);
  uint64_t v108 = (uint64_t)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_100003A0C(&qword_100350F28);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v104 = (uint64_t)&v94 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v113 = (uint64_t)&v94 - v23;
  __chkstk_darwin(v22);
  uint64_t v114 = (uint64_t)&v94 - v24;
  uint64_t v25 = type metadata accessor for Proto_Gpsd_Request(0LL);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  int v28 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v29 = sub_100003A0C(&qword_100351780);
  __chkstk_darwin(v29);
  char v31 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v32 = sub_100003A0C(&qword_100350F20);
  uint64_t v33 = __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = __chkstk_darwin(v33);
  char v38 = (char *)&v94 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v94 - v39;
  uint64_t v41 = type metadata accessor for Proto_Gpsd_LogEntry(0LL);
  uint64_t v42 = v41;
  uint64_t v43 = *(int *)(v41 + 20);
  uint64_t v115 = a1;
  uint64_t v116 = a2;
  uint64_t v44 = (void *)(a1 + v43);
  char v45 = *(_BYTE *)(a1 + v43 + 8);
  uint64_t v46 = (void *)(a2 + v43);
  int v47 = *(unsigned __int8 *)(a2 + v43 + 8);
  if ((v45 & 1) != 0)
  {
    if (!v47) {
      goto LABEL_29;
    }
  }

  else
  {
    if (*v44 != *v46) {
      LOBYTE(v47) = 1;
    }
    if ((v47 & 1) != 0) {
      goto LABEL_29;
    }
  }

  uint64_t v48 = *(int *)(v41 + 24);
  uint64_t v49 = v115;
  uint64_t v50 = (void *)(v115 + v48);
  uint64_t v51 = *(void *)(v115 + v48 + 8);
  int v52 = (void *)(v116 + v48);
  uint64_t v53 = v52[1];
  if (!v51)
  {
    if (v53) {
      goto LABEL_29;
    }
    goto LABEL_14;
  }

  if (!v53) {
    goto LABEL_29;
  }
  if (*v50 == *v52 && v51 == v53
    || (v54 = v41, v55 = _stringCompareWithSmolCheck(_:_:expecting:)(*v50, v51), uint64_t v42 = v54, v56 = 0, (v55 & 1) != 0))
  {
LABEL_14:
    uint64_t v57 = v49 + *(int *)(v42 + 28);
    uint64_t v58 = v42;
    sub_10000E6C0(v57, (uint64_t)v40, &qword_100350F20);
    uint64_t v94 = v58;
    sub_10000E6C0(v116 + *(int *)(v58 + 28), (uint64_t)v38, &qword_100350F20);
    uint64_t v59 = (uint64_t)&v31[*(int *)(v29 + 48)];
    sub_10000E6C0((uint64_t)v40, (uint64_t)v31, &qword_100350F20);
    sub_10000E6C0((uint64_t)v38, v59, &qword_100350F20);
    int v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v60((uint64_t)v31, 1LL, v25) == 1)
    {
      sub_100015764((uint64_t)v38, &qword_100350F20);
      sub_100015764((uint64_t)v40, &qword_100350F20);
      if (v60(v59, 1LL, v25) == 1)
      {
        sub_100015764((uint64_t)v31, &qword_100350F20);
        goto LABEL_22;
      }
    }

    else
    {
      sub_10000E6C0((uint64_t)v31, (uint64_t)v35, &qword_100350F20);
      if (v60(v59, 1LL, v25) != 1)
      {
        sub_100003E68(v59, (uint64_t)v28, type metadata accessor for Proto_Gpsd_Request);
        char v63 = sub_100065AC0( (uint64_t)v35,  (uint64_t)v28,  type metadata accessor for Proto_Gpsd_Request,  (uint64_t (*)(uint64_t, uint64_t))sub_100254280);
        sub_100004090((uint64_t)v28, type metadata accessor for Proto_Gpsd_Request);
        sub_100015764((uint64_t)v38, &qword_100350F20);
        sub_100015764((uint64_t)v40, &qword_100350F20);
        sub_100004090((uint64_t)v35, type metadata accessor for Proto_Gpsd_Request);
        sub_100015764((uint64_t)v31, &qword_100350F20);
        if ((v63 & 1) == 0) {
          goto LABEL_29;
        }
LABEL_22:
        uint64_t v64 = v94;
        uint64_t v66 = v114;
        uint64_t v65 = v115;
        sub_10000E6C0(v115 + *(int *)(v94 + 32), v114, &qword_100350F28);
        uint64_t v67 = v113;
        sub_10000E6C0(v116 + *(int *)(v64 + 32), v113, &qword_100350F28);
        uint64_t v68 = v108;
        uint64_t v69 = v108 + *(int *)(v105 + 48);
        sub_10000E6C0(v66, v108, &qword_100350F28);
        sub_10000E6C0(v67, v69, &qword_100350F28);
        uint64_t v70 = v107;
        uint64_t v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
        if (v71(v68, 1LL, v107) == 1)
        {
          sub_100015764(v67, &qword_100350F28);
          sub_100015764(v66, &qword_100350F28);
          int v72 = v71(v69, 1LL, v70);
          uint64_t v74 = (uint64_t)v111;
          uint64_t v73 = v112;
          uint64_t v76 = (uint64_t)v109;
          uint64_t v75 = (uint64_t)v110;
          if (v72 == 1)
          {
            sub_100015764(v68, &qword_100350F28);
LABEL_32:
            uint64_t v82 = v94;
            sub_10000E6C0(v65 + *(int *)(v94 + 36), v75, &qword_100350F30);
            sub_10000E6C0(v116 + *(int *)(v82 + 36), v76, &qword_100350F30);
            char v31 = v103;
            uint64_t v83 = (uint64_t)&v103[*(int *)(v100 + 48)];
            sub_10000E6C0(v75, (uint64_t)v103, &qword_100350F30);
            sub_10000E6C0(v76, v83, &qword_100350F30);
            uint64_t v84 = v102;
            uint64_t v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
            if (v85((uint64_t)v31, 1LL, v102) == 1)
            {
              sub_100015764(v76, &qword_100350F30);
              sub_100015764(v75, &qword_100350F30);
              if (v85(v83, 1LL, v84) == 1)
              {
                sub_100015764((uint64_t)v31, &qword_100350F30);
LABEL_39:
                uint64_t v88 = v98;
                uint64_t v89 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
                uint64_t v90 = v96;
                v89(v96, v115, v73);
                char v91 = v97;
                v89(v97, v116, v73);
                uint64_t v92 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
                char v56 = dispatch thunk of static Equatable.== infix(_:_:)(v90, v91, v73, v92);
                uint64_t v93 = *(void (**)(char *, uint64_t))(v88 + 8);
                v93(v91, v73);
                v93(v90, v73);
                return v56 & 1;
              }

              goto LABEL_37;
            }

            sub_10000E6C0((uint64_t)v31, v74, &qword_100350F30);
            if (v85(v83, 1LL, v84) == 1)
            {
              sub_100015764(v76, &qword_100350F30);
              sub_100015764(v75, &qword_100350F30);
              sub_100004090(v74, type metadata accessor for Proto_Gpsd_Indication);
LABEL_37:
              int v61 = &qword_100351720;
              goto LABEL_20;
            }

            uint64_t v86 = v95;
            sub_100003E68(v83, v95, type metadata accessor for Proto_Gpsd_Indication);
            char v87 = sub_100065AC0( v74,  v86,  type metadata accessor for Proto_Gpsd_Indication,  (uint64_t (*)(uint64_t, uint64_t))sub_100261448);
            sub_100004090(v86, type metadata accessor for Proto_Gpsd_Indication);
            sub_100015764(v76, &qword_100350F30);
            sub_100015764(v75, &qword_100350F30);
            sub_100004090(v74, type metadata accessor for Proto_Gpsd_Indication);
            sub_100015764((uint64_t)v31, &qword_100350F30);
            if ((v87 & 1) != 0) {
              goto LABEL_39;
            }
LABEL_29:
            char v56 = 0;
            return v56 & 1;
          }
        }

        else
        {
          uint64_t v77 = v104;
          sub_10000E6C0(v68, v104, &qword_100350F28);
          int v78 = v71(v69, 1LL, v70);
          uint64_t v74 = (uint64_t)v111;
          uint64_t v73 = v112;
          uint64_t v76 = (uint64_t)v109;
          uint64_t v75 = (uint64_t)v110;
          if (v78 != 1)
          {
            uint64_t v80 = v99;
            sub_100003E68(v69, v99, type metadata accessor for Proto_Gpsd_Response);
            char v81 = sub_100277BFC(v77, v80);
            sub_100004090(v80, type metadata accessor for Proto_Gpsd_Response);
            sub_100015764(v113, &qword_100350F28);
            sub_100015764(v114, &qword_100350F28);
            sub_100004090(v77, type metadata accessor for Proto_Gpsd_Response);
            sub_100015764(v68, &qword_100350F28);
            if ((v81 & 1) == 0) {
              goto LABEL_29;
            }
            goto LABEL_32;
          }

          sub_100015764(v113, &qword_100350F28);
          sub_100015764(v114, &qword_100350F28);
          sub_100004090(v77, type metadata accessor for Proto_Gpsd_Response);
        }

        int v61 = &qword_100351728;
        uint64_t v62 = v68;
        goto LABEL_28;
      }

      sub_100015764((uint64_t)v38, &qword_100350F20);
      sub_100015764((uint64_t)v40, &qword_100350F20);
      sub_100004090((uint64_t)v35, type metadata accessor for Proto_Gpsd_Request);
    }

    int v61 = &qword_100351780;
LABEL_20:
    uint64_t v62 = (uint64_t)v31;
LABEL_28:
    sub_100015764(v62, v61);
    goto LABEL_29;
  }

  return v56 & 1;
}

uint64_t sub_1002787DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5);
  uint64_t v58 = (char *)&v58 - v7;
  uint64_t v8 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v62 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_100363ED0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100003A0C(&qword_100363120);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v58 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v23 = type metadata accessor for Proto_Gpsd_InjectAssistancePosition(0LL);
  uint64_t v24 = *(int *)(v23 + 20);
  uint64_t v63 = a1;
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (int *)v23;
  sub_10000E6C0(v25, (uint64_t)v22, &qword_100363120);
  uint64_t v27 = v26[5];
  uint64_t v64 = a2;
  sub_10000E6C0(a2 + v27, (uint64_t)v20, &qword_100363120);
  uint64_t v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_10000E6C0((uint64_t)v22, (uint64_t)v13, &qword_100363120);
  sub_10000E6C0((uint64_t)v20, v28, &qword_100363120);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1LL, v8) != 1)
  {
    sub_10000E6C0((uint64_t)v13, (uint64_t)v17, &qword_100363120);
    if (v29(v28, 1LL, v8) != 1)
    {
      uint64_t v32 = v28;
      uint64_t v33 = v62;
      sub_100003E68(v32, v62, type metadata accessor for Proto_Gnss_Position);
      uint64_t v34 = sub_10000FD98(&qword_100363380, type metadata accessor for Proto_Gnss_Position, (uint64_t)&unk_1002D8148);
      char v35 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v33, v8, v34);
      sub_100004090(v33, type metadata accessor for Proto_Gnss_Position);
      sub_100015764((uint64_t)v20, &qword_100363120);
      sub_100015764((uint64_t)v22, &qword_100363120);
      sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gnss_Position);
      sub_100015764((uint64_t)v13, &qword_100363120);
      if ((v35 & 1) == 0) {
        goto LABEL_7;
      }
      goto LABEL_10;
    }

    sub_100015764((uint64_t)v20, &qword_100363120);
    sub_100015764((uint64_t)v22, &qword_100363120);
    sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gnss_Position);
LABEL_6:
    sub_100015764((uint64_t)v13, &qword_100363ED0);
    goto LABEL_7;
  }

  sub_100015764((uint64_t)v20, &qword_100363120);
  sub_100015764((uint64_t)v22, &qword_100363120);
  if (v29(v28, 1LL, v8) != 1) {
    goto LABEL_6;
  }
  sub_100015764((uint64_t)v13, &qword_100363120);
LABEL_10:
  uint64_t v36 = v26[6];
  uint64_t v37 = v63;
  uint64_t v38 = v64;
  int v39 = *(unsigned __int8 *)(v63 + v36);
  int v40 = *(unsigned __int8 *)(v64 + v36);
  if (v39 == 4)
  {
    if (v40 != 4) {
      goto LABEL_7;
    }
  }

  else
  {
    char v66 = v39;
    if (v40 == 4) {
      goto LABEL_7;
    }
    char v65 = v40;
    unint64_t v41 = sub_10021D270();
    if ((dispatch thunk of static Equatable.== infix(_:_:)( &v66,  &v65,  &type metadata for Proto_Gnss_PositionAssistType,  v41) & 1) == 0) {
      goto LABEL_7;
    }
  }

  uint64_t v42 = v26[7];
  int v43 = *(unsigned __int8 *)(v37 + v42);
  int v44 = *(unsigned __int8 *)(v38 + v42);
  if (v43 == 2)
  {
    if (v44 != 2) {
      goto LABEL_7;
    }
  }

  else if (v44 == 2 || ((((v44 & 1) == 0) ^ v43) & 1) == 0)
  {
    goto LABEL_7;
  }

  uint64_t v45 = v26[8];
  uint64_t v46 = (void *)(v37 + v45);
  char v47 = *(_BYTE *)(v37 + v45 + 8);
  uint64_t v48 = (void *)(v38 + v45);
  int v49 = *(unsigned __int8 *)(v38 + v45 + 8);
  if ((v47 & 1) != 0)
  {
    if (v49)
    {
LABEL_26:
      uint64_t v50 = v60;
      uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
      int v52 = v58;
      uint64_t v53 = v37;
      uint64_t v54 = v61;
      v51(v58, v53, v61);
      char v55 = v59;
      v51(v59, v38, v54);
      uint64_t v56 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v55, v54, v56);
      uint64_t v57 = *(void (**)(char *, uint64_t))(v50 + 8);
      v57(v55, v54);
      v57(v52, v54);
      return v30 & 1;
    }
  }

  else
  {
    if (*v46 != *v48) {
      LOBYTE(v49) = 1;
    }
    if ((v49 & 1) == 0) {
      goto LABEL_26;
    }
  }

uint64_t sub_100278C8C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams(0LL);
  uint64_t v12 = v11;
  uint64_t v13 = *(int *)(v11 + 28);
  uint64_t v14 = (_DWORD *)((char *)a1 + v13);
  char v15 = *((_BYTE *)a1 + v13 + 4);
  uint64_t v16 = (_DWORD *)((char *)a2 + v13);
  int v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17) {
      goto LABEL_16;
    }
  }

  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if ((v17 & 1) != 0) {
      goto LABEL_16;
    }
  }

  uint64_t v18 = *(int *)(v11 + 32);
  uint64_t v19 = (_DWORD *)((char *)a1 + v18);
  char v20 = *((_BYTE *)a1 + v18 + 4);
  uint64_t v21 = (_DWORD *)((char *)a2 + v18);
  int v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
    {
LABEL_16:
      char v26 = 0;
      return v26 & 1;
    }
  }

  else
  {
    if (*v19 != *v21) {
      LOBYTE(v22) = 1;
    }
    if ((v22 & 1) != 0) {
      goto LABEL_16;
    }
  }

  if (!sub_1001C1E44(*a1, *a2) || !sub_1001C1E44(a1[1], a2[1])) {
    goto LABEL_16;
  }
  uint64_t v23 = (char *)a1 + *(int *)(v12 + 24);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v24(v10, v23, v4);
  v24(v8, (char *)a2 + *(int *)(v12 + 24), v4);
  uint64_t v25 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v8, v4);
  v27(v10, v4);
  return v26 & 1;
}

uint64_t sub_100278E38(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - v9;
  if (!sub_1001C1E44(*a1, *a2)) {
    goto LABEL_10;
  }
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData(0LL);
  uint64_t v12 = v11;
  uint64_t v13 = v11[6];
  uint64_t v14 = (_DWORD *)((char *)a1 + v13);
  char v15 = *((_BYTE *)a1 + v13 + 4);
  uint64_t v16 = (_DWORD *)((char *)a2 + v13);
  int v17 = *((unsigned __int8 *)a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17) {
      goto LABEL_10;
    }
  }

  else
  {
    if (*v14 != *v16) {
      LOBYTE(v17) = 1;
    }
    if ((v17 & 1) != 0) {
      goto LABEL_10;
    }
  }

  uint64_t v18 = v11[7];
  uint64_t v19 = (_DWORD *)((char *)a1 + v18);
  char v20 = *((_BYTE *)a1 + v18 + 4);
  uint64_t v21 = (_DWORD *)((char *)a2 + v18);
  int v22 = *((unsigned __int8 *)a2 + v18 + 4);
  if ((v20 & 1) == 0)
  {
    if (*v19 != *v21) {
      LOBYTE(v22) = 1;
    }
    if ((v22 & 1) != 0) {
      goto LABEL_10;
    }
LABEL_15:
    uint64_t v25 = (char *)a1 + v11[5];
    char v26 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v26(v10, v25, v4);
    v26(v8, (char *)a2 + v12[5], v4);
    uint64_t v27 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v27);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v5 + 8);
    v28(v8, v4);
    v28(v10, v4);
    return v23 & 1;
  }

  if (v22) {
    goto LABEL_15;
  }
LABEL_10:
  char v23 = 0;
  return v23 & 1;
}

uint64_t sub_100278FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v70 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (_DWORD *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 4);
  char v15 = (_DWORD *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v17 = v11[6];
  uint64_t v18 = (_DWORD *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 4);
  char v20 = (_DWORD *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v22 = v11[7];
  char v23 = (_DWORD *)(a1 + v22);
  char v24 = *(_BYTE *)(a1 + v22 + 4);
  uint64_t v25 = (_DWORD *)(a2 + v22);
  int v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v23 != *v25) {
      LOBYTE(v26) = 1;
    }
    if ((v26 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v27 = v11[8];
  uint64_t v28 = (_DWORD *)(a1 + v27);
  char v29 = *(_BYTE *)(a1 + v27 + 4);
  char v30 = (_DWORD *)(a2 + v27);
  int v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v28 != *v30) {
      LOBYTE(v31) = 1;
    }
    if ((v31 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v32 = v11[9];
  uint64_t v33 = (_DWORD *)(a1 + v32);
  char v34 = *(_BYTE *)(a1 + v32 + 4);
  char v35 = (_DWORD *)(a2 + v32);
  int v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) != 0)
  {
    if (!v36) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v33 != *v35) {
      LOBYTE(v36) = 1;
    }
    if ((v36 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v37 = v11[10];
  uint64_t v38 = (_DWORD *)(a1 + v37);
  char v39 = *(_BYTE *)(a1 + v37 + 4);
  int v40 = (_DWORD *)(a2 + v37);
  int v41 = *(unsigned __int8 *)(a2 + v37 + 4);
  if ((v39 & 1) != 0)
  {
    if (!v41) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v38 != *v40) {
      LOBYTE(v41) = 1;
    }
    if ((v41 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v42 = v11[11];
  int v43 = *(unsigned __int8 *)(a1 + v42);
  int v44 = *(unsigned __int8 *)(a2 + v42);
  if (v43 == 2)
  {
    if (v44 != 2) {
      goto LABEL_62;
    }
  }

  else if (v44 == 2 || ((((v44 & 1) == 0) ^ v43) & 1) == 0)
  {
    goto LABEL_62;
  }

  uint64_t v45 = v11[12];
  uint64_t v46 = (_DWORD *)(a1 + v45);
  char v47 = *(_BYTE *)(a1 + v45 + 4);
  uint64_t v48 = (_DWORD *)(a2 + v45);
  int v49 = *(unsigned __int8 *)(a2 + v45 + 4);
  if ((v47 & 1) != 0)
  {
    if (!v49) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v46 != *v48) {
      LOBYTE(v49) = 1;
    }
    if ((v49 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v50 = v11[13];
  uint64_t v51 = (_DWORD *)(a1 + v50);
  char v52 = *(_BYTE *)(a1 + v50 + 4);
  uint64_t v53 = (_DWORD *)(a2 + v50);
  int v54 = *(unsigned __int8 *)(a2 + v50 + 4);
  if ((v52 & 1) != 0)
  {
    if (!v54) {
      goto LABEL_62;
    }
  }

  else
  {
    if (*v51 != *v53) {
      LOBYTE(v54) = 1;
    }
    if ((v54 & 1) != 0) {
      goto LABEL_62;
    }
  }

  uint64_t v55 = v11[14];
  uint64_t v56 = (_DWORD *)(a1 + v55);
  char v57 = *(_BYTE *)(a1 + v55 + 4);
  uint64_t v58 = (_DWORD *)(a2 + v55);
  int v59 = *(unsigned __int8 *)(a2 + v55 + 4);
  if ((v57 & 1) == 0)
  {
    if (*v56 != *v58) {
      LOBYTE(v59) = 1;
    }
    if ((v59 & 1) != 0) {
      goto LABEL_62;
    }
LABEL_60:
    uint64_t v60 = v11[15];
    uint64_t v61 = (_DWORD *)(a1 + v60);
    char v62 = *(_BYTE *)(a1 + v60 + 4);
    uint64_t v63 = (_DWORD *)(a2 + v60);
    int v64 = *(unsigned __int8 *)(a2 + v60 + 4);
    if ((v62 & 1) != 0)
    {
      if (!v64) {
        goto LABEL_62;
      }
    }

    else
    {
      if (*v61 != *v63) {
        LOBYTE(v64) = 1;
      }
      if ((v64 & 1) != 0) {
        goto LABEL_62;
      }
    }

    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v67(v10, a1, v4);
    v67(v8, a2, v4);
    uint64_t v68 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
    char v65 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v68);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v5 + 8);
    v69(v8, v4);
    v69(v10, v4);
    return v65 & 1;
  }

  if (v59) {
    goto LABEL_60;
  }
LABEL_62:
  char v65 = 0;
  return v65 & 1;
}

uint64_t sub_100279324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v36 - v9;
  uint64_t v11 = (int *)type metadata accessor for Proto_Gpsd_Status(0LL);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(a1 + v12);
  char v14 = *(_BYTE *)(a1 + v12 + 8);
  char v15 = (void *)(a2 + v12);
  int v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16) {
      goto LABEL_29;
    }
  }

  else
  {
    if (*v13 != *v15) {
      LOBYTE(v16) = 1;
    }
    if ((v16 & 1) != 0) {
      goto LABEL_29;
    }
  }

  uint64_t v17 = v11[6];
  uint64_t v18 = (void *)(a1 + v17);
  char v19 = *(_BYTE *)(a1 + v17 + 8);
  char v20 = (void *)(a2 + v17);
  int v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21) {
      goto LABEL_29;
    }
  }

  else
  {
    if (*v18 != *v20) {
      LOBYTE(v21) = 1;
    }
    if ((v21 & 1) != 0) {
      goto LABEL_29;
    }
  }

  uint64_t v22 = v11[7];
  int v23 = *(unsigned __int8 *)(a1 + v22);
  int v24 = *(unsigned __int8 *)(a2 + v22);
  if (v23 == 2)
  {
    if (v24 != 2) {
      goto LABEL_29;
    }
  }

  else if (v24 == 2 || ((((v24 & 1) == 0) ^ v23) & 1) == 0)
  {
    goto LABEL_29;
  }

  uint64_t v25 = v11[8];
  int v26 = *(unsigned __int8 *)(a1 + v25);
  int v27 = *(unsigned __int8 *)(a2 + v25);
  if (v26 == 2)
  {
    if (v27 != 2) {
      goto LABEL_29;
    }
  }

  else if (v27 == 2 || ((((v27 & 1) == 0) ^ v26) & 1) == 0)
  {
    goto LABEL_29;
  }

  uint64_t v28 = v11[9];
  int v29 = *(unsigned __int8 *)(a1 + v28);
  int v30 = *(unsigned __int8 *)(a2 + v28);
  if (v29 == 2)
  {
    if (v30 == 2) {
      goto LABEL_28;
    }
LABEL_29:
    char v33 = 0;
    return v33 & 1;
  }

  if (v30 == 2 || ((((v30 & 1) == 0) ^ v29) & 1) == 0) {
    goto LABEL_29;
  }
LABEL_28:
  int v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v31(v10, a1, v4);
  v31(v8, a2, v4);
  uint64_t v32 = sub_10000FD98( &qword_1003516F0,  (uint64_t (*)(uint64_t))&type metadata accessor for UnknownStorage,  (uint64_t)&protocol conformance descriptor for UnknownStorage);
  char v33 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v8, v4, v32);
  char v34 = *(void (**)(char *, uint64_t))(v5 + 8);
  v34(v8, v4);
  v34(v10, v4);
  return v33 & 1;
}

unint64_t sub_100279550()
{
  unint64_t result = qword_1003647A0;
  if (!qword_1003647A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA220, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&qword_1003647A0);
  }

  return result;
}

unint64_t sub_100279598()
{
  unint64_t result = qword_1003647A8;
  if (!qword_1003647A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA248, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&qword_1003647A8);
  }

  return result;
}

unint64_t sub_1002795E0()
{
  unint64_t result = qword_1003647B0;
  if (!qword_1003647B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA2D0, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&qword_1003647B0);
  }

  return result;
}

uint64_t sub_100279624()
{
  return sub_100010014(&qword_1003647B8, &qword_1003647C0);
}

unint64_t sub_10027964C()
{
  unint64_t result = qword_1003647C8;
  if (!qword_1003647C8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA340, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&qword_1003647C8);
  }

  return result;
}

unint64_t sub_100279694()
{
  unint64_t result = qword_1003647D0;
  if (!qword_1003647D0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA368, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&qword_1003647D0);
  }

  return result;
}

unint64_t sub_1002796DC()
{
  unint64_t result = qword_1003647D8;
  if (!qword_1003647D8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA3F0, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&qword_1003647D8);
  }

  return result;
}

uint64_t sub_100279720()
{
  return sub_100010014(&qword_1003647E0, &qword_1003647E8);
}

unint64_t sub_100279748()
{
  unint64_t result = qword_1003647F0;
  if (!qword_1003647F0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA460, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&qword_1003647F0);
  }

  return result;
}

unint64_t sub_100279790()
{
  unint64_t result = qword_1003647F8;
  if (!qword_1003647F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA488, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&qword_1003647F8);
  }

  return result;
}

unint64_t sub_1002797D8()
{
  unint64_t result = qword_100364800;
  if (!qword_100364800)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA510, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&qword_100364800);
  }

  return result;
}

uint64_t sub_10027981C()
{
  return sub_100010014(&qword_100364808, &qword_100364810);
}

unint64_t sub_100279844()
{
  unint64_t result = qword_100364818;
  if (!qword_100364818)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA580, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&qword_100364818);
  }

  return result;
}

unint64_t sub_10027988C()
{
  unint64_t result = qword_100364820;
  if (!qword_100364820)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA5A8, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&qword_100364820);
  }

  return result;
}

unint64_t sub_1002798D4()
{
  unint64_t result = qword_100364828;
  if (!qword_100364828)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA630, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&qword_100364828);
  }

  return result;
}

uint64_t sub_100279918()
{
  return sub_100010014(&qword_100364830, &qword_100364838);
}

unint64_t sub_100279940()
{
  unint64_t result = qword_100364840;
  if (!qword_100364840)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA6A0, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100364840);
  }

  return result;
}

unint64_t sub_100279988()
{
  unint64_t result = qword_100364848;
  if (!qword_100364848)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA6C8, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100364848);
  }

  return result;
}

unint64_t sub_1002799D0()
{
  unint64_t result = qword_100364850;
  if (!qword_100364850)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA750, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100364850);
  }

  return result;
}

uint64_t sub_100279A14()
{
  return sub_100010014(&qword_100364858, &qword_100364860);
}

unint64_t sub_100279A3C()
{
  unint64_t result = qword_100364868;
  if (!qword_100364868)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA7C0, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100364868);
  }

  return result;
}

unint64_t sub_100279A84()
{
  unint64_t result = qword_100364870;
  if (!qword_100364870)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA7E8, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100364870);
  }

  return result;
}

unint64_t sub_100279ACC()
{
  unint64_t result = qword_100364878;
  if (!qword_100364878)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA870, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100364878);
  }

  return result;
}

uint64_t sub_100279B10()
{
  return sub_100010014(&qword_100364880, &qword_100364888);
}

uint64_t sub_100279B34()
{
  return sub_10000FD98(&qword_100364890, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DAA58);
}

uint64_t sub_100279B60()
{
  return sub_10000FD98(&qword_100351798, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DA980);
}

uint64_t sub_100279B8C()
{
  return sub_10000FD98(&qword_100364638, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DAA80);
}

uint64_t sub_100279BB8()
{
  return sub_10000FD98(&qword_100351790, type metadata accessor for Proto_Gpsd_Request, (uint64_t)&unk_1002DAAC0);
}

uint64_t sub_100279BE4()
{
  return sub_10000FD98(&qword_100364898, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DABE8);
}

uint64_t sub_100279C10()
{
  return sub_10000FD98(&qword_100351748, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAB10);
}

uint64_t sub_100279C3C()
{
  return sub_10000FD98(&qword_100364640, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAC10);
}

uint64_t sub_100279C68()
{
  return sub_10000FD98(&qword_100351738, type metadata accessor for Proto_Gpsd_Response, (uint64_t)&unk_1002DAC50);
}

uint64_t sub_100279C94()
{
  return sub_10000FD98(&qword_1003648A0, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DAD50);
}

uint64_t sub_100279CC0()
{
  return sub_10000FD98(&qword_100351740, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DAC78);
}

uint64_t sub_100279CEC()
{
  return sub_10000FD98(&qword_100364648, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DAD78);
}

uint64_t sub_100279D18()
{
  return sub_10000FD98(&qword_100351730, type metadata accessor for Proto_Gpsd_Indication, (uint64_t)&unk_1002DADB8);
}

uint64_t sub_100279D44()
{
  return sub_10000FD98(&qword_1003648A8, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAEE0);
}

uint64_t sub_100279D70()
{
  return sub_10000FD98(&qword_1003648B0, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAE08);
}

uint64_t sub_100279D9C()
{
  return sub_10000FD98(&qword_100364650, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAF08);
}

uint64_t sub_100279DC8()
{
  return sub_10000FD98(&qword_1003648B8, type metadata accessor for Proto_Gpsd_Status, (uint64_t)&unk_1002DAF48);
}

uint64_t sub_100279DF4()
{
  return sub_10000FD98(&qword_1003648C0, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DB048);
}

uint64_t sub_100279E20()
{
  return sub_10000FD98(&qword_1003648C8, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DAF70);
}

uint64_t sub_100279E4C()
{
  return sub_10000FD98(&qword_100364658, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DB070);
}

uint64_t sub_100279E78()
{
  return sub_10000FD98(&qword_1003648D0, type metadata accessor for Proto_Gpsd_SetPvtmReport, (uint64_t)&unk_1002DB0B0);
}

uint64_t sub_100279EA4()
{
  return sub_10000FD98( &qword_1003648D8,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB1B0);
}

uint64_t sub_100279ED0()
{
  return sub_10000FD98( &qword_1003648E0,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB0D8);
}

uint64_t sub_100279EFC()
{
  return sub_10000FD98( &qword_100364660,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB1D8);
}

uint64_t sub_100279F28()
{
  return sub_10000FD98( &qword_1003648E8,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile,  (uint64_t)&unk_1002DB218);
}

uint64_t sub_100279F54()
{
  return sub_10000FD98(&qword_1003648F0, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB318);
}

uint64_t sub_100279F80()
{
  return sub_10000FD98(&qword_1003648F8, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB240);
}

uint64_t sub_100279FAC()
{
  return sub_10000FD98(&qword_100364668, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB340);
}

uint64_t sub_100279FD8()
{
  return sub_10000FD98(&qword_100364900, type metadata accessor for Proto_Gpsd_InjectRtiFile, (uint64_t)&unk_1002DB380);
}

uint64_t sub_10027A004()
{
  return sub_10000FD98( &qword_100364908,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB480);
}

uint64_t sub_10027A030()
{
  return sub_10000FD98( &qword_100364910,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB3A8);
}

uint64_t sub_10027A05C()
{
  return sub_10000FD98( &qword_100364670,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB4A8);
}

uint64_t sub_10027A088()
{
  return sub_10000FD98( &qword_100364918,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist,  (uint64_t)&unk_1002DB4E8);
}

uint64_t sub_10027A0B4()
{
  return sub_10000FD98( &qword_100364920,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB5E8);
}

uint64_t sub_10027A0E0()
{
  return sub_10000FD98( &qword_100364928,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB510);
}

uint64_t sub_10027A10C()
{
  return sub_10000FD98( &qword_100364678,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB610);
}

uint64_t sub_10027A138()
{
  return sub_10000FD98( &qword_100364930,  type metadata accessor for Proto_Gpsd_InjectAssistancePosition,  (uint64_t)&unk_1002DB650);
}

uint64_t sub_10027A164()
{
  return sub_10000FD98( &qword_100364938,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB750);
}

uint64_t sub_10027A190()
{
  return sub_10000FD98( &qword_100364940,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB678);
}

uint64_t sub_10027A1BC()
{
  return sub_10000FD98( &qword_100364680,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB778);
}

uint64_t sub_10027A1E8()
{
  return sub_10000FD98( &qword_100364948,  type metadata accessor for Proto_Gpsd_InjectAssistanceTime,  (uint64_t)&unk_1002DB7B8);
}

uint64_t sub_10027A214()
{
  return sub_10000FD98(&qword_100364950, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB8B8);
}

uint64_t sub_10027A240()
{
  return sub_10000FD98(&qword_100364958, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB7E0);
}

uint64_t sub_10027A26C()
{
  return sub_10000FD98(&qword_100364688, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB8E0);
}

uint64_t sub_10027A298()
{
  return sub_10000FD98(&qword_100364960, type metadata accessor for Proto_Gpsd_DeleteGnssData, (uint64_t)&unk_1002DB920);
}

uint64_t sub_10027A2C4()
{
  return sub_10000FD98(&qword_100364968, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DBA20);
}

uint64_t sub_10027A2F0()
{
  return sub_10000FD98(&qword_100364970, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DB948);
}

uint64_t sub_10027A31C()
{
  return sub_10000FD98(&qword_100364690, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DBA48);
}

uint64_t sub_10027A348()
{
  return sub_10000FD98(&qword_100364978, type metadata accessor for Proto_Gpsd_SetNmeaHandler, (uint64_t)&unk_1002DBA88);
}

uint64_t sub_10027A374()
{
  return sub_10000FD98( &qword_100364980,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBB88);
}

uint64_t sub_10027A3A0()
{
  return sub_10000FD98( &qword_100364988,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBAB0);
}

uint64_t sub_10027A3CC()
{
  return sub_10000FD98( &qword_100364698,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBBB0);
}

uint64_t sub_10027A3F8()
{
  return sub_10000FD98( &qword_100364990,  type metadata accessor for Proto_Gpsd_SetAssistancePressure,  (uint64_t)&unk_1002DBBF0);
}

uint64_t sub_10027A424()
{
  return sub_10000FD98( &qword_100364998,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBCF0);
}

uint64_t sub_10027A450()
{
  return sub_10000FD98( &qword_1003649A0,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBC18);
}

uint64_t sub_10027A47C()
{
  return sub_10000FD98( &qword_1003646A0,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBD18);
}

uint64_t sub_10027A4A8()
{
  return sub_10000FD98( &qword_1003649A8,  type metadata accessor for Proto_Gpsd_SetAssistanceAccel,  (uint64_t)&unk_1002DBD58);
}

uint64_t sub_10027A4D4()
{
  return sub_10000FD98( &qword_1003649B0,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  (uint64_t)&unk_1002DBE58);
}

uint64_t sub_10027A500()
{
  return sub_10000FD98( &qword_1003649B8,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  (uint64_t)&unk_1002DBD80);
}

uint64_t sub_10027A52C()
{
  return sub_10000FD98( &qword_1003646A8,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  (uint64_t)&unk_1002DBE80);
}

uint64_t sub_10027A558()
{
  return sub_10000FD98( &qword_1003649C0,  type metadata accessor for Proto_Gpsd_SetAssistanceGyro,  (uint64_t)&unk_1002DBEC0);
}

uint64_t sub_10027A584()
{
  return sub_10000FD98( &qword_1003649C8,  type metadata accessor for Proto_Gpsd_SetAssistanceDem,  (uint64_t)&unk_1002DBFC0);
}

uint64_t sub_10027A5B0()
{
  return sub_10000FD98( &qword_1003649D0,  type metadata accessor for Proto_Gpsd_SetAssistanceDem,  (uint64_t)&unk_1002DBEE8);
}

uint64_t sub_10027A5DC()
{
  return sub_10000FD98( &qword_1003646B0,  type metadata accessor for Proto_Gpsd_SetAssistanceDem,  (uint64_t)&unk_1002DBFE8);
}

uint64_t sub_10027A608()
{
  return sub_10000FD98( &qword_1003649D8,  type metadata accessor for Proto_Gpsd_SetAssistanceDem,  (uint64_t)&unk_1002DC028);
}

uint64_t sub_10027A634()
{
  return sub_10000FD98( &qword_1003649E0,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC128);
}

uint64_t sub_10027A660()
{
  return sub_10000FD98( &qword_1003649E8,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC050);
}

uint64_t sub_10027A68C()
{
  return sub_10000FD98( &qword_1003646B8,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC150);
}

uint64_t sub_10027A6B8()
{
  return sub_10000FD98( &qword_1003649F0,  type metadata accessor for Proto_Gpsd_SetAssistanceMapVector,  (uint64_t)&unk_1002DC190);
}

uint64_t sub_10027A6E4()
{
  return sub_10000FD98( &qword_1003649F8,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC290);
}

uint64_t sub_10027A710()
{
  return sub_10000FD98( &qword_100364A00,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC1B8);
}

uint64_t sub_10027A73C()
{
  return sub_10000FD98( &qword_1003646C0,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC2B8);
}

uint64_t sub_10027A768()
{
  return sub_10000FD98( &qword_100364A08,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext,  (uint64_t)&unk_1002DC2F8);
}

uint64_t sub_10027A794()
{
  return sub_10000FD98( &qword_100364A10,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC3F8);
}

uint64_t sub_10027A7C0()
{
  return sub_10000FD98( &qword_100364A18,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC320);
}

uint64_t sub_10027A7EC()
{
  return sub_10000FD98( &qword_1003646C8,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC420);
}

uint64_t sub_10027A818()
{
  return sub_10000FD98( &qword_100364A20,  type metadata accessor for Proto_Gpsd_SetAssistanceMountState,  (uint64_t)&unk_1002DC460);
}

uint64_t sub_10027A844()
{
  return sub_10000FD98( &qword_100364A28,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC560);
}

uint64_t sub_10027A870()
{
  return sub_10000FD98( &qword_100364A30,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC488);
}

uint64_t sub_10027A89C()
{
  return sub_10000FD98( &qword_1003646D0,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC588);
}

uint64_t sub_10027A8C8()
{
  return sub_10000FD98( &qword_100364A38,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment,  (uint64_t)&unk_1002DC5C8);
}

uint64_t sub_10027A8F4()
{
  return sub_10000FD98( &qword_100364A40,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC6C8);
}

uint64_t sub_10027A920()
{
  return sub_10000FD98( &qword_100364A48,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC5F0);
}

uint64_t sub_10027A94C()
{
  return sub_10000FD98( &qword_1003646D8,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC6F0);
}

uint64_t sub_10027A978()
{
  return sub_10000FD98( &qword_100364A50,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint,  (uint64_t)&unk_1002DC730);
}

uint64_t sub_10027A9A4()
{
  return sub_10000FD98( &qword_100364A58,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC830);
}

uint64_t sub_10027A9D0()
{
  return sub_10000FD98( &qword_100364A60,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC758);
}

uint64_t sub_10027A9FC()
{
  return sub_10000FD98( &qword_1003646E0,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC858);
}

uint64_t sub_10027AA28()
{
  return sub_10000FD98( &qword_100364A68,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity,  (uint64_t)&unk_1002DC898);
}

uint64_t sub_10027AA54()
{
  return sub_10000FD98( &qword_100364A70,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC998);
}

uint64_t sub_10027AA80()
{
  return sub_10000FD98( &qword_100364A78,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC8C0);
}

uint64_t sub_10027AAAC()
{
  return sub_10000FD98( &qword_1003646E8,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DC9C0);
}

uint64_t sub_10027AAD8()
{
  return sub_10000FD98( &qword_100364A80,  type metadata accessor for Proto_Gpsd_SetThermalRiskState,  (uint64_t)&unk_1002DCA00);
}

uint64_t sub_10027AB04()
{
  return sub_10000FD98( &qword_100364A88,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCB00);
}

uint64_t sub_10027AB30()
{
  return sub_10000FD98( &qword_100364A90,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCA28);
}

uint64_t sub_10027AB5C()
{
  return sub_10000FD98( &qword_1003646F0,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCB28);
}

uint64_t sub_10027AB88()
{
  return sub_10000FD98( &qword_100364A98,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode,  (uint64_t)&unk_1002DCB68);
}

uint64_t sub_10027ABB4()
{
  return sub_10000FD98( &qword_100364AA0,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCC68);
}

uint64_t sub_10027ABE0()
{
  return sub_10000FD98( &qword_100364AA8,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCB90);
}

uint64_t sub_10027AC0C()
{
  return sub_10000FD98( &qword_1003646F8,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCC90);
}

uint64_t sub_10027AC38()
{
  return sub_10000FD98( &qword_100364AB0,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations,  (uint64_t)&unk_1002DCCD0);
}

uint64_t sub_10027AC64()
{
  return sub_10000FD98( &qword_100364AB8,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCDD0);
}

uint64_t sub_10027AC90()
{
  return sub_10000FD98( &qword_100364AC0,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCCF8);
}

uint64_t sub_10027ACBC()
{
  return sub_10000FD98( &qword_100364700,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCDF8);
}

uint64_t sub_10027ACE8()
{
  return sub_10000FD98( &qword_100364AC8,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable,  (uint64_t)&unk_1002DCE38);
}

uint64_t sub_10027AD14()
{
  return sub_10000FD98( &qword_100364AD0,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCF38);
}

uint64_t sub_10027AD40()
{
  return sub_10000FD98( &qword_100364AD8,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCE60);
}

uint64_t sub_10027AD6C()
{
  return sub_10000FD98( &qword_100364708,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCF60);
}

uint64_t sub_10027AD98()
{
  return sub_10000FD98( &qword_100364AE0,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling,  (uint64_t)&unk_1002DCFA0);
}

uint64_t sub_10027ADC4()
{
  return sub_10000FD98( &qword_100364AE8,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DD0A0);
}

uint64_t sub_10027ADF0()
{
  return sub_10000FD98( &qword_100364AF0,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DCFC8);
}

uint64_t sub_10027AE1C()
{
  return sub_10000FD98( &qword_100364710,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DD0C8);
}

uint64_t sub_10027AE48()
{
  return sub_10000FD98( &qword_100364AF8,  type metadata accessor for Proto_Gpsd_TerminationImminent,  (uint64_t)&unk_1002DD108);
}

uint64_t sub_10027AE74()
{
  return sub_10000FD98(&qword_100364B00, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD208);
}

uint64_t sub_10027AEA0()
{
  return sub_10000FD98(&qword_100364B08, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD130);
}

uint64_t sub_10027AECC()
{
  return sub_10000FD98(&qword_100364718, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD230);
}

uint64_t sub_10027AEF8()
{
  return sub_10000FD98(&qword_100364B10, type metadata accessor for Proto_Gpsd_ExitMessage, (uint64_t)&unk_1002DD270);
}

uint64_t sub_10027AF24()
{
  return sub_10000FD98( &qword_100364B18,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD370);
}

uint64_t sub_10027AF50()
{
  return sub_10000FD98( &qword_100364B20,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD298);
}

uint64_t sub_10027AF7C()
{
  return sub_10000FD98( &qword_100364728,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD398);
}

uint64_t sub_10027AFA8()
{
  return sub_10000FD98( &qword_100364B28,  type metadata accessor for Proto_Gpsd_RecoveryStatistics,  (uint64_t)&unk_1002DD3D8);
}

uint64_t sub_10027AFD4()
{
  return sub_10000FD98( &qword_100364B30,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD4D8);
}

uint64_t sub_10027B000()
{
  return sub_10000FD98( &qword_100364B38,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD400);
}

uint64_t sub_10027B02C()
{
  return sub_10000FD98( &qword_100364730,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD500);
}

uint64_t sub_10027B058()
{
  return sub_10000FD98( &qword_100364B40,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus,  (uint64_t)&unk_1002DD540);
}

uint64_t sub_10027B084()
{
  return sub_10000FD98( &qword_100364B48,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD640);
}

uint64_t sub_10027B0B0()
{
  return sub_10000FD98( &qword_100364720,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD568);
}

uint64_t sub_10027B0DC()
{
  return sub_10000FD98( &qword_100364738,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD668);
}

uint64_t sub_10027B108()
{
  return sub_10000FD98( &qword_100364B50,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryPoint,  (uint64_t)&unk_1002DD6A8);
}

uint64_t sub_10027B134()
{
  return sub_10000FD98(&qword_100364B58, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD7A8);
}

uint64_t sub_10027B160()
{
  return sub_10000FD98(&qword_100364B60, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD6D0);
}

uint64_t sub_10027B18C()
{
  return sub_10000FD98(&qword_100364740, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD7D0);
}

uint64_t sub_10027B1B8()
{
  return sub_10000FD98(&qword_100364B68, type metadata accessor for Proto_Gpsd_LtlInfoRequest, (uint64_t)&unk_1002DD810);
}

uint64_t sub_10027B1E4()
{
  return sub_10000FD98(&qword_100364B70, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD910);
}

uint64_t sub_10027B210()
{
  return sub_10000FD98(&qword_100364B78, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD838);
}

uint64_t sub_10027B23C()
{
  return sub_10000FD98(&qword_100364748, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD938);
}

uint64_t sub_10027B268()
{
  return sub_10000FD98(&qword_100364B80, type metadata accessor for Proto_Gpsd_LtlInfo, (uint64_t)&unk_1002DD978);
}

uint64_t sub_10027B294()
{
  return sub_10000FD98( &qword_100364B88,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DDA78);
}

uint64_t sub_10027B2C0()
{
  return sub_10000FD98( &qword_100364B90,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DD9A0);
}

uint64_t sub_10027B2EC()
{
  return sub_10000FD98( &qword_100364750,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DDAA0);
}

uint64_t sub_10027B318()
{
  return sub_10000FD98( &qword_100364B98,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams,  (uint64_t)&unk_1002DDAE0);
}

uint64_t sub_10027B344()
{
  return sub_10000FD98( &qword_100364BA0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDBE0);
}

uint64_t sub_10027B370()
{
  return sub_10000FD98( &qword_100364BA8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDB08);
}

uint64_t sub_10027B39C()
{
  return sub_10000FD98( &qword_100364758,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDC08);
}

uint64_t sub_10027B3C8()
{
  return sub_10000FD98( &qword_100364BB0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData,  (uint64_t)&unk_1002DDC48);
}

uint64_t sub_10027B3F4()
{
  return sub_10000FD98( &qword_100364BB8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDD48);
}

uint64_t sub_10027B420()
{
  return sub_10000FD98( &qword_100364BC0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDC70);
}

uint64_t sub_10027B44C()
{
  return sub_10000FD98( &qword_100364760,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDD70);
}

uint64_t sub_10027B478()
{
  return sub_10000FD98( &qword_100364BC8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData,  (uint64_t)&unk_1002DDDB0);
}

uint64_t sub_10027B4A4()
{
  return sub_10000FD98( &qword_100364BD0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDEB0);
}

uint64_t sub_10027B4D0()
{
  return sub_10000FD98( &qword_100364BD8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDDD8);
}

uint64_t sub_10027B4FC()
{
  return sub_10000FD98( &qword_100364768,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDED8);
}

uint64_t sub_10027B528()
{
  return sub_10000FD98( &qword_100364BE0,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams,  (uint64_t)&unk_1002DDF18);
}

uint64_t sub_10027B554()
{
  return sub_10000FD98( &qword_100364BE8,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DE018);
}

uint64_t sub_10027B580()
{
  return sub_10000FD98( &qword_100364BF0,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DDF40);
}

uint64_t sub_10027B5AC()
{
  return sub_10000FD98( &qword_100364770,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DE040);
}

uint64_t sub_10027B5D8()
{
  return sub_10000FD98( &qword_100364BF8,  type metadata accessor for Proto_Gpsd_CntinStatusMessage,  (uint64_t)&unk_1002DE080);
}

uint64_t sub_10027B604()
{
  return sub_10000FD98( &qword_100364C00,  type metadata accessor for Proto_Gpsd_CntinClockControl,  (uint64_t)&unk_1002DE180);
}

uint64_t sub_10027B630()
{
  return sub_10000FD98( &qword_100364C08,  type metadata accessor for Proto_Gpsd_CntinClockControl,  (uint64_t)&unk_1002DE0A8);
}

uint64_t sub_10027B65C()
{
  return sub_10000FD98( &qword_100364778,  type metadata accessor for Proto_Gpsd_CntinClockControl,  (uint64_t)&unk_1002DE1A8);
}

uint64_t sub_10027B688()
{
  return sub_10000FD98( &qword_100364C10,  type metadata accessor for Proto_Gpsd_CntinClockControl,  (uint64_t)&unk_1002DE1E8);
}

uint64_t sub_10027B6B4()
{
  return sub_10000FD98(&qword_100364C18, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE2E8);
}

uint64_t sub_10027B6E0()
{
  return sub_10000FD98(&qword_100364C20, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE210);
}

uint64_t sub_10027B70C()
{
  return sub_10000FD98(&qword_100364780, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE310);
}

uint64_t sub_10027B738()
{
  return sub_10000FD98(&qword_100364C28, type metadata accessor for Proto_Gpsd_Exception, (uint64_t)&unk_1002DE350);
}

uint64_t sub_10027B764()
{
  return sub_10000FD98( &qword_100364C30,  type metadata accessor for Proto_Gpsd_AskBasebandReset,  (uint64_t)&unk_1002DE450);
}

uint64_t sub_10027B790()
{
  return sub_10000FD98( &qword_100364C38,  type metadata accessor for Proto_Gpsd_AskBasebandReset,  (uint64_t)&unk_1002DE378);
}

uint64_t sub_10027B7BC()
{
  return sub_10000FD98( &qword_100364788,  type metadata accessor for Proto_Gpsd_AskBasebandReset,  (uint64_t)&unk_1002DE478);
}

uint64_t sub_10027B7E8()
{
  return sub_10000FD98( &qword_100364C40,  type metadata accessor for Proto_Gpsd_AskBasebandReset,  (uint64_t)&unk_1002DE4B8);
}

uint64_t sub_10027B814()
{
  return sub_10000FD98(&qword_100364C48, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE5B8);
}

uint64_t sub_10027B840()
{
  return sub_10000FD98(&qword_100355530, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE4E0);
}

uint64_t sub_10027B86C()
{
  return sub_10000FD98(&qword_100364790, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE5E0);
}

uint64_t sub_10027B898()
{
  return sub_10000FD98(&qword_100355528, type metadata accessor for Proto_Gpsd_LogEntry, (uint64_t)&unk_1002DE620);
}

uint64_t sub_10027B8C4()
{
  return sub_10000FD98(&qword_100364C50, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE720);
}

uint64_t sub_10027B8F0()
{
  return sub_10000FD98(&qword_100364C58, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE648);
}

uint64_t sub_10027B91C()
{
  return sub_10000FD98(&qword_100364798, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE748);
}

uint64_t sub_10027B948()
{
  return sub_10000FD98(&qword_100364C60, type metadata accessor for Proto_Gpsd_StartContext, (uint64_t)&unk_1002DE788);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_SuplInitDecodeResult( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_10027B9C0 + 4 * byte_1002DA1E8[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10027B9F4 + 4 * byte_1002DA1E3[v4]))();
}

uint64_t sub_10027B9F4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027B9FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10027BA04LL);
  }
  return result;
}

uint64_t sub_10027BA10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10027BA18LL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_10027BA1C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BA24(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_SuplInitDecodeResult()
{
  return &type metadata for Proto_Gpsd_SuplInitDecodeResult;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_CompressionType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_10027BA8C + 4 * byte_1002DA1F2[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10027BAC0 + 4 * byte_1002DA1ED[v4]))();
}

uint64_t sub_10027BAC0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BAC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10027BAD0LL);
  }
  return result;
}

uint64_t sub_10027BADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10027BAE4LL);
  }
  *(_BYTE *)unint64_t result = a2 + 2;
  return result;
}

uint64_t sub_10027BAE8(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BAF0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_CompressionType()
{
  return &type metadata for Proto_Gpsd_CompressionType;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_LtlInfoType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFB) {
    return ((uint64_t (*)(void))((char *)&loc_10027BB58 + 4 * byte_1002DA1FC[v4]))();
  }
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10027BB8C + 4 * byte_1002DA1F7[v4]))();
}

uint64_t sub_10027BB8C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BB94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10027BB9CLL);
  }
  return result;
}

uint64_t sub_10027BBA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10027BBB0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 4;
  return result;
}

uint64_t sub_10027BBB4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BBBC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_LtlInfoType()
{
  return &type metadata for Proto_Gpsd_LtlInfoType;
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_CntinStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_10027BC24 + 4 * byte_1002DA206[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_10027BC58 + 4 * byte_1002DA201[v4]))();
}

uint64_t sub_10027BC58(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BC60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10027BC68LL);
  }
  return result;
}

uint64_t sub_10027BC74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10027BC7CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 6;
  return result;
}

uint64_t sub_10027BC80(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BC88(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_CntinStatus()
{
  return &type metadata for Proto_Gpsd_CntinStatus;
}

uint64_t sub_10027BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027BCB0);
}

uint64_t sub_10027BCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027BCC0);
}

uint64_t getEnumTagSinglePayload for Proto_Gpsd_Request.TypeEnum(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xC4) {
    goto LABEL_17;
  }
  if (a2 + 60 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 60) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 60;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 60;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 60;
    }
  }

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Request.TypeEnum( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 60 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 60) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xC4) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xC3) {
    return ((uint64_t (*)(void))((char *)&loc_10027BDA0 + 4 * byte_1002DA210[v4]))();
  }
  *a1 = a2 + 60;
  return ((uint64_t (*)(void))((char *)sub_10027BDD4 + 4 * byte_1002DA20B[v4]))();
}

uint64_t sub_10027BDD4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BDDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10027BDE4LL);
  }
  return result;
}

uint64_t sub_10027BDF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10027BDF8LL);
  }
  *(_BYTE *)unint64_t result = a2 + 60;
  return result;
}

uint64_t sub_10027BDFC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BE04(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_Request.TypeEnum()
{
  return &type metadata for Proto_Gpsd_Request.TypeEnum;
}

uint64_t sub_10027BE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027BE2C);
}

uint64_t sub_10027BE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  }
  unsigned int v10 = v9 - 10;
  else {
    return 0LL;
  }
}

uint64_t sub_10027BEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027BEBC);
}

uint64_t sub_10027BEBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 10;
  return result;
}

uint64_t sub_10027BF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002DE878, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DE8A8);
}

uint64_t sub_10027BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027BF5C);
}

uint64_t sub_10027BF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027BF6C);
}

uint64_t storeEnumTagSinglePayload for Proto_Gpsd_Indication.TypeEnum( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xE8) {
    return ((uint64_t (*)(void))((char *)&loc_10027BFBC + 4 * byte_1002DA21A[v4]))();
  }
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_10027BFF0 + 4 * byte_1002DA215[v4]))();
}

uint64_t sub_10027BFF0(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027BFF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10027C000LL);
  }
  return result;
}

uint64_t sub_10027C00C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10027C014LL);
  }
  *(_BYTE *)uint64_t result = a2 + 23;
  return result;
}

uint64_t sub_10027C018(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10027C020(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Gpsd_Indication.TypeEnum()
{
  return &type metadata for Proto_Gpsd_Indication.TypeEnum;
}

void *sub_10027C03C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unsigned int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)unsigned int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    void v12[8] = v13[8];
    uint64_t v14 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  }

  return a1;
}

uint64_t sub_10027C10C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10027C1B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10027C25C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10027C300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10027C3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027C3B0);
}

uint64_t sub_10027C3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 2) {
    int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v10 = -2;
  }
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10027C448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027C454);
}

uint64_t sub_10027C454(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

uint64_t sub_10027C4CC(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002DE890;
    v4[2] = &unk_1002DE890;
    v4[3] = &unk_1002DE8F8;
    v4[4] = &unk_1002DE8F8;
    void v4[5] = &unk_1002DE8F8;
    swift_initStructMetadata(a1, 256LL, 6LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_10027C54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027C558);
}

uint64_t sub_10027C55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027C568);
}

uint64_t sub_10027C56C(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002DE8F8;
    v4[2] = &unk_1002DE8F8;
    v4[3] = &unk_1002DE8F8;
    v4[4] = &unk_1002DE8F8;
    void v4[5] = &unk_1002DE8F8;
    void v4[6] = &unk_1002DE8F8;
    swift_initStructMetadata(a1, 256LL, 7LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_10027C5E8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }

    else
    {
      uint64_t v13 = *(void *)v10;
      sub_100017F58(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }

    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }

  return a1;
}

uint64_t sub_10027C6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }

  else
  {
    uint64_t v11 = *v9;
    sub_100017F58(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10027C758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15LL)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      sub_100017F58(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      sub_100017F9C(v13, v14);
      goto LABEL_8;
    }

    sub_1001DEDE4((uint64_t)v8);
    goto LABEL_6;
  }

  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }

  uint64_t v11 = *v9;
  sub_100017F58(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
LABEL_8:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10027C83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_10027C8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      sub_100017F9C(v12, v10);
      goto LABEL_6;
    }

    sub_1001DEDE4((uint64_t)v8);
  }

  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_6:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10027C954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027C960);
}

uint64_t sub_10027C960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  }
  unsigned int v10 = v9 - 3;
  else {
    return 0LL;
  }
}

uint64_t sub_10027C9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027C9F0);
}

uint64_t sub_10027C9F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
  return result;
}

uint64_t sub_10027CA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007813C(a1, a2, a3, (uint64_t)&unk_1002DE950, (uint64_t)&unk_1002DE968);
}

uint64_t sub_10027CA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027CA8C);
}

uint64_t sub_10027CA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  uint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  BOOL v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  unsigned int v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10) {
    return 0LL;
  }
  else {
    return v11;
  }
}

uint64_t sub_10027CB14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027CB20);
}

uint64_t sub_10027CB20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  BOOL v10 = (void *)(a1 + *(int *)(a4 + 20));
  *BOOL v10 = 0LL;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_10027CBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DE950);
}

uint64_t sub_10027CBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027CBD4);
}

uint64_t sub_10027CBD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027CBE4);
}

char *sub_10027CBEC(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v15);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    BOOL v10 = &a1[v9];
    unsigned int v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1LL, v12))
    {
      uint64_t v14 = sub_100003A0C(&qword_100363120);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64LL));
    }

    else
    {
      v8(v10, v11, v7);
      uint64_t v16 = v12[5];
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v12[6];
      char v20 = &v10[v19];
      int v21 = &v11[v19];
      *(void *)char v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[7];
      int v23 = &v10[v22];
      int v24 = &v11[v22];
      *(void *)int v23 = *(void *)v24;
      v23[8] = v24[8];
      uint64_t v25 = v12[8];
      int v26 = &v10[v25];
      int v27 = &v11[v25];
      *(void *)int v26 = *(void *)v27;
      v26[8] = v27[8];
      uint64_t v28 = v12[9];
      int v29 = &v10[v28];
      int v30 = &v11[v28];
      *(void *)int v29 = *(void *)v30;
      v29[8] = v30[8];
      uint64_t v31 = v12[10];
      uint64_t v32 = &v10[v31];
      char v33 = &v11[v31];
      *(void *)uint64_t v32 = *(void *)v33;
      v32[8] = v33[8];
      uint64_t v34 = v12[11];
      char v35 = &v10[v34];
      uint64_t v36 = &v11[v34];
      *(void *)char v35 = *(void *)v36;
      v35[8] = v36[8];
      uint64_t v37 = v12[12];
      uint64_t v38 = &v10[v37];
      char v39 = &v11[v37];
      *(void *)uint64_t v38 = *(void *)v39;
      v38[8] = v39[8];
      uint64_t v40 = v12[13];
      int v41 = &v10[v40];
      uint64_t v42 = &v11[v40];
      *(_DWORD *)int v41 = *(_DWORD *)v42;
      v41[4] = v42[4];
      v10[v12[14]] = v11[v12[14]];
      uint64_t v43 = v12[15];
      int v44 = &v10[v43];
      uint64_t v45 = &v11[v43];
      *(void *)int v44 = *(void *)v45;
      v44[8] = v45[8];
      v10[v12[16]] = v11[v12[16]];
      (*(void (**)(char *, void, uint64_t, int *))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v46 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    a1[v46] = a2[v46];
    uint64_t v47 = a3[8];
    uint64_t v48 = &a1[v47];
    int v49 = &a2[v47];
    *(void *)uint64_t v48 = *(void *)v49;
    v48[8] = v49[8];
  }

  return a1;
}

uint64_t sub_10027CE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48LL))(v5, 1LL, v6);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v5, v4);
  }
  return result;
}

uint64_t sub_10027CF04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  BOOL v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_100363120);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)uint64_t v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    int v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)int v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v11[8];
    int v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(void *)int v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v11[9];
    int v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    *(void *)int v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v11[10];
    int v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    *(void *)int v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[11];
    char v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    *(void *)char v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v11[12];
    uint64_t v36 = &v9[v35];
    uint64_t v37 = &v10[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v11[13];
    char v39 = &v9[v38];
    uint64_t v40 = &v10[v38];
    *(_DWORD *)char v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    v9[v11[14]] = v10[v11[14]];
    uint64_t v41 = v11[15];
    uint64_t v42 = &v9[v41];
    uint64_t v43 = &v10[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    v9[v11[16]] = v10[v11[16]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v44 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  uint64_t v45 = a3[8];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  return a1;
}

uint64_t sub_10027D150(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  char v87 = a3;
  uint64_t v9 = a3[5];
  BOOL v10 = (_BYTE *)(a1 + v9);
  unsigned int v11 = (_BYTE *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v86 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v86 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v54 = v12[5];
      uint64_t v55 = &v10[v54];
      uint64_t v56 = &v11[v54];
      uint64_t v57 = *(void *)v56;
      v55[8] = v56[8];
      *(void *)uint64_t v55 = v57;
      uint64_t v58 = v12[6];
      int v59 = &v10[v58];
      uint64_t v60 = &v11[v58];
      LOBYTE(v57) = v60[8];
      *(void *)int v59 = *(void *)v60;
      v59[8] = v57;
      uint64_t v61 = v12[7];
      char v62 = &v10[v61];
      uint64_t v63 = &v11[v61];
      LOBYTE(v57) = v63[8];
      *(void *)char v62 = *(void *)v63;
      v62[8] = v57;
      uint64_t v64 = v12[8];
      char v65 = &v10[v64];
      char v66 = &v11[v64];
      LOBYTE(v57) = v66[8];
      *(void *)char v65 = *(void *)v66;
      v65[8] = v57;
      uint64_t v67 = v12[9];
      uint64_t v68 = &v10[v67];
      uint64_t v69 = &v11[v67];
      LOBYTE(v57) = v69[8];
      *(void *)uint64_t v68 = *(void *)v69;
      v68[8] = v57;
      uint64_t v70 = v12[10];
      uint64_t v71 = &v10[v70];
      int v72 = &v11[v70];
      LOBYTE(v57) = v72[8];
      *(void *)uint64_t v71 = *(void *)v72;
      v71[8] = v57;
      uint64_t v73 = v12[11];
      uint64_t v74 = &v10[v73];
      uint64_t v75 = &v11[v73];
      LOBYTE(v57) = v75[8];
      *(void *)uint64_t v74 = *(void *)v75;
      v74[8] = v57;
      uint64_t v76 = v12[12];
      uint64_t v77 = &v10[v76];
      int v78 = &v11[v76];
      LOBYTE(v57) = v78[8];
      *(void *)uint64_t v77 = *(void *)v78;
      v77[8] = v57;
      uint64_t v79 = v12[13];
      uint64_t v80 = &v10[v79];
      char v81 = &v11[v79];
      LOBYTE(v57) = v81[4];
      *(_DWORD *)uint64_t v80 = *(_DWORD *)v81;
      v80[4] = v57;
      v10[v12[14]] = v11[v12[14]];
      uint64_t v82 = v12[15];
      uint64_t v83 = &v10[v82];
      uint64_t v84 = &v11[v82];
      uint64_t v85 = *(void *)v84;
      v83[8] = v84[8];
      *(void *)uint64_t v83 = v85;
      v10[v12[16]] = v11[v12[16]];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Position);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v48 = sub_100003A0C(&qword_100363120);
    memcpy(v10, v11, *(void *)(*(void *)(v48 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v11, v6);
  uint64_t v16 = v12[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = *(void *)v18;
  v17[8] = v18[8];
  *(void *)uint64_t v17 = v19;
  uint64_t v20 = v12[6];
  int v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  LOBYTE(v19) = v22[8];
  *(void *)int v21 = *(void *)v22;
  v21[8] = v19;
  uint64_t v23 = v12[7];
  int v24 = &v10[v23];
  uint64_t v25 = &v11[v23];
  LOBYTE(v19) = v25[8];
  *(void *)int v24 = *(void *)v25;
  v24[8] = v19;
  uint64_t v26 = v12[8];
  int v27 = &v10[v26];
  uint64_t v28 = &v11[v26];
  LOBYTE(v19) = v28[8];
  *(void *)int v27 = *(void *)v28;
  v27[8] = v19;
  uint64_t v29 = v12[9];
  int v30 = &v10[v29];
  uint64_t v31 = &v11[v29];
  LOBYTE(v19) = v31[8];
  *(void *)int v30 = *(void *)v31;
  v30[8] = v19;
  uint64_t v32 = v12[10];
  char v33 = &v10[v32];
  uint64_t v34 = &v11[v32];
  LOBYTE(v19) = v34[8];
  *(void *)char v33 = *(void *)v34;
  v33[8] = v19;
  uint64_t v35 = v12[11];
  uint64_t v36 = &v10[v35];
  uint64_t v37 = &v11[v35];
  LOBYTE(v19) = v37[8];
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v19;
  uint64_t v38 = v12[12];
  char v39 = &v10[v38];
  uint64_t v40 = &v11[v38];
  LOBYTE(v19) = v40[8];
  *(void *)char v39 = *(void *)v40;
  v39[8] = v19;
  uint64_t v41 = v12[13];
  uint64_t v42 = &v10[v41];
  uint64_t v43 = &v11[v41];
  LOBYTE(v19) = v43[4];
  *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
  v42[4] = v19;
  v10[v12[14]] = v11[v12[14]];
  uint64_t v44 = v12[15];
  uint64_t v45 = &v10[v44];
  uint64_t v46 = &v11[v44];
  uint64_t v47 = *(void *)v46;
  v45[8] = v46[8];
  *(void *)uint64_t v45 = v47;
  v10[v12[16]] = v11[v12[16]];
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v86 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  *(_BYTE *)(a1 + v87[6]) = *(_BYTE *)(a2 + v87[6]);
  *(_BYTE *)(a1 + v87[7]) = *(_BYTE *)(a2 + v87[7]);
  uint64_t v49 = v87[8];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = (uint64_t *)(a2 + v49);
  uint64_t v52 = *v51;
  *(_BYTE *)(v50 + 8) = *((_BYTE *)v51 + 8);
  *(void *)uint64_t v50 = v52;
  return a1;
}

uint64_t sub_10027D52C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  BOOL v10 = (char *)(a2 + v8);
  unsigned int v11 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v12 = *((void *)v11 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1LL, v11))
  {
    uint64_t v13 = sub_100003A0C(&qword_100363120);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v14 = v11[5];
    int v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    *(void *)int v15 = *(void *)v16;
    v15[8] = v16[8];
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v11[7];
    int v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    *(void *)int v21 = *(void *)v22;
    v21[8] = v22[8];
    uint64_t v23 = v11[8];
    int v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    *(void *)int v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v11[9];
    int v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    *(void *)int v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v11[10];
    int v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    *(void *)int v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v11[11];
    char v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    *(void *)char v33 = *(void *)v34;
    v33[8] = v34[8];
    uint64_t v35 = v11[12];
    uint64_t v36 = &v9[v35];
    uint64_t v37 = &v10[v35];
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v11[13];
    char v39 = &v9[v38];
    uint64_t v40 = &v10[v38];
    *(_DWORD *)char v39 = *(_DWORD *)v40;
    v39[4] = v40[4];
    v9[v11[14]] = v10[v11[14]];
    uint64_t v41 = v11[15];
    uint64_t v42 = &v9[v41];
    uint64_t v43 = &v10[v41];
    *(void *)uint64_t v42 = *(void *)v43;
    v42[8] = v43[8];
    v9[v11[16]] = v10[v11[16]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0LL, 1LL, v11);
  }

  uint64_t v44 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  uint64_t v45 = a3[8];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(void *)uint64_t v46 = *(void *)v47;
  *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
  return a1;
}

uint64_t sub_10027D778(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v83 = a3;
  uint64_t v9 = a3[5];
  BOOL v10 = (_BYTE *)(a1 + v9);
  unsigned int v11 = (_BYTE *)(a2 + v9);
  uint64_t v12 = (int *)type metadata accessor for Proto_Gnss_Position(0LL);
  uint64_t v82 = *((void *)v12 - 1);
  uint64_t v13 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v82 + 48);
  int v14 = v13(v10, 1LL, v12);
  int v15 = v13(v11, 1LL, v12);
  if (!v14)
  {
    if (!v15)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      uint64_t v52 = v12[5];
      uint64_t v53 = &v10[v52];
      uint64_t v54 = &v11[v52];
      *(void *)uint64_t v53 = *(void *)v54;
      v53[8] = v54[8];
      uint64_t v55 = v12[6];
      uint64_t v56 = &v10[v55];
      uint64_t v57 = &v11[v55];
      *(void *)uint64_t v56 = *(void *)v57;
      v56[8] = v57[8];
      uint64_t v58 = v12[7];
      int v59 = &v10[v58];
      uint64_t v60 = &v11[v58];
      *(void *)int v59 = *(void *)v60;
      v59[8] = v60[8];
      uint64_t v61 = v12[8];
      char v62 = &v10[v61];
      uint64_t v63 = &v11[v61];
      *(void *)char v62 = *(void *)v63;
      v62[8] = v63[8];
      uint64_t v64 = v12[9];
      char v65 = &v10[v64];
      char v66 = &v11[v64];
      *(void *)char v65 = *(void *)v66;
      v65[8] = v66[8];
      uint64_t v67 = v12[10];
      uint64_t v68 = &v10[v67];
      uint64_t v69 = &v11[v67];
      *(void *)uint64_t v68 = *(void *)v69;
      v68[8] = v69[8];
      uint64_t v70 = v12[11];
      uint64_t v71 = &v10[v70];
      int v72 = &v11[v70];
      *(void *)uint64_t v71 = *(void *)v72;
      v71[8] = v72[8];
      uint64_t v73 = v12[12];
      uint64_t v74 = &v10[v73];
      uint64_t v75 = &v11[v73];
      *(void *)uint64_t v74 = *(void *)v75;
      v74[8] = v75[8];
      uint64_t v76 = v12[13];
      uint64_t v77 = &v10[v76];
      int v78 = &v11[v76];
      *(_DWORD *)uint64_t v77 = *(_DWORD *)v78;
      v77[4] = v78[4];
      v10[v12[14]] = v11[v12[14]];
      uint64_t v79 = v12[15];
      uint64_t v80 = &v10[v79];
      char v81 = &v11[v79];
      *(void *)uint64_t v80 = *(void *)v81;
      v80[8] = v81[8];
      v10[v12[16]] = v11[v12[16]];
      goto LABEL_7;
    }

    sub_100004090((uint64_t)v10, type metadata accessor for Proto_Gnss_Position);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v46 = sub_100003A0C(&qword_100363120);
    memcpy(v10, v11, *(void *)(*(void *)(v46 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v16 = v12[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = v12[6];
  uint64_t v20 = &v10[v19];
  int v21 = &v11[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = v12[7];
  uint64_t v23 = &v10[v22];
  int v24 = &v11[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = v12[8];
  uint64_t v26 = &v10[v25];
  int v27 = &v11[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = v12[9];
  uint64_t v29 = &v10[v28];
  int v30 = &v11[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = v12[10];
  uint64_t v32 = &v10[v31];
  char v33 = &v11[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  uint64_t v34 = v12[11];
  uint64_t v35 = &v10[v34];
  uint64_t v36 = &v11[v34];
  *(void *)uint64_t v35 = *(void *)v36;
  v35[8] = v36[8];
  uint64_t v37 = v12[12];
  uint64_t v38 = &v10[v37];
  char v39 = &v11[v37];
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = v12[13];
  uint64_t v41 = &v10[v40];
  uint64_t v42 = &v11[v40];
  *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
  v41[4] = v42[4];
  v10[v12[14]] = v11[v12[14]];
  uint64_t v43 = v12[15];
  uint64_t v44 = &v10[v43];
  uint64_t v45 = &v11[v43];
  *(void *)uint64_t v44 = *(void *)v45;
  v44[8] = v45[8];
  v10[v12[16]] = v11[v12[16]];
  (*(void (**)(_BYTE *, void, uint64_t, int *))(v82 + 56))(v10, 0LL, 1LL, v12);
LABEL_7:
  uint64_t v47 = v83[7];
  *(_BYTE *)(a1 + v83[6]) = *(_BYTE *)(a2 + v83[6]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  uint64_t v48 = v83[8];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  return a1;
}

uint64_t sub_10027DB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027DB5C);
}

uint64_t sub_10027DB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
    return v9(v10, a2, v8);
  }

  uint64_t v11 = sub_100003A0C(&qword_100363120);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }

  unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 2) {
    int v15 = ((v14 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v15 = -2;
  }
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_10027DC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027DC30);
}

uint64_t sub_10027DC30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
    return v11(v12, a2, a2, v10);
  }

  uint64_t result = sub_100003A0C(&qword_100363120);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }

  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

void sub_10027DCD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[0] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100363B90, type metadata accessor for Proto_Gnss_Position);
    if (v5 <= 0x3F)
    {
      v6[1] = *(void *)(v4 - 8) + 64LL;
      v6[2] = &unk_1002DE9E8;
      v6[3] = &unk_1002DE8F8;
      void v6[4] = &unk_1002DE890;
      swift_initStructMetadata(a1, 256LL, 5LL, v6, a1 + 16);
    }
  }

uint64_t sub_10027DD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027DD94);
}

uint64_t sub_10027DD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027DDA4);
}

uint64_t sub_10027DDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DE890);
}

uint64_t sub_10027DDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027DDDC);
}

uint64_t sub_10027DDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027DDEC);
}

uint64_t sub_10027DDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DE890);
}

uint64_t *sub_10027DDFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)uint64_t v9 = *(void *)v10;
    v9[8] = v10[8];
  }

  return a1;
}

uint64_t sub_10027DE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_10027DF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  return a1;
}

uint64_t sub_10027DF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_10027DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  return a1;
}

uint64_t sub_10027E044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027E050);
}

uint64_t sub_10027E054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027E060);
}

uint64_t sub_10027E064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027E070);
}

uint64_t sub_10027E074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027E080);
}

uint64_t sub_10027E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027E090);
}

uint64_t sub_10027E094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027E0A0);
}

uint64_t *sub_10027E0A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v5 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    int v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
    char v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v10(v7, v8, v9);
  }

  return v5;
}

uint64_t *sub_10027E13C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16LL);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

uint64_t *sub_10027E1AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  char v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  return a1;
}

void *sub_10027E220(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32LL))(v5, v6, v7);
  return a1;
}

uint64_t *sub_10027E27C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  return a1;
}

uint64_t sub_10027E2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027E2F4);
}

uint64_t sub_10027E2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027E304);
}

uint64_t sub_10027E308(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_10027E380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027E38C);
}

uint64_t sub_10027E390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027E39C);
}

void *sub_10027E3A0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (void *)(v32 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v32);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    void v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)uint64_t v16 = *(void *)v17;
    void v16[8] = v17[8];
    *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
    uint64_t v18 = a3[9];
    uint64_t v19 = a3[10];
    uint64_t v20 = (char *)a1 + v18;
    int v21 = (char *)a2 + v18;
    *(void *)uint64_t v20 = *(void *)v21;
    v20[8] = v21[8];
    uint64_t v22 = (char *)a1 + v19;
    uint64_t v23 = (char *)a2 + v19;
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = a3[11];
    uint64_t v25 = a3[12];
    uint64_t v26 = (char *)a1 + v24;
    int v27 = (char *)a2 + v24;
    *(void *)uint64_t v26 = *(void *)v27;
    v26[8] = v27[8];
    uint64_t v28 = (char *)a1 + v25;
    uint64_t v29 = (char *)a2 + v25;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = a3[14];
    *((_BYTE *)a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
    uint64_t v31 = a3[16];
    *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
    *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
    *((_BYTE *)a1 + a3[17]) = *((_BYTE *)a2 + a3[17]);
  }

  return a1;
}

uint64_t sub_10027E510(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  uint64_t v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  uint64_t v30 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_10027E654(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = v10;
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v20 = *v19;
  *(_BYTE *)(v18 + 8) = *((_BYTE *)v19 + 8);
  *(void *)uint64_t v18 = v20;
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  LOBYTE(v20) = *(_BYTE *)(v23 + 8);
  *(void *)uint64_t v22 = *(void *)v23;
  *(_BYTE *)(v22 + 8) = v20;
  uint64_t v24 = a3[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  LOBYTE(v20) = *(_BYTE *)(v26 + 8);
  *(void *)uint64_t v25 = *(void *)v26;
  *(_BYTE *)(v25 + 8) = v20;
  uint64_t v27 = a3[12];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  LOBYTE(v20) = *(_BYTE *)(v29 + 8);
  *(void *)uint64_t v28 = *(void *)v29;
  *(_BYTE *)(v28 + 8) = v20;
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_10027E7B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  uint64_t v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  uint64_t v30 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_10027E8F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  uint64_t v17 = a3[9];
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = a1 + v23;
  uint64_t v26 = a2 + v23;
  *(void *)uint64_t v25 = *(void *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  uint64_t v27 = a1 + v24;
  uint64_t v28 = a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  uint64_t v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  uint64_t v30 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[17]) = *(_BYTE *)(a2 + a3[17]);
  return a1;
}

uint64_t sub_10027EA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027EA44);
}

uint64_t sub_10027EA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
  if (v9 >= 2) {
    int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v10 = -2;
  }
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10027EADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027EAE8);
}

uint64_t sub_10027EAE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 2;
  return result;
}

uint64_t sub_10027EB60(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002DE890;
    void v4[2] = &unk_1002DE890;
    v4[3] = &unk_1002DE890;
    v4[4] = &unk_1002DE8F8;
    void v4[5] = &unk_1002DE890;
    void v4[6] = &unk_1002DE890;
    void v4[7] = &unk_1002DE890;
    void v4[8] = &unk_1002DE890;
    v4[9] = &unk_1002DE8F8;
    void v4[10] = &unk_1002DE8F8;
    v4[11] = &unk_1002DE8F8;
    v4[12] = &unk_1002DE8F8;
    void v4[13] = &unk_1002DE8F8;
    swift_initStructMetadata(a1, 256LL, 14LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

void *sub_10027EBF0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v13);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)int v10 = *(void *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    uint64_t v12 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  }

  return a1;
}

uint64_t sub_10027ECA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_10027ED2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10027EDBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_10027EE44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  uint64_t v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  return a1;
}

uint64_t sub_10027EECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027EED8);
}

uint64_t sub_10027EED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  }
  unsigned int v10 = v9 - 5;
  else {
    return 0LL;
  }
}

uint64_t sub_10027EF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027EF68);
}

uint64_t sub_10027EF68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 5;
  return result;
}

uint64_t sub_10027EFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148544( a1,  a2,  a3,  (uint64_t)&unk_1002DE890,  (uint64_t)&unk_1002DE8A8,  (uint64_t)&unk_1002DEB50,  (uint64_t)&unk_1002DEB68);
}

uint64_t sub_10027F004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F010);
}

uint64_t sub_10027F010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  }
  unsigned int v10 = v9 - 4;
  else {
    return 0LL;
  }
}

uint64_t sub_10027F094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F0A0);
}

uint64_t sub_10027F0A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 4;
  return result;
}

uint64_t sub_10027F118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007813C(a1, a2, a3, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DE9E8);
}

uint64_t sub_10027F12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F138);
}

uint64_t sub_10027F138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  }
  unsigned int v10 = v9 - 8;
  else {
    return 0LL;
  }
}

uint64_t sub_10027F1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F1C8);
}

uint64_t sub_10027F1C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 8;
  return result;
}

uint64_t sub_10027F240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DEBE0);
}

uint64_t sub_10027F24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F258);
}

uint64_t sub_10027F25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F268);
}

uint64_t sub_10027F26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148544( a1,  a2,  a3,  (uint64_t)&unk_1002DE890,  (uint64_t)&unk_1002DE890,  (uint64_t)&unk_1002DE890,  (uint64_t)&unk_1002DE890);
}

uint64_t sub_10027F284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F290);
}

uint64_t sub_10027F294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F2A0);
}

uint64_t sub_10027F2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F2B0);
}

uint64_t sub_10027F2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F2C0);
}

uint64_t sub_10027F2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007813C(a1, a2, a3, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DEC80);
}

void *sub_10027F2D8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v11);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    unsigned int v10 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
  }

  return a1;
}

uint64_t sub_10027F378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_10027F3EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  return a1;
}

uint64_t sub_10027F464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_10027F4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  return a1;
}

uint64_t sub_10027F54C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F558);
}

uint64_t sub_10027F55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F568);
}

uint64_t sub_10027F56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007813C(a1, a2, a3, (uint64_t)&unk_1002DE8F8, (uint64_t)&unk_1002DEC80);
}

uint64_t sub_10027F580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F58C);
}

uint64_t sub_10027F590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F59C);
}

uint64_t sub_10027F5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007813C(a1, a2, a3, (uint64_t)&unk_1002DEC80, (uint64_t)&unk_1002DEC80);
}

uint64_t sub_10027F5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F5BC);
}

uint64_t sub_10027F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F5CC);
}

uint64_t sub_10027F5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10007813C(a1, a2, a3, (uint64_t)&unk_1002DE8F8, (uint64_t)&unk_1002DE8F8);
}

uint64_t sub_10027F5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F5EC);
}

uint64_t sub_10027F5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F5FC);
}

uint64_t sub_10027F600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DE8F8);
}

uint64_t sub_10027F620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F62C);
}

uint64_t sub_10027F630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F63C);
}

uint64_t sub_10027F640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DED70);
}

uint64_t *sub_10027F64C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain(v11);
  }

  return a1;
}

uint64_t sub_10027F6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  return swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(a2 + 20) + 8));
}

uint64_t sub_10027F728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t sub_10027F790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  return a1;
}

uint64_t sub_10027F80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = v8[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t sub_10027F878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10027F884);
}

uint64_t sub_10027F888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10027F894);
}

uint64_t *sub_10027F898(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
    uint64_t v17 = *((void *)v16 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1LL, v16))
    {
      uint64_t v18 = sub_100003A0C(&qword_100364610);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64LL));
    }

    else
    {
      v12(v14, v15, v11);
      v14[v16[5]] = v15[v16[5]];
      uint64_t v19 = v16[6];
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      v20[4] = v21[4];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v14[v16[7]] = v15[v16[7]];
      v14[v16[8]] = v15[v16[8]];
      (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0LL, 1LL, v16);
    }
  }

  return v7;
}

uint64_t sub_10027FA00(void *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8LL);
  v9(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48LL))(v6, 1LL, v7);
  if (!(_DWORD)result) {
    return ((uint64_t (*)(char *, uint64_t))v9)(v6, v5);
  }
  return result;
}

uint64_t *sub_10027FAB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v16 = *((void *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v16 + 48))(v14, 1LL, v15))
  {
    uint64_t v17 = sub_100003A0C(&qword_100364610);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64LL));
  }

  else
  {
    v11(v13, v14, v10);
    v13[v15[5]] = v14[v15[5]];
    uint64_t v18 = v15[6];
    uint64_t v19 = &v13[v18];
    uint64_t v20 = &v14[v18];
    v19[4] = v20[4];
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    v13[v15[7]] = v14[v15[7]];
    v13[v15[8]] = v14[v15[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v16 + 56))(v13, 0LL, 1LL, v15);
  }

  return a1;
}

uint64_t *sub_10027FBF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 24);
  v13(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v18 = *((void *)v17 - 1);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, int *))(v18 + 48);
  LODWORD(v10) = v19(v15, 1LL, v17);
  int v20 = v19(v16, 1LL, v17);
  if (!(_DWORD)v10)
  {
    if (!v20)
    {
      v13(v15, v16, v11);
      v15[v17[5]] = v16[v17[5]];
      uint64_t v27 = v17[6];
      uint64_t v28 = &v15[v27];
      uint64_t v29 = &v16[v27];
      char v30 = v29[4];
      *(_DWORD *)uint64_t v28 = *(_DWORD *)v29;
      _BYTE v28[4] = v30;
      v15[v17[7]] = v16[v17[7]];
      v15[v17[8]] = v16[v17[8]];
      return a1;
    }

    sub_100004090((uint64_t)v15, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
    goto LABEL_6;
  }

  if (v20)
  {
LABEL_6:
    uint64_t v25 = sub_100003A0C(&qword_100364610);
    memcpy(v15, v16, *(void *)(*(void *)(v25 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v16, v11);
  v15[v17[5]] = v16[v17[5]];
  uint64_t v21 = v17[6];
  uint64_t v22 = &v15[v21];
  uint64_t v23 = &v16[v21];
  char v24 = v23[4];
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  v22[4] = v24;
  v15[v17[7]] = v16[v17[7]];
  v15[v17[8]] = v16[v17[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0LL, 1LL, v17);
  return a1;
}

void *sub_10027FDC4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL);
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v15 = *((void *)v14 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1LL, v14))
  {
    uint64_t v16 = sub_100003A0C(&qword_100364610);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64LL));
  }

  else
  {
    v10(v12, v13, v9);
    v12[v14[5]] = v13[v14[5]];
    uint64_t v17 = v14[6];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = &v13[v17];
    v18[4] = v19[4];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v12[v14[7]] = v13[v14[7]];
    v12[v14[8]] = v13[v14[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v15 + 56))(v12, 0LL, 1LL, v14);
  }

  return a1;
}

uint64_t *sub_10027FEFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (int *)type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus(0LL);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  LODWORD(v9) = v18(v14, 1LL, v16);
  int v19 = v18(v15, 1LL, v16);
  if (!(_DWORD)v9)
  {
    if (!v19)
    {
      v12(v14, v15, v10);
      v14[v16[5]] = v15[v16[5]];
      uint64_t v25 = v16[6];
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      v26[4] = v27[4];
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      v14[v16[7]] = v15[v16[7]];
      v14[v16[8]] = v15[v16[8]];
      return a1;
    }

    sub_100004090((uint64_t)v14, type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
    goto LABEL_6;
  }

  if (v19)
  {
LABEL_6:
    uint64_t v23 = sub_100003A0C(&qword_100364610);
    memcpy(v14, v15, *(void *)(*(void *)(v23 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  v14[v16[5]] = v15[v16[5]];
  uint64_t v20 = v16[6];
  uint64_t v21 = &v14[v20];
  uint64_t v22 = &v15[v20];
  v21[4] = v22[4];
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  v14[v16[7]] = v15[v16[7]];
  v14[v16[8]] = v15[v16[8]];
  (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0LL, 1LL, v16);
  return a1;
}

uint64_t sub_1002800C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002800D4);
}

uint64_t sub_1002800D4(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_100364610);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a3 + 24);
    }

    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }

uint64_t sub_100280178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100280184);
}

char *sub_100280184(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }

    else
    {
      uint64_t v10 = sub_100003A0C(&qword_100364610);
      uint64_t v9 = *(void *)(v10 - 8);
      uint64_t v11 = *(int *)(a4 + 24);
    }

    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }

  return result;
}

void sub_100280224(uint64_t a1)
{
  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v6[1] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  (unint64_t *)&unk_100365C18,  type metadata accessor for Proto_Gpsd_RecoveryStatistics.RecoveryStatus);
    if (v5 <= 0x3F)
    {
      v6[2] = *(void *)(v4 - 8) + 64LL;
      swift_initStructMetadata(a1, 256LL, 3LL, v6, a1 + 16);
    }
  }

void *sub_1002802C8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v12);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
    v9[4] = v10[4];
    uint64_t v11 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  }

  return a1;
}

uint64_t sub_10028037C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  uint64_t v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t sub_100280404(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100280494(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  uint64_t v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t sub_10028051C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  uint64_t v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t sub_1002805A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002805B0);
}

uint64_t sub_1002805B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002805C0);
}

uint64_t sub_1002805C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148544( a1,  a2,  a3,  (uint64_t)&unk_1002DE8F8,  (uint64_t)&unk_1002DEC80,  (uint64_t)&unk_1002DE8F8,  (uint64_t)&unk_1002DE8F8);
}

uint64_t *sub_1002805E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v19);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    v13[4] = v14[4];
    *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v18);
  }

  return a1;
}

uint64_t sub_1002806A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(a2 + 20) + 8));
  return swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_100280700(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v17);
  return a1;
}

uint64_t sub_10028079C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v11 = v8[1];
  v8[1] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (int *)(a2 + v12);
  int v15 = *v14;
  *(_BYTE *)(v13 + 4) = *((_BYTE *)v14 + 4);
  *(_DWORD *)uint64_t v13 = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  return a1;
}

uint64_t sub_100280860(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_BYTE *)(v8 + 4) = *(_BYTE *)(v9 + 4);
  *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1002808E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v12 = v8[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease(v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = (void *)(a1 + v14);
  uint64_t v18 = (uint64_t *)(a2 + v14);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v21 = v17[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  return a1;
}

uint64_t sub_100280980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028098C);
}

uint64_t sub_100280990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100280A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100280A28);
}

uint64_t sub_100280A2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_100280AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002DED70, (uint64_t)&unk_1002DEC80, (uint64_t)&unk_1002DED70);
}

uint64_t sub_100280AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100280ACC);
}

uint64_t sub_100280ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  }
  unsigned int v10 = v9 - 5;
  else {
    return 0LL;
  }
}

uint64_t sub_100280B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100280B5C);
}

uint64_t sub_100280B5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 5;
  return result;
}

uint64_t sub_100280BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DEB50);
}

uint64_t sub_100280BE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100280BEC);
}

uint64_t sub_100280BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100280BFC);
}

uint64_t *sub_100280C00(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    a1[1] = v8;
    uint64_t v9 = a3[6];
    unsigned int v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v8);
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)v7 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    void v16[4] = v17[4];
    uint64_t v18 = (char *)v7 + v15;
    uint64_t v19 = (char *)a2 + v15;
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
  }

  return v7;
}

uint64_t *sub_100280CF4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  unsigned int v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v13;
  uint64_t v16 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  uint64_t v17 = (char *)a1 + v14;
  uint64_t v18 = (char *)a2 + v14;
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  v17[4] = v18[4];
  return a1;
}

uint64_t *sub_100280DB8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a2[1];
  uint64_t v9 = a1[1];
  a1[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24LL))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  char v17 = v16[4];
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  v15[4] = v17;
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  char v21 = v20[4];
  *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
  v19[4] = v21;
  return a1;
}

_OWORD *sub_100280E84(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  void v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  uint64_t v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

uint64_t *sub_100280F24(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a1[1];
  a1[1] = a2[1];
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40LL))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  char v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  void v16[4] = v17[4];
  return a1;
}

uint64_t sub_100280FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100280FE8);
}

uint64_t sub_100280FE8(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = type metadata accessor for UnknownStorage(0LL);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( &a1[*(int *)(a3 + 24)],  a2,  v8);
  }

uint64_t sub_100281064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281070);
}

char *sub_100281070(char *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( &v5[*(int *)(a4 + 24)],  a2,  a2,  v7);
  }

  return result;
}

uint64_t sub_1002810E4(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(result - 8) + 64LL;
    v4[3] = &unk_1002DEC80;
    v4[4] = &unk_1002DEC80;
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t *sub_100281168(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16LL) & ~(unint64_t)v3));
    swift_retain(v4);
  }

  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16LL);
    swift_bridgeObjectRetain(v4);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
    v15[4] = v16[4];
    char v17 = (char *)v7 + v14;
    uint64_t v18 = (char *)a2 + v14;
    *(_DWORD *)char v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
  }

  return v7;
}

uint64_t *sub_100281244(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16LL);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  uint64_t v16 = (char *)a1 + v13;
  char v17 = (char *)a2 + v13;
  *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
  void v16[4] = v17[4];
  return a1;
}

uint64_t *sub_1002812F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 24LL))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  char v15 = v14[4];
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v15;
  uint64_t v16 = a3[7];
  char v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char v19 = v18[4];
  *(_DWORD *)char v17 = *(_DWORD *)v18;
  v17[4] = v19;
  return a1;
}

void *sub_1002813AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32LL))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  void v12[4] = v13[4];
  uint64_t v14 = (char *)a1 + v11;
  char v15 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v14 = *(_DWORD *)v15;
  v14[4] = v15[4];
  return a1;
}

uint64_t *sub_10028144C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40LL))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_DWORD *)uint64_t v13 = *(_DWORD *)v14;
  v13[4] = v14[4];
  char v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(_DWORD *)char v15 = *(_DWORD *)v16;
  v15[4] = v16[4];
  return a1;
}

uint64_t sub_1002814F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100281500);
}

uint64_t sub_100281504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281510);
}

uint64_t sub_100281514(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(result - 8) + 64LL;
    void v4[2] = &unk_1002DEC80;
    v4[3] = &unk_1002DEC80;
    swift_initStructMetadata(a1, 256LL, 4LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100281598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002815A4);
}

uint64_t sub_1002815A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002815B4);
}

void *sub_1002815B8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v39 = *a2;
    *a1 = *a2;
    a1 = (void *)(v39 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v39);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
    void v12[4] = v13[4];
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (char *)a1 + v14;
    char v17 = (char *)a2 + v14;
    *(_DWORD *)uint64_t v16 = *(_DWORD *)v17;
    void v16[4] = v17[4];
    uint64_t v18 = (char *)a1 + v15;
    char v19 = (char *)a2 + v15;
    v18[4] = v19[4];
    *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
    uint64_t v20 = a3[9];
    uint64_t v21 = a3[10];
    uint64_t v22 = (char *)a1 + v20;
    uint64_t v23 = (char *)a2 + v20;
    *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    char v24 = (char *)a1 + v21;
    uint64_t v25 = (char *)a2 + v21;
    *(_DWORD *)char v24 = *(_DWORD *)v25;
    uint64_t v26 = a3[11];
    uint64_t v27 = a3[12];
    char v28 = *((_BYTE *)a2 + v26);
    v24[4] = v25[4];
    *((_BYTE *)a1 + v26) = v28;
    uint64_t v29 = (char *)a1 + v27;
    *(_DWORD *)uint64_t v29 = *(_DWORD *)((char *)a2 + v27);
    v29[4] = *((_BYTE *)a2 + v27 + 4);
    uint64_t v30 = a3[13];
    uint64_t v31 = a3[14];
    uint64_t v32 = (char *)a1 + v30;
    char v33 = (char *)a2 + v30;
    *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
    v32[4] = v33[4];
    uint64_t v34 = (char *)a1 + v31;
    uint64_t v35 = (char *)a2 + v31;
    *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
    v34[4] = v35[4];
    uint64_t v36 = a3[15];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
    v37[4] = v38[4];
  }

  return a1;
}

uint64_t sub_100281744(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t sub_1002818A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (int *)(a2 + v7);
  int v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)uint64_t v8 = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  LOBYTE(v10) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)uint64_t v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v10;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  LOBYTE(v10) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = v10;
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  LOBYTE(v10) = *(_BYTE *)(v19 + 4);
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = v10;
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  LOBYTE(v10) = *(_BYTE *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v10;
  uint64_t v23 = a3[10];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  LOBYTE(v10) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v10;
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (int *)(a2 + v26);
  int v29 = *v28;
  *(_BYTE *)(v27 + 4) = *((_BYTE *)v28 + 4);
  *(_DWORD *)uint64_t v27 = v29;
  uint64_t v30 = a3[13];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  LOBYTE(v29) = *(_BYTE *)(v32 + 4);
  *(_DWORD *)uint64_t v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = v29;
  uint64_t v33 = a3[14];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  LOBYTE(v29) = *(_BYTE *)(v35 + 4);
  *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
  *(_BYTE *)(v34 + 4) = v29;
  uint64_t v36 = a3[15];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  LOBYTE(v29) = *(_BYTE *)(v38 + 4);
  *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
  *(_BYTE *)(v37 + 4) = v29;
  return a1;
}

uint64_t sub_100281A18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t sub_100281B78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_DWORD *)uint64_t v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = *(_BYTE *)(v22 + 4);
  uint64_t v23 = a1 + v20;
  uint64_t v24 = a2 + v20;
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  uint64_t v25 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
  *(_BYTE *)(v26 + 4) = *(_BYTE *)(v27 + 4);
  uint64_t v28 = a3[13];
  uint64_t v29 = a3[14];
  uint64_t v30 = a1 + v28;
  uint64_t v31 = a2 + v28;
  *(_DWORD *)uint64_t v30 = *(_DWORD *)v31;
  *(_BYTE *)(v30 + 4) = *(_BYTE *)(v31 + 4);
  uint64_t v32 = a1 + v29;
  uint64_t v33 = a2 + v29;
  *(_DWORD *)uint64_t v32 = *(_DWORD *)v33;
  *(_BYTE *)(v32 + 4) = *(_BYTE *)(v33 + 4);
  uint64_t v34 = a3[15];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t sub_100281CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100281CE4);
}

uint64_t sub_100281CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 2) {
    int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v10 = -2;
  }
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100281D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281D88);
}

uint64_t sub_100281D88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 44)) = a2 + 2;
  return result;
}

uint64_t sub_100281E00(uint64_t a1)
{
  uint64_t result = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1002DEC80;
    void v4[2] = &unk_1002DEC80;
    v4[3] = &unk_1002DEC80;
    void v4[4] = &unk_1002DEC80;
    void v4[5] = &unk_1002DEC80;
    void v4[6] = &unk_1002DEC80;
    void v4[7] = &unk_1002DE8F8;
    void v4[8] = &unk_1002DEC80;
    v4[9] = &unk_1002DEC80;
    void v4[10] = &unk_1002DEC80;
    v4[11] = &unk_1002DEC80;
    swift_initStructMetadata(a1, 256LL, 12LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_100281E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100281E98);
}

uint64_t sub_100281E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  else {
    int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  }
  unsigned int v10 = v9 - 7;
  else {
    return 0LL;
  }
}

uint64_t sub_100281F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281F28);
}

uint64_t sub_100281F28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 7;
  return result;
}

uint64_t sub_100281FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100148D5C(a1, a2, a3, (uint64_t)&unk_1002DEEB0);
}

uint64_t sub_100281FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100281FB8);
}

uint64_t sub_100281FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281FC8);
}

uint64_t sub_100281FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100281FD8);
}

uint64_t sub_100281FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100281FE8);
}

uint64_t sub_100281FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002DEC80, (uint64_t)&unk_1002DEC80, (uint64_t)&unk_1002DEC80);
}

uint64_t *sub_100282000(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v18);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unsigned int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)unsigned int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    *(void *)uint64_t v12 = *(void *)v13;
    void v12[8] = v13[8];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain(v17);
  }

  return a1;
}

uint64_t sub_1002820C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  return swift_bridgeObjectRelease(*(void *)(a1 + *(int *)(a2 + 28) + 8));
}

uint64_t sub_100282110(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t sub_1002821AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  char v14 = *(_BYTE *)(v13 + 8);
  *(void *)uint64_t v12 = *(void *)v13;
  *(_BYTE *)(v12 + 8) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  uint64_t v18 = v17[1];
  uint64_t v19 = v16[1];
  v16[1] = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  return a1;
}

uint64_t sub_100282260(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1002822F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(void *)uint64_t v11 = *(void *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  uint64_t v13 = a3[7];
  char v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v18 = v14[1];
  *char v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease(v18);
  return a1;
}

uint64_t sub_100282390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028239C);
}

uint64_t sub_10028239C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100282428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100282434);
}

uint64_t sub_100282434(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t sub_1002824B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DE890, (uint64_t)&unk_1002DED70);
}

uint64_t *sub_1002824C8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16LL) & ~(unint64_t)v5));
    swift_retain(v23);
  }

  else
  {
    uint64_t v7 = type metadata accessor for UnknownStorage(0LL);
    uint64_t v46 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL);
    v46(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for Proto_Gpsd_Request(0LL);
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain(v14);
    if (v20(v17, 1LL, v18))
    {
      uint64_t v21 = v7;
      uint64_t v22 = sub_100003A0C(&qword_100350F20);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64LL));
    }

    else
    {
      uint64_t v21 = v7;
      v46((uint64_t *)v16, (uint64_t *)v17, v7);
      uint64_t v24 = *(int *)(v18 + 20);
      uint64_t v25 = *(void *)&v17[v24];
      *(void *)&v16[v24] = v25;
      uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
      swift_retain(v25);
      v26(v16, 0LL, 1LL, v18);
    }

    uint64_t v27 = a3[8];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
    uint64_t v31 = *((void *)v30 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v31 + 48))(v29, 1LL, v30))
    {
      uint64_t v32 = sub_100003A0C(&qword_100350F28);
      memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64LL));
    }

    else
    {
      v46((uint64_t *)v28, (uint64_t *)v29, v21);
      v28[v30[5]] = v29[v30[5]];
      uint64_t v33 = v30[6];
      uint64_t v34 = &v28[v33];
      uint64_t v35 = &v29[v33];
      v34[8] = v35[8];
      *(void *)uint64_t v34 = *(void *)v35;
      v28[v30[7]] = v29[v30[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v31 + 56))(v28, 0LL, 1LL, v30);
    }

    uint64_t v36 = a3[9];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = type metadata accessor for Proto_Gpsd_Indication(0LL);
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1LL, v39))
    {
      uint64_t v41 = sub_100003A0C(&qword_100350F30);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64LL));
    }

    else
    {
      v46((uint64_t *)v37, (uint64_t *)v38, v21);
      uint64_t v42 = *(int *)(v39 + 20);
      uint64_t v43 = *(void *)&v38[v42];
      *(void *)&v37[v42] = v43;
      uint64_t v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56);
      swift_retain(v43);
      v44(v37, 0LL, 1LL, v39);
    }
  }

  return a1;
}

uint64_t sub_100282788(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UnknownStorage(0LL);
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL);
  v5(a1, v4);
  swift_bridgeObjectRelease(*(void *)(a1 + a2[6] + 8));
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Proto_Gpsd_Request(0LL);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48LL))(v6, 1LL, v7))
  {
    v5(v6, v4);
    swift_release(*(void *)(v6 + *(int *)(v7 + 20)));
  }

  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48LL))(v10, 1LL, v11);
  if (!(_DWORD)result)
  {
    v5(v10, v4);
    return swift_release(*(void *)(v10 + *(int *)(v11 + 20)));
  }

  return result;
}

uint64_t sub_1002828C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL);
  v44(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = type metadata accessor for Proto_Gpsd_Request(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain(v13);
  if (v19(v16, 1LL, v17))
  {
    uint64_t v20 = v6;
    uint64_t v21 = sub_100003A0C(&qword_100350F20);
    memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64LL));
  }

  else
  {
    uint64_t v20 = v6;
    v44((uint64_t)v15, (uint64_t)v16, v6);
    uint64_t v22 = *(int *)(v17 + 20);
    uint64_t v23 = *(void *)&v16[v22];
    *(void *)&v15[v22] = v23;
    uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
    swift_retain(v23);
    v24(v15, 0LL, 1LL, v17);
  }

  uint64_t v25 = a3[8];
  uint64_t v26 = (char *)(a1 + v25);
  uint64_t v27 = (char *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v29 = *((void *)v28 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v29 + 48))(v27, 1LL, v28))
  {
    uint64_t v30 = sub_100003A0C(&qword_100350F28);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64LL));
  }

  else
  {
    v44((uint64_t)v26, (uint64_t)v27, v20);
    v26[v28[5]] = v27[v28[5]];
    uint64_t v31 = v28[6];
    uint64_t v32 = &v26[v31];
    uint64_t v33 = &v27[v31];
    v32[8] = v33[8];
    *(void *)uint64_t v32 = *(void *)v33;
    v26[v28[7]] = v27[v28[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v26, 0LL, 1LL, v28);
  }

  uint64_t v34 = a3[9];
  uint64_t v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  uint64_t v37 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t v38 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1LL, v37))
  {
    uint64_t v39 = sub_100003A0C(&qword_100350F30);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64LL));
  }

  else
  {
    v44((uint64_t)v35, (uint64_t)v36, v20);
    uint64_t v40 = *(int *)(v37 + 20);
    uint64_t v41 = *(void *)&v36[v40];
    *(void *)&v35[v40] = v41;
    uint64_t v42 = *(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56);
    swift_retain(v41);
    v42(v35, 0LL, 1LL, v37);
  }

  return a1;
}

uint64_t sub_100282B54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 24);
  v64(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(_BYTE *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for Proto_Gpsd_Request(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1LL, v19);
  int v23 = v21(v18, 1LL, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v17, v18, v6);
      uint64_t v24 = *(int *)(v19 + 20);
      uint64_t v25 = *(void *)&v18[v24];
      *(void *)&v17[v24] = v25;
      uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
      swift_retain(v25);
      v26(v17, 0LL, 1LL, v19);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v23)
  {
    sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gpsd_Request);
LABEL_6:
    uint64_t v27 = sub_100003A0C(&qword_100350F20);
    memcpy(v17, v18, *(void *)(*(void *)(v27 - 8) + 64LL));
    goto LABEL_7;
  }

  v64((uint64_t)v17, (uint64_t)v18, v6);
  uint64_t v54 = *(int *)(v19 + 20);
  uint64_t v55 = *(void *)&v18[v54];
  uint64_t v56 = *(void *)&v17[v54];
  *(void *)&v17[v54] = v55;
  swift_retain(v55);
  swift_release(v56);
LABEL_7:
  uint64_t v28 = a3[8];
  uint64_t v29 = (_BYTE *)(a1 + v28);
  uint64_t v30 = (_BYTE *)(a2 + v28);
  uint64_t v31 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v32 + 48);
  int v34 = v33(v29, 1LL, v31);
  int v35 = v33(v30, 1LL, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 16))(v29, v30, v6);
      v29[v31[5]] = v30[v31[5]];
      uint64_t v36 = v31[6];
      uint64_t v37 = &v29[v36];
      uint64_t v38 = &v30[v36];
      char v39 = v38[8];
      *(void *)uint64_t v37 = *(void *)v38;
      v37[8] = v39;
      v29[v31[7]] = v30[v31[7]];
      (*(void (**)(_BYTE *, void, uint64_t, int *))(v32 + 56))(v29, 0LL, 1LL, v31);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v35)
  {
    sub_100004090((uint64_t)v29, type metadata accessor for Proto_Gpsd_Response);
LABEL_12:
    uint64_t v40 = sub_100003A0C(&qword_100350F28);
    memcpy(v29, v30, *(void *)(*(void *)(v40 - 8) + 64LL));
    goto LABEL_13;
  }

  v64((uint64_t)v29, (uint64_t)v30, v6);
  v29[v31[5]] = v30[v31[5]];
  uint64_t v57 = v31[6];
  uint64_t v58 = &v29[v57];
  int v59 = &v30[v57];
  char v60 = v59[8];
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v60;
  v29[v31[7]] = v30[v31[7]];
LABEL_13:
  uint64_t v41 = a3[9];
  uint64_t v42 = (char *)(a1 + v41);
  uint64_t v43 = (char *)(a2 + v41);
  uint64_t v44 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1LL, v44);
  int v48 = v46(v43, 1LL, v44);
  if (!v47)
  {
    if (!v48)
    {
      v64((uint64_t)v42, (uint64_t)v43, v6);
      uint64_t v61 = *(int *)(v44 + 20);
      uint64_t v62 = *(void *)&v43[v61];
      uint64_t v63 = *(void *)&v42[v61];
      *(void *)&v42[v61] = v62;
      swift_retain(v62);
      swift_release(v63);
      return a1;
    }

    sub_100004090((uint64_t)v42, type metadata accessor for Proto_Gpsd_Indication);
    goto LABEL_18;
  }

  if (v48)
  {
LABEL_18:
    uint64_t v52 = sub_100003A0C(&qword_100350F30);
    memcpy(v42, v43, *(void *)(*(void *)(v52 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v42, v43, v6);
  uint64_t v49 = *(int *)(v44 + 20);
  uint64_t v50 = *(void *)&v43[v49];
  *(void *)&v42[v49] = v50;
  uint64_t v51 = *(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56);
  swift_retain(v50);
  v51(v42, 0LL, 1LL, v44);
  return a1;
}

uint64_t sub_100282F3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  __int128 v12 = *(_OWORD *)(a2 + v9);
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = v12;
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for Proto_Gpsd_Request(0LL);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1LL, v16))
  {
    uint64_t v18 = sub_100003A0C(&qword_100350F20);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0LL, 1LL, v16);
  }

  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  int v22 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v23 = *((void *)v22 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1LL, v22))
  {
    uint64_t v24 = sub_100003A0C(&qword_100350F28);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v20, (uint64_t)v21, v6);
    v20[v22[5]] = v21[v22[5]];
    uint64_t v25 = v22[6];
    uint64_t v26 = &v20[v25];
    uint64_t v27 = &v21[v25];
    v26[8] = v27[8];
    *(void *)uint64_t v26 = *(void *)v27;
    v20[v22[7]] = v21[v22[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0LL, 1LL, v22);
  }

  uint64_t v28 = a3[9];
  uint64_t v29 = (char *)(a1 + v28);
  uint64_t v30 = (char *)(a2 + v28);
  uint64_t v31 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1LL, v31))
  {
    uint64_t v33 = sub_100003A0C(&qword_100350F30);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64LL));
  }

  else
  {
    v7((uint64_t)v29, (uint64_t)v30, v6);
    *(void *)&v29[*(int *)(v31 + 20)] = *(void *)&v30[*(int *)(v31 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0LL, 1LL, v31);
  }

  return a1;
}

uint64_t sub_100283198(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v55 = *(void *)(v6 - 8);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 40);
  v54(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  __int128 v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = v11[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease(v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for Proto_Gpsd_Request(0LL);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1LL, v19);
  int v23 = v21(v18, 1LL, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v17, v18, v6);
      *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0LL, 1LL, v19);
      goto LABEL_7;
    }

    goto LABEL_6;
  }

  if (v23)
  {
    sub_100004090((uint64_t)v17, type metadata accessor for Proto_Gpsd_Request);
LABEL_6:
    uint64_t v24 = sub_100003A0C(&qword_100350F20);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64LL));
    goto LABEL_7;
  }

  v54((uint64_t)v17, (uint64_t)v18, v6);
  uint64_t v47 = *(int *)(v19 + 20);
  uint64_t v48 = *(void *)&v17[v47];
  *(void *)&v17[v47] = *(void *)&v18[v47];
  swift_release(v48);
LABEL_7:
  uint64_t v25 = a3[8];
  uint64_t v26 = (_BYTE *)(a1 + v25);
  uint64_t v27 = (_BYTE *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for Proto_Gpsd_Response(0LL);
  uint64_t v29 = *((void *)v28 - 1);
  uint64_t v30 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v29 + 48);
  int v31 = v30(v26, 1LL, v28);
  int v32 = v30(v27, 1LL, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 32))(v26, v27, v6);
      v26[v28[5]] = v27[v28[5]];
      uint64_t v33 = v28[6];
      int v34 = &v26[v33];
      int v35 = &v27[v33];
      v34[8] = v35[8];
      *(void *)int v34 = *(void *)v35;
      v26[v28[7]] = v27[v28[7]];
      (*(void (**)(_BYTE *, void, uint64_t, int *))(v29 + 56))(v26, 0LL, 1LL, v28);
      goto LABEL_13;
    }

    goto LABEL_12;
  }

  if (v32)
  {
    sub_100004090((uint64_t)v26, type metadata accessor for Proto_Gpsd_Response);
LABEL_12:
    uint64_t v36 = sub_100003A0C(&qword_100350F28);
    memcpy(v26, v27, *(void *)(*(void *)(v36 - 8) + 64LL));
    goto LABEL_13;
  }

  v54((uint64_t)v26, (uint64_t)v27, v6);
  v26[v28[5]] = v27[v28[5]];
  uint64_t v49 = v28[6];
  uint64_t v50 = &v26[v49];
  uint64_t v51 = &v27[v49];
  v50[8] = v51[8];
  *(void *)uint64_t v50 = *(void *)v51;
  v26[v28[7]] = v27[v28[7]];
LABEL_13:
  uint64_t v37 = a3[9];
  uint64_t v38 = (char *)(a1 + v37);
  char v39 = (char *)(a2 + v37);
  uint64_t v40 = type metadata accessor for Proto_Gpsd_Indication(0LL);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1LL, v40);
  int v44 = v42(v39, 1LL, v40);
  if (!v43)
  {
    if (!v44)
    {
      v54((uint64_t)v38, (uint64_t)v39, v6);
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = *(void *)&v38[v52];
      *(void *)&v38[v52] = *(void *)&v39[v52];
      swift_release(v53);
      return a1;
    }

    sub_100004090((uint64_t)v38, type metadata accessor for Proto_Gpsd_Indication);
    goto LABEL_18;
  }

  if (v44)
  {
LABEL_18:
    uint64_t v45 = sub_100003A0C(&qword_100350F30);
    memcpy(v38, v39, *(void *)(*(void *)(v45 - 8) + 64LL));
    return a1;
  }

  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v38, v39, v6);
  *(void *)&v38[*(int *)(v40 + 20)] = *(void *)&v39[*(int *)(v40 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0LL, 1LL, v40);
  return a1;
}

uint64_t sub_100283554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100283560);
}

uint64_t sub_100283560(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UnknownStorage(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  if ((_DWORD)a2 == 2147483646)
  {
    unint64_t v9 = *(void *)(a1 + a3[6] + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    int v10 = v9 - 1;
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }

  else
  {
    uint64_t v11 = sub_100003A0C(&qword_100350F20);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      uint64_t v13 = v11;
      uint64_t v14 = a3[7];
    }

    else
    {
      uint64_t v15 = sub_100003A0C(&qword_100350F28);
      uint64_t v12 = *(void *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        uint64_t v13 = v15;
        uint64_t v14 = a3[8];
      }

      else
      {
        uint64_t v13 = sub_100003A0C(&qword_100350F30);
        uint64_t v12 = *(void *)(v13 - 8);
        uint64_t v14 = a3[9];
      }
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }

uint64_t sub_10028366C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100283678);
}

uint64_t sub_100283678(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for UnknownStorage(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }

  else
  {
    if (a3 == 2147483646)
    {
      *(void *)(a1 + a4[6] + 8) = a2;
      return result;
    }

    uint64_t v13 = sub_100003A0C(&qword_100350F20);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v15 = a4[7];
    }

    else
    {
      uint64_t v16 = sub_100003A0C(&qword_100350F28);
      uint64_t v14 = *(void *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v15 = a4[8];
      }

      else
      {
        uint64_t v10 = sub_100003A0C(&qword_100350F30);
        uint64_t v14 = *(void *)(v10 - 8);
        uint64_t v15 = a4[9];
      }
    }

    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100283774(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UnknownStorage(319LL);
  if (v3 <= 0x3F)
  {
    v10[0] = *(void *)(v2 - 8) + 64LL;
    v10[1] = &unk_1002DE890;
    v10[2] = &unk_1002DED70;
    sub_1000119EC(319LL, (unint64_t *)&unk_100351110, type metadata accessor for Proto_Gpsd_Request);
    if (v5 <= 0x3F)
    {
      v10[3] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_1003514D8, type metadata accessor for Proto_Gpsd_Response);
      if (v7 <= 0x3F)
      {
        v10[4] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC(319LL, &qword_1003514E0, type metadata accessor for Proto_Gpsd_Indication);
        if (v9 <= 0x3F)
        {
          void v10[5] = *(void *)(v8 - 8) + 64LL;
          swift_initStructMetadata(a1, 256LL, 6LL, v10, a1 + 16);
        }
      }
    }
  }

uint64_t sub_100283874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100283880);
}

uint64_t sub_100283884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100283890);
}

uint64_t sub_100283894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002098C0(a1, a2, a3, (uint64_t)&unk_1002DE8F8, (uint64_t)&unk_1002DE8F8, (uint64_t)&unk_1002DE8F8);
}

uint64_t sub_1002838A8()
{
  return type metadata accessor for Proto_Gpsd_Request._StorageClass(0LL);
}

void sub_1002838B0(uint64_t a1)
{
  v80[0] = &unk_1002DE890;
  v80[1] = &unk_1002DEC80;
  v80[2] = &unk_1002DE878;
  sub_1000119EC(319LL, &qword_100366400, type metadata accessor for Proto_Gpsd_InjectAssistancePosition);
  if (v3 <= 0x3F)
  {
    v80[3] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_100366408, type metadata accessor for Proto_Gpsd_InjectAssistanceTime);
    if (v5 <= 0x3F)
    {
      v80[4] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_100366410, type metadata accessor for Proto_Gpsd_SetAssistancePressure);
      if (v7 <= 0x3F)
      {
        v80[5] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC(319LL, &qword_100366418, type metadata accessor for Proto_Gpsd_SetAssistanceAccel);
        if (v9 <= 0x3F)
        {
          v80[6] = *(void *)(v8 - 8) + 64LL;
          sub_1000119EC(319LL, &qword_100366420, type metadata accessor for Proto_Gpsd_SetAssistanceGyro);
          if (v11 <= 0x3F)
          {
            v80[7] = *(void *)(v10 - 8) + 64LL;
            sub_1000119EC(319LL, &qword_100366428, type metadata accessor for Proto_Gpsd_SetAssistanceDem);
            if (v13 <= 0x3F)
            {
              v80[8] = *(void *)(v12 - 8) + 64LL;
              sub_1000119EC(319LL, &qword_100366430, type metadata accessor for Proto_Gpsd_SetAssistanceMapVector);
              if (v15 <= 0x3F)
              {
                v80[9] = *(void *)(v14 - 8) + 64LL;
                sub_1000119EC( 319LL,  &qword_100366438,  type metadata accessor for Proto_Gpsd_SetAssistanceMotionActivityContext);
                if (v17 <= 0x3F)
                {
                  v80[10] = *(void *)(v16 - 8) + 64LL;
                  sub_1000119EC(319LL, &qword_100366440, type metadata accessor for Proto_Gpsd_SetAssistanceMountState);
                  if (v19 <= 0x3F)
                  {
                    v80[11] = *(void *)(v18 - 8) + 64LL;
                    sub_1000119EC( 319LL,  &qword_100366448,  type metadata accessor for Proto_Gpsd_SetAssistanceSignalEnvironment);
                    if (v21 <= 0x3F)
                    {
                      v80[12] = *(void *)(v20 - 8) + 64LL;
                      sub_1000119EC( 319LL,  &qword_100366450,  type metadata accessor for Proto_Gpsd_SetAssistanceSpeedConstraint);
                      if (v23 <= 0x3F)
                      {
                        v80[13] = *(void *)(v22 - 8) + 64LL;
                        sub_1000119EC( 319LL,  &qword_100366458,  type metadata accessor for Proto_Gpsd_SetAssistanceAlongTrackVelocity);
                        if (v25 <= 0x3F)
                        {
                          v80[14] = *(void *)(v24 - 8) + 64LL;
                          sub_1000119EC( 319LL,  &qword_100366460,  type metadata accessor for Proto_Gpsd_InjectAssistanceFile);
                          if (v27 <= 0x3F)
                          {
                            v80[15] = *(void *)(v26 - 8) + 64LL;
                            sub_1000119EC(319LL, &qword_100366468, type metadata accessor for Proto_Gpsd_InjectRtiFile);
                            if (v29 <= 0x3F)
                            {
                              v80[16] = *(void *)(v28 - 8) + 64LL;
                              sub_1000119EC( 319LL,  &qword_100366470,  type metadata accessor for Proto_Gpsd_InjectSvidBlocklist);
                              if (v31 <= 0x3F)
                              {
                                v80[17] = *(void *)(v30 - 8) + 64LL;
                                sub_1000119EC( 319LL,  &qword_100366478,  type metadata accessor for Proto_Gpsd_DeleteGnssData);
                                if (v33 <= 0x3F)
                                {
                                  v80[18] = *(void *)(v32 - 8) + 64LL;
                                  sub_1000119EC( 319LL,  &qword_100366480,  type metadata accessor for Proto_Gpsd_SetPvtmReport);
                                  if (v35 <= 0x3F)
                                  {
                                    v80[19] = *(void *)(v34 - 8) + 64LL;
                                    sub_1000119EC( 319LL,  &qword_100366488,  type metadata accessor for Proto_Gpsd_SetNmeaHandler);
                                    if (v37 <= 0x3F)
                                    {
                                      v80[20] = *(void *)(v36 - 8) + 64LL;
                                      sub_1000119EC( 319LL,  &qword_100366490,  type metadata accessor for Proto_Gpsd_SetConfigSimulatorMode);
                                      if (v39 <= 0x3F)
                                      {
                                        v80[21] = *(void *)(v38 - 8) + 64LL;
                                        sub_1000119EC( 319LL,  &qword_100366498,  type metadata accessor for Proto_Gpsd_SetConfigEnableGnssConstellations);
                                        if (v41 <= 0x3F)
                                        {
                                          v80[22] = *(void *)(v40 - 8) + 64LL;
                                          sub_1000119EC( 319LL,  &qword_1003664A0,  type metadata accessor for Proto_Gpsd_SetConfigDutyCycling);
                                          if (v43 <= 0x3F)
                                          {
                                            v80[23] = *(void *)(v42 - 8) + 64LL;
                                            sub_1000119EC( 319LL,  &qword_1003664A8,  type metadata accessor for Proto_Gpsd_TerminationImminent);
                                            if (v45 <= 0x3F)
                                            {
                                              v80[24] = *(void *)(v44 - 8) + 64LL;
                                              sub_1000119EC( 319LL,  &qword_1003664B0,  type metadata accessor for Proto_Gpsd_ExitMessage);
                                              if (v47 <= 0x3F)
                                              {
                                                v80[25] = *(void *)(v46 - 8) + 64LL;
                                                sub_1000119EC( 319LL,  &qword_1003664B8,  type metadata accessor for Proto_Gpsd_LtlInfo);
                                                if (v49 <= 0x3F)
                                                {
                                                  v80[26] = *(void *)(v48 - 8) + 64LL;
                                                  sub_1000119EC( 319LL,  &qword_1003664C0,  type metadata accessor for Proto_Gpsd_StartContext);
                                                  if (v51 <= 0x3F)
                                                  {
                                                    v80[27] = *(void *)(v50 - 8) + 64LL;
                                                    sub_1000119EC( 319LL,  &qword_1003664C8,  type metadata accessor for Proto_Gpsd_CntinStatusMessage);
                                                    if (v53 <= 0x3F)
                                                    {
                                                      v80[28] = *(void *)(v52 - 8) + 64LL;
                                                      sub_1000119EC( 319LL,  &qword_1003664D0,  type metadata accessor for Proto_Gpsd_SetThermalRiskState);
                                                      if (v55 <= 0x3F)
                                                      {
                                                        v80[29] = *(void *)(v54 - 8) + 64LL;
                                                        sub_1000119EC( 319LL,  &qword_1003664D8,  type metadata accessor for Proto_Gpsd_SetConfigRfBandEnable);
                                                        if (v57 <= 0x3F)
                                                        {
                                                          v80[30] = *(void *)(v56 - 8) + 64LL;
                                                          sub_1000119EC( 319LL,  &qword_1003664E0,  type metadata accessor for Proto_Gnss_Emergency_EmergConfig);
                                                          if (v59 <= 0x3F)
                                                          {
                                                            v80[31] = *(void *)(v58 - 8) + 64LL;
                                                            sub_1000119EC( 319LL,  &qword_1003664E8,  type metadata accessor for Proto_Gnss_Emergency_PositionRequest);
                                                            if (v61 <= 0x3F)
                                                            {
                                                              v80[32] = *(void *)(v60 - 8) + 64LL;
                                                              v80[33] = &unk_1002DEC80;
                                                              sub_1000119EC( 319LL,  &qword_1003664F0,  type metadata accessor for Proto_Gnss_Emergency_GpsReferenceTime);
                                                              if (v63 <= 0x3F)
                                                              {
                                                                v80[34] = *(void *)(v62 - 8) + 64LL;
                                                                sub_1000119EC( 319LL,  &qword_1003664F8,  type metadata accessor for Proto_Gnss_Emergency_ReferenceLocation);
                                                                if (v65 <= 0x3F)
                                                                {
                                                                  v80[35] = *(void *)(v64 - 8) + 64LL;
                                                                  sub_1000119EC( 319LL,  &qword_100366500,  type metadata accessor for Proto_Gnss_Emergency_GpsNavigationModel);
                                                                  if (v67 <= 0x3F)
                                                                  {
                                                                    v80[36] = *(void *)(v66 - 8) + 64LL;
                                                                    sub_1000119EC( 319LL,  &qword_100366508,  type metadata accessor for Proto_Gnss_Emergency_GpsAcqAssistance);
                                                                    if (v69 <= 0x3F)
                                                                    {
                                                                      v80[37] = *(void *)(v68 - 8) + 64LL;
                                                                      sub_1000119EC( 319LL,  &qword_100366510,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistance);
                                                                      if (v71 <= 0x3F)
                                                                      {
                                                                        v80[38] = *(void *)(v70 - 8) + 64LL;
                                                                        sub_1000119EC( 319LL,  &qword_100366518,  type metadata accessor for Proto_Gnss_Emergency_CplaneContext);
                                                                        if (v73 <= 0x3F)
                                                                        {
                                                                          v80[39] = *(void *)(v72 - 8) + 64LL;
                                                                          v80[40] = (char *)&value witness table for Builtin.BridgeObject
                                                                                  + 64;
                                                                          sub_1000119EC( 319LL,  &qword_100366520,  type metadata accessor for Proto_Gnss_Emergency_LocationId);
                                                                          if (v75 <= 0x3F)
                                                                          {
                                                                            v80[41] = *(void *)(v74 - 8) + 64LL;
                                                                            v80[42] = &unk_1002DEC80;
                                                                            v80[43] = (char *)&value witness table for Builtin.BridgeObject
                                                                                    + 64;
                                                                            v80[44] = &unk_1002DE8F8;
                                                                            v80[45] = &unk_1002DEC80;
                                                                            sub_1000119EC( 319LL,  &qword_100366528,  type metadata accessor for Proto_Gnss_Emergency_SuplContext);
                                                                            if (v77 <= 0x3F)
                                                                            {
                                                                              v80[46] = *(void *)(v76 - 8) + 64LL;
                                                                              sub_1000119EC( 319LL,  (unint64_t *)&unk_100366530,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementList);
                                                                              if (v79 <= 0x3F)
                                                                              {
                                                                                v80[47] = *(void *)(v78 - 8) + 64LL;
                                                                                swift_updateClassMetadata2( a1,  256LL,  48LL,  v80,  a1 + 80);
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_100283FF4()
{
  return type metadata accessor for Proto_Gpsd_Indication._StorageClass(0LL);
}

void sub_100283FFC(uint64_t a1)
{
  v44[0] = &unk_1002DEFA8;
  v44[1] = &unk_1002DE878;
  v44[2] = &unk_1002DE890;
  sub_1000119EC(319LL, &qword_100366BD8, type metadata accessor for Proto_Gnss_Fix);
  if (v3 <= 0x3F)
  {
    v44[3] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC( 319LL,  &qword_100366BE0,  type metadata accessor for CLP_LogEntry_PrivateData_MeasurementReportCallbackContents);
    if (v5 <= 0x3F)
    {
      v44[4] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_100366BE8, type metadata accessor for Proto_Gnss_PwrMeasurement);
      if (v7 <= 0x3F)
      {
        v44[5] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC(319LL, &qword_100366BF0, type metadata accessor for Proto_Gpsd_Status);
        if (v9 <= 0x3F)
        {
          v44[6] = *(void *)(v8 - 8) + 64LL;
          sub_1000119EC(319LL, &qword_100366BF8, type metadata accessor for Proto_Gnss_TimeTransferDataExtend);
          if (v11 <= 0x3F)
          {
            v44[7] = *(void *)(v10 - 8) + 64LL;
            sub_1000119EC(319LL, &qword_100366C00, type metadata accessor for Proto_Gpsd_RecoveryStatistics);
            if (v13 <= 0x3F)
            {
              v44[8] = *(void *)(v12 - 8) + 64LL;
              sub_1000119EC(319LL, &qword_100366C08, type metadata accessor for Proto_Gpsd_LtlInfoRequest);
              if (v15 <= 0x3F)
              {
                v44[9] = *(void *)(v14 - 8) + 64LL;
                sub_1000119EC(319LL, &qword_100366C10, type metadata accessor for Proto_Gnss_DecodedExtendedEphemeris);
                if (v17 <= 0x3F)
                {
                  v44[10] = *(void *)(v16 - 8) + 64LL;
                  sub_1000119EC(319LL, &qword_100366C18, type metadata accessor for Proto_Gnss_DecodedRti);
                  if (v19 <= 0x3F)
                  {
                    v44[11] = *(void *)(v18 - 8) + 64LL;
                    v44[12] = &unk_1002DE8A8;
                    v44[13] = &unk_1002DE8A8;
                    sub_1000119EC(319LL, &qword_100366C20, type metadata accessor for Proto_Gpsd_CntinClockControl);
                    if (v21 <= 0x3F)
                    {
                      v44[14] = *(void *)(v20 - 8) + 64LL;
                      sub_1000119EC(319LL, &qword_100366C28, type metadata accessor for Proto_Gpsd_Exception);
                      if (v23 <= 0x3F)
                      {
                        v44[15] = *(void *)(v22 - 8) + 64LL;
                        sub_1000119EC(319LL, &qword_100366C30, type metadata accessor for Proto_Gpsd_AskBasebandReset);
                        if (v25 <= 0x3F)
                        {
                          v44[16] = *(void *)(v24 - 8) + 64LL;
                          sub_1000119EC( 319LL,  &qword_100366C38,  type metadata accessor for Proto_Gnss_Emergency_SummaryReport);
                          if (v27 <= 0x3F)
                          {
                            v44[17] = *(void *)(v26 - 8) + 64LL;
                            sub_1000119EC( 319LL,  &qword_100366C40,  type metadata accessor for Proto_Gnss_Emergency_PositionReport);
                            if (v29 <= 0x3F)
                            {
                              v44[18] = *(void *)(v28 - 8) + 64LL;
                              sub_1000119EC( 319LL,  &qword_100366C48,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReport);
                              if (v31 <= 0x3F)
                              {
                                v44[19] = *(void *)(v30 - 8) + 64LL;
                                sub_1000119EC( 319LL,  &qword_100366C50,  type metadata accessor for Proto_Gnss_Emergency_AssistanceNeededReport);
                                if (v33 <= 0x3F)
                                {
                                  v44[20] = *(void *)(v32 - 8) + 64LL;
                                  sub_1000119EC( 319LL,  &qword_100366C58,  type metadata accessor for Proto_Gnss_Emergency_CellFTAssistanceRequest);
                                  if (v35 <= 0x3F)
                                  {
                                    v44[21] = *(void *)(v34 - 8) + 64LL;
                                    sub_1000119EC( 319LL,  &qword_100366C60,  type metadata accessor for Proto_Gnss_Emergency_MeasurementReportWithEstimate);
                                    if (v37 <= 0x3F)
                                    {
                                      v44[22] = *(void *)(v36 - 8) + 64LL;
                                      sub_1000119EC( 319LL,  &qword_100366C68,  type metadata accessor for Proto_Gnss_Emergency_SessionStatus);
                                      if (v39 <= 0x3F)
                                      {
                                        v44[23] = *(void *)(v38 - 8) + 64LL;
                                        sub_1000119EC( 319LL,  &qword_100366C70,  type metadata accessor for Proto_Gnss_Emergency_Init);
                                        if (v41 <= 0x3F)
                                        {
                                          v44[24] = *(void *)(v40 - 8) + 64LL;
                                          v44[25] = &unk_1002DEC80;
                                          v44[26] = &unk_1002DE9E8;
                                          v44[27] = &unk_1002DEC80;
                                          sub_1000119EC( 319LL,  (unint64_t *)&unk_100366C78,  type metadata accessor for Proto_Gnss_Emergency_WlanMeasurementRequest);
                                          if (v43 <= 0x3F)
                                          {
                                            v44[28] = *(void *)(v42 - 8) + 64LL;
                                            swift_updateClassMetadata2(a1, 256LL, 29LL, v44, a1 + 80);
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

uint64_t sub_100284424()
{
  return type metadata accessor for Proto_Gpsd_LtlInfo._StorageClass(0LL);
}

void sub_10028442C(uint64_t a1)
{
  v10[0] = &unk_1002DE8F8;
  v10[1] = &unk_1002DEC80;
  v10[2] = &unk_1002DEB50;
  sub_1000119EC(319LL, &qword_1003670C0, type metadata accessor for Proto_Gpsd_LtlInfo.LtlInitialParams);
  if (v3 <= 0x3F)
  {
    v10[3] = *(void *)(v2 - 8) + 64LL;
    sub_1000119EC(319LL, &qword_1003670C8, type metadata accessor for Proto_Gpsd_LtlInfo.LtlLutParams);
    if (v5 <= 0x3F)
    {
      v10[4] = *(void *)(v4 - 8) + 64LL;
      sub_1000119EC(319LL, &qword_1003670D0, type metadata accessor for Proto_Gpsd_LtlInfo.LtlCurrentSrcCalibData);
      if (v7 <= 0x3F)
      {
        void v10[5] = *(void *)(v6 - 8) + 64LL;
        sub_1000119EC( 319LL,  (unint64_t *)&unk_1003670D8,  type metadata accessor for Proto_Gpsd_LtlInfo.LtlRacPmicAdcPreCalData);
        if (v9 <= 0x3F)
        {
          void v10[6] = *(void *)(v8 - 8) + 64LL;
          swift_updateClassMetadata2(a1, 256LL, 7LL, v10, a1 + 80);
        }
      }
    }
  }

unint64_t sub_100284548()
{
  unint64_t result = qword_100367398;
  if (!qword_100367398)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA828, &type metadata for Proto_Gpsd_Indication.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_100367398);
  }

  return result;
}

unint64_t sub_10028458C()
{
  unint64_t result = qword_1003673A0;
  if (!qword_1003673A0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA708, &type metadata for Proto_Gpsd_Request.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_1003673A0);
  }

  return result;
}

unint64_t sub_1002845D0()
{
  unint64_t result = qword_1003673A8;
  if (!qword_1003673A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA5E8, &type metadata for Proto_Gpsd_CntinStatus);
    atomic_store(result, (unint64_t *)&qword_1003673A8);
  }

  return result;
}

unint64_t sub_100284614()
{
  unint64_t result = qword_1003673B0;
  if (!qword_1003673B0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA4C8, &type metadata for Proto_Gpsd_LtlInfoType);
    atomic_store(result, (unint64_t *)&qword_1003673B0);
  }

  return result;
}

unint64_t sub_100284658()
{
  unint64_t result = qword_1003673B8;
  if (!qword_1003673B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA3A8, &type metadata for Proto_Gpsd_CompressionType);
    atomic_store(result, (unint64_t *)&qword_1003673B8);
  }

  return result;
}

unint64_t sub_10028469C()
{
  unint64_t result = qword_1003673C0;
  if (!qword_1003673C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1002DA288, &type metadata for Proto_Gpsd_SuplInitDecodeResult);
    atomic_store(result, (unint64_t *)&qword_1003673C0);
  }

  return result;
}

id sub_1002846F0()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__listener);
}

id sub_100284700()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__queue);
}

uint64_t sub_100284710@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__dataService;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100087650(v3, a1);
}

uint64_t sub_100284760(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__dataService);
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_10001882C(v3);
  sub_1002847C0(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t sub_1002847C0(__int128 *a1, uint64_t a2)
{
  __int128 v2 = *a1;
  __int128 v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void *sub_1002847D8(uint64_t a1)
{
  return &j__swift_endAccess;
}

char *ALServiceDelegate.__allocating_init(queue:dataService:)(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return ALServiceDelegate.init(queue:dataService:)(a1, a2);
}

char *ALServiceDelegate.init(queue:dataService:)(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v2[OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__queue] = a1;
  unint64_t v27 = a2;
  sub_100087650((uint64_t)a2, (uint64_t)&v2[OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__dataService]);
  id v9 = objc_allocWithZone(&OBJC_CLASS___NSXPCListener);
  uint64_t v10 = v2;
  id v26 = a1;
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v9 initWithMachServiceName:v11];

  *(void *)&v10[OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__listener] = v12;
  unint64_t v13 = (objc_class *)type metadata accessor for ALServiceDelegate();
  v30.receiver = v10;
  v30.super_class = v13;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v30, "init");
  unint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__listener];
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__queue];
  unint64_t v17 = v14;
  [v15 _setQueue:v16];
  [v15 setDelegate:v17];
  [v15 activate];
  uint64_t v18 = xpclog.getter((uint64_t)v8);
  unint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    unint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v22 = swift_slowAlloc(32LL, -1LL);
    uint64_t v29 = v22;
    uint64_t v25 = v5;
    *(_DWORD *)unint64_t v21 = 136446210;
    uint64_t v28 = sub_1000181EC(0xD000000000000017LL, 0x80000001002F4BF0LL, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29, v21 + 4, v21 + 12);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "serviceName %{public}s started", v21, 0xCu);
    swift_arrayDestroy(v22, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1LL, -1LL);
    swift_slowDealloc(v21, -1LL, -1LL);

    sub_10001882C(v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v25);
  }

  else
  {

    sub_10001882C(v27);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  return v17;
}

unint64_t static ALServiceDelegate.serviceName()()
{
  return 0xD000000000000017LL;
}

uint64_t type metadata accessor for ALServiceDelegate()
{
  return objc_opt_self(&OBJC_CLASS____TtC5ALXPC17ALServiceDelegate);
}

uint64_t sub_100284B60(uint64_t a1, void *a2)
{
  return sub_100285C68(a2);
}

uint64_t sub_100284B68(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

uint64_t sub_100284BF0(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v20[-v7];
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [a1 valueForEntitlement:v9];

  if (v10)
  {
    _bridgeAnyObjectToAny(_:)(&v22, v10);
    swift_unknownObjectRelease(v10);
  }

  else
  {
    __int128 v22 = 0u;
    __int128 v23 = 0u;
  }

  sub_100286220((uint64_t)&v22, (uint64_t)v24);
  sub_100286268((uint64_t)v24, (uint64_t)&v22);
  if (*((void *)&v23 + 1))
  {
    if (swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, &type metadata for Bool, 6LL)
      && (v21 & 1) != 0)
    {
      xpclog.getter((uint64_t)v8);
      id v11 = a1;
      id v12 = (os_log_s *)Logger.logObject.getter(v11);
      os_log_type_t v13 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)uint64_t v14 = 67240192;
        LODWORD(v22) = [v11 processIdentifier];
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4, v14 + 4, v14 + 8);

        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Entitlement check passed for pid: %{public}d", v14, 8u);
        swift_slowDealloc(v14, -1LL, -1LL);
      }

      else
      {
      }

      uint64_t v15 = 1LL;
      goto LABEL_15;
    }
  }

  else
  {
    sub_1002862B0((uint64_t)&v22);
  }

  xpclog.getter((uint64_t)v6);
  id v16 = a1;
  id v12 = (os_log_s *)Logger.logObject.getter(v16);
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v18 = 67240192;
    LODWORD(v22) = [v16 processIdentifier];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 4, v18 + 4, v18 + 8);

    _os_log_impl( (void *)&_mh_execute_header,  v12,  v17,  "Entitlement check failed for pid:%{public}d, connection rejected",  v18,  8u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  else
  {
  }

  uint64_t v15 = 0LL;
  uint64_t v8 = v6;
LABEL_15:

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  sub_1002862B0((uint64_t)v24);
  return v15;
}

uint64_t sub_100284F08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  NSString v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  id v11 = (char *)&v34 - v10;
  id v12 = [(id)objc_opt_self(NSXPCConnection) currentConnection];
  if (v12)
  {
    os_log_type_t v13 = v12;
    uint64_t v14 = swift_allocObject(&unk_100346518, 24LL, 7LL);
    *(void *)(v14 + 16) = v2;
    uint64_t v38 = sub_100286314;
    uint64_t v39 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100285318;
    unint64_t v37 = &unk_100346530;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v16 = v39;
    os_log_type_t v17 = v2;
    swift_release(v16);
    id v18 = [v13 remoteObjectProxyWithErrorHandler:v15];
    _Block_release(v15);
    _bridgeAnyObjectToAny(_:)(aBlock, v18);
    swift_unknownObjectRelease(v18);
    uint64_t v19 = sub_100003A0C(&qword_1003675F0);
    if (swift_dynamicCast(&v35, aBlock, (char *)&type metadata for Any + 8, v19, 6LL))
    {
      uint64_t v20 = v35;
      (*(void (**)(void *__return_ptr))((swift_isaMask & *v17) + 0x68LL))(aBlock);
      char v21 = v37;
      __int128 v22 = v38;
      sub_100286330(aBlock, (uint64_t)v37);
      uint64_t v23 = swift_allocObject(&unk_100346568, 24LL, 7LL);
      *(void *)(v23 + 16) = v20;
      uint64_t v24 = (void (*)(uint64_t, uint64_t, void (*)(), uint64_t, void *, void *, uint64_t (*)(uint64_t)))*((void *)v22 + 1);
      swift_unknownObjectRetain(v20);
      v24(a1, a2, sub_100286378, v23, v13, v21, v22);
      swift_release(v23);

      swift_unknownObjectRelease(v20);
      return sub_10001882C(aBlock);
    }

    else
    {
      uint64_t v30 = xpclog.getter((uint64_t)v11);
      unint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)unint64_t v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Invalid proxy", v33, 2u);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }

  else
  {
    uint64_t v26 = xpclog.getter((uint64_t)v9);
    unint64_t v27 = (os_log_s *)Logger.logObject.getter(v26);
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Invalid current connnection", v29, 2u);
      swift_slowDealloc(v29, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }

uint64_t sub_10028525C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  xpclog.getter((uint64_t)v5);
  uint64_t v8 = a1;
  Logger._fault(_:function:file:line:)( sub_100286434,  (uint64_t)v7,  (uint64_t *)"proxyErrorHandler(error:)",  25LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Interface/XPC/ALXPCService.swift",  77LL,  2);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_100285318(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4();
  swift_release(v3);
}

uint64_t sub_1002853DC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = xpclog.getter((uint64_t)v3);
  id v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "service,onInterrupt", v7, 2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002855C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  xpclog.getter((uint64_t)v7);
  id v8 = a1;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v17 = v5;
    uint64_t v18 = v4;
    uint64_t v19 = v2;
    id v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v12 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v11 = 138543362;
    if (a1)
    {
      id v20 = v8;
      id v13 = v8;
    }

    else
    {
      id v20 = 0LL;
    }

    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21, v11 + 4, v11 + 12);
    *id v12 = a1;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "service,interruptionHandler,%{public}@", v11, 0xCu);
    uint64_t v14 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v12, 1LL, v14);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);
    uint64_t v4 = v18;
    uint64_t v5 = v17;
  }

  else
  {

    uint64_t v9 = (os_log_s *)v8;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1002857C4(a1);
}

uint64_t sub_1002857C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v6);
  os_log_type_t v10 = &v34[-v9];
  if (a1)
  {
    id v11 = a1;
    xpclog.getter((uint64_t)v10);
    id v12 = v11;
    id v13 = (os_log_s *)Logger.logObject.getter(v12);
    os_log_type_t v14 = static os_log_type_t.info.getter();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc(18LL, -1LL);
      uint64_t v38 = v4;
      uint64_t v17 = v16;
      uint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v17 = 138543618;
      uint64_t v36 = v2;
      id v39 = v12;
      int v35 = v15;
      id v19 = v12;
      uint64_t v37 = v5;
      id v20 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v17 + 4, v17 + 12);
      void *v18 = a1;

      *(_WORD *)(v17 + 12) = 1026;
      unsigned int v21 = [v20 processIdentifier];

      LODWORD(v39) = v21;
      uint64_t v2 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, (char *)&v39 + 4, v17 + 14, v17 + 18);

      uint64_t v5 = v37;
      _os_log_impl( (void *)&_mh_execute_header,  v13,  (os_log_type_t)v35,  "service,invalidationHandler,%{public}@,pid,%{public}d,exited",  (uint8_t *)v17,  0x12u);
      uint64_t v22 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v18, 1LL, v22);
      swift_slowDealloc(v18, -1LL, -1LL);
      uint64_t v23 = v17;
      uint64_t v4 = v38;
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {

      id v13 = (os_log_s *)v12;
    }

    uint64_t v31 = (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v10, v4);
    (*(void (**)(id *__return_ptr, uint64_t))((swift_isaMask & *v2) + 0x68LL))(&v39, v31);
    uint64_t v32 = v41;
    uint64_t v33 = v42;
    sub_100286330(&v39, v41);
    (*(void (**)(id, uint64_t, uint64_t))(v33 + 16))(v12, v32, v33);

    return sub_10001882C(&v39);
  }

  else
  {
    uint64_t v24 = xpclog.getter((uint64_t)v8);
    uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      os_log_type_t v28 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)unint64_t v27 = 138543362;
      id v39 = 0LL;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v27 + 4, v27 + 12);
      void *v28 = 0LL;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "serviceIvalidationHandler, invalid %{public}@", v27, 0xCu);
      uint64_t v29 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v28, 1LL, v29);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v27, -1LL, -1LL);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
  }

id ALServiceDelegate.__allocating_init()()
{
  return [objc_allocWithZone(v0) init];
}

void ALServiceDelegate.init()()
{
}

id ALServiceDelegate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ALServiceDelegate();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100285C68(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v42 - v8;
  xpclog.getter((uint64_t)&v42 - v8);
  id v10 = a1;
  id v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc(18LL, -1LL);
    uint64_t v42 = (void *)swift_slowAlloc(8LL, -1LL);
    unint64_t v43 = v2;
    *(_DWORD *)uint64_t v13 = 67240450;
    uint64_t v44 = v4;
    LODWORD(aBlock) = [v10 processIdentifier];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v13 + 4, v13 + 8);
    *(_WORD *)(v13 + 8) = 2114;
    aBlock = (void **)v10;
    id v14 = v10;
    uint64_t v4 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v47, v13 + 10, v13 + 18);
    int v15 = v42;
    void *v42 = v10;

    _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "New XPC Connection from process:%{public}d, details:(%{public}@)",  (uint8_t *)v13,  0x12u);
    uint64_t v16 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v15, 1LL, v16);
    objc_super v2 = v43;
    swift_slowDealloc(v15, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {

    id v11 = (os_log_s *)v10;
  }

  uint64_t v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v9, v4);
  int v18 = (*(uint64_t (**)(id))((swift_isaMask & *v2) + 0x90LL))(v10);
  if ((v18 & 1) != 0)
  {
    LODWORD(v44) = v18;
    [v10 setExportedObject:v2];
    id v19 = (void *)objc_opt_self(&OBJC_CLASS___NSXPCInterface);
    id v20 = [v19 interfaceWithProtocol:&OBJC_PROTOCOL____TtP5ALXPC13ALXPCProtocol_];
    [v10 setExportedInterface:v20];

    id v21 = [v19 interfaceWithProtocol:&OBJC_PROTOCOL____TtP5ALXPC13ALXPCProtocol_];
    [v10 setRemoteObjectInterface:v21];

    uint64_t v22 = swift_allocObject(&unk_100346608, 24LL, 7LL);
    swift_unknownObjectWeakInit(v22 + 16, v10);
    uint64_t v23 = swift_allocObject(&unk_100346630, 32LL, 7LL);
    *(void *)(v23 + 16) = v2;
    *(void *)(v23 + 24) = v22;
    uint64_t v50 = sub_100286500;
    uint64_t v51 = v23;
    aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256LL;
    uint64_t v48 = sub_100284B68;
    unint64_t v49 = &unk_100346648;
    uint64_t v24 = _Block_copy(&aBlock);
    uint64_t v25 = v51;
    os_log_type_t v26 = v2;
    swift_release(v25);
    [v10 setInterruptionHandler:v24];
    _Block_release(v24);
    uint64_t v27 = swift_allocObject(&unk_100346608, 24LL, 7LL);
    swift_unknownObjectWeakInit(v27 + 16, v10);
    uint64_t v28 = swift_allocObject(&unk_100346680, 32LL, 7LL);
    *(void *)(v28 + 16) = v26;
    *(void *)(v28 + 24) = v27;
    uint64_t v50 = sub_10028653C;
    uint64_t v51 = v28;
    aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256LL;
    uint64_t v48 = sub_100284B68;
    unint64_t v49 = &unk_100346698;
    uint64_t v29 = _Block_copy(&aBlock);
    uint64_t v30 = v51;
    uint64_t v31 = v26;
    swift_release(v30);
    [v10 setInvalidationHandler:v29];
    _Block_release(v29);
    [v10 _setQueue:*(void *)&v31[OBJC_IVAR____TtC5ALXPC17ALServiceDelegate__queue]];
    [v10 activate];
    xpclog.getter((uint64_t)v45);
    id v32 = v10;
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc(18LL, -1LL);
      unint64_t v43 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v35 = 67240450;
      LODWORD(aBlock) = [v32 processIdentifier];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4, v35 + 4, v35 + 8);
      *(_WORD *)(v35 + 8) = 2114;
      aBlock = (void **)v32;
      uint64_t v36 = v17;
      uint64_t v37 = v4;
      id v38 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v47, v35 + 10, v35 + 18);
      id v39 = v43;
      void *v43 = v32;

      uint64_t v4 = v37;
      uint64_t v17 = v36;
      _os_log_impl( (void *)&_mh_execute_header,  v33,  v34,  "Activated Connection from process:%{public}d, details:(%{public}@)",  (uint8_t *)v35,  0x12u);
      uint64_t v40 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v39, 1LL, v40);
      swift_slowDealloc(v39, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    else
    {

      uint64_t v33 = (os_log_s *)v32;
    }

    v17(v45, v4);
    LOBYTE(v18) = v44;
  }

  return v18 & 1;
}

uint64_t sub_100286220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_1003675E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100286268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_1003675E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002862B0(uint64_t a1)
{
  uint64_t v2 = sub_100003A0C(&qword_1003675E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_1002862F0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100286318(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100286328(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_100286330(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) + 16LL) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80LL)));
  return result;
}

uint64_t sub_100286354()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100286378()
{
  uint64_t v1 = *(void **)(v0 + 16);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v1 onData:isa];
}

uint64_t dispatch thunk of ALXPCDataService.subscribe(_:cb:id:)( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of ALXPCDataService.unsubscribe(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t method lookup function for ALServiceDelegate(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALServiceDelegate);
}

uint64_t dispatch thunk of ALServiceDelegate.__allocating_init(queue:dataService:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ALServiceDelegate.listener(_:shouldAcceptNewConnection:)()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x88LL))();
}

uint64_t dispatch thunk of ALServiceDelegate.onData(_:)()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x98LL))();
}

uint64_t dispatch thunk of ALServiceDelegate.onInterrupt()()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA0LL))();
}

uint64_t sub_100286434()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v7 = 0LL;
  unint64_t v8 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(21LL);
  uint64_t v11 = 0LL;
  unint64_t v12 = 0xE000000000000000LL;
  v2._object = (void *)0x80000001002F4D30LL;
  v2._countAndFlagsBits = 0xD000000000000013LL;
  String.append(_:)(v2);
  swift_getErrorValue(v1, v10, &v7);
  v3._countAndFlagsBits = Error.localizedDescription.getter(v8, v9);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 0LL;
  v5._object = (void *)0xE000000000000000LL;
  String.append(_:)(v5);
  return v11;
}

uint64_t sub_1002864D8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100286500()
{
}

uint64_t sub_100286510()
{
  swift_release(*(void *)(v0 + 24));
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10028653C()
{
}

void sub_100286548(void (*a1)(void))
{
  uint64_t v3 = *(void *)(v1 + 24) + 16LL;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
  a1();
}

uint64_t sub_1002865B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  v17[0] = 47LL;
  v17[1] = 0xE100000000000000LL;
  unint64_t v6 = sub_1002866B4();
  uint64_t v7 = StringProtocol.components<A>(separatedBy:)(v17, &type metadata for String, &type metadata for String, v6, v6);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9)
  {
    uint64_t v10 = v7 + 16 * v9;
    uint64_t v12 = *(void *)(v10 + 16);
    uint64_t v11 = *(void *)(v10 + 24);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRelease(v8);
    uint64_t v18 = v12;
    uint64_t v19 = v11;
    swift_bridgeObjectRetain(v11);
    v13._countAndFlagsBits = 35LL;
    v13._object = (void *)0xE100000000000000LL;
    String.append(_:)(v13);
    swift_bridgeObjectRelease(v11);
    uint64_t v14 = v19;
    swift_bridgeObjectRetain(v19);
    v15._countAndFlagsBits = a3;
    v15._object = a4;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v14);
    return v18;
  }

  else
  {
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRetain(a4);
  }

  return a3;
}

unint64_t sub_1002866B4()
{
  unint64_t result = qword_1003676F0;
  if (!qword_1003676F0)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1003676F0);
  }

  return result;
}

uint64_t Logger._fault(_:function:file:line:)( uint64_t (*a1)(void), uint64_t a2, uint64_t *a3, uint64_t a4, char a5, unint64_t a6, uint64_t a7, char a8)
{
  uint64_t result = a1();
  uint64_t v17 = result;
  unint64_t v19 = v18;
  if ((a8 & 1) == 0)
  {
    if (a6)
    {
      id v20 = (uint64_t *)a6;
      uint64_t v21 = a7;
      goto LABEL_11;
    }

    __break(1u);
    goto LABEL_26;
  }

  unint64_t v16 = HIDWORD(a6);
  if (HIDWORD(a6))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  LODWORD(vswift_unknownObjectWeakDestroy(v0 + 16) = WORD1(a6);
  if (WORD1(a6) > 0x10u) {
    goto LABEL_27;
  }
  if ((a6 & 0xFFFFFF80) == 0)
  {
    if (a6 > 0xFF)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }

    unsigned int v22 = (a6 + 1);
    goto LABEL_10;
  }

LABEL_28:
  int v41 = (a6 & 0x3F) << 8;
  unsigned int v42 = (v41 | (a6 >> 6)) + 33217;
  unsigned int v43 = (v41 | (a6 >> 6) & 0x3F) << 8;
  unsigned int v44 = (((v43 | (a6 >> 12) & 0x3F) << 8) | (a6 >> 18)) - 2122219023;
  unsigned int v45 = (v43 | (a6 >> 12)) + 8487393;
  if ((_DWORD)v16) {
    unsigned int v22 = v44;
  }
  else {
    unsigned int v22 = v45;
  }
LABEL_10:
  unsigned int v23 = __clz(v22);
  uint64_t v21 = 4LL - (v23 >> 3);
  uint64_t v52 = (v22 + 0xFEFEFEFEFEFEFFLL) & ~(-1LL << (8 * ((4 - (v23 >> 3)) & 7)));
  id v20 = &v52;
LABEL_11:
  uint64_t result = static String._fromUTF8Repairing(_:)(v20, v21);
  a6 = result;
  a2 = v24;
  if ((a5 & 1) != 0)
  {
    unint64_t v16 = (unint64_t)a3 >> 32;
    if ((unint64_t)a3 >> 32)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }

    if (a3 >> 11 == 27)
    {
LABEL_46:
      __break(1u);
      return result;
    }

    LODWORD(vswift_unknownObjectWeakDestroy(v0 + 16) = a3 >> 16;
    if (a3 >> 16 > 0x10)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      int v46 = (a3 & 0x3F) << 8;
      unsigned int v47 = (v46 | (a3 >> 6)) + 33217;
      unsigned int v48 = (v46 | (a3 >> 6) & 0x3F) << 8;
      unsigned int v49 = (((v48 | (a3 >> 12) & 0x3F) << 8) | (a3 >> 18)) - 2122219023;
      unsigned int v50 = (v48 | (a3 >> 12)) + 8487393;
      if ((_DWORD)v16) {
        unsigned int v27 = v49;
      }
      else {
        unsigned int v27 = v50;
      }
      goto LABEL_20;
    }

    if (a3 <= 0xFF)
    {
      unsigned int v27 = ((_BYTE)a3 + 1);
LABEL_20:
      unsigned int v28 = __clz(v27);
      uint64_t v26 = 4LL - (v28 >> 3);
      uint64_t v52 = (v27 + 0xFEFEFEFEFEFEFFLL) & ~(-1LL << (8 * ((4 - (v28 >> 3)) & 7)));
      uint64_t v25 = &v52;
      goto LABEL_21;
    }

    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }

  if (!a3)
  {
    __break(1u);
    goto LABEL_35;
  }

  uint64_t v25 = a3;
  uint64_t v26 = a4;
LABEL_21:
  uint64_t v29 = static String._fromUTF8Repairing(_:)(v25, v26);
  uint64_t v31 = v30;
  uint64_t v32 = sub_1002865B8(a6, a2, v29, v30);
  unint64_t v34 = v33;
  swift_bridgeObjectRelease(a2);
  uint64_t v35 = swift_bridgeObjectRelease(v31);
  os_log_type_t v36 = static os_log_type_t.fault.getter(v35);
  swift_bridgeObjectRetain_n(v34, 2LL);
  uint64_t v37 = swift_bridgeObjectRetain(v19);
  id v38 = (os_log_s *)Logger.logObject.getter(v37);
  if (os_log_type_enabled(v38, v36))
  {
    uint64_t v39 = swift_slowAlloc(22LL, -1LL);
    uint64_t v40 = swift_slowAlloc(64LL, -1LL);
    uint64_t v52 = v40;
    *(_DWORD *)uint64_t v39 = 136315394;
    swift_bridgeObjectRetain(v34);
    uint64_t v51 = sub_1000181EC(v32, v34, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v39 + 4, v39 + 12);
    swift_bridgeObjectRelease_n(v34, 3LL);
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain(v19);
    uint64_t v51 = sub_1000181EC(v17, v19, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v39 + 14, v39 + 22);
    swift_bridgeObjectRelease_n(v19, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v38, v36, "fault,func,%s,message,%s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy(v40, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v40, -1LL, -1LL);
    swift_slowDealloc(v39, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(v19, 2LL);
    swift_bridgeObjectRelease_n(v34, 2LL);
  }

  reportBug(type:subType:subTypeContext:fatalCallback:)( 0x746C756166LL,  0xE500000000000000LL,  v32,  v34,  0LL,  0LL,  0LL,  0LL);
  return swift_bridgeObjectRelease(v34);
}

  __break(1u);
  return result;
}

uint64_t Logger._fatal(_:function:file:line:)( uint64_t (*a1)(void), uint64_t a2, uint64_t *a3, uint64_t a4, char a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v56 = a1();
  if ((a8 & 1) != 0)
  {
    unint64_t v19 = (unint64_t)a6 >> 32;
    if (a6 >> 11 != 27)
    {
      LODWORD(v19) = a6 >> 16;
      if (a6 <= 0xFF)
      {
        uint64_t v9 = v18;
        unsigned int v22 = ((_BYTE)a6 + 1);
        goto LABEL_10;
      }

      __break(1u);
LABEL_31:
      __break(1u);
    }

    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t v29 = a3;
    uint64_t v30 = a4;
    goto LABEL_43;
  }

  if (!a6) {
    goto LABEL_20;
  }
  uint64_t v9 = v18;
  id v20 = a6;
  uint64_t v21 = a7;
  while (1)
  {
    uint64_t v10 = static String._fromUTF8Repairing(_:)(v20, v21);
    a2 = (uint64_t)v18;
    if ((a5 & 1) == 0)
    {
      if (a3) {
        goto LABEL_34;
      }
      __break(1u);
    }

    unint64_t v19 = (unint64_t)a3 >> 32;
    LODWORD(v19) = a3 >> 16;
    if (a3 <= 0xFF)
    {
      unsigned int v36 = ((_BYTE)a3 + 1);
      goto LABEL_42;
    }

    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    uint64_t v9 = v18;
    int v24 = (a6 & 0x3F) << 8;
    unsigned int v25 = (v24 | (a6 >> 6)) + 33217;
    unsigned int v26 = (v24 | (a6 >> 6) & 0x3F) << 8;
    unsigned int v27 = (((v26 | (a6 >> 12) & 0x3F) << 8) | (a6 >> 18)) - 2122219023;
    unsigned int v28 = (v26 | (a6 >> 12)) + 8487393;
    if ((_DWORD)v19) {
      unsigned int v22 = v27;
    }
    else {
      unsigned int v22 = v28;
    }
LABEL_10:
    unsigned int v23 = __clz(v22);
    uint64_t v21 = 4LL - (v23 >> 3);
    uint64_t v58 = (v22 + 0xFEFEFEFEFEFEFFLL) & ~(-1LL << (8 * ((4 - (v23 >> 3)) & 7)));
    id v20 = &v58;
  }

  int v31 = (a3 & 0x3F) << 8;
  unsigned int v32 = (v31 | (a3 >> 6)) + 33217;
  unsigned int v33 = (v31 | (a3 >> 6) & 0x3F) << 8;
  unsigned int v34 = (((v33 | (a3 >> 12) & 0x3F) << 8) | (a3 >> 18)) - 2122219023;
  unsigned int v35 = (v33 | (a3 >> 12)) + 8487393;
  if ((_DWORD)v19) {
    unsigned int v36 = v34;
  }
  else {
    unsigned int v36 = v35;
  }
LABEL_42:
  unsigned int v37 = __clz(v36);
  uint64_t v30 = 4LL - (v37 >> 3);
  uint64_t v58 = (v36 + 0xFEFEFEFEFEFEFFLL) & ~(-1LL << (8 * ((4 - (v37 >> 3)) & 7)));
  uint64_t v29 = &v58;
LABEL_43:
  uint64_t v38 = static String._fromUTF8Repairing(_:)(v29, v30);
  uint64_t v40 = v39;
  uint64_t v55 = sub_1002865B8(v10, a2, v38, v39);
  unint64_t v42 = v41;
  swift_bridgeObjectRelease(a2);
  uint64_t v43 = swift_bridgeObjectRelease(v40);
  LOBYTE(v40) = static os_log_type_t.error.getter(v43);
  swift_bridgeObjectRetain_n(v42, 2LL);
  uint64_t v44 = swift_bridgeObjectRetain_n(v9, 2LL);
  unsigned int v45 = (os_log_s *)Logger.logObject.getter(v44);
  os_log_type_t type = v40;
  if (os_log_type_enabled(v45, (os_log_type_t)v40))
  {
    uint64_t v46 = swift_slowAlloc(22LL, -1LL);
    uint64_t v53 = swift_slowAlloc(64LL, -1LL);
    uint64_t v58 = v53;
    *(_DWORD *)uint64_t v46 = 136315394;
    swift_bridgeObjectRetain(v42);
    uint64_t v57 = sub_1000181EC(v55, v42, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v46 + 4, v46 + 12);
    swift_bridgeObjectRelease_n(v42, 3LL);
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain(v9);
    uint64_t v57 = sub_1000181EC(v56, (unint64_t)v9, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v46 + 14, v46 + 22);
    swift_bridgeObjectRelease_n(v9, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v45, type, "fatal,func,%s,message,%s", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy(v53, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1LL, -1LL);
    swift_slowDealloc(v46, -1LL, -1LL);
  }

  else
  {
    swift_bridgeObjectRelease_n(v9, 2LL);
    swift_bridgeObjectRelease_n(v42, 2LL);
  }

  uint64_t v47 = swift_allocObject(&unk_1003466E0, 64LL, 7LL);
  *(void *)(v47 + swift_unknownObjectWeakDestroy(v0 + 16) = v56;
  *(void *)(v47 + 24) = v9;
  *(void *)(v47 + 32) = a6;
  *(void *)(v47 + 40) = a7;
  *(_BYTE *)(v47 + 48) = a8;
  *(void *)(v47 + 56) = a9;
  swift_bridgeObjectRetain_n(v9, 2LL);
  swift_bridgeObjectRetain(v42);
  reportBug(type:subType:subTypeContext:fatalCallback:)( 0x6C61746166LL,  0xE500000000000000LL,  v55,  v42,  v56,  v9,  (void (*)(void))sub_100287704,  v47);
  swift_bridgeObjectRelease(v42);
  swift_bridgeObjectRelease(v9);
  swift_release(v47);
  [(id)objc_opt_self(NSThread) sleepForTimeInterval:10.0];
  uint64_t v58 = 0LL;
  unint64_t v59 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(19LL);
  v48._object = (void *)0x80000001002F4DC0LL;
  v48._countAndFlagsBits = 0xD000000000000011LL;
  String.append(_:)(v48);
  Double.write<A>(to:)( &v58,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation,  10.0);
  uint64_t v49 = v58;
  unsigned int v50 = (void *)v59;
  uint64_t v58 = v56;
  unint64_t v59 = (unint64_t)v9;
  swift_bridgeObjectRetain(v9);
  v51._countAndFlagsBits = v49;
  v51._object = v50;
  String.append(_:)(v51);
  swift_bridgeObjectRelease(v50);
  swift_bridgeObjectRelease(v9);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11LL, 2LL, v58, v59, a6, a7, a8, a9, 0);
  __break(1u);
  return result;
}

void *sub_1002870B8()
{
  return &unk_1003466C0;
}

unint64_t sub_1002870C4()
{
  return 0xD000000000000013LL;
}

uint64_t sub_1002870E0(uint64_t a1)
{
  return sub_100287250(a1, qword_1003C0748, 1701998435LL, 0xE400000000000000LL);
}

uint64_t sub_1002870F8()
{
  return sub_100287544(&qword_1003C0740, (uint64_t)qword_1003C0748, (uint64_t)sub_1002870E0);
}

uint64_t static ALLogger.core.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C0740, (uint64_t)qword_1003C0748, (uint64_t)sub_1002870E0, a1);
}

uint64_t sub_100287130(uint64_t a1)
{
  return sub_100287250(a1, qword_1003C0768, 1818850421LL, 0xE400000000000000LL);
}

uint64_t sub_100287148()
{
  return sub_100287544(&qword_1003C0760, (uint64_t)qword_1003C0768, (uint64_t)sub_100287130);
}

uint64_t static ALLogger.util.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C0760, (uint64_t)qword_1003C0768, (uint64_t)sub_100287130, a1);
}

uint64_t sub_100287180@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = sub_10000E704(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a4, v7, v6);
}

uint64_t sub_1002871E8(uint64_t a1)
{
  return sub_100287250(a1, qword_1003C0788, 6516856LL, 0xE300000000000000LL);
}

uint64_t sub_100287200()
{
  return sub_100287544(&qword_1003C0780, (uint64_t)qword_1003C0788, (uint64_t)sub_1002871E8);
}

uint64_t static ALLogger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C0780, (uint64_t)qword_1003C0788, (uint64_t)sub_1002871E8, a1);
}

uint64_t sub_100287238(uint64_t a1)
{
  return sub_100287250(a1, qword_1003C07A8, 6516850LL, 0xE300000000000000LL);
}

uint64_t sub_100287250(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger(0LL);
  sub_100015614(v7, a2);
  sub_10000E704(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000013LL, 0x80000001002F4DA0LL, a3, a4);
}

uint64_t sub_1002872C4()
{
  return sub_100287544(&qword_1003C07A0, (uint64_t)qword_1003C07A8, (uint64_t)sub_100287238);
}

uint64_t static ALLogger.rpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C07A0, (uint64_t)qword_1003C07A8, (uint64_t)sub_100287238, a1);
}

uint64_t sub_1002872FC(uint64_t a1)
{
  return sub_10028737C(a1, qword_1003C07C8, &qword_1003C0740, (uint64_t)qword_1003C0748, (uint64_t)sub_1002870E0);
}

uint64_t sub_100287320()
{
  return sub_100287544(&qword_1003C07C0, (uint64_t)qword_1003C07C8, (uint64_t)sub_1002872FC);
}

uint64_t corelog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C07C0, (uint64_t)qword_1003C07C8, (uint64_t)sub_1002872FC, a1);
}

uint64_t sub_100287358(uint64_t a1)
{
  return sub_10028737C(a1, qword_1003C07E8, &qword_1003C0740, (uint64_t)qword_1003C0748, (uint64_t)sub_1002870E0);
}

uint64_t sub_10028737C(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Logger(0LL);
  sub_100015614(v9, a2);
  uint64_t v10 = sub_10000E704(v9, (uint64_t)a2);
  if (*a3 != -1LL) {
    swift_once(a3, a5);
  }
  uint64_t v11 = sub_10000E704(v9, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16LL))(v10, v11, v9);
}

uint64_t sub_100287414()
{
  return sub_100287544(&qword_1003C07E0, (uint64_t)qword_1003C07E8, (uint64_t)sub_100287358);
}

uint64_t allog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C07E0, (uint64_t)qword_1003C07E8, (uint64_t)sub_100287358, a1);
}

uint64_t sub_10028744C(uint64_t a1)
{
  return sub_10028737C(a1, qword_1003C0808, &qword_1003C07A0, (uint64_t)qword_1003C07A8, (uint64_t)sub_100287238);
}

uint64_t sub_100287470()
{
  return sub_100287544(&qword_1003C0800, (uint64_t)qword_1003C0808, (uint64_t)sub_10028744C);
}

uint64_t rpclog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C0800, (uint64_t)qword_1003C0808, (uint64_t)sub_10028744C, a1);
}

uint64_t sub_1002874A8(uint64_t a1)
{
  return sub_10028737C(a1, qword_1003C0828, &qword_1003C0760, (uint64_t)qword_1003C0768, (uint64_t)sub_100287130);
}

uint64_t sub_1002874CC()
{
  return sub_100287544(&qword_1003C0820, (uint64_t)qword_1003C0828, (uint64_t)sub_1002874A8);
}

uint64_t utillog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C0820, (uint64_t)qword_1003C0828, (uint64_t)sub_1002874A8, a1);
}

uint64_t sub_100287504(uint64_t a1)
{
  return sub_10028737C(a1, qword_1003C0848, &qword_1003C0780, (uint64_t)qword_1003C0788, (uint64_t)sub_1002871E8);
}

uint64_t sub_100287528()
{
  return sub_100287544(&qword_1003C0840, (uint64_t)qword_1003C0848, (uint64_t)sub_100287504);
}

uint64_t sub_100287544(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL);
  return sub_10000E704(v4, a2);
}

uint64_t xpclog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100287180(&qword_1003C0840, (uint64_t)qword_1003C0848, (uint64_t)sub_100287504, a1);
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Optional(0LL, a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - v9, a1, v7);
  uint64_t v11 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1LL, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    void v18[3] = &type metadata for String;
    v18[4] = &protocol witness table for String;
    v18[0] = 7104878LL;
    v18[1] = 0xE300000000000000LL;
  }

  else
  {
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    uint64_t v12 = sub_100287740(&v15);
    (*(void (**)(void *, char *, uint64_t))(v11 + 32))(v12, v10, a2);
    sub_1002847C0(&v15, (uint64_t)v18);
  }

  uint64_t v13 = sub_100003A0C(&qword_1003676F8);
  _print_unlocked<A, B>(_:_:)( v18,  v3,  v13,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  return sub_10001882C(v18);
}

uint64_t sub_1002876E0()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

void sub_100287704()
{
}

void *sub_100287740(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

uint64_t type metadata accessor for ALLogger()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ALUtil8ALLogger);
}

uint64_t method lookup function for ALLogger(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALLogger);
}

void reportBug(type:subType:subTypeContext:fatalCallback:)( uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, NSString a6, void (*a7)(void), uint64_t a8)
{
  uint64_t v75 = a8;
  uint64_t v15 = type metadata accessor for Logger(0LL);
  uint64_t v77 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v71 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v76 = (char *)&v65 - v18;
  uint64_t v78 = (char *)[objc_allocWithZone(NSProcessInfo) init];
  Class v19 = (Class)[objc_allocWithZone(SDRDiagnosticReporter) init];
  NSString v20 = String._bridgeToObjectiveC()();
  uint64_t v68 = a1;
  unint64_t v72 = a2;
  NSString v21 = String._bridgeToObjectiveC()();
  uint64_t v69 = a3;
  unint64_t v73 = a4;
  NSString v22 = String._bridgeToObjectiveC()();
  unint64_t v74 = (unint64_t)a6;
  uint64_t v70 = a5;
  uint64_t v23 = v15;
  if (a6) {
    a6 = String._bridgeToObjectiveC()();
  }
  NSString v24 = [v78 processName];
  if (!v24)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
    unsigned int v25 = a7;
    uint64_t v27 = v26;
    NSString v24 = String._bridgeToObjectiveC()();
    uint64_t v28 = v27;
    a7 = v25;
    swift_bridgeObjectRelease(v28);
  }

  uint64_t v29 = (char *) -[objc_class signatureWithDomain:type:subType:subtypeContext:detectedProcess:triggerThresholdValues:]( v19,  "signatureWithDomain:type:subType:subtypeContext:detectedProcess:triggerThresholdValues:",  v20,  v21,  v22,  a6,  v24,  0LL);

  if (!v29)
  {
    uint64_t v47 = sub_1002874CC();
    uint64_t v48 = v77;
    uint64_t v49 = v71;
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 16))(v71, v47, v23);
    Swift::String v51 = (os_log_s *)Logger.logObject.getter(v50);
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = a7;
      uint64_t v54 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "reportBugBlocking,signature,nil", v54, 2u);
      uint64_t v55 = v54;
      a7 = v53;
      uint64_t v48 = v77;
      swift_slowDealloc(v55, -1LL, -1LL);
    }

    uint64_t v56 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v23);
    if (a7) {
      a7(v56);
    }
    goto LABEL_24;
  }

  unint64_t v71 = v29;
  if (a7) {
    double v30 = 0.0;
  }
  else {
    double v30 = 6.0;
  }
  uint64_t v31 = sub_1002874CC();
  unsigned int v32 = v76;
  uint64_t v33 = v77;
  unint64_t v34 = v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v31, v23);
  unint64_t v35 = v74;
  swift_bridgeObjectRetain_n(v74, 2LL);
  unint64_t v36 = v72;
  swift_bridgeObjectRetain_n(v72, 2LL);
  unint64_t v37 = v73;
  uint64_t v38 = swift_bridgeObjectRetain_n(v73, 2LL);
  uint64_t v39 = (os_log_s *)Logger.logObject.getter(v38);
  os_log_type_t v40 = static os_log_type_t.default.getter();
  int v67 = v40;
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc(42LL, -1LL);
    uint64_t v65 = swift_slowAlloc(96LL, -1LL);
    aBlock[0] = v65;
    *(_DWORD *)uint64_t v41 = 136315906;
    uint64_t v66 = a7;
    swift_bridgeObjectRetain(v36);
    uint64_t v79 = sub_1000181EC(v68, v36, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, aBlock, v41 + 4, v41 + 12);
    swift_bridgeObjectRelease_n(v36, 3LL);
    uint64_t v42 = v33;
    *(_WORD *)(v41 + 12) = 2080;
    swift_bridgeObjectRetain(v37);
    uint64_t v79 = sub_1000181EC(v69, v37, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, aBlock, v41 + 14, v41 + 22);
    swift_bridgeObjectRelease_n(v37, 3LL);
    *(_WORD *)(v41 + 22) = 2080;
    if (v35) {
      uint64_t v43 = v70;
    }
    else {
      uint64_t v43 = 45LL;
    }
    if (v35) {
      unint64_t v44 = v35;
    }
    else {
      unint64_t v44 = 0xE100000000000000LL;
    }
    unint64_t v73 = v34;
    swift_bridgeObjectRetain(v35);
    uint64_t v45 = v43;
    a7 = v66;
    uint64_t v79 = sub_1000181EC(v45, v44, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, aBlock, v41 + 24, v41 + 32);
    swift_bridgeObjectRelease_n(v35, 2LL);
    swift_bridgeObjectRelease(v44);
    *(_WORD *)(v41 + 32) = 2048;
    uint64_t v79 = *(void *)&v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, aBlock, v41 + 34, v41 + 42);
    _os_log_impl( (void *)&_mh_execute_header,  v39,  (os_log_type_t)v67,  "reportBug,type:%s,subtype:%s,context:%s,delay:%f",  (uint8_t *)v41,  0x2Au);
    uint64_t v46 = v65;
    swift_arrayDestroy(v65, 3LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1LL, -1LL);
    swift_slowDealloc(v41, -1LL, -1LL);

    (*(void (**)(char *, unint64_t))(v42 + 8))(v76, v73);
  }

  else
  {

    swift_bridgeObjectRelease_n(v35, 2LL);
    swift_bridgeObjectRelease_n(v37, 2LL);
    swift_bridgeObjectRelease_n(v36, 2LL);
    (*(void (**)(char *, unint64_t))(v33 + 8))(v32, v34);
  }

  aBlock[0] = 0LL;
  uint64_t v57 = v71;
  static Dictionary._forceBridgeFromObjectiveC(_:result:)();
  uint64_t v58 = aBlock[0];
  if (aBlock[0])
  {

    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v58);
    uint64_t v60 = swift_allocObject(&unk_100346780, 32LL, 7LL);
    uint64_t v61 = v75;
    *(void *)(v60 + swift_unknownObjectWeakDestroy(v0 + 16) = a7;
    *(void *)(v60 + 24) = v61;
    aBlock[4] = (uint64_t)sub_100288444;
    uint64_t v81 = v60;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_1002883A0;
    void aBlock[3] = (uint64_t)&unk_100346798;
    uint64_t v62 = _Block_copy(aBlock);
    uint64_t v63 = (uint64_t)a7;
    uint64_t v64 = v81;
    sub_100288484(v63, v61);
    swift_release(v64);
    -[objc_class snapshotWithSignature:delay:events:payload:actions:reply:]( v19,  "snapshotWithSignature:delay:events:payload:actions:reply:",  isa,  0LL,  0LL,  0LL,  v62,  v30);
    _Block_release(v62);

    uint64_t v78 = v57;
    Class v19 = isa;
LABEL_24:

    return;
  }

  __break(1u);
}

uint64_t sub_100287E34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v47 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v47 - v13;
  if (a1)
  {
    id v50 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(kSymptomDiagnosticReplySuccess);
    unint64_t v51 = v15;
    swift_bridgeObjectRetain(a1);
    AnyHashable.init<A>(_:)(&v52, &v50, &type metadata for String, &protocol witness table for String);
    if (*(void *)(a1 + 16) && (unint64_t v16 = sub_100288494((uint64_t)&v52), (v17 & 1) != 0))
    {
      sub_10001884C(*(void *)(a1 + 56) + 32 * v16, (uint64_t)&v54);
    }

    else
    {
      __int128 v54 = 0u;
      __int128 v55 = 0u;
    }

    sub_1002884C4((uint64_t)&v52);
    if (*((void *)&v55 + 1))
    {
      unint64_t v18 = sub_1002884F8();
      if ((swift_dynamicCast(&v50, &v54, (char *)&type metadata for Any + 8, v18, 6LL) & 1) != 0)
      {
        id v19 = v50;
        if ([v50 BOOLValue])
        {
          swift_bridgeObjectRelease(a1);
          uint64_t v20 = sub_1002874CC();
          uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v14, v20, v2);
          NSString v22 = (os_log_s *)Logger.logObject.getter(v21);
          os_log_type_t v23 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v22, v23))
          {
            NSString v24 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
            *(_WORD *)NSString v24 = 0;
            _os_log_impl((void *)&_mh_execute_header, v22, v23, "reportBug,successful", v24, 2u);
            swift_slowDealloc(v24, -1LL, -1LL);
          }

          return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v14, v2);
        }

        uint64_t v36 = sub_1002874CC();
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v36, v2);
        uint64_t v37 = swift_bridgeObjectRetain(a1);
        uint64_t v38 = (void *)Logger.logObject.getter(v37);
        int v39 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled((os_log_t)v38, (os_log_type_t)v39))
        {

          swift_bridgeObjectRelease_n(a1, 2LL);
LABEL_33:

          return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
        }

        int v48 = v39;
        os_log_type_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v47 = swift_slowAlloc(32LL, -1LL);
        uint64_t v49 = v47;
        *(_DWORD *)os_log_type_t v40 = 136315138;
        id v50 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(kSymptomDiagnosticReplyReasonString);
        unint64_t v51 = v41;
        AnyHashable.init<A>(_:)(&v52, &v50, &type metadata for String, &protocol witness table for String);
        if (*(void *)(a1 + 16) && (unint64_t v42 = sub_100288494((uint64_t)&v52), (v43 & 1) != 0))
        {
          sub_10001884C(*(void *)(a1 + 56) + 32 * v42, (uint64_t)&v54);
        }

        else
        {
          __int128 v54 = 0u;
          __int128 v55 = 0u;
        }

        sub_1002884C4((uint64_t)&v52);
        if (*((void *)&v55 + 1))
        {
          if ((swift_dynamicCast(&v50, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
          {
            uint64_t v44 = (uint64_t)v50;
            unint64_t v45 = v51;
LABEL_32:
            uint64_t v52 = sub_1000181EC(v44, v45, &v49);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53, v40 + 4, v40 + 12);
            swift_bridgeObjectRelease_n(a1, 2LL);
            swift_bridgeObjectRelease(v45);
            _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v38,  (os_log_type_t)v48,  "reportBug,failed,reason,%s ",  v40,  0xCu);
            uint64_t v46 = v47;
            swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v46, -1LL, -1LL);
            swift_slowDealloc(v40, -1LL, -1LL);

            goto LABEL_33;
          }
        }

        else
        {
          sub_1002862B0((uint64_t)&v54);
        }

        unint64_t v45 = 0xE700000000000000LL;
        uint64_t v44 = 0x6E776F6E6B6E75LL;
        goto LABEL_32;
      }

      swift_bridgeObjectRelease(a1);
    }

    else
    {
      swift_bridgeObjectRelease(a1);
      sub_1002862B0((uint64_t)&v54);
    }

    uint64_t v31 = sub_1002874CC();
    uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v31, v2);
    uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v34))
    {
      unint64_t v35 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)unint64_t v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "reportBug,response,malformed", v35, 2u);
      swift_slowDealloc(v35, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }

  else
  {
    uint64_t v26 = sub_1002874CC();
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v26, v2);
    uint64_t v28 = (os_log_s *)Logger.logObject.getter(v27);
    uint64_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      double v30 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)double v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v29, "reportBug,response,nil", v30, 2u);
      swift_slowDealloc(v30, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }

uint64_t sub_1002883A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  if (a2) {
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( a2,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
  }
  else {
    uint64_t v4 = 0LL;
  }
  swift_retain(v2);
  v3(v4);
  swift_release(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_100288418()
{
  if (*(void *)(v0 + 16)) {
    swift_release(*(void *)(v0 + 24));
  }
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100288444(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t result = sub_100287E34(a1);
  if (v2) {
    return v2(result);
  }
  return result;
}

uint64_t sub_10028846C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10028847C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100288484(uint64_t result, uint64_t a2)
{
  if (result) {
    return swift_retain(a2);
  }
  return result;
}

unint64_t sub_100288494(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100288534(a1, v4);
}

uint64_t sub_1002884C4(uint64_t a1)
{
  return a1;
}

unint64_t sub_1002884F8()
{
  unint64_t result = qword_100367D40;
  if (!qword_100367D40)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSNumber);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100367D40);
  }

  return result;
}

unint64_t sub_100288534(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0)
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1002885F8(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_1002884C4((uint64_t)v9);
      if ((v7 & 1) != 0) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0);
  }

  return v4;
}

uint64_t sub_1002885F8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_100288634()
{
  return &unk_1002DF3E8;
}

uint64_t MsInSec.getter()
{
  return 1000LL;
}

void *sub_100288648()
{
  return &unk_1002DF3F0;
}

uint64_t UsInSec.getter()
{
  return 1000000LL;
}

void *sub_100288660()
{
  return &unk_1002DF3F8;
}

uint64_t NsInSec.getter()
{
  return 1000000000LL;
}

void *sub_100288678()
{
  return &unk_1002DF400;
}

void *sub_100288684()
{
  return &unk_1002DF408;
}

void *sub_100288690()
{
  return &unk_1002DF410;
}

void *sub_10028869C()
{
  return &unk_1002DF418;
}

uint64_t SecInMin.getter()
{
  return 60LL;
}

void *sub_1002886B0()
{
  return &unk_1002DF420;
}

uint64_t SecInHr.getter()
{
  return 3600LL;
}

void sub_1002886C4()
{
  qword_1003C0868 = 0x3F50624DD2F1A9FCLL;
}

uint64_t *sub_1002886E0()
{
  if (qword_1003C0860 != -1) {
    swift_once(&qword_1003C0860, sub_1002886C4);
  }
  return &qword_1003C0868;
}

double NsToUs.getter()
{
  return sub_100288A0C(&qword_1003C0860, (uint64_t)&qword_1003C0868, (uint64_t)sub_1002886C4);
}

void sub_10028873C()
{
  qword_1003C0878 = 0x3EB0C6F7A0B5ED8DLL;
}

uint64_t *sub_100288758()
{
  if (qword_1003C0870 != -1) {
    swift_once(&qword_1003C0870, sub_10028873C);
  }
  return &qword_1003C0878;
}

double NsToMs.getter()
{
  return sub_100288A0C(&qword_1003C0870, (uint64_t)&qword_1003C0878, (uint64_t)sub_10028873C);
}

void sub_1002887B4()
{
  qword_1003C0888 = 0x3E112E0BE826D695LL;
}

uint64_t *sub_1002887D0()
{
  if (qword_1003C0880 != -1) {
    swift_once(&qword_1003C0880, sub_1002887B4);
  }
  return &qword_1003C0888;
}

double NsToSec.getter()
{
  return sub_100288A0C(&qword_1003C0880, (uint64_t)&qword_1003C0888, (uint64_t)sub_1002887B4);
}

void sub_10028882C()
{
  qword_1003C0898 = 0x3F50624DD2F1A9FCLL;
}

uint64_t *sub_100288848()
{
  if (qword_1003C0890 != -1) {
    swift_once(&qword_1003C0890, sub_10028882C);
  }
  return &qword_1003C0898;
}

double UsToMs.getter()
{
  return sub_100288A0C(&qword_1003C0890, (uint64_t)&qword_1003C0898, (uint64_t)sub_10028882C);
}

void sub_1002888A4()
{
  qword_1003C08A8 = 0x3EB0C6F7A0B5ED8DLL;
}

uint64_t *sub_1002888C0()
{
  if (qword_1003C08A0 != -1) {
    swift_once(&qword_1003C08A0, sub_1002888A4);
  }
  return &qword_1003C08A8;
}

double UsToSec.getter()
{
  return sub_100288A0C(&qword_1003C08A0, (uint64_t)&qword_1003C08A8, (uint64_t)sub_1002888A4);
}

void sub_10028891C()
{
  qword_1003C08B8 = 0x3E51E54C672874DBLL;
}

uint64_t *sub_100288938()
{
  if (qword_1003C08B0 != -1) {
    swift_once(&qword_1003C08B0, sub_10028891C);
  }
  return &qword_1003C08B8;
}

double UsToMin.getter()
{
  return sub_100288A0C(&qword_1003C08B0, (uint64_t)&qword_1003C08B8, (uint64_t)sub_10028891C);
}

void sub_100288994()
{
  qword_1003C08C8 = 0x3F50624DD2F1A9FCLL;
}

uint64_t *sub_1002889B0()
{
  if (qword_1003C08C0 != -1) {
    swift_once(&qword_1003C08C0, sub_100288994);
  }
  return &qword_1003C08C8;
}

double MsToSec.getter()
{
  return sub_100288A0C(&qword_1003C08C0, (uint64_t)&qword_1003C08C8, (uint64_t)sub_100288994);
}

double sub_100288A0C(void *a1, uint64_t a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  return *(double *)a2;
}

uint64_t sub_100288A44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100288A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

  ;
}

uint64_t sub_100288A5C()
{
  if (qword_1003C08E8 != -1) {
    swift_once(&qword_1003C08E8, sub_1002894A8);
  }
  return qword_1003C08F0;
}

unint64_t sub_100288AA8(unint64_t result)
{
  unint64_t v1 = result;
  if (qword_1003C08E8 != -1) {
    unint64_t result = swift_once(&qword_1003C08E8, sub_1002894A8);
  }
  if (is_mul_ok(v1, qword_1003C08F0))
  {
    if (qword_1003C08F8) {
      return v1 * qword_1003C08F0 / qword_1003C08F8;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

unint64_t sub_100288B1C(unint64_t result)
{
  unint64_t v1 = result;
  if (qword_1003C08E8 != -1) {
    unint64_t result = swift_once(&qword_1003C08E8, sub_1002894A8);
  }
  if (is_mul_ok(v1, qword_1003C08F8))
  {
    if (qword_1003C08F0) {
      return v1 * qword_1003C08F8 / qword_1003C08F0;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

Swift::UInt64 __swiftcall machAbsTimeNs()()
{
  uint64_t v0 = mach_absolute_time();
  return sub_100288AA8(v0);
}

Swift::Double __swiftcall machAbsTimeSec()()
{
  return sub_100288BD0((uint64_t (*)(void))&_mach_absolute_time);
}

Swift::UInt64 __swiftcall machContTimeNs()()
{
  uint64_t v0 = mach_continuous_time();
  return sub_100288AA8(v0);
}

Swift::Double __swiftcall machContTimeSec()()
{
  return sub_100288BD0((uint64_t (*)(void))&_mach_continuous_time);
}

double sub_100288BD0(uint64_t (*a1)(void))
{
  unint64_t v1 = a1();
  unint64_t v2 = sub_100288AA8(v1);
  if (qword_1003C0880 != -1) {
    swift_once(&qword_1003C0880, sub_1002887B4);
  }
  return *(double *)&qword_1003C0888 * (double)v2;
}

uint64_t sub_100288C2C()
{
  uint64_t v0 = type metadata accessor for TimesSync();
  uint64_t result = swift_initStaticObject(v0, &unk_1003677A0);
  qword_1003C08D8 = result;
  return result;
}

uint64_t *sub_100288C54()
{
  if (qword_1003C08D0 != -1) {
    swift_once(&qword_1003C08D0, sub_100288C2C);
  }
  return &qword_1003C08D8;
}

uint64_t static TimesSync.instance.getter()
{
  uint64_t v0 = type metadata accessor for TimesSync();
  return swift_initStaticObject(v0, &unk_1003677A0);
}

double sub_100288CB0()
{
  return 0.0;
}

uint64_t sub_100288CB8()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 192LL))();
  if ((v2 & 1) != 0) {
    return 1LL;
  }
  uint64_t v3 = v1;
  uint64_t result = mach_continuous_time();
  unint64_t v5 = result;
  if (qword_1003C08E0 != -1) {
    uint64_t result = swift_once(&qword_1003C08E0, sub_10028925C);
  }
  if (!__CFADD__(v3, qword_10036BB28)) {
    return v3 + qword_10036BB28 < v5;
  }
  __break(1u);
  return result;
}

uint64_t *sub_100288D38()
{
  if (qword_1003C08E0 != -1) {
    swift_once(&qword_1003C08E0, sub_10028925C);
  }
  return &qword_10036BB28;
}

uint64_t sub_100288D78()
{
  uint64_t v3 = v0;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = &v33[-v10];
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 112LL))(v9);
  if ((result & 1) == 0) {
    return result;
  }
  unint64_t v39 = 0LL;
  unint64_t v40 = 0LL;
  uint64_t v37 = 0LL;
  uint64_t v38 = 0LL;
  mach_get_times(&v39, &v40, &v37);
  unint64_t v13 = v40;
  if (v40 < v39)
  {
    __break(1u);
    goto LABEL_12;
  }

  unint64_t v14 = sub_100288AA8(v40 - v39);
  (*(void (**)(unint64_t))(*(void *)v0 + 152LL))(v14);
  double v1 = (double)v37;
  double v2 = (double)v38;
  if (qword_1003C0880 != -1) {
LABEL_12:
  }
    swift_once(&qword_1003C0880, sub_1002887B4);
  double v15 = *(double *)&qword_1003C0888;
  double v16 = *(double *)&qword_1003C0888 * v2 + v1;
  unint64_t v17 = sub_100288AA8(v13);
  (*(void (**)(double))(*(void *)v0 + 176LL))(v16 - v15 * (double)v17 - kCFAbsoluteTimeIntervalSince1970);
  (*(void (**)(unint64_t, void))(*(void *)v0 + 200LL))(v13, 0LL);
  uint64_t v18 = sub_100287320();
  id v19 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v20 = v19(v11, v18, v4);
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    NSString v24 = (_DWORD *)swift_slowAlloc(42LL, -1LL);
    int v34 = v23;
    unsigned int v25 = v24;
    _DWORD *v24 = 134349824;
    uint64_t v26 = v24 + 1;
    swift_beginAccess(&v39, v45, 0LL, 0LL);
    unint64_t v43 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v26, v25 + 3);
    *((_WORD *)v25 + 6) = 2050;
    swift_beginAccess(&v40, &v43, 0LL, 0LL);
    unint64_t v41 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, (char *)v25 + 14, (char *)v25 + 22);
    *((_WORD *)v25 + 11) = 2050;
    swift_beginAccess(&v37, &v41, 0LL, 0LL);
    unint64_t v35 = v21;
    double v36 = *(double *)&v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v25 + 6, v25 + 8);
    *((_WORD *)v25 + swift_unknownObjectWeakDestroy(v0 + 16) = 2050;
    double v36 = *(double *)&v38;
    uint64_t v21 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, (char *)v25 + 34, (char *)v25 + 42);
    _os_log_impl( (void *)&_mh_execute_header,  v21,  (os_log_type_t)v34,  "TimeSync,mat,%{public}llu,mct,%{public}llu,tp,%{public}ld,%{public}ld",  (uint8_t *)v25,  0x2Au);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t v27 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v27(v11, v4);
  v19(v8, v18, v4);
  uint64_t v28 = swift_retain(v3);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc(22LL, -1LL);
    *(_DWORD *)uint64_t v31 = 134349312;
    double v36 = *(double *)&qword_1003C0888 * (double)(unint64_t)(*(uint64_t (**)(void))(*(void *)v3 + 144LL))();
    uint64_t v32 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v31 + 4, v31 + 12);
    *(_WORD *)(v31 + 12) = 2050;
    double v36 = (*(double (**)(uint64_t))(*(void *)v3 + 168LL))(v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v31 + 14, v31 + 22);
    swift_release(v3);
    _os_log_impl( (void *)&_mh_execute_header,  v29,  v30,  "TimeSync,mct-mat,%{public}f,cfa-mct,%{public}f",  (uint8_t *)v31,  0x16u);
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  else
  {

    swift_release(v3);
  }

  return ((uint64_t (*)(_BYTE *, uint64_t))v27)(v8, v4);
}

uint64_t sub_100289200()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144LL))();
}

uint64_t sub_100289224()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168LL))();
}

void *sub_100289248()
{
  return &unk_1002DF428;
}

uint64_t sub_100289254()
{
  return 100LL;
}

unint64_t sub_10028925C()
{
  unint64_t result = sub_100288B1C(0x174876E800uLL);
  qword_10036BB28 = result;
  return result;
}

uint64_t sub_100289284()
{
  if (qword_1003C08E0 != -1) {
    swift_once(&qword_1003C08E0, sub_10028925C);
  }
  return qword_10036BB28;
}

uint64_t sub_1002892C4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1002892F4(uint64_t a1)
{
  uint64_t result = swift_beginAccess(v1 + 16, v4, 1LL, 0LL);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  return result;
}

double sub_100289330()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_100289360(double a1)
{
  uint64_t result = swift_beginAccess(v1 + 24, v4, 1LL, 0LL);
  *(double *)(v1 + 24) = a1;
  return result;
}

void *sub_10028939C(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t sub_1002893D8()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_10028940C(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess(v2 + 32, v6, 1LL, 0LL);
  *(void *)(v2 + 32) = a1;
  *(_BYTE *)(v2 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a2 & 1;
  return result;
}

void *sub_10028945C(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t TimesSync.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 41LL, 7LL);
}

uint64_t sub_1002894A8()
{
  uint64_t result = sub_1002894EC();
  qword_1003C08F0 = result;
  qword_1003C08F8 = v1;
  return result;
}

uint64_t type metadata accessor for TimesSync()
{
  return objc_opt_self(&OBJC_CLASS____TtC6ALUtil9TimesSync);
}

uint64_t sub_1002894EC()
{
  uint64_t v0 = type metadata accessor for Logger(0LL);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&info - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  mach_timebase_info info = (mach_timebase_info)0x100000001LL;
  if (mach_timebase_info(&info))
  {
    __break(1u);
    goto LABEL_8;
  }

  if (!info.numer)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }

  if (!info.denom) {
    goto LABEL_9;
  }
  uint64_t v4 = sub_1002874CC();
  uint64_t v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc(14LL, -1LL);
    *(_DWORD *)uint64_t v8 = 67109376;
    swift_beginAccess(&info, v11, 0LL, 0LL);
    uint32_t numer = info.numer;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&numer, v13, v8 + 4, v8 + 8);
    *(_WORD *)(v8 + 8) = 1024;
    uint32_t numer = info.denom;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&numer, v13, v8 + 10, v8 + 14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "ticksInfo,numer,%u,denom,%u", (uint8_t *)v8, 0xEu);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess(&info, &numer, 0LL, 0LL);
  return info.numer;
}

__n128 initializeBufferWithCopyOfBuffer for TicksInfo(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for TicksInfo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for TicksInfo(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for TicksInfo()
{
  return &type metadata for TicksInfo;
}

uint64_t method lookup function for TimesSync(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TimesSync);
}

uint64_t dispatch thunk of TimesSync.mctMinusMatNs.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128LL))();
}

uint64_t dispatch thunk of PlatformInfo.hasAOP.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136LL))();
}

uint64_t sub_100289760()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 24));
}

uint64_t sub_100289794(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_1002897D8()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_100289808(uint64_t a1)
{
  uint64_t result = swift_beginAccess(v1 + 32, v4, 1LL, 0LL);
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t sub_100289844()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_100289874(uint64_t a1)
{
  uint64_t result = swift_beginAccess(v1 + 40, v4, 1LL, 0LL);
  *(void *)(v1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a1;
  return result;
}

void *sub_1002898B0(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t sub_1002898EC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain(*(void *)(v0 + 56));
  return v1;
}

uint64_t sub_100289918(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100289968(a1, a2, a3);
}

uint64_t sub_100289968(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v31)(double *__return_ptr, unint64_t, unint64_t, void *);
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(double *__return_ptr, unint64_t, unint64_t, void *);
  double v36;
  uint64_t v37;
  os_log_s *v38;
  os_log_type_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  char *v52;
  char *v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  void *v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int16 v105;
  unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108;
  os_log_s *v109;
  os_log_type_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  __int16 v126;
  unsigned __int8 *v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  os_log_type_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  unsigned __int8 *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unsigned int v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unsigned int v169;
  char *v170;
  unint64_t *v171;
  unint64_t v172;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  Swift::UInt64 v181;
  Swift::UInt64 v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  char v189;
  uint64_t v190;
  Swift::UInt64 v191;
  uint64_t v192;
  os_log_s *v193;
  os_log_type_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t result;
  uint64_t v198;
  char *v199;
  unint64_t *v200;
  char *v201;
  __int128 v202;
  char *v203;
  id v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, uint64_t);
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  unint64_t v225;
  id v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char v231[8];
  double v232;
  unint64_t v233;
  uint64_t v4 = v3;
  uint64_t v226 = a1;
  uint64_t v216 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v215 = *(void *)(v216 - 8);
  uint64_t v7 = __chkstk_darwin(v216);
  char v201 = (char *)&v198 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v211 = (char *)&v198 - v10;
  __chkstk_darwin(v9);
  uint64_t v223 = (char *)&v198 - v11;
  uint64_t v12 = type metadata accessor for String.Encoding(0LL);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v198 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v207 = type metadata accessor for URL(0LL);
  uint64_t v206 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  double v16 = (char *)&v198 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  uint64_t v225 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v198 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v210 = (uint64_t)&v198 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v209 = (uint64_t)&v198 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v212 = (uint64_t)&v198 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v198 - v27;
  v4[3] = &_swiftEmptyArrayStorage;
  void v4[4] = 0LL;
  void v4[5] = 0LL;
  void v4[6] = a2;
  void v4[7] = a3;
  uint64_t v205 = a3;
  swift_retain(a3);
  uint64_t v29 = sub_1002990B8();
  uint64_t v30 = *v29;
  uint64_t v31 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v29 + 112LL);
  swift_retain(*v29);
  v31(&v232, 0xD000000000000011LL, 0x80000001002F4EA0LL, &type metadata for String);
  swift_release(v30);
  if (v233) {
    uint64_t v32 = *(void *)&v232;
  }
  else {
    uint64_t v32 = 0xD000000000000016LL;
  }
  if (v233) {
    uint64_t v33 = v233;
  }
  else {
    uint64_t v33 = 0x80000001002F4EC0LL;
  }
  int v34 = *v29;
  unint64_t v35 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v29 + 112LL);
  swift_retain(v34);
  v35(&v232, 0xD000000000000016LL, 0x80000001002F4EE0LL, &type metadata for Double);
  swift_release(v34);
  if ((_BYTE)v233) {
    double v36 = 1.0;
  }
  else {
    double v36 = v232;
  }
  corelog.getter((uint64_t)v28);
  uint64_t v37 = swift_bridgeObjectRetain_n(v33, 2LL);
  uint64_t v38 = (os_log_s *)Logger.logObject.getter(v37);
  unint64_t v39 = static os_log_type_t.default.getter();
  unint64_t v40 = os_log_type_enabled(v38, v39);
  uint64_t v219 = v17;
  uint64_t v218 = v16;
  if (v40)
  {
    unint64_t v41 = swift_slowAlloc(22LL, -1LL);
    uint64_t v224 = v20;
    uint64_t v42 = v41;
    unint64_t v43 = swift_slowAlloc(32LL, -1LL);
    uint64_t v232 = *(double *)&v43;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v222 = v28;
    swift_bridgeObjectRetain(v33);
    uint64_t v230 = sub_1000181EC(v32, v33, (uint64_t *)&v232);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v230, v231, v42 + 4, v42 + 12);
    swift_bridgeObjectRelease_n(v33, 3LL);
    *(_WORD *)(v42 + 12) = 2048;
    uint64_t v230 = *(void *)&v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v230, v231, v42 + 14, v42 + 22);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "ALBtReplayerCSV,path,%s,interval,%f", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v43, -1LL, -1LL);
    double v16 = v218;
    uint64_t v17 = v219;
    swift_slowDealloc(v42, -1LL, -1LL);

    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v225 + 8);
    unint64_t v45 = v222;
  }

  else
  {

    swift_bridgeObjectRelease_n(v33, 2LL);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v225 + 8);
    unint64_t v45 = v28;
  }

  uint64_t v217 = v44;
  v44((uint64_t)v45, v17);
  uint64_t v204 = v226;
  uint64_t v208 = ALDataGenerationBase.init(queue:interval:)(v204, v36);
  swift_retain(v208);
  uint64_t v46 = URL.init(fileURLWithPath:)(v32, v33);
  static String.Encoding.utf8.getter(v46);
  uint64_t v47 = String.init(contentsOf:encoding:)(v16, v14);
  uint64_t v49 = v48;
  swift_bridgeObjectRelease(v33);
  id v50 = sub_10028AEB4(0x7FFFFFFFFFFFFFFFLL, 1, v47, v49);
  uint64_t v52 = *(char **)(v50 + 16);
  uint64_t v220 = 0LL;
  uint64_t v221 = v52;
  if (v52)
  {
    uint64_t v53 = 0LL;
    uint64_t v200 = (unint64_t *)(v208 + 24);
    char v214 = v50 + 32;
    uint64_t v203 = v231;
    *(void *)&unint64_t v51 = 134218242LL;
    uint64_t v202 = v51;
    int v199 = (char *)&type metadata for Any + 8;
    uint64_t v213 = v50;
    do
    {
      if ((unint64_t)v53 >= *(void *)(v50 + 16))
      {
        __break(1u);
LABEL_115:
        __break(1u);
        goto LABEL_116;
      }

      if (!v53) {
        goto LABEL_18;
      }
      uint64_t v222 = v53;
      __int128 v54 = (unint64_t *)(v214 + 32LL * (void)v53);
      uint64_t v56 = *v54;
      __int128 v55 = v54[1];
      uint64_t v58 = (id)v54[2];
      uint64_t v57 = v54[3];
      unint64_t v59 = v55 >> 14;
      swift_bridgeObjectRetain_n(v57, 2LL);
      uint64_t v224 = (char *)v56;
      uint64_t v225 = v57;
      uint64_t v226 = v58;
      if (v55 >> 14 == v56 >> 14)
      {
        uint64_t v60 = Substring.subscript.getter(v56, v55, v56, v55, v58, v57);
        uint64_t v62 = v61;
        uint64_t v64 = v63;
        uint64_t v66 = v65;
        int v67 = sub_10028BFF0(0LL, 1LL, 1, (char *)&_swiftEmptyArrayStorage);
        uint64_t v69 = *((void *)v67 + 2);
        uint64_t v68 = *((void *)v67 + 3);
        if (v69 >= v68 >> 1) {
          int v67 = sub_10028BFF0((char *)(v68 > 1), v69 + 1, 1, v67);
        }
        *((void *)v67 + 2) = v69 + 1;
        uint64_t v70 = &v67[32 * v69];
        *((void *)v70 + 4) = v60;
        unint64_t v71 = v70 + 32;
        goto LABEL_43;
      }

      swift_bridgeObjectRetain(v57);
      unint64_t v72 = v56;
      unint64_t v73 = v56;
      unint64_t v74 = v56;
      int v67 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        while (1)
        {
          uint64_t v75 = v55;
          uint64_t v76 = Substring.subscript.getter(v72, v56, v55, v58, v57);
          uint64_t v78 = v77;
          if (v76 == 44 && v77 == 0xE100000000000000LL)
          {
            swift_bridgeObjectRelease(0xE100000000000000LL);
            break;
          }

          uint64_t v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease(v78);
          if ((v79 & 1) != 0) {
            break;
          }
          __int128 v55 = v75;
          uint64_t v58 = v226;
          unint64_t v72 = Substring.index(after:)(v72, v56, v75, v226, v57);
          if (v59 == v72 >> 14) {
            goto LABEL_37;
          }
        }

        if (v72 >> 14 < v73 >> 14) {
          goto LABEL_124;
        }
        uint64_t v80 = Substring.subscript.getter(v73, v72, v56, v75, v226, v57);
        uint64_t v82 = v81;
        uint64_t v84 = v83;
        uint64_t v86 = v85;
        if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0) {
          int v67 = sub_10028BFF0(0LL, *((void *)v67 + 2) + 1LL, 1, v67);
        }
        uint64_t v88 = *((void *)v67 + 2);
        char v87 = *((void *)v67 + 3);
        if (v88 >= v87 >> 1) {
          int v67 = sub_10028BFF0((char *)(v87 > 1), v88 + 1, 1, v67);
        }
        *((void *)v67 + 2) = v88 + 1;
        uint64_t v89 = &v67[32 * v88];
        *((void *)v89 + 4) = v80;
        *((void *)v89 + 5) = v82;
        *((void *)v89 + 6) = v84;
        *((void *)v89 + 7) = v86;
        uint64_t v56 = (unint64_t)v224;
        uint64_t v57 = v225;
        __int128 v55 = v75;
        uint64_t v58 = v226;
        unint64_t v72 = Substring.index(after:)(v72, v224, v75, v226, v225);
        unint64_t v73 = v72;
        unint64_t v74 = v72;
      }

      while (v59 != v72 >> 14);
LABEL_37:
      if (v59 < v74 >> 14) {
        goto LABEL_124;
      }
      uint64_t v90 = Substring.subscript.getter(v74, v55, v56, v55, v58, v57);
      uint64_t v62 = v91;
      uint64_t v64 = v92;
      uint64_t v66 = v93;
      swift_bridgeObjectRelease(v57);
      if ((swift_isUniquelyReferenced_nonNull_native(v67) & 1) == 0) {
        int v67 = sub_10028BFF0(0LL, *((void *)v67 + 2) + 1LL, 1, v67);
      }
      uint64_t v95 = *((void *)v67 + 2);
      uint64_t v94 = *((void *)v67 + 3);
      if (v95 >= v94 >> 1) {
        int v67 = sub_10028BFF0((char *)(v94 > 1), v95 + 1, 1, v67);
      }
      *((void *)v67 + 2) = v95 + 1;
      uint64_t v96 = &v67[32 * v95];
      *((void *)v96 + 4) = v90;
      unint64_t v71 = v96 + 32;
LABEL_43:
      v71[1] = v62;
      v71[2] = v64;
      v71[3] = v66;
      uint64_t v97 = v225;
      uint64_t v98 = swift_bridgeObjectRelease(v225);
      if (*((void *)v67 + 2) != 6LL)
      {
        swift_bridgeObjectRelease(v67);
        uint64_t v107 = v212;
        corelog.getter(v212);
        uint64_t v108 = swift_bridgeObjectRetain(v97);
        uint64_t v109 = (os_log_s *)Logger.logObject.getter(v108);
        uint64_t v110 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v109, v110))
        {
          uint64_t v111 = swift_slowAlloc(22LL, -1LL);
          uint64_t v112 = swift_slowAlloc(32LL, -1LL);
          uint64_t v232 = *(double *)&v112;
          *(_DWORD *)uint64_t v111 = v202;
          uint64_t v113 = v222;
          uint64_t v230 = (uint64_t)v222;
          uint64_t v114 = v203;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v230, v203, v111 + 4, v111 + 12);
          *(_WORD *)(v111 + 12) = 2080;
          swift_bridgeObjectRetain(v97);
          uint64_t v115 = static String._fromSubstring(_:)(v224, v55, v226, v97);
          uint64_t v117 = v116;
          swift_bridgeObjectRelease(v97);
          uint64_t v230 = sub_1000181EC(v115, v117, (uint64_t *)&v232);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v230, v114, v111 + 14, v111 + 22);
          swift_bridgeObjectRelease_n(v97, 2LL);
          swift_bridgeObjectRelease(v117);
          _os_log_impl( (void *)&_mh_execute_header,  v109,  v110,  "line %ld: '%s' is ill-formed. Please follow [mac],[timestamp(ns)],[channel],[rssidB],[antennaIndex],[deviceInfoKw]. Skip!",  (uint8_t *)v111,  0x16u);
          swift_arrayDestroy(v112, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v112, -1LL, -1LL);
          swift_slowDealloc(v111, -1LL, -1LL);

          uint64_t v17 = v219;
          v217(v212, v219);
          goto LABEL_58;
        }

        swift_bridgeObjectRelease_n(v97, 2LL);
        uint64_t v17 = v219;
        v217(v107, v219);
        goto LABEL_16;
      }

      ALBtAdvertisement.init()(v98);
      if (*((void *)v67 + 2) < 2uLL) {
        goto LABEL_115;
      }
      uint64_t v99 = *((void *)v67 + 8);
      uint64_t v100 = *((void *)v67 + 9);
      uint64_t v102 = *((void *)v67 + 10);
      uint64_t v101 = *((void *)v67 + 11);
      uint64_t v103 = v220;
      uint64_t v104 = sub_10028D144(*((void *)v67 + 8), *((void *)v67 + 9), v102, v101, 10LL);
      uint64_t v220 = v103;
      if ((v105 & 0x100) != 0)
      {
        swift_bridgeObjectRetain(v101);
        uint64_t v106 = sub_10028C340(v99, v100, v102, v101, 10LL);
        uint64_t v119 = v118;
        swift_bridgeObjectRelease(v101);
        if ((v119 & 1) != 0) {
          goto LABEL_56;
        }
LABEL_52:
        uint64_t v120 = v220;
        swift_bridgeObjectRelease(v97);
        ALBtAdvertisement._machContTimeNs.setter(v106, 0LL);
        if (*((void *)v67 + 2))
        {
          uint64_t v121 = *((void *)v67 + 4);
          uint64_t v122 = *((void *)v67 + 5);
          if ((v122 ^ (unint64_t)v121) < 0x4000)
          {
            char v141 = 0LL;
          }

          else
          {
            uint64_t v124 = *((void *)v67 + 6);
            uint64_t v123 = *((void *)v67 + 7);
            uint64_t v125 = sub_10028D144(*((void *)v67 + 4), *((void *)v67 + 5), v124, v123, 16LL);
            if ((v126 & 0x100) != 0)
            {
              swift_bridgeObjectRetain(v123);
              uint64_t v127 = sub_10028C340(v121, v122, v124, v123, 16LL);
              char v140 = v139;
              swift_bridgeObjectRelease(v123);
              uint64_t v128 = v140 & 1;
            }

            else
            {
              uint64_t v127 = (unsigned __int8 *)v125;
              uint64_t v128 = v126 & 1;
            }

            if (v128) {
              char v141 = 0LL;
            }
            else {
              char v141 = v127;
            }
          }

          ALBtAdvertisement._mac.setter(v141);
          if (*((void *)v67 + 2) >= 3uLL)
          {
            uint64_t v142 = *((void *)v67 + 12);
            uint64_t v143 = *((void *)v67 + 13);
            if ((v143 ^ (unint64_t)v142) < 0x4000)
            {
              uint64_t v148 = 0;
              LOBYTE(v147) = 1;
            }

            else
            {
              uint64_t v145 = *((void *)v67 + 14);
              uint64_t v144 = *((void *)v67 + 15);
              uint64_t v146 = sub_10028D068( *((void *)v67 + 12),  *((void *)v67 + 13),  v145,  v144,  10LL,  (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_10028D740);
              if ((v146 & 0x10000000000LL) != 0)
              {
                swift_bridgeObjectRetain(v144);
                uint64_t v146 = sub_10028C244( v142,  v143,  v145,  v144,  10LL,  (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_10028C6B0);
                swift_bridgeObjectRelease(v144);
              }

              uint64_t v147 = (v146 & (unint64_t)&_mh_execute_header) >> 32;
              else {
                uint64_t v148 = v146;
              }
            }

            LOBYTE(v232) = v147 & 1;
            ALBtAdvertisement._channel.setter(v148 | ((v147 & 1) << 32));
            if (*((void *)v67 + 2) >= 4uLL)
            {
              uint64_t v149 = *((void *)v67 + 16);
              uint64_t v150 = *((void *)v67 + 17);
              if ((v150 ^ (unint64_t)v149) < 0x4000)
              {
                uint64_t v155 = 0;
                LOBYTE(v154) = 1;
              }

              else
              {
                char v152 = *((void *)v67 + 18);
                uint64_t v151 = *((void *)v67 + 19);
                uint64_t v153 = sub_10028D068( *((void *)v67 + 16),  *((void *)v67 + 17),  v152,  v151,  10LL,  (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_10028D740);
                if ((v153 & 0x10000000000LL) != 0)
                {
                  swift_bridgeObjectRetain(v151);
                  uint64_t v153 = sub_10028C244( v149,  v150,  v152,  v151,  10LL,  (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_10028C6B0);
                  swift_bridgeObjectRelease(v151);
                }

                uint64_t v154 = (v153 & (unint64_t)&_mh_execute_header) >> 32;
                else {
                  uint64_t v155 = v153;
                }
              }

              LOBYTE(v232) = v154 & 1;
              ALBtAdvertisement._rssidB.setter(v155 | ((v154 & 1) << 32));
              if (*((void *)v67 + 2) >= 5uLL)
              {
                uint64_t v156 = *((void *)v67 + 20);
                uint64_t v157 = *((void *)v67 + 21);
                if ((v157 ^ (unint64_t)v156) < 0x4000)
                {
                  uint64_t v162 = 0;
                  LOBYTE(v161) = 1;
                }

                else
                {
                  uint64_t v159 = *((void *)v67 + 22);
                  uint64_t v158 = *((void *)v67 + 23);
                  uint64_t v160 = sub_10028D068( *((void *)v67 + 20),  *((void *)v67 + 21),  v159,  v158,  10LL,  (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_10028D740);
                  if ((v160 & 0x10000000000LL) != 0)
                  {
                    swift_bridgeObjectRetain(v158);
                    uint64_t v160 = sub_10028C244( v156,  v157,  v159,  v158,  10LL,  (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_10028C6B0);
                    swift_bridgeObjectRelease(v158);
                  }

                  uint64_t v161 = (v160 & (unint64_t)&_mh_execute_header) >> 32;
                  else {
                    uint64_t v162 = v160;
                  }
                }

                LOBYTE(v232) = v161 & 1;
                ALBtAdvertisement._antennaIndex.setter(v162 | ((v161 & 1) << 32));
                if (*((void *)v67 + 2) >= 6uLL)
                {
                  int v163 = *((void *)v67 + 24);
                  uint64_t v164 = *((void *)v67 + 25);
                  uint64_t v166 = *((void *)v67 + 26);
                  uint64_t v165 = *((void *)v67 + 27);
                  swift_bridgeObjectRetain(v165);
                  swift_bridgeObjectRelease(v67);
                  if ((v164 ^ (unint64_t)v163) < 0x4000)
                  {
                    uint64_t v220 = v120;
                    swift_bridgeObjectRelease(v165);
                    uint64_t v169 = 0;
                    LOBYTE(v168) = 1;
                    uint64_t v17 = v219;
                    double v16 = v218;
                  }

                  else
                  {
                    uint64_t v167 = sub_10028D068( v163,  v164,  v166,  v165,  10LL,  (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_10028DB64);
                    uint64_t v220 = v120;
                    uint64_t v17 = v219;
                    double v16 = v218;
                    if ((v167 & 0x10000000000LL) != 0) {
                      uint64_t v167 = sub_10028C244( v163,  v164,  v166,  v165,  10LL,  (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_10028C430);
                    }
                    swift_bridgeObjectRelease(v165);
                    int v168 = (v167 & (unint64_t)&_mh_execute_header) >> 32;
                    else {
                      uint64_t v169 = v167;
                    }
                  }

                  LOBYTE(v232) = v168 & 1;
                  uint64_t v170 = v223;
                  ALBtAdvertisement._deviceInfoKw.setter(v169 | ((v168 & 1) << 32));
                  (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v211, v170, v216);
                  uint64_t v171 = v200;
                  swift_beginAccess(v200, &v232, 33LL, 0LL);
                  uint64_t v172 = *v171;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v171);
                  *uint64_t v171 = v172;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    uint64_t v172 = sub_10028BDE8(0, *(void *)(v172 + 16) + 1LL, 1, v172);
                    char *v200 = v172;
                  }

                  uint64_t v175 = *(void *)(v172 + 16);
                  uint64_t v174 = *(void *)(v172 + 24);
                  if (v175 >= v174 >> 1)
                  {
                    uint64_t v172 = sub_10028BDE8(v174 > 1, v175 + 1, 1, v172);
                    char *v200 = v172;
                  }

                  *(void *)(v172 + swift_unknownObjectWeakDestroy(v0 + 16) = v175 + 1;
                  uint64_t v176 = v215;
                  uint64_t v177 = v172
                  uint64_t v178 = v216;
                  (*(void (**)(unint64_t, char *, uint64_t))(v215 + 32))(v177, v211, v216);
                  swift_endAccess(&v232);
                  (*(void (**)(char *, uint64_t))(v176 + 8))(v223, v178);
                  goto LABEL_17;
                }

LABEL_120:
                __break(1u);
LABEL_121:
                __break(1u);
                goto LABEL_122;
              }

LABEL_119:
              __break(1u);
              goto LABEL_120;
            }

LABEL_118:
            __break(1u);
            goto LABEL_119;
          }

LABEL_117:
          __break(1u);
          goto LABEL_118;
        }

LABEL_116:
        __break(1u);
        goto LABEL_117;
      }

      if ((v105 & 1) == 0)
      {
        uint64_t v106 = (unsigned __int8 *)v104;
        goto LABEL_52;
      }

uint64_t sub_10028AEB4(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
LABEL_54:
    LOBYTE(v47) = 2;
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Must take zero or more splits",  29LL,  2LL,  "Swift/Collection.swift",  22LL,  v47,  1552LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t v8 = swift_allocObject(&unk_1003468E0, 24LL, 7LL);
    *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = &_swiftEmptyArrayStorage;
    uint64_t v9 = swift_allocObject(&unk_100346908, 24LL, 7LL);
    uint64_t v10 = v9;
    *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 15LL;
    unint64_t v11 = a4 >> 60;
    uint64_t v12 = HIBYTE(a4) & 0xF;
    if (a1)
    {
      uint64_t v13 = (a4 & 0x2000000000000000LL) != 0 ? HIBYTE(a4) & 0xF : a3 & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        uint64_t v49 = a1;
        BOOL v14 = (v11 & ((a3 & 0x800000000000000LL) == 0)) == 0;
        uint64_t v15 = 7LL;
        if (!v14) {
          uint64_t v15 = 11LL;
        }
        uint64_t v48 = v15 | (v13 << 16);
        unint64_t v54 = 4 * v13;
        double v16 = (char *)&_swiftEmptyArrayStorage;
        unint64_t v17 = 15LL;
        unint64_t v18 = 15LL;
        uint64_t v50 = a3;
        uint64_t v51 = v9;
        while (1)
        {
          uint64_t v19 = String.subscript.getter(v17, a3, a4);
          unint64_t v21 = v20;
          if (!((v20 & 0x2000000000000000LL) != 0 ? HIBYTE(v20) & 0xF : v19 & 0xFFFFFFFFFFFFLL)) {
            break;
          }
          if ((v20 & 0x1000000000000000LL) != 0)
          {
            uint64_t v24 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(0LL, v19, v20);
          }

          else
          {
            if ((v20 & 0x2000000000000000LL) != 0)
            {
              v53[0] = v19;
              v53[1] = v20 & 0xFFFFFFFFFFFFFFLL;
              uint64_t v23 = v53;
            }

            else if ((v19 & 0x1000000000000000LL) != 0)
            {
              uint64_t v23 = (void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }

            else
            {
              uint64_t v23 = (void *)_StringObject.sharedUTF8.getter(v19, v20);
            }

            uint64_t v24 = _decodeScalar(_:startingAt:)(v23);
          }

          uint64_t v4 = v24;
          swift_bridgeObjectRelease(v21);
          if ((v4 - 14) > 0xFFFFFFFB || (v4 - 8232) < 2 || (_DWORD)v4 == 133)
          {
            if (v18 >> 14 == v17 >> 14 && (a2 & 1) != 0)
            {
              unint64_t v17 = String.index(after:)(v17, a3, a4);
              *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
              unint64_t v18 = v17;
            }

            else
            {
              if (v17 >> 14 < v18 >> 14) {
                goto LABEL_53;
              }
              uint64_t v25 = a3;
              unint64_t v26 = a4;
              uint64_t v27 = String.subscript.getter(v18, v17, v25, a4);
              uint64_t v29 = v28;
              uint64_t v31 = v30;
              uint64_t v4 = v32;
              if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
                double v16 = sub_10028BFF0(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
              }
              uint64_t v33 = v16;
              unint64_t v34 = *((void *)v16 + 2);
              unint64_t v35 = v33;
              unint64_t v36 = *((void *)v33 + 3);
              if (v34 >= v36 >> 1) {
                unint64_t v35 = sub_10028BFF0((char *)(v36 > 1), v34 + 1, 1, v35);
              }
              *((void *)v35 + 2) = v34 + 1;
              uint64_t v37 = &v35[32 * v34];
              double v16 = v35;
              *((void *)v37 + 4) = v27;
              *((void *)v37 + 5) = v29;
              *((void *)v37 + 6) = v31;
              *((void *)v37 + 7) = v4;
              *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v35;
              a4 = v26;
              a3 = v50;
              unint64_t v18 = String.index(after:)(v17, v50, a4);
              uint64_t v10 = v51;
              *(void *)(v51 + swift_unknownObjectWeakDestroy(v0 + 16) = v18;
              unint64_t v17 = v18;
              if (*((void *)v16 + 2) == v49)
              {
LABEL_42:
                if (v54 == v18 >> 14 && (a2 & 1) != 0)
                {
                  swift_bridgeObjectRelease(a4);
                  goto LABEL_50;
                }

                if (v54 < v18 >> 14)
                {
LABEL_53:
                  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Range requires lowerBound <= upperBound",  39LL,  2LL,  "Swift/Range.swift",  17LL,  2,  754LL,  0);
                  __break(1u);
                  goto LABEL_54;
                }

                uint64_t v39 = a3;
                a3 = (uint64_t)v16;
                unint64_t v18 = String.subscript.getter(v18, v48, v39, a4);
                unint64_t v21 = v40;
                double v16 = v41;
                uint64_t v4 = v42;
                swift_bridgeObjectRelease(a4);
                if ((swift_isUniquelyReferenced_nonNull_native(a3) & 1) != 0)
                {
LABEL_47:
                  unint64_t v44 = *(void *)(a3 + 16);
                  unint64_t v43 = *(void *)(a3 + 24);
                  if (v44 >= v43 >> 1) {
                    a3 = (uint64_t)sub_10028BFF0((char *)(v43 > 1), v44 + 1, 1, (char *)a3);
                  }
                  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v44 + 1;
                  unint64_t v45 = (void *)(a3 + 32 * v44);
                  v45[4] = v18;
                  v45[5] = v21;
                  v45[6] = v16;
                  v45[7] = v4;
                  double v16 = (char *)a3;
                  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = a3;
                  uint64_t v10 = v51;
                  goto LABEL_50;
                }

int64_t sub_10028B384()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v105 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v96 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v92 - v5;
  uint64_t v113 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v109 = *(void *)(v113 - 8);
  uint64_t v7 = __chkstk_darwin(v113);
  uint64_t v108 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v100 = (char *)&v92 - v10;
  __chkstk_darwin(v9);
  uint64_t v104 = (char *)&v92 - v11;
  uint64_t v12 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v12);
  BOOL v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = type metadata accessor for ALBtNotification(0LL);
  uint64_t v94 = *(void *)(v95 - 8);
  uint64_t v15 = __chkstk_darwin(v95);
  uint64_t v93 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v92 - v18;
  uint64_t v20 = ALBtNotification.init()(v17);
  static ALTimeStamp.now()(v20);
  uint64_t v21 = type metadata accessor for ALTimeStamp(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v14, 0LL, 1LL, v21);
  ALBtNotification._timestamp.setter(v14);
  uint64_t v106 = v19;
  uint64_t v22 = ALBtNotification._simulated.setter(1LL);
  uint64_t v23 = *(uint64_t (**)(void))(*v1 + 160LL);
  uint64_t v115 = *(uint64_t (**)(void))(*v1 + 184LL);
  uint64_t v24 = ((uint64_t (*)(uint64_t))v115)(v22);
  uint64_t v114 = v23;
  uint64_t v25 = v23();
  uint64_t v26 = *(void *)(v25 + 16);
  int64_t result = swift_bridgeObjectRelease(v25);
  if (v24 >= v26)
  {
LABEL_23:
    unint64_t v72 = v106;
    uint64_t v73 = ALBtNotification._advertisements.getter(result);
    uint64_t v74 = *(void *)(v73 + 16);
    swift_bridgeObjectRelease(v73);
    if (v74)
    {
      uint64_t v75 = corelog.getter(v96);
      uint64_t v76 = (os_log_s *)Logger.logObject.getter(v75);
      os_log_type_t v77 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v101 = v2;
        uint64_t v79 = v78;
        *(_DWORD *)uint64_t v78 = 134217984;
        uint64_t v80 = v78 + 12;
        uint64_t v81 = v78 + 4;
        uint64_t v82 = swift_beginAccess(v106, &v116, 32LL, 0LL);
        uint64_t v83 = ALBtNotification._advertisements.getter(v82);
        swift_endAccess(&v116);
        uint64_t v84 = v1;
        uint64_t v85 = *(void *)(v83 + 16);
        swift_bridgeObjectRelease(v83);
        uint64_t v116 = v85;
        uint64_t v1 = v84;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117, v81, v80);
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "One BT notification from file, count: %ld", v79, 0xCu);
        uint64_t v86 = v79;
        uint64_t v2 = v101;
        swift_slowDealloc(v86, -1LL, -1LL);
      }

      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v96, v2);
      char v87 = (void (*)(char *))v1[6];
      unint64_t v72 = v106;
      swift_beginAccess(v106, &v116, 0LL, 0LL);
      uint64_t v88 = v94;
      uint64_t v89 = v93;
      uint64_t v90 = v95;
      (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v93, v72, v95);
      v87(v89);
      char v91 = *(void (**)(char *, uint64_t))(v88 + 8);
      v91(v89, v90);
    }

    else
    {
      char v91 = *(void (**)(char *, uint64_t))(v94 + 8);
      uint64_t v90 = v95;
    }

    return ((uint64_t (*)(char *, uint64_t))v91)(v72, v90);
  }

  else
  {
    uint64_t v98 = &v119;
    *(void *)&__int128 v28 = 136315138LL;
    __int128 v99 = v28;
    uint64_t v97 = (char *)&type metadata for Any + 8;
    uint64_t v107 = v6;
    uint64_t v101 = v2;
    while (1)
    {
      unint64_t v29 = ((uint64_t (*)(int64_t))v115)(result);
      int64_t result = v114();
      if ((v29 & 0x8000000000000000LL) != 0) {
        break;
      }
      int64_t v30 = result;
      if (v29 >= *(void *)(result + 16)) {
        goto LABEL_30;
      }
      uint64_t v31 = v109;
      unint64_t v112 = (*(unsigned __int8 *)(v31 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      uint64_t v32 = *(void *)(v109 + 72);
      uint64_t v33 = v104;
      uint64_t v34 = v113;
      uint64_t v110 = *(void (**)(char *, unint64_t, uint64_t))(v109 + 16);
      uint64_t v111 = v32;
      v110(v104, result + v112 + v32 * v29, v113);
      uint64_t v35 = swift_bridgeObjectRelease(v30);
      uint64_t v36 = ALBtAdvertisement._machContTimeNs.getter(v35);
      char v38 = v37;
      uint64_t v39 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
      int64_t result = v39(v33, v34);
      if ((v38 & 1) != 0) {
        goto LABEL_39;
      }
      if (v36 < 0) {
        goto LABEL_31;
      }
      int64_t result = (*(uint64_t (**)(int64_t))(*v1 + 208LL))(result);
      int64_t v40 = v36 + result;
      if (__OFADD__(v36, result)) {
        goto LABEL_32;
      }
      int64_t result = machContTimeNs()();
      if (result < 0) {
        goto LABEL_33;
      }
      if (v40 >= result) {
        goto LABEL_23;
      }
      corelog.getter((uint64_t)v6);
      uint64_t v41 = swift_retain_n(v1, 2LL);
      uint64_t v42 = (os_log_s *)Logger.logObject.getter(v41);
      int v43 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v42, (os_log_type_t)v43))
      {
        unint64_t v44 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v45 = swift_slowAlloc(32LL, -1LL);
        uint64_t v116 = v45;
        *(_DWORD *)unint64_t v44 = v99;
        unint64_t v46 = v115();
        int64_t result = v114();
        if ((v46 & 0x8000000000000000LL) != 0) {
          goto LABEL_37;
        }
        int64_t v47 = result;
        if (v46 >= *(void *)(result + 16)) {
          goto LABEL_38;
        }
        int v103 = v43;
        uint64_t v48 = v100;
        os_log_t v102 = v42;
        uint64_t v49 = v113;
        v110(v100, result + v112 + v46 * v111, v113);
        uint64_t v50 = swift_bridgeObjectRelease(v47);
        uint64_t v51 = ALBtAdvertisement.description.getter(v50);
        unint64_t v53 = v52;
        v39(v48, v49);
        uint64_t v118 = sub_1000181EC(v51, v53, &v116);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, v98, v44 + 4, v44 + 12);
        swift_release_n(v1, 2LL);
        swift_bridgeObjectRelease(v53);
        os_log_t v54 = v102;
        _os_log_impl((void *)&_mh_execute_header, v102, (os_log_type_t)v103, "One BT adv from file: %s", v44, 0xCu);
        swift_arrayDestroy(v45, 1LL, v97);
        swift_slowDealloc(v45, -1LL, -1LL);
        swift_slowDealloc(v44, -1LL, -1LL);

        uint64_t v2 = v101;
        uint64_t v55 = (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v107, v101);
      }

      else
      {

        swift_release_n(v1, 2LL);
        uint64_t v55 = (*(uint64_t (**)(char *, uint64_t))(v105 + 8))(v6, v2);
      }

      unint64_t v56 = ((uint64_t (*)(uint64_t))v115)(v55);
      int64_t result = v114();
      if ((v56 & 0x8000000000000000LL) != 0) {
        goto LABEL_34;
      }
      int64_t v57 = result;
      if (v56 >= *(void *)(result + 16)) {
        goto LABEL_35;
      }
      uint64_t v59 = v111;
      unint64_t v58 = v112;
      v110(v108, result + v112 + v56 * v111, v113);
      swift_bridgeObjectRelease(v57);
      uint64_t v60 = (void (*)(uint64_t *, void))ALBtNotification._advertisements.modify(&v116);
      uint64_t v62 = v61;
      unint64_t v63 = *v61;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v61);
      *uint64_t v62 = v63;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v63 = sub_10028BDE8(0, *(void *)(v63 + 16) + 1LL, 1, v63);
        *uint64_t v62 = v63;
      }

      unint64_t v66 = *(void *)(v63 + 16);
      unint64_t v65 = *(void *)(v63 + 24);
      if (v66 >= v65 >> 1)
      {
        unint64_t v63 = sub_10028BDE8(v65 > 1, v66 + 1, 1, v63);
        *uint64_t v62 = v63;
      }

      *(void *)(v63 + swift_unknownObjectWeakDestroy(v0 + 16) = v66 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v109 + 32))(v63 + v58 + v66 * v59, v108, v113);
      v60(&v116, 0LL);
      int64_t result = (*(uint64_t (**)(uint64_t *))(*v1 + 200LL))(&v116);
      if (__OFADD__(*v67, 1LL)) {
        goto LABEL_36;
      }
      ++*v67;
      uint64_t v68 = ((uint64_t (*)(uint64_t *, void))result)(&v116, 0LL);
      uint64_t v69 = ((uint64_t (*)(uint64_t))v115)(v68);
      uint64_t v70 = v114();
      uint64_t v71 = *(void *)(v70 + 16);
      int64_t result = swift_bridgeObjectRelease(v70);
      uint64_t v6 = v107;
      if (v69 >= v71) {
        goto LABEL_23;
      }
    }

    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
  }

  return result;
}

void sub_10028BBD8()
{
}

uint64_t sub_10028BC04()
{
  return swift_release(*(void *)(v0 + 56));
}

uint64_t sub_10028BC20()
{
  uint64_t v0 = ALDataGenerationBase.deinit();
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 56));
  return v0;
}

uint64_t sub_10028BC54()
{
  uint64_t v0 = ALDataGenerationBase.deinit();
  swift_bridgeObjectRelease(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t sub_10028BC90( unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v7 = *(void *)(a2 + 16);
  int v8 = (v7 >> 14 == a1 >> 14) & a3;
  if (v8 == 1) {
    return v8 ^ 1u;
  }
  if (a1 >> 14 >= v7 >> 14)
  {
    uint64_t v10 = String.subscript.getter(v7, a1, a5, a6);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v16 = v15;
    uint64_t v17 = *(char **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    *(void *)(a4 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v17 = sub_10028BFF0(0LL, *((void *)v17 + 2) + 1LL, 1, v17);
      *(void *)(a4 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
    }

    unint64_t v20 = *((void *)v17 + 2);
    unint64_t v19 = *((void *)v17 + 3);
    if (v20 >= v19 >> 1)
    {
      uint64_t v17 = sub_10028BFF0((char *)(v19 > 1), v20 + 1, 1, v17);
      *(void *)(a4 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
    }

    *((void *)v17 + 2) = v20 + 1;
    uint64_t v21 = &v17[32 * v20];
    *((void *)v21 + 4) = v10;
    *((void *)v21 + 5) = v12;
    *((void *)v21 + 6) = v14;
    *((void *)v21 + 7) = v16;
    return v8 ^ 1u;
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Range requires lowerBound <= upperBound",  39LL,  2LL,  "Swift/Range.swift",  17LL,  2,  754LL,  0);
  __break(1u);
  return result;
}

uint64_t sub_10028BDE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_100003A0C((uint64_t *)&unk_100368670);
  uint64_t v11 = *(void *)(type metadata accessor for ALBtAdvertisement(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12) {
    goto LABEL_29;
  }
  if (v16 - v14 == 0x8000000000000000LL && v12 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    unint64_t v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(void *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }

    else if (v15 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }

    *(void *)(a4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_10028DF88(0LL, v8, v21, a4);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

char *sub_10028BFF0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_100003A0C(&qword_100367A20);
      uint64_t v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      *((void *)v11 + 2) = v8;
      *((void *)v11 + 3) = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 32;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[32 * v8 + 32]) {
          memmove(v14, a4 + 32, 32 * v8);
        }
        *((void *)a4 + 2) = 0LL;
        goto LABEL_24;
      }
    }

    sub_10028D234(0LL, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

uint64_t sub_10028C0FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  unint64_t v6 = a1 >> 16;
  uint64_t v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v13 = String.UTF16View.index(_:offsetBy:)(15LL, v6, a2);
    uint64_t v14 = v13 + (v7 << 16);
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v16 = v14 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v16 = v15;
    }
    return v16 | 4;
  }

  else
  {
    uint64_t v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v6);
    uint64_t v9 = v8 + (v7 << 16);
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v11 = v9 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v11 = v10;
    }
    return v11 | 8;
  }

uint64_t sub_10028C174()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = v0[4];
  v11[0] = 0LL;
  v11[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(24LL);
  v4._object = (void *)0x80000001002F5070LL;
  v4._countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v4);
  v5._countAndFlagsBits = v1;
  v5._object = v2;
  String.append(_:)(v5);
  v6._countAndFlagsBits = 8238LL;
  v6._object = (void *)0xE200000000000000LL;
  String.append(_:)(v6);
  uint64_t v10 = v3;
  uint64_t v7 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v10,  v11,  v7,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v8._countAndFlagsBits = 0LL;
  v8._object = (void *)0xE000000000000000LL;
  String.append(_:)(v8);
  return v11[0];
}

uint64_t sub_10028C244( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  unint64_t v9 = sub_10028E0A0();
  swift_bridgeObjectRetain(a4);
  uint64_t v10 = String.init<A>(_:)(&v20, &type metadata for Substring, &protocol witness table for Substring, v9);
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  if ((v11 & 0x1000000000000000LL) == 0)
  {
    if ((v11 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v15 = HIBYTE(v13) & 0xF;
    uint64_t v20 = v12;
    uint64_t v21 = v13 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v14 = &v20;
    goto LABEL_7;
  }

  uint64_t v12 = sub_10028CBAC(v10, v11);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease(v13);
  unint64_t v13 = v17;
  if ((v17 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v12 & 0x1000000000000000LL) != 0)
  {
    uint64_t v14 = (uint64_t *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v14 = (uint64_t *)_StringObject.sharedUTF8.getter(v12, v13);
  }

unsigned __int8 *sub_10028C340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int64_t a5)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  unint64_t v7 = sub_10028E0A0();
  swift_bridgeObjectRetain(a4);
  uint64_t v8 = String.init<A>(_:)(&v18, &type metadata for Substring, &protocol witness table for Substring, v7);
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  if ((v9 & 0x1000000000000000LL) == 0)
  {
    if ((v9 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v13 = HIBYTE(v11) & 0xF;
    uint64_t v18 = v10;
    uint64_t v19 = v11 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v12 = (unsigned __int8 *)&v18;
    goto LABEL_7;
  }

  uint64_t v10 = sub_10028CBAC(v8, v9);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease(v11);
  unint64_t v11 = v15;
  if ((v15 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v10 & 0x1000000000000000LL) != 0)
  {
    uint64_t v12 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v12 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v10, v11);
  }

unsigned __int8 *sub_10028C430(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }

        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }

              else
              {
                char v22 = -55;
              }
            }

            else
            {
              char v22 = -48;
            }

            unint64_t v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000LL) != 0) {
              goto LABEL_72;
            }
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }

          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

LABEL_71:
        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

        unsigned int v12 = 0;
        unsigned __int8 v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }

      goto LABEL_72;
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

unsigned __int8 *sub_10028C6B0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }

        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }

        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          unsigned int v8 = 0;
          uint64_t v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned int v12 = 0;
                unsigned __int8 v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                }
                char v22 = -87;
              }

              else
              {
                char v22 = -55;
              }
            }

            else
            {
              char v22 = -48;
            }

            uint64_t v23 = (int)v8 * (uint64_t)(int)a3;
            unsigned __int8 v24 = v21 + v22;
            unsigned int v8 = v23 + v24;
            if (__OFADD__((_DWORD)v23, v24)) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }

          while (v16);
LABEL_48:
          unsigned __int8 v13 = 0;
          unsigned int v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }

        goto LABEL_71;
      }

unsigned __int8 *sub_10028C930(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }

          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }

          if (result)
          {
            unint64_t v9 = 0LL;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0LL;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }

                else
                {
                  char v12 = -55;
                }
              }

              else
              {
                char v12 = -48;
              }

              if (!is_mul_ok(v9, a3)) {
                return 0LL;
              }
              unint64_t v14 = v9 * a3;
              unsigned __int8 v15 = v11 + v12;
              BOOL v16 = v14 >= v15;
              unint64_t v9 = v14 - v15;
              if (!v16) {
                return 0LL;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }

          return 0LL;
        }

        return 0LL;
      }

      __break(1u);
      goto LABEL_67;
    }

    if (a2)
    {
      unsigned __int8 v26 = a3 + 48;
      unsigned __int8 v27 = a3 + 55;
      unsigned __int8 v28 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v26 = 58;
      }

      else
      {
        unsigned __int8 v28 = 97;
        unsigned __int8 v27 = 65;
      }

      if (result)
      {
        unint64_t v29 = 0LL;
        do
        {
          unsigned int v30 = *result;
          if (v30 < 0x30 || v30 >= v26)
          {
            if (v30 < 0x41 || v30 >= v27)
            {
              uint64_t v13 = 0LL;
              if (v30 < 0x61 || v30 >= v28) {
                return (unsigned __int8 *)v13;
              }
              char v31 = -87;
            }

            else
            {
              char v31 = -55;
            }
          }

          else
          {
            char v31 = -48;
          }

          if (!is_mul_ok(v29, a3)) {
            return 0LL;
          }
          unint64_t v32 = v29 * a3;
          unsigned __int8 v33 = v30 + v31;
          BOOL v16 = __CFADD__(v32, v33);
          unint64_t v29 = v32 + v33;
          if (v16) {
            return 0LL;
          }
          ++result;
          --v3;
        }

        while (v3);
        return (unsigned __int8 *)v29;
      }

      return 0LL;
    }

    return 0LL;
  }

  if (a2 < 1)
  {
LABEL_67:
    __break(1u);
    return result;
  }

  uint64_t v17 = a2 - 1;
  if (a2 == 1) {
    return 0LL;
  }
  unsigned __int8 v18 = a3 + 48;
  unsigned __int8 v19 = a3 + 55;
  unsigned __int8 v20 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v18 = 58;
  }

  else
  {
    unsigned __int8 v20 = 97;
    unsigned __int8 v19 = 65;
  }

  if (!result) {
    return 0LL;
  }
  unint64_t v9 = 0LL;
  unsigned int v21 = result + 1;
  do
  {
    unsigned int v22 = *v21;
    if (v22 < 0x30 || v22 >= v18)
    {
      if (v22 < 0x41 || v22 >= v19)
      {
        uint64_t v13 = 0LL;
        if (v22 < 0x61 || v22 >= v20) {
          return (unsigned __int8 *)v13;
        }
        char v23 = -87;
      }

      else
      {
        char v23 = -55;
      }
    }

    else
    {
      char v23 = -48;
    }

    if (!is_mul_ok(v9, a3)) {
      return 0LL;
    }
    unint64_t v24 = v9 * a3;
    unsigned __int8 v25 = v22 + v23;
    BOOL v16 = __CFADD__(v24, v25);
    unint64_t v9 = v24 + v25;
    if (v16) {
      return 0LL;
    }
    ++v21;
    --v17;
  }

  while (v17);
  return (unsigned __int8 *)v9;
}

uint64_t sub_10028CBAC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1;
  }
  uint64_t v3 = 7LL;
  if (((a2 >> 60) & ((a1 & 0x800000000000000LL) == 0)) != 0) {
    uint64_t v3 = 11LL;
  }
  unint64_t v4 = String.subscript.getter(15LL, v3 | (v2 << 16), a1, a2);
  unint64_t v6 = v5;
  uint64_t v9 = sub_10028CC28(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_10028CC28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5 = a3;
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    unint64_t v12 = sub_10028CD6C(a1, a2, a3, a4);
    if (v12)
    {
      uint64_t v9 = v12;
      unint64_t v8 = (unint64_t)sub_10001867C(v12, 0LL);
      unint64_t v5 = sub_10028CE58((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      uint64_t v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }

    else
    {
      unint64_t v8 = (unint64_t)&_swiftEmptyArrayStorage;
    }

    uint64_t v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(void *)(v8 + 16));
    swift_release(v8);
    return v14;
  }

  else
  {
    unint64_t v8 = a1 >> 16;
    uint64_t v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000LL) == 0)
    {
      if ((a3 & 0x1000000000000000LL) != 0)
      {
        uint64_t v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }

unint64_t sub_10028CD6C( unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000LL) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4LL << v8;
  if ((result & 0xC) == 4LL << v8)
  {
    uint64_t result = sub_10028C0FC(result, a3, a4);
    unint64_t v7 = result;
  }

  if ((a2 & 0xC) == v9)
  {
    uint64_t result = sub_10028C0FC(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000LL) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }

  else if ((a4 & 0x1000000000000000LL) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }

  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000LL) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }

  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7, a2, a3, a4);
  }

  __break(1u);
  return result;
}

unint64_t sub_10028CE58( unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0LL;
    goto LABEL_33;
  }

  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0LL;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }

  uint64_t v11 = 0LL;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000LL) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4LL << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000LL) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_10028C0FC(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000LL) != 0)
    {
      uint64_t result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }

    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000LL) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }

      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000LL) == 0) {
          uint64_t result = _StringObject.sharedUTF8.getter(a6, a7);
        }
        char v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000LL) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }

    uint64_t result = sub_10028C0FC(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000LL) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000LL) + 65540;
      goto LABEL_29;
    }

uint64_t sub_10028D068( uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(void *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v16 = 0;
    return result | ((unint64_t)v16 << 32) | (((a4 >> 60) & 1) << 40);
  }

  if ((a4 & 0x2000000000000000LL) != 0)
  {
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v13 = v15;
  }

  else if ((a3 & 0x1000000000000000LL) != 0)
  {
    uint64_t v13 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }

  else
  {
    uint64_t v13 = (void *)_StringObject.sharedUTF8.getter(a3, a4);
  }

  uint64_t result = a6(v13, a1, a2, a3, a4, a5);
  if (!v6)
  {
    unsigned __int8 v16 = BYTE4(result) & 1;
    return result | ((unint64_t)v16 << 32) | (((a4 >> 60) & 1) << 40);
  }

  return result;
}

uint64_t sub_10028D144( unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, int64_t a5)
{
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    uint64_t result = 0LL;
    goto LABEL_8;
  }

  if ((a4 & 0x2000000000000000LL) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v14;
  }

  else if ((a3 & 0x1000000000000000LL) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }

  else
  {
    uint64_t v11 = (void *)_StringObject.sharedUTF8.getter(a3, a4);
  }

  uint64_t result = sub_10028D324((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000LL) != 0;
  }

  return result;
}

uint64_t type metadata accessor for ALBtReplayerCSV()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon15ALBtReplayerCSV);
}

uint64_t sub_10028D234(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10028D324( uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, int64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000LL) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4LL << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4LL << v12)
  {
    uint64_t result = sub_10028C0FC(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000LL) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }

  else if ((a5 & 0x1000000000000000LL) == 0)
  {
    goto LABEL_5;
  }

  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000LL) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_96;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)(15LL, a2, a4, a5);
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_10028C0FC(v10, a4, a5);
    unint64_t v10 = result;
  }

LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_10028D740( uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000LL) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4LL << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4LL << v12)
  {
    uint64_t result = sub_10028C0FC(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000LL) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }

  else if ((a5 & 0x1000000000000000LL) == 0)
  {
    goto LABEL_5;
  }

  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000LL) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)(15LL, a2, a4, a5);
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_10028C0FC(v10, a4, a5);
    unint64_t v10 = result;
  }

LABEL_96:
    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }

  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }

      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }

      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          uint64_t v31 = (int)v24 * (uint64_t)(int)a6;
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          if (__OFSUB__((_DWORD)v31, v32)) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }

    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }

  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }

      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }

      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }

            else
            {
              char v28 = -55;
            }
          }

          else
          {
            char v28 = -48;
          }

          uint64_t v31 = v24 * (unint64_t)a6;
          if ((v31 & 0xFFFFFFFF00000000LL) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }

LABEL_95:
      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }

    goto LABEL_96;
  }

      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }

    goto LABEL_96;
  }

LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

          __break(1u);
          goto LABEL_103;
        }

uint64_t sub_10028DB64( uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000LL) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4LL << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4LL << v12)
  {
    uint64_t result = sub_10028C0FC(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000LL) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }

  else if ((a5 & 0x1000000000000000LL) == 0)
  {
    goto LABEL_5;
  }

  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000LL) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)(15LL, a2, a4, a5);
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_10028C0FC(v10, a4, a5);
    unint64_t v10 = result;
  }

uint64_t sub_10028DF88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(type metadata accessor for ALBtAdvertisement(0LL) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10028E0A0()
{
  unint64_t result = qword_100367A18;
  if (!qword_100367A18)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Substring, &type metadata for Substring);
    atomic_store(result, (unint64_t *)&qword_100367A18);
  }

  return result;
}

uint64_t sub_10028E0E4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10028E108()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_10028E118()
{
  return *(id *)(v0 + 16);
}

void sub_10028E148(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
}

void *sub_10028E18C(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t sub_10028E1C8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain(*(void *)(v0 + 32));
  return v1;
}

uint64_t sub_10028E210(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return swift_release(v5);
}

uint64_t sub_10028E260()
{
  return swift_retain(*(void *)(v0 + 40));
}

uint64_t sub_10028E294(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)(v1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a1;
  return swift_release(v3);
}

void *sub_10028E2D8(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t sub_10028E314()
{
  return swift_retain(*(void *)(v0 + 48));
}

uint64_t sub_10028E348(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = a1;
  return swift_release(v3);
}

void *sub_10028E38C(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t sub_10028E3C8()
{
  return swift_retain(*(void *)(v0 + 56));
}

uint64_t sub_10028E3FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = a1;
  return swift_release(v3);
}

void *sub_10028E440(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t sub_10028E47C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, 64LL, 7LL);
  sub_10028E4D0(a1, a2, a3);
  return v7;
}

void *sub_10028E4D0(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v13)(void *__return_ptr, uint64_t, unint64_t, void *);
  uint64_t v14;
  void (*v15)(void *__return_ptr, uint64_t, unint64_t, void *);
  uint64_t v16;
  void (*v17)(void *__return_ptr, uint64_t, unint64_t, void *);
  uint64_t *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *__return_ptr, unint64_t, unint64_t, void *);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void v29[3];
  uint64_t v4 = v3;
  v3[5] = 0LL;
  uint64_t v7 = v3 + 5;
  v3[6] = 0LL;
  uint64_t v8 = v3 + 6;
  v3[7] = 0LL;
  uint64_t v9 = v3 + 7;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  id v10 = a1;
  swift_retain(a3);
  unint64_t v11 = sub_1002990B8();
  uint64_t v12 = *v11;
  unint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
  swift_retain(*v11);
  v13(v29, 0x756D695369466957LL, 0xED0000646574616CLL, &type metadata for Bool);
  swift_release(v12);
  if (LOBYTE(v29[0]) != 2 && (v29[0] & 1) != 0)
  {
    type metadata accessor for ALWiFiSimulated();
    uint64_t v26 = sub_1002A07AC(v10, a2, a3);
    swift_beginAccess(v7, v29, 1LL, 0LL);
    unsigned int v24 = *v7;
    *uint64_t v7 = v26;
    goto LABEL_16;
  }

  unint64_t v14 = *v11;
  int64_t v15 = *(void (**)(void *__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
  swift_retain(*v11);
  v15(v29, 0x6C70655269466957LL, 0xEF56534364657961LL, &type metadata for Bool);
  swift_release(v14);
  if (LOBYTE(v29[0]) != 2 && (v29[0] & 1) != 0)
  {
    type metadata accessor for ALWiFiReplayerCSV();
    unsigned int v27 = sub_1002A0D0C(v10, a2, a3);
    swift_beginAccess(v8, v29, 1LL, 0LL);
    unsigned int v24 = *v8;
    *uint64_t v8 = v27;
    goto LABEL_16;
  }

  unint64_t v16 = *v11;
  unint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
  swift_retain(*v11);
  v17(v29, 0x726F43686365654CLL, 0xED00006946695765LL, &type metadata for Bool);
  swift_release(v16);
  if (LOBYTE(v29[0]) != 2)
  {
    if ((v29[0] & 1) == 0) {
      goto LABEL_7;
    }
LABEL_11:
    type metadata accessor for ALLeechCoreWiFi();
    unsigned __int8 v25 = sub_100293754(v10, a2, a3);
LABEL_15:
    swift_beginAccess(v9, v29, 1LL, 0LL);
    unsigned int v24 = *v9;
    *uint64_t v9 = v25;
    goto LABEL_16;
  }

  int64_t v18 = sub_100298C38();
  char v19 = *v18;
  int v20 = *(uint64_t (**)(uint64_t))(*(void *)*v18 + 160LL);
  unsigned __int8 v21 = swift_retain(*v18);
  LOBYTE(v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v20(v21);
  swift_release(v19);
LABEL_7:
  unsigned __int8 v22 = *v11;
  unsigned __int8 v23 = *(void (**)(void *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
  swift_retain(*v11);
  v23(v29, 0xD000000000000018LL, 0x80000001002F50A0LL, &type metadata for Bool);
  swift_release(v22);
  if (LOBYTE(v29[0]) != 2 && (v29[0] & 1) != 0)
  {
    type metadata accessor for ALLeechCoreWiFi();
    unsigned __int8 v25 = sub_100293754(v10, (uint64_t)sub_10028E7E8, 0LL);
    swift_release(a3);
    goto LABEL_15;
  }

  unsigned int v24 = a3;
LABEL_16:
  swift_release(v24);
  return v4;
}

uint64_t sub_10028E7E8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v22 = *(void *)(v7 - 8);
  uint64_t v23 = v7;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  corelog.getter((uint64_t)v9);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  unint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v20 = swift_slowAlloc(32LL, -1LL);
    uint64_t v26 = v20;
    uint64_t v21 = v1;
    *(_DWORD *)unint64_t v13 = 136315138;
    char v19 = v13 + 4;
    uint64_t v14 = ALWiFiNotification.description.getter();
    unint64_t v16 = v15;
    uint64_t v24 = sub_1000181EC(v14, v15, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v19, v13 + 12);
    swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "#WiFi,LeechCoreWiFiAsReference,%s", v13, 0xCu);
    uint64_t v17 = v20;
    swift_arrayDestroy(v20, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1LL, -1LL);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v9, v23);
}

uint64_t sub_10028E9FC()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 56));
  return v0;
}

uint64_t sub_10028EA38()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t type metadata accessor for ALWiFiResultHub()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon15ALWiFiResultHub);
}

void sub_10028EA9C()
{
  void (*v4)(double *__return_ptr, unint64_t, unint64_t, void *);
  double v5;
  double v6;
  char v7;
  uint64_t v0 = type metadata accessor for ALCoreAnalyticsManager();
  uint64_t v1 = swift_allocObject(v0, 88LL, 7LL);
  *(_OWORD *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0LL;
  *(void *)(v1 + 72) = &off_100346938;
  *(void *)(v1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = &off_1003469C0;
  uint64_t v2 = sub_1002990B8();
  uint64_t v3 = *v2;
  uint64_t v4 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v2 + 112LL);
  swift_retain(*v2);
  v4(&v6, 0xD000000000000017LL, 0x80000001002F5290LL, &type metadata for Double);
  swift_release(v3);
  if (v7) {
    uint64_t v5 = 6.0;
  }
  else {
    uint64_t v5 = v6;
  }
  *(double *)(v1 + 64) = v5 * (double)SecInHr.getter();
  *(Swift::Double *)(v1 + 56) = machContTimeSec()();
  qword_1003C0908 = v1;
}

uint64_t *sub_10028EB7C()
{
  if (qword_1003C0900 != -1) {
    swift_once(&qword_1003C0900, sub_10028EA9C);
  }
  return &qword_1003C0908;
}

uint64_t static ALCoreAnalyticsManager.instance.getter()
{
  if (qword_1003C0900 != -1) {
    swift_once(&qword_1003C0900, sub_10028EA9C);
  }
  return swift_retain(qword_1003C0908);
}

_UNKNOWN **sub_10028EBFC()
{
  return &off_100346A20;
}

_UNKNOWN **sub_10028EC08()
{
  return &off_100346AA8;
}

void sub_10028EC14(unint64_t a1, double a2)
{
  double v4 = (double)a1;
  double v5 = UsToMin.getter();
  sub_10028ECB8(a2, v5 * v4);
  if (a2 <= 1.0) {
    goto LABEL_4;
  }
  uint64_t v6 = *(void *)(v2 + 16);
  BOOL v7 = __CFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (!v7)
  {
    *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
LABEL_4:
    sub_10028F3E4();
    return;
  }

  __break(1u);
}

void sub_10028EC74(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 40);
  BOOL v3 = __CFADD__(v2, a1);
  uint64_t v4 = v2 + a1;
  if (v3)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v4;
    uint64_t v5 = *(void *)(v1 + 48);
    BOOL v3 = __CFADD__(v5, 1LL);
    uint64_t v6 = v5 + 1;
    if (!v3)
    {
      *(void *)(v1 + 48) = v6;
      sub_10028F3E4();
      return;
    }
  }

  __break(1u);
}

void sub_10028ECA0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  BOOL v3 = __CFADD__(v2, a1);
  uint64_t v4 = v2 + a1;
  if (v3)
  {
    __break(1u);
  }

  else
  {
    *(void *)(v1 + 32) = v4;
    sub_10028F3E4();
  }

void sub_10028ECB8(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v55 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = swift_allocObject(&unk_100346B18, 24LL, 7LL);
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = sub_10028F248((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v10 = (void *)(v9 + 16);
  sub_100290064(0LL, (unint64_t *)&qword_100367D40, &OBJC_CLASS___NSNumber_ptr);
  Class isa = NSNumber.init(integerLiteral:)(-1LL).super.super.isa;
  uint64_t v12 = *(void *)(v9 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
  aBlock[0] = v12;
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
  sub_10028FC5C((uint64_t)isa, 0x6E65637265507442LL, 0xED00006C6C754674LL, isUniquelyReferenced_nonNull_native);
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
  swift_bridgeObjectRelease(0x8000000000000000LL);
  Class v14 = NSNumber.init(integerLiteral:)(-1LL).super.super.isa;
  uint64_t v15 = *(void *)(v9 + 16);
  char v16 = swift_isUniquelyReferenced_nonNull_native(v15);
  aBlock[0] = v15;
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
  sub_10028FC5C((uint64_t)v14, 0x7265666675427442LL, 0xEC000000657A6953LL, v16);
  uint64_t v17 = aBlock[0];
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v18 = *(void *)(v3 + 80);
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19 && *(double *)(v18 + 32) < a2)
  {
    uint64_t v20 = (double *)(v18 + 40);
    uint64_t v21 = v19 - 1;
    do
    {
      if (!v21) {
        break;
      }
      double v22 = *v20++;
      --v21;
    }

    while (v22 < a2);
  }

  Class v23 = Double._bridgeToObjectiveC()().super.super.isa;
  char v24 = swift_isUniquelyReferenced_nonNull_native(v17);
  aBlock[0] = v17;
  *uint64_t v10 = 0x8000000000000000LL;
  sub_10028FC5C((uint64_t)v23, 0x656C7341656D6954LL, 0xEA00000000007065LL, v24);
  uint64_t v25 = aBlock[0];
  *uint64_t v10 = aBlock[0];
  swift_bridgeObjectRelease(0x8000000000000000LL);
  uint64_t v26 = *(void *)(v3 + 72);
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v28 = (uint64_t)v8;
    if (*(double *)(v26 + 32) < a1)
    {
      unsigned int v29 = (double *)(v26 + 40);
      uint64_t v30 = v27 - 1;
      do
      {
        if (!v30) {
          break;
        }
        double v31 = *v29++;
        --v30;
      }

      while (v31 < a1);
    }
  }

  else
  {
    uint64_t v28 = (uint64_t)v8;
  }

  Class v32 = Double._bridgeToObjectiveC()().super.super.isa;
  char v33 = swift_isUniquelyReferenced_nonNull_native(v25);
  aBlock[0] = v25;
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
  sub_10028FC5C((uint64_t)v32, 0x6372655069666957LL, 0xEF6C6C7546746E65LL, v33);
  uint64_t v34 = aBlock[0];
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
  swift_bridgeObjectRelease(0x8000000000000000LL);
  Class v35 = UInt64._bridgeToObjectiveC()().super.super.isa;
  char v36 = swift_isUniquelyReferenced_nonNull_native(v34);
  aBlock[0] = v34;
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
  sub_10028FC5C((uint64_t)v35, 0x6666754269666957LL, 0xEE00657A69537265LL, v36);
  *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
  swift_bridgeObjectRelease(0x8000000000000000LL);
  corelog.getter(v28);
  uint64_t v37 = swift_retain_n(v9, 2LL);
  unsigned int v38 = (os_log_s *)Logger.logObject.getter(v37);
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    unint64_t v40 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v41 = swift_slowAlloc(32LL, -1LL);
    uint64_t v54 = v28;
    uint64_t v42 = v41;
    aBlock[0] = v41;
    *(_DWORD *)unint64_t v40 = 136446210;
    uint64_t v53 = v6;
    swift_beginAccess(v9 + 16, v57, 0LL, 0LL);
    uint64_t v43 = *(void *)(v9 + 16);
    uint64_t v44 = sub_100290064(0LL, (unint64_t *)&qword_100367D28, &OBJC_CLASS___NSObject_ptr);
    uint64_t v45 = swift_bridgeObjectRetain(v43);
    uint64_t v46 = Dictionary.description.getter(v45, &type metadata for String, v44, &protocol witness table for String);
    unint64_t v48 = v47;
    swift_bridgeObjectRelease(v43);
    uint64_t v56 = sub_1000181EC(v46, v48, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57, v40 + 4, v40 + 12);
    swift_release_n(v9, 2LL);
    swift_bridgeObjectRelease(v48);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "CoreAnalytics, send wake event: %{public}s", v40, 0xCu);
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v42, -1LL, -1LL);
    swift_slowDealloc(v40, -1LL, -1LL);

    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v54, v55);
  }

  else
  {

    swift_release_n(v9, 2LL);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v28, v55);
  }

  NSString v49 = String._bridgeToObjectiveC()();
  aBlock[4] = (uint64_t)sub_10028FDB8;
  uint64_t v59 = v9;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = (uint64_t)sub_10028F360;
  void aBlock[3] = (uint64_t)&unk_100346B58;
  uint64_t v50 = _Block_copy(aBlock);
  uint64_t v51 = v59;
  swift_retain(v9);
  swift_release(v51);
  AnalyticsSendEventLazy(v49, v50);
  _Block_release(v50);
  swift_release(v9);
}

unint64_t sub_10028F248(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_100003A0C(&qword_100367D38);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 2);
    uint64_t v8 = (uint64_t)*(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    id v10 = v9;
    unint64_t result = sub_10028F8EC(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    unint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v13 = v7;
    v13[1] = v8;
    *(void *)(v4[7] + 8 * result) = v10;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    void v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

Class sub_10028F360(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = swift_retain(v2);
  uint64_t v4 = v1(v3);
  swift_release(v2);
  if (v4)
  {
    sub_100290064(0LL, (unint64_t *)&qword_100367D28, &OBJC_CLASS___NSObject_ptr);
    v5.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    v5.super.Class isa = 0LL;
  }

  return v5.super.isa;
}

void sub_10028F3E4()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSDictionary v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  double v6 = machContTimeSec()();
  if (v6 - *(double *)(v0 + 56) >= *(double *)(v0 + 64))
  {
    *(double *)(v0 + 56) = v6;
    uint64_t v7 = swift_allocObject(&unk_100346B18, 24LL, 7LL);
    unint64_t v8 = sub_10028F248((uint64_t)&_swiftEmptyArrayStorage);
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
    aBlock[0] = v8;
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
    sub_10028FC5C((uint64_t)isa, 0x6D754E7663527442LL, 0xE800000000000000LL, isUniquelyReferenced_nonNull_native);
    uint64_t v11 = aBlock[0];
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
    swift_bridgeObjectRelease(0x8000000000000000LL);
    Class v12 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v13 = swift_isUniquelyReferenced_nonNull_native(v11);
    aBlock[0] = v11;
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
    sub_10028FC5C((uint64_t)v12, 0x5273704169666957LL, 0xED00006D754E7663LL, v13);
    uint64_t v14 = aBlock[0];
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
    swift_bridgeObjectRelease(0x8000000000000000LL);
    Class v15 = UInt64._bridgeToObjectiveC()().super.super.isa;
    char v16 = swift_isUniquelyReferenced_nonNull_native(v14);
    aBlock[0] = v14;
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = 0x8000000000000000LL;
    sub_10028FC5C((uint64_t)v15, 0xD000000000000015LL, 0x80000001002F5210LL, v16);
    *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = aBlock[0];
    swift_bridgeObjectRelease(0x8000000000000000LL);
    corelog.getter((uint64_t)v5);
    uint64_t v17 = swift_retain_n(v7, 2LL);
    uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v37 = swift_slowAlloc(32LL, -1LL);
      aBlock[0] = v37;
      uint64_t v38 = v3;
      *(_DWORD *)uint64_t v20 = 136446210;
      uint64_t v21 = v20 + 12;
      uint64_t v34 = v20 + 4;
      Class v35 = v20;
      swift_beginAccess(v7 + 16, v40, 0LL, 0LL);
      uint64_t v22 = *(void *)(v7 + 16);
      uint64_t v23 = sub_100290064(0LL, (unint64_t *)&qword_100367D28, &OBJC_CLASS___NSObject_ptr);
      uint64_t v24 = swift_bridgeObjectRetain(v22);
      uint64_t v25 = Dictionary.description.getter(v24, &type metadata for String, v23, &protocol witness table for String);
      uint64_t v36 = v2;
      unint64_t v27 = v26;
      swift_bridgeObjectRelease(v22);
      uint64_t v39 = sub_1000181EC(v25, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, v40, v34, v21);
      swift_release_n(v7, 2LL);
      swift_bridgeObjectRelease(v27);
      uint64_t v28 = v35;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "CoreAnalytics, send heartbeat event: %{public}s", v35, 0xCu);
      uint64_t v29 = v37;
      swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v29, -1LL, -1LL);
      swift_slowDealloc(v28, -1LL, -1LL);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v5, v36);
    }

    else
    {

      swift_release_n(v7, 2LL);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

    NSString v30 = String._bridgeToObjectiveC()();
    aBlock[4] = (uint64_t)sub_10028FDB8;
    uint64_t v42 = v7;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = (uint64_t)sub_10028F360;
    void aBlock[3] = (uint64_t)&unk_100346B30;
    double v31 = _Block_copy(aBlock);
    uint64_t v32 = v42;
    swift_retain(v7);
    swift_release(v32);
    AnalyticsSendEventLazy(v30, v31);
    _Block_release(v31);

    v1[2] = 0LL;
    v1[5] = 0LL;
    v1[6] = 0LL;
    v1[4] = 0LL;
    swift_release(v7);
  }

void *ALCoreAnalyticsManager.deinit()
{
  return v0;
}

uint64_t ALCoreAnalyticsManager.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 88LL, 7LL);
}

uint64_t type metadata accessor for ALCoreAnalyticsManager()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon22ALCoreAnalyticsManager);
}

uint64_t method lookup function for ALCoreAnalyticsManager(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALCoreAnalyticsManager);
}

uint64_t dispatch thunk of ALCoreAnalyticsManager.onLocCompAnalytics(wifiPercentFull:timeAsleepUsec:wifiBufferSize:failedPings:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160LL))();
}

uint64_t dispatch thunk of ALCoreAnalyticsManager.onWiFiScanReply(scanNum:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168LL))();
}

uint64_t dispatch thunk of ALCoreAnalyticsManager.onBTAdv(advNum:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176LL))();
}

uint64_t sub_10028F8C8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

unint64_t sub_10028F8EC(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_10028FDD4(a1, a2, v5);
}

Swift::Int sub_10028F950(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_100003A0C(&qword_100367D38);
  char v39 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_36:
          swift_release(v5);
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v37) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v25;
      }
    }

void sub_10028FC5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10028F8EC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10028FEB4();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }

uint64_t sub_10028FDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10028FDCC(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_10028FDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }

      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }

  return v6;
}

id sub_10028FEB4()
{
  uint64_t v1 = v0;
  sub_100003A0C(&qword_100367D38);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release(v2);
    uint64_t *v1 = v4;
    return result;
  }

  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

uint64_t sub_100290064(uint64_t a1, unint64_t *a2, void *a3)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t v5 = objc_opt_self(*a3);
    uint64_t result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }

  return result;
}

uint64_t sub_10029009C()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 16));
}

void *sub_1002900D8()
{
  return &unk_1002DF5C8;
}

double sub_1002900E4()
{
  return 0.6;
}

void *sub_1002900F4()
{
  return &unk_1002DF5D0;
}

id sub_100290100()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_100290108()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain(*(void *)(v0 + 32));
  return v1;
}

double sub_100290134()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_10029013C()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_100290170(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess(v2 + 48, v6, 1LL, 0LL);
  *(void *)(v2 + 48) = a1;
  *(_BYTE *)(v2 + 56) = a2 & 1;
  return result;
}

void *sub_1002901C0(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t sub_1002901FC()
{
  return swift_retain(*(void *)(v0 + 64));
}

uint64_t sub_100290230(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  *(void *)(v1 + 64) = a1;
  return swift_release(v3);
}

void *sub_100290274(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t sub_1002902B0(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v9 = swift_allocObject(v4, 72LL, 7LL);
  sub_100290314(a1, a2, a3, a4);
  return v9;
}

uint64_t sub_100290314(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  int64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v5 + 48) = 0LL;
  *(_BYTE *)(v5 + 56) = 1;
  *(void *)(v5 + 64) = 0LL;
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = a3;
  *(double *)(v5 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a4;
  id v14 = a1;
  swift_retain(a3);
  uint64_t v15 = corelog.getter((uint64_t)v13);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v18 = 134349056;
    double v21 = a4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v18 + 4, v18 + 12);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "debounce.init,%{public}f", v18, 0xCu);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  swift_release(a3);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v5;
}

uint64_t sub_100290490(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v81 = type metadata accessor for DispatchTime(0LL);
  uint64_t v78 = *(void *)(v81 - 8);
  uint64_t v7 = __chkstk_darwin(v81);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v82 = (char *)&v77 - v10;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags(0LL);
  __chkstk_darwin(v11);
  int64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for Logger(0LL);
  uint64_t v83 = *(void *)(v14 - 8);
  uint64_t v84 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  os_log_type_t v17 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v19 = __chkstk_darwin(v18);
  double v21 = (char *)&v77 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  int64_t v24 = (char *)&v77 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  BOOL v28 = (char *)&v77 - v26;
  if ((a1 & 1) != 0 || (double v29 = v2[5], v29 < 0.6))
  {
    uint64_t v30 = corelog.getter((uint64_t)&v77 - v26);
    uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
    os_log_type_t v32 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "debounce.notify,force", v33, 2u);
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v83 + 8))(v28, v84);
    uint64_t v34 = 0LL;
LABEL_6:
    char v35 = 1;
    return sub_100290FD4(v34, v35);
  }

  uint64_t v37 = v27;
  *(double *)&uint64_t v38 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t))(*(void *)v2 + 120LL))(v25));
  double v39 = *(double *)&v38;
  if ((v40 & 1) != 0)
  {
    uint64_t v47 = v38;
    uint64_t v48 = corelog.getter((uint64_t)v17);
    NSString v49 = (os_log_s *)Logger.logObject.getter(v48);
    os_log_type_t v50 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "debounce.notify,1stRequest", v51, 2u);
      swift_slowDealloc(v51, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v83 + 8))(v17, v84);
    uint64_t v34 = v47;
    goto LABEL_6;
  }

  double v41 = machContTimeSec()();
  double v42 = v29 + v39;
  if (v29 + v39 + -0.1 < v41)
  {
    uint64_t v43 = corelog.getter((uint64_t)v24);
    uint64_t v44 = (os_log_s *)Logger.logObject.getter(v43);
    os_log_type_t v45 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)uint64_t v46 = 134349056;
      double aBlock = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v46 + 4, v46 + 12);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "debounce.notify,pastSchedule,%{public}f", v46, 0xCu);
      swift_slowDealloc(v46, -1LL, -1LL);
    }

    (*(void (**)(char *, uint64_t))(v83 + 8))(v24, v84);
    uint64_t v34 = *(void *)&v41;
    char v35 = 0;
    return sub_100290FD4(v34, v35);
  }

  double v77 = v39;
  uint64_t v52 = (*(uint64_t (**)(double))(*(void *)v2 + 144LL))(v29 + v39 + -0.1);
  swift_release(v52);
  if (v52)
  {
    corelog.getter((uint64_t)v21);
    uint64_t v53 = swift_retain(v2);
    uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc(42LL, -1LL);
      *(_DWORD *)uint64_t v56 = 134349824;
      double aBlock = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v56 + 4, v56 + 12);
      *(_WORD *)(v56 + 12) = 2050;
      double aBlock = v77;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v56 + 14, v56 + 22);
      *(_WORD *)(v56 + 22) = 2050;
      double aBlock = v29;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v56 + 24, v56 + 32);
      swift_release(v2);
      *(_WORD *)(v56 + 32) = 2050;
      double aBlock = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v56 + 34, v56 + 42);
      _os_log_impl( (void *)&_mh_execute_header,  v54,  v55,  "debounce.notify,skip,now,%{public}f,last,%{public}f,%{public}f,willRunAt,%{public}f",  (uint8_t *)v56,  0x2Au);
      swift_slowDealloc(v56, -1LL, -1LL);
    }

    else
    {

      swift_release(v2);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v21, v84);
  }

  uint64_t v57 = swift_allocObject(&unk_100346B90, 32LL, 7LL);
  *(void *)(v57 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(double *)(v57 + 24) = v41;
  v87[3] = sub_100291294;
  uint64_t v88 = v57;
  double aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
  v87[0] = 1107296256LL;
  v87[1] = sub_100284B68;
  v87[2] = &unk_100346BA8;
  unint64_t v58 = _Block_copy(&aBlock);
  uint64_t v85 = &_swiftEmptyArrayStorage;
  unint64_t v59 = sub_1002912B8();
  swift_retain(v2);
  uint64_t v60 = sub_100003A0C(&qword_100367DB0);
  unint64_t v61 = sub_100291300();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v85, v60, v61, v11, v59);
  uint64_t v62 = type metadata accessor for DispatchWorkItem(0LL);
  swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
  uint64_t v63 = DispatchWorkItem.init(flags:block:)(v13, v58);
  uint64_t v64 = swift_release(v88);
  uint64_t result = static DispatchTime.now()(v64);
  double v65 = (v42 + 0.6 - v41) * 1000.0;
  if ((~*(void *)&v65 & 0x7FF0000000000000LL) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }

  if (v65 <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v65 >= 9.22337204e18)
  {
LABEL_30:
    __break(1u);
    return result;
  }

  *uint64_t v6 = (uint64_t)v65;
  uint64_t v67 = v79;
  uint64_t v66 = v80;
  (*(void (**)(void *, void, uint64_t))(v79 + 104))( v6,  enum case for DispatchTimeInterval.milliseconds(_:),  v80);
  uint64_t v68 = v82;
  + infix(_:_:)(v9, v6);
  (*(void (**)(void *, uint64_t))(v67 + 8))(v6, v66);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v70 = v81;
  v69(v9, v81);
  OS_dispatch_queue.asyncAfter(deadline:execute:)(v68, v63);
  corelog.getter(v37);
  uint64_t v71 = swift_retain(v2);
  unint64_t v72 = (os_log_s *)Logger.logObject.getter(v71);
  os_log_type_t v73 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = swift_slowAlloc(62LL, -1LL);
    *(_DWORD *)uint64_t v74 = 134350336;
    double aBlock = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v74 + 4, v74 + 12);
    *(_WORD *)(v74 + 12) = 2050;
    double aBlock = v77;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v74 + 14, v74 + 22);
    *(_WORD *)(v74 + 22) = 2050;
    double aBlock = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v74 + 24, v74 + 32);
    swift_release(v2);
    *(_WORD *)(v74 + 32) = 2050;
    double aBlock = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v74 + 34, v74 + 42);
    *(_WORD *)(v74 + 42) = 2050;
    double aBlock = 0.6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v74 + 44, v74 + 52);
    *(_WORD *)(v74 + 52) = 2050;
    double aBlock = v42 + 0.6 - v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v87, v74 + 54, v74 + 62);
    _os_log_impl( (void *)&_mh_execute_header,  v72,  v73,  "debounce.notify,schedule,now,%{public}f,%{public}f,%{public}f,toRunAt,%{public}f,delay,%{public}f,dispatchSec,%{public}f",  (uint8_t *)v74,  0x3Eu);
    swift_slowDealloc(v74, -1LL, -1LL);
  }

  else
  {

    swift_release(v2);
  }

  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v37, v84);
  uint64_t v75 = *(void (**)(uint64_t))(*(void *)v2 + 152LL);
  uint64_t v76 = swift_retain(v63);
  v75(v76);
  swift_release(v63);
  return ((uint64_t (*)(char *, uint64_t))v69)(v82, v70);
}

uint64_t sub_100290D58(uint64_t a1, double a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v23 - v10;
  *(double *)&uint64_t result = COERCE_DOUBLE((*(uint64_t (**)(uint64_t))(*(void *)a1 + 120LL))(v9));
  if ((v13 & 1) == 0)
  {
    double v14 = *(double *)&result;
    if (*(double *)&result <= a2)
    {
      uint64_t v19 = corelog.getter((uint64_t)v8);
      uint64_t v20 = (os_log_s *)Logger.logObject.getter(v19);
      os_log_type_t v21 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc(22LL, -1LL);
        *(_DWORD *)uint64_t v22 = 134349312;
        double v24 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v22 + 4, v22 + 12);
        *(_WORD *)(v22 + 12) = 2050;
        double v24 = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v22 + 14, v22 + 22);
        _os_log_impl( (void *)&_mh_execute_header,  v20,  v21,  "debounce.workItem,callback,mctnow,%{public}f,last,%{public}f",  (uint8_t *)v22,  0x16u);
        swift_slowDealloc(v22, -1LL, -1LL);
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      *(double *)&uint64_t result = COERCE_DOUBLE(sub_100290FD4(0LL, 1));
    }

    else
    {
      uint64_t v15 = corelog.getter((uint64_t)v11);
      uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc(22LL, -1LL);
        *(_DWORD *)uint64_t v18 = 134349312;
        double v24 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 4, v18 + 12);
        *(_WORD *)(v18 + 12) = 2050;
        double v24 = v14;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v18 + 14, v18 + 22);
        _os_log_impl( (void *)&_mh_execute_header,  v16,  v17,  "debounce.workItem,skip,mctnow,%{public}f,last,%{public}f",  (uint8_t *)v18,  0x16u);
        swift_slowDealloc(v18, -1LL, -1LL);
      }

      *(double *)&uint64_t result = COERCE_DOUBLE((*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4));
    }
  }

  return result;
}

uint64_t sub_100290FD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  corelog.getter((uint64_t)v9);
  uint64_t v10 = swift_retain_n(v2, 2LL);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    char v13 = (_DWORD *)swift_slowAlloc(18LL, -1LL);
    double v14 = v13;
    *char v13 = 134349312;
    double v15 = *(double *)&a1;
    if ((a2 & 1) != 0) {
      double v15 = -1.0;
    }
    double v26 = v15;
    uint64_t v16 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27, v13 + 1, v13 + 3);
    *((_WORD *)v14 + 6) = 1026;
    uint64_t v24 = v7;
    uint64_t v17 = (*((uint64_t (**)(uint64_t))*v2 + 18))(v16);
    swift_release(v3);
    swift_release(v17);
    BOOL v25 = v17 != 0;
    uint64_t v7 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, (char *)v14 + 14, (char *)v14 + 18);
    swift_release(v3);
    _os_log_impl( (void *)&_mh_execute_header,  v11,  v12,  "debounce.callback,now,%{public}f,scheduled,%{BOOL,public}d",  (uint8_t *)v14,  0x12u);
    swift_slowDealloc(v14, -1LL, -1LL);
  }

  else
  {

    swift_release_n(v2, 2LL);
  }

  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v3[3](v18);
  if ((a2 & 1) != 0) {
    *(double *)&a1 = machContTimeSec()();
  }
  uint64_t v19 = (*((uint64_t (**)(uint64_t, void))*v3 + 16))(a1, 0LL);
  uint64_t v20 = (*((uint64_t (**)(uint64_t))*v3 + 18))(v19);
  if (v20)
  {
    uint64_t v21 = v20;
    dispatch thunk of DispatchWorkItem.cancel()();
    swift_release(v21);
  }

  return (*((uint64_t (**)(void))*v3 + 19))(0LL);
}

uint64_t sub_100291210()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 64));
  return v0;
}

uint64_t sub_10029123C()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 64));
  return swift_deallocClassInstance(v0, 72LL, 7LL);
}

uint64_t sub_100291270()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100291294()
{
  return sub_100290D58(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1002912A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002912B0(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

unint64_t sub_1002912B8()
{
  unint64_t result = qword_100368050;
  if (!qword_100368050)
  {
    uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_100368050);
  }

  return result;
}

unint64_t sub_100291300()
{
  unint64_t result = qword_100368060;
  if (!qword_100368060)
  {
    uint64_t v1 = sub_10000FED4(&qword_100367DB0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_100368060);
  }

  return result;
}

uint64_t type metadata accessor for ALDebounce()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon10ALDebounce);
}

uint64_t sub_10029136C()
{
  return swift_retain(*(void *)(v0 + 16));
}

uint64_t sub_100291374()
{
  return swift_retain(*(void *)(v0 + 24));
}

void *sub_10029137C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void sub_1002913BC(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
}

id sub_100291400()
{
  return *(id *)(v0 + 48);
}

id sub_100291408()
{
  return *(id *)(v0 + 56);
}

uint64_t sub_100291410()
{
  return swift_retain(*(void *)(v0 + 72));
}

uint64_t sub_100291444(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 72);
  *(void *)(v1 + 72) = a1;
  return swift_release(v3);
}

void *sub_100291488(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t DataVendorService.__allocating_init()()
{
  uint64_t v1 = swift_allocObject(v0, 80LL, 7LL);
  DataVendorService.init()();
  return v1;
}

void *DataVendorService.init()()
{
  void (*v14)(void **__return_ptr, uint64_t, unint64_t, void *);
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  char *v45;
  void *v46;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unsigned int v55;
  void (*v56)(char *);
  void *v57;
  uint64_t v58;
  void *v59;
  void *v60;
  char v61[24];
  void *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[24];
  char v67[32];
  uint64_t v1 = v0;
  unint64_t v58 = type metadata accessor for OS_dispatch_queue.Attributes(0LL);
  __chkstk_darwin(v58);
  uint64_t v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for DispatchQoS(0LL);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v0[4] = 0LL;
  v0[5] = 0LL;
  uint64_t v11 = v0 + 5;
  v0[8] = 0LL;
  unint64_t v59 = v0 + 8;
  uint64_t v60 = v0 + 4;
  v0[9] = 0LL;
  os_log_type_t v12 = sub_1002990B8();
  uint64_t v13 = *v12;
  double v14 = *(void (**)(void **__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v12 + 112LL);
  swift_retain(*v12);
  v14(&v62, 0x4244656C62616E45LL, 0xE800000000000000LL, &type metadata for Bool);
  swift_release(v13);
  if (v62 != 2 && (v62 & 1) != 0)
  {
    type metadata accessor for ALDatabase();
    double v15 = sub_1002ABE04();
    swift_beginAccess(v11, v61, 1LL, 0LL);
    uint64_t v16 = *v11;
    *uint64_t v11 = v15;
    swift_release(v16);
  }

  uint64_t v17 = [(id)objc_opt_self(NSBundle) mainBundle];
  uint64_t v18 = [v17 bundleIdentifier];

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    uint64_t v21 = v20;
  }

  else
  {
    uint64_t v21 = 0xE100000000000000LL;
    uint64_t v19 = 95LL;
  }

  uint64_t v57 = v1 + 9;
  uint64_t v54 = sub_100291A68();
  uint64_t v62 = (void *)v19;
  uint64_t v63 = v21;
  swift_bridgeObjectRetain(v21);
  v22._countAndFlagsBits = 0x6F72676B6361622ELL;
  v22._object = (void *)0xEB00000000646E75LL;
  String.append(_:)(v22);
  uint64_t v51 = v62;
  os_log_type_t v50 = v63;
  static DispatchQoS.background.getter();
  os_log_type_t v55 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v56 = *(void (**)(char *))(v5 + 104);
  v56(v7);
  uint64_t v62 = &_swiftEmptyArrayStorage;
  uint64_t v23 = sub_100292F10( &qword_100367EC0,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  uint64_t v53 = v23;
  uint64_t v24 = sub_100003A0C(&qword_100367EC8);
  uint64_t v52 = v24;
  BOOL v25 = sub_100292F50(&qword_100367ED0, &qword_100367EC8);
  NSString v49 = v4;
  double v26 = v25;
  uint64_t v27 = v24;
  BOOL v28 = v58;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v27, v25, v58, v23);
  v1[6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v51, v50, v10, v3, v7, 0LL);
  uint64_t v62 = (void *)v19;
  uint64_t v63 = v21;
  swift_bridgeObjectRetain(v21);
  v29._countAndFlagsBits = 7627310LL;
  v29._object = (void *)0xE300000000000000LL;
  String.append(_:)(v29);
  uint64_t v30 = swift_bridgeObjectRelease(v21);
  uint64_t v31 = v62;
  os_log_type_t v32 = v63;
  static DispatchQoS.userInteractive.getter(v30);
  ((void (*)(char *, void, uint64_t))v56)(v7, v55, v49);
  uint64_t v62 = &_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v62, v52, v26, v28, v53);
  uint64_t v33 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(v31, v32, v10, v3, v7, 0LL);
  v1[7] = v33;
  uint64_t v34 = (void *)v1[6];
  sub_100003A0C(&qword_100367ED8);
  char v35 = v34;
  v1[2] = sub_10029DFDC((uint64_t)v35, (uint64_t)sub_100291AA4, 0LL);
  sub_100003A0C(&qword_100367EE0);
  v1[3] = sub_10029DFDC((uint64_t)v33, (uint64_t)sub_100291AB8, 0LL);
  type metadata accessor for ALWiFiResultHub();
  uint64_t v36 = v35;
  swift_retain(v1);
  uint64_t v37 = sub_10028E47C(v36, (uint64_t)sub_100291E40, (uint64_t)v1);
  swift_beginAccess(v59, v67, 1LL, 0LL);
  uint64_t v38 = v1[8];
  v1[8] = v37;
  swift_release(v38);
  type metadata accessor for ALBtResultHub();
  double v39 = (void *)v1[7];
  swift_retain(v1);
  char v40 = sub_1002A3F08(v39, (uint64_t)sub_100292078, (uint64_t)v1);
  swift_beginAccess(v57, v66, 1LL, 0LL);
  double v41 = v1[9];
  v1[9] = v40;
  swift_release(v41);
  double v42 = (void *)v1[6];
  uint64_t v64 = type metadata accessor for DataVendorService();
  double v65 = sub_100292F10( &qword_100367EE8,  v43,  (uint64_t (*)(uint64_t))type metadata accessor for DataVendorService,  (uint64_t)&protocol conformance descriptor for DataVendorService);
  uint64_t v62 = v1;
  uint64_t v44 = objc_allocWithZone((Class)type metadata accessor for ALServiceDelegate());
  swift_retain(v1);
  os_log_type_t v45 = ALServiceDelegate.init(queue:dataService:)(v42, &v62);

  swift_beginAccess(v60, &v62, 1LL, 0LL);
  uint64_t v46 = (void *)v1[4];
  v1[4] = v45;

  return v1;
}

unint64_t sub_100291A68()
{
  unint64_t result = qword_100367EB8;
  if (!qword_100367EB8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_queue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100367EB8);
  }

  return result;
}

uint64_t sub_100291AA4(uint64_t a1, char a2)
{
  return static ALWiFiNotifications.serializedIndications(results:isLastBatch:)(a1, a2);
}

uint64_t sub_100291AB8(uint64_t a1, uint64_t a2)
{
  return static ALBtNotifications.serializedIndications(results:isLastBatch:)(a1, a2);
}

uint64_t sub_100291ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  os_log_type_t v50 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v53 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = sub_100003A0C((uint64_t *)&unk_100368070);
  __chkstk_darwin(v13);
  double v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = *(uint64_t (**)(uint64_t))(**(void **)(a2 + 16) + 200LL);
  uint64_t v51 = a1;
  uint64_t v17 = v56;
  uint64_t result = v16(a1);
  if (!v17)
  {
    uint64_t v45 = v12;
    uint64_t v46 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    uint64_t v47 = v11;
    uint64_t v48 = a2;
    uint64_t v49 = 0LL;
    uint64_t v56 = v9;
    uint64_t v19 = v50;
    uint64_t v20 = v51;
    ALWiFiNotification._scanResult.getter(result);
    uint64_t v21 = type metadata accessor for ALWiFiScanResult(0LL);
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1LL, v21);
    if ((_DWORD)v23 == 1)
    {
      sub_100292F90((uint64_t)v15);
      uint64_t v24 = 0LL;
    }

    else
    {
      uint64_t v25 = ALWiFiScanResult._accessPoints.getter(v23);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v21);
      uint64_t v24 = *(void *)(v25 + 16);
      swift_bridgeObjectRelease(v25);
    }

    double v26 = v19;
    uint64_t v27 = v56;
    uint64_t v28 = v47;
    uint64_t v29 = v48;
    uint64_t v56 = *(char **)(v48 + 48);
    uint64_t v30 = v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v20, v10);
    uint64_t v31 = *(unsigned __int8 *)(v28 + 80);
    uint64_t v32 = v28;
    uint64_t v33 = (v31 + 24) & ~v31;
    unint64_t v34 = (v45 + v33 + 7) & 0xFFFFFFFFFFFFFFF8LL;
    uint64_t v35 = swift_allocObject(&unk_100346C30, v34 + 8, v31 | 7);
    uint64_t v36 = v10;
    uint64_t v37 = v35;
    *(void *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v35 + v33, v30, v36);
    *(void *)(v37 + v34) = v24;
    aBlock[4] = sub_100293050;
    uint64_t v58 = v37;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100284B68;
    void aBlock[3] = &unk_100346C48;
    uint64_t v38 = _Block_copy(aBlock);
    uint64_t v39 = swift_retain(v29);
    static DispatchQoS.unspecified.getter(v39);
    unint64_t v59 = &_swiftEmptyArrayStorage;
    uint64_t v40 = sub_100292F10( (unint64_t *)&qword_100368050,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v41 = sub_100003A0C(&qword_100367DB0);
    uint64_t v42 = sub_100292F50((unint64_t *)&qword_100368060, &qword_100367DB0);
    uint64_t v43 = v41;
    uint64_t v44 = v55;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v59, v43, v42, v55, v40);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v27, v26, v38);
    _Block_release(v38);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v26, v44);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v52);
    return swift_release(v58);
  }

  return result;
}

uint64_t sub_100291E40(uint64_t a1)
{
  return sub_100291ACC(a1, v1);
}

uint64_t sub_100291E58(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v9 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(a2 + 24) + 200LL))(a1);
  if (!v2)
  {
    uint64_t v13 = ALBtNotification._advertisements.getter(result);
    uint64_t v14 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease(v13);
    uint64_t v23 = *(void *)(a2 + 48);
    uint64_t v15 = swift_allocObject(&unk_100346BE0, 24LL, 7LL);
    *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
    aBlock[4] = sub_100292E5C;
    uint64_t v26 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_100284B68;
    void aBlock[3] = &unk_100346BF8;
    uint64_t v16 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v16);
    uint64_t v27 = &_swiftEmptyArrayStorage;
    uint64_t v17 = sub_100292F10( (unint64_t *)&qword_100368050,  255LL,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v22 = v6;
    uint64_t v18 = v17;
    uint64_t v19 = sub_100003A0C(&qword_100367DB0);
    uint64_t v20 = sub_100292F50((unint64_t *)&qword_100368060, &qword_100367DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v27, v19, v20, v5, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v8, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
    return swift_release(v26);
  }

  return result;
}

uint64_t sub_100292078(uint64_t a1)
{
  return sub_100291E58(a1, v1);
}

uint64_t type metadata accessor for DataVendorService()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon17DataVendorService);
}

uint64_t sub_1002920B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  uint64_t v69 = a3;
  uint64_t v8 = sub_100003A0C(&qword_100367EF0);
  __chkstk_darwin(v8);
  uint64_t v68 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ClientCallback(0LL);
  __chkstk_darwin(v10);
  uint64_t v12 = (uint8_t *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for Logger(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v63 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v63 - v21;
  if ((dispatch thunk of ALProtoRequest.isWiFiResult()() & 1) != 0)
  {
    corelog.getter((uint64_t)v22);
    id v23 = a4;
    uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v67 = v13;
      uint64_t v26 = swift_slowAlloc(12LL, -1LL);
      uint64_t v65 = v5;
      uint64_t v27 = (uint8_t *)v26;
      uint64_t v63 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v64 = v27;
      *(_DWORD *)uint64_t v27 = 138543362;
      id v70 = v23;
      id v28 = v23;
      uint64_t v66 = v14;
      id v29 = v28;
      uint64_t v13 = v67;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v27 + 4, v27 + 12);
      uint64_t v30 = v63;
      *uint64_t v63 = v23;

      uint64_t v14 = v66;
      uint64_t v31 = v64;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Add wifi client %{public}@", v64, 0xCu);
      uint64_t v32 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v30, 1LL, v32);
      swift_slowDealloc(v30, -1LL, -1LL);
      uint64_t v33 = v31;
      uint64_t v5 = v65;
      swift_slowDealloc(v33, -1LL, -1LL);
    }

    else
    {

      uint64_t v24 = (os_log_s *)v23;
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
    uint64_t v44 = type metadata accessor for ALResultOptions(0LL);
    uint64_t v45 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56LL))(v68, 1LL, 1LL, v44);
    id v46 = v23;
    uint64_t v47 = v69;
    swift_retain(v69);
    sub_10029DAB4(a2, v47, (uint64_t)v46, v45, v12);
    uint64_t v48 = *(void *)(v5 + 16);
LABEL_13:
    (*(void (**)(uint8_t *))(*(void *)v48 + 176LL))(v12);
    return sub_100292DE4((uint64_t)v12);
  }

  if ((dispatch thunk of ALProtoRequest.isBtResult()() & 1) != 0)
  {
    corelog.getter((uint64_t)v20);
    id v34 = a4;
    uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v64 = v12;
      uint64_t v37 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v38 = swift_slowAlloc(8LL, -1LL);
      uint64_t v67 = v13;
      uint64_t v63 = (void *)v38;
      uint64_t v65 = v5;
      *(_DWORD *)uint64_t v37 = 138543362;
      id v70 = v34;
      id v39 = v34;
      uint64_t v66 = a2;
      id v40 = v39;
      uint64_t v12 = v64;
      uint64_t v5 = v65;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v37 + 4, v37 + 12);
      uint64_t v41 = v63;
      *uint64_t v63 = v34;

      a2 = v66;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Add BT client %{public}@", v37, 0xCu);
      uint64_t v42 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v41, 1LL, v42);
      uint64_t v43 = v41;
      uint64_t v13 = v67;
      swift_slowDealloc(v43, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {

      uint64_t v35 = (os_log_s *)v34;
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
    uint64_t v58 = type metadata accessor for ALResultOptions(0LL);
    uint64_t v59 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56LL))(v68, 1LL, 1LL, v58);
    id v60 = v34;
    uint64_t v61 = v69;
    swift_retain(v69);
    sub_10029DAB4(a2, v61, (uint64_t)v60, v59, v12);
    uint64_t v48 = *(void *)(v5 + 24);
    goto LABEL_13;
  }

  corelog.getter((uint64_t)v17);
  id v49 = a4;
  os_log_type_t v50 = (os_log_s *)Logger.logObject.getter(v49);
  os_log_type_t v51 = static os_log_type_t.error.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    uint64_t v52 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v53 = swift_slowAlloc(8LL, -1LL);
    uint64_t v67 = v13;
    uint64_t v54 = (void *)v53;
    uint64_t v66 = v14;
    *(_DWORD *)uint64_t v52 = 138543362;
    id v70 = v49;
    id v55 = v49;
    uint64_t v14 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71, v52 + 4, v52 + 12);
    *uint64_t v54 = v49;

    _os_log_impl((void *)&_mh_execute_header, v50, v51, "Unknown subscribe %{public}@", v52, 0xCu);
    uint64_t v56 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v54, 1LL, v56);
    uint64_t v57 = v54;
    uint64_t v13 = v67;
    swift_slowDealloc(v57, -1LL, -1LL);
    swift_slowDealloc(v52, -1LL, -1LL);
  }

  else
  {

    os_log_type_t v50 = (os_log_s *)v49;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_1002926A8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - v12;
  corelog.getter((uint64_t)&v29 - v12);
  id v14 = a5;
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.info.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  if (v17)
  {
    uint64_t v36 = v10;
    uint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = swift_slowAlloc(8LL, -1LL);
    unint64_t v32 = a2;
    uint64_t v20 = (void *)v19;
    uint64_t v30 = v18;
    *(_DWORD *)uint64_t v18 = 138543362;
    id v38 = v14;
    id v21 = v14;
    uint64_t v31 = a1;
    id v22 = v21;
    uint64_t v10 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v18 + 4, v18 + 12);
    void *v20 = v14;

    id v23 = v30;
    a1 = v31;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "subscribeDataService,%{public}@", v30, 0xCu);
    uint64_t v24 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v20, 1LL, v24);
    os_log_type_t v25 = v20;
    a2 = v32;
    swift_slowDealloc(v25, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);
  }

  else
  {

    uint64_t v15 = (os_log_s *)v14;
  }

  uint64_t v26 = v37;

  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
  type metadata accessor for ALProtoRequest(0LL);
  sub_100017F58(a1, a2);
  uint64_t v27 = ALProtoRequest.__allocating_init(data:)(a1, a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t, id))(*(void *)v33 + 248LL))(v27, v34, v35, v14);
  return swift_release(v27);
}

uint64_t sub_100292B40(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  corelog.getter((uint64_t)v7);
  id v8 = a1;
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v20 = v2;
    uint64_t v11 = swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = v5;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138543362;
    id v21 = v8;
    id v13 = v8;
    uint64_t v2 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v12 + 4, v12 + 12);
    id v14 = v18;
    void *v18 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "unsubscribeDataService,%{public}@", v12, 0xCu);
    uint64_t v15 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v14, 1LL, v15);
    swift_slowDealloc(v14, -1LL, -1LL);
    os_log_type_t v16 = v12;
    uint64_t v5 = v19;
    swift_slowDealloc(v16, -1LL, -1LL);
  }

  else
  {

    uint64_t v9 = (os_log_s *)v8;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(id))(**(void **)(v2 + 16) + 184LL))(v8);
  return (*(uint64_t (**)(id))(**(void **)(v2 + 24) + 184LL))(v8);
}

uint64_t DataVendorService.deinit()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 64));
  swift_release(*(void *)(v0 + 72));
  return v0;
}

uint64_t DataVendorService.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 80LL, 7LL);
}

uint64_t sub_100292D94()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 256LL))();
}

uint64_t sub_100292DBC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264LL))();
}

uint64_t sub_100292DE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClientCallback(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t method lookup function for DataVendorService(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DataVendorService);
}

uint64_t dispatch thunk of DataVendorService.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of DataVendorService.subscribe(_:cb:id:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256LL))();
}

uint64_t dispatch thunk of DataVendorService.unsubscribe(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264LL))();
}

uint64_t sub_100292E4C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100292E5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_10028EB7C();
  if (v1 < 0)
  {
    char v6 = 2;
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL,  v6,  3451LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t v3 = *v2;
    uint64_t v4 = *(void (**)(uint64_t))(*(void *)*v2 + 176LL);
    swift_retain(*v2);
    v4(v1);
    return swift_release(v3);
  }

  return result;
}

uint64_t sub_100292EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100292F08(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100292F10(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = a3(a2);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100292F50(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_10000FED4(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100292F90(uint64_t a1)
{
  uint64_t v2 = sub_100003A0C((uint64_t *)&unk_100368070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100292FD0()
{
  uint64_t v1 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8;
  swift_release(*(void *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100293050()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(type metadata accessor for ALWiFiNotification(0LL) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8LL));
  uint64_t v5 = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 168LL))();
  if (v5)
  {
    uint64_t v6 = v5;
    (*(void (**)(unint64_t))(*(void *)v5 + 184LL))(v1 + v3);
    swift_release(v6);
  }

  uint64_t v7 = sub_10028EB7C();
  if (v4 < 0)
  {
    char v11 = 2;
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL,  v11,  3451LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t v8 = *v7;
    uint64_t v9 = *(void (**)(uint64_t))(*(void *)*v7 + 168LL);
    swift_retain(*v7);
    v9(v4);
    return swift_release(v8);
  }

  return result;
}

uint64_t sub_100293150(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v32 = a1;
  unint64_t v36 = *(void *)(a1 + 16);
  if (v36 >= 2)
  {
    uint64_t v13 = 0LL;
    uint64_t v14 = v32 + ((*(unsigned __int8 *)(v35 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    float v15 = *(float *)&v34;
    uint64_t v16 = *(void *)(v35 + 72);
    BOOL v17 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    unint64_t v33 = v36 - 1;
    while (1)
    {
      if (v36 == v13)
      {
        __break(1u);
        return result;
      }

      v17(v12, v14, v6);
      uint64_t v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v17)(v9, v14 + v16, v6);
      uint64_t v20 = ALWiFiScanSingleAccessPoint._ageSec.getter(v19);
      if ((v20 & 0x100000000LL) != 0) {
        goto LABEL_10;
      }
      float v21 = *(float *)&v20;
      uint64_t v22 = ALWiFiScanSingleAccessPoint._ageSec.getter(v20);
      if ((v22 & 0x100000000LL) != 0) {
        goto LABEL_10;
      }
      uint64_t v18 = *(void (**)(char *, uint64_t, float, float))(v35 + 8);
      v18(v9, v6, v21, *(float *)&v22);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v12, v6);
LABEL_4:
      ++v13;
      v14 += v16;
      if (v33 == v13) {
        return result;
      }
    }

    if ((v34 & 0x100000000LL) != 0)
    {
LABEL_10:
      id v23 = *(void (**)(char *, uint64_t))(v35 + 8);
      v23(v9, v6);
      v23(v12, v6);
    }

    else
    {
      float v26 = vabds_f32(v21, *(float *)&v22);
      uint64_t v27 = *(void (**)(char *, uint64_t))(v35 + 8);
      v27(v9, v6);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v27)(v12, v6);
      if (v26 <= v15) {
        goto LABEL_4;
      }
    }

    uint64_t v24 = corelog.getter((uint64_t)v5);
    __chkstk_darwin(v24);
    char v25 = BYTE4(v34);
    *((_DWORD *)&v29 - 8) = v34;
    *((_BYTE *)&v29 - 28) = v25 & 1;
    *(&v29 - 3) = v13 + 1;
    uint64_t v28 = 54LL;
    Logger._fault(_:function:file:line:)( (uint64_t (*)(void))sub_100293400,  (uint64_t)(&v29 - 6),  (uint64_t *)"checkInOrder(_:toleranceSec:)",  29LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALLeechCoreWiFi.swift",  73LL,  2);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v5, v31);
    goto LABEL_4;
  }

  return result;
}

void sub_100293400()
{
  int v1 = *(_DWORD *)(v0 + 16);
  char v2 = *(_BYTE *)(v0 + 20);
  unint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  v18[1] = 0LL;
  v18[2] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(44LL);
  v5._object = (void *)0x80000001002F5630LL;
  v5._countAndFlagsBits = 0xD000000000000021LL;
  String.append(_:)(v5);
  LODWORD(v18[0]) = v1;
  BYTE4(v18[0]) = v2;
  DefaultStringInterpolation.appendInterpolation<A>(_:)( (uint64_t)v18,  (uint64_t)&type metadata for Float,  (uint64_t)&protocol witness table for Float);
  v6._countAndFlagsBits = 44LL;
  v6._object = (void *)0xE100000000000000LL;
  String.append(_:)(v6);
  v18[0] = v3;
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v7._object;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(object);
  v9._countAndFlagsBits = 44LL;
  v9._object = (void *)0xE100000000000000LL;
  String.append(_:)(v9);
  unint64_t v10 = v3 - 1;
  if (__OFSUB__(v3, 1LL))
  {
    __break(1u);
    goto LABEL_7;
  }

  if ((v10 & 0x8000000000000000LL) != 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }

  unint64_t v11 = *(void *)(v4 + 16);
  if (v10 >= v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }

  type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  v12._countAndFlagsBits = ALWiFiScanSingleAccessPoint.description.getter();
  uint64_t v13 = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v13);
  v14._countAndFlagsBits = 44LL;
  v14._object = (void *)0xE100000000000000LL;
  String.append(_:)(v14);
  if (v11 > v3)
  {
    v15._countAndFlagsBits = ALWiFiScanSingleAccessPoint.description.getter();
    uint64_t v16 = v15._object;
    String.append(_:)(v15);
    swift_bridgeObjectRelease(v16);
    v17._countAndFlagsBits = 0LL;
    v17._object = (void *)0xE000000000000000LL;
    String.append(_:)(v17);
    return;
  }

LABEL_9:
  __break(1u);
}

void *sub_100293598()
{
  int v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void sub_1002935D8(uint64_t a1)
{
  unint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a1;
}

uint64_t sub_10029361C()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_100293650(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess(v2 + 64, v6, 1LL, 0LL);
  *(void *)(v2 + 64) = a1;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t sub_1002936A0()
{
  return swift_retain(*(void *)(v0 + 80));
}

uint64_t sub_1002936D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)(v1 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a1;
  return swift_release(v3);
}

void *sub_100293718(uint64_t a1)
{
  return &j_j__swift_endAccess;
}

uint64_t sub_100293754(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100297CF4(a1, a2, a3);

  swift_release(a3);
  return v7;
}

uint64_t sub_1002937B8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100297CF4(a1, a2, a3);

  swift_release(a3);
  return v5;
}

uint64_t sub_1002937F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v44 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::String v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  Swift::String v14 = (char *)&v38 - v13;
  uint64_t v15 = (*(uint64_t (**)(id))(*(void *)v0 + 184))([objc_allocWithZone(CWFInterface) init]);
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 176LL))(v15);
  if (v16)
  {
    Swift::String v17 = (void *)v16;
    uint64_t v39 = v6;
    id v40 = v5;
    uint64_t v41 = v3;
    uint64_t v42 = v2;
    corelog.getter((uint64_t)v14);
    id v18 = v17;
    uint64_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      float v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      *(_DWORD *)float v21 = 134349056;
      double aBlock = (void **)[v18 serviceType];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v47, v21 + 4, v21 + 12);

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "#WiFi, Leeching CoreWiFi %{public}ld", v21, 0xCu);
      swift_slowDealloc(v21, -1LL, -1LL);
    }

    else
    {

      uint64_t v19 = (os_log_s *)v18;
    }

    uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    uint64_t v24 = *(uint64_t (**)(void))(*(void *)v1 + 128LL);
    char v25 = (void *)((uint64_t (*)(uint64_t))v24)(v23);
    [v18 setTargetQueue:v25];

    os_log_type_t v50 = sub_100297E30;
    uint64_t v51 = v1;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256LL;
    uint64_t v48 = sub_100285318;
    id v49 = &unk_100346CC0;
    float v26 = _Block_copy(&aBlock);
    uint64_t v27 = v51;
    swift_retain(v1);
    swift_release(v27);
    [v18 setEventHandler:v26];
    _Block_release(v26);
    uint64_t v28 = (void *)v24();
    os_log_type_t v50 = sub_100297E50;
    uint64_t v51 = v1;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256LL;
    uint64_t v48 = sub_100284B68;
    id v49 = &unk_100346CE8;
    uint64_t v29 = _Block_copy(&aBlock);
    uint64_t v30 = swift_retain(v1);
    uint64_t v31 = v43;
    static DispatchQoS.unspecified.getter(v30);
    uint64_t v45 = &_swiftEmptyArrayStorage;
    unint64_t v32 = sub_1002912B8();
    uint64_t v33 = sub_100003A0C(&qword_100367DB0);
    uint64_t v34 = sub_100298804( (unint64_t *)&qword_100368060,  &qword_100367DB0,  (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v35 = v40;
    uint64_t v36 = v33;
    uint64_t v37 = v42;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v36, v34, v42, v32);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v31, v35, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v37);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v39);
    return swift_release(v51);
  }

  else
  {
    corelog.getter((uint64_t)v12);
    Logger._fault(_:function:file:line:)( (uint64_t (*)(void))sub_100293C40,  0LL,  (uint64_t *)"regCoreWiFi()",  13LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALLeechCoreWiFi.swift",  73LL,  2);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }

unint64_t sub_100293C40()
{
  return 0xD000000000000013LL;
}

uint64_t sub_100293C5C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v19 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Swift::String v12 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 128LL))(v9);
  uint64_t v13 = swift_allocObject(&unk_100346D98, 32LL, 7LL);
  *(void *)(v13 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v13 + 24) = a1;
  aBlock[4] = sub_100298A30;
  uint64_t v22 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100284B68;
  void aBlock[3] = &unk_100346DB0;
  Swift::String v14 = _Block_copy(aBlock);
  swift_retain(a2);
  static DispatchQoS.unspecified.getter(a1);
  os_log_type_t v20 = &_swiftEmptyArrayStorage;
  unint64_t v15 = sub_1002912B8();
  uint64_t v16 = sub_100003A0C(&qword_100367DB0);
  uint64_t v17 = sub_100298804( (unint64_t *)&qword_100368060,  &qword_100367DB0,  (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v20, v16, v17, v4, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return swift_release(v22);
}

uint64_t sub_100293E48(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = (*(uint64_t (**)(void *))(*(void *)a1 + 328LL))(a2);
  if (v2)
  {
    corelog.getter((uint64_t)v8);
    id v10 = a2;
    uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v24 = v5;
      uint64_t v13 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      float v21 = (void *)swift_slowAlloc(8LL, -1LL);
      uint64_t v22 = v13;
      *(_DWORD *)uint64_t v13 = 138543362;
      os_log_type_t v20 = v13 + 4;
      id v25 = v10;
      id v14 = v10;
      uint64_t v23 = v6;
      id v15 = v14;
      uint64_t v5 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26, v20, v13 + 12);
      uint64_t v16 = v21;
      *float v21 = v10;

      uint64_t v17 = v22;
      uint64_t v6 = v23;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "#WiFi,eventHandler,catch,%{public}@", v22, 0xCu);
      uint64_t v18 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v16, 1LL, v18);
      swift_slowDealloc(v16, -1LL, -1LL);
      swift_slowDealloc(v17, -1LL, -1LL);
    }

    else
    {

      uint64_t v11 = (os_log_s *)v10;
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(uint64_t))(*(void *)a1 + 296LL))(v2);
    return swift_errorRelease(v2);
  }

  return result;
}

void *sub_100294054()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)&v37 - v8;
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v0 + 176LL))(v7);
  if (result)
  {
    id v10 = result;
    [result activate];
    uint64_t v11 = 0LL;
    *(void *)&__int128 v12 = 134349056LL;
    __int128 v39 = v12;
    uint64_t v38 = v6;
    do
    {
      uint64_t v13 = *(uint64_t *)((char *)&off_100346C88 + v11 + 32);
      id v41 = 0LL;
      unsigned int v14 = [v10 startMonitoringEventType:v13 error:&v41];
      id v15 = v41;
      if (v14)
      {
        id v16 = v41;
        uint64_t v17 = corelog.getter(v40);
        uint64_t v18 = (os_log_s *)Logger.logObject.getter(v17);
        os_log_type_t v19 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = swift_slowAlloc(12LL, -1LL);
          *(_DWORD *)uint64_t v20 = v39;
          *(void *)(v20 + 4) = v13;
          _os_log_impl( (void *)&_mh_execute_header,  v18,  v19,  "#WiFi,startMonitoringEventType,%{public}ld",  (uint8_t *)v20,  0xCu);
          swift_slowDealloc(v20, -1LL, -1LL);
        }

        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v40, v2);
      }

      else
      {
        id v21 = v41;
        uint64_t v22 = _convertNSErrorToError(_:)(v15);

        swift_willThrow();
        uint64_t v23 = corelog.getter((uint64_t)v6);
        uint64_t v24 = (os_log_s *)Logger.logObject.getter(v23);
        os_log_type_t v25 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = v3;
          uint64_t v27 = v2;
          uint64_t v28 = v10;
          uint64_t v29 = v1;
          uint64_t v30 = swift_slowAlloc(12LL, -1LL);
          *(_DWORD *)uint64_t v30 = v39;
          *(void *)(v30 + 4) = v13;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "#WiFi,activate,catch,%{public}ld", (uint8_t *)v30, 0xCu);
          uint64_t v31 = v30;
          uint64_t v1 = v29;
          id v10 = v28;
          uint64_t v2 = v27;
          uint64_t v3 = v26;
          uint64_t v6 = v38;
          swift_slowDealloc(v31, -1LL, -1LL);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        (*(void (**)(uint64_t))(*(void *)v1 + 296LL))(v22);
        swift_errorRelease(v22);
      }

      v11 += 8LL;
    }

    while (v11 != 24);
    id v32 = [v10 BSSID];
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      uint64_t v36 = v35;
    }

    else
    {
      uint64_t v34 = 0LL;
      uint64_t v36 = 0LL;
    }

    (*(void (**)(uint64_t, uint64_t))(*(void *)v1 + 320LL))(v34, v36);

    return (void *)swift_bridgeObjectRelease(v36);
  }

  return result;
}

uint64_t sub_100294380(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v59 = (char *)&v54 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  id v60 = (char *)&v54 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v58 = (char *)&v54 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v54 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v54 - v16;
  corelog.getter((uint64_t)&v54 - v16);
  swift_errorRetain(a1);
  uint64_t v18 = swift_errorRetain(a1);
  os_log_type_t v19 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc(22LL, -1LL);
    uint64_t v55 = v3;
    uint64_t v22 = v21;
    uint64_t v23 = swift_slowAlloc(8LL, -1LL);
    uint64_t v57 = v2;
    uint64_t v24 = (void *)v23;
    *(_DWORD *)uint64_t v22 = 134349314;
    uint64_t v56 = v6;
    swift_getErrorValue(a1, v63, v62);
    uint64_t v61 = dispatch thunk of Error._code.getter(v62[1], v62[2]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v22 + 4, v22 + 12);
    *(_WORD *)(v22 + 12) = 2114;
    swift_errorRetain(a1);
    uint64_t v25 = _swift_stdlib_bridgeErrorToNSError(a1);
    uint64_t v61 = v25;
    uint64_t v6 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, v62, v22 + 14, v22 + 22);
    void *v24 = v25;
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "#WiFi,exceptionHandling,code,%{public}ld,%{public}@",  (uint8_t *)v22,  0x16u);
    uint64_t v26 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v24, 1LL, v26);
    uint64_t v27 = v24;
    uint64_t v2 = v57;
    swift_slowDealloc(v27, -1LL, -1LL);
    uint64_t v28 = v22;
    uint64_t v3 = v55;
    swift_slowDealloc(v28, -1LL, -1LL);
  }

  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  uint64_t v29 = *(void (**)(char *, uint64_t))(v3 + 8);
  v29(v17, v2);
  swift_getErrorValue(a1, v65, v64);
  uint64_t v30 = dispatch thunk of Error._code.getter(v64[1], v64[2]);
  if (v30 > 4096)
  {
    if (v30 == 4097)
    {
      id v15 = v58;
      uint64_t v51 = corelog.getter((uint64_t)v58);
      id v32 = (os_log_s *)Logger.logObject.getter(v51);
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v34 = 0;
        uint64_t v35 = "#WiFi,exceptionHandling,interrupted";
        goto LABEL_18;
      }

      goto LABEL_20;
    }

    if (v30 == 4099)
    {
      uint64_t v36 = corelog.getter((uint64_t)v15);
      id v32 = (os_log_s *)Logger.logObject.getter(v36);
      os_log_type_t v37 = static os_log_type_t.error.getter(v32);
      if (os_log_type_enabled(v32, v37))
      {
        uint64_t v38 = v2;
        __int128 v39 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)__int128 v39 = 67240192;
        uint64_t v40 = sub_100298C38();
        uint64_t v41 = *v40;
        uint64_t v42 = *(uint64_t (**)(uint64_t))(*(void *)*v40 + 144LL);
        uint64_t v43 = swift_retain(*v40);
        char v44 = v42(v43);
        uint64_t v45 = v15;
        char v46 = v44;
        swift_release(v41);
        int v47 = v46 & 1;
        id v15 = v45;
        LODWORD(v61) = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, (char *)&v61 + 4, v39 + 4, v39 + 8);
        _os_log_impl( (void *)&_mh_execute_header,  v32,  v37,  "#WiFi,exceptionHandling,unloaded,virtual,%{BOOL,public}d",  v39,  8u);
        uint64_t v48 = v39;
        uint64_t v2 = v38;
LABEL_19:
        swift_slowDealloc(v48, -1LL, -1LL);
        goto LABEL_20;
      }

      goto LABEL_20;
    }
  }

  else
  {
    if (v30 == 60)
    {
      id v15 = v59;
      uint64_t v50 = corelog.getter((uint64_t)v59);
      id v32 = (os_log_s *)Logger.logObject.getter(v50);
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v34 = 0;
        uint64_t v35 = "#WiFi,exceptionHandling,timeout";
        goto LABEL_18;
      }

uint64_t sub_1002948FC(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v204 = a2;
  uint64_t v200 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v190 = *(void *)(v200 - 8);
  __chkstk_darwin(v200);
  uint64_t v6 = (char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v199 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v197 = (char *)&v184 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v196 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v195 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v194 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_100003A0C((uint64_t *)&unk_100368070);
  __chkstk_darwin(v9);
  uint64_t v193 = (char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_100355298);
  __chkstk_darwin(v11);
  uint64_t v192 = (char *)&v184 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v217 = type metadata accessor for ALWiFiScanSingleAccessPoint.Band(0LL);
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v215 = (char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100003A0C((uint64_t *)&unk_100368080);
  __chkstk_darwin(v14);
  char v214 = (char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v223 = *(uint8_t **)(v16 - 8);
  uint64_t v224 = v16;
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v222 = (char *)&v184 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17);
  uint64_t v226 = (char *)&v184 - v19;
  uint64_t v211 = type metadata accessor for Logger(0LL);
  uint64_t v225 = *(void *)(v211 - 8);
  uint64_t v20 = __chkstk_darwin(v211);
  uint64_t v22 = (char *)&v184 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v184 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  uint64_t v220 = (uint64_t)&v184 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v221 = (uint64_t)&v184 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v184 - v30;
  uint64_t v32 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v184 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v203 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v202 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  uint64_t v36 = (char *)&v184 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v38 = a1[3];
  uint64_t v37 = a1[4];
  sub_100286330(a1, v38);
  if (dispatch thunk of Collection.count.getter(v38, *(void *)(*(void *)(v37 + 8) + 8LL)) < 1)
  {
    uint64_t v62 = corelog.getter((uint64_t)v22);
    uint64_t v63 = (os_log_s *)Logger.logObject.getter(v62);
    os_log_type_t v64 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "#WiFi, empty scan cache batch", v65, 2u);
      swift_slowDealloc(v65, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v225 + 8))(v22, v211);
  }

  double v39 = machContTimeSec()();
  uint64_t v41 = ALWiFiScanResult.init()(v40);
  v42.n128_f64[0] = v39;
  ALTimeStamp.init(machContinuousTimeSec:)(v41, v42);
  uint64_t v43 = type metadata accessor for ALTimeStamp(0LL);
  char v44 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56LL);
  uint64_t v187 = v43;
  uint64_t v186 = v44;
  ((void (*)(char *, void, uint64_t))v44)(v34, 0LL, 1LL);
  uint64_t v45 = ALWiFiScanResult._scanTimestamp.setter(v34);
  uint64_t v188 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 200LL))(v45);
  int v185 = v46;
  corelog.getter((uint64_t)v31);
  sub_100087650((uint64_t)a1, (uint64_t)&aBlock);
  uint64_t v47 = swift_retain(v3);
  uint64_t v48 = (os_log_s *)Logger.logObject.getter(v47);
  os_log_type_t v49 = static os_log_type_t.default.getter();
  int v50 = v49;
  BOOL v51 = os_log_type_enabled(v48, v49);
  uint64_t v218 = v36;
  uint64_t v213 = v34;
  uint64_t v184 = v6;
  uint64_t v191 = v25;
  uint64_t v189 = v3;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc(38LL, -1LL);
    *(_DWORD *)uint64_t v52 = 67240960;
    LODWORD(v227) = v204 & 1;
    int v219 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v227, (char *)&v227 + 4, v52 + 4, v52 + 8);
    *(_WORD *)(v52 + 8) = 2050;
    double v227 = v39;
    uint64_t v53 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v227, v228, v52 + 10, v52 + 18);
    *(_WORD *)(v52 + 18) = 2050;
    *(double *)&uint64_t v54 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t))(*(void *)v3 + 224LL))(v53));
    if ((v55 & 1) != 0) {
      double v56 = 0.0;
    }
    else {
      double v56 = *(double *)&v54;
    }
    double v227 = v56;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v227, v228, v52 + 20, v52 + 28);
    swift_release(v3);
    *(_WORD *)(v52 + 28) = 2050;
    uint64_t v58 = AssociatedTypeWitness;
    uint64_t v57 = AssociatedConformanceWitness;
    sub_100286330(&aBlock, (uint64_t)AssociatedTypeWitness);
    uint64_t v59 = v58;
    id v60 = v213;
    double v61 = COERCE_DOUBLE(dispatch thunk of Collection.count.getter(v59, *(void *)(*((void *)v57 + 1) + 8LL)));
    sub_10001882C(&aBlock);
    double v227 = v61;
    uint64_t v36 = v218;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v227, v228, v52 + 30, v52 + 38);
    _os_log_impl( (void *)&_mh_execute_header,  v48,  (os_log_type_t)v219,  "#WiFi,bg,%{BOOL,public}d,now,%{public}f,last,%{public}llu,size,%{public}ld",  (uint8_t *)v52,  0x26u);
    swift_slowDealloc(v52, -1LL, -1LL);
  }

  else
  {
    id v60 = v34;
    sub_10001882C(&aBlock);

    swift_release(v3);
  }

  uint64_t v67 = v211;
  uint64_t v225 = *(void *)(v225 + 8);
  ((void (*)(char *, uint64_t))v225)(v31, v211);
  uint64_t v68 = a1[3];
  uint64_t v69 = a1[4];
  id v70 = sub_100286330(a1, v68);
  __chkstk_darwin(v70);
  (*(void (**)(char *))(v72 + 16))((char *)&v184 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v73 = *(void *)(*(void *)(*(void *)(v69 + 8) + 8LL) + 8LL);
  AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness( 0LL,  v73,  v68,  &protocol requirements base descriptor for Sequence,  &associated type descriptor for Sequence.Iterator);
  AssociatedConformanceWitness = (uint64_t (*)())swift_getAssociatedConformanceWitness( v73,  v68,  AssociatedTypeWitness,  &protocol requirements base descriptor for Sequence,  &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  sub_100287740(&aBlock);
  dispatch thunk of Sequence.makeIterator()(v68, v73);
  uint64_t v74 = AssociatedTypeWitness;
  uint64_t v75 = AssociatedConformanceWitness;
  sub_100297F00((uint64_t)&aBlock, (uint64_t)AssociatedTypeWitness);
  dispatch thunk of IteratorProtocol.next()(&v227, v74, v75);
  double v77 = v227;
  if (v227 == 0.0)
  {
LABEL_33:
    uint64_t v130 = v185 & 1;
    sub_10001882C(&aBlock);
    uint64_t v131 = swift_allocBox(v200);
    uint64_t v133 = v132;
    ALWiFiNotification.init()(v131);
    uint64_t v134 = type metadata accessor for ALWiFiNotification.NotiType(0LL);
    uint64_t v135 = *(void *)(v134 - 8);
    uint64_t v136 = (unsigned int *)&enum case for ALWiFiNotification.NotiType.scanCache(_:);
    if ((v204 & 1) == 0) {
      uint64_t v136 = (unsigned int *)&enum case for ALWiFiNotification.NotiType.scan(_:);
    }
    uint64_t v137 = v192;
    (*(void (**)(char *, void, uint64_t))(v135 + 104))(v192, *v136, v134);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v137, 0LL, 1LL, v134);
    uint64_t v138 = ALWiFiNotification._type.setter(v137);
    static ALTimeStamp.now()(v138);
    v186(v60, 0LL, 1LL, v187);
    ALWiFiNotification._timestamp.setter(v60);
    uint64_t v139 = v202;
    char v140 = v193;
    uint64_t v141 = v203;
    (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v193, v36, v203);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v139 + 56))(v140, 0LL, 1LL, v141);
    ALWiFiNotification._scanResult.setter(v140);
    ALWiFiNotification._associatedMac.setter(v188, v130);
    ALWiFiNotification._simulated.setter(0LL);
    ALWiFiNotification._available.setter(1LL);
    id v142 = [(id)objc_opt_self(NSBundle) mainBundle];
    id v143 = [v142 bundleIdentifier];

    if (v143)
    {
      uint64_t v144 = static String._unconditionallyBridgeFromObjectiveC(_:)(v143);
      unint64_t v146 = v145;
    }

    else
    {
      unint64_t v146 = 0xE100000000000000LL;
      uint64_t v144 = 95LL;
    }

    uint64_t v147 = v189;
    double aBlock = (void **)v144;
    uint64_t v231 = v146;
    swift_bridgeObjectRetain(v146);
    v148._countAndFlagsBits = 0x6F6E2E696669772ELL;
    v148._object = (void *)0xEA00000000006974LL;
    String.append(_:)(v148);
    swift_bridgeObjectRelease(v146);
    uint64_t v149 = v231;
    uint64_t v150 = String.utf8CString.getter(aBlock, v231);
    swift_bridgeObjectRelease(v149);
    uint64_t v151 = os_transaction_create(v150 + 32);
    uint64_t v152 = swift_release(v150);
    uint64_t v153 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v147 + 128LL))(v152);
    uint64_t v154 = (void *)swift_allocObject(&unk_100346D20, 40LL, 7LL);
    v154[2] = v151;
    v154[3] = v147;
    v154[4] = v131;
    AssociatedConformanceWitness = sub_100297F5C;
    uint64_t v235 = v154;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v231 = 1107296256LL;
    uint64_t v232 = sub_100284B68;
    AssociatedTypeWitness = &unk_100346D38;
    uint64_t v155 = _Block_copy(&aBlock);
    swift_retain(v147);
    uint64_t v226 = (char *)v151;
    swift_unknownObjectRetain(v151);
    uint64_t v156 = swift_retain(v131);
    uint64_t v157 = v194;
    static DispatchQoS.unspecified.getter(v156);
    double v227 = COERCE_DOUBLE(&_swiftEmptyArrayStorage);
    unint64_t v158 = sub_1002912B8();
    uint64_t v159 = v131;
    uint64_t v160 = sub_100003A0C(&qword_100367DB0);
    uint64_t v161 = sub_100298804( (unint64_t *)&qword_100368060,  &qword_100367DB0,  (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v162 = v197;
    uint64_t v163 = v160;
    uint64_t v164 = v159;
    uint64_t v165 = v199;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v227, v163, v161, v199, v158);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v157, v162, v155);
    _Block_release(v155);

    (*(void (**)(char *, uint64_t))(v198 + 8))(v162, v165);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v157, v196);
    swift_release(v235);
    uint64_t v166 = (uint64_t)v191;
    corelog.getter((uint64_t)v191);
    uint64_t v167 = swift_retain_n(v164, 2LL);
    int v168 = (os_log_s *)Logger.logObject.getter(v167);
    os_log_type_t v169 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v168, v169))
    {
      uint64_t v170 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      double v171 = COERCE_DOUBLE(swift_slowAlloc(32LL, -1LL));
      uint64_t v224 = v164;
      double v172 = v171;
      double v227 = v171;
      *(_DWORD *)uint64_t v170 = 136315138;
      uint64_t v223 = v170 + 4;
      swift_beginAccess(v133, &aBlock, 0LL, 0LL);
      uint64_t v173 = v190;
      uint64_t v174 = v184;
      uint64_t v175 = v200;
      uint64_t v176 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 16))(v184, v133, v200);
      uint64_t v177 = ALWiFiNotification.description.getter(v176);
      unint64_t v179 = v178;
      (*(void (**)(char *, uint64_t))(v173 + 8))(v174, v175);
      id v229 = (id)sub_1000181EC(v177, v179, (uint64_t *)&v227);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, &aBlock, v223, v170 + 12);
      uint64_t v180 = v224;
      swift_release_n(v224, 2LL);
      swift_bridgeObjectRelease(v179);
      _os_log_impl((void *)&_mh_execute_header, v168, v169, "#WiFi,processResultArray,notif,%s", v170, 0xCu);
      swift_arrayDestroy(*(void *)&v172, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(*(void *)&v172, -1LL, -1LL);
      swift_slowDealloc(v170, -1LL, -1LL);
      swift_unknownObjectRelease(v226);

      ((void (*)(char *, uint64_t))v225)(v191, v211);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v218, v203);
      uint64_t v181 = v180;
    }

    else
    {
      swift_unknownObjectRelease(v226);
      swift_release_n(v164, 2LL);

      ((void (*)(uint64_t, uint64_t))v225)(v166, v211);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v36, v203);
      uint64_t v181 = v164;
    }

    return swift_release(v181);
  }

  p_double aBlock = &aBlock;
  uint64_t v207 = (char *)&v229 + 4;
  int v219 = v204 & 1;
  unsigned int v209 = enum case for ALWiFiScanSingleAccessPoint.Band.band5G(_:);
  unsigned int v212 = enum case for ALWiFiScanSingleAccessPoint.Band.band2G(_:);
  unsigned int v201 = enum case for ALWiFiScanSingleAccessPoint.Band.unknown(_:);
  *(void *)&__int128 v76 = 134350339LL;
  __int128 v206 = v76;
  uint64_t v205 = (char *)&type metadata for Any + 8;
  while (1)
  {
    id v82 = objc_msgSend(*(id *)&v77, "channel", v184);
    if (!v82) {
      goto LABEL_14;
    }
    uint64_t v83 = v82;
    id v84 = [*(id *)&v77 BSSID];
    if (!v84)
    {

LABEL_14:
      uint64_t v78 = v220;
      uint64_t v79 = corelog.getter(v220);
      __chkstk_darwin(v79);
      double v183 = v77;
      uint64_t v182 = 160LL;
      Logger._fault(_:function:file:line:)( sub_100297F64,  (uint64_t)(&v184 - 4),  (uint64_t *)"processResultArray(_:bg:)",  25LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALLeechCoreWiFi.swift",  73LL,  2);

      ((void (*)(uint64_t, uint64_t))v225)(v78, v67);
      goto LABEL_15;
    }

    uint64_t v85 = v84;
    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)(v84);
    unint64_t v88 = v87;

    ALWiFiScanSingleAccessPoint.init()(v89);
    swift_bridgeObjectRetain(v88);
    uint64_t v90 = sub_1002983E0(v86, v88);
    char v92 = v91;
    swift_bridgeObjectRelease(v88);
    ALWiFiScanSingleAccessPoint._mac.setter(v90, v92 & 1);
    uint64_t result = (uint64_t)[v83 channel];
    if (result > 0x7FFFFFFF) {
      goto LABEL_43;
    }
    LOBYTE(v227) = 0;
    ALWiFiScanSingleAccessPoint._channel.setter(result);
    unsigned int v93 = [v83 band];
    uint64_t v94 = v212;
    if (v93 != 1)
    {
      uint64_t v94 = v209;
      if (v93 != 2) {
        uint64_t v94 = v201;
      }
    }

    uint64_t v95 = v216;
    uint64_t v96 = v215;
    uint64_t v97 = v217;
    (*(void (**)(char *, uint64_t, uint64_t))(v216 + 104))(v215, v94, v217);
    uint64_t v98 = v214;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v214, v96, v97);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v98, 0LL, 1LL, v97);
    __int128 v99 = v98;
    uint64_t v100 = v226;
    ALWiFiScanSingleAccessPoint._band.setter(v99);
    uint64_t result = (uint64_t)[*(id *)&v77 RSSI];
    if (result > 0x7FFFFFFF) {
      goto LABEL_45;
    }
    LOBYTE(v227) = 0;
    ALWiFiScanSingleAccessPoint._rssidB.setter(result);
    double v101 = (double)(unint64_t)[*(id *)&v77 timestamp];
    *(float *)&unsigned int v102 = v39 - NsToSec.getter() * v101;
    LOBYTE(v227) = 0;
    ALWiFiScanSingleAccessPoint._ageSec.setter(v102);
    corelog.getter(v221);
    id v103 = *(id *)&v77;
    id v104 = v83;
    id v105 = v103;
    id v106 = v104;
    swift_bridgeObjectRetain(v88);
    id v107 = v105;
    id v108 = v106;
    uint64_t v109 = (os_log_s *)Logger.logObject.getter(v108);
    os_log_type_t v110 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v109, v110))
    {
      uint64_t v111 = swift_slowAlloc(58LL, -1LL);
      double v210 = COERCE_DOUBLE(swift_slowAlloc(32LL, -1LL));
      double v227 = v210;
      *(_DWORD *)uint64_t v111 = v206;
      id v229 = [v107 timestamp];
      unint64_t v112 = p_aBlock;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, p_aBlock, v111 + 4, v111 + 12);

      *(_WORD *)(v111 + 12) = 2050;
      id v113 = [v107 age];

      id v229 = v113;
      os_log_type_t v114 = v110;
      uint64_t v115 = v211;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v112, v111 + 14, v111 + 22);

      *(_WORD *)(v111 + 22) = 2081;
      swift_bridgeObjectRetain(v88);
      id v229 = (id)sub_1000181EC(v86, v88, (uint64_t *)&v227);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v112, v111 + 24, v111 + 32);
      swift_bridgeObjectRelease_n(v88, 3LL);
      *(_WORD *)(v111 + 32) = 1026;
      unsigned int v116 = [v108 band];

      LODWORD(v229) = v116;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v207, v111 + 34, v111 + 38);

      *(_WORD *)(v111 + 38) = 2050;
      id v117 = [v108 channel];

      id v229 = v117;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v112, v111 + 40, v111 + 48);

      *(_WORD *)(v111 + 48) = 2050;
      id v118 = [v107 RSSI];

      id v229 = v118;
      uint64_t v100 = v226;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v112, v111 + 50, v111 + 58);

      uint64_t v67 = v115;
      _os_log_impl( (void *)&_mh_execute_header,  v109,  v114,  "#WiFi,scan,ts,%{public}llu,age,%{public}ld,mac,%{private}s,band,%{public}u,chan,%{public}ld,rssi,%{public}ld",  (uint8_t *)v111,  0x3Au);
      double v119 = v210;
      swift_arrayDestroy(*(void *)&v210, 1LL, v205);
      swift_slowDealloc(*(void *)&v119, -1LL, -1LL);
      swift_slowDealloc(v111, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(v88, 2LL);
    }

    ((void (*)(uint64_t, uint64_t))v225)(v221, v67);
    (*((void (**)(char *, char *, uint64_t))v223 + 2))(v222, v100, v224);
    uint64_t v36 = v218;
    uint64_t v120 = (void (*)(double *, void))ALWiFiScanResult._accessPoints.modify(&v227);
    uint64_t v122 = v121;
    unint64_t v123 = *v121;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v121);
    unint64_t *v122 = v123;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v123 = sub_100297A08(0, *(void *)(v123 + 16) + 1LL, 1, v123);
      unint64_t *v122 = v123;
    }

    unint64_t v126 = *(void *)(v123 + 16);
    unint64_t v125 = *(void *)(v123 + 24);
    if (v126 >= v125 >> 1)
    {
      unint64_t v123 = sub_100297A08(v125 > 1, v126 + 1, 1, v123);
      unint64_t *v122 = v123;
    }

    *(void *)(v123 + swift_unknownObjectWeakDestroy(v0 + 16) = v126 + 1;
    uint64_t v127 = v223;
    unint64_t v128 = v123 + ((v127[80] + 32LL) & ~(unint64_t)v127[80]) + *((void *)v223 + 9) * v126;
    uint64_t v129 = v224;
    (*((void (**)(unint64_t, char *, uint64_t))v223 + 4))(v128, v222, v224);
    v120(&v227, 0LL);

    (*((void (**)(char *, uint64_t))v127 + 1))(v226, v129);
    id v60 = v213;
LABEL_15:
    uint64_t v80 = AssociatedTypeWitness;
    uint64_t v81 = AssociatedConformanceWitness;
    sub_100297F00((uint64_t)&aBlock, (uint64_t)AssociatedTypeWitness);
    dispatch thunk of IteratorProtocol.next()(&v227, v80, v81);
    double v77 = v227;
    if (v227 == 0.0) {
      goto LABEL_33;
    }
  }

  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_100295DB0(uint64_t a1, unint64_t a2)
{
  return sub_1002983E0(a1, a2);
}

uint64_t sub_100295DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = swift_projectBox(a2);
  swift_beginAccess(v11, v35, 0LL, 0LL);
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v12(v10, v11, v7);
  (*(void (**)(char *))(*(void *)a1 + 312LL))(v10);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  corelog.getter((uint64_t)v6);
  uint64_t v30 = a2;
  uint64_t v14 = swift_retain_n(a2, 2LL);
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = swift_slowAlloc(32LL, -1LL);
    uint64_t v34 = v28;
    uint64_t v29 = v4;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v18 = v17 + 12;
    uint64_t v26 = v17 + 4;
    uint64_t v27 = v17;
    swift_beginAccess(v11, v33, 0LL, 0LL);
    uint64_t v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v12)(v10, v11, v7);
    uint64_t v20 = ALWiFiNotification.description.getter(v19);
    unint64_t v22 = v21;
    v13(v10, v7);
    uint64_t v32 = sub_1000181EC(v20, v22, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v26, v18);
    swift_release_n(v30, 2LL);
    swift_bridgeObjectRelease(v22);
    uint64_t v23 = v27;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "#WiFi,_onData,notif,%s", v27, 0xCu);
    uint64_t v24 = v28;
    swift_arrayDestroy(v28, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    swift_slowDealloc(v23, -1LL, -1LL);

    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v29);
  }

  else
  {

    swift_release_n(v30, 2LL);
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v4);
  }

uint64_t sub_100296074(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v5 = (void (*)(uint64_t))(*(uint64_t (**)(uint64_t))(*(void *)v1 + 152LL))(v4);
  uint64_t v7 = v6;
  v5(a1);
  return swift_release(v7);
}

uint64_t sub_1002961A8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1002983E0(a1, a2);
  (*(void (**)(uint64_t, void))(*(void *)v2 + 208LL))(v9, v10 & 1);
  corelog.getter((uint64_t)v8);
  uint64_t v11 = swift_bridgeObjectRetain_n(a2, 2LL);
  uint64_t v12 = (os_log_s *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v20 = v5;
    uint64_t v14 = swift_slowAlloc(12LL, -1LL);
    uint64_t v19 = v6;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc(32LL, -1LL);
    uint64_t v22 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    if (a2)
    {
      unint64_t v17 = a2;
    }

    else
    {
      a1 = 1953722220LL;
      unint64_t v17 = 0xE400000000000000LL;
    }

    swift_bridgeObjectRetain(a2);
    uint64_t v21 = sub_1000181EC(a1, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease_n(a2, 2LL);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "#WiFi,updateAssociatedMac,%s", v15, 0xCu);
    swift_arrayDestroy(v16, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);

    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v20);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

uint64_t sub_1002963B0(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v62 = type metadata accessor for Logger(0LL);
  uint64_t v6 = *(void *)(v62 - 8);
  uint64_t v7 = __chkstk_darwin(v62);
  double v61 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  char v10 = (char *)&v55 - v9;
  id v11 = [(id)objc_opt_self(NSBundle) mainBundle];
  id v12 = [v11 bundleIdentifier];

  if (v12)
  {
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    unint64_t v15 = v14;
  }

  else
  {
    unint64_t v15 = 0xE100000000000000LL;
    uint64_t v13 = 95LL;
  }

  id v63 = (id)v13;
  unint64_t v64 = v15;
  swift_bridgeObjectRetain(v15);
  v16._countAndFlagsBits = 0x76652E696669772ELL;
  v16._object = (void *)0xEB00000000746E65LL;
  String.append(_:)(v16);
  swift_bridgeObjectRelease(v15);
  unint64_t v17 = v64;
  uint64_t v18 = String.utf8CString.getter(v63, v64);
  swift_bridgeObjectRelease(v17);
  uint64_t v19 = os_transaction_create(v18 + 32);
  swift_release(v18);
  corelog.getter((uint64_t)v10);
  id v20 = a1;
  uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v60 = v2;
    uint64_t v23 = swift_slowAlloc(12LL, -1LL);
    uint64_t v59 = v4;
    uint64_t v24 = (uint8_t *)v23;
    id v57 = (id)swift_slowAlloc(32LL, -1LL);
    id v63 = v57;
    uint64_t v58 = v10;
    *(_DWORD *)uint64_t v24 = 136446210;
    char v55 = v24 + 4;
    id v25 = [v20 description];
    uint64_t v26 = v19;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v56 = v6;
    unint64_t v29 = v28;

    uint64_t v3 = v60;
    uint64_t v30 = v27;
    uint64_t v19 = v26;
    uint64_t v65 = sub_1000181EC(v30, v29, (uint64_t *)&v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66, v55, v24 + 12);

    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "#WiFi, received event %{public}s", v24, 0xCu);
    id v31 = v57;
    swift_arrayDestroy(v57, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v24;
    uint64_t v4 = v59;
    swift_slowDealloc(v32, -1LL, -1LL);

    uint64_t v33 = *(void (**)(char *, uint64_t))(v56 + 8);
    v33(v58, v62);
  }

  else
  {

    uint64_t v33 = *(void (**)(char *, uint64_t))(v6 + 8);
    v33(v10, v62);
  }

  id v34 = [v20 type];
  if (v34 == (id)37)
  {
    (*(void (**)(void))(*(void *)v4 + 336LL))();
  }

  else if (v34 == (id)5)
  {
    uint64_t v42 = (*(uint64_t (**)(void))(*(void *)v4 + 248LL))();
    if (v42)
    {
      uint64_t v43 = v42;
      char v44 = sub_1000041F4();
      (*(void (**)(void))(*(void *)v43 + 176LL))(v44 & 1);
      swift_release(v43);
    }
  }

  else if (v34 == (id)3)
  {
    uint64_t v35 = (*(uint64_t (**)(void))(*(void *)v4 + 248LL))();
    if (v35)
    {
      uint64_t v36 = v35;
      (*(void (**)(uint64_t))(*(void *)v35 + 176LL))(1LL);
      uint64_t v35 = swift_release(v36);
    }

    uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v4 + 176LL))(v35);
    uint64_t v38 = v37;
    if (v37)
    {
      id v39 = [v37 BSSID];

      if (v39)
      {
        uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
        uint64_t v38 = v41;
      }

      else
      {
        uint64_t v40 = 0LL;
        uint64_t v38 = 0LL;
      }
    }

    else
    {
      uint64_t v40 = 0LL;
    }

    (*(void (**)(uint64_t, void *))(*(void *)v4 + 320LL))(v40, v38);
    swift_bridgeObjectRelease(v38);
  }

  else
  {
    corelog.getter((uint64_t)v61);
    id v45 = v20;
    int v46 = (os_log_s *)Logger.logObject.getter(v45);
    os_log_type_t v47 = static os_log_type_t.error.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v60 = v3;
      os_log_type_t v49 = v48;
      uint64_t v50 = v19;
      *(_DWORD *)uint64_t v48 = 134349056;
      BOOL v51 = v48 + 12;
      uint64_t v52 = v48 + 4;
      id v63 = [v45 type];
      uint64_t v53 = v51;
      uint64_t v19 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v52, v53);

      _os_log_impl((void *)&_mh_execute_header, v46, v47, "#WiFi,unhandled,evtType,%{public}ld", v49, 0xCu);
      swift_slowDealloc(v49, -1LL, -1LL);
    }

    else
    {

      int v46 = (os_log_s *)v45;
    }

    v33(v61, v62);
  }

  return swift_unknownObjectRelease(v19);
}

uint64_t sub_1002968C8()
{
  uint64_t v99 = type metadata accessor for Logger(0LL);
  uint64_t v91 = *(void *)(v99 - 8);
  uint64_t v1 = __chkstk_darwin(v99);
  uint64_t v3 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v97 = (uint64_t)&v85 - v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v96 = (uint64_t)&v85 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v95 = (uint64_t)&v85 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v85 - v11;
  uint64_t v13 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 176LL);
  uint64_t v90 = v0;
  unint64_t v14 = (void *)v13(v10);
  if (!v14
    || (unint64_t v15 = v14,
        id v16 = [v14 backgroundScanCache],
        v15,
        !v16))
  {
    uint64_t v62 = corelog.getter((uint64_t)v3);
    id v63 = (os_log_s *)Logger.logObject.getter(v62);
    os_log_type_t v64 = static os_log_type_t.error.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "processBackgroundScanCache,backgroundScanCache,nil", v65, 2u);
      swift_slowDealloc(v65, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v3, v99);
  }

  uint64_t v17 = sub_100290064(0LL, &qword_1003680F0, &OBJC_CLASS___CWFScanResult_ptr);
  uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);

  uint64_t v19 = (unint64_t)v18 >> 62;
  uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v20)
  {
LABEL_90:
    swift_bridgeObjectRelease(v18);
    uint64_t v81 = corelog.getter((uint64_t)v12);
    id v82 = (os_log_s *)Logger.logObject.getter(v81);
    os_log_type_t v83 = static os_log_type_t.error.getter(v82);
    if (os_log_type_enabled(v82, v83))
    {
      id v84 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)id v84 = 0;
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "processBackgroundScanCache,empty", v84, 2u);
      swift_slowDealloc(v84, -1LL, -1LL);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v12, v99);
  }

void sub_1002972C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v59 - v7;
  id v9 = [(id)objc_opt_self(NSBundle) mainBundle];
  id v10 = [v9 bundleIdentifier];

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    unint64_t v13 = v12;
  }

  else
  {
    unint64_t v13 = 0xE100000000000000LL;
    uint64_t v11 = 95LL;
  }

  uint64_t v64 = v11;
  v65[0] = v13;
  swift_bridgeObjectRetain(v13);
  v14._object = (void *)0x80000001002F54E0LL;
  v14._countAndFlagsBits = 0xD000000000000010LL;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  uint64_t v15 = v65[0];
  uint64_t v16 = String.utf8CString.getter(v64, v65[0]);
  swift_bridgeObjectRelease(v15);
  uint64_t v17 = os_transaction_create(v16 + 32);
  swift_release(v16);
  id v18 = [objc_allocWithZone(CWFScanParameters) init];
  [v18 setScanType:3];
  [v18 setIncludeHiddenNetworks:1];
  uint64_t v19 = sub_100003A0C((uint64_t *)&unk_100368108);
  uint64_t inited = swift_initStackObject(v19, v66);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002DF6F0;
  *(NSNumber *)(inited + 32) = Int._bridgeToObjectiveC()();
  *(NSNumber *)(inited + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = Int._bridgeToObjectiveC()();
  *(NSNumber *)(inited + 48) = Int._bridgeToObjectiveC()();
  *(NSNumber *)(inited + 56) = Int._bridgeToObjectiveC()();
  *(NSNumber *)(inited + 64) = Int._bridgeToObjectiveC()();
  uint64_t v64 = inited;
  specialized Array._endMutation()();
  uint64_t v21 = v64;
  if ((unint64_t)v64 >> 62)
  {
    if (v64 < 0) {
      unint64_t v24 = v64;
    }
    else {
      unint64_t v24 = v64 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v64);
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(v21);
    if (v25) {
      goto LABEL_6;
    }
  }

  else if (*(void *)((v64 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
LABEL_6:
    sub_100298084(v21);
    Swift::Int v23 = v22;
    goto LABEL_12;
  }

  Swift::Int v23 = &_swiftEmptySetSingleton;
LABEL_12:
  swift_bridgeObjectRelease(v21);
  sub_100290064(0LL, (unint64_t *)&qword_100367D40, &OBJC_CLASS___NSNumber_ptr);
  sub_100298730();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  [v18 setIncludeProperties:isa];

  uint64_t v27 = (*(uint64_t (**)(void))(*(void *)v1 + 224LL))();
  if ((v28 & 1) == 0)
  {
    if (v27 == -1)
    {
      __break(1u);
      goto LABEL_31;
    }

    [v18 setMinimumTimestamp:v27 + 1];
  }

  corelog.getter((uint64_t)v8);
  id v18 = v18;
  id v63 = v8;
  unint64_t v29 = (os_log_s *)Logger.logObject.getter(v18);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v62 = v6;
  if (v31)
  {
    unint64_t v32 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v33 = swift_slowAlloc(8LL, -1LL);
    uint64_t v61 = v17;
    Swift::Int v59 = (void *)v33;
    *(_DWORD *)unint64_t v32 = 138543362;
    uint64_t v60 = v3;
    uint64_t v64 = (uint64_t)v18;
    id v34 = v18;
    uint64_t v3 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, v65, v32 + 4, v32 + 12);
    uint64_t v35 = v59;
    *Swift::Int v59 = v18;

    _os_log_impl((void *)&_mh_execute_header, v29, v30, "#WiFi,.scanCacheUpdated,param,%{public}@", v32, 0xCu);
    uint64_t v36 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v35, 1LL, v36);
    uint64_t v17 = v61;
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {

    unint64_t v29 = (os_log_s *)v18;
  }

  uint64_t v37 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  uint64_t v38 = v37(v63, v2);
  uint64_t v39 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v1 + 176LL))(v38);
  if (!v39)
  {
    swift_unknownObjectRelease(v17);

    return;
  }

  uint64_t v40 = v39;
  uint64_t v64 = 0LL;
  id v41 = [v39 performScanWithParameters:v18 error:&v64];

  id v42 = (id)v64;
  if (!v41)
  {
    id v48 = (id)v64;
    uint64_t v49 = _convertNSErrorToError(_:)(v42);

    swift_willThrow();
    uint64_t v50 = (uint64_t)v62;
    uint64_t v51 = corelog.getter((uint64_t)v62);
    Swift::Int v52 = (os_log_s *)Logger.logObject.getter(v51);
    os_log_type_t v53 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v52, v53))
    {
      id v54 = v18;
      uint64_t v55 = v50;
      uint64_t v56 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "#WiFi,fectchScanUpdate,catch", v56, 2u);
      uint64_t v57 = v56;
      uint64_t v50 = v55;
      id v18 = v54;
      swift_slowDealloc(v57, -1LL, -1LL);
    }

    v37((char *)v50, v2);
    (*(void (**)(uint64_t))(*(void *)v1 + 296LL))(v49);

    swift_errorRelease(v49);
    goto LABEL_37;
  }

  uint64_t v43 = sub_100290064(0LL, &qword_1003680F0, &OBJC_CLASS___CWFScanResult_ptr);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v43);
  id v44 = v42;

  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v45 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v45) {
      goto LABEL_22;
    }
    goto LABEL_35;
  }

uint64_t sub_100297998()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 80));
  return v0;
}

uint64_t sub_1002979CC()
{
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 80));
  return swift_deallocClassInstance(v0, 88LL, 7LL);
}

uint64_t sub_100297A08(char a1, int64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_100003A0C(&qword_1003682F0);
  uint64_t v11 = *(void *)(type metadata accessor for ALWiFiScanSingleAccessPoint(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12) {
    goto LABEL_29;
  }
  if (v16 - v14 == 0x8000000000000000LL && v12 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  void v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    unint64_t v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(void *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }

    else if (v15 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }

    *(void *)(a4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_100298864(0LL, v8, v21, a4);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

unsigned __int8 *sub_100297C10(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  swift_bridgeObjectRetain(a2);
  uint64_t v4 = String.init<A>(_:)( &v14,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v6 = v4;
  unint64_t v7 = v5;
  if ((v5 & 0x1000000000000000LL) == 0)
  {
    if ((v5 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = HIBYTE(v7) & 0xF;
    uint64_t v14 = v6;
    uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }

  uint64_t v6 = sub_10028CBAC(v4, v5);
  unint64_t v11 = v10;
  swift_bridgeObjectRelease(v7);
  unint64_t v7 = v11;
  if ((v11 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }

uint64_t sub_100297CF4(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v10)(double *__return_ptr, unint64_t, unint64_t, void *);
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v17;
  char v18;
  uint64_t v4 = v3;
  *(void *)(v4 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0LL;
  *(void *)(v4 + 48) = 0LL;
  *(_BYTE *)(v4 + 56) = 1;
  *(void *)(v4 + 64) = 0LL;
  *(_BYTE *)(v4 + 72) = 1;
  *(void *)(v4 + 8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0LL;
  uint64_t v6 = (uint64_t *)(v4 + 80);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  id v7 = a1;
  swift_retain(a3);
  uint64_t v8 = sub_1002990B8();
  uint64_t v9 = *v8;
  unint64_t v10 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v8 + 112LL);
  swift_retain(*v8);
  v10(&v17, 0xD000000000000020LL, 0x80000001002F5600LL, &type metadata for Double);
  swift_release(v9);
  if (v18) {
    unint64_t v11 = 3.0;
  }
  else {
    unint64_t v11 = v17;
  }
  type metadata accessor for ALDebounce();
  uint64_t v12 = v7;
  swift_retain(v4);
  uint64_t v13 = sub_1002902B0(v12, (uint64_t)sub_100298A78, v4, v11);
  swift_beginAccess(v4 + 80, &v17, 1LL, 0LL);
  uint64_t v14 = *v6;
  *uint64_t v6 = v13;
  uint64_t v15 = swift_release(v14);
  (*(void (**)(uint64_t))(*(void *)v4 + 280LL))(v15);
  return v4;
}

uint64_t sub_100297E30(void *a1)
{
  return sub_100293C5C(a1, v1);
}

uint64_t sub_100297E38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_100297E48(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100297E50()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288LL))();
}

uint64_t sub_100297E5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  v7[0] = 0LL;
  v7[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(34LL);
  v2._object = (void *)0x80000001002F55B0LL;
  v2._countAndFlagsBits = 0xD000000000000020LL;
  String.append(_:)(v2);
  uint64_t v6 = v1;
  uint64_t v3 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v6,  v7,  v3,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 0LL;
  v4._object = (void *)0xE000000000000000LL;
  String.append(_:)(v4);
  return v7[0];
}

uint64_t sub_100297F00(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t sub_100297F28()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100297F5C()
{
  return sub_100295DC8(*(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100297F64()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  _StringGuts.grow(_:)(48LL);
  v3._countAndFlagsBits = 0x47422C6946695723LL;
  v3._object = (void *)0xE90000000000002CLL;
  String.append(_:)(v3);
  if (v1) {
    uint64_t v4 = 1702195828LL;
  }
  else {
    uint64_t v4 = 0x65736C6166LL;
  }
  if (v1) {
    unint64_t v5 = 0xE400000000000000LL;
  }
  else {
    unint64_t v5 = 0xE500000000000000LL;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  v7._object = (void *)0x80000001002F5580LL;
  v7._countAndFlagsBits = 0xD000000000000023LL;
  String.append(_:)(v7);
  id v8 = [v2 description];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0LL;
  v13._object = (void *)0xE000000000000000LL;
  String.append(_:)(v13);
  return 0LL;
}

void sub_100298084(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v6 = a1;
    }
    else {
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v1);
    if (v3)
    {
LABEL_3:
      sub_100003A0C((uint64_t *)&unk_1003682E0);
      uint64_t v4 = (void *)static _SetStorage.allocate(capacity:)(v3);
      if (!v2) {
        goto LABEL_4;
      }
LABEL_11:
      if (v1 < 0) {
        uint64_t v7 = v1;
      }
      else {
        uint64_t v7 = v1 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v1);
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v7);
      swift_bridgeObjectRelease(v1);
      if (!v5) {
        return;
      }
      goto LABEL_15;
    }
  }

  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }

  uint64_t v4 = &_swiftEmptySetSingleton;
  if (v2) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  if (!v5) {
    return;
  }
LABEL_15:
  id v8 = (char *)(v4 + 7);
  uint64_t v45 = v5;
  if ((v1 & 0xC000000000000001LL) != 0)
  {
    uint64_t v9 = 0LL;
    uint64_t v43 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v1);
        BOOL v11 = __OFADD__(v9++, 1LL);
        if (v11)
        {
          __break(1u);
          goto LABEL_42;
        }

        uint64_t v12 = v10;
        Swift::Int v13 = NSObject._rawHashValue(seed:)(v4[5]);
        uint64_t v14 = -1LL << *((_BYTE *)v4 + 32);
        unint64_t v15 = v13 & ~v14;
        unint64_t v16 = v15 >> 6;
        uint64_t v17 = *(void *)&v8[8 * (v15 >> 6)];
        uint64_t v18 = 1LL << v15;
        if (((1LL << v15) & v17) != 0) {
          break;
        }
LABEL_26:
        *(void *)&v8[8 * v16] = v18 | v17;
        *(void *)(v4[6] + 8 * v15) = v12;
        uint64_t v24 = v4[2];
        BOOL v11 = __OFADD__(v24, 1LL);
        uint64_t v25 = v24 + 1;
        if (v11) {
          goto LABEL_43;
        }
        void v4[2] = v25;
        if (v9 == v5) {
          return;
        }
      }

      sub_100290064(0LL, (unint64_t *)&qword_100367D40, &OBJC_CLASS___NSNumber_ptr);
      id v19 = *(id *)(v4[6] + 8 * v15);
      char v20 = static NSObject.== infix(_:_:)();

      if ((v20 & 1) == 0)
      {
        uint64_t v21 = ~v14;
        while (1)
        {
          unint64_t v15 = (v15 + 1) & v21;
          unint64_t v16 = v15 >> 6;
          uint64_t v17 = *(void *)&v8[8 * (v15 >> 6)];
          uint64_t v18 = 1LL << v15;
          if ((v17 & (1LL << v15)) == 0) {
            break;
          }
          id v22 = *(id *)(v4[6] + 8 * v15);
          char v23 = static NSObject.== infix(_:_:)();

          if ((v23 & 1) != 0) {
            goto LABEL_17;
          }
        }

        uint64_t v1 = v43;
        uint64_t v5 = v45;
        goto LABEL_26;
      }

LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
}

uint64_t sub_1002983E0(uint64_t a1, unint64_t a2)
{
  if (!a2) {
    return 0LL;
  }
  uint64_t v30 = a1;
  unint64_t v31 = a2;
  uint64_t v28 = 58LL;
  uint64_t v29 = 0xE100000000000000LL;
  v27[0] = 0LL;
  v27[1] = 0xE000000000000000LL;
  unint64_t v3 = sub_10029897C();
  unint64_t v4 = sub_1002989C0();
  swift_bridgeObjectRetain(a2);
  RangeReplaceableCollection<>.replace<A, B>(_:with:maxReplacements:)( &v28,  v27,  0x7FFFFFFFFFFFFFFFLL,  &type metadata for String,  &type metadata for String,  &type metadata for String,  v3,  v4,  v4,  &protocol witness table for Character);
  uint64_t result = v30;
  unint64_t v6 = v31;
  unint64_t v7 = HIBYTE(v31) & 0xF;
  uint64_t v8 = v30 & 0xFFFFFFFFFFFFLL;
  if ((v31 & 0x2000000000000000LL) != 0) {
    unint64_t v9 = HIBYTE(v31) & 0xF;
  }
  else {
    unint64_t v9 = v30 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease(v31);
    return 0LL;
  }

  if ((v31 & 0x1000000000000000LL) == 0)
  {
    if ((v31 & 0x2000000000000000LL) == 0)
    {
      if ((v30 & 0x1000000000000000LL) != 0) {
        uint64_t v10 = (unsigned __int8 *)((v31 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v30, v31);
      }
      unint64_t v11 = (unint64_t)sub_10028C930(v10, v8, 16LL);
      char v13 = v12 & 1;
      goto LABEL_48;
    }

    uint64_t v28 = v30;
    uint64_t v29 = v31 & 0xFFFFFFFFFFFFFFLL;
    if (v30 == 43)
    {
      if (v7)
      {
        unint64_t v19 = v7 - 1;
        if (v19)
        {
          unint64_t v11 = 0LL;
          char v20 = (unsigned __int8 *)&v28 + 1;
          while (1)
          {
            int v21 = *v20;
            unsigned __int8 v22 = v21 - 48;
            if ((v21 - 48) >= 0xA)
            {
              if ((v21 - 65) < 6)
              {
                unsigned __int8 v22 = v21 - 55;
              }

              else
              {
                unsigned __int8 v22 = v21 - 87;
              }
            }

            if (v11 >> 60) {
              break;
            }
            unint64_t v11 = 16 * v11 + v22;
            ++v20;
            if (!--v19)
            {
LABEL_46:
              char v13 = 0;
              goto LABEL_48;
            }
          }
        }

        goto LABEL_47;
      }
    }

    else
    {
      if (v30 != 45)
      {
        if (v7)
        {
          unint64_t v11 = 0LL;
          char v23 = &v28;
          while (1)
          {
            int v24 = *(unsigned __int8 *)v23;
            unsigned __int8 v25 = v24 - 48;
            if ((v24 - 48) >= 0xA)
            {
              if ((v24 - 65) < 6)
              {
                unsigned __int8 v25 = v24 - 55;
              }

              else
              {
                unsigned __int8 v25 = v24 - 87;
              }
            }

            if (v11 >> 60) {
              break;
            }
            unint64_t v11 = 16 * v11 + v25;
            char v23 = (uint64_t *)((char *)v23 + 1);
            if (!--v7) {
              goto LABEL_46;
            }
          }
        }

        goto LABEL_47;
      }

      if (v7)
      {
        unint64_t v14 = v7 - 1;
        if (v14)
        {
          unint64_t v11 = 0LL;
          unint64_t v15 = (unsigned __int8 *)&v28 + 1;
          while (1)
          {
            int v16 = *v15;
            unsigned __int8 v17 = v16 - 48;
            if ((v16 - 48) >= 0xA)
            {
              if ((v16 - 65) < 6)
              {
                unsigned __int8 v17 = v16 - 55;
              }

              else
              {
                unsigned __int8 v17 = v16 - 87;
              }
            }

            if (v11 >> 60) {
              break;
            }
            BOOL v18 = 16 * v11 >= v17;
            unint64_t v11 = 16 * v11 - v17;
            if (!v18) {
              break;
            }
            ++v15;
            if (!--v14) {
              goto LABEL_46;
            }
          }
        }

LABEL_47:
        unint64_t v11 = 0LL;
        char v13 = 1;
        goto LABEL_48;
      }

      __break(1u);
    }

    __break(1u);
    return result;
  }

  unint64_t v11 = (unint64_t)sub_100297C10(v30, v31, 16LL);
  char v13 = v26;
LABEL_48:
  swift_bridgeObjectRelease(v6);
  if ((v13 & 1) != 0) {
    return 0LL;
  }
  else {
    return v11;
  }
}

uint64_t sub_100298674()
{
  uint64_t v1 = *(void *)(v0 + 16);
  v7[0] = 0LL;
  v7[1] = 0xE000000000000000LL;
  v2._countAndFlagsBits = 0x6E6F2C6946695723LL;
  v2._object = (void *)0xED00002C61746144LL;
  String.append(_:)(v2);
  uint64_t v6 = v1;
  uint64_t v3 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v6,  v7,  v3,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 0LL;
  v4._object = (void *)0xE000000000000000LL;
  String.append(_:)(v4);
  return v7[0];
}

uint64_t sub_10029870C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

unint64_t sub_100298730()
{
  unint64_t result = qword_100368118;
  if (!qword_100368118)
  {
    uint64_t v1 = sub_100290064(255LL, (unint64_t *)&qword_100367D40, &OBJC_CLASS___NSNumber_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_100368118);
  }

  return result;
}

unint64_t sub_100298788()
{
  unint64_t result = qword_100368128;
  if (!qword_100368128)
  {
    uint64_t v1 = sub_10000FED4(&qword_100368120);
    sub_100298804(&qword_100368130, &qword_100368138, (uint64_t)&protocol conformance descriptor for [A]);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ReversedCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_100368128);
  }

  return result;
}

uint64_t sub_100298804(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_10000FED4(a2);
    uint64_t result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t type metadata accessor for ALLeechCoreWiFi()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon15ALLeechCoreWiFi);
}

uint64_t sub_100298864(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(type metadata accessor for ALWiFiScanSingleAccessPoint(0LL) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10029897C()
{
  unint64_t result = qword_1003682F8;
  if (!qword_1003682F8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1003682F8);
  }

  return result;
}

unint64_t sub_1002989C0()
{
  unint64_t result = qword_100368300;
  if (!qword_100368300)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_100368300);
  }

  return result;
}

uint64_t sub_100298A04()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100298A30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  Swift::String v2 = *(void **)(v0 + 24);
  uint64_t v3 = objc_autoreleasePoolPush();
  sub_100293E48(v1, v2);
  objc_autoreleasePoolPop(v3);
}

uint64_t sub_100298A78()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344LL))();
}

void sub_100298A9C()
{
  uint64_t v0 = type metadata accessor for PlatformInfo();
  uint64_t v1 = swift_allocObject(v0, 68LL, 7LL);
  id v2 = (id)MobileGestalt_get_current_device();
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }

  uint64_t v3 = v2;
  char deviceSupportsAOP = MobileGestalt_get_deviceSupportsAOP();

  *(_BYTE *)(v1 + 64) = deviceSupportsAOP;
  id v5 = (id)MobileGestalt_get_current_device();
  if (!v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v6 = v5;
  char isVirtualDevice = MobileGestalt_get_isVirtualDevice();

  *(_BYTE *)(v1 + 65) = isVirtualDevice;
  *(_BYTE *)(v1 + 66) = 0;
  id v8 = (id)MobileGestalt_get_current_device();
  if (!v8)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }

  uint64_t v9 = v8;
  mobileWifuint64_t i = MobileGestalt_get_mobileWifi();

  *(_BYTE *)(v1 + 67) = mobileWifi;
  id v11 = (id)MobileGestalt_get_current_device();
  if (!v11)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }

  uint64_t v12 = v11;
  id v13 = (id)MobileGestalt_copy_productType_obj();

  if (!v13)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  uint64_t v16 = v15;

  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(void *)(v1 + 24) = v16;
  id v17 = (id)MobileGestalt_get_current_device();
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }

  BOOL v18 = v17;
  id v19 = (id)MobileGestalt_copy_hwModelStr_obj();

  if (!v19)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  uint64_t v22 = v21;

  *(void *)(v1 + 32) = v20;
  *(void *)(v1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v22;
  id v23 = (id)MobileGestalt_get_current_device();
  if (!v23)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  int v24 = v23;
  id v25 = (id)MobileGestalt_copy_productVersion_obj();

  if (v25)
  {
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    uint64_t v28 = v27;

    *(void *)(v1 + 48) = v26;
    *(void *)(v1 + 56) = v28;
    qword_1003C0998 = v1;
    return;
  }

uint64_t *sub_100298C38()
{
  if (qword_1003C0990 != -1) {
    swift_once(&qword_1003C0990, sub_100298A9C);
  }
  return &qword_1003C0998;
}

uint64_t static PlatformInfo.instance.getter()
{
  if (qword_1003C0990 != -1) {
    swift_once(&qword_1003C0990, sub_100298A9C);
  }
  return swift_retain(qword_1003C0998);
}

uint64_t PlatformInfo.product.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain(*(void *)(v0 + 24));
  return v1;
}

uint64_t PlatformInfo.model.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain(*(void *)(v0 + 40));
  return v1;
}

uint64_t PlatformInfo.osVer.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain(*(void *)(v0 + 56));
  return v1;
}

id sub_100298D3C()
{
  return sub_100298DE0((uint64_t (*)(void))&_MobileGestalt_get_deviceSupportsAOP);
}

uint64_t sub_100298D48()
{
  return *(unsigned __int8 *)(v0 + 64);
}

id sub_100298D50()
{
  return sub_100298DE0((uint64_t (*)(void))&_MobileGestalt_get_isVirtualDevice);
}

uint64_t sub_100298D5C()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t sub_100298D64()
{
  void (*v2)(uint64_t *__return_ptr, unint64_t, unint64_t, void *);
  uint64_t v4;
  uint64_t v0 = sub_1002990B8();
  uint64_t v1 = *v0;
  id v2 = *(void (**)(uint64_t *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v0 + 112LL);
  swift_retain(*v0);
  v2(&v4, 0xD000000000000017LL, 0x80000001002F5660LL, &type metadata for Bool);
  swift_release(v1);
  return v4 & 1;
}

id sub_100298DD4()
{
  return sub_100298DE0((uint64_t (*)(void))&_MobileGestalt_get_mobileWifi);
}

id sub_100298DE0(uint64_t (*a1)(void))
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = a1();

    return (id)v4;
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100298E24()
{
  return *(unsigned __int8 *)(v0 + 67);
}

uint64_t sub_100298E2C()
{
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  swift_bridgeObjectRetain(v7);
  v1._countAndFlagsBits = 32LL;
  v1._object = (void *)0xE100000000000000LL;
  String.append(_:)(v1);
  uint64_t v3 = v0[6];
  id v2 = (void *)v0[7];
  swift_bridgeObjectRetain(v7);
  v4._countAndFlagsBits = v3;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v7);
  return v6;
}

uint64_t sub_100298EA4()
{
  uint64_t v1 = v0[6];
  id v2 = (void *)v0[7];
  uint64_t v5 = v0[2];
  swift_bridgeObjectRetain(v0[3]);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  return v5;
}

void *PlatformInfo.deinit()
{
  return v0;
}

uint64_t PlatformInfo.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 68LL, 7LL);
}

uint64_t type metadata accessor for PlatformInfo()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon12PlatformInfo);
}

uint64_t method lookup function for PlatformInfo(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PlatformInfo);
}

uint64_t dispatch thunk of PlatformInfo.virtual.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144LL))();
}

uint64_t dispatch thunk of PlatformInfo.isAvailable.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152LL))();
}

uint64_t dispatch thunk of PlatformInfo.hasMobileWiFi.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160LL))();
}

uint64_t dispatch thunk of PlatformInfo.systemVersionDescriptionNoBuild()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176LL))();
}

uint64_t dispatch thunk of PlatformInfo.systemVersionDescriptionNoSpace()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184LL))();
}

void sub_100298FC4()
{
  algn_10036BB38[7] = -18;
}

uint64_t *sub_100298FF4()
{
  if (qword_1003C09A0 != -1) {
    swift_once(&qword_1003C09A0, sub_100298FC4);
  }
  return &qword_10036BB30;
}

uint64_t sub_100299034()
{
  if (qword_1003C09A0 != -1) {
    swift_once(&qword_1003C09A0, sub_100298FC4);
  }
  uint64_t v0 = qword_10036BB30;
  swift_bridgeObjectRetain(*(void *)algn_10036BB38);
  return v0;
}

uint64_t sub_100299090()
{
  uint64_t v0 = type metadata accessor for PersistentConfig();
  uint64_t result = swift_initStaticObject(v0, &unk_1003C09C0);
  qword_1003C09B0 = result;
  return result;
}

uint64_t *sub_1002990B8()
{
  if (qword_1003C09A8 != -1) {
    swift_once(&qword_1003C09A8, sub_100299090);
  }
  return &qword_1003C09B0;
}

uint64_t static PersistentConfig.instance.getter()
{
  uint64_t v0 = type metadata accessor for PersistentConfig();
  return swift_initStaticObject(v0, &unk_1003C09C0);
}

unint64_t sub_100299114(uint64_t a1, uint64_t a2)
{
  id v4 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  if (qword_1003C09A0 != -1) {
    swift_once(&qword_1003C09A0, sub_100298FC4);
  }
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 dictionaryForKey:v5];

  if (!v6) {
    return 0LL;
  }
  uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v6,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

  id v8 = sub_100298C38();
  uint64_t v9 = *v8;
  uint64_t v10 = *(uint64_t (**)(uint64_t))(*(void *)*v8 + 184LL);
  uint64_t v11 = swift_retain(*v8);
  uint64_t v12 = v10(v11);
  uint64_t v14 = v13;
  swift_release(v9);
  if (!*(void *)(v7 + 16) || (unint64_t v15 = sub_10028F8EC(v12, v14), (v16 & 1) == 0))
  {
    __int128 v25 = 0u;
    __int128 v26 = 0u;
    swift_bridgeObjectRelease(v14);
    goto LABEL_14;
  }

  sub_10001884C(*(void *)(v7 + 56) + 32 * v15, (uint64_t)&v25);
  swift_bridgeObjectRelease(v14);
  if (!*((void *)&v26 + 1))
  {
LABEL_14:
    sub_1002862B0((uint64_t)&v25);
    unint64_t v22 = sub_100299394(v7);
    swift_bridgeObjectRelease(v7);
    return v22;
  }

  swift_bridgeObjectRelease(v7);
  sub_100299FDC(&v25, v27);
  sub_10001884C((uint64_t)v27, (uint64_t)&v25);
  uint64_t v17 = sub_100003A0C(&qword_100368408);
  if (!swift_dynamicCast(&v24, &v25, (char *)&type metadata for Any + 8, v17, 6LL))
  {
LABEL_17:
    sub_10001882C(v27);
    return 0LL;
  }

  uint64_t v18 = v24;
  if (!*(void *)(v24 + 16))
  {
LABEL_16:
    swift_bridgeObjectRelease(v18);
    goto LABEL_17;
  }

  swift_bridgeObjectRetain(a2);
  unint64_t v19 = sub_10028F8EC(a1, a2);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_16;
  }

  uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
  swift_unknownObjectRetain(v21);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v18);
  sub_10001882C(v27);
  *(void *)&__int128 v25 = v21;
  else {
    return 0LL;
  }
}

unint64_t sub_100299394(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_100003A0C((uint64_t *)&unk_1003684E8);
    Swift::String v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    Swift::String v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v35 = v1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  int64_t v34 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = v43;
  id v8 = v41;
  unint64_t result = swift_bridgeObjectRetain(v1);
  int64_t v36 = 0LL;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  uint64_t v11 = (char *)&type metadata for Swift.AnyObject + 8;
  if (v6) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = v36 + 1;
  if (__OFADD__(v36, 1LL)) {
    goto LABEL_35;
  }
  if (v20 >= v34) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v20);
  int64_t v22 = v36 + 1;
  if (!v21)
  {
    int64_t v22 = v36 + 2;
    if (v36 + 2 >= v34) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = v36 + 3;
      if (v36 + 3 >= v34) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v36 + 4;
        if (v36 + 4 >= v34) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = v36 + 5;
          if (v36 + 5 < v34)
          {
            unint64_t v21 = *(void *)(v35 + 8 * v23);
            if (v21)
            {
              int64_t v22 = v36 + 5;
              goto LABEL_26;
            }

            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1LL)) {
                goto LABEL_36;
              }
              if (v22 >= v34) {
                break;
              }
              unint64_t v21 = *(void *)(v35 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }

BOOL sub_1002996E0(uint64_t a1, uint64_t a2)
{
  id v4 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  if (qword_1003C09A0 != -1) {
    swift_once(&qword_1003C09A0, sub_100298FC4);
  }
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 dictionaryForKey:v5];

  if (v6)
  {
    uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v6,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain(a2);
      unint64_t v8 = sub_10028F8EC(a1, a2);
      if ((v9 & 1) != 0)
      {
        sub_10001884C(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v12);
        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(v7);
        BOOL v10 = *((void *)&v13 + 1) != 0LL;
LABEL_11:
        sub_1002862B0((uint64_t)&v12);
        return v10;
      }

      __int128 v12 = 0u;
      __int128 v13 = 0u;
      swift_bridgeObjectRelease(a2);
    }

    else
    {
      __int128 v12 = 0u;
      __int128 v13 = 0u;
    }

    swift_bridgeObjectRelease(v7);
    BOOL v10 = 0LL;
    goto LABEL_11;
  }

  return 0LL;
}

BOOL sub_100299860()
{
  id v0 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 valueForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v4, v2);
    swift_unknownObjectRelease(v2);
  }

  else
  {
    memset(v4, 0, sizeof(v4));
  }

  sub_1002862B0((uint64_t)v4);
  return v2 != 0LL;
}

void sub_100299924(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  allog.getter((uint64_t)v7);
  uint64_t v8 = swift_bridgeObjectRetain_n(a2, 2LL);
  char v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc(12LL, -1LL);
    uint64_t v17 = a1;
    __int128 v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc(32LL, -1LL);
    uint64_t v19 = v13;
    *(_DWORD *)__int128 v12 = 136446210;
    swift_bridgeObjectRetain(a2);
    uint64_t v18 = sub_1000181EC(v17, a2, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19, v12 + 4, v12 + 12);
    swift_bridgeObjectRelease_n(a2, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "UserDefaults,add,%{public}s", v12, 0xCu);
    swift_arrayDestroy(v13, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1LL, -1LL);
    swift_slowDealloc(v12, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(a2, 2LL);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v14 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v15 = String._bridgeToObjectiveC()();
  [v14 addSuiteNamed:v15];
}

uint64_t sub_100299B30(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, void))(**(void **)a1 + 112LL))( *a2,  a2[1],  *(void *)((char *)a2 + a3 - 8));
}

uint64_t sub_100299B64(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t *)((char *)a3 + a4 - 8);
  type metadata accessor for Optional(0LL, v7);
  __chkstk_darwin();
  char v9 = (char *)&v15 - v8;
  uint64_t v11 = *a3;
  uint64_t v10 = a3[1];
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v15 - v8, a1);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(**(void **)a2 + 120LL);
  swift_bridgeObjectRetain(v10);
  return v13(v9, v11, v10, v7);
}

uint64_t sub_100299C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (((*(uint64_t (**)(void))(*(void *)v4 + 96LL))() & 1) != 0)
  {
    id v9 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [v9 valueForKey:v10];

    if (v11)
    {
      _bridgeAnyObjectToAny(_:)(v22, v11);
      swift_unknownObjectRelease(v11);
      sub_100299FDC(v22, v23);
    }

    else
    {
      memset(v23, 0, sizeof(v23));
    }

    uint64_t v17 = sub_100003A0C(&qword_1003675E8);
    int v18 = swift_dynamicCast(a4, v23, v17, a3, 6LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56LL))( a4,  v18 ^ 1u,  1LL,  a3);
  }

  else
  {
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 80LL))(a1, a2);
    if (v12)
    {
      uint64_t v13 = v12;
      if (*(void *)(v12 + 16))
      {
        swift_bridgeObjectRetain(a2);
        unint64_t v14 = sub_10028F8EC(a1, a2);
        if ((v15 & 1) != 0)
        {
          uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
          swift_unknownObjectRetain(v16);
        }

        else
        {
          uint64_t v16 = 0LL;
        }

        swift_bridgeObjectRelease(a2);
      }

      else
      {
        uint64_t v16 = 0LL;
      }

      swift_bridgeObjectRelease(v13);
      *(void *)&v23[0] = v16;
      uint64_t v20 = sub_100003A0C(&qword_100368410);
      uint64_t v21 = swift_dynamicCast(a4, v23, v20, a3, 6LL) ^ 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56LL))( a4,  v21,  1LL,  a3);
    }

    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56LL))( a4,  1LL,  1LL,  a3);
    }
  }

uint64_t sub_100299E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for Optional(0LL, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(a1, v6);
}

void (*sub_100299E48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[1] = a3;
  v8[2] = a4;
  *uint64_t v8 = a2;
  uint64_t v9 = type metadata accessor for Optional(0LL, a4);
  void v8[3] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[4] = v10;
  size_t v11 = *(void *)(v10 + 64);
  void v8[5] = malloc(v11);
  uint64_t v12 = malloc(v11);
  v8[6] = v12;
  sub_100299C18(a2, a3, a4, (uint64_t)v12);
  return sub_100299EF0;
}

void sub_100299EF0(uint64_t **a1, char a2)
{
  id v2 = *a1;
  Swift::String v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v8 = (*a1)[1];
  uint64_t v7 = (*a1)[2];
  uint64_t v9 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    swift_bridgeObjectRetain(v8);
    sub_100299FEC((uint64_t)v3, v9, v8, v7);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v5);
  }

  else
  {
    swift_bridgeObjectRetain((*a1)[1]);
    sub_100299FEC((uint64_t)v4, v9, v8, v7);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v6 + 8);
  }

  v10(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t type metadata accessor for PersistentConfig()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon16PersistentConfig);
}

_OWORD *sub_100299FDC(_OWORD *a1, _OWORD *a2)
{
  __int128 v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_100299FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Optional(0LL, a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v15 - v9;
  id v11 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = 0LL;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, a4) != 1)
  {
    uint64_t v13 = _bridgeAnythingToObjectiveC<A>(_:)(v10, a4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, a4);
  }

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  [v11 setObject:v13 forKey:v14];

  swift_unknownObjectRelease(v13);
}

uint64_t sub_10029A124()
{
  return 8LL;
}

void *sub_10029A130(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for PersistentConfig(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PersistentConfig);
}

uint64_t dispatch thunk of PersistentConfig.addSuite(named:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104LL))();
}

uint64_t dispatch thunk of PersistentConfig.subscript.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112LL))();
}

uint64_t dispatch thunk of PersistentConfig.subscript.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120LL))();
}

uint64_t dispatch thunk of PersistentConfig.subscript.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128LL))();
}

uint64_t sub_10029A178(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void *sub_10029A180()
{
  NSString v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

void sub_10029A1C0(uint64_t a1)
{
  Swift::String v3 = *(void **)(v1 + 48);
  *(void *)(v1 + 48) = a1;
}

void *sub_10029A204(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_allocObject(v3, 56LL, 7LL);
  v7[5] = 0LL;
  v7[6] = 0LL;
  void v7[2] = a1;
  v7[3] = a2;
  v7[4] = a3;
  id v8 = a1;
  swift_retain(a3);
  sub_10029A2E0();
  sub_10029A7D8();

  swift_release(a3);
  return v7;
}

void *sub_10029A278(void *a1, uint64_t a2, uint64_t a3)
{
  v3[5] = 0LL;
  v3[6] = 0LL;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*v3 + 216LL);
  id v6 = a1;
  uint64_t v7 = swift_retain(a3);
  uint64_t v8 = v5(v7);
  (*(void (**)(uint64_t))(*v3 + 224LL))(v8);

  swift_release(a3);
  return v3;
}

uint64_t sub_10029A2E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  NSString v14 = (char *)&v36 - v13;
  uint64_t v15 = corelog.getter((uint64_t)&v36 - v13);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Reg discovery BT on AP from CB", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  uint64_t v20 = (*(uint64_t (**)(id))(*(void *)v1 + 168))([objc_allocWithZone(CBDiscovery) init]);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 160LL))(v20);
  if (v21)
  {
    int64_t v22 = (void *)v21;
    int64_t v23 = *(uint64_t (**)(void))(*(void *)v1 + 112LL);
    uint64_t v24 = (void *)v23();
    [v22 setDispatchQueue:v24];

    [v22 addDiscoveryType:29];
    [v22 setUseCase:269];
    [v22 setDiscoveryFlags:0x2000000];
    id v46 = sub_10029ABE4;
    uint64_t v47 = v1;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256LL;
    uint64_t v44 = sub_10029A728;
    uint64_t v45 = &unk_100346DF8;
    uint64_t v25 = _Block_copy(&aBlock);
    uint64_t v26 = v47;
    swift_retain(v1);
    swift_release(v26);
    [v22 setDevicesBufferedHandler:v25];
    _Block_release(v25);
    __int128 v27 = (void *)v23();
    uint64_t v28 = swift_allocObject(&unk_100346E30, 32LL, 7LL);
    *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
    *(void *)(v28 + 24) = v1;
    id v46 = sub_10029AC40;
    uint64_t v47 = v28;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256LL;
    uint64_t v44 = sub_100284B68;
    uint64_t v45 = &unk_100346E48;
    unint64_t v29 = _Block_copy(&aBlock);
    swift_retain(v1);
    id v30 = v22;
    static DispatchQoS.unspecified.getter(v30);
    uint64_t v41 = &_swiftEmptyArrayStorage;
    uint64_t v31 = sub_10000FD98( (unint64_t *)&qword_100368050,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v32 = sub_100003A0C(&qword_100367DB0);
    unint64_t v33 = sub_100291300();
    uint64_t v34 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v32, v33, v40, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v7, v4, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v34);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
    return swift_release(v47);
  }

  else
  {
    corelog.getter((uint64_t)v12);
    Logger._fault(_:function:file:line:)( (uint64_t (*)(void))sub_10029A70C,  0LL,  (uint64_t *)"regDiscovery()",  14LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALLeechCoreBluetooth.swift",  78LL,  2);
    return ((uint64_t (*)(char *, uint64_t))v19)(v12, v8);
  }

unint64_t sub_10029A70C()
{
  return 0xD000000000000010LL;
}

uint64_t sub_10029A728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  unint64_t v5 = sub_10029D6F4();
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  v4(v6);
  swift_release(v3);
  return swift_bridgeObjectRelease(v6);
}

void sub_10029A784(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void (**)(void *))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4(a2);
  swift_release(v3);
}

uint64_t sub_10029A7D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v40 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  NSString v14 = (char *)&v36 - v13;
  uint64_t v15 = corelog.getter((uint64_t)&v36 - v13);
  uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    int v18 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)int v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Reg leeching BT on AP from CB", v18, 2u);
    swift_slowDealloc(v18, -1LL, -1LL);
  }

  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v14, v8);
  uint64_t v20 = (*(uint64_t (**)(id))(*(void *)v1 + 192))([objc_allocWithZone(CBDiscovery) init]);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 184LL))(v20);
  if (v21)
  {
    int64_t v22 = (void *)v21;
    int64_t v23 = *(uint64_t (**)(void))(*(void *)v1 + 112LL);
    uint64_t v24 = (void *)v23();
    [v22 setDispatchQueue:v24];

    [v22 setDiscoveryFlags:0x10120001C080];
    id v46 = sub_10029D208;
    uint64_t v47 = v1;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256LL;
    uint64_t v44 = sub_100285318;
    uint64_t v45 = &unk_100346E70;
    uint64_t v25 = _Block_copy(&aBlock);
    uint64_t v26 = v47;
    swift_retain(v1);
    swift_release(v26);
    [v22 setDeviceFoundHandler:v25];
    _Block_release(v25);
    __int128 v27 = (void *)v23();
    uint64_t v28 = swift_allocObject(&unk_100346EA8, 32LL, 7LL);
    *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v22;
    *(void *)(v28 + 24) = v1;
    id v46 = sub_10029D24C;
    uint64_t v47 = v28;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256LL;
    uint64_t v44 = sub_100284B68;
    uint64_t v45 = &unk_100346EC0;
    unint64_t v29 = _Block_copy(&aBlock);
    swift_retain(v1);
    id v30 = v22;
    static DispatchQoS.unspecified.getter(v30);
    uint64_t v41 = &_swiftEmptyArrayStorage;
    uint64_t v31 = sub_10000FD98( (unint64_t *)&qword_100368050,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v32 = sub_100003A0C(&qword_100367DB0);
    unint64_t v33 = sub_100291300();
    uint64_t v34 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v32, v33, v40, v31);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v7, v4, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v4, v34);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v38);
    return swift_release(v47);
  }

  else
  {
    corelog.getter((uint64_t)v12);
    Logger._fault(_:function:file:line:)( sub_10029AC54,  0LL,  (uint64_t *)"regLeeching()",  13LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALLeechCoreBluetooth.swift",  78LL,  2);
    return ((uint64_t (*)(char *, uint64_t))v19)(v12, v8);
  }

void sub_10029ABE4(uint64_t a1)
{
  uint64_t v3 = objc_autoreleasePoolPush();
  (*(void (**)(uint64_t))(*(void *)v1 + 240LL))(a1);
  objc_autoreleasePoolPop(v3);
}

uint64_t sub_10029AC24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10029AC34(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void sub_10029AC40()
{
}

uint64_t sub_10029AC54()
{
  return 0x686365654C74625FLL;
}

uint64_t sub_10029AC78(void *a1)
{
  uint64_t v69 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v75 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v3 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v71 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v65 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v76 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v67 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v62 - v14;
  uint64_t v66 = v16;
  __chkstk_darwin(v13);
  Swift::Int v77 = (char *)&v62 - v17;
  id v18 = [(id)objc_opt_self(NSBundle) mainBundle];
  id v19 = [v18 bundleIdentifier];

  uint64_t v72 = v5;
  if (v19)
  {
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    unint64_t v22 = v21;
  }

  else
  {
    unint64_t v22 = 0xE100000000000000LL;
    uint64_t v20 = 95LL;
  }

  double aBlock = (void **)v20;
  uint64_t v80 = v22;
  swift_bridgeObjectRetain(v22);
  v23._countAndFlagsBits = 0x6E756F662E74622ELL;
  v23._object = (void *)0xE900000000000064LL;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22);
  uint64_t v24 = v80;
  uint64_t v25 = String.utf8CString.getter(aBlock, v80);
  swift_bridgeObjectRelease(v24);
  uint64_t v70 = os_transaction_create(v25 + 32);
  swift_release(v25);
  id v26 = a1;
  __int128 v27 = v77;
  sub_10029B214(v26);
  uint64_t v28 = v76;
  corelog.getter(v76);
  id v63 = *(uint64_t (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v29 = v63(v15, v27, v9);
  id v30 = (os_log_s *)Logger.logObject.getter(v29);
  uint64_t v31 = v9;
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  BOOL v33 = os_log_type_enabled(v30, v32);
  uint64_t v73 = v4;
  uint64_t v74 = v3;
  if (v33)
  {
    uint64_t v34 = swift_slowAlloc(12LL, -1LL);
    uint64_t v62 = v7;
    uint64_t v35 = v10;
    uint64_t v36 = (uint8_t *)v34;
    uint64_t v37 = (void **)swift_slowAlloc(32LL, -1LL);
    double aBlock = v37;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v38 = ALBtAdvertisement.description.getter(v37);
    unint64_t v40 = v39;
    uint64_t v78 = (void *)sub_1000181EC(v38, v39, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v78, &aBlock, v36 + 4, v36 + 12);
    swift_bridgeObjectRelease(v40);
    uint64_t v64 = *(void (**)(char *, uint64_t))(v35 + 8);
    v64(v15, v31);
    _os_log_impl((void *)&_mh_execute_header, v30, v32, "#BT,onDeviceFound,%s", v36, 0xCu);
    swift_arrayDestroy(v37, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1LL, -1LL);
    swift_slowDealloc(v36, -1LL, -1LL);

    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v76, v62);
    uint64_t v42 = v68;
  }

  else
  {
    uint64_t v64 = *(void (**)(char *, uint64_t))(v10 + 8);
    v64(v15, v31);

    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v28, v7);
    uint64_t v42 = v68;
    uint64_t v35 = v10;
  }

  uint64_t v43 = v66;
  uint64_t v44 = v67;
  uint64_t v45 = (void (*)(char *, char *, uint64_t))v63;
  id v46 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v42 + 112LL))(v41);
  uint64_t v47 = v77;
  v45(v44, v77, v31);
  uint64_t v48 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v49 = (v48 + 32) & ~v48;
  uint64_t v50 = swift_allocObject(&unk_100346EF8, v49 + v43, v48 | 7);
  uint64_t v51 = v31;
  uint64_t v52 = v70;
  *(void *)(v50 + swift_unknownObjectWeakDestroy(v0 + 16) = v70;
  *(void *)(v50 + 24) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v50 + v49, v44, v51);
  os_log_type_t v83 = sub_10029D36C;
  uint64_t v84 = v50;
  double aBlock = _NSConcreteStackBlock;
  uint64_t v80 = 1107296256LL;
  uint64_t v81 = sub_100284B68;
  id v82 = &unk_100346F10;
  os_log_type_t v53 = _Block_copy(&aBlock);
  swift_unknownObjectRetain(v52);
  uint64_t v54 = swift_retain(v42);
  uint64_t v55 = v71;
  static DispatchQoS.unspecified.getter(v54);
  uint64_t v78 = &_swiftEmptyArrayStorage;
  uint64_t v56 = sub_10000FD98( (unint64_t *)&qword_100368050,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v57 = sub_100003A0C(&qword_100367DB0);
  unint64_t v58 = sub_100291300();
  Swift::Int v59 = v74;
  uint64_t v60 = v69;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v78, v57, v58, v69, v56);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v55, v59, v53);
  _Block_release(v53);
  swift_unknownObjectRelease(v52);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v55, v73);
  v64(v47, v51);
  return swift_release(v84);
}

void sub_10029B214(void *a1)
{
  uint64_t v2 = type metadata accessor for ALBtAdvertisement.BtType(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = sub_100003A0C(&qword_1003684F8);
  __chkstk_darwin(v58);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_100003A0C((uint64_t *)&unk_100368500);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_1003517A0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v56 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v60 = (uint64_t)&v54 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::Int v59 = (char *)&v54 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v54 - v19;
  ALBtAdvertisement.init()(v18);
  unint64_t v21 = (unint64_t)[a1 bleAdvertisementTimestampMachContinuous];
  unint64_t v22 = MsInSec.getter();
  if ((v22 & 0x8000000000000000LL) != 0)
  {
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3451LL,  0);
    __break(1u);
    JUMPOUT(0x10029BA90LL);
  }

  if (!is_mul_ok(v21, v22))
  {
    __break(1u);
    JUMPOUT(0x10029BA30LL);
  }

  uint64_t v55 = v5;
  uint64_t v57 = v7;
  ALBtAdvertisement._machContTimeNs.setter(v21 * v22, 0LL);
  id v23 = [a1 btAddressData];
  if (v23)
  {
    uint64_t v24 = v23;
    static Data._unconditionallyBridgeFromObjectiveC(_:)(v23);
    uint64_t v26 = v25;

    __asm { BR              X10 }
  }

  unsigned int v27 = [a1 bleRSSI];
  char v63 = 0;
  ALBtAdvertisement._rssidB.setter(v27);
  unsigned int v28 = [a1 bleChannel];
  char v62 = 0;
  ALBtAdvertisement._channel.setter(v28);
  id v29 = [a1 bleAdvertisementData];
  if (v29)
  {
    id v30 = v29;
    uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v29);
  }

  else
  {
    uint64_t v31 = 0LL;
  }

  ALBtAdvertisement._payload.setter(v31);
  ALBtAdvertisement._deviceFlags.setter([a1 deviceFlags], 0);
  ALBtAdvertisement._discoveryFlags.setter([a1 discoveryFlags], 0);
  ALBtAdvertisement._vendorID.setter([a1 vendorID]);
  id v32 = [a1 identifier];
  if (v32)
  {
    BOOL v33 = v32;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
  }

  else
  {
    uint64_t v34 = 0LL;
  }

  ALBtAdvertisement._identifier.setter(v34);
  id v35 = [a1 idsDeviceID];
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  }

  else
  {
    uint64_t v37 = 0LL;
  }

  ALBtAdvertisement._idsDeviceID.setter(v37);
  if (([a1 discoveryFlags] & 0x8000) != 0
    || ([a1 discoveryFlags] & 0x4000) != 0)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))( v20,  enum case for ALBtAdvertisement.BtType.type7(_:),  v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v20, 0LL, 1LL, v2);
    ALBtAdvertisement._type.setter(v20);
    sub_10029CC78(a1, 1);
    uint64_t v38 = type metadata accessor for ALBtAdvInfoType7(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56LL))(v10, 0LL, 1LL, v38);
    ALBtAdvertisement._type7Info.setter(v10);
  }

  if (([a1 discoveryFlags] & 0x10000) != 0)
  {
    uint64_t v40 = enum case for ALBtAdvertisement.BtType.type7(_:);
    goto LABEL_21;
  }

  uint64_t v39 = (uint64_t)[a1 discoveryFlags];
  uint64_t v40 = enum case for ALBtAdvertisement.BtType.type7(_:);
  if ((v39 & 0x80) != 0)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 104))(v20, v40, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v20, 0LL, 1LL, v2);
    ALBtAdvertisement._type.setter(v20);
    sub_10029CC78(a1, 0);
    uint64_t v41 = type metadata accessor for ALBtAdvInfoType7(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v10, 0LL, 1LL, v41);
    uint64_t v39 = ALBtAdvertisement._type7Info.setter(v10);
  }

  uint64_t v42 = (uint64_t)v59;
  ALBtAdvertisement.type.getter(v39);
  uint64_t v43 = v60;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 104))(v60, v40, v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v43, 0LL, 1LL, v2);
  uint64_t v44 = (uint64_t)v57;
  uint64_t v45 = (uint64_t)&v57[*(int *)(v58 + 48)];
  sub_10029D414(v42, (uint64_t)v57);
  sub_10029D414(v43, v45);
  id v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v46(v44, 1LL, v2) == 1)
  {
    sub_100015764(v43, &qword_1003517A0);
    sub_100015764(v42, &qword_1003517A0);
    if (v46(v45, 1LL, v2) == 1)
    {
      sub_100015764(v44, &qword_1003517A0);
LABEL_30:
      uint64_t v48 = &selRef_proximityPairingProductID;
      goto LABEL_31;
    }

    goto LABEL_27;
  }

  uint64_t v47 = v56;
  sub_10029D414(v44, v56);
  if (v46(v45, 1LL, v2) == 1)
  {
    sub_100015764(v43, &qword_1003517A0);
    sub_100015764(v42, &qword_1003517A0);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v47, v2);
LABEL_27:
    sub_100015764(v44, &qword_1003684F8);
    goto LABEL_28;
  }

  uint64_t v49 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v55, v45, v2);
  uint64_t v50 = sub_10000FD98( (unint64_t *)&unk_100368510,  (uint64_t (*)(uint64_t))&type metadata accessor for ALBtAdvertisement.BtType,  (uint64_t)&protocol conformance descriptor for ALBtAdvertisement.BtType);
  char v51 = dispatch thunk of static Equatable.== infix(_:_:)(v47, v49, v2, v50);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v3 + 8);
  v52(v49, v2);
  sub_100015764(v60, &qword_1003517A0);
  sub_100015764(v42, &qword_1003517A0);
  v52((char *)v47, v2);
  sub_100015764(v44, &qword_1003517A0);
  if ((v51 & 1) != 0) {
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v48 = &selRef_productID;
LABEL_31:
  unsigned int v53 = [a1 *v48];
  char v61 = 0;
  ALBtAdvertisement._productID.setter(v53);
}

uint64_t sub_10029BAA0(uint64_t a1)
{
  uint64_t v87 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v72 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v71 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Logger(0LL);
  uint64_t v83 = *(void *)(v7 - 8);
  uint64_t v84 = v7;
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v88 = (void *)type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v9 = *(v88 - 1);
  uint64_t v10 = __chkstk_darwin(v88);
  Swift::Int v77 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v65 - v13;
  __chkstk_darwin(v12);
  __int128 v85 = (char *)&v65 - v14;
  id v15 = [(id)objc_opt_self(NSBundle) mainBundle];
  id v16 = [v15 bundleIdentifier];

  if (v16)
  {
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    unint64_t v19 = v18;
  }

  else
  {
    unint64_t v19 = 0xE100000000000000LL;
    uint64_t v17 = 95LL;
  }

  double aBlock = (void **)v17;
  uint64_t v92 = v19;
  swift_bridgeObjectRetain(v19);
  v20._countAndFlagsBits = 0x666675622E74622ELL;
  v20._object = (void *)0xEB00000000647265LL;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  uint64_t v21 = v92;
  uint64_t v22 = String.utf8CString.getter(aBlock, v92);
  swift_bridgeObjectRelease(v21);
  uint64_t v69 = os_transaction_create(v22 + 32);
  swift_release(v22);
  uint64_t v86 = swift_allocObject(&unk_100346F48, 24LL, 7LL);
  *(void *)(v86 + swift_unknownObjectWeakDestroy(v0 + 16) = &_swiftEmptyArrayStorage;
  if ((unint64_t)v87 >> 62)
  {
    if (v87 < 0) {
      uint64_t v64 = v87;
    }
    else {
      uint64_t v64 = v87 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v87);
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v64);
    uint64_t v23 = result;
  }

  else
  {
    uint64_t v23 = *(void *)((v87 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(v87);
  }

  uint64_t v26 = v85;
  uint64_t v73 = v5;
  if (!v23)
  {
    uint64_t v51 = swift_bridgeObjectRelease(v87);
LABEL_22:
    uint64_t v52 = v70;
    unsigned int v53 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v70 + 112LL))(v51);
    uint64_t v54 = (void *)swift_allocObject(&unk_100346F70, 40LL, 7LL);
    uint64_t v55 = v69;
    v54[2] = v69;
    v54[3] = v52;
    uint64_t v56 = v86;
    v54[4] = v86;
    uint64_t v95 = sub_10029D4B4;
    uint64_t v96 = v54;
    double aBlock = _NSConcreteStackBlock;
    uint64_t v92 = 1107296256LL;
    uint64_t v93 = sub_100284B68;
    uint64_t v94 = &unk_100346F88;
    uint64_t v57 = _Block_copy(&aBlock);
    swift_unknownObjectRetain(v55);
    swift_retain(v52);
    uint64_t v58 = swift_retain(v56);
    Swift::Int v59 = v71;
    static DispatchQoS.unspecified.getter(v58);
    uint64_t v90 = &_swiftEmptyArrayStorage;
    uint64_t v60 = sub_10000FD98( (unint64_t *)&qword_100368050,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v61 = sub_100003A0C(&qword_100367DB0);
    unint64_t v62 = sub_100291300();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v90, v61, v62, v1, v60);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v59, v4, v57);
    _Block_release(v57);
    swift_unknownObjectRelease(v55);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v59, v73);
    char v63 = v96;
    swift_release(v56);
    return swift_release(v63);
  }

  if (v23 >= 1)
  {
    uint64_t v66 = v4;
    uint64_t v67 = v2;
    uint64_t v68 = v1;
    uint64_t v27 = 0LL;
    unint64_t v80 = v87 & 0xC000000000000001LL;
    p_double aBlock = &aBlock;
    *(void *)&__int128 v25 = 136315138LL;
    __int128 v75 = v25;
    uint64_t v74 = (char *)&type metadata for Any + 8;
    unsigned int v28 = v77;
    uint64_t v29 = (uint64_t)v78;
    id v30 = v88;
    uint64_t v81 = v9;
    uint64_t v82 = v23;
    do
    {
      if (v80) {
        id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v87);
      }
      else {
        id v32 = *(id *)(v87 + 8 * v27 + 32);
      }
      id v33 = v32;
      sub_10029B214(v33);
      uint64_t v34 = *(void (**)(char *, char *, void *))(v9 + 16);
      v34(v89, v26, v30);
      unint64_t v35 = *(void *)(v86 + 16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v35);
      uint64_t v88 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v35 = sub_10028BDE8(0, *(void *)(v35 + 16) + 1LL, 1, v35);
        *(void *)(v86 + swift_unknownObjectWeakDestroy(v0 + 16) = v35;
      }

      unint64_t v38 = *(void *)(v35 + 16);
      unint64_t v37 = *(void *)(v35 + 24);
      if (v38 >= v37 >> 1)
      {
        unint64_t v35 = sub_10028BDE8(v37 > 1, v38 + 1, 1, v35);
        *(void *)(v86 + swift_unknownObjectWeakDestroy(v0 + 16) = v35;
      }

      *(void *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = v38 + 1;
      (*(void (**)(unint64_t, char *, void *))(v9 + 32))( v35 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(void *)(v9 + 72) * v38,
        v89,
        v30);
      corelog.getter(v29);
      uint64_t v26 = v85;
      uint64_t v39 = ((uint64_t (*)(char *, char *, void *))v34)(v28, v85, v30);
      uint64_t v40 = (os_log_s *)Logger.logObject.getter(v39);
      uint64_t v41 = v28;
      uint64_t v42 = v9;
      uint64_t v43 = v30;
      os_log_type_t v44 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v40, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        id v46 = (void **)swift_slowAlloc(32LL, -1LL);
        double aBlock = v46;
        *(_DWORD *)uint64_t v45 = v75;
        uint64_t v79 = v45 + 4;
        uint64_t v47 = ALBtAdvertisement.description.getter(v46);
        unint64_t v49 = v48;
        uint64_t v90 = (void *)sub_1000181EC(v47, v48, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, p_aBlock, v79, v45 + 12);
        swift_bridgeObjectRelease(v49);
        uint64_t v50 = *(void (**)(char *, void *))(v42 + 8);
        unsigned int v28 = v77;
        v50(v77, v43);
        _os_log_impl((void *)&_mh_execute_header, v40, v44, "#BT,onDevicesBuffered,%s", v45, 0xCu);
        swift_arrayDestroy(v46, 1LL, v74);
        swift_slowDealloc(v46, -1LL, -1LL);
        swift_slowDealloc(v45, -1LL, -1LL);

        uint64_t v29 = (uint64_t)v78;
        (*(void (**)(void))(v83 + 8))();
        v50(v26, v43);
        id v30 = v43;
      }

      else
      {

        uint64_t v31 = *(void (**)(char *, void *))(v42 + 8);
        v31(v41, v43);

        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v29, v84);
        v31(v26, v43);
        id v30 = v43;
        unsigned int v28 = v41;
      }

      uint64_t v9 = v81;
      ++v27;
    }

    while (v82 != v27);
    uint64_t v51 = swift_bridgeObjectRelease(v87);
    uint64_t v1 = v68;
    uint64_t v2 = v67;
    uint64_t v4 = v66;
    goto LABEL_22;
  }

  __break(1u);
  return result;
}

uint64_t sub_10029C21C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - v8;
  uint64_t v10 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for ALBtNotification(0LL);
  uint64_t v46 = *(void *)(v48 - 8);
  uint64_t v13 = __chkstk_darwin(v48);
  id v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v18 = (char *)&v41 - v17;
  ALBtNotification.init()(v16);
  uint64_t v19 = swift_bridgeObjectRetain(a1);
  ALBtNotification._advertisements.setter(v19);
  ALBtNotification._isScreenOn.setter(a2 & 1);
  uint64_t v20 = ALBtNotification._simulated.setter(0LL);
  static ALTimeStamp.now()(v20);
  uint64_t v21 = type metadata accessor for ALTimeStamp(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v12, 0LL, 1LL, v21);
  ALBtNotification._timestamp.setter(v12);
  corelog.getter((uint64_t)v9);
  uint64_t v22 = swift_bridgeObjectRetain_n(a1, 2LL);
  uint64_t v23 = (void *)Logger.logObject.getter(v22);
  os_log_type_t v24 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled((os_log_t)v23, v24))
  {

    swift_bridgeObjectRelease_n(a1, 2LL);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v4);
LABEL_7:
    unint64_t v35 = (void (*)(char *))(*(uint64_t (**)(uint64_t))(*(void *)v47 + 136LL))(v34);
    uint64_t v37 = v36;
    swift_beginAccess(v18, v51, 0LL, 0LL);
    uint64_t v38 = v46;
    uint64_t v39 = v48;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v15, v18, v48);
    v35(v15);
    uint64_t v40 = *(void (**)(char *, uint64_t))(v38 + 8);
    v40(v15, v39);
    swift_release(v37);
    return ((uint64_t (*)(char *, uint64_t))v40)(v18, v39);
  }

  uint64_t v43 = v5;
  uint64_t v44 = v4;
  uint64_t v25 = swift_slowAlloc(22LL, -1LL);
  uint64_t v42 = swift_slowAlloc(32LL, -1LL);
  v51[0] = v42;
  *(_DWORD *)uint64_t v25 = 136446466;
  uint64_t v26 = swift_beginAccess(v18, v50, 0LL, 0LL);
  uint64_t v27 = ALBtNotification.description.getter(v26);
  unint64_t v29 = v28;
  uint64_t v49 = sub_1000181EC(v27, v28, v51);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v25 + 4, v25 + 12);
  uint64_t result = swift_bridgeObjectRelease(v29);
  *(_WORD *)(v25 + 12) = 2050;
  if (*(void *)(a1 + 16))
  {
    type metadata accessor for ALBtAdvertisement(0LL);
    double v31 = COERCE_DOUBLE(sub_10029C694());
    if ((v32 & 1) != 0) {
      double v31 = -1.0;
    }
    uint64_t v49 = *(void *)&v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50, v25 + 14, v25 + 22);
    swift_bridgeObjectRelease_n(a1, 2LL);
    _os_log_impl( (void *)&_mh_execute_header,  (os_log_t)v23,  v24,  "#BT,onAdvertisements,notif,%{public}s,delayMs,%{public}f",  (uint8_t *)v25,  0x16u);
    uint64_t v33 = v42;
    swift_arrayDestroy(v42, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1LL, -1LL);
    swift_slowDealloc(v25, -1LL, -1LL);

    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v9, v44);
    goto LABEL_7;
  }

  __break(1u);
  return result;
}

uint64_t sub_10029C694()
{
  uint64_t v0 = sub_100003A0C(&qword_1003517B8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ALBtNotification._timestamp.getter(v1);
  uint64_t v4 = type metadata accessor for ALTimeStamp(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1LL, v4) == 1)
  {
    sub_100015764((uint64_t)v3, &qword_1003517B8);
  }

  else
  {
    double v6 = COERCE_DOUBLE(ALTimeStamp._machAbsoluteTimeSec.getter());
    char v8 = v7;
    uint64_t v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if ((v8 & 1) != 0) {
      return *(void *)&v6;
    }
    uint64_t v10 = ALBtAdvertisement._machContTimeNs.getter(v9);
    if ((v11 & 1) == 0)
    {
      unint64_t v12 = v10;
      double v13 = v6 * (double)MsInSec.getter();
      double v6 = v13 - NsToMs.getter() * (double)v12;
      return *(void *)&v6;
    }
  }

  double v6 = 0.0;
  return *(void *)&v6;
}

uint64_t sub_10029C7BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  double v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t result = __chkstk_darwin(v7);
  unint64_t v12 = (char *)&v31 - v11;
  if (!a1) {
    return result;
  }
  swift_getErrorValue(a1, v34, v33);
  uint64_t v13 = v33[1];
  uint64_t v14 = v33[2];
  swift_errorRetain(a1);
  uint64_t result = dispatch thunk of Error._code.getter(v13, v14);
  if (result < (uint64_t)0xFFFFFFFF80000000LL)
  {
    __break(1u);
    goto LABEL_17;
  }

  if (result > 0x7FFFFFFF)
  {
LABEL_17:
    __break(1u);
    return result;
  }

  if ((_DWORD)result == -71142)
  {
    corelog.getter((uint64_t)v9);
    swift_errorRetain(a1);
    uint64_t v22 = swift_errorRetain(a1);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      double v31 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v25 = 138543362;
      swift_errorRetain(a1);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v32 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v25 + 4, v25 + 12);
      uint64_t v27 = v31;
      uint64_t *v31 = v26;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "#BT,onCBError,interrupted,%{public}@", v25, 0xCu);
      uint64_t v28 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v27, 1LL, v28);
      swift_slowDealloc(v27, -1LL, -1LL);
      swift_slowDealloc(v25, -1LL, -1LL);

      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    unint64_t v12 = v9;
  }

  else if ((_DWORD)result == -71148)
  {
    corelog.getter((uint64_t)v12);
    swift_errorRetain(a1);
    uint64_t v15 = swift_errorRetain(a1);
    uint64_t v16 = (os_log_s *)Logger.logObject.getter(v15);
    os_log_type_t v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      double v31 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)unint64_t v18 = 138543362;
      swift_errorRetain(a1);
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError(a1);
      uint64_t v32 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, v33, v18 + 4, v18 + 12);
      uint64_t v20 = v31;
      uint64_t *v31 = v19;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "#BT,onCBError,bluetoothdUnloaded,%{public}@", v18, 0xCu);
      uint64_t v21 = sub_100003A0C((uint64_t *)&unk_100367680);
      swift_arrayDestroy(v20, 1LL, v21);
      swift_slowDealloc(v20, -1LL, -1LL);
      swift_slowDealloc(v18, -1LL, -1LL);

      swift_errorRelease(a1);
    }

    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }
  }

  else
  {
    uint64_t v29 = corelog.getter((uint64_t)v6);
    __chkstk_darwin(v29);
    uint64_t v30 = 135LL;
    Logger._fault(_:function:file:line:)( sub_10029D5C0,  (uint64_t)(&v31 - 4),  (uint64_t *)"onCBError(_:)",  13LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALLeechCoreBluetooth.swift",  78LL,  2);
    swift_errorRelease(a1);
    unint64_t v12 = v6;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

uint64_t sub_10029CC08()
{
  swift_release(*(void *)(v0 + 32));
  return v0;
}

uint64_t sub_10029CC3C()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocClassInstance(v0, 56LL, 7LL);
}

void sub_10029CC78(void *a1, char a2)
{
  uint64_t v11 = a1;
  uint64_t v3 = sub_100003A0C(&qword_1003517A8);
  uint64_t v4 = __chkstk_darwin(v3);
  double v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ALBtAdvInfoType7.init()(v4);
  ALBtAdvInfoType7._isSameAccount.setter(((unint64_t)[v11 deviceFlags] >> 7) & 1);
  ALBtAdvInfoType7._isFamily.setter(([v11 deviceFlags] >> 8) & 1);
  ALBtAdvInfoType7._isSharedHome.setter(([v11 deviceFlags] >> 9) & 1);
  if ((a2 & 1) != 0) {
    unint64_t v7 = ((unint64_t)[v11 deviceFlags] >> 34) & 1;
  }
  else {
    unint64_t v7 = 2LL;
  }
  uint64_t isLeft = ALBtAdvInfoType7._isLeftBud.setter(v7);
  char v9 = ALBtAdvInfoType7._isLeftBud.getter(isLeft);
  if (v9 != 2)
  {
    sub_10029CD94(v11, v9 & 1, (uint64_t)v6);
    ALBtAdvInfoType7._placement.setter(v6);
  }
}

uint64_t sub_10029CD94@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v31 = type metadata accessor for ALBtAdvInfoType7.Placement(0LL);
  uint64_t v5 = *(void *)(v31 - 8);
  uint64_t v6 = __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v30 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  allog.getter((uint64_t)v13);
  id v14 = a1;
  uint64_t v15 = (os_log_s *)Logger.logObject.getter(v14);
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v17 = (_DWORD *)swift_slowAlloc(11LL, -1LL);
    uint64_t v28 = v11;
    unint64_t v18 = v17;
    *os_log_type_t v17 = 67109376;
    char v19 = a2;
    int v34 = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35, v17 + 1, v17 + 2);
    *((_WORD *)v18 + 4) = 256;
    uint64_t v29 = v8;
    unsigned __int8 v33 = [v14 primaryBudSide];
    uint64_t v8 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, (char *)v18 + 10, (char *)v18 + 11);

    _os_log_impl( (void *)&_mh_execute_header,  v15,  v16,  "ALBtAdvInfoType7.Placement,isLeftBud,%{BOOL}d,budSide,%hhu",  (uint8_t *)v18,  0xBu);
    uint64_t v20 = v18;
    uint64_t v11 = v28;
    swift_slowDealloc(v20, -1LL, -1LL);
  }

  else
  {
    char v19 = a2;

    uint64_t v15 = (os_log_s *)v14;
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
  unsigned int v21 = [v14 primaryBudSide];
  if (v21 == 2)
  {
    os_log_type_t v24 = &selRef_secondaryPlacement;
    if ((v19 & 1) == 0) {
      os_log_type_t v24 = &selRef_primaryPlacement;
    }
    switch([v14 *v24])
    {
      case 1u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.inEar(_:);
        break;
      case 2u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.outOfEar(_:);
        break;
      case 3u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.inCase(_:);
        break;
      case 4u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.onEar(_:);
        break;
      case 5u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.offEar(_:);
        break;
      case 6u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.onNeck(_:);
        break;
      case 7u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.disabled(_:);
        break;
      default:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.unknown(_:);
        break;
    }

    uint64_t v10 = v8;
    goto LABEL_30;
  }

  if (v21 == 1)
  {
    uint64_t v22 = &selRef_primaryPlacement;
    if ((v19 & 1) == 0) {
      uint64_t v22 = &selRef_secondaryPlacement;
    }
    switch([v14 *v22])
    {
      case 1u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.inEar(_:);
        break;
      case 2u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.outOfEar(_:);
        break;
      case 3u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.inCase(_:);
        break;
      case 4u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.onEar(_:);
        break;
      case 5u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.offEar(_:);
        break;
      case 6u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.onNeck(_:);
        break;
      case 7u:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.disabled(_:);
        break;
      default:
        uint64_t v23 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.unknown(_:);
        break;
    }

uint64_t sub_10029D14C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.inEar(_:);
      break;
    case 2:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.outOfEar(_:);
      break;
    case 3:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.inCase(_:);
      break;
    case 4:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.onEar(_:);
      break;
    case 5:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.offEar(_:);
      break;
    case 6:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.onNeck(_:);
      break;
    case 7:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.disabled(_:);
      break;
    default:
      uint64_t v3 = (unsigned int *)&enum case for ALBtAdvInfoType7.Placement.unknown(_:);
      break;
  }

  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for ALBtAdvInfoType7.Placement(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104LL))(a2, v4, v5);
}

void sub_10029D208(uint64_t a1)
{
  uint64_t v3 = objc_autoreleasePoolPush();
  (*(void (**)(uint64_t))(*(void *)v1 + 232LL))(a1);
  objc_autoreleasePoolPop(v3);
}

void sub_10029D24C()
{
}

void sub_10029D260(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 16);
  uint64_t v4 = *(void *)(v2 + 24);
  v7[4] = a1;
  uint64_t v8 = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256LL;
  void v7[2] = sub_10029A784;
  v7[3] = a2;
  uint64_t v5 = _Block_copy(v7);
  uint64_t v6 = v8;
  swift_retain(v4);
  swift_release(v6);
  [v3 activateWithCompletion:v5];
  _Block_release(v5);
}

uint64_t sub_10029D2F0()
{
  uint64_t v1 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease(*(void *)(v0 + 16));
  swift_release(*(void *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10029D36C()
{
  uint64_t v1 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = sub_100003A0C((uint64_t *)&unk_100368670);
  uint64_t v7 = swift_allocObject(v6, v4 + *(void *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002BAD60;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v7 + v4, v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v5 + 248LL))(v7, 1LL);
  return swift_bridgeObjectRelease(v7);
}

uint64_t sub_10029D414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_1003517A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029D45C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10029D480()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10029D4B4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_beginAccess(v2 + 16, v7, 0LL, 0LL);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(void (**)(uint64_t, void))(*(void *)v1 + 248LL);
  uint64_t v5 = swift_bridgeObjectRetain(v3);
  v4(v5, 0LL);
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10029D51C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  v7[0] = 0LL;
  v7[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(20LL);
  v2._object = (void *)0x80000001002F5860LL;
  v2._countAndFlagsBits = 0xD000000000000012LL;
  String.append(_:)(v2);
  uint64_t v6 = v1;
  uint64_t v3 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v6,  v7,  v3,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 0LL;
  v4._object = (void *)0xE000000000000000LL;
  String.append(_:)(v4);
  return v7[0];
}

uint64_t sub_10029D5C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v10 = 0LL;
  unint64_t v11 = 0xE000000000000000LL;
  _StringGuts.grow(_:)(27LL);
  v14[0] = 0LL;
  v14[1] = 0xE000000000000000LL;
  v2._object = (void *)0x80000001002F5840LL;
  v2._countAndFlagsBits = 0xD000000000000016LL;
  String.append(_:)(v2);
  swift_getErrorValue(v1, v13, &v10);
  dispatch thunk of Error._code.getter(v11, v12);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int,  &protocol witness table for Int);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._countAndFlagsBits = 44LL;
  v5._object = (void *)0xE100000000000000LL;
  String.append(_:)(v5);
  uint64_t v9 = v1;
  uint64_t v6 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v9,  v14,  v6,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v7._countAndFlagsBits = 0LL;
  v7._object = (void *)0xE000000000000000LL;
  String.append(_:)(v7);
  return v14[0];
}

uint64_t type metadata accessor for ALLeechCoreBluetooth()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon20ALLeechCoreBluetooth);
}

uint64_t sub_10029D6E8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256LL))();
}

unint64_t sub_10029D6F4()
{
  unint64_t result = qword_100368680;
  if (!qword_100368680)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___CBDevice);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100368680);
  }

  return result;
}

id sub_10029D76C()
{
  return *v0;
}

void sub_10029D774(void *a1)
{
  id *v1 = a1;
}

uint64_t sub_10029D79C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_retain(*(void *)(v0 + 16));
  return v1;
}

uint64_t sub_10029D7C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release(*(void *)(v2 + 16));
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  return result;
}

uint64_t sub_10029D7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ALResultOptions(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(a1, 1LL, 1LL, v2);
}

uint64_t sub_10029D838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientCallback(0LL) + 24);
  return sub_10029D8A4(v3, a1);
}

uint64_t type metadata accessor for ClientCallback(uint64_t a1)
{
  uint64_t result = qword_1003C09D0;
  if (!qword_1003C09D0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClientCallback);
  }
  return result;
}

uint64_t sub_10029D8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_100367EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029D8EC(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ClientCallback(0LL) + 24);
  return sub_10029D91C(a1, v3);
}

uint64_t sub_10029D91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100003A0C(&qword_100367EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_10029D964())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_10029D98C()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClientCallback(0LL) + 28));
}

uint64_t sub_10029D9B4(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ClientCallback(0LL);
  uint64_t v6 = v2 + *(int *)(result + 28);
  *(void *)uint64_t v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_10029D9F8())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_10029DA20()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ClientCallback(0LL) + 32));
}

uint64_t sub_10029DA48(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ClientCallback(0LL);
  uint64_t v6 = v2 + *(int *)(result + 32);
  *(void *)uint64_t v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_10029DA8C())(void, void, void)
{
  return static ALProtobufUtil.debug<A>(_:);
}

uint64_t sub_10029DAB4@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v20 = a2;
  uint64_t v8 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = (int *)type metadata accessor for ClientCallback(0LL);
  uint64_t v13 = (uint64_t)a5 + v12[6];
  id v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v14(v13, 1LL, 1LL, v8);
  uint64_t v15 = (char *)a5 + v12[7];
  *(void *)uint64_t v15 = 0LL;
  v15[8] = 1;
  os_log_type_t v16 = (char *)a5 + v12[8];
  *(void *)os_log_type_t v16 = 0LL;
  void v16[8] = 1;
  *a5 = v19;
  a5[1] = a1;
  a5[2] = v20;
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v18(v11, a4, v8);
  sub_10029DC1C(v13);
  v18((char *)v13, (uint64_t)v11, v8);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v14)(v13, 0LL, 1LL, v8);
}

uint64_t sub_10029DC1C(uint64_t a1)
{
  uint64_t v2 = sub_100003A0C(&qword_100367EF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_10029DC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ClientCallback(0LL);
  __chkstk_darwin(v6);
  uint64_t v8 = (id *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  corelog.getter((uint64_t)v12);
  uint64_t v13 = sub_10029DE70(v3, (uint64_t)v8);
  id v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = a1;
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v28 = a2;
    os_log_type_t v17 = (uint8_t *)v16;
    unint64_t v18 = (void *)swift_slowAlloc(8LL, -1LL);
    uint64_t v25 = v10;
    uint64_t v26 = v3;
    *(_DWORD *)os_log_type_t v17 = 138543362;
    os_log_type_t v24 = v17 + 4;
    id v29 = *v8;
    id v19 = v29;
    id v20 = v29;
    a1 = v27;
    uint64_t v10 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v24, v17 + 12);
    void *v18 = v19;
    uint64_t v3 = v26;
    sub_100292DE4((uint64_t)v8);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "leeching to %{public}@", v17, 0xCu);
    uint64_t v21 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v18, 1LL, v21);
    swift_slowDealloc(v18, -1LL, -1LL);
    uint64_t v22 = v17;
    a2 = v28;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {
    sub_100292DE4((uint64_t)v8);
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, a2);
}

uint64_t sub_10029DE70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCallback(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029DEB4()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10029DEE8(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess(v2 + 16, v6, 1LL, 0LL);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t sub_10029DF38()
{
  return swift_bridgeObjectRetain(*(void *)(v0 + 32));
}

uint64_t sub_10029DF6C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease(v3);
}

uint64_t sub_10029DFB0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_retain(*(void *)(v0 + 48));
  return v1;
}

uint64_t sub_10029DFDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject(v3, 64LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(result + 24) = 1;
  *(void *)(result + 32) = &_swiftEmptyArrayStorage;
  *(void *)(result + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a2;
  *(void *)(result + 48) = a3;
  *(void *)(result + 56) = a1;
  return result;
}

uint64_t sub_10029E034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(_BYTE *)(v3 + 24) = 1;
  *(void *)(v3 + 32) = &_swiftEmptyArrayStorage;
  *(void *)(v3 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a2;
  *(void *)(v3 + 48) = a3;
  *(void *)(v3 + 56) = a1;
  return v3;
}

uint64_t sub_10029E058(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for ClientCallback(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v22 = v1[7];
  sub_10029DE70(a1, (uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = swift_allocObject(&unk_100347010, v14 + v12, v13 | 7);
  *(void *)(v15 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v3 + 80);
  *(void *)(v15 + 24) = v1;
  sub_10029EFE8((uint64_t)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL), v15 + v14);
  aBlock[4] = sub_10029F02C;
  uint64_t v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_100284B68;
  void aBlock[3] = &unk_100347028;
  uint64_t v16 = _Block_copy(aBlock);
  uint64_t v17 = swift_retain(v1);
  static DispatchQoS.unspecified.getter(v17);
  uint64_t v25 = &_swiftEmptyArrayStorage;
  unint64_t v18 = sub_1002912B8();
  uint64_t v19 = sub_100003A0C(&qword_100367DB0);
  unint64_t v20 = sub_100291300();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v9, v6, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
  return swift_release(v27);
}

uint64_t sub_10029E27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCallback(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  sub_10029DE70(a2, (uint64_t)v7);
  uint64_t v8 = (uint64_t (*)(_BYTE *, void))(*(uint64_t (**)(_BYTE *))(*(void *)a1 + 160LL))(v16);
  uint64_t v10 = v9;
  unint64_t v11 = *v9;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
  *uint64_t v10 = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v11 = sub_10029ED28(0, *(void *)(v11 + 16) + 1LL, 1, v11);
    *uint64_t v10 = v11;
  }

  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v11 = sub_10029ED28(v13 > 1, v14 + 1, 1, v11);
    *uint64_t v10 = v11;
  }

  *(void *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = v14 + 1;
  sub_10029EFE8( (uint64_t)v7,  v11 + ((*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
  + *(void *)(v5 + 72) * v14);
  return v8(v16, 0LL);
}

uint64_t sub_10029E3B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  corelog.getter((uint64_t)v12);
  unint64_t v13 = a1;
  unint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v35 = v2;
    uint64_t v16 = swift_slowAlloc(12LL, -1LL);
    uint64_t v34 = v9;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v32 = (void ***)swift_slowAlloc(8LL, -1LL);
    uint64_t v36 = v6;
    *(_DWORD *)uint64_t v17 = 138543362;
    double aBlock = v13;
    unint64_t v18 = v13;
    uint64_t v33 = v4;
    uint64_t v19 = v18;
    uint64_t v2 = v35;
    uint64_t v6 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v43, v17 + 4, v17 + 12);
    unint64_t v20 = v32;
    *uint64_t v32 = v13;

    uint64_t v4 = v33;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Remove client,%{public}@", v17, 0xCu);
    uint64_t v21 = sub_100003A0C((uint64_t *)&unk_100367680);
    swift_arrayDestroy(v20, 1LL, v21);
    swift_slowDealloc(v20, -1LL, -1LL);
    uint64_t v22 = v17;
    uint64_t v9 = v34;
    swift_slowDealloc(v22, -1LL, -1LL);
  }

  else
  {

    unint64_t v14 = (os_log_s *)v13;
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v23 = swift_allocObject(&unk_100347060, 32LL, 7LL);
  *(void *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(void *)(v23 + 24) = v13;
  v43[3] = sub_10029F0A0;
  uint64_t v44 = v23;
  double aBlock = _NSConcreteStackBlock;
  v43[0] = 1107296256LL;
  v43[1] = sub_100284B68;
  _OWORD v43[2] = &unk_100347078;
  uint64_t v24 = _Block_copy(&aBlock);
  uint64_t v25 = v13;
  uint64_t v26 = swift_retain(v2);
  uint64_t v27 = v37;
  static DispatchQoS.unspecified.getter(v26);
  uint64_t v41 = &_swiftEmptyArrayStorage;
  unint64_t v28 = sub_1002912B8();
  uint64_t v29 = sub_100003A0C(&qword_100367DB0);
  unint64_t v30 = sub_100291300();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v41, v29, v30, v4, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v27, v6, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  return swift_release(v44);
}

uint64_t sub_10029E704(uint64_t a1, int a2)
{
  LODWORD(v39) = a2;
  uint64_t v4 = type metadata accessor for Logger(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for ClientCallback(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (void **)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v10);
  unint64_t v14 = (void (**)(uint64_t, unint64_t))((char *)v34 - v13);
  unint64_t v15 = v40;
  uint64_t result = ((uint64_t (*)(uint64_t, void))v2[5])(a1, v39);
  if (!v15)
  {
    uint64_t v39 = result;
    unint64_t v40 = v17;
    uint64_t v36 = v5;
    uint64_t v37 = v4;
    uint64_t v18 = (*v2)[18]();
    uint64_t v20 = *(void *)(v18 + 16);
    if (v20)
    {
      v34[0] = v18;
      v34[1] = 0LL;
      uint64_t v21 = v18 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v38 = *(void *)(v9 + 72);
      *(void *)&__int128 v19 = 138543362LL;
      __int128 v35 = v19;
      uint64_t v23 = v36;
      uint64_t v22 = v37;
      do
      {
        sub_10029DE70(v21, (uint64_t)v14);
        corelog.getter((uint64_t)v7);
        uint64_t v24 = sub_10029DE70((uint64_t)v14, (uint64_t)v12);
        uint64_t v25 = (os_log_s *)Logger.logObject.getter(v24);
        os_log_type_t v26 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v25, v26))
        {
          uint64_t v27 = swift_slowAlloc(12LL, -1LL);
          unint64_t v28 = (void *)swift_slowAlloc(8LL, -1LL);
          *(_DWORD *)uint64_t v27 = v35;
          uint64_t v29 = *v12;
          *(void *)(v27 + 4) = *v12;
          void *v28 = v29;
          id v30 = v29;
          sub_100292DE4((uint64_t)v12);
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "leeching to %{public}@", (uint8_t *)v27, 0xCu);
          uint64_t v31 = sub_100003A0C((uint64_t *)&unk_100367680);
          swift_arrayDestroy(v28, 1LL, v31);
          uint64_t v32 = v28;
          uint64_t v23 = v36;
          swift_slowDealloc(v32, -1LL, -1LL);
          uint64_t v33 = v27;
          uint64_t v22 = v37;
          swift_slowDealloc(v33, -1LL, -1LL);
        }

        else
        {
          sub_100292DE4((uint64_t)v12);
        }

        (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v22);
        v14[1](v39, v40);
        sub_100292DE4((uint64_t)v14);
        v21 += v38;
        --v20;
      }

      while (v20);
      swift_bridgeObjectRelease(v34[0]);
      return sub_100017F9C(v39, v40);
    }

    else
    {
      swift_bridgeObjectRelease(v18);
      return sub_100017F9C(v39, v40);
    }
  }

  return result;
}

uint64_t sub_10029E9B0(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  uint64_t v6 = type metadata accessor for Logger(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  corelog.getter((uint64_t)v9);
  uint64_t v10 = swift_retain_n(v1, 2LL);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.info.getter();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc(22LL, -1LL);
    uint64_t v37 = a1;
    uint64_t v15 = v14;
    uint64_t v35 = swift_slowAlloc(32LL, -1LL);
    uint64_t v41 = v35;
    *(_DWORD *)uint64_t v15 = 136446466;
    int v34 = v13;
    uint64_t v36 = v7;
    uint64_t v16 = *(void *)(v5 + 80);
    uint64_t v39 = v16;
    uint64_t MetatypeMetadata = swift_getMetatypeMetadata(v16);
    uint64_t v18 = String.init<A>(describing:)(&v39, MetatypeMetadata);
    uint64_t v38 = v2;
    unint64_t v20 = v19;
    uint64_t v39 = sub_1000181EC(v18, v19, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v15 + 4, v15 + 12);
    uint64_t v21 = swift_bridgeObjectRelease(v20);
    *(_WORD *)(v15 + 12) = 2050;
    uint64_t v22 = (*(uint64_t (**)(uint64_t))(*v3 + 144LL))(v21);
    uint64_t v33 = v6;
    uint64_t v23 = *(void *)(v22 + 16);
    swift_release(v3);
    swift_bridgeObjectRelease(v22);
    uint64_t v39 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v15 + 14, v15 + 22);
    swift_release(v3);
    _os_log_impl( (void *)&_mh_execute_header,  v11,  (os_log_type_t)v34,  "Leeching %{public}s, clients count %{public}ld",  (uint8_t *)v15,  0x16u);
    uint64_t v24 = v35;
    swift_arrayDestroy(v35, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1LL, -1LL);
    uint64_t v25 = v15;
    a1 = v37;
    swift_slowDealloc(v25, -1LL, -1LL);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v33);
  }

  else
  {

    swift_release_n(v3, 2LL);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v16 = *(void *)(v5 + 80);
  }

  uint64_t v26 = sub_10029ECDC(v16, v16);
  uint64_t v27 = *(void *)(v16 - 8);
  uint64_t v28 = swift_allocObject( v26,  ((*(unsigned __int8 *)(v27 + 80) + (unint64_t)*(unsigned int *)(v26 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
        + *(void *)(v27 + 72),
          *(unsigned __int8 *)(v27 + 80) | (unint64_t)*(unsigned __int16 *)(v26 + 52));
  uint64_t v29 = static Array._adoptStorage(_:count:)(v28, 1LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v30, a1, v16);
  type metadata accessor for Array(0LL, v16);
  (*(void (**)(uint64_t, uint64_t))(*v3 + 192LL))(v29, 1LL);
  return swift_bridgeObjectRelease(v29);
}

uint64_t sub_10029EC90()
{
  return v0;
}

uint64_t sub_10029ECBC()
{
  return swift_deallocClassInstance(v0, 64LL, 7LL);
}

uint64_t sub_10029ECDC(uint64_t a1, uint64_t a2)
{
  else {
    uint64_t v3 = 0LL;
  }
  if (v3) {
    return sub_100003A0C((uint64_t *)&unk_100368108);
  }
  else {
    return type metadata accessor for _ContiguousArrayStorage(0LL, a2);
  }
}

uint64_t sub_10029ED28(char a1, int64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_100003A0C(&qword_100368728);
  uint64_t v11 = *(void *)(type metadata accessor for ClientCallback(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12) {
    goto LABEL_29;
  }
  if (v16 - v14 == 0x8000000000000000LL && v12 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  void v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for ClientCallback(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    unint64_t v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(void *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }

    else if (v15 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }

    *(void *)(a4 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_10029FA88(0LL, v8, v21, a4);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

uint64_t sub_10029EF30()
{
  uint64_t v1 = type metadata accessor for ClientCallback(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  swift_release(*(void *)(v0 + 24));

  swift_release(*(void *)(v0 + v4 + 16));
  uint64_t v6 = v0 + v4 + *(int *)(v1 + 24);
  uint64_t v7 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10029EFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCallback(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029F02C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ClientCallback(0LL) - 8) + 80LL);
  return sub_10029E27C(*(void *)(v0 + 24), v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_10029F05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_10029F06C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10029F074()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_10029F0A0()
{
  uint64_t v1 = *(uint64_t (**)(_BYTE *))(**(void **)(v0 + 16) + 160LL);
  id v2 = *(id *)(v0 + 24);
  uint64_t v3 = (void (*)(_BYTE *, void))v1(v8);
  uint64_t v5 = v4;
  uint64_t v6 = sub_10029FBA0(v4, (uint64_t)v2);

  int64_t v7 = *(void *)(*v5 + 16);
  if (v7 < v6)
  {
    __break(1u);
  }

  else
  {
    sub_10029FE30(v6, v7);
    v3(v8, 0LL);
  }

char *sub_10029F130(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80LL);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int64_t v7 = &v4[(v3 + 16LL) & ~(unint64_t)v3];
    swift_retain(v4);
  }

  else
  {
    int64_t v7 = a1;
    uint64_t v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for ALResultOptions(0LL);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v15 = v4;
    swift_retain(v8);
    if (v14(v11, 1LL, v12))
    {
      uint64_t v16 = sub_100003A0C(&qword_100367EF0);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64LL));
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0LL, 1LL, v12);
    }

    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = &v7[v17];
    uint64_t v20 = (uint64_t)a2 + v17;
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = *(_BYTE *)(v20 + 8);
    unint64_t v21 = &v7[v18];
    uint64_t v22 = (uint64_t)a2 + v18;
    *(void *)unint64_t v21 = *(void *)v22;
    v21[8] = *(_BYTE *)(v22 + 8);
  }

  return v7;
}

uint64_t sub_10029F274(uint64_t a1, uint64_t a2)
{
  swift_release(*(void *)(a1 + 16));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return result;
}

uint64_t sub_10029F2F8(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 2);
  __int128 v22 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = (id)v22;
  swift_retain(v6);
  if (v12(v9, 1LL, v10))
  {
    uint64_t v14 = sub_100003A0C(&qword_100367EF0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = (uint64_t)a2 + v15;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  uint64_t v19 = a1 + v16;
  uint64_t v20 = (uint64_t)a2 + v16;
  *(void *)uint64_t v19 = *(void *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  return a1;
}

uint64_t sub_10029F428(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  swift_retain(v9);
  swift_release(v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1LL, v14);
  int v18 = v16(v13, 1LL, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }

    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }

  if (v18)
  {
LABEL_6:
    uint64_t v19 = sub_100003A0C(&qword_100367EF0);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0LL, 1LL, v14);
LABEL_7:
  uint64_t v20 = a3[7];
  uint64_t v21 = a1 + v20;
  __int128 v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  *(_BYTE *)(v21 + 8) = *((_BYTE *)v22 + 8);
  *(void *)uint64_t v21 = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  *(_BYTE *)(v25 + 8) = *((_BYTE *)v26 + 8);
  *(void *)uint64_t v25 = v27;
  return a1;
}

uint64_t sub_10029F59C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  uint64_t v7 = a3[6];
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10))
  {
    uint64_t v12 = sub_100003A0C(&qword_100367EF0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64LL));
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0LL, 1LL, v10);
  }

  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(void *)uint64_t v15 = *(void *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  return a1;
}

uint64_t sub_10029F6A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v7 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v7);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for ALResultOptions(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1LL, v11);
  int v15 = v13(v10, 1LL, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }

    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }

  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100003A0C(&qword_100367EF0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64LL));
    goto LABEL_7;
  }

  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0LL, 1LL, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  uint64_t v21 = a1 + v18;
  uint64_t v22 = a2 + v18;
  *(void *)uint64_t v21 = *(void *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  return a1;
}

uint64_t sub_10029F808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029F814);
}

uint64_t sub_10029F814(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_100003A0C(&qword_100367EF0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( &a1[*(int *)(a3 + 24)],  a2,  v8);
  }

uint64_t sub_10029F894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029F8A0);
}

char *sub_10029F8A0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)uint64_t result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_100003A0C(&qword_100367EF0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( &v5[*(int *)(a4 + 24)],  a2,  a2,  v7);
  }

  return result;
}

void sub_10029F918(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for () + 64;
  sub_10029F9A8(319LL);
  if (v3 <= 0x3F)
  {
    _OWORD v4[2] = *(void *)(v2 - 8) + 64LL;
    v4[3] = "\t";
    void v4[4] = "\t";
    swift_initStructMetadata(a1, 256LL, 5LL, v4, a1 + 16);
  }

void sub_10029F9A8(uint64_t a1)
{
  if (!qword_1003686E8)
  {
    uint64_t v2 = type metadata accessor for ALResultOptions(255LL);
    unint64_t v3 = type metadata accessor for Optional(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1003686E8);
    }
  }

uint64_t sub_10029FA00(uint64_t a1)
{
  v2[0] = "\t";
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for () + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0LL, 4LL, v2, a1 + 88);
}

uint64_t type metadata accessor for DataVendorType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A0058(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataVendorType);
}

uint64_t sub_10029FA74(unint64_t a1)
{
  return sub_10029ED28(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10029FA88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(type metadata accessor for ClientCallback(0LL) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10029FBA0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCallback(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v30 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v31 = (uint64_t)&v27 - v9;
  __chkstk_darwin(v8);
  unint64_t v11 = (uint64_t *)((char *)&v27 - v10);
  uint64_t v28 = a1;
  unint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 16);
  if (!v13) {
    return 0LL;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_10029FFD8();
  uint64_t v15 = *(void *)(v5 + 72);
  swift_bridgeObjectRetain(v12);
  unint64_t v16 = 0LL;
  unint64_t v29 = v14;
  while ((static NSObject.== infix(_:_:)(*(void *)(v12 + v14), a2) & 1) == 0)
  {
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease(v12);
      return *(void *)(v12 + 16);
    }
  }

  uint64_t result = swift_bridgeObjectRelease(v12);
  if (!__OFADD__(v16, 1LL))
  {
    unint64_t v18 = *(void *)(v12 + 16);
    if (v16 + 1 == v18) {
      return v16;
    }
    uint64_t v32 = a2;
    uint64_t v19 = v15 + v14;
    unint64_t v20 = v16 + 1;
    uint64_t v21 = v28;
    while (v20 < v18)
    {
      sub_10029DE70(v12 + v19, (uint64_t)v11);
      char v22 = static NSObject.== infix(_:_:)(*v11, v32);
      uint64_t result = sub_100292DE4((uint64_t)v11);
      if ((v22 & 1) == 0)
      {
        if (v20 != v16)
        {
          if ((v16 & 0x8000000000000000LL) != 0) {
            goto LABEL_29;
          }
          unint64_t v23 = *v21;
          unint64_t v24 = *(void *)(*v21 + 16);
          if (v16 >= v24) {
            goto LABEL_30;
          }
          uint64_t result = sub_10029DE70(v23 + v29 + v16 * v15, v31);
          if (v20 >= v24) {
            goto LABEL_31;
          }
          sub_10029DE70(v23 + v19, v30);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native(v23);
          uint64_t v21 = v28;
          unint64_t *v28 = v23;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_10029FA74(v23);
            unint64_t v23 = result;
            *uint64_t v21 = result;
          }

          if (v16 >= *(void *)(v23 + 16)) {
            goto LABEL_32;
          }
          uint64_t result = sub_1002A0014(v30, v23 + v29 + v16 * v15);
          if (v20 >= *(void *)(*v21 + 16)) {
            goto LABEL_33;
          }
          uint64_t result = sub_1002A0014(v31, *v21 + v19);
        }

        if (__OFADD__(v16++, 1LL)) {
          goto LABEL_28;
        }
      }

      unint64_t v26 = v20 + 1;
      if (__OFADD__(v20, 1LL)) {
        goto LABEL_27;
      }
      unint64_t v12 = *v21;
      unint64_t v18 = *(void *)(*v21 + 16);
      ++v20;
      v19 += v15;
      if (v26 == v18) {
        return v16;
      }
    }

    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_10029FE30(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }

  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }

  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }

  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0LL, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_10029ED28(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }

  uint64_t v12 = type metadata accessor for ClientCallback(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = v4 + ((*(unsigned __int8 *)(v13 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy(v17, v7, v12);
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v4 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_31;
  }
  if ((v20 & 0x8000000000000000LL) == 0)
  {
    unint64_t v21 = v14 + v15 * a2;
    if (v16 < v15 * a2 || v17 >= v21 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack(v17, v21, v20, v12);
    }

    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront(v17);
    }

    uint64_t v23 = *(void *)(v4 + 16);
    BOOL v24 = __OFADD__(v23, v8);
    uint64_t v25 = v23 - v7;
    if (!v24)
    {
      *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v25;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }

    goto LABEL_32;
  }

unint64_t sub_10029FFD8()
{
  unint64_t result = qword_100367D28;
  if (!qword_100367D28)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSObject);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100367D28);
  }

  return result;
}

uint64_t sub_1002A0014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCallback(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A0058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t sub_1002A0090()
{
  uint64_t v0 = sub_100003A0C((uint64_t *)&unk_100368080);
  uint64_t v1 = __chkstk_darwin(v0);
  unint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ALWiFiScanSingleAccessPoint.init()(v1);
  unint64_t v4 = sub_1002A09F4(0xFFFFFFFFFFFFFFFFLL);
  unsigned int v5 = v4;
  ALWiFiScanSingleAccessPoint._mac.setter(v4, 0LL);
  uint64_t v6 = sub_100003A0C(&qword_1003552C8);
  uint64_t v7 = swift_allocObject(v6, 72LL, 7LL);
  *(_OWORD *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1002BAD60;
  *(void *)(v7 + 56) = &type metadata for UInt64;
  *(void *)(v7 + 64) = &protocol witness table for UInt64;
  *(void *)(v7 + 32) = v5;
  v8._countAndFlagsBits = String.init(format:_:)(22565LL, 0xE200000000000000LL, v7);
  object = v8._object;
  v17[0] = 0x2D6D6F646E6172LL;
  v17[1] = 0xE700000000000000LL;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  ALWiFiScanSingleAccessPoint._ssid.setter(v17[0]);
  uint64_t result = sub_1002A0968(61LL);
  if (__OFSUB__(0, result + 20))
  {
    __break(1u);
  }

  else
  {
    LOBYTE(v17[0]) = 0;
    ALWiFiScanSingleAccessPoint._rssidB.setter(-(result + 20));
    int v11 = sub_1002A0968(14LL);
    LOBYTE(v17[0]) = 0;
    ALWiFiScanSingleAccessPoint._channel.setter((v11 + 1));
    BOOL v12 = (double)sub_1002A09F4(0x20000000000001uLL) * 1.11022302e-16 + 0.0 > 0.9;
    ALWiFiScanSingleAccessPoint._isAph.setter(v12);
    BOOL v13 = (double)sub_1002A09F4(0x20000000000001uLL) * 1.11022302e-16 + 0.0 > 0.9;
    ALWiFiScanSingleAccessPoint._isMoving.setter(v13);
    uint64_t v14 = enum case for ALWiFiScanSingleAccessPoint.Band.band2G(_:);
    uint64_t v15 = type metadata accessor for ALWiFiScanSingleAccessPoint.Band(0LL);
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v3, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v3, 0LL, 1LL, v15);
    return ALWiFiScanSingleAccessPoint._band.setter(v3);
  }

  return result;
}

uint64_t sub_1002A02B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v35 - v7;
  uint64_t v9 = type metadata accessor for Logger(0LL);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  int v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ALWiFiScanResult.init()(v17);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v19, v15);
  static ALTimeStamp.now()(v20);
  uint64_t v21 = type metadata accessor for ALTimeStamp(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v14, 0LL, 1LL, v21);
  uint64_t v38 = a1;
  ALWiFiScanResult._scanTimestamp.setter(v14);
  unint64_t v22 = sub_1002A09F4(0x29uLL);
  uint64_t v23 = corelog.getter((uint64_t)v11);
  BOOL v24 = (os_log_s *)Logger.logObject.getter(v23);
  os_log_type_t v25 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v24, v25))
  {
    char v26 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)char v26 = 134217984;
    unint64_t v39 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40, v26 + 4, v26 + 12);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Simulating AP count %ld", v26, 0xCu);
    swift_slowDealloc(v26, -1LL, -1LL);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  if ((v22 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    for (; v22; --v22)
    {
      sub_1002A0090();
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      uint64_t v28 = (void (*)(unint64_t *, void))ALWiFiScanResult._accessPoints.modify(&v39);
      uint64_t v30 = v29;
      unint64_t v31 = *v29;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v29);
      unint64_t *v30 = v31;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v31 = sub_100297A08(0, *(void *)(v31 + 16) + 1LL, 1, v31);
        unint64_t *v30 = v31;
      }

      unint64_t v34 = *(void *)(v31 + 16);
      unint64_t v33 = *(void *)(v31 + 24);
      if (v34 >= v33 >> 1)
      {
        unint64_t v31 = sub_100297A08(v33 > 1, v34 + 1, 1, v31);
        unint64_t *v30 = v31;
      }

      *(void *)(v31 + swift_unknownObjectWeakDestroy(v0 + 16) = v34 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))( v31 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
      + *(void *)(v3 + 72) * v34,
        v6,
        v2);
      v28(&v39, 0LL);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    }
  }

  return result;
}

uint64_t sub_1002A0604()
{
  uint64_t v0 = sub_100003A0C(&qword_100368800);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v3 = sub_100003A0C((uint64_t *)&unk_100368070);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100003A0C(&qword_1003517B8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = ALWiFiNotification.init()(v7);
  static ALTimeStamp.now()(v10);
  uint64_t v11 = type metadata accessor for ALTimeStamp(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v9, 0LL, 1LL, v11);
  ALWiFiNotification._timestamp.setter(v9);
  sub_1002A02B0((uint64_t)v5);
  uint64_t v12 = type metadata accessor for ALWiFiScanResult(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v5, 0LL, 1LL, v12);
  ALWiFiNotification._scanResult.setter(v5);
  ALWiFiNotification._simulated.setter(1LL);
  ALWiFiNotification._available.setter(1LL);
  uint64_t v13 = enum case for ALWiFiNotification.ScanType.normal(_:);
  uint64_t v14 = type metadata accessor for ALWiFiNotification.ScanType(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 104))(v2, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v2, 0LL, 1LL, v14);
  return ALWiFiNotification._scanType.setter(v2);
}

uint64_t sub_1002A07AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1002A0A7C(a1, a2, a3);
  swift_release(a3);
  return v7;
}

uint64_t sub_1002A080C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1002A0A7C(a1, a2, a3);
  swift_release(a3);
  return v4;
}

uint64_t sub_1002A083C()
{
  uint64_t v1 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1002A0604();
  (*(void (**)(char *))(v0 + 24))(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1002A08D4()
{
}

uint64_t sub_1002A0900()
{
  return swift_release(*(void *)(v0 + 32));
}

uint64_t sub_1002A0908()
{
  uint64_t v0 = ALDataGenerationBase.deinit();
  swift_release(*(void *)(v0 + 32));
  return v0;
}

uint64_t sub_1002A0934()
{
  uint64_t v0 = ALDataGenerationBase.deinit();
  swift_release(*(void *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

uint64_t sub_1002A0968(uint64_t result)
{
  if ((_DWORD)result)
  {
    unsigned int v1 = result;
    unsigned int v2 = result;
    uint64_t v6 = 0LL;
    swift_stdlib_random(&v6, 8LL);
    unint64_t v3 = v6 * (unint64_t)v2;
    uint64_t result = HIDWORD(v3);
    if (v3 < v1)
    {
      unsigned int v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          uint64_t v6 = 0LL;
          swift_stdlib_random(&v6, 8LL);
          int64_t v5 = v6 * (unint64_t)v2;
        }

        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

unint64_t sub_1002A09F4(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    unint64_t v3 = 0LL;
    swift_stdlib_random(&v3, 8LL);
    uint64_t result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      unint64_t v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          unint64_t v3 = 0LL;
          swift_stdlib_random(&v3, 8LL);
        }

        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1002A0A7C(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v14)(double *__return_ptr, unint64_t, unint64_t, void *);
  double v15;
  uint64_t v16;
  os_log_s *v17;
  os_log_type_t v18;
  uint8_t *v19;
  double v21;
  _BYTE v22[8];
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_retain(v3);
  uint64_t v12 = sub_1002990B8();
  uint64_t v13 = *v12;
  uint64_t v14 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v12 + 112LL);
  swift_retain(*v12);
  v14(&v21, 0xD000000000000019LL, 0x80000001002F5940LL, &type metadata for Double);
  swift_release(v13);
  if (v22[0]) {
    uint64_t v15 = 6.0;
  }
  else {
    uint64_t v15 = v21;
  }
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  swift_retain(a3);
  swift_release(v4);
  uint64_t v16 = corelog.getter((uint64_t)v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  uint64_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)uint64_t v19 = 134217984;
    uint64_t v21 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v19 + 4, v19 + 12);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "ALWiFiSimulated,interval,%f,sec", v19, 0xCu);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return ALDataGenerationBase.init(queue:interval:)(a1, v15);
}

uint64_t type metadata accessor for ALWiFiSimulated()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon15ALWiFiSimulated);
}

void *sub_1002A0C64(uint64_t a1)
{
  return &j__swift_endAccess;
}

double sub_1002A0CA0()
{
  return *(double *)(v0 + 40);
}

uint64_t sub_1002A0CD0(double a1)
{
  uint64_t result = swift_beginAccess(v1 + 40, v4, 1LL, 0LL);
  *(double *)(v1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = a1;
  return result;
}

uint64_t sub_1002A0D0C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002A0D5C(a1, a2, a3);
}

uint64_t sub_1002A0D5C(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v28)(double *__return_ptr, unint64_t, unint64_t, void *);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(double *__return_ptr, unint64_t, unint64_t, void *);
  double v33;
  uint64_t v34;
  os_log_s *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  uint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  void *v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  void *v101;
  uint64_t v102;
  __int16 v103;
  unsigned __int8 *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  unsigned __int8 *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  void *v124;
  uint64_t v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  void *v131;
  uint64_t v132;
  unsigned int v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  double v139;
  char v140;
  double v141;
  double v142;
  unint64_t v143;
  unint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _OWORD *v155;
  char *v156;
  uint64_t v157;
  void *v158;
  unint64_t v159;
  char v160;
  uint64_t v161;
  double v162;
  uint64_t v163;
  unint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  double v171;
  char v172;
  char v173;
  uint64_t v174;
  os_log_s *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  uint64_t result;
  __int128 v181;
  char *v182;
  __int128 v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(uint64_t, uint64_t);
  uint64_t v202;
  double v203;
  void *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  void *v210;
  char *v211;
  unint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char v216[8];
  uint64_t v217;
  char v218[8];
  double v219;
  unint64_t v220;
  uint64_t v4 = v3;
  uint64_t v8 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v8);
  uint64_t v192 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v187 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  int v185 = (char *)&v181 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v197 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v196 = *(void *)(v197 - 8);
  uint64_t v11 = __chkstk_darwin(v197);
  uint64_t v194 = (char *)&v181 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  uint64_t v208 = (char *)&v181 - v13;
  uint64_t v14 = type metadata accessor for String.Encoding(0LL);
  __chkstk_darwin(v14);
  uint64_t v213 = (char *)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v191 = type metadata accessor for URL(0LL);
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin(v191);
  __int128 v206 = (char *)&v181 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Logger(0LL);
  unsigned int v212 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v211 = (char *)&v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v193 = (uint64_t)&v181 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v195 = (uint64_t)&v181 - v23;
  __chkstk_darwin(v22);
  os_log_type_t v25 = (char *)&v181 - v24;
  v4[3] = &_swiftEmptyArrayStorage;
  void v4[4] = 0LL;
  void v4[5] = 0LL;
  void v4[6] = a2;
  void v4[7] = a3;
  uint64_t v189 = a3;
  swift_retain(a3);
  char v26 = sub_1002990B8();
  uint64_t v27 = *v26;
  uint64_t v28 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v26 + 112LL);
  swift_retain(*v26);
  v28(&v219, 0xD000000000000013LL, 0x80000001002F5960LL, &type metadata for String);
  swift_release(v27);
  if (v220) {
    unint64_t v29 = *(void *)&v219;
  }
  else {
    unint64_t v29 = 0xD000000000000018LL;
  }
  if (v220) {
    uint64_t v30 = v220;
  }
  else {
    uint64_t v30 = 0x80000001002F5980LL;
  }
  unint64_t v31 = *v26;
  uint64_t v32 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v26 + 112LL);
  swift_retain(v31);
  v32(&v219, 0xD00000000000001ALL, 0x80000001002F59A0LL, &type metadata for Double);
  swift_release(v31);
  if ((_BYTE)v220) {
    unint64_t v33 = 1.0;
  }
  else {
    unint64_t v33 = v219;
  }
  corelog.getter((uint64_t)v25);
  unint64_t v34 = swift_bridgeObjectRetain_n(v30, 2LL);
  uint64_t v35 = (os_log_s *)Logger.logObject.getter(v34);
  uint64_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc(22LL, -1LL);
    double v210 = a1;
    uint64_t v38 = v37;
    *(double *)&unint64_t v39 = COERCE_DOUBLE(swift_slowAlloc(32LL, -1LL));
    int v219 = *(double *)&v39;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v205 = v17;
    swift_bridgeObjectRetain(v30);
    uint64_t v217 = sub_1000181EC(v29, v30, (uint64_t *)&v219);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v217, v218, v38 + 4, v38 + 12);
    swift_bridgeObjectRelease_n(v30, 3LL);
    *(_WORD *)(v38 + 12) = 2048;
    uint64_t v217 = *(void *)&v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v217, v218, v38 + 14, v38 + 22);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "ALWiFiReplayerCSV,path,%s,interval,%f", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy(v39, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1LL, -1LL);
    uint64_t v40 = v38;
    a1 = v210;
    swift_slowDealloc(v40, -1LL, -1LL);

    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v212 + 8);
    uint64_t v42 = v25;
    uint64_t v17 = v205;
  }

  else
  {

    swift_bridgeObjectRelease_n(v30, 2LL);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v212 + 8);
    uint64_t v42 = v25;
  }

  unsigned int v201 = v41;
  v41((uint64_t)v42, v17);
  uint64_t v188 = a1;
  uint64_t v43 = ALDataGenerationBase.init(queue:interval:)(v188, v33);
  swift_retain(v43);
  uint64_t v44 = v206;
  uint64_t v45 = URL.init(fileURLWithPath:)(v29, v30);
  uint64_t v46 = v213;
  static String.Encoding.utf8.getter(v45);
  uint64_t v47 = String.init(contentsOf:encoding:)(v44, v46);
  uint64_t v49 = v48;
  swift_bridgeObjectRelease(v30);
  uint64_t v50 = sub_1002A20B4(0x7FFFFFFFFFFFFFFFLL, 1, v47, v49);
  uint64_t v207 = *(void *)(v50 + 16);
  if (v207)
  {
    double v210 = 0LL;
    uint64_t v203 = 0.0;
    uint64_t v51 = 0LL;
    uint64_t v199 = v50 + 32;
    uint64_t v184 = v218;
    uint64_t v202 = 1LL;
    *((void *)&v52 + 1) = 2LL;
    uint64_t v181 = xmmword_1002BAD60;
    *(void *)&uint64_t v52 = 134218242LL;
    double v183 = v52;
    uint64_t v182 = (char *)&type metadata for Any + 8;
    int v204 = &_swiftEmptyArrayStorage;
    uint64_t v205 = v17;
    uint64_t v200 = v43;
    uint64_t v198 = v50;
    while (1)
    {
      if (v51 >= *(void *)(v50 + 16))
      {
        __break(1u);
        goto LABEL_101;
      }

      if (!v51) {
        goto LABEL_17;
      }
      unsigned int v209 = v51;
      uint64_t v54 = (unint64_t *)(v199 + 32 * v51);
      uint64_t v56 = *v54;
      uint64_t v55 = v54[1];
      uint64_t v57 = v54[2];
      uint64_t v58 = (char *)v54[3];
      swift_bridgeObjectRetain_n(v58, 2LL);
      unsigned int v212 = v57;
      uint64_t v213 = (char *)(v55 >> 14);
      if (v55 >> 14 == v56 >> 14)
      {
        Swift::Int v59 = Substring.subscript.getter(v56, v55, v56, v55, v57, v58);
        uint64_t v61 = v60;
        char v63 = v62;
        uint64_t v65 = v64;
        uint64_t v66 = sub_10028BFF0(0LL, 1LL, 1, (char *)&_swiftEmptyArrayStorage);
        uint64_t v68 = *((void *)v66 + 2);
        uint64_t v67 = *((void *)v66 + 3);
        if (v68 >= v67 >> 1) {
          uint64_t v66 = sub_10028BFF0((char *)(v67 > 1), v68 + 1, 1, v66);
        }
        *((void *)v66 + 2) = v68 + 1;
        uint64_t v69 = &v66[32 * v68];
        *((void *)v69 + 4) = v59;
        uint64_t v70 = v69 + 32;
        goto LABEL_43;
      }

      swift_bridgeObjectRetain(v58);
      uint64_t v71 = v56;
      uint64_t v72 = v56;
      uint64_t v73 = v56;
      uint64_t v66 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v211 = v58;
      do
      {
        uint64_t v74 = Substring.subscript.getter(v71, v56, v55, v57, v58);
        uint64_t v76 = v75;
        if (v74 == 44 && v75 == 0xE100000000000000LL)
        {
          swift_bridgeObjectRelease(0xE100000000000000LL);
        }

        else
        {
          Swift::Int v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease(v76);
          if ((v77 & 1) == 0)
          {
            uint64_t v71 = Substring.index(after:)(v71, v56, v55, v57, v58);
            continue;
          }
        }

        if (v71 >> 14 < v72 >> 14) {
          goto LABEL_109;
        }
        uint64_t v78 = Substring.subscript.getter(v72, v71, v56, v55, v57, v58);
        unint64_t v80 = v79;
        uint64_t v82 = v81;
        uint64_t v84 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0) {
          uint64_t v66 = sub_10028BFF0(0LL, *((void *)v66 + 2) + 1LL, 1, v66);
        }
        uint64_t v86 = *((void *)v66 + 2);
        __int128 v85 = *((void *)v66 + 3);
        if (v86 >= v85 >> 1) {
          uint64_t v66 = sub_10028BFF0((char *)(v85 > 1), v86 + 1, 1, v66);
        }
        *((void *)v66 + 2) = v86 + 1;
        uint64_t v87 = &v66[32 * v86];
        *((void *)v87 + 4) = v78;
        *((void *)v87 + 5) = v80;
        *((void *)v87 + 6) = v82;
        *((void *)v87 + 7) = v84;
        uint64_t v58 = v211;
        uint64_t v57 = v212;
        uint64_t v71 = Substring.index(after:)(v71, v56, v55, v212, v211);
        uint64_t v72 = v71;
        uint64_t v73 = v71;
      }

      while (v213 != (char *)(v71 >> 14));
      uint64_t v88 = Substring.subscript.getter(v73, v55, v56, v55, v57, v58);
      uint64_t v61 = v89;
      char v63 = v90;
      uint64_t v65 = v91;
      swift_bridgeObjectRelease(v58);
      if ((swift_isUniquelyReferenced_nonNull_native(v66) & 1) == 0) {
        uint64_t v66 = sub_10028BFF0(0LL, *((void *)v66 + 2) + 1LL, 1, v66);
      }
      uint64_t v93 = *((void *)v66 + 2);
      uint64_t v92 = *((void *)v66 + 3);
      if (v93 >= v92 >> 1) {
        uint64_t v66 = sub_10028BFF0((char *)(v92 > 1), v93 + 1, 1, v66);
      }
      *((void *)v66 + 2) = v93 + 1;
      uint64_t v94 = &v66[32 * v93];
      *((void *)v94 + 4) = v88;
      uint64_t v70 = v94 + 32;
LABEL_43:
      v70[1] = v61;
      v70[2] = v63;
      v70[3] = v65;
      swift_bridgeObjectRelease(v58);
      if (*((void *)v66 + 2) == 5LL)
      {
        uint64_t v95 = swift_bridgeObjectRelease(v58);
        uint64_t v96 = v208;
        ALWiFiScanSingleAccessPoint.init()(v95);
        uint64_t v17 = v205;
        uint64_t v43 = v200;
        if (*((void *)v66 + 2))
        {
          uint64_t v97 = *((void *)v66 + 4);
          unint64_t v98 = *((void *)v66 + 5);
          if ((v98 ^ (unint64_t)v97) < 0x4000)
          {
            double v119 = 0LL;
          }

          else
          {
            uint64_t v100 = *((void *)v66 + 6);
            uint64_t v99 = *((void *)v66 + 7);
            uint64_t v101 = v210;
            uint64_t v102 = sub_10028D144(*((void *)v66 + 4), *((void *)v66 + 5), v100, v99, 16LL);
            double v210 = v101;
            if ((v103 & 0x100) != 0)
            {
              swift_bridgeObjectRetain(v99);
              id v104 = sub_10028C340(v97, v98, v100, v99, 16LL);
              id v118 = v117;
              swift_bridgeObjectRelease(v99);
              id v105 = v118 & 1;
            }

            else
            {
              id v104 = (unsigned __int8 *)v102;
              id v105 = v103 & 1;
            }

            if (v105) {
              double v119 = 0LL;
            }
            else {
              double v119 = v104;
            }
            uint64_t v96 = v208;
          }

          ALWiFiScanSingleAccessPoint._mac.setter(v119, 0LL);
          if (*((void *)v66 + 2) >= 3uLL)
          {
            uint64_t v120 = *((void *)v66 + 12);
            uint64_t v121 = *((void *)v66 + 13);
            if ((v121 ^ (unint64_t)v120) < 0x4000)
            {
              unint64_t v126 = 0;
            }

            else
            {
              unint64_t v123 = *((void *)v66 + 14);
              uint64_t v122 = *((void *)v66 + 15);
              uint64_t v124 = v210;
              unint64_t v125 = sub_1002A33CC(*((void *)v66 + 12), *((void *)v66 + 13), v123, v122, 10LL);
              double v210 = v124;
              if ((v125 & 0x10000000000LL) != 0)
              {
                swift_bridgeObjectRetain(v122);
                unint64_t v125 = sub_1002A32DC(v120, v121, v123, v122, 10LL);
                swift_bridgeObjectRelease(v122);
              }

              else {
                unint64_t v126 = v125;
              }
              uint64_t v96 = v208;
            }

            LOBYTE(v219) = 0;
            ALWiFiScanSingleAccessPoint._channel.setter(v126);
            if (*((void *)v66 + 2) >= 4uLL)
            {
              uint64_t v127 = *((void *)v66 + 16);
              unint64_t v128 = *((void *)v66 + 17);
              if ((v128 ^ (unint64_t)v127) < 0x4000)
              {
                uint64_t v133 = 0;
              }

              else
              {
                uint64_t v130 = *((void *)v66 + 18);
                uint64_t v129 = *((void *)v66 + 19);
                uint64_t v131 = v210;
                uint64_t v132 = sub_1002A33CC(*((void *)v66 + 16), *((void *)v66 + 17), v130, v129, 10LL);
                double v210 = v131;
                if ((v132 & 0x10000000000LL) != 0)
                {
                  swift_bridgeObjectRetain(v129);
                  uint64_t v132 = sub_1002A32DC(v127, v128, v130, v129, 10LL);
                  swift_bridgeObjectRelease(v129);
                }

                else {
                  uint64_t v133 = v132;
                }
                uint64_t v96 = v208;
              }

              LOBYTE(v219) = 0;
              ALWiFiScanSingleAccessPoint._rssidB.setter(v133);
              if (*((void *)v66 + 2) >= 5uLL)
              {
                uint64_t v134 = sub_1002A349C( *((void *)v66 + 20),  *((void *)v66 + 21),  *((void *)v66 + 22),  *((void *)v66 + 23),  1702195828LL,  0xE400000000000000LL);
                ALWiFiScanSingleAccessPoint._isMoving.setter(v134 & 1);
                if (*((void *)v66 + 2) >= 2uLL)
                {
                  uint64_t v135 = *((void *)v66 + 8);
                  uint64_t v136 = *((void *)v66 + 9);
                  uint64_t v137 = *((void *)v66 + 10);
                  uint64_t v138 = *((void *)v66 + 11);
                  swift_bridgeObjectRetain(v138);
                  swift_bridgeObjectRelease(v66);
                  uint64_t v139 = COERCE_DOUBLE(Double.init(_:)(v135, v136, v137, v138));
                  if ((v140 & 1) != 0) {
                    uint64_t v139 = 0.0;
                  }
                  uint64_t v141 = v139;
                  if ((v202 & 1) != 0) {
                    id v142 = v139;
                  }
                  else {
                    id v142 = v203;
                  }
                  if (vabdd_f64(v142, v139) >= 2.22044605e-16)
                  {
                    uint64_t v150 = v204;
                    sub_1002A2584(*(unint64_t *)&v142, 0, (uint64_t)v204);
                    swift_bridgeObjectRelease(v150);
                    uint64_t v151 = sub_100003A0C(&qword_1003682F0);
                    uint64_t v152 = v196;
                    uint64_t v153 = *(unsigned __int8 *)(v196 + 80);
                    uint64_t v154 = (v153 + 32) & ~v153;
                    uint64_t v155 = (_OWORD *)swift_allocObject(v151, v154 + *(void *)(v196 + 72), v153 | 7);
                    v155[1] = v181;
                    int v204 = v155;
                    uint64_t v156 = (char *)v155 + v154;
                    uint64_t v157 = v197;
                    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v156, v96, v197);
                    (*(void (**)(char *, uint64_t))(v152 + 8))(v96, v157);
                  }

                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v194, v96, v197);
                    id v143 = (unint64_t)v204;
                    if ((swift_isUniquelyReferenced_nonNull_native(v204) & 1) == 0) {
                      id v143 = sub_100017FE0( 0,  *(void *)(v143 + 16) + 1LL,  1,  v143,  &qword_1003682F0,  (uint64_t (*)(void))&type metadata accessor for ALWiFiScanSingleAccessPoint);
                    }
                    unint64_t v145 = *(void *)(v143 + 16);
                    uint64_t v144 = *(void *)(v143 + 24);
                    if (v145 >= v144 >> 1) {
                      id v143 = sub_100017FE0( v144 > 1,  v145 + 1,  1,  v143,  &qword_1003682F0,  (uint64_t (*)(void))&type metadata accessor for ALWiFiScanSingleAccessPoint);
                    }
                    *(void *)(v143 + swift_unknownObjectWeakDestroy(v0 + 16) = v145 + 1;
                    unint64_t v146 = (char *)v143;
                    uint64_t v147 = v196;
                    Swift::String v148 = (*(unsigned __int8 *)(v147 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
                    int v204 = v146;
                    uint64_t v149 = v197;
                    (*(void (**)(char *, char *, uint64_t))(v196 + 32))( &v146[v148 + *(void *)(v196 + 72) * v145],  v194,  v197);
                    (*(void (**)(char *, uint64_t))(v147 + 8))(v96, v149);
                  }

                  uint64_t v202 = 0LL;
                  uint64_t v203 = v141;
LABEL_16:
                  uint64_t v44 = v206;
                  uint64_t v50 = v198;
                  uint64_t v51 = v209;
                  goto LABEL_17;
                }

LABEL_104:
              __break(1u);
              goto LABEL_105;
            }

LABEL_103:
            __break(1u);
            goto LABEL_104;
          }

uint64_t sub_1002A20B4(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
LABEL_54:
    LOBYTE(v47) = 2;
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Must take zero or more splits",  29LL,  2LL,  "Swift/Collection.swift",  22LL,  v47,  1552LL,  0);
    __break(1u);
  }

  else
  {
    uint64_t v8 = swift_allocObject(&unk_100347180, 24LL, 7LL);
    *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = &_swiftEmptyArrayStorage;
    uint64_t v9 = swift_allocObject(&unk_1003471A8, 24LL, 7LL);
    uint64_t v10 = v9;
    *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = 15LL;
    unint64_t v11 = a4 >> 60;
    uint64_t v12 = HIBYTE(a4) & 0xF;
    if (a1)
    {
      uint64_t v13 = (a4 & 0x2000000000000000LL) != 0 ? HIBYTE(a4) & 0xF : a3 & 0xFFFFFFFFFFFFLL;
      if (v13)
      {
        uint64_t v49 = a1;
        BOOL v14 = (v11 & ((a3 & 0x800000000000000LL) == 0)) == 0;
        uint64_t v15 = 7LL;
        if (!v14) {
          uint64_t v15 = 11LL;
        }
        uint64_t v48 = v15 | (v13 << 16);
        unint64_t v54 = 4 * v13;
        uint64_t v16 = (char *)&_swiftEmptyArrayStorage;
        unint64_t v17 = 15LL;
        unint64_t v18 = 15LL;
        uint64_t v50 = a3;
        uint64_t v51 = v9;
        while (1)
        {
          uint64_t v19 = String.subscript.getter(v17, a3, a4);
          unint64_t v21 = v20;
          if (!((v20 & 0x2000000000000000LL) != 0 ? HIBYTE(v20) & 0xF : v19 & 0xFFFFFFFFFFFFLL)) {
            break;
          }
          if ((v20 & 0x1000000000000000LL) != 0)
          {
            uint64_t v24 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(0LL, v19, v20);
          }

          else
          {
            if ((v20 & 0x2000000000000000LL) != 0)
            {
              v53[0] = v19;
              v53[1] = v20 & 0xFFFFFFFFFFFFFFLL;
              uint64_t v23 = v53;
            }

            else if ((v19 & 0x1000000000000000LL) != 0)
            {
              uint64_t v23 = (void *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
            }

            else
            {
              uint64_t v23 = (void *)_StringObject.sharedUTF8.getter(v19, v20);
            }

            uint64_t v24 = _decodeScalar(_:startingAt:)(v23);
          }

          uint64_t v4 = v24;
          swift_bridgeObjectRelease(v21);
          if ((v4 - 14) > 0xFFFFFFFB || (v4 - 8232) < 2 || (_DWORD)v4 == 133)
          {
            if (v18 >> 14 == v17 >> 14 && (a2 & 1) != 0)
            {
              unint64_t v17 = String.index(after:)(v17, a3, a4);
              *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
              unint64_t v18 = v17;
            }

            else
            {
              if (v17 >> 14 < v18 >> 14) {
                goto LABEL_53;
              }
              uint64_t v25 = a3;
              unint64_t v26 = a4;
              uint64_t v27 = String.subscript.getter(v18, v17, v25, a4);
              uint64_t v29 = v28;
              uint64_t v31 = v30;
              uint64_t v4 = v32;
              if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0) {
                uint64_t v16 = sub_10028BFF0(0LL, *((void *)v16 + 2) + 1LL, 1, v16);
              }
              unint64_t v33 = v16;
              unint64_t v34 = *((void *)v16 + 2);
              uint64_t v35 = v33;
              unint64_t v36 = *((void *)v33 + 3);
              if (v34 >= v36 >> 1) {
                uint64_t v35 = sub_10028BFF0((char *)(v36 > 1), v34 + 1, 1, v35);
              }
              *((void *)v35 + 2) = v34 + 1;
              uint64_t v37 = &v35[32 * v34];
              uint64_t v16 = v35;
              *((void *)v37 + 4) = v27;
              *((void *)v37 + 5) = v29;
              *((void *)v37 + 6) = v31;
              *((void *)v37 + 7) = v4;
              *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v35;
              a4 = v26;
              a3 = v50;
              unint64_t v18 = String.index(after:)(v17, v50, a4);
              uint64_t v10 = v51;
              *(void *)(v51 + swift_unknownObjectWeakDestroy(v0 + 16) = v18;
              unint64_t v17 = v18;
              if (*((void *)v16 + 2) == v49)
              {
LABEL_42:
                if (v54 == v18 >> 14 && (a2 & 1) != 0)
                {
                  swift_bridgeObjectRelease(a4);
                  goto LABEL_50;
                }

                if (v54 < v18 >> 14)
                {
LABEL_53:
                  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Range requires lowerBound <= upperBound",  39LL,  2LL,  "Swift/Range.swift",  17LL,  2,  754LL,  0);
                  __break(1u);
                  goto LABEL_54;
                }

                uint64_t v39 = a3;
                a3 = (uint64_t)v16;
                unint64_t v18 = String.subscript.getter(v18, v48, v39, a4);
                unint64_t v21 = v40;
                uint64_t v16 = v41;
                uint64_t v4 = v42;
                swift_bridgeObjectRelease(a4);
                if ((swift_isUniquelyReferenced_nonNull_native(a3) & 1) != 0)
                {
LABEL_47:
                  unint64_t v44 = *(void *)(a3 + 16);
                  unint64_t v43 = *(void *)(a3 + 24);
                  if (v44 >= v43 >> 1) {
                    a3 = (uint64_t)sub_10028BFF0((char *)(v43 > 1), v44 + 1, 1, (char *)a3);
                  }
                  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v44 + 1;
                  uint64_t v45 = (void *)(a3 + 32 * v44);
                  v45[4] = v18;
                  v45[5] = v21;
                  v45[6] = v16;
                  v45[7] = v4;
                  uint64_t v16 = (char *)a3;
                  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = a3;
                  uint64_t v10 = v51;
                  goto LABEL_50;
                }

uint64_t sub_1002A2584(unint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v8);
  uint64_t v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v11 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = &v30[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t result = __chkstk_darwin(v13);
  unint64_t v18 = &v30[-v17];
  if (*(void *)(a3 + 16))
  {
    uint64_t v19 = ALWiFiScanResult.init()(result);
    v20.n128_u64[0] = a1;
    if ((a2 & 1) != 0) {
      v20.n128_f64[0] = 0.0;
    }
    ALTimeStamp.init(machContinuousTimeSec:)(v19, v20);
    uint64_t v21 = type metadata accessor for ALTimeStamp(0LL);
    (*(void (**)(_BYTE *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v10, 0LL, 1LL, v21);
    ALWiFiScanResult._scanTimestamp.setter(v10);
    uint64_t v22 = swift_bridgeObjectRetain(a3);
    ALWiFiScanResult._accessPoints.setter(v22);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16))(v15, v18, v11);
    uint64_t v23 = (void (*)(_BYTE *, void))(*(uint64_t (**)(_BYTE *))(*(void *)v4 + 176LL))(v30);
    uint64_t v25 = v24;
    unint64_t v26 = *v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v24);
    unint64_t *v25 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v26 = sub_100017FE0( 0,  *(void *)(v26 + 16) + 1LL,  1,  v26,  (uint64_t *)&unk_100368940,  (uint64_t (*)(void))&type metadata accessor for ALWiFiScanResult);
      unint64_t *v25 = v26;
    }

    unint64_t v29 = *(void *)(v26 + 16);
    unint64_t v28 = *(void *)(v26 + 24);
    if (v29 >= v28 >> 1)
    {
      unint64_t v26 = sub_100017FE0( v28 > 1,  v29 + 1,  1,  v26,  (uint64_t *)&unk_100368940,  (uint64_t (*)(void))&type metadata accessor for ALWiFiScanResult);
      unint64_t *v25 = v26;
    }

    *(void *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = v29 + 1;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v12 + 32))( v26 + ((*(unsigned __int8 *)(v12 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
    + *(void *)(v12 + 72) * v29,
      v15,
      v11);
    v23(v30, 0LL);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v18, v11);
  }

  return result;
}

void sub_1002A27C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100003A0C(&qword_100368800);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v146 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_100003A0C((uint64_t *)&unk_100368070);
  __chkstk_darwin(v5);
  uint64_t v150 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Logger(0LL);
  uint64_t v158 = *(void *)(v11 - 8);
  uint64_t v159 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12);
  uint64_t v164 = (uint64_t)&v146 - v15;
  uint64_t v16 = sub_100003A0C(&qword_1003517B8);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v151 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v153 = (char *)&v146 - v20;
  __chkstk_darwin(v19);
  uint64_t v161 = (char *)&v146 - v21;
  uint64_t v167 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v162 = *(void *)(v167 - 8);
  uint64_t v22 = __chkstk_darwin(v167);
  uint64_t v152 = (char *)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v156 = (char *)&v146 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v160 = (char *)&v146 - v27;
  unint64_t v28 = *(uint64_t (**)(void))(*(void *)v0 + 160LL);
  int v168 = *(uint64_t (**)(void))(*(void *)v0 + 184LL);
  uint64_t v29 = ((uint64_t (*)(uint64_t))v168)(v26);
  uint64_t v30 = v29 + 1;
  if (__OFADD__(v29, 1LL))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }

  Swift::String v148 = v4;
  uint64_t v149 = v10;
  uint64_t v146 = v8;
  uint64_t v147 = v7;
  uint64_t v31 = v28();
  uint64_t v32 = *(void *)(v31 + 16);
  uint64_t v33 = swift_bridgeObjectRelease(v31);
  uint64_t v165 = v14;
  uint64_t v166 = v28;
  if (v30 < v32)
  {
    *(void *)&__int128 v34 = 136315138LL;
    __int128 v155 = v34;
    uint64_t v154 = (char *)&type metadata for Any + 8;
    while (1)
    {
      uint64_t v35 = ((uint64_t (*)(uint64_t))v168)(v33);
      unint64_t v36 = v35 + 1;
      if (__OFADD__(v35, 1LL)) {
        break;
      }
      uint64_t v37 = v28();
      if ((v36 & 0x8000000000000000LL) != 0) {
        goto LABEL_35;
      }
      uint64_t v38 = v37;
      if (v36 >= *(void *)(v37 + 16)) {
        goto LABEL_36;
      }
      uint64_t v39 = v1;
      uint64_t v40 = v162;
      unint64_t v41 = (*(unsigned __int8 *)(v162 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v162 + 80);
      uint64_t v42 = *(void *)(v162 + 72);
      unint64_t v43 = v37 + v41 + v42 * v36;
      unint64_t v44 = v160;
      uint64_t v45 = v167;
      uint64_t v163 = *(void (**)(char *, unint64_t, uint64_t))(v162 + 16);
      v163(v160, v43, v167);
      uint64_t v46 = swift_bridgeObjectRelease(v38);
      int v47 = v161;
      ALWiFiScanResult._scanTimestamp.getter(v46);
      uint64_t v48 = v47;
      uint64_t v49 = *(void (**)(char *, uint64_t))(v40 + 8);
      v49(v44, v45);
      uint64_t v50 = type metadata accessor for ALTimeStamp(0LL);
      uint64_t v51 = *(void *)(v50 - 8);
      uint64_t v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48))(v48, 1LL, v50);
      if ((_DWORD)v52 == 1) {
        goto LABEL_49;
      }
      double v53 = COERCE_DOUBLE(ALTimeStamp.machContinuousTimeSec.getter(v52));
      char v55 = v54;
      uint64_t v56 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v48, v50);
      if ((v55 & 1) != 0) {
        goto LABEL_50;
      }
      uint64_t v1 = v39;
      Swift::Double v57 = (*(double (**)(uint64_t))(*(void *)v39 + 208LL))(v56) + v53;
      Swift::Double v58 = machContTimeSec()();
      uint64_t v14 = v165;
      unint64_t v28 = v166;
      if (v57 >= v58) {
        goto LABEL_18;
      }
      uint64_t v59 = v164;
      corelog.getter(v164);
      uint64_t v60 = swift_retain_n(v39, 2LL);
      uint64_t v61 = (os_log_s *)Logger.logObject.getter(v60);
      int v62 = static os_log_type_t.error.getter(v61);
      if (os_log_type_enabled(v61, (os_log_type_t)v62))
      {
        LODWORD(v157) = v62;
        uint64_t v63 = v1;
        uint64_t v64 = swift_slowAlloc(12LL, -1LL);
        uint64_t v65 = swift_slowAlloc(32LL, -1LL);
        v170[0] = v65;
        *(_DWORD *)uint64_t v64 = v155;
        unint64_t v66 = v168();
        uint64_t v67 = v28;
        uint64_t v68 = v63;
        uint64_t v69 = v67();
        if ((v66 & 0x8000000000000000LL) != 0) {
          goto LABEL_39;
        }
        uint64_t v70 = v69;
        if (v66 >= *(void *)(v69 + 16)) {
          goto LABEL_40;
        }
        unint64_t v71 = v69 + v41 + v66 * v42;
        uint64_t v72 = v156;
        uint64_t v73 = v167;
        v163(v156, v71, v167);
        uint64_t v74 = swift_bridgeObjectRelease(v70);
        uint64_t v75 = ALWiFiScanResult.description.getter(v74);
        unint64_t v77 = v76;
        v49(v72, v73);
        *(void *)(v64 + 4) = sub_1000181EC(v75, v77, v170);
        swift_release_n(v68, 2LL);
        swift_bridgeObjectRelease(v77);
        _os_log_impl( (void *)&_mh_execute_header,  v61,  (os_log_type_t)v157,  "One Wifi scan from file was discarded: %s. Please decrease TickIntervalSec",  (uint8_t *)v64,  0xCu);
        swift_arrayDestroy(v65, 1LL, v154);
        swift_slowDealloc(v65, -1LL, -1LL);
        uint64_t v78 = v64;
        uint64_t v1 = v68;
        swift_slowDealloc(v78, -1LL, -1LL);

        (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v164, v159);
        uint64_t v14 = v165;
        unint64_t v28 = v166;
      }

      else
      {

        swift_release_n(v1, 2LL);
        (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v59, v159);
      }

      uint64_t v79 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))(*(void *)v1 + 200LL))(v170);
      uint64_t v81 = v168;
      if (__OFADD__(*v80, 1LL)) {
        goto LABEL_37;
      }
      ++*v80;
      uint64_t v82 = v79(v170, 0LL);
      uint64_t v83 = ((uint64_t (*)(uint64_t))v81)(v82);
      uint64_t v84 = v83 + 1;
      if (__OFADD__(v83, 1LL)) {
        goto LABEL_38;
      }
      uint64_t v85 = v28();
      uint64_t v86 = *(void *)(v85 + 16);
      uint64_t v33 = swift_bridgeObjectRelease(v85);
      if (v84 >= v86) {
        goto LABEL_18;
      }
    }

    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }

void sub_1002A32B0()
{
}

uint64_t sub_1002A32DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  unint64_t v7 = sub_10028E0A0();
  swift_bridgeObjectRetain(a4);
  uint64_t v8 = String.init<A>(_:)(&v18, &type metadata for Substring, &protocol witness table for Substring, v7);
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  if ((v9 & 0x1000000000000000LL) == 0)
  {
    if ((v9 & 0x2000000000000000LL) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v13 = HIBYTE(v11) & 0xF;
    uint64_t v18 = v10;
    uint64_t v19 = v11 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v12 = (unsigned __int8 *)&v18;
    goto LABEL_7;
  }

  uint64_t v10 = sub_10028CBAC(v8, v9);
  unint64_t v15 = v14;
  swift_bridgeObjectRelease(v11);
  unint64_t v11 = v15;
  if ((v15 & 0x2000000000000000LL) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v10 & 0x1000000000000000LL) != 0)
  {
    uint64_t v12 = (unsigned __int8 *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }

  else
  {
    uint64_t v12 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v10, v11);
  }

uint64_t sub_1002A33CC( unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000LL) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }

  if ((a4 & 0x2000000000000000LL) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v11 = v13;
  }

  else if ((a3 & 0x1000000000000000LL) != 0)
  {
    unint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }

  else
  {
    unint64_t v11 = (void *)_StringObject.sharedUTF8.getter(a3, a4);
  }

  uint64_t result = sub_10028D740((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }

  return result;
}

uint64_t sub_1002A349C( unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v7 = a1 >> 16;
  unint64_t v8 = a2 >> 16;
  if (a3 == a5 && a4 == a6 && !v7 && v8 == v6) {
    return 1LL;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)(a3, a4, v7, v8) & 1;
  }
}

uint64_t type metadata accessor for ALWiFiReplayerCSV()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon17ALWiFiReplayerCSV);
}

uint64_t sub_1002A3530()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002A3554()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002A3564()
{
  return swift_unknownObjectRetain(*(void *)(v0 + 16));
}

uint64_t sub_1002A3598(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  return swift_unknownObjectRelease(v3);
}

uint64_t ALDataGenerationBase.__allocating_init(queue:interval:)(void *a1, double a2)
{
  uint64_t v5 = swift_allocObject(v2, 24LL, 7LL);
  ALDataGenerationBase.init(queue:interval:)(a1, a2);
  return v5;
}

uint64_t ALDataGenerationBase.init(queue:interval:)(void *a1, double a2)
{
  Swift::Double v57 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval(0LL);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v54 = type metadata accessor for DispatchTime(0LL);
  uint64_t v52 = *(void *)(v54 - 8);
  uint64_t v10 = __chkstk_darwin(v54);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10);
  double v53 = (char *)&v45 - v13;
  uint64_t v14 = type metadata accessor for OS_dispatch_source.TimerFlags(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  uint64_t v18 = (uint64_t *)(v2 + 16);
  sub_1002A3A90();
  aBlock[0] = &_swiftEmptyArrayStorage;
  uint64_t v19 = sub_10000FD98( &qword_100368958,  (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags,  (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
  uint64_t v20 = sub_100003A0C(&qword_100368960);
  uint64_t v21 = sub_100292F50(&qword_100368968, &qword_100368960);
  uint64_t v22 = v19;
  uint64_t v23 = v57;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v14, v22);
  uint64_t v24 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v17, v23);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  swift_beginAccess(v18, v61, 1LL, 0LL);
  uint64_t v25 = *v18;
  uint64_t *v18 = v24;
  swift_unknownObjectRelease(v25);
  uint64_t v26 = *v18;
  if (*v18)
  {
    uint64_t ObjectType = swift_getObjectType(*v18);
    uint64_t v28 = swift_unknownObjectRetain(v26);
    static DispatchTime.now()(v28);
    uint64_t v29 = v53;
    + infix(_:_:)(v12, a2);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v52 + 8);
    uint64_t v31 = v54;
    v30(v12, v54);
    *unint64_t v9 = 0LL;
    uint64_t v33 = v55;
    uint64_t v32 = v56;
    (*(void (**)(void *, void, uint64_t))(v55 + 104))( v9,  enum case for DispatchTimeInterval.nanoseconds(_:),  v56);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v29, v9, ObjectType, a2);
    swift_unknownObjectRelease(v26);
    (*(void (**)(void *, uint64_t))(v33 + 8))(v9, v32);
    v30(v29, v31);
    uint64_t v34 = *v18;
    if (*v18)
    {
      uint64_t v35 = swift_getObjectType(*v18);
      uint64_t v36 = swift_allocObject(&unk_1003471E8, 24LL, 7LL);
      uint64_t v37 = v58;
      swift_weakInit(v36 + 16, v58);
      aBlock[4] = sub_1002A3C2C;
      uint64_t v60 = v36;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256LL;
      aBlock[2] = sub_100284B68;
      void aBlock[3] = &unk_100347200;
      uint64_t v38 = _Block_copy(aBlock);
      swift_unknownObjectRetain(v34);
      uint64_t v39 = swift_retain(v36);
      uint64_t v40 = v46;
      static DispatchQoS.unspecified.getter(v39);
      unint64_t v41 = v49;
      sub_1002A3C4C();
      OS_dispatch_source.setEventHandler(qos:flags:handler:)(v40, v41, v38, v35);
      _Block_release(v38);
      swift_unknownObjectRelease(v34);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v41, v51);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v40, v48);
      uint64_t v42 = v60;
      swift_release(v36);
      swift_release(v42);
      uint64_t v43 = *(void *)(v37 + 16);
      if (v43)
      {
        swift_getObjectType(*(void *)(v37 + 16));
        swift_unknownObjectRetain(v43);
        OS_dispatch_source.activate()();
        swift_unknownObjectRelease(v43);
      }
    }
  }

  return v58;
}

unint64_t sub_1002A3A90()
{
  unint64_t result = qword_100368950;
  if (!qword_100368950)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___OS_dispatch_source);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_100368950);
  }

  return result;
}

uint64_t sub_1002A3ACC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1002A3AF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v2);
  a1 += 16LL;
  swift_beginAccess(a1, v5, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(a1);
  if (result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 120LL))(result);
    return swift_release(v4);
  }

  return result;
}

uint64_t sub_1002A3C2C()
{
  return sub_1002A3AF0(v0);
}

uint64_t sub_1002A3C34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v2;
  return swift_retain(v2);
}

uint64_t sub_1002A3C44(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1002A3C4C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v5 = &_swiftEmptyArrayStorage;
  uint64_t v1 = sub_10000FD98( (unint64_t *)&qword_100368050,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v2 = sub_100003A0C(&qword_100367DB0);
  uint64_t v3 = sub_100292F50((unint64_t *)&qword_100368060, &qword_100367DB0);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

uint64_t ALDataGenerationBase.deinit()
{
  return v0;
}

uint64_t ALDataGenerationBase.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for ALDataGenerationBase()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon20ALDataGenerationBase);
}

uint64_t method lookup function for ALDataGenerationBase(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALDataGenerationBase);
}

uint64_t dispatch thunk of ALDataGenerationBase.__allocating_init(queue:interval:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ALDataGenerationBase.onTick()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120LL))();
}

uint64_t sub_1002A3D88()
{
  uint64_t v1 = *(void *)(v0 + 16);
  v7[0] = 0LL;
  v7[1] = 0xE000000000000000LL;
  v2._countAndFlagsBits = 0x6F7272456B636954LL;
  v2._object = (void *)0xEA00000000002072LL;
  String.append(_:)(v2);
  uint64_t v6 = v1;
  uint64_t v3 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v6,  v7,  v3,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v4._countAndFlagsBits = 0LL;
  v4._object = (void *)0xE000000000000000LL;
  String.append(_:)(v4);
  return v7[0];
}

uint64_t sub_1002A3E18()
{
  return swift_retain(*(void *)(v0 + 24));
}

uint64_t sub_1002A3E4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = a1;
  return swift_release(v3);
}

uint64_t sub_1002A3E90()
{
  return swift_retain(*(void *)(v0 + 32));
}

uint64_t sub_1002A3EC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  return swift_release(v3);
}

uint64_t sub_1002A3F08(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject(v3, 48LL, 7LL);
  sub_1002A3F5C(a1, a2, a3);
  return v7;
}

void *sub_1002A3F5C(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v13)(void *__return_ptr, uint64_t, unint64_t, void *);
  uint64_t v14;
  void (*v15)(void *__return_ptr, uint64_t, unint64_t, void *);
  uint64_t v16;
  void (*v17)(void *__return_ptr, uint64_t, unint64_t, void *);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char v23[24];
  void v24[3];
  Swift::String v4 = v3;
  v3[3] = 0LL;
  uint64_t v6 = v3 + 3;
  v3[4] = 0LL;
  uint64_t v7 = v3 + 4;
  v3[5] = 0LL;
  uint64_t v8 = v3 + 5;
  v3[2] = a1;
  unint64_t v9 = (id *)(v3 + 2);
  id v10 = a1;
  uint64_t v11 = sub_1002990B8();
  uint64_t v12 = *v11;
  uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
  swift_retain(*v11);
  v13(v24, 0x616C756D69535442LL, 0xEB00000000646574LL, &type metadata for Bool);
  swift_release(v12);
  if (LOBYTE(v24[0]) != 2 && (v24[0] & 1) != 0)
  {
    type metadata accessor for ALBtSimulated();
    uint64_t v19 = sub_1002B1698(v10, a2, a3);
    swift_beginAccess(v6, v24, 1LL, 0LL);
    a3 = *v6;
    *uint64_t v6 = v19;
  }

  else
  {
    uint64_t v14 = *v11;
    uint64_t v15 = *(void (**)(void *__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
    swift_retain(*v11);
    v15(v24, 0x79616C7065525442LL, 0xED00005653436465LL, &type metadata for Bool);
    swift_release(v14);
    if (LOBYTE(v24[0]) != 2 && (v24[0] & 1) != 0)
    {
      type metadata accessor for ALBtReplayerCSV();
      uint64_t v20 = sub_100289918(v10, a2, a3);
      swift_beginAccess(v7, v24, 1LL, 0LL);
      a3 = *v7;
      *uint64_t v7 = v20;
    }

    else
    {
      uint64_t v16 = *v11;
      uint64_t v17 = *(void (**)(void *__return_ptr, uint64_t, unint64_t, void *))(*(void *)*v11 + 112LL);
      swift_retain(*v11);
      v17(v24, 0x726F43686365654CLL, 0xEB00000000544265LL, &type metadata for Bool);
      swift_release(v16);
      if (LOBYTE(v24[0]) == 2 || (v24[0] & 1) != 0)
      {
        type metadata accessor for ALLeechCoreBluetooth();
        swift_beginAccess(v9, v24, 0LL, 0LL);
        uint64_t v18 = sub_10029A204(*v9, a2, a3);

        swift_beginAccess(v8, v23, 1LL, 0LL);
        a3 = *v8;
        *uint64_t v8 = (uint64_t)v18;
      }

      else
      {
      }
    }
  }

  swift_release(a3);
  return v4;
}

uint64_t sub_1002A41D0()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  return v0;
}

uint64_t sub_1002A4204()
{
  swift_release(*(void *)(v0 + 24));
  swift_release(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  return swift_deallocClassInstance(v0, 48LL, 7LL);
}

uint64_t type metadata accessor for ALBtResultHub()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon13ALBtResultHub);
}

uint64_t sub_1002A4268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002B0D50();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002A42C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002B0D50();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

ALDaemon::ALWiFiScanRow::Band_optional __swiftcall ALWiFiScanRow.Band.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  char *v1 = v2;
  return (ALDaemon::ALWiFiScanRow::Band_optional)rawValue;
}

Swift::Int sub_1002A4324()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)(v3, 0LL);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1002A4368()
{
}

Swift::Int sub_1002A4390(uint64_t a1)
{
  Swift::UInt v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

ALDaemon::ALWiFiScanRow::Band_optional sub_1002A43D0(Swift::Int *a1)
{
  return ALWiFiScanRow.Band.init(rawValue:)(*a1);
}

uint64_t sub_1002A43D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002B0D0C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1002A4434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002B0D0C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t ALWiFiScanRow._mac.getter()
{
  return sub_1002A7A18( (uint64_t)&unk_1002DFA20,  &qword_100368BB8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64);
}

uint64_t sub_1002A44A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A7B40( a1,  (uint64_t)&unk_1002DFA20,  &qword_100368BB8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64,  a2);
}

uint64_t sub_1002A44C8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A7C70(a1, a2, a3, a4, (uint64_t)&unk_1002DFA20, (uint64_t)sub_1002B102C);
}

uint64_t type metadata accessor for ALWiFiScanRow(uint64_t a1)
{
  return sub_10000E68C(a1, qword_1003C1500, (uint64_t)&nominal type descriptor for ALWiFiScanRow);
}

uint64_t ALWiFiScanRow._mac.setter(uint64_t a1, char a2)
{
  return sub_1002A7D34(a1, a2, (uint64_t)&unk_1002DFA20, (uint64_t)sub_1002A4528);
}

uint64_t sub_1002A4504@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1002A7E0C( a1,  a2,  a3,  (uint64_t)&unk_1002DFA20,  &qword_100368BC0,  &qword_100368BC8,  (uint64_t)&protocol witness table for UInt64,  a4);
}

uint64_t sub_1002A4528()
{
  return sub_1002A7EF8( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(_BYTE *)(v0 + 32),  (uint64_t)&unk_1002DFA20,  &qword_100368BC8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64);
}

void (*ALWiFiScanRow._mac.modify(void *a1))(uint64_t **a1)
{
  uint64_t v2 = v1;
  Swift::String v4 = malloc(0x38uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  void v4[4] = v2;
  void v4[5] = v5;
  _OWORD v4[2] = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA20);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  void v4[6] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 2, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFA20);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368BB8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4 + 2, v8, v9, v10);
  swift_release(v8);
  char v11 = *((_BYTE *)v4 + 24);
  *Swift::String v4 = v4[2];
  *((_BYTE *)v4 + 8) = v11;
  return sub_1002A46AC;
}

void sub_1002A46AC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((_BYTE *)*a1 + 8);
  uint64_t v4 = (*a1)[6];
  uint64_t v5 = (*a1)[4];
  unint64_t v6 = *a1;
  v6[2] = v5;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA20);
  v8[2] = v5;
  void v8[3] = v2;
  char v9 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v6 + 2,  KeyPath,  sub_1002B102C,  v8,  (char *)&type metadata for () + 8,  v4);
  swift_release(KeyPath);
  free(v1);
}

uint64_t ALWiFiScanRow._ssid.getter()
{
  uint64_t v7 = v0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v2 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v4 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v5 = sub_1002A8004( &qword_100368BD0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v7, v3, v4, v5);
  swift_release(v3);
  return v7;
}

double sub_1002A487C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&__int128 v9 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v4 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v6 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v7 = sub_1002A8004( &qword_100368BD0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v9, v5, v6, v7);
  swift_release(v5);
  double result = *(double *)&v9;
  *a2 = v9;
  return result;
}

uint64_t sub_1002A4984(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  void v7[2] = v8;
  v7[3] = v3;
  v7[4] = v2;
  uint64_t v5 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v8,  KeyPath,  sub_1002B1124,  v7,  (char *)&type metadata for () + 8,  v5);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(v2);
}

uint64_t ALWiFiScanRow._ssid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v9 = v2;
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  uint64_t v6 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v12,  KeyPath,  sub_1002A4C98,  &v8,  (char *)&type metadata for () + 8,  v6);
  swift_release(KeyPath);
  return swift_bridgeObjectRelease(a2);
}

uint64_t sub_1002A4B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  sub_100286330(v14, v15);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v10 = sub_100003A0C(&qword_100368BD8);
  uint64_t v11 = sub_1002A8004( &qword_100368BE0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, v13, v10, v11, v7, v8);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(a2);
  uint64_t result = sub_10001882C(v14);
  *a4 = 0;
  return result;
}

uint64_t sub_1002A4BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  v9[0] = a2;
  v9[1] = a3;
  uint64_t v6 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v7 = sub_1002A8004( &qword_100368BE0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, v9, v6, v7);
  return swift_release(KeyPath);
}

uint64_t sub_1002A4C98()
{
  return sub_1002A4BEC(v0[2], v0[3], v0[4]);
}

void (*ALWiFiScanRow._ssid.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x38uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  void v4[4] = v2;
  void v4[5] = v5;
  _OWORD v4[2] = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  void v4[6] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 2, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368BD0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4 + 2, v8, v9, v10);
  swift_release(v8);
  *(_OWORD *)uint64_t v4 = *((_OWORD *)v4 + 1);
  return sub_1002A4DF4;
}

void sub_1002A4DF4(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (*a1)[4];
  v3[2] = v4;
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v7 = v3[6];
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA48);
  void v9[2] = v4;
  v9[3] = v6;
  v9[4] = v5;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(v5);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v3 + 2,  KeyPath,  sub_1002B1124,  v9,  (char *)&type metadata for () + 8,  v7);
    swift_bridgeObjectRelease(v5);
    swift_release(KeyPath);
    swift_bridgeObjectRelease(v3[1]);
  }

  else
  {
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v3 + 2,  KeyPath,  sub_1002B1124,  v9,  (char *)&type metadata for () + 8,  v7);
    swift_release(KeyPath);
    swift_bridgeObjectRelease(v5);
  }

  free(v3);
}

unint64_t ALWiFiScanRow._rssiDb.getter()
{
  return sub_1002A6DBC( (uint64_t)&unk_1002DFA70,  &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32);
}

uint64_t sub_1002A4F34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A6EF0( a1,  (uint64_t)&unk_1002DFA70,  &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  a2);
}

uint64_t sub_1002A4F58(int *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A7020(a1, a2, a3, a4, (uint64_t)&unk_1002DFA70, (uint64_t)sub_1002A4FA4);
}

uint64_t ALWiFiScanRow._rssiDb.setter(uint64_t a1)
{
  return sub_1002A70E8(a1, (uint64_t)&unk_1002DFA70, (uint64_t)sub_1002A4FA4);
}

uint64_t sub_1002A4F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A5674( a1,  a2,  (uint64_t)&unk_1002DFA70,  &qword_100368BF0,  &qword_100368BF8,  (uint64_t)&protocol witness table for Int32,  a3);
}

uint64_t sub_1002A4FA4()
{
  return sub_1002A51D4( (uint64_t)&unk_1002DFA70,  &qword_100368BF8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32);
}

void (*ALWiFiScanRow._rssiDb.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA70);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFA70);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, v10);
  swift_release(v8);
  *((_DWORD *)v4 + 8) = *(_DWORD *)v4;
  *((_BYTE *)v4 + 36) = *((_BYTE *)v4 + 4);
  return sub_1002A5104;
}

void sub_1002A5104(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(_DWORD *)(*(void *)a1 + 32LL);
  char v3 = *(_BYTE *)(*(void *)a1 + 36LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v5 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v5;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA70);
  void v7[2] = v5;
  int v8 = v2;
  char v9 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002A4FA4,  v7,  (char *)&type metadata for () + 8,  v4);
  swift_release(KeyPath);
  free(v1);
}

uint64_t sub_1002A51D4(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t a4)
{
  return sub_1002A71C0( *(void *)(v4 + 16),  *(unsigned int *)(v4 + 24) | ((unint64_t)*(unsigned __int8 *)(v4 + 28) << 32),  a1,  a2,  a3,  a4);
}

void sub_1002A5220(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t ALWiFiScanRow._mode.getter@<X0>(void *a1@<X8>)
{
  return sub_1002A6568((uint64_t)&unk_1002DFA98, &qword_100368C00, &qword_100368C08, (void (*)(void))sub_1002A5288, a1);
}

uint64_t sub_1002A5250@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A6694( a1,  (uint64_t)&unk_1002DFA98,  &qword_100368C00,  &qword_100368C08,  (void (*)(void))sub_1002A5288,  a2);
}

uint64_t sub_1002A5274(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A67BC(a1, a2, a3, a4, (uint64_t)&unk_1002DFA98, (uint64_t)sub_1002B1058);
}

unint64_t sub_1002A5288()
{
  unint64_t result = qword_100368C10;
  if (!qword_100368C10)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Mode,  &type metadata for ALWiFiScanRow.Mode);
    atomic_store(result, (unint64_t *)&qword_100368C10);
  }

  return result;
}

uint64_t ALWiFiScanRow._mode.setter(char *a1)
{
  return sub_1002A68C0(a1, (uint64_t)&unk_1002DFA98, (uint64_t)sub_1002A5304);
}

uint64_t sub_1002A52E0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A6990( a1,  a2,  (uint64_t)&unk_1002DFA98,  &qword_100368C08,  &qword_100368C18,  (void (*)(void))sub_1002A53B4,  a3);
}

uint64_t sub_1002A5304()
{
  return sub_1002A6A74( *(void *)(v0 + 16),  *(_BYTE *)(v0 + 24),  (uint64_t)&unk_1002DFA98,  &qword_100368C18,  &qword_100368C08,  (void (*)(void))sub_1002A53B4);
}

uint64_t sub_1002A5350(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = sub_10000FED4(a2);
    a3();
    uint64_t result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_1002A53B4()
{
  unint64_t result = qword_100368C20;
  if (!qword_100368C20)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Mode,  &type metadata for ALWiFiScanRow.Mode);
    atomic_store(result, (unint64_t *)&qword_100368C20);
  }

  return result;
}

void (*ALWiFiScanRow._mode.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = v4 + 4;
  uint64_t v6 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v6;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA98);
  uint64_t v8 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v8;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v8);
  swift_release(KeyPath);
  uint64_t v9 = swift_getKeyPath(&unk_1002DFA98);
  uint64_t v10 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v11 = sub_1002A5350( &qword_100368C00,  &qword_100368C08,  (void (*)(void))sub_1002A5288,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v5, v9, v10, v11);
  swift_release(v9);
  return sub_1002A5520;
}

void sub_1002A5520(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA98);
  v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B1058,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

unint64_t ALWiFiScanRow._channel.getter()
{
  return sub_1002A6DBC( (uint64_t)&unk_1002DFAC0,  &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32);
}

uint64_t sub_1002A5604@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A6EF0( a1,  (uint64_t)&unk_1002DFAC0,  &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  a2);
}

uint64_t sub_1002A5628(int *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A7020(a1, a2, a3, a4, (uint64_t)&unk_1002DFAC0, (uint64_t)sub_1002A5760);
}

uint64_t ALWiFiScanRow._channel.setter(uint64_t a1)
{
  return sub_1002A70E8(a1, (uint64_t)&unk_1002DFAC0, (uint64_t)sub_1002A5760);
}

uint64_t sub_1002A5650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A5674( a1,  a2,  (uint64_t)&unk_1002DFAC0,  &qword_100368BF0,  &qword_100368BF8,  (uint64_t)&protocol witness table for Int32,  a3);
}

uint64_t sub_1002A5674@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X4>, unint64_t *a5@<X5>, uint64_t a6@<X6>, _BYTE *a7@<X8>)
{
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  sub_100286330(v21, v22);
  uint64_t KeyPath = swift_getKeyPath(a3);
  int v19 = a1;
  char v20 = BYTE4(a1) & 1;
  uint64_t v16 = sub_100003A0C(a4);
  uint64_t v17 = sub_1002A8004(a5, a4, a6, (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v19, v16, v17, v13, v14);
  swift_release(KeyPath);
  uint64_t result = sub_10001882C(v21);
  *a7 = 0;
  return result;
}

uint64_t sub_1002A5760()
{
  return sub_1002A51D4( (uint64_t)&unk_1002DFAC0,  &qword_100368BF8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32);
}

void (*ALWiFiScanRow._channel.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFAC0);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFAC0);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, v10);
  swift_release(v8);
  *((_DWORD *)v4 + 8) = *(_DWORD *)v4;
  *((_BYTE *)v4 + 36) = *((_BYTE *)v4 + 4);
  return sub_1002A58C0;
}

void sub_1002A58C0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(_DWORD *)(*(void *)a1 + 32LL);
  char v3 = *(_BYTE *)(*(void *)a1 + 36LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v5 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v5;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFAC0);
  void v7[2] = v5;
  int v8 = v2;
  char v9 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002A5760,  v7,  (char *)&type metadata for () + 8,  v4);
  swift_release(KeyPath);
  free(v1);
}

unint64_t ALWiFiScanRow._ageSec.getter()
{
  return sub_1002A6DBC( (uint64_t)&unk_1002DFAE8,  &qword_100368C28,  &qword_100368C30,  (uint64_t)&protocol witness table for Float);
}

uint64_t sub_1002A59B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A6EF0( a1,  (uint64_t)&unk_1002DFAE8,  &qword_100368C28,  &qword_100368C30,  (uint64_t)&protocol witness table for Float,  a2);
}

uint64_t sub_1002A59D8(int *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A7020(a1, a2, a3, a4, (uint64_t)&unk_1002DFAE8, (uint64_t)sub_1002A5A24);
}

uint64_t ALWiFiScanRow._ageSec.setter(uint64_t a1)
{
  return sub_1002A70E8(a1, (uint64_t)&unk_1002DFAE8, (uint64_t)sub_1002A5A24);
}

uint64_t sub_1002A5A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A5674( a1,  a2,  (uint64_t)&unk_1002DFAE8,  &qword_100368C30,  &qword_100368C38,  (uint64_t)&protocol witness table for Float,  a3);
}

uint64_t sub_1002A5A24()
{
  return sub_1002A51D4( (uint64_t)&unk_1002DFAE8,  &qword_100368C38,  &qword_100368C30,  (uint64_t)&protocol witness table for Float);
}

void (*ALWiFiScanRow._ageSec.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFAE8);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFAE8);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368C28,  &qword_100368C30,  (uint64_t)&protocol witness table for Float,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, v10);
  swift_release(v8);
  *((_DWORD *)v4 + 8) = *(_DWORD *)v4;
  *((_BYTE *)v4 + 36) = *((_BYTE *)v4 + 4);
  return sub_1002A5B84;
}

void sub_1002A5B84(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(_DWORD *)(*(void *)a1 + 32LL);
  char v3 = *(_BYTE *)(*(void *)a1 + 36LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v5 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v5;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFAE8);
  void v7[2] = v5;
  int v8 = v2;
  char v9 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002A5A24,  v7,  (char *)&type metadata for () + 8,  v4);
  swift_release(KeyPath);
  free(v1);
}

uint64_t ALWiFiScanRow._isAppleHotspot.getter()
{
  return sub_1002A5EC4((uint64_t)&unk_1002DFB10);
}

uint64_t sub_1002A5C60@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A5FC8(a1, (uint64_t)&unk_1002DFB10, a2);
}

uint64_t sub_1002A5C6C(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A67BC(a1, a2, a3, a4, (uint64_t)&unk_1002DFB10, (uint64_t)sub_1002B106C);
}

uint64_t ALWiFiScanRow._isAppleHotspot.setter(char a1)
{
  return sub_1002A60F4(a1, (uint64_t)&unk_1002DFB10, (uint64_t)sub_1002A5CA0);
}

uint64_t sub_1002A5C94@<X0>(char a1@<W0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A61AC(a1, a2, (uint64_t)&unk_1002DFB10, a3);
}

uint64_t sub_1002A5CA0()
{
  return sub_1002A628C(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24), (uint64_t)&unk_1002DFB10);
}

void (*ALWiFiScanRow._isAppleHotspot.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB10);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFB10);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368C40,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, v10);
  swift_release(v8);
  *((_BYTE *)v4 + 32) = *(_BYTE *)v4;
  return sub_1002A5DF8;
}

void sub_1002A5DF8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB10);
  v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B106C,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t ALWiFiScanRow._isMoving.getter()
{
  return sub_1002A5EC4((uint64_t)&unk_1002DFB38);
}

uint64_t sub_1002A5EC4(uint64_t a1)
{
  uint64_t v10 = v1;
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v4 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = swift_getKeyPath(a1);
  uint64_t v6 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v7 = sub_1002A8004( &qword_100368C40,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v9, v5, v6, v7);
  swift_release(v5);
  return v9;
}

uint64_t sub_1002A5FBC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A5FC8(a1, (uint64_t)&unk_1002DFB38, a2);
}

uint64_t sub_1002A5FC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  uint64_t v12 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v6 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, KeyPath, v6);
  swift_release(KeyPath);
  uint64_t v7 = swift_getKeyPath(a2);
  uint64_t v8 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v9 = sub_1002A8004( &qword_100368C40,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v11, v7, v8, v9);
  uint64_t result = swift_release(v7);
  *a3 = v11;
  return result;
}

uint64_t sub_1002A60CC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A67BC(a1, a2, a3, a4, (uint64_t)&unk_1002DFB38, (uint64_t)sub_1002B1080);
}

uint64_t ALWiFiScanRow._isMoving.setter(char a1)
{
  return sub_1002A60F4(a1, (uint64_t)&unk_1002DFB38, (uint64_t)sub_1002A632C);
}

uint64_t sub_1002A60F4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v10 = v3;
  char v11 = a1;
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v12,  KeyPath,  a3,  &v9,  (char *)&type metadata for () + 8,  v7);
  return swift_release(KeyPath);
}

uint64_t sub_1002A61A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A61AC(a1, a2, (uint64_t)&unk_1002DFB38, a3);
}

uint64_t sub_1002A61AC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  sub_100286330(v14, v15);
  uint64_t KeyPath = swift_getKeyPath(a3);
  char v13 = a1;
  uint64_t v10 = sub_100003A0C(&qword_100368C48);
  uint64_t v11 = sub_1002A8004( &qword_100368C50,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v13, v10, v11, v7, v8);
  swift_release(KeyPath);
  uint64_t result = sub_10001882C(v14);
  *a4 = 0;
  return result;
}

uint64_t sub_1002A628C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  char v8 = a2;
  uint64_t v5 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v6 = sub_1002A8004( &qword_100368C50,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v8, v5, v6);
  return swift_release(KeyPath);
}

uint64_t sub_1002A632C()
{
  return sub_1002A628C(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24), (uint64_t)&unk_1002DFB38);
}

void (*ALWiFiScanRow._isMoving.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB38);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFB38);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368C40,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, v10);
  swift_release(v8);
  *((_BYTE *)v4 + 32) = *(_BYTE *)v4;
  return sub_1002A6484;
}

void sub_1002A6484(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB38);
  v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B1080,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t ALWiFiScanRow._band.getter@<X0>(void *a1@<X8>)
{
  return sub_1002A6568((uint64_t)&unk_1002DFB60, &qword_100368C58, &qword_100368C60, (void (*)(void))sub_1002A6868, a1);
}

uint64_t sub_1002A6568@<X0>( uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X2>, void (*a4)(void)@<X3>, void *a5@<X8>)
{
  uint64_t v17 = v5;
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v12 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v17, KeyPath, v12);
  swift_release(KeyPath);
  uint64_t v13 = swift_getKeyPath(a1);
  uint64_t v14 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v15 = sub_1002A5350(a2, a3, a4, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(a5, v13, v14, v15);
  return swift_release(v13);
}

uint64_t sub_1002A6670@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002A6694( a1,  (uint64_t)&unk_1002DFB60,  &qword_100368C58,  &qword_100368C60,  (void (*)(void))sub_1002A6868,  a2);
}

uint64_t sub_1002A6694@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X5>, void (*a5)(void)@<X6>, _BYTE *a6@<X8>)
{
  uint64_t v17 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v12 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v17, KeyPath, v12);
  swift_release(KeyPath);
  uint64_t v13 = swift_getKeyPath(a2);
  uint64_t v14 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v15 = sub_1002A5350(a3, a4, a5, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v18, v13, v14, v15);
  uint64_t result = swift_release(v13);
  *a6 = v18;
  return result;
}

uint64_t sub_1002A67A8(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A67BC(a1, a2, a3, a4, (uint64_t)&unk_1002DFB60, (uint64_t)sub_1002B1094);
}

uint64_t sub_1002A67BC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = *a1;
  uint64_t v13 = *a2;
  uint64_t KeyPath = swift_getKeyPath(a5);
  void v11[2] = v13;
  char v12 = v7;
  uint64_t v9 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v13,  KeyPath,  a6,  v11,  (char *)&type metadata for () + 8,  v9);
  return swift_release(KeyPath);
}

unint64_t sub_1002A6868()
{
  unint64_t result = qword_100368C68;
  if (!qword_100368C68)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Band,  &type metadata for ALWiFiScanRow.Band);
    atomic_store(result, (unint64_t *)&qword_100368C68);
  }

  return result;
}

uint64_t ALWiFiScanRow._band.setter(char *a1)
{
  return sub_1002A68C0(a1, (uint64_t)&unk_1002DFB60, (uint64_t)sub_1002A6B20);
}

uint64_t sub_1002A68C0(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v10 = v3;
  char v11 = v5;
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v12,  KeyPath,  a3,  &v9,  (char *)&type metadata for () + 8,  v7);
  return swift_release(KeyPath);
}

uint64_t sub_1002A696C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A6990( a1,  a2,  (uint64_t)&unk_1002DFB60,  &qword_100368C60,  &qword_100368C70,  (void (*)(void))sub_1002A6B6C,  a3);
}

uint64_t sub_1002A6990@<X0>( char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X4>, unint64_t *a5@<X5>, void (*a6)(void)@<X6>, _BYTE *a7@<X8>)
{
  char v12 = *a1;
  sub_100087650(a2, (uint64_t)v20);
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_100286330(v20, v21);
  uint64_t KeyPath = swift_getKeyPath(a3);
  char v19 = v12;
  uint64_t v16 = sub_100003A0C(a4);
  uint64_t v17 = sub_1002A5350(a5, a4, a6, (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v19, v16, v17, v13, v14);
  swift_release(KeyPath);
  uint64_t result = sub_10001882C(v20);
  *a7 = 0;
  return result;
}

uint64_t sub_1002A6A74(uint64_t a1, char a2, uint64_t a3, unint64_t *a4, uint64_t *a5, void (*a6)(void))
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  char v14 = a2;
  uint64_t v11 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v12 = sub_1002A5350(a4, a5, a6, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v14, v11, v12);
  return swift_release(KeyPath);
}

uint64_t sub_1002A6B20()
{
  return sub_1002A6A74( *(void *)(v0 + 16),  *(_BYTE *)(v0 + 24),  (uint64_t)&unk_1002DFB60,  &qword_100368C70,  &qword_100368C60,  (void (*)(void))sub_1002A6B6C);
}

unint64_t sub_1002A6B6C()
{
  unint64_t result = qword_100368C78;
  if (!qword_100368C78)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Band,  &type metadata for ALWiFiScanRow.Band);
    atomic_store(result, (unint64_t *)&qword_100368C78);
  }

  return result;
}

void (*ALWiFiScanRow._band.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  char v5 = v4 + 4;
  uint64_t v6 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v6;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB60);
  uint64_t v8 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v8;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v8);
  swift_release(KeyPath);
  uint64_t v9 = swift_getKeyPath(&unk_1002DFB60);
  uint64_t v10 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v11 = sub_1002A5350( &qword_100368C58,  &qword_100368C60,  (void (*)(void))sub_1002A6868,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v5, v9, v10, v11);
  swift_release(v9);
  return sub_1002A6CD8;
}

void sub_1002A6CD8(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB60);
  v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B1094,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

unint64_t ALWiFiScanRow._frequencyKhz.getter()
{
  return sub_1002A6DBC( (uint64_t)&unk_1002DFB88,  &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32);
}

unint64_t sub_1002A6DBC(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v16 = v4;
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v10 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v16, KeyPath, v10);
  swift_release(KeyPath);
  uint64_t v11 = swift_getKeyPath(a1);
  uint64_t v12 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v13 = sub_1002A8004(a2, a3, a4, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v15, v11, v12, v13);
  swift_release(v11);
  return v15 | ((unint64_t)BYTE4(v15) << 32);
}

uint64_t sub_1002A6ECC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A6EF0( a1,  (uint64_t)&unk_1002DFB88,  &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  a2);
}

uint64_t sub_1002A6EF0@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v19 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v12 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v19, KeyPath, v12);
  swift_release(KeyPath);
  uint64_t v13 = swift_getKeyPath(a2);
  uint64_t v14 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v15 = sub_1002A8004(a3, a4, a5, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v18, v13, v14, v15);
  uint64_t result = swift_release(v13);
  char v17 = BYTE4(v18);
  *(_DWORD *)a6 = v18;
  *(_BYTE *)(a6 + 4) = v17;
  return result;
}

uint64_t sub_1002A700C(int *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A7020(a1, a2, a3, a4, (uint64_t)&unk_1002DFB88, (uint64_t)sub_1002A7274);
}

uint64_t sub_1002A7020(int *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v7 = *a1;
  char v8 = *((_BYTE *)a1 + 4);
  uint64_t v15 = *a2;
  uint64_t KeyPath = swift_getKeyPath(a5);
  v12[2] = v15;
  int v13 = v7;
  char v14 = v8;
  uint64_t v10 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v15,  KeyPath,  a6,  v12,  (char *)&type metadata for () + 8,  v10);
  return swift_release(KeyPath);
}

uint64_t ALWiFiScanRow._frequencyKhz.setter(uint64_t a1)
{
  return sub_1002A70E8(a1, (uint64_t)&unk_1002DFB88, (uint64_t)sub_1002A7274);
}

uint64_t sub_1002A70E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v10 = v3;
  int v11 = a1;
  char v12 = BYTE4(a1) & 1;
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v13,  KeyPath,  a3,  &v9,  (char *)&type metadata for () + 8,  v7);
  return swift_release(KeyPath);
}

uint64_t sub_1002A719C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1002A5674( a1,  a2,  (uint64_t)&unk_1002DFB88,  &qword_100368BF0,  &qword_100368BF8,  (uint64_t)&protocol witness table for Int32,  a3);
}

uint64_t sub_1002A71C0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  int v14 = a2;
  char v15 = BYTE4(a2) & 1;
  uint64_t v11 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v12 = sub_1002A8004(a4, a5, a6, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v14, v11, v12);
  return swift_release(KeyPath);
}

uint64_t sub_1002A7274()
{
  return sub_1002A51D4( (uint64_t)&unk_1002DFB88,  &qword_100368BF8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32);
}

void (*ALWiFiScanRow._frequencyKhz.modify(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB88);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFB88);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, v10);
  swift_release(v8);
  *((_DWORD *)v4 + 8) = *(_DWORD *)v4;
  *((_BYTE *)v4 + 36) = *((_BYTE *)v4 + 4);
  return sub_1002A73D4;
}

void sub_1002A73D4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(_DWORD *)(*(void *)a1 + 32LL);
  char v3 = *(_BYTE *)(*(void *)a1 + 36LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v5 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v5;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFB88);
  void v7[2] = v5;
  int v8 = v2;
  char v9 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002A7274,  v7,  (char *)&type metadata for () + 8,  v4);
  swift_release(KeyPath);
  free(v1);
}

double ALWiFiScanRow._cfAbsoluteTimeSec.getter()
{
  double v6 = v0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v2 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v4 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  PersistentModel.getValue<A>(forKey:)(&v6, v3, v4, &protocol witness table for Double);
  swift_release(v3);
  return v6;
}

double sub_1002A7580@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  double v8 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v4 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v6 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  PersistentModel.getValue<A>(forKey:)(&v8, v5, v6, &protocol witness table for Double);
  swift_release(v5);
  double result = v8;
  *a2 = v8;
  return result;
}

uint64_t sub_1002A7664(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v7 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  v6[2] = v7;
  void v6[3] = v2;
  uint64_t v4 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v7,  KeyPath,  sub_1002B10A8,  v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t ALWiFiScanRow._cfAbsoluteTimeSec.setter(double a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v7 = v1;
  double v8 = a1;
  uint64_t v4 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v9,  KeyPath,  sub_1002A77D0,  &v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002A77C4(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1002A9F88(a1, a3, a2, (uint64_t)&unk_1002DFBB0);
}

uint64_t sub_1002A77D0()
{
  return sub_1002AA340( *(double *)(v0 + 24),  *(void *)(v0 + 16),  (uint64_t)&unk_1002DFBB0,  &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

void (*ALWiFiScanRow._cfAbsoluteTimeSec.modify(void *a1))(uint64_t **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  _OWORD v4[2] = v2;
  v4[3] = v5;
  v4[1] = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  void v4[4] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 1, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  PersistentModel.getValue<A>(forKey:)(v4 + 1, v8, v9, &protocol witness table for Double);
  swift_release(v8);
  *uint64_t v4 = v4[1];
  return sub_1002A7928;
}

void sub_1002A7928(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = *a1;
  v5[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  void v7[2] = v4;
  void v7[3] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v5 + 1,  KeyPath,  sub_1002B10A8,  v7,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t ALWiFiScanRow._machContinuousTimeSec.getter()
{
  return sub_1002A7A18( (uint64_t)&unk_1002DFBD8,  &qword_100368C80,  &qword_100368C88,  (uint64_t)&protocol witness table for Double);
}

uint64_t sub_1002A7A18(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v15 = v4;
  uint64_t v9 = ((uint64_t (*)(void))swift_getKeyPath)();
  uint64_t v10 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, v9, v10);
  swift_release(v9);
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v12 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v13 = sub_1002A8004(a2, a3, a4, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v15, KeyPath, v12, v13);
  swift_release(KeyPath);
  return v15;
}

uint64_t sub_1002A7B1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002A7B40( a1,  (uint64_t)&unk_1002DFBD8,  &qword_100368C80,  &qword_100368C88,  (uint64_t)&protocol witness table for Double,  a2);
}

uint64_t sub_1002A7B40@<X0>( uint64_t *a1@<X0>, uint64_t a2@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v18 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v12 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v18, KeyPath, v12);
  swift_release(KeyPath);
  uint64_t v13 = swift_getKeyPath(a2);
  uint64_t v14 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v15 = sub_1002A8004(a3, a4, a5, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(&v18, v13, v14, v15);
  uint64_t result = swift_release(v13);
  char v17 = v19;
  *(void *)a6 = v18;
  *(_BYTE *)(a6 + 8) = v17;
  return result;
}

uint64_t sub_1002A7C5C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002A7C70(a1, a2, a3, a4, (uint64_t)&unk_1002DFBD8, (uint64_t)sub_1002B1040);
}

uint64_t sub_1002A7C70(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  char v8 = *((_BYTE *)a1 + 8);
  uint64_t v14 = *a2;
  uint64_t KeyPath = swift_getKeyPath(a5);
  v12[2] = v14;
  void v12[3] = v7;
  char v13 = v8;
  uint64_t v10 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v14,  KeyPath,  a6,  v12,  (char *)&type metadata for () + 8,  v10);
  return swift_release(KeyPath);
}

uint64_t ALWiFiScanRow._machContinuousTimeSec.setter(uint64_t a1, char a2)
{
  return sub_1002A7D34(a1, a2, (uint64_t)&unk_1002DFBD8, (uint64_t)sub_1002A7FB8);
}

uint64_t sub_1002A7D34(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  uint64_t v12 = v4;
  uint64_t v13 = a1;
  char v14 = a2 & 1;
  uint64_t v9 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v15,  KeyPath,  a4,  &v11,  (char *)&type metadata for () + 8,  v9);
  return swift_release(KeyPath);
}

uint64_t sub_1002A7DE8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1002A7E0C( a1,  a2,  a3,  (uint64_t)&unk_1002DFBD8,  &qword_100368C88,  &qword_100368C90,  (uint64_t)&protocol witness table for Double,  a4);
}

uint64_t sub_1002A7E0C@<X0>( uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X5>, unint64_t *a6@<X6>, uint64_t a7@<X7>, _BYTE *a8@<X8>)
{
  uint64_t v15 = v24;
  uint64_t v16 = v25;
  sub_100286330(v23, v24);
  uint64_t KeyPath = swift_getKeyPath(a4);
  uint64_t v21 = a1;
  char v22 = a2 & 1;
  uint64_t v18 = sub_100003A0C(a5);
  uint64_t v19 = sub_1002A8004(a6, a5, a7, (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v21, v18, v19, v15, v16);
  swift_release(KeyPath);
  uint64_t result = sub_10001882C(v23);
  *a8 = 0;
  return result;
}

uint64_t sub_1002A7EF8( uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, uint64_t *a6, uint64_t a7)
{
  uint64_t KeyPath = swift_getKeyPath(a4);
  uint64_t v16 = a2;
  char v17 = a3 & 1;
  uint64_t v13 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v14 = sub_1002A8004(a5, a6, a7, (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v16, v13, v14);
  return swift_release(KeyPath);
}

uint64_t sub_1002A7FB8()
{
  return sub_1002A7EF8( *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(_BYTE *)(v0 + 32),  (uint64_t)&unk_1002DFBD8,  &qword_100368C90,  &qword_100368C88,  (uint64_t)&protocol witness table for Double);
}

uint64_t sub_1002A8004(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = sub_10000FED4(a2);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

void (*ALWiFiScanRow._machContinuousTimeSec.modify(void *a1))(uint64_t **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x38uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  void v4[4] = v2;
  void v4[5] = v5;
  _OWORD v4[2] = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBD8);
  uint64_t v7 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  void v4[6] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 2, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFBD8);
  uint64_t v9 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  uint64_t v10 = sub_1002A8004( &qword_100368C80,  &qword_100368C88,  (uint64_t)&protocol witness table for Double,  (uint64_t)&protocol conformance descriptor for <A> A?);
  PersistentModel.getValue<A>(forKey:)(v4 + 2, v8, v9, v10);
  swift_release(v8);
  char v11 = *((_BYTE *)v4 + 24);
  *uint64_t v4 = v4[2];
  *((_BYTE *)v4 + 8) = v11;
  return sub_1002A8198;
}

void sub_1002A8198(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  char v3 = *((_BYTE *)*a1 + 8);
  uint64_t v4 = (*a1)[6];
  uint64_t v5 = (*a1)[4];
  uint64_t v6 = *a1;
  v6[2] = v5;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBD8);
  v8[2] = v5;
  void v8[3] = v2;
  char v9 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v6 + 2,  KeyPath,  sub_1002B1040,  v8,  (char *)&type metadata for () + 8,  v4);
  swift_release(KeyPath);
  free(v1);
}

uint64_t ALWiFiScanRow.__allocating_init(mac:ssid:rssiDb:mode:channel:ageSec:isAppleHotspot:isMoving:band:frequencyKhz:cfAbsoluteTimeSec:machContinuousTimeSec:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5, char *a6, unint64_t a7, unint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, char a17, char a18, char *a19, unint64_t a20, double a21, char a22, uint64_t a23, char a24)
{
  char v20 = a2 & 1;
  uint64_t v21 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  uint64_t v31 = a20 | ((HIDWORD(a20) & 1) << 32);
  ALWiFiScanRow.init(mac:ssid:rssiDb:mode:channel:ageSec:isAppleHotspot:isMoving:band:frequencyKhz:cfAbsoluteTimeSec:machContinuousTimeSec:)( a1,  v20,  a3,  a4,  a5 | ((HIDWORD(a5) & 1) << 32),  a6,  a7 | ((HIDWORD(a7) & 1) << 32),  a8 | ((HIDWORD(a8) & 1) << 32),  v22,  v23,  v24,  v25,  v26,  v27,  v28,  v29,  a17,  a18,  a19,  v31,  SBYTE4(v31),  a21,  a22 & 1,  a23,  a24 & 1);
  return v21;
}

void *ALWiFiScanRow.init(mac:ssid:rssiDb:mode:channel:ageSec:isAppleHotspot:isMoving:band:frequencyKhz:cfAbsoluteTimeSec:machContinuousTimeSec:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, char a17, char a18, char *a19, int a20, char a21, double a22, char a23, uint64_t a24, char a25)
{
  uint64_t v18 = v17;
  uint64_t v19 = *v17;
  char v94 = *a6;
  char v97 = *a19;
  v18[7] = sub_100003A0C(&qword_100368C98);
  uint64_t v20 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  v143[0] = v19;
  v143[1] = v19;
  v143[2] = v20;
  uint64_t v144 = v20;
  v18[8] = swift_getOpaqueTypeConformance2( v143,  &opaque type descriptor for <<opaque return type of static PersistentModel.createBackingData<A>()>>,  1LL);
  sub_100287740(v18 + 4);
  static PersistentModel.createBackingData<A>()(v19, v19, v20, v20);
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v21 = v144;
  uint64_t v22 = v145;
  sub_100286330(v143, v144);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA20);
  uint64_t v141 = 0LL;
  LOBYTE(v142) = 1;
  uint64_t v24 = sub_100003A0C(&qword_100368BC0);
  uint64_t v25 = sub_1002A8004( &qword_100368BC8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v141, v24, v25, v21, v22);
  swift_release(KeyPath);
  sub_10001882C(v143);
  *((_BYTE *)v18 + swift_weakDestroy(v0 + 16) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v26 = v144;
  uint64_t v27 = v145;
  sub_100286330(v143, v144);
  uint64_t v28 = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v141 = 0LL;
  uint64_t v142 = 0LL;
  uint64_t v29 = sub_100003A0C(&qword_100368BD8);
  uint64_t v30 = sub_1002A8004( &qword_100368BE0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v28, &v141, v29, v30, v26, v27);
  swift_release(v28);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 17) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v31 = v144;
  uint64_t v32 = v145;
  sub_100286330(v143, v144);
  uint64_t v33 = swift_getKeyPath(&unk_1002DFA70);
  LODWORD(v141) = 0;
  BYTE4(v141) = 1;
  uint64_t v34 = sub_100003A0C(&qword_100368BF0);
  uint64_t v88 = sub_1002A8004( &qword_100368BF8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v33, &v141, v34, v88, v31, v32);
  swift_release(v33);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 18) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v35 = v144;
  uint64_t v36 = v145;
  sub_100286330(v143, v144);
  uint64_t v37 = swift_getKeyPath(&unk_1002DFA98);
  LOBYTE(v141) = 4;
  uint64_t v38 = sub_100003A0C(&qword_100368C08);
  uint64_t v39 = sub_1002A5350( &qword_100368C18,  &qword_100368C08,  (void (*)(void))sub_1002A53B4,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v37, &v141, v38, v39, v35, v36);
  swift_release(v37);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 19) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v40 = v144;
  uint64_t v41 = v145;
  sub_100286330(v143, v144);
  uint64_t v42 = swift_getKeyPath(&unk_1002DFAC0);
  LODWORD(v141) = 0;
  BYTE4(v141) = 1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v42, &v141, v34, v88, v40, v41);
  swift_release(v42);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v43 = v144;
  uint64_t v44 = v145;
  sub_100286330(v143, v144);
  uint64_t v45 = swift_getKeyPath(&unk_1002DFAE8);
  LODWORD(v141) = 0;
  BYTE4(v141) = 1;
  uint64_t v46 = sub_100003A0C(&qword_100368C30);
  uint64_t v47 = sub_1002A8004( &qword_100368C38,  &qword_100368C30,  (uint64_t)&protocol witness table for Float,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v45, &v141, v46, v47, v43, v44);
  swift_release(v45);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 21) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v48 = v144;
  uint64_t v49 = v145;
  sub_100286330(v143, v144);
  uint64_t v50 = swift_getKeyPath(&unk_1002DFB10);
  LOBYTE(v141) = 2;
  uint64_t v51 = sub_100003A0C(&qword_100368C48);
  uint64_t v52 = sub_1002A8004( &qword_100368C50,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v50, &v141, v51, v52, v48, v49);
  swift_release(v50);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 22) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v53 = v144;
  uint64_t v54 = v145;
  sub_100286330(v143, v144);
  uint64_t v55 = swift_getKeyPath(&unk_1002DFB38);
  LOBYTE(v141) = 2;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v55, &v141, v51, v52, v53, v54);
  swift_release(v55);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 23) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v56 = v144;
  uint64_t v57 = v145;
  sub_100286330(v143, v144);
  uint64_t v58 = swift_getKeyPath(&unk_1002DFB60);
  LOBYTE(v141) = 4;
  uint64_t v59 = sub_100003A0C(&qword_100368C60);
  uint64_t v60 = sub_1002A5350( &qword_100368C70,  &qword_100368C60,  (void (*)(void))sub_1002A6B6C,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v58, &v141, v59, v60, v56, v57);
  swift_release(v58);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 24) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v61 = v144;
  uint64_t v62 = v145;
  sub_100286330(v143, v144);
  uint64_t v63 = swift_getKeyPath(&unk_1002DFB88);
  LODWORD(v141) = 0;
  BYTE4(v141) = 1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v63, &v141, v34, v88, v61, v62);
  swift_release(v63);
  sub_10001882C(v143);
  *((_BYTE *)v18 + 25) = 0;
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v64 = v144;
  uint64_t v65 = v145;
  sub_100286330(v143, v144);
  uint64_t v66 = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v141 = 0LL;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( v66,  &v141,  &type metadata for Double,  &protocol witness table for Double,  v64,  v65);
  swift_release(v66);
  sub_10001882C(v143);
  sub_100087650((uint64_t)(v18 + 4), (uint64_t)v143);
  uint64_t v67 = v144;
  uint64_t v68 = v145;
  sub_100286330(v143, v144);
  uint64_t v69 = swift_getKeyPath(&unk_1002DFBD8);
  uint64_t v141 = 0LL;
  LOBYTE(v142) = 1;
  uint64_t v70 = sub_100003A0C(&qword_100368C88);
  uint64_t v71 = sub_1002A8004( &qword_100368C90,  &qword_100368C88,  (uint64_t)&protocol witness table for Double,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v69, &v141, v70, v71, v67, v68);
  swift_release(v69);
  uint64_t v72 = sub_10001882C(v143);
  *((_BYTE *)v18 + 26) = 0;
  ObservationRegistrar.init()(v72);
  v143[0] = v18;
  uint64_t v73 = swift_getKeyPath(&unk_1002DFA20);
  uint64_t v138 = v18;
  uint64_t v139 = a1;
  char v140 = a2 & 1;
  uint64_t v74 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v73,  sub_1002B102C,  v137,  (char *)&type metadata for () + 8,  v74);
  swift_release(v73);
  v143[0] = v18;
  uint64_t v75 = swift_getKeyPath(&unk_1002DFA48);
  unint64_t v134 = v18;
  uint64_t v135 = a3;
  uint64_t v136 = a4;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v75,  sub_1002B1124,  v133,  (char *)&type metadata for () + 8,  v74);
  swift_release(v75);
  swift_bridgeObjectRelease(a4);
  v143[0] = v18;
  uint64_t v76 = swift_getKeyPath(&unk_1002DFA70);
  uint64_t v130 = v18;
  int v131 = a5;
  char v132 = BYTE4(a5) & 1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v76,  sub_1002A4FA4,  v129,  (char *)&type metadata for () + 8,  v74);
  swift_release(v76);
  v143[0] = v18;
  uint64_t v77 = swift_getKeyPath(&unk_1002DFA98);
  uint64_t v127 = v18;
  char v128 = v94;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v77,  sub_1002B1058,  v126,  (char *)&type metadata for () + 8,  v74);
  swift_release(v77);
  v143[0] = v18;
  uint64_t v78 = swift_getKeyPath(&unk_1002DFAC0);
  uint64_t v123 = v18;
  int v124 = a7;
  char v125 = BYTE4(a7) & 1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v78,  sub_1002A5760,  v122,  (char *)&type metadata for () + 8,  v74);
  swift_release(v78);
  v143[0] = v18;
  uint64_t v79 = swift_getKeyPath(&unk_1002DFAE8);
  uint64_t v119 = v18;
  int v120 = a8;
  char v121 = BYTE4(a8) & 1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v79,  sub_1002A5A24,  v118,  (char *)&type metadata for () + 8,  v74);
  swift_release(v79);
  v143[0] = v18;
  uint64_t v80 = swift_getKeyPath(&unk_1002DFB10);
  unsigned int v116 = v18;
  char v117 = a17;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v80,  sub_1002B106C,  v115,  (char *)&type metadata for () + 8,  v74);
  swift_release(v80);
  v143[0] = v18;
  uint64_t v81 = swift_getKeyPath(&unk_1002DFB38);
  int v113 = v18;
  char v114 = a18;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v81,  sub_1002B1080,  v112,  (char *)&type metadata for () + 8,  v74);
  swift_release(v81);
  v143[0] = v18;
  uint64_t v82 = swift_getKeyPath(&unk_1002DFB60);
  Swift::Double v110 = v18;
  char v111 = v97;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v82,  sub_1002B1094,  v109,  (char *)&type metadata for () + 8,  v74);
  swift_release(v82);
  v143[0] = v18;
  uint64_t v83 = swift_getKeyPath(&unk_1002DFB88);
  char v106 = v18;
  int v107 = a20;
  char v108 = a21 & 1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v83,  sub_1002A7274,  v105,  (char *)&type metadata for () + 8,  v74);
  swift_release(v83);
  if ((a23 & 1) != 0) {
    a22 = 0.0;
  }
  v143[0] = v18;
  uint64_t v85 = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v103 = v18;
  double v104 = a22;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v85,  sub_1002B10A8,  v102,  (char *)&type metadata for () + 8,  v74);
  swift_release(v85);
  v143[0] = v18;
  uint64_t v86 = swift_getKeyPath(&unk_1002DFBD8);
  uint64_t v99 = v18;
  uint64_t v100 = a24;
  char v101 = a25 & 1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v143,  v86,  sub_1002B1040,  v98,  (char *)&type metadata for () + 8,  v74);
  swift_release(v86);
  return v18;
}

uint64_t sub_1002A8EF8@<X0>(void *a1@<X8>)
{
  return sub_1002AB7A0( type metadata accessor for ALWiFiScanRow,  &qword_100368C98,  &qword_100368BB0,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow,  a1);
}

uint64_t ALWiFiScanRow.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 32;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100087650(v3, a1);
}

uint64_t sub_1002A8F68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 32LL;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100087650(v3, a2);
}

uint64_t sub_1002A8FB4(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)(*a2 + 32LL);
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_10001882C(v3);
  sub_1002847C0(v6, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t ALWiFiScanRow.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 32);
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_10001882C(v3);
  sub_1002847C0(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t (*ALWiFiScanRow.persistentBackingData.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess(v1 + 32, v3 + 10, 0LL, 0LL);
  sub_100087650(v1 + 32, (uint64_t)v3);
  return sub_1002A90D8;
}

uint64_t ALWiFiScanRow.__allocating_init(backingData:)(uint64_t a1)
{
  return sub_1002ABA20(a1, (void (*)(uint64_t))ALWiFiScanRow.init(backingData:));
}

void *ALWiFiScanRow.init(backingData:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  v2[7] = sub_100003A0C(&qword_100368C98);
  uint64_t v4 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  *(void *)&__int128 v62 = v3;
  *((void *)&v62 + 1) = v3;
  uint64_t v63 = v4;
  uint64_t v64 = v4;
  v2[8] = swift_getOpaqueTypeConformance2( &v62,  &opaque type descriptor for <<opaque return type of static PersistentModel.createBackingData<A>()>>,  1LL);
  sub_100287740(v2 + 4);
  static PersistentModel.createBackingData<A>()(v3, v3, v4, v4);
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v5 = v64;
  uint64_t v6 = v65;
  sub_100286330(&v62, v64);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA20);
  uint64_t v60 = 0LL;
  LOBYTE(v61) = 1;
  uint64_t v8 = sub_100003A0C(&qword_100368BC0);
  uint64_t v9 = sub_1002A8004( &qword_100368BC8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v60, v8, v9, v5, v6);
  swift_release(KeyPath);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + swift_weakDestroy(v0 + 16) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v10 = v64;
  uint64_t v11 = v65;
  sub_100286330(&v62, v64);
  uint64_t v12 = swift_getKeyPath(&unk_1002DFA48);
  uint64_t v60 = 0LL;
  uint64_t v61 = 0LL;
  uint64_t v13 = sub_100003A0C(&qword_100368BD8);
  uint64_t v14 = sub_1002A8004( &qword_100368BE0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v12, &v60, v13, v14, v10, v11);
  swift_release(v12);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 17) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v15 = v64;
  uint64_t v16 = v65;
  sub_100286330(&v62, v64);
  uint64_t v17 = swift_getKeyPath(&unk_1002DFA70);
  LODWORD(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0;
  BYTE4(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 1;
  uint64_t v18 = sub_100003A0C(&qword_100368BF0);
  uint64_t v58 = sub_1002A8004( &qword_100368BF8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v17, &v60, v18, v58, v15, v16);
  swift_release(v17);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 18) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v19 = v64;
  uint64_t v20 = v65;
  sub_100286330(&v62, v64);
  uint64_t v21 = swift_getKeyPath(&unk_1002DFA98);
  LOBYTE(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 4;
  uint64_t v22 = sub_100003A0C(&qword_100368C08);
  uint64_t v23 = sub_1002A5350( &qword_100368C18,  &qword_100368C08,  (void (*)(void))sub_1002A53B4,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v21, &v60, v22, v23, v19, v20);
  swift_release(v21);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 19) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v24 = v64;
  uint64_t v25 = v65;
  sub_100286330(&v62, v64);
  uint64_t v26 = swift_getKeyPath(&unk_1002DFAC0);
  LODWORD(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0;
  BYTE4(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v26, &v60, v18, v58, v24, v25);
  swift_release(v26);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v27 = v64;
  uint64_t v28 = v65;
  sub_100286330(&v62, v64);
  uint64_t v29 = swift_getKeyPath(&unk_1002DFAE8);
  LODWORD(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0;
  BYTE4(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 1;
  uint64_t v30 = sub_100003A0C(&qword_100368C30);
  uint64_t v31 = sub_1002A8004( &qword_100368C38,  &qword_100368C30,  (uint64_t)&protocol witness table for Float,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v29, &v60, v30, v31, v27, v28);
  swift_release(v29);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 21) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v32 = v64;
  uint64_t v33 = v65;
  sub_100286330(&v62, v64);
  uint64_t v34 = swift_getKeyPath(&unk_1002DFB10);
  LOBYTE(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 2;
  uint64_t v35 = sub_100003A0C(&qword_100368C48);
  uint64_t v36 = sub_1002A8004( &qword_100368C50,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v34, &v60, v35, v36, v32, v33);
  swift_release(v34);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 22) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v37 = v64;
  uint64_t v38 = v65;
  sub_100286330(&v62, v64);
  uint64_t v39 = swift_getKeyPath(&unk_1002DFB38);
  LOBYTE(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 2;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v39, &v60, v35, v36, v37, v38);
  swift_release(v39);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 23) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v40 = v64;
  uint64_t v41 = v65;
  sub_100286330(&v62, v64);
  uint64_t v42 = swift_getKeyPath(&unk_1002DFB60);
  LOBYTE(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 4;
  uint64_t v43 = sub_100003A0C(&qword_100368C60);
  uint64_t v44 = sub_1002A5350( &qword_100368C70,  &qword_100368C60,  (void (*)(void))sub_1002A6B6C,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v42, &v60, v43, v44, v40, v41);
  swift_release(v42);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 24) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v45 = v64;
  uint64_t v46 = v65;
  sub_100286330(&v62, v64);
  uint64_t v47 = swift_getKeyPath(&unk_1002DFB88);
  LODWORD(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 0;
  BYTE4(v6_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = 1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v47, &v60, v18, v58, v45, v46);
  swift_release(v47);
  sub_10001882C(&v62);
  *((_BYTE *)v2 + 25) = 0;
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v48 = v64;
  uint64_t v49 = v65;
  sub_100286330(&v62, v64);
  uint64_t v50 = swift_getKeyPath(&unk_1002DFBB0);
  uint64_t v60 = 0LL;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( v50,  &v60,  &type metadata for Double,  &protocol witness table for Double,  v48,  v49);
  swift_release(v50);
  sub_10001882C(&v62);
  sub_100087650((uint64_t)(v2 + 4), (uint64_t)&v62);
  uint64_t v51 = v64;
  uint64_t v52 = v65;
  sub_100286330(&v62, v64);
  uint64_t v53 = swift_getKeyPath(&unk_1002DFBD8);
  uint64_t v60 = 0LL;
  LOBYTE(v61) = 1;
  uint64_t v54 = sub_100003A0C(&qword_100368C88);
  uint64_t v55 = sub_1002A8004( &qword_100368C90,  &qword_100368C88,  (uint64_t)&protocol witness table for Double,  (uint64_t)&protocol conformance descriptor for <A> A?);
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(v53, &v60, v54, v55, v51, v52);
  swift_release(v53);
  uint64_t v56 = sub_10001882C(&v62);
  *((_BYTE *)v2 + 26) = 0;
  ObservationRegistrar.init()(v56);
  *(_DWORD *)((char *)v2 + 23) = 0;
  v2[2] = 0LL;
  sub_100087650((uint64_t)a1, (uint64_t)&v62);
  swift_beginAccess(v2 + 4, &v60, 33LL, 0LL);
  sub_10001882C(v2 + 4);
  sub_1002847C0(&v62, (uint64_t)(v2 + 4));
  swift_endAccess(&v60);
  sub_10001882C(a1);
  return v2;
}

uint64_t sub_1002A9888(uint64_t a1)
{
  return sub_1002ABB94( a1,  (uint64_t)&OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar,  &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t sub_1002A98AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002ABC24( a1,  a2,  a3,  a4,  (uint64_t)&OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar,  &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t ALWiFiScanRow.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t ALWiFiScanRow.__deallocating_deinit()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t sub_1002A9984(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  sub_100286330(v8, v9);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v7 = a1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( KeyPath,  &v7,  &type metadata for UInt64,  &protocol witness table for UInt64,  v3,  v4);
  swift_release(KeyPath);
  return sub_10001882C(v8);
}

uint64_t sub_1002A9A20()
{
  uint64_t v6 = v0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v2 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v4 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v6, v3, v4, &protocol witness table for UInt64);
  swift_release(v3);
  return v6;
}

uint64_t sub_1002A9AFC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v6 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v8, v5, v6, &protocol witness table for UInt64);
  uint64_t result = swift_release(v5);
  *a2 = v8;
  return result;
}

uint64_t sub_1002A9BE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v7 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  __int128 v6[2] = v7;
  void v6[3] = v2;
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v7,  KeyPath,  sub_1002B10BC,  v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002A9C84(uint64_t a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v7 = v1;
  uint64_t v8 = a1;
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v9,  KeyPath,  sub_1002B048C,  &v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002A9D28(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v6 = a2;
  uint64_t v4 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v6, v4, &protocol witness table for UInt64);
  return swift_release(KeyPath);
}

void (*sub_1002A9DA8(void *a1))(uint64_t **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  _OWORD v4[2] = v2;
  v4[3] = v5;
  v4[1] = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v7 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  void v4[4] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 1, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFC00);
  uint64_t v9 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(v4 + 1, v8, v9, &protocol witness table for UInt64);
  swift_release(v8);
  *uint64_t v4 = v4[1];
  return sub_1002A9EB4;
}

void sub_1002A9EB4(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = *a1;
  v5[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  void v7[2] = v4;
  void v7[3] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v5 + 1,  KeyPath,  sub_1002B10BC,  v7,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t sub_1002A9F7C(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1002A9F88(a1, a3, a2, (uint64_t)&unk_1002DFC28);
}

uint64_t sub_1002A9F88(uint64_t a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  sub_100286330(v11, v12);
  uint64_t KeyPath = swift_getKeyPath(a4);
  double v10 = a2;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( KeyPath,  &v10,  &type metadata for Double,  &protocol witness table for Double,  v6,  v7);
  swift_release(KeyPath);
  return sub_10001882C(v11);
}

double sub_1002AA020()
{
  double v6 = v0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v2 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v4 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v6, v3, v4, &protocol witness table for Double);
  swift_release(v3);
  return v6;
}

double sub_1002AA0FC@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  double v8 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v6 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v8, v5, v6, &protocol witness table for Double);
  swift_release(v5);
  double result = v8;
  *a2 = v8;
  return result;
}

uint64_t sub_1002AA1E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v7 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC28);
  __int128 v6[2] = v7;
  void v6[3] = v2;
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v7,  KeyPath,  sub_1002B10D0,  v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002AA290(double a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v7 = v1;
  double v8 = a1;
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v9,  KeyPath,  sub_1002B04B4,  &v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002AA340( double a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  double v13 = a1;
  uint64_t v11 = sub_10000FD98(a4, a5, a6);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v13, v11, &protocol witness table for Double);
  return swift_release(KeyPath);
}

void (*sub_1002AA3D0(void *a1))(uint64_t **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  _OWORD v4[2] = v2;
  v4[3] = v5;
  v4[1] = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v7 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  void v4[4] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4 + 1, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFC28);
  uint64_t v9 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(v4 + 1, v8, v9, &protocol witness table for Double);
  swift_release(v8);
  *uint64_t v4 = v4[1];
  return sub_1002AA4DC;
}

void sub_1002AA4DC(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[2];
  uint64_t v5 = *a1;
  v5[1] = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC28);
  void v7[2] = v4;
  void v7[3] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v5 + 1,  KeyPath,  sub_1002B10D0,  v7,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t sub_1002AA5A8(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1002AA948( a1,  a2,  a3,  (uint64_t)&unk_1002DFC50,  (uint64_t)&type metadata for UInt8,  (uint64_t)&protocol witness table for UInt8);
}

uint64_t sub_1002AA5C4()
{
  return sub_1002AAA04((uint64_t)&unk_1002DFC50, (uint64_t)&protocol witness table for UInt8);
}

uint64_t sub_1002AA5D8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002AAAEC(a1, (uint64_t)&unk_1002DFC50, (uint64_t)&protocol witness table for UInt8, a2);
}

uint64_t sub_1002AA5EC(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002AA600(a1, a2, a3, a4, (uint64_t)&unk_1002DFC50, (uint64_t)sub_1002B10E4);
}

uint64_t sub_1002AA600(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = *a1;
  uint64_t v13 = *a2;
  uint64_t KeyPath = swift_getKeyPath(a5);
  void v11[2] = v13;
  char v12 = v7;
  uint64_t v9 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v13,  KeyPath,  a6,  v11,  (char *)&type metadata for () + 8,  v9);
  return swift_release(KeyPath);
}

uint64_t sub_1002AA6AC(char a1)
{
  return sub_1002AA6C0(a1, (uint64_t)&unk_1002DFC50, (uint64_t)sub_1002B0500);
}

uint64_t sub_1002AA6C0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v10 = v3;
  char v11 = a1;
  uint64_t v7 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v12,  KeyPath,  a3,  &v9,  (char *)&type metadata for () + 8,  v7);
  return swift_release(KeyPath);
}

void (*sub_1002AA76C(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC50);
  uint64_t v7 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFC50);
  uint64_t v9 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, &protocol witness table for UInt8);
  swift_release(v8);
  *((_BYTE *)v4 + 32) = *(_BYTE *)v4;
  return sub_1002AA86C;
}

void sub_1002AA86C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC50);
  __int128 v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B10E4,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t sub_1002AA92C(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1002AA948( a1,  a2,  a3,  (uint64_t)&unk_1002DFC78,  (uint64_t)&type metadata for Int8,  (uint64_t)&protocol witness table for Int8);
}

uint64_t sub_1002AA948(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = v16;
  uint64_t v11 = v17;
  sub_100286330(v15, v16);
  uint64_t KeyPath = swift_getKeyPath(a4);
  char v14 = a1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)(KeyPath, &v14, a5, a6, v10, v11);
  swift_release(KeyPath);
  return sub_10001882C(v15);
}

uint64_t sub_1002AA9F0()
{
  return sub_1002AAA04((uint64_t)&unk_1002DFC78, (uint64_t)&protocol witness table for Int8);
}

uint64_t sub_1002AAA04(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = v2;
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v6 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v6);
  swift_release(KeyPath);
  uint64_t v7 = swift_getKeyPath(a1);
  uint64_t v8 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v10, v7, v8, a2);
  swift_release(v7);
  return v10;
}

uint64_t sub_1002AAAD8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1002AAAEC(a1, (uint64_t)&unk_1002DFC78, (uint64_t)&protocol witness table for Int8, a2);
}

uint64_t sub_1002AAAEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v13 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v8 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v8);
  swift_release(KeyPath);
  uint64_t v9 = swift_getKeyPath(a2);
  uint64_t v10 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v12, v9, v10, a3);
  uint64_t result = swift_release(v9);
  *a4 = v12;
  return result;
}

uint64_t sub_1002AABD4(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1002AA600(a1, a2, a3, a4, (uint64_t)&unk_1002DFC78, (uint64_t)sub_1002B10F8);
}

uint64_t sub_1002AABE8(char a1)
{
  return sub_1002AA6C0(a1, (uint64_t)&unk_1002DFC78, (uint64_t)sub_1002B053C);
}

uint64_t sub_1002AABFC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  char v9 = a2;
  uint64_t v7 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v9, v7, a4);
  return swift_release(KeyPath);
}

void (*sub_1002AAC7C(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC78);
  uint64_t v7 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFC78);
  uint64_t v9 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, &protocol witness table for Int8);
  swift_release(v8);
  *((_BYTE *)v4 + 32) = *(_BYTE *)v4;
  return sub_1002AAD7C;
}

void sub_1002AAD7C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC78);
  __int128 v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B10F8,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t sub_1002AAE3C(char a1, uint64_t a2)
{
  uint64_t v3 = v9;
  uint64_t v4 = v10;
  sub_100286330(v8, v9);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  char v7 = a1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( KeyPath,  &v7,  &type metadata for Bool,  &protocol witness table for Bool,  v3,  v4);
  swift_release(KeyPath);
  return sub_10001882C(v8);
}

uint64_t sub_1002AAED8()
{
  uint64_t v7 = v0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v2 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v4 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v6, v3, v4, &protocol witness table for Bool);
  swift_release(v3);
  return v6;
}

uint64_t sub_1002AAFB4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v9 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v6 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(&v8, v5, v6, &protocol witness table for Bool);
  uint64_t result = swift_release(v5);
  *a2 = v8;
  return result;
}

uint64_t sub_1002AB098(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  __int128 v6[2] = v8;
  char v7 = v2;
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v8,  KeyPath,  sub_1002B110C,  v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002AB140(char a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v7 = v1;
  char v8 = a1;
  uint64_t v4 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v9,  KeyPath,  sub_1002B0578,  &v6,  (char *)&type metadata for () + 8,  v4);
  return swift_release(KeyPath);
}

uint64_t sub_1002AB1E8(uint64_t a1, char a2)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  char v6 = a2;
  uint64_t v4 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.setValue<A>(forKey:to:)(KeyPath, &v6, v4, &protocol witness table for Bool);
  return swift_release(KeyPath);
}

void (*sub_1002AB268(void *a1))(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  uint64_t v5 = OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  v4[1] = v2;
  _OWORD v4[2] = v5;
  *uint64_t v4 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v7 = sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  v4[3] = v7;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v7);
  swift_release(KeyPath);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFCA0);
  uint64_t v9 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  PersistentModel.getValue<A>(forKey:)(v4, v8, v9, &protocol witness table for Bool);
  swift_release(v8);
  *((_BYTE *)v4 + 32) = *(_BYTE *)v4;
  return sub_1002AB368;
}

void sub_1002AB368(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(_BYTE *)(*(void *)a1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 8LL);
  **(void **)a1 = v4;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFCA0);
  __int128 v6[2] = v4;
  char v7 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( v1,  KeyPath,  sub_1002B110C,  v6,  (char *)&type metadata for () + 8,  v3);
  swift_release(KeyPath);
  free(v1);
}

uint64_t sub_1002AB428(uint64_t a1, char a2, char a3, char a4, double a5)
{
  uint64_t v11 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  sub_1002AB49C(a1, a2, a3, a4, a5);
  return v11;
}

void *sub_1002AB49C(uint64_t a1, char a2, char a3, char a4, double a5)
{
  char v6 = v5;
  uint64_t v12 = *v5;
  void v6[5] = sub_100003A0C(&qword_100368CB0);
  uint64_t v13 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  v32[0] = v12;
  v32[1] = v12;
  v32[2] = v13;
  uint64_t v33 = v13;
  void v6[6] = swift_getOpaqueTypeConformance2( v32,  &opaque type descriptor for <<opaque return type of static PersistentModel.createBackingData<A>()>>,  1LL);
  sub_100287740(v6 + 2);
  uint64_t v14 = static PersistentModel.createBackingData<A>()(v12, v12, v13, v13);
  ObservationRegistrar.init()(v14);
  sub_100087650((uint64_t)(v6 + 2), (uint64_t)v32);
  uint64_t v15 = v33;
  uint64_t v16 = v34;
  sub_100286330(v32, v33);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  double v31 = *(double *)&a1;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( KeyPath,  &v31,  &type metadata for UInt64,  &protocol witness table for UInt64,  v15,  v16);
  swift_release(KeyPath);
  sub_10001882C(v32);
  sub_100087650((uint64_t)(v6 + 2), (uint64_t)v32);
  uint64_t v18 = v33;
  uint64_t v19 = v34;
  sub_100286330(v32, v33);
  uint64_t v20 = swift_getKeyPath(&unk_1002DFC28);
  double v31 = a5;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( v20,  &v31,  &type metadata for Double,  &protocol witness table for Double,  v18,  v19);
  swift_release(v20);
  sub_10001882C(v32);
  sub_100087650((uint64_t)(v6 + 2), (uint64_t)v32);
  uint64_t v21 = v33;
  uint64_t v22 = v34;
  sub_100286330(v32, v33);
  uint64_t v23 = swift_getKeyPath(&unk_1002DFC50);
  LOBYTE(v31) = a2;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( v23,  &v31,  &type metadata for UInt8,  &protocol witness table for UInt8,  v21,  v22);
  swift_release(v23);
  sub_10001882C(v32);
  sub_100087650((uint64_t)(v6 + 2), (uint64_t)v32);
  uint64_t v24 = v33;
  uint64_t v25 = v34;
  sub_100286330(v32, v33);
  uint64_t v26 = swift_getKeyPath(&unk_1002DFC78);
  LOBYTE(v31) = a3;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( v26,  &v31,  &type metadata for Int8,  &protocol witness table for Int8,  v24,  v25);
  swift_release(v26);
  sub_10001882C(v32);
  sub_100087650((uint64_t)(v6 + 2), (uint64_t)v32);
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  sub_100286330(v32, v33);
  uint64_t v29 = swift_getKeyPath(&unk_1002DFCA0);
  LOBYTE(v31) = a4;
  dispatch thunk of BackingData.setValue<A>(forKey:to:)( v29,  &v31,  &type metadata for Bool,  &protocol witness table for Bool,  v27,  v28);
  swift_release(v29);
  sub_10001882C(v32);
  return v6;
}

uint64_t sub_1002AB77C@<X0>(void *a1@<X8>)
{
  return sub_1002AB7A0( type metadata accessor for ALBTScanRow,  &qword_100368CB0,  &qword_100368CA8,  (uint64_t)&protocol conformance descriptor for ALBTScanRow,  a1);
}

uint64_t sub_1002AB7A0@<X0>( uint64_t (*a1)(uint64_t)@<X0>, uint64_t *a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = a1(0LL);
  a5[3] = sub_100003A0C(a2);
  uint64_t v11 = sub_10000FD98(a3, a1, a4);
  v13[0] = v10;
  v13[1] = v10;
  void v13[2] = v11;
  v13[3] = v11;
  a5[4] = swift_getOpaqueTypeConformance2( v13,  &opaque type descriptor for <<opaque return type of static PersistentModel.createBackingData<A>()>>,  1LL);
  sub_100287740(a5);
  return static PersistentModel.createBackingData<A>()(v10, v10, v11, v11);
}

uint64_t ALBTScanRow.persistentBackingData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + 16;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100087650(v3, a1);
}

uint64_t sub_1002AB89C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 16LL;
  swift_beginAccess(v3, v5, 0LL, 0LL);
  return sub_100087650(v3, a2);
}

uint64_t sub_1002AB8E8(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)(*a2 + 16LL);
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_10001882C(v3);
  sub_1002847C0(v6, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t ALBTScanRow.persistentBackingData.setter(__int128 *a1)
{
  uint64_t v3 = (void *)(v1 + 16);
  swift_beginAccess(v3, v5, 33LL, 0LL);
  sub_10001882C(v3);
  sub_1002847C0(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t (*ALBTScanRow.persistentBackingData.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess(v1 + 16, v3 + 10, 0LL, 0LL);
  sub_100087650(v1 + 16, (uint64_t)v3);
  return sub_1002ABA0C;
}

uint64_t ALBTScanRow.__allocating_init(backingData:)(uint64_t a1)
{
  return sub_1002ABA20(a1, (void (*)(uint64_t))ALBTScanRow.init(backingData:));
}

uint64_t sub_1002ABA20(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  a2(a1);
  return v5;
}

void *ALBTScanRow.init(backingData:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[5] = sub_100003A0C(&qword_100368CB0);
  uint64_t v5 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  *(void *)&__int128 v9 = v4;
  *((void *)&v9 + 1) = v4;
  uint64_t v10 = v5;
  uint64_t v11 = v5;
  v2[6] = swift_getOpaqueTypeConformance2( &v9,  &opaque type descriptor for <<opaque return type of static PersistentModel.createBackingData<A>()>>,  1LL);
  sub_100287740(v2 + 2);
  uint64_t v6 = static PersistentModel.createBackingData<A>()(v4, v4, v5, v5);
  ObservationRegistrar.init()(v6);
  sub_100087650((uint64_t)a1, (uint64_t)&v9);
  swift_beginAccess(v2 + 2, v8, 33LL, 0LL);
  sub_10001882C(v2 + 2);
  sub_1002847C0(&v9, (uint64_t)(v2 + 2));
  swift_endAccess(v8);
  sub_10001882C(a1);
  return v2;
}

uint64_t sub_1002ABB70(uint64_t a1)
{
  return sub_1002ABB94( a1,  (uint64_t)&OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar,  &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002ABB94( uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6 = sub_10000FD98(a3, a4, a5);
  return ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, a1, v6);
}

uint64_t sub_1002ABBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1002ABC24( a1,  a2,  a3,  a4,  (uint64_t)&OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar,  &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002ABC24( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(uint64_t), uint64_t a8)
{
  uint64_t v12 = sub_10000FD98(a6, a7, a8);
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, a1, a2, a3, a4, v12);
}

uint64_t ALBTScanRow.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return v0;
}

uint64_t ALBTScanRow.__deallocating_deinit()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC8ALDaemon11ALBTScanRow___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar(0LL);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

double sub_1002ABD5C()
{
  return *(double *)(v0 + 32);
}

uint64_t sub_1002ABD8C(double a1)
{
  uint64_t result = swift_beginAccess(v1 + 32, v4, 1LL, 0LL);
  *(double *)(v1 + 3sub_10001882C(v0 + 2) = a1;
  return result;
}

void *sub_1002ABDC8(uint64_t a1)
{
  return &j__swift_endAccess;
}

uint64_t sub_1002ABE04()
{
  uint64_t v1 = swift_allocObject(v0, 40LL, 7LL);
  sub_1002ABE38();
  return v1;
}

void sub_1002ABE38()
{
  void (*v38)(__int128 *__return_ptr, unint64_t, unint64_t, void *);
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  os_log_s *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void (*v82)(char *, uint64_t);
  double *v83;
  uint64_t v84;
  void (*v85)(__int128 *__return_ptr, unint64_t, unint64_t, void *);
  double v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  double *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, unint64_t, uint64_t);
  uint64_t v102;
  char *v103;
  char *v104;
  char v105[24];
  void v106[3];
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v1 = type metadata accessor for Logger(0LL);
  uint64_t v102 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  char v97 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2);
  unint64_t v92 = (uint64_t)&v87 - v4;
  uint64_t v5 = type metadata accessor for ModelConfiguration.CloudKitDatabase(0LL);
  __chkstk_darwin(v5);
  uint64_t v96 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for ModelConfiguration(0LL);
  uint64_t v98 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v103 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v95 = (char *)&v87 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v87 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v87 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v87 - v21;
  char v94 = (double *)v0;
  v0[2] = 0LL;
  uint64_t v23 = v0 + 2;
  v0[3] = 0LL;
  uint64_t v87 = v0 + 3;
  v0[4] = 0LL;
  id v24 = [(id)objc_opt_self(NSFileManager) defaultManager];
  id v25 = [v24 URLsForDirectory:5 inDomains:1];

  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v9);
  if (!*(void *)(v26 + 16))
  {
    __break(1u);
    goto LABEL_25;
  }

  double v104 = v17;
  uint64_t v100 = v1;
  unint64_t v27 = v26 + ((*(unsigned __int8 *)(v10 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  char v101 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
  v101(v22, v27, v9);
  swift_bridgeObjectRelease(v26);
  URL.appendingPathComponent(_:isDirectory:)(0x736568636143LL, 0xE600000000000000LL, 1LL);
  uint64_t v28 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  id v29 = [v28 mainBundle];
  id v30 = [v29 infoDictionary];

  if (!v30)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    return;
  }

  uint64_t v31 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v30,  &type metadata for String,  (char *)&type metadata for Any + 8,  &protocol witness table for String);

  if (*(void *)(v31 + 16) && (unint64_t v32 = sub_10028F8EC(0xD000000000000012LL, 0x80000001002F5B40LL), (v33 & 1) != 0))
  {
    sub_10001884C(*(void *)(v31 + 56) + 32 * v32, (uint64_t)&v109);
  }

  else
  {
    uint64_t v109 = 0u;
    Swift::Double v110 = 0u;
  }

  uint64_t v89 = v10;
  uint64_t v90 = v22;
  uint64_t v99 = v20;
  uint64_t v91 = v7;
  swift_bridgeObjectRelease(v31);
  if (!*((void *)&v110 + 1)) {
    goto LABEL_26;
  }
  sub_100299FDC(&v109, &v111);
  swift_dynamicCast(v106, &v111, (char *)&type metadata for Any + 8, &type metadata for String, 7LL);
  uint64_t v34 = v106[0];
  uint64_t v35 = v106[1];
  uint64_t v36 = sub_1002990B8();
  uint64_t v37 = *v36;
  uint64_t v38 = *(void (**)(__int128 *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v36
                                                                                                  + 112LL);
  swift_retain(*v36);
  v38(&v111, 0xD000000000000010LL, 0x80000001002F5B60LL, &type metadata for String);
  swift_release(v37);
  uint64_t v39 = *((void *)&v111 + 1);
  if (*((void *)&v111 + 1))
  {
    uint64_t v40 = v111;
    swift_bridgeObjectRelease(v35);
  }

  else
  {
    *(void *)&uint64_t v109 = v34;
    *((void *)&v109 + 1) = v35;
    swift_bridgeObjectRetain(v35);
    v41._countAndFlagsBits = 0x336C71732E64735FLL;
    v41._object = (void *)0xE800000000000000LL;
    String.append(_:)(v41);
    swift_bridgeObjectRelease(v35);
    uint64_t v39 = *((void *)&v109 + 1);
    uint64_t v40 = v109;
  }

  uint64_t v42 = v98;
  URL.appendingPathComponent(_:)(v40, v39);
  swift_bridgeObjectRelease(v39);
  uint64_t v43 = [v28 mainBundle];
  uint64_t v44 = [v43 bundleIdentifier];

  uint64_t v88 = v36;
  if (v44)
  {
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
    uint64_t v47 = v46;
  }

  else
  {
    uint64_t v45 = 0LL;
    uint64_t v47 = 0LL;
  }

  uint64_t v48 = v95;
  uint64_t v49 = v104;
  uint64_t v50 = ((uint64_t (*)(char *, char *, uint64_t))v101)(v95, v104, v9);
  uint64_t v51 = v96;
  static ModelConfiguration.CloudKitDatabase.automatic.getter(v50);
  uint64_t v52 = v103;
  ModelConfiguration.init(_:schema:url:allowsSave:cloudKitDatabase:)(v45, v47, 0LL, v48, 1LL, v51);
  type metadata accessor for ModelContainer(0LL);
  uint64_t v53 = sub_100003A0C(&qword_100368CB8);
  uint64_t v54 = swift_allocObject(v53, 64LL, 7LL);
  *(_OWORD *)(v54 + swift_weakDestroy(v0 + 16) = xmmword_1002B3340;
  uint64_t v55 = type metadata accessor for ALWiFiScanRow(0LL);
  uint64_t v56 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  *(void *)(v54 + 3sub_10001882C(v0 + 2) = v55;
  *(void *)(v54 + 4_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v56;
  uint64_t v57 = type metadata accessor for ALBTScanRow(0LL);
  uint64_t v58 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  *(void *)(v54 + 48) = v57;
  *(void *)(v54 + 56) = v58;
  uint64_t v59 = sub_100003A0C(&qword_100368CC0);
  uint64_t v60 = swift_allocObject(v59, 72LL, 7LL);
  *(_OWORD *)(v60 + swift_weakDestroy(v0 + 16) = xmmword_1002BAD60;
  uint64_t v61 = v91;
  *(void *)(v60 + 56) = v91;
  *(void *)(v60 + 6sub_10001882C(v0 + 4) = sub_10000FD98( &qword_100368CC8,  (uint64_t (*)(uint64_t))&type metadata accessor for ModelConfiguration,  (uint64_t)&protocol conformance descriptor for ModelConfiguration);
  __int128 v62 = sub_100287740((void *)(v60 + 32));
  (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v62, v52, v61);
  uint64_t v63 = ModelContainer.__allocating_init(for:configurations:)(v54, v60);
  swift_beginAccess(v23, v105, 1LL, 0LL);
  uint64_t v64 = *v23;
  *uint64_t v23 = v63;
  swift_release(v64);
  uint64_t v65 = (uint64_t)v97;
  swift_beginAccess(v23, &v111, 0LL, 0LL);
  uint64_t v66 = *v23;
  if (*v23)
  {
    uint64_t v67 = type metadata accessor for ModelContext(0LL);
    swift_allocObject(v67, *(unsigned int *)(v67 + 48), *(unsigned __int16 *)(v67 + 52));
    uint64_t v68 = swift_retain(v66);
    uint64_t v69 = ModelContext.init(_:)(v68);
    uint64_t v70 = v87;
    swift_beginAccess(v87, v106, 1LL, 0LL);
    uint64_t v71 = *v70;
    void *v70 = v69;
    swift_release(v71);
  }

  else
  {
    uint64_t v72 = v92;
    corelog.getter(v92);
    Logger._fault(_:function:file:line:)( (uint64_t (*)(void))sub_1002AC8BC,  0LL,  (uint64_t *)"init()",  6LL,  2,  (unint64_t)"/Library/Caches/com.apple.xbs/Sources/AONLoc/Daemon/ALDatabase.swift",  68LL,  2);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v72, v100);
  }

  uint64_t v73 = v93;
  corelog.getter(v65);
  uint64_t v74 = ((uint64_t (*)(char *, char *, uint64_t))v101)(v73, v49, v9);
  uint64_t v75 = (os_log_s *)Logger.logObject.getter(v74);
  uint64_t v76 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v78 = swift_slowAlloc(32LL, -1LL);
    *(void *)&uint64_t v109 = v78;
    *(_DWORD *)uint64_t v77 = 136446210;
    uint64_t v79 = URL.absoluteString.getter();
    uint64_t v81 = v80;
    int v107 = sub_1000181EC(v79, v80, (uint64_t *)&v109);
    uint64_t v42 = v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v107, &v108, v77 + 4, v77 + 12);
    swift_bridgeObjectRelease(v81);
    uint64_t v82 = *(void (**)(char *, uint64_t))(v89 + 8);
    v82(v73, v9);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "Database file in use: %{public}s", v77, 0xCu);
    swift_arrayDestroy(v78, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v78, -1LL, -1LL);
    swift_slowDealloc(v77, -1LL, -1LL);

    uint64_t v49 = v104;
    (*(void (**)(char *, uint64_t))(v102 + 8))(v97, v100);
  }

  else
  {
    uint64_t v82 = *(void (**)(char *, uint64_t))(v89 + 8);
    v82(v73, v9);

    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v65, v100);
  }

  uint64_t v83 = v94;
  uint64_t v84 = *v88;
  uint64_t v85 = *(void (**)(__int128 *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v88
                                                                                                  + 112LL);
  swift_retain(*v88);
  v85(&v109, 0xD000000000000016LL, 0x80000001002F5BD0LL, &type metadata for Double);
  swift_release(v84);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v103, v61);
  v82(v49, v9);
  v82(v99, v9);
  v82(v90, v9);
  if (BYTE8(v109)) {
    uint64_t v86 = 24.0;
  }
  else {
    uint64_t v86 = *(double *)&v109;
  }
  swift_beginAccess(v83 + 4, &v109, 1LL, 0LL);
  v83[4] = v86;
}

unint64_t sub_1002AC8BC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1002AC8D8(uint64_t *a1)
{
  uint64_t v141 = a1;
  uint64_t v2 = type metadata accessor for Logger(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100003A0C(&qword_1003517B8);
  uint64_t v7 = __chkstk_darwin(v6);
  int v131 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7);
  uint64_t v130 = (char *)&v116 - v9;
  uint64_t v10 = sub_100003A0C((uint64_t *)&unk_100368080);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11);
  char v132 = (char *)&v116 - v14;
  uint64_t v15 = sub_100003A0C(&qword_100355280);
  uint64_t v16 = __chkstk_darwin(v15);
  int v124 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16);
  uint64_t v133 = (char *)&v116 - v18;
  uint64_t v19 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v134 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  char v140 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = sub_100003A0C((uint64_t *)&unk_100368070);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v139 = (char *)&v116 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 128LL))(v26);
  if (!result) {
    return result;
  }
  uint64_t v29 = result;
  ALWiFiNotification._scanResult.getter(result);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1LL, v24) == 1)
  {
    uint64_t v30 = sub_100015764((uint64_t)v23, (uint64_t *)&unk_100368070);
LABEL_26:
    dispatch thunk of ModelContext.save()(v30);
    return swift_release(v29);
  }

  uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v139, v23, v24);
  uint64_t v32 = ALWiFiScanResult._accessPoints.getter(v31);
  uint64_t v33 = *(void *)(v32 + 16);
  if (!v33)
  {
    swift_bridgeObjectRelease(v32);
LABEL_25:
    uint64_t v30 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v139, v24);
    goto LABEL_26;
  }

  uint64_t v118 = v25;
  uint64_t v119 = v24;
  uint64_t v123 = v13;
  int v120 = v5;
  uint64_t v121 = v3;
  uint64_t v122 = v2;
  unint64_t v34 = (*(unsigned __int8 *)(v134 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
  uint64_t v117 = v32;
  unint64_t v35 = v32 + v34;
  uint64_t v125 = *(void *)(v134 + 72);
  uint64_t v129 = *(void (**)(char *))(v134 + 16);
  uint64_t v127 = v29;
  char v128 = (char *)&type metadata for () + 8;
  uint64_t v36 = v140;
  uint64_t v126 = v19;
  while (1)
  {
    unint64_t v136 = v35;
    uint64_t v137 = v33;
    v129(v36);
    LOBYTE(v14sub_10001882C(v0 + 2) = 4;
    v144[0] = 4;
    uint64_t v43 = type metadata accessor for ALWiFiScanRow(0LL);
    uint64_t v44 = *(unsigned int *)(v43 + 48);
    uint64_t v45 = *(unsigned __int16 *)(v43 + 52);
    uint64_t v135 = v43;
    uint64_t v46 = swift_allocObject(v43, v44, v45);
    char v143 = 1;
    uint64_t v55 = ALWiFiScanRow.init(mac:ssid:rssiDb:mode:channel:ageSec:isAppleHotspot:isMoving:band:frequencyKhz:cfAbsoluteTimeSec:machContinuousTimeSec:)( 0LL,  1,  0LL,  0LL,  0x100000000LL,  (char *)&v142,  0x100000000LL,  0x100000000LL,  v47,  v48,  v49,  v50,  v51,  v52,  v53,  v54,  2,  2,  v144,  0,  1,  0.0,  1,  0LL,  1);
    ALWiFiScanSingleAccessPoint._mac.getter(v55);
    uint64_t v56 = (uint64_t *)(v46 + OBJC_IVAR____TtC8ALDaemon13ALWiFiScanRow___observationRegistrar);
    uint64_t v142 = v46;
    uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA20);
    uint64_t v141 = &v116;
    __chkstk_darwin(KeyPath);
    uint64_t v58 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
    uint64_t v59 = v128;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v142, KeyPath, sub_1002B102C, &v111, v128, v58);
    uint64_t v60 = swift_release(KeyPath);
    uint64_t v61 = ALWiFiScanSingleAccessPoint._ssid.getter(v60);
    uint64_t v63 = v62;
    uint64_t v142 = v46;
    uint64_t v64 = swift_getKeyPath(&unk_1002DFA48);
    __chkstk_darwin(v64);
    uint64_t v112 = v46;
    double v113 = *(double *)&v61;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v142, v64, sub_1002B1124, &v111, v59, v58);
    swift_release(v64);
    uint64_t v65 = swift_bridgeObjectRelease(v63);
    uint64_t v66 = ALWiFiScanSingleAccessPoint._rssidB.getter(v65);
    uint64_t v142 = v46;
    uint64_t v67 = swift_getKeyPath(&unk_1002DFA70);
    __chkstk_darwin(v67);
    uint64_t v114 = v46;
    LODWORD(v115) = v66;
    BYTE4(v115) = BYTE4(v66) & 1;
    uint64_t v138 = v58;
    uint64_t v141 = v56;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v142, v67, sub_1002A4FA4, &v112, v59, v58);
    uint64_t v68 = swift_release(v67);
    uint64_t v69 = (uint64_t)v133;
    ALWiFiScanSingleAccessPoint._mode.getter(v68);
    uint64_t v70 = type metadata accessor for ALWiFiScanSingleAccessPoint.Mode(0LL);
    uint64_t v71 = *(void *)(v70 - 8);
    uint64_t v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
    LODWORD(v66) = v72(v69, 1LL, v70);
    uint64_t v73 = sub_100015764(v69, &qword_100355280);
    if ((_DWORD)v66 == 1) {
      goto LABEL_13;
    }
    uint64_t v74 = v124;
    ALWiFiScanSingleAccessPoint._mode.getter(v73);
    uint64_t result = v72((uint64_t)v74, 1LL, v70);
    if ((_DWORD)result == 1) {
      break;
    }
    ALWiFiScanSingleAccessPoint.Mode.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v74, v70);
LABEL_13:
    uint64_t v142 = v46;
    uint64_t v75 = swift_getKeyPath(&unk_1002DFA98);
    __chkstk_darwin(v75);
    uint64_t v76 = v138;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v75,  sub_1002B1058,  &v112,  (char *)&type metadata for () + 8,  v138);
    uint64_t v77 = swift_release(v75);
    ALWiFiScanSingleAccessPoint._channel.getter(v77);
    uint64_t v142 = v46;
    uint64_t v78 = swift_getKeyPath(&unk_1002DFAC0);
    __chkstk_darwin(v78);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v78,  sub_1002A5760,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v79 = swift_release(v78);
    uint64_t v80 = ALWiFiScanSingleAccessPoint._ageSec.getter(v79);
    uint64_t v142 = v46;
    uint64_t v81 = swift_getKeyPath(&unk_1002DFAE8);
    __chkstk_darwin(v81);
    LODWORD(v115) = v80;
    BYTE4(v115) = BYTE4(v80) & 1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v81,  sub_1002A5A24,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v82 = swift_release(v81);
    ALWiFiScanSingleAccessPoint._isAph.getter(v82);
    uint64_t v142 = v46;
    uint64_t v83 = swift_getKeyPath(&unk_1002DFB10);
    __chkstk_darwin(v83);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v83,  sub_1002B106C,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v84 = swift_release(v83);
    LOBYTE(v8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = ALWiFiScanSingleAccessPoint._isMoving.getter(v84);
    uint64_t v142 = v46;
    uint64_t v85 = swift_getKeyPath(&unk_1002DFB38);
    __chkstk_darwin(v85);
    uint64_t v114 = v46;
    LOBYTE(v115) = v80;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v85,  sub_1002B1080,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v86 = swift_release(v85);
    uint64_t v87 = (uint64_t)v132;
    ALWiFiScanSingleAccessPoint._band.getter(v86);
    uint64_t v88 = type metadata accessor for ALWiFiScanSingleAccessPoint.Band(0LL);
    uint64_t v89 = *(void *)(v88 - 8);
    uint64_t v90 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
    LODWORD(v8_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v90(v87, 1LL, v88);
    uint64_t v91 = sub_100015764(v87, (uint64_t *)&unk_100368080);
    if ((_DWORD)v80 != 1)
    {
      unint64_t v92 = v123;
      ALWiFiScanSingleAccessPoint._band.getter(v91);
      uint64_t result = v90((uint64_t)v92, 1LL, v88);
      if ((_DWORD)result == 1) {
        goto LABEL_29;
      }
      ALWiFiScanSingleAccessPoint.Band.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v92, v88);
    }

    uint64_t v142 = v46;
    uint64_t v93 = swift_getKeyPath(&unk_1002DFB60);
    __chkstk_darwin(v93);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v93,  sub_1002B1094,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v94 = swift_release(v93);
    uint64_t v95 = ALWiFiScanSingleAccessPoint._frequencyKhz.getter(v94);
    uint64_t v142 = v46;
    uint64_t v96 = swift_getKeyPath(&unk_1002DFB88);
    __chkstk_darwin(v96);
    uint64_t v114 = v46;
    LODWORD(v115) = v95;
    BYTE4(v115) = BYTE4(v95) & 1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v96,  sub_1002A7274,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v97 = swift_release(v96);
    uint64_t v98 = (uint64_t)v130;
    ALWiFiScanResult._scanTimestamp.getter(v97);
    uint64_t v99 = type metadata accessor for ALTimeStamp(0LL);
    uint64_t v100 = *(void *)(v99 - 8);
    char v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
    uint64_t v102 = v101(v98, 1LL, v99);
    if ((_DWORD)v102 == 1)
    {
      sub_100015764(v98, &qword_1003517B8);
      double v103 = 0.0;
    }

    else
    {
      double v104 = COERCE_DOUBLE(ALTimeStamp.cfAbsoluteTimeSec.getter(v102));
      char v106 = v105;
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v99);
      if ((v106 & 1) != 0) {
        double v103 = 0.0;
      }
      else {
        double v103 = v104;
      }
    }

    uint64_t v142 = v46;
    uint64_t v107 = swift_getKeyPath(&unk_1002DFBB0);
    __chkstk_darwin(v107);
    uint64_t v114 = v46;
    double v115 = v103;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v107,  sub_1002B10A8,  &v112,  (char *)&type metadata for () + 8,  v76);
    uint64_t v108 = swift_release(v107);
    uint64_t v109 = (uint64_t)v131;
    ALWiFiScanResult._scanTimestamp.getter(v108);
    uint64_t v110 = v101(v109, 1LL, v99);
    if ((_DWORD)v110 == 1)
    {
      sub_100015764(v109, &qword_1003517B8);
      double v40 = 0.0;
    }

    else
    {
      double v37 = COERCE_DOUBLE(ALTimeStamp.machContinuousTimeSec.getter(v110));
      char v39 = v38;
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v109, v99);
      if ((v39 & 1) != 0) {
        double v40 = 0.0;
      }
      else {
        double v40 = v37;
      }
    }

    uint64_t v29 = v127;
    uint64_t v142 = v46;
    uint64_t v41 = swift_getKeyPath(&unk_1002DFBD8);
    __chkstk_darwin(v41);
    uint64_t v112 = v46;
    double v113 = v40;
    LOBYTE(v11sub_10001882C(v0 + 4) = 0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)( &v142,  v41,  sub_1002B1040,  &v111,  (char *)&type metadata for () + 8,  v76);
    swift_release(v41);
    uint64_t v42 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
    dispatch thunk of ModelContext.insert<A>(_:)(v46, v135, v42);
    swift_release(v46);
    uint64_t v36 = v140;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v140, v126);
    unint64_t v35 = v136 + v125;
    uint64_t v33 = v137 - 1;
    if (v137 == 1)
    {
      swift_bridgeObjectRelease(v117);
      uint64_t v24 = v119;
      uint64_t v25 = v118;
      goto LABEL_25;
    }
  }

  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1002AD670(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100003A0C(&qword_100368800);
  __chkstk_darwin(v4);
  unsigned int v212 = (char *)&v201 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_100003A0C((uint64_t *)&unk_100368070);
  __chkstk_darwin(v6);
  uint64_t v211 = (char *)&v201 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v221 = type metadata accessor for ALWiFiNotification(0LL);
  uint64_t v220 = *(void *)(v221 - 8);
  uint64_t v8 = __chkstk_darwin(v221);
  int v219 = (char *)&v201 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8);
  uint64_t v218 = (char *)&v201 - v10;
  uint64_t v11 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v11);
  double v210 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v217 = type metadata accessor for ALTimeStamp(0LL);
  uint64_t v216 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v222 = (char *)&v201 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_100003A0C((uint64_t *)&unk_100368080);
  __chkstk_darwin(v14);
  uint64_t v226 = (char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_100003A0C(&qword_100355280);
  __chkstk_darwin(v16);
  double v227 = (char *)&v201 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = type metadata accessor for ALWiFiScanSingleAccessPoint(0LL);
  uint64_t v233 = *(void *)(v18 - 8);
  uint64_t v234 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v232 = (char *)&v201 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v237 = (char *)&v201 - v21;
  uint64_t v215 = type metadata accessor for ALWiFiScanResult(0LL);
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  id v229 = (char *)&v201 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_100003A0C(&qword_100369048);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v201 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_100003A0C(&qword_1003690C0);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v201 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 128LL))(v28);
  if (!v31) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v32 = v31;
  uint64_t v33 = sub_100003A0C(&qword_100368CD0);
  uint64_t v34 = a1;
  uint64_t v35 = *(void *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v25, v34, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v25, 0LL, 1LL, v33);
  uint64_t v36 = type metadata accessor for ALWiFiScanRow(0LL);
  uint64_t v37 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  FetchDescriptor.init(predicate:sortBy:)(v25, &_swiftEmptyArrayStorage, v36, v37);
  uint64_t v236 = v37;
  uint64_t v203 = v32;
  uint64_t v39 = dispatch thunk of ModelContext.fetch<A>(_:)(v30, v36, v37);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  double v40 = 0.0;
  char v238 = (char *)&_swiftEmptyDictionarySingleton;
  uint64_t v41 = *(void *)((v39 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (v41)
  {
    double v213 = v40;
    uint64_t v235 = v41;
    if ((v39 & 0xC000000000000001LL) != 0)
    {
      uint64_t v42 = 0LL;
      uint64_t v43 = (char *)&_swiftEmptyDictionarySingleton;
      __int128 v231 = xmmword_1002DFA00;
      while (1)
      {
        *(double *)&uint64_t v49 = COERCE_DOUBLE(specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v39));
        uint64_t v50 = v42 + 1;
        if (__OFADD__(v42, 1LL)) {
          break;
        }
        double v40 = *(double *)&v49;
        double v240 = *(double *)&v49;
        uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
        uint64_t v52 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v240, KeyPath, v52);
        swift_release(KeyPath);
        uint64_t v53 = swift_getKeyPath(&unk_1002DFBB0);
        PersistentModel.getValue<A>(forKey:)(&v240, v53, v236, &protocol witness table for Double);
        swift_release(v53);
        double v54 = v240;
        unint64_t v56 = sub_1002AFCC8(v240);
        uint64_t v57 = *((void *)v43 + 2);
        BOOL v58 = (v55 & 1) == 0;
        uint64_t v59 = v57 + v58;
        if (__OFADD__(v57, v58)) {
          goto LABEL_35;
        }
        char v60 = v55;
        if (*((void *)v43 + 3) < v59)
        {
          sub_1002AFD94(v59, 1LL);
          uint64_t v61 = v238;
          unint64_t v62 = sub_1002AFCC8(v54);
          if ((v60 & 1) != (v63 & 1)) {
            goto LABEL_113;
          }
          unint64_t v56 = v62;
          uint64_t v43 = v61;
          uint64_t v41 = v235;
        }

        if ((v60 & 1) != 0)
        {
          uint64_t v44 = v43;
          uint64_t v45 = (void *)(*((void *)v43 + 7) + 8 * v56);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          unint64_t v47 = *(void *)((*v45 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v46 = *(void *)((*v45 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v47 >= v46 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1LL);
          }
          uint64_t v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, *(void *)&v40);
          specialized Array._endMutation()(v48);
          uint64_t v43 = v44;
          uint64_t v41 = v235;
        }

        else
        {
          uint64_t v64 = sub_100003A0C((uint64_t *)&unk_100368108);
          *(double *)&uint64_t v65 = COERCE_DOUBLE(swift_allocObject(v64, 40LL, 7LL));
          *(_OWORD *)(v65 + swift_weakDestroy(v0 + 16) = v231;
          *(double *)(v65 + 3sub_10001882C(v0 + 2) = v40;
          double v240 = *(double *)&v65;
          specialized Array._endMutation()(v65);
          double v66 = v240;
          *(void *)&v43[8 * (v56 >> 6) + 64] |= 1LL << v56;
          uint64_t v67 = 8 * v56;
          *(double *)(*((void *)v43 + 6) + v67) = v54;
          *(double *)(*((void *)v43 + 7) + v67) = v66;
          uint64_t v68 = *((void *)v43 + 2);
          BOOL v69 = __OFADD__(v68, 1LL);
          uint64_t v70 = v68 + 1;
          if (v69) {
            goto LABEL_38;
          }
          *((void *)v43 + sub_10001882C(v0 + 2) = v70;
        }

        ++v42;
        if (v50 == v41) {
          goto LABEL_33;
        }
      }

      __break(1u);
LABEL_35:
      __break(1u);
    }

    else
    {
      uint64_t v71 = 0LL;
      uint64_t v43 = (char *)&_swiftEmptyDictionarySingleton;
      __int128 v231 = xmmword_1002DFA00;
      while (1)
      {
        uint64_t v77 = v71 + 1;
        if (__OFADD__(v71, 1LL)) {
          break;
        }
        double v240 = *(double *)(v39 + 8 * v71 + 32);
        double v40 = v240;
        uint64_t v78 = swift_getKeyPath(&unk_1002DFBB0);
        uint64_t v79 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
        swift_retain(*(void *)&v40);
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v240, v78, v79);
        swift_release(v78);
        uint64_t v80 = swift_getKeyPath(&unk_1002DFBB0);
        PersistentModel.getValue<A>(forKey:)(&v240, v80, v236, &protocol witness table for Double);
        swift_release(v80);
        double v81 = v240;
        unint64_t v83 = sub_1002AFCC8(v240);
        uint64_t v84 = *((void *)v43 + 2);
        BOOL v85 = (v82 & 1) == 0;
        uint64_t v86 = v84 + v85;
        if (__OFADD__(v84, v85)) {
          goto LABEL_37;
        }
        char v87 = v82;
        if (*((void *)v43 + 3) < v86)
        {
          sub_1002AFD94(v86, 1LL);
          uint64_t v88 = v238;
          unint64_t v89 = sub_1002AFCC8(v81);
          if ((v87 & 1) != (v90 & 1)) {
            goto LABEL_113;
          }
          unint64_t v83 = v89;
          uint64_t v43 = v88;
          uint64_t v41 = v235;
        }

        if ((v87 & 1) != 0)
        {
          uint64_t v72 = v43;
          uint64_t v73 = (void *)(*((void *)v43 + 7) + 8 * v83);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          unint64_t v75 = *(void *)((*v73 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v74 = *(void *)((*v73 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v75 >= v74 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v74 > 1, v75 + 1, 1LL);
          }
          uint64_t v76 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v75, *(void *)&v40);
          specialized Array._endMutation()(v76);
          uint64_t v43 = v72;
        }

        else
        {
          uint64_t v91 = sub_100003A0C((uint64_t *)&unk_100368108);
          *(double *)&uint64_t v92 = COERCE_DOUBLE(swift_allocObject(v91, 40LL, 7LL));
          *(_OWORD *)(v92 + swift_weakDestroy(v0 + 16) = v231;
          *(double *)(v92 + 3sub_10001882C(v0 + 2) = v40;
          double v240 = *(double *)&v92;
          specialized Array._endMutation()(v92);
          double v93 = v240;
          *(void *)&v43[8 * (v83 >> 6) + 64] |= 1LL << v83;
          uint64_t v94 = 8 * v83;
          *(double *)(*((void *)v43 + 6) + v9sub_10001882C(v0 + 4) = v81;
          *(double *)(*((void *)v43 + 7) + v9sub_10001882C(v0 + 4) = v93;
          uint64_t v95 = *((void *)v43 + 2);
          BOOL v69 = __OFADD__(v95, 1LL);
          uint64_t v96 = v95 + 1;
          if (v69) {
            goto LABEL_39;
          }
          *((void *)v43 + sub_10001882C(v0 + 2) = v96;
        }

        ++v71;
        if (v77 == v41)
        {
LABEL_33:
          swift_bridgeObjectRelease(v39);
          double v40 = v213;
          goto LABEL_45;
        }
      }
    }

    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    if (v39 < 0) {
      uint64_t v97 = v39;
    }
    else {
      uint64_t v97 = v39 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v39);
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter(v97);
    swift_bridgeObjectRelease(v39);
  }

  swift_bridgeObjectRelease(v39);
  uint64_t v43 = (char *)&_swiftEmptyDictionarySingleton;
LABEL_45:
  int64_t v98 = 0LL;
  uint64_t v99 = v43 + 64;
  uint64_t v100 = 1LL << v43[32];
  uint64_t v101 = -1LL;
  if (v100 < 64) {
    uint64_t v101 = ~(-1LL << v100);
  }
  unint64_t v102 = v101 & *((void *)v43 + 8);
  int64_t v103 = (unint64_t)(v100 + 63) >> 6;
  unsigned int v204 = enum case for ALWiFiNotification.ScanType.cached(_:);
  char v38 = &_swiftEmptyArrayStorage;
  uint64_t v207 = v43;
  uint64_t v205 = v43 + 64;
  int64_t v206 = v103;
  if (!v102) {
    goto LABEL_49;
  }
LABEL_48:
  unint64_t v104 = __clz(__rbit64(v102));
  v102 &= v102 - 1;
  for (unint64_t i = v104 | (v98 << 6); ; unint64_t i = __clz(__rbit64(v106)) + (v98 << 6))
  {
    uint64_t v108 = 8 * i;
    double v109 = *(double *)(*((void *)v43 + 6) + v108);
    uint64_t v110 = *(void *)(*((void *)v43 + 7) + v108);
    if ((unint64_t)v110 >> 62)
    {
      if (v110 < 0) {
        uint64_t v113 = *(void *)(*((void *)v43 + 7) + v108);
      }
      else {
        uint64_t v113 = v110 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(v110, 2LL);
      uint64_t v114 = v113;
      uint64_t v43 = v207;
      uint64_t v111 = _CocoaArrayWrapper.endIndex.getter(v114);
      uint64_t v112 = swift_bridgeObjectRelease(v110);
      if (!v111)
      {
LABEL_62:
        swift_bridgeObjectRelease(v110);
        if (v102) {
          goto LABEL_48;
        }
        goto LABEL_49;
      }
    }

    else
    {
      uint64_t v111 = *(void *)((v110 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      uint64_t v112 = swift_bridgeObjectRetain(v110);
      if (!v111) {
        goto LABEL_62;
      }
    }

    int64_t v208 = v98;
    unsigned int v209 = v38;
    double v213 = v40;
    ALWiFiScanResult.init()(v112);
    unint64_t v228 = v110 & 0xC000000000000001LL;
    uint64_t v202 = v110 + 32;
    swift_bridgeObjectRetain(v110);
    uint64_t v115 = 4LL;
    unint64_t v224 = v102;
    uint64_t v223 = v110;
    uint64_t v225 = v111;
    do
    {
      uint64_t v116 = v115 - 4;
      if (v228)
      {
        uint64_t v117 = specialized _ArrayBuffer._getElementSlowPath(_:)(v115 - 4, v110);
        uint64_t v118 = (char *)v117;
        uint64_t v119 = v115 - 3;
        if (__OFADD__(v116, 1LL)) {
          goto LABEL_105;
        }
      }

      else
      {
        uint64_t v118 = *(char **)(v110 + 8 * v115);
        uint64_t v117 = swift_retain(v118);
        uint64_t v119 = v115 - 3;
        if (__OFADD__(v116, 1LL))
        {
LABEL_105:
          __break(1u);
          goto LABEL_106;
        }
      }

      uint64_t v230 = v119;
      ALWiFiScanSingleAccessPoint.init()(v117);
      char v238 = v118;
      uint64_t v120 = swift_getKeyPath(&unk_1002DFA20);
      uint64_t v121 = sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v120, v121);
      swift_release(v120);
      uint64_t v122 = swift_getKeyPath(&unk_1002DFA20);
      uint64_t v123 = sub_1002A8004( &qword_100368BB8,  &qword_100368BC0,  (uint64_t)&protocol witness table for UInt64,  (uint64_t)&protocol conformance descriptor for <A> A?);
      uint64_t v124 = v236;
      PersistentModel.getValue<A>(forKey:)(&v238, v122, v236, v123);
      swift_release(v122);
      ALWiFiScanSingleAccessPoint._mac.setter(v238, v239);
      char v238 = v118;
      uint64_t v125 = swift_getKeyPath(&unk_1002DFA48);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v125, v121);
      swift_release(v125);
      uint64_t v126 = swift_getKeyPath(&unk_1002DFA48);
      uint64_t v127 = sub_1002A8004( &qword_100368BD0,  &qword_100368BD8,  (uint64_t)&protocol witness table for String,  (uint64_t)&protocol conformance descriptor for <A> A?);
      PersistentModel.getValue<A>(forKey:)(&v238, v126, v124, v127);
      swift_release(v126);
      ALWiFiScanSingleAccessPoint._ssid.setter(v238);
      char v238 = v118;
      uint64_t v128 = swift_getKeyPath(&unk_1002DFA70);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v128, v121);
      swift_release(v128);
      uint64_t v129 = swift_getKeyPath(&unk_1002DFA70);
      uint64_t v235 = sub_1002A8004( &qword_100368BE8,  &qword_100368BF0,  (uint64_t)&protocol witness table for Int32,  (uint64_t)&protocol conformance descriptor for <A> A?);
      PersistentModel.getValue<A>(forKey:)(&v238, v129, v124, v235);
      swift_release(v129);
      uint64_t v130 = v238;
      LOBYTE(v238) = BYTE4(v238);
      ALWiFiScanSingleAccessPoint._rssidB.setter(v130 | ((unint64_t)BYTE4(v238) << 32));
      char v238 = v118;
      uint64_t v131 = swift_getKeyPath(&unk_1002DFA98);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v131, v121);
      swift_release(v131);
      uint64_t v132 = swift_getKeyPath(&unk_1002DFA98);
      uint64_t v133 = sub_1002A5350( &qword_100368C00,  &qword_100368C08,  (void (*)(void))sub_1002A5288,  (uint64_t)&protocol conformance descriptor for <A> A?);
      PersistentModel.getValue<A>(forKey:)(&v238, v132, v124, v133);
      swift_release(v132);
      *(void *)&__int128 v231 = v115;
      if (v238 == 4)
      {
        uint64_t v134 = type metadata accessor for ALWiFiScanSingleAccessPoint.Mode(0LL);
        uint64_t v135 = v227;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56LL))(v227, 1LL, 1LL, v134);
      }

      else
      {
        char v238 = v118;
        uint64_t v136 = swift_getKeyPath(&unk_1002DFA98);
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v136, v121);
        swift_release(v136);
        uint64_t v137 = swift_getKeyPath(&unk_1002DFA98);
        PersistentModel.getValue<A>(forKey:)(&v238, v137, v124, v133);
        swift_release(v137);
        uint64_t v135 = v227;
        ALWiFiScanSingleAccessPoint.Mode.init(rawValue:)();
      }

      ALWiFiScanSingleAccessPoint._mode.setter(v135);
      char v238 = v118;
      uint64_t v138 = swift_getKeyPath(&unk_1002DFAC0);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v138, v121);
      swift_release(v138);
      uint64_t v139 = swift_getKeyPath(&unk_1002DFAC0);
      uint64_t v140 = v236;
      PersistentModel.getValue<A>(forKey:)(&v238, v139, v236, v235);
      swift_release(v139);
      uint64_t v141 = v238;
      LOBYTE(v238) = BYTE4(v238);
      ALWiFiScanSingleAccessPoint._channel.setter(v141 | ((unint64_t)BYTE4(v238) << 32));
      char v238 = v118;
      uint64_t v142 = swift_getKeyPath(&unk_1002DFAE8);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v142, v121);
      swift_release(v142);
      uint64_t v143 = swift_getKeyPath(&unk_1002DFAE8);
      uint64_t v144 = sub_1002A8004( &qword_100368C28,  &qword_100368C30,  (uint64_t)&protocol witness table for Float,  (uint64_t)&protocol conformance descriptor for <A> A?);
      PersistentModel.getValue<A>(forKey:)(&v238, v143, v140, v144);
      swift_release(v143);
      uint64_t v145 = v238;
      LOBYTE(v238) = BYTE4(v238);
      ALWiFiScanSingleAccessPoint._ageSec.setter(v145 | ((unint64_t)BYTE4(v238) << 32));
      char v238 = v118;
      uint64_t v146 = swift_getKeyPath(&unk_1002DFB10);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v146, v121);
      swift_release(v146);
      uint64_t v147 = swift_getKeyPath(&unk_1002DFB10);
      uint64_t v148 = sub_1002A8004( &qword_100368C40,  &qword_100368C48,  (uint64_t)&protocol witness table for Bool,  (uint64_t)&protocol conformance descriptor for <A> A?);
      PersistentModel.getValue<A>(forKey:)(&v238, v147, v140, v148);
      swift_release(v147);
      ALWiFiScanSingleAccessPoint._isAph.setter(v238);
      char v238 = v118;
      uint64_t v149 = swift_getKeyPath(&unk_1002DFB38);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v149, v121);
      swift_release(v149);
      uint64_t v150 = swift_getKeyPath(&unk_1002DFB38);
      PersistentModel.getValue<A>(forKey:)(&v238, v150, v140, v148);
      swift_release(v150);
      ALWiFiScanSingleAccessPoint._isMoving.setter(v238);
      char v238 = v118;
      uint64_t v151 = swift_getKeyPath(&unk_1002DFB60);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v151, v121);
      swift_release(v151);
      uint64_t v152 = swift_getKeyPath(&unk_1002DFB60);
      uint64_t v153 = sub_1002A5350( &qword_100368C58,  &qword_100368C60,  (void (*)(void))sub_1002A6868,  (uint64_t)&protocol conformance descriptor for <A> A?);
      PersistentModel.getValue<A>(forKey:)(&v238, v152, v140, v153);
      swift_release(v152);
      if (v238 == 4)
      {
        uint64_t v154 = type metadata accessor for ALWiFiScanSingleAccessPoint.Band(0LL);
        __int128 v155 = v226;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v154 - 8) + 56LL))(v226, 1LL, 1LL, v154);
      }

      else
      {
        char v238 = v118;
        uint64_t v156 = swift_getKeyPath(&unk_1002DFB60);
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v156, v121);
        swift_release(v156);
        uint64_t v157 = swift_getKeyPath(&unk_1002DFB60);
        PersistentModel.getValue<A>(forKey:)(&v238, v157, v140, v153);
        swift_release(v157);
        __int128 v155 = v226;
        ALWiFiScanSingleAccessPoint.Band.init(rawValue:)();
      }

      uint64_t v110 = v223;
      uint64_t v158 = v231;
      uint64_t v159 = v237;
      ALWiFiScanSingleAccessPoint._band.setter(v155);
      char v238 = v118;
      uint64_t v160 = swift_getKeyPath(&unk_1002DFB88);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v160, v121);
      swift_release(v160);
      uint64_t v161 = swift_getKeyPath(&unk_1002DFB88);
      PersistentModel.getValue<A>(forKey:)(&v238, v161, v236, v235);
      swift_release(v161);
      uint64_t v162 = v238;
      LOBYTE(v238) = BYTE4(v238);
      ALWiFiScanSingleAccessPoint._frequencyKhz.setter(v162 | ((unint64_t)BYTE4(v238) << 32));
      (*(void (**)(char *, char *, uint64_t))(v233 + 16))(v232, v159, v234);
      uint64_t v163 = (void (*)(char **, void))ALWiFiScanResult._accessPoints.modify(&v238);
      uint64_t v165 = v164;
      unint64_t v166 = *v164;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v164);
      *uint64_t v165 = v166;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v166 = sub_100017FE0( 0,  *(void *)(v166 + 16) + 1LL,  1,  v166,  &qword_1003682F0,  (uint64_t (*)(void))&type metadata accessor for ALWiFiScanSingleAccessPoint);
        *uint64_t v165 = v166;
      }

      unint64_t v169 = *(void *)(v166 + 16);
      unint64_t v168 = *(void *)(v166 + 24);
      if (v169 >= v168 >> 1)
      {
        unint64_t v166 = sub_100017FE0( v168 > 1,  v169 + 1,  1,  v166,  &qword_1003682F0,  (uint64_t (*)(void))&type metadata accessor for ALWiFiScanSingleAccessPoint);
        *uint64_t v165 = v166;
      }

      unint64_t v102 = v224;
      *(void *)(v166 + swift_weakDestroy(v0 + 16) = v169 + 1;
      uint64_t v170 = v233;
      unint64_t v171 = v166
      uint64_t v172 = v234;
      (*(void (**)(unint64_t, char *, uint64_t))(v233 + 32))(v171, v232, v234);
      v163(&v238, 0LL);
      swift_release(v118);
      (*(void (**)(char *, uint64_t))(v170 + 8))(v237, v172);
      uint64_t v115 = v158 + 1;
      uint64_t v173 = v225;
    }

    while (v230 != v225);
    uint64_t v174 = swift_bridgeObjectRelease(v110);
    ALTimeStamp.init(cfAbsoluteTimeSec:)(v174, v109);
    unint64_t v175 = v173 - 1;
    if (__OFSUB__(v173, 1LL)) {
      goto LABEL_108;
    }
    if (v228)
    {
      uint64_t v176 = specialized _ArrayBuffer._getElementSlowPath(_:)(v175, v110);
      uint64_t v177 = v236;
      double v40 = v213;
      char v38 = v209;
      int64_t v103 = v206;
    }

    else
    {
      uint64_t v177 = v236;
      double v40 = v213;
      char v38 = v209;
      int64_t v103 = v206;
      if ((v175 & 0x8000000000000000LL) != 0) {
        goto LABEL_109;
      }
      if (v175 >= *(void *)((v110 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
        goto LABEL_110;
      }
      uint64_t v176 = *(void *)(v202 + 8 * v175);
      swift_retain(v176);
    }

    swift_bridgeObjectRelease(v110);
    char v238 = (char *)v176;
    uint64_t v178 = swift_getKeyPath(&unk_1002DFBD8);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v238, v178, v121);
    swift_release(v178);
    uint64_t v179 = swift_getKeyPath(&unk_1002DFBD8);
    uint64_t v180 = sub_1002A8004( &qword_100368C80,  &qword_100368C88,  (uint64_t)&protocol witness table for Double,  (uint64_t)&protocol conformance descriptor for <A> A?);
    PersistentModel.getValue<A>(forKey:)(&v238, v179, v177, v180);
    swift_release(v176);
    swift_release(v179);
    uint64_t v181 = v222;
    ALTimeStamp._machContinuousTimeSec.setter(v238, v239);
    uint64_t v182 = v216;
    double v183 = v210;
    uint64_t v184 = v217;
    (*(void (**)(char *, char *, uint64_t))(v216 + 16))(v210, v181, v217);
    int v185 = *(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56);
    v185(v183, 0LL, 1LL, v184);
    uint64_t v186 = v229;
    uint64_t v187 = ALWiFiScanResult._scanTimestamp.setter(v183);
    uint64_t v188 = v218;
    uint64_t v189 = ALWiFiNotification.init()(v187);
    static ALTimeStamp.now()(v189);
    v185(v183, 0LL, 1LL, v184);
    ALWiFiNotification._timestamp.setter(v183);
    uint64_t v190 = v214;
    uint64_t v191 = v211;
    uint64_t v192 = v215;
    (*(void (**)(char *, char *, uint64_t))(v214 + 16))(v211, v186, v215);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v190 + 56))(v191, 0LL, 1LL, v192);
    ALWiFiNotification._scanResult.setter(v191);
    ALWiFiNotification._available.setter(1LL);
    uint64_t v193 = type metadata accessor for ALWiFiNotification.ScanType(0LL);
    uint64_t v194 = *(void *)(v193 - 8);
    uint64_t v195 = v212;
    (*(void (**)(char *, void, uint64_t))(v194 + 104))(v212, v204, v193);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v195, 0LL, 1LL, v193);
    ALWiFiNotification._scanType.setter(v195);
    (*(void (**)(char *, char *, uint64_t))(v220 + 16))(v219, v188, v221);
    if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0) {
      char v38 = (void *)sub_100017FE0( 0,  v38[2] + 1LL,  1,  (unint64_t)v38,  &qword_1003552A8,  (uint64_t (*)(void))&type metadata accessor for ALWiFiNotification);
    }
    unint64_t v197 = v38[2];
    unint64_t v196 = v38[3];
    if (v197 >= v196 >> 1) {
      char v38 = (void *)sub_100017FE0( v196 > 1,  v197 + 1,  1,  (unint64_t)v38,  &qword_1003552A8,  (uint64_t (*)(void))&type metadata accessor for ALWiFiNotification);
    }
    _OWORD v38[2] = v197 + 1;
    uint64_t v198 = v220;
    uint64_t v199 = v221;
    (*(void (**)(unint64_t, char *, uint64_t))(v220 + 32))( (unint64_t)v38 + ((*(unsigned __int8 *)(v198 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))
    + *(void *)(v198 + 72) * v197,
      v219,
      v221);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v218, v199);
    (*(void (**)(char *, uint64_t))(v216 + 8))(v222, v217);
    (*(void (**)(char *, uint64_t))(v214 + 8))(v229, v215);
    uint64_t v43 = v207;
    int64_t v98 = v208;
    uint64_t v99 = v205;
    if (v102) {
      goto LABEL_48;
    }
LABEL_49:
    BOOL v69 = __OFADD__(v98++, 1LL);
    if (v69)
    {
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }

    if (v98 >= v103) {
      goto LABEL_103;
    }
    unint64_t v106 = *(void *)&v99[8 * v98];
    if (!v106) {
      break;
    }
LABEL_59:
    unint64_t v102 = (v106 - 1) & v106;
  }

  int64_t v107 = v98 + 1;
  if (v98 + 1 >= v103) {
    goto LABEL_103;
  }
  unint64_t v106 = *(void *)&v99[8 * v107];
  if (v106) {
    goto LABEL_58;
  }
  int64_t v107 = v98 + 2;
  if (v98 + 2 >= v103) {
    goto LABEL_103;
  }
  unint64_t v106 = *(void *)&v99[8 * v107];
  if (v106) {
    goto LABEL_58;
  }
  int64_t v107 = v98 + 3;
  if (v98 + 3 >= v103)
  {
LABEL_103:
    swift_release(v203);
    swift_release(v43);
    return v38;
  }

  unint64_t v106 = *(void *)&v99[8 * v107];
  if (v106)
  {
LABEL_58:
    int64_t v98 = v107;
    goto LABEL_59;
  }

  while (1)
  {
    int64_t v98 = v107 + 1;
    if (__OFADD__(v107, 1LL)) {
      break;
    }
    if (v98 >= v103) {
      goto LABEL_103;
    }
    unint64_t v106 = *(void *)&v99[8 * v98];
    ++v107;
    if (v106) {
      goto LABEL_59;
    }
  }

LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Double);
  __break(1u);
  return result;
}

uint64_t sub_1002AEEA8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger(0LL);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100003A0C(&qword_100369048);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 128LL))(v5);
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v10 = type metadata accessor for ALWiFiScanRow(0LL);
    uint64_t v11 = sub_100003A0C(&qword_100368CD0);
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0LL, 1LL, v11);
    uint64_t v13 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
    dispatch thunk of ModelContext.delete<A>(model:where:includeSubclasses:)(v10, v7, 1LL, v10, v13);
    uint64_t v14 = sub_100015764((uint64_t)v7, &qword_100369048);
    dispatch thunk of ModelContext.save()(v14);
    return swift_release(v9);
  }

  return result;
}

void *sub_1002AF0BC(double a1, double a2)
{
  uint64_t v4 = sub_100003A0C(&qword_100368CD0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  double v11 = a1;
  double v12 = a2;
  uint64_t v13 = type metadata accessor for ALWiFiScanRow(0LL);
  Predicate.init(_:)(sub_1002B1120, v10, 1LL, &v13);
  uint64_t v8 = sub_1002AD670((uint64_t)v7);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1002AF17C(double a1, double a2)
{
  uint64_t v4 = sub_100003A0C(&qword_100368CD0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  double v10 = a1;
  double v11 = a2;
  uint64_t v12 = type metadata accessor for ALWiFiScanRow(0LL);
  Predicate.init(_:)(sub_1002B07D0, v9, 1LL, &v12);
  sub_1002AEEA8((uint64_t)v7);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1002AF234@<X0>(uint64_t *a1@<X0>, void *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v57 = a2;
  uint64_t v58 = type metadata accessor for PredicateExpressions.ComparisonOperator(0LL);
  uint64_t v42 = *(void *)(v58 - 8);
  uint64_t v7 = v42;
  __chkstk_darwin(v58);
  uint64_t v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = sub_100003A0C(&qword_100369050);
  uint64_t v54 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  double v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_100003A0C(&qword_100369058);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = sub_100003A0C(&qword_100369060);
  uint64_t v51 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_100003A0C(&qword_100369068);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v55 = v17;
  uint64_t v56 = v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v53 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19);
  uint64_t v50 = (char *)&v41 - v21;
  uint64_t v22 = *a1;
  uint64_t v48 = v22;
  uint64_t v23 = sub_100298804( &qword_100369070,  &qword_100369058,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
  static PredicateExpressions.build_Arg<A>(_:)(v22, v11, v23);
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFBB0);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v14, KeyPath, v11, v23);
  swift_release(KeyPath);
  unint64_t v47 = *(void (**)(char *, uint64_t))(v12 + 8);
  v47(v14, v11);
  *(double *)uint64_t v59 = a3;
  static PredicateExpressions.build_Arg<A>(_:)(v59, &type metadata for Double);
  unint64_t v46 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  uint64_t v25 = v45;
  uint64_t v26 = v58;
  v46(v45, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v58);
  uint64_t v27 = sub_100298804( &qword_100369078,  &qword_100369060,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>);
  uint64_t v44 = v27;
  uint64_t v43 = sub_100298804( &qword_100369080,  &qword_100369050,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Value<A>);
  uint64_t v28 = v49;
  uint64_t v29 = v52;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)( v16,  v10,  v25,  v49,  v52,  v27,  v43,  &protocol witness table for Double);
  uint64_t v42 = *(void *)(v42 + 8);
  ((void (*)(char *, uint64_t))v42)(v25, v26);
  uint64_t v54 = *(void *)(v54 + 8);
  ((void (*)(char *, uint64_t))v54)(v10, v29);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v51 + 8);
  v30(v16, v28);
  static PredicateExpressions.build_Arg<A>(_:)(v48, v11, v23);
  uint64_t v31 = swift_getKeyPath(&unk_1002DFBB0);
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)(v14, v31, v11, v23);
  swift_release(v31);
  v47(v14, v11);
  *(double *)uint64_t v59 = a4;
  static PredicateExpressions.build_Arg<A>(_:)(v59, &type metadata for Double);
  uint64_t v32 = v58;
  v46(v25, enum case for PredicateExpressions.ComparisonOperator.lessThanOrEqual(_:), v58);
  uint64_t v33 = v53;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)( v16,  v10,  v25,  v28,  v29,  v44,  v43,  &protocol witness table for Double);
  ((void (*)(char *, uint64_t))v42)(v25, v32);
  ((void (*)(char *, uint64_t))v54)(v10, v29);
  v30(v16, v28);
  uint64_t v34 = sub_100003A0C(&qword_100369088);
  uint64_t v35 = v57;
  v57[3] = v34;
  v35[4] = sub_1002B0DB4();
  sub_100287740(v35);
  uint64_t v36 = sub_100298804( &qword_1003690B8,  &qword_100369068,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Comparison<A, B>);
  uint64_t v37 = v50;
  uint64_t v38 = v55;
  static PredicateExpressions.build_Conjunction<A, B>(lhs:rhs:)(v50, v33, v55, v55, v36, v36);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v56 + 8);
  v39(v33, v38);
  return ((uint64_t (*)(char *, uint64_t))v39)(v37, v38);
}

uint64_t sub_1002AF6D8()
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 104LL))();
  if (result)
  {
    uint64_t v2 = result;
    dispatch thunk of ModelContainer.erase()();
    return swift_release(v2);
  }

  return result;
}

uint64_t sub_1002AF720()
{
  return v0;
}

uint64_t sub_1002AF744()
{
  return swift_deallocClassInstance(v0, 40LL, 7LL);
}

Swift::Int ALWiFiScanRow.hashValue.getter()
{
  return sub_1002AF97C( &qword_100368CD8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t sub_1002AF78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002AFA04(a1, a2, a3, (void (*)(uint64_t))ALWiFiScanRow.init(backingData:));
}

void sub_1002AF798(uint64_t *a1, char a2)
{
  uint64_t v2 = (__int128 *)*a1;
  uint64_t v3 = (__int128 *)(*a1 + 40);
  if ((a2 & 1) != 0)
  {
    uint64_t v4 = (void *)(*((void *)v2 + 16) + 32LL);
    sub_100087650(*a1, (uint64_t)v3);
    swift_beginAccess(v4, (char *)v2 + 104, 33LL, 0LL);
    sub_10001882C(v4);
    sub_1002847C0(v3, (uint64_t)v4);
    swift_endAccess((char *)v2 + 104);
    sub_10001882C(v2);
  }

  else
  {
    uint64_t v5 = (void *)(*((void *)v2 + 16) + 32LL);
    swift_beginAccess(v5, v3, 33LL, 0LL);
    sub_10001882C(v5);
    sub_1002847C0(v2, (uint64_t)v5);
    swift_endAccess(v3);
  }

  free(v2);
}

uint64_t sub_1002AF858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  return PersistentModel.hash(into:)(a1, a2, v4);
}

uint64_t sub_1002AF8B4(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  return PersistentModel.id.getter(a1, v2);
}

uint64_t sub_1002AF90C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10000FD98( &qword_100368BB0,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

Swift::Int ALBTScanRow.hashValue.getter()
{
  return sub_1002AF97C( &qword_100368CE0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

Swift::Int sub_1002AF97C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v10, 0LL);
  uint64_t v8 = sub_10000FD98(a1, a2, a3);
  dispatch thunk of Hashable.hash(into:)(v10, v7, v8);
  return Hasher._finalize()();
}

uint64_t sub_1002AF9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002AFA04(a1, a2, a3, (void (*)(uint64_t))ALBTScanRow.init(backingData:));
}

uint64_t sub_1002AFA04(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  a4(a1);
  return v7;
}

void sub_1002AFA4C(uint64_t *a1, char a2)
{
  uint64_t v2 = (__int128 *)*a1;
  uint64_t v3 = (__int128 *)(*a1 + 40);
  if ((a2 & 1) != 0)
  {
    uint64_t v4 = (void *)(*((void *)v2 + 16) + 16LL);
    sub_100087650(*a1, (uint64_t)v3);
    swift_beginAccess(v4, (char *)v2 + 104, 33LL, 0LL);
    sub_10001882C(v4);
    sub_1002847C0(v3, (uint64_t)v4);
    swift_endAccess((char *)v2 + 104);
    sub_10001882C(v2);
  }

  else
  {
    uint64_t v5 = (void *)(*((void *)v2 + 16) + 16LL);
    swift_beginAccess(v5, v3, 33LL, 0LL);
    sub_10001882C(v5);
    sub_1002847C0(v2, (uint64_t)v5);
    swift_endAccess(v3);
  }

  free(v2);
}

Swift::Int sub_1002AFB08(uint64_t a1, uint64_t a2)
{
  void v6[9] = *v2;
  Hasher.init(_seed:)(v6, 0LL);
  dispatch thunk of Hashable.hash(into:)(v6, a1, a2);
  return Hasher._finalize()();
}

uint64_t sub_1002AFB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  return PersistentModel.hash(into:)(a1, a2, v4);
}

Swift::Int sub_1002AFBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

uint64_t sub_1002AFC1C(uint64_t a1)
{
  uint64_t v2 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  return PersistentModel.id.getter(a1, v2);
}

uint64_t sub_1002AFC74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10000FD98( &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

unint64_t sub_1002AFCC8(double a1)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    double v3 = a1;
  }
  else {
    double v3 = 0.0;
  }
  uint64_t v4 = static Hasher._hash(seed:_:)(*(void *)(v1 + 40), *(void *)&v3);
  return sub_1002AFCFC(v4, a1);
}

unint64_t sub_1002AFCFC(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
      }
    }
  }

  return result;
}

uint64_t sub_1002AFD94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_100003A0C(&qword_1003690C8);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v9 = 0LL;
    double v10 = (uint64_t *)(v5 + 64);
    uint64_t v11 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v34 = -1LL << v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1LL << v11);
    }
    else {
      uint64_t v12 = -1LL;
    }
    unint64_t v13 = v12 & *(void *)(v5 + 64);
    uint64_t v35 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v36 = v3;
    int64_t v37 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v21 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v22 = v21 | (v9 << 6);
      }

      else
      {
        int64_t v23 = v9 + 1;
        if (__OFADD__(v9, 1LL))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }

        if (v23 >= v37) {
          goto LABEL_39;
        }
        unint64_t v24 = v10[v23];
        ++v9;
        if (!v24)
        {
          int64_t v9 = v23 + 1;
          if (v23 + 1 >= v37) {
            goto LABEL_39;
          }
          unint64_t v24 = v10[v9];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release(v5);
                uint64_t v3 = v36;
                goto LABEL_46;
              }

              if (v35 >= 64) {
                bzero((void *)(v5 + 64), 8 * v37);
              }
              else {
                *double v10 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + swift_weakDestroy(v0 + 16) = 0LL;
              break;
            }

            unint64_t v24 = v10[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v9 = v25 + 1;
                if (__OFADD__(v25, 1LL)) {
                  goto LABEL_48;
                }
                if (v9 >= v37) {
                  goto LABEL_39;
                }
                unint64_t v24 = v10[v9];
                ++v25;
                if (v24) {
                  goto LABEL_36;
                }
              }
            }

            int64_t v9 = v25;
          }
        }

LABEL_36:
        unint64_t v13 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v9 << 6);
      }

      uint64_t v30 = 8 * v22;
      uint64_t v31 = *(void *)(v5 + 56);
      uint64_t v32 = *(void *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *(void *)(v31 + v30);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain(*(void *)(v31 + v30));
      }
      if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        uint64_t v15 = v32;
      }
      else {
        uint64_t v15 = 0LL;
      }
      uint64_t result = static Hasher._hash(seed:_:)(*(void *)(v8 + 40), v15);
      uint64_t v16 = -1LL << *(_BYTE *)(v8 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1LL << v17) & ~*(void *)(v14 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1LL << v17) & ~*(void *)(v14 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }

          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0LL;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v18);
        }

        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }

      *(void *)(v14 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v19;
      uint64_t v20 = 8 * v19;
      *(void *)(*(void *)(v8 + 48) + v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v32;
      *(void *)(*(void *)(v8 + 56) + v2_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  *(void *)(v0 + 16),  *(void *)(v0 + 24),  *(void *)(v0 + 32),  *(void *)(v0 + 40),  *(unsigned __int8 *)(v0 + 48),  *(void *)(v0 + 56), 0) = v33;
      ++*(void *)(v8 + 16);
    }
  }

  uint64_t result = swift_release(v5);
LABEL_46:
  *uint64_t v3 = v8;
  return result;
}

uint64_t _s8ALDaemon13ALWiFiScanRowC14schemaMetadataSay9SwiftData6SchemaC08PropertyG0VGvgZ_0()
{
  uint64_t v0 = sub_100003A0C(&qword_1003690D0);
  uint64_t v1 = *(void *)(type metadata accessor for Schema.PropertyMetadata(0LL) - 8);
  uint64_t v2 = swift_allocObject( v0,  ((*(unsigned __int8 *)(v1 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
       + 12LL * *(void *)(v1 + 72),
         *(unsigned __int8 *)(v1 + 80) | 7LL);
  *(_OWORD *)(v2 + swift_weakDestroy(v0 + 16) = xmmword_1002C9690;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFA20);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 1667329375LL,  0xE400000000000000LL,  KeyPath,  &v19,  &v16);
  uint64_t v4 = swift_getKeyPath(&unk_1002DFA48);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x646973735FLL,  0xE500000000000000LL,  v4,  &v19,  &v16);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFA70);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6244697373725FLL,  0xE700000000000000LL,  v5,  &v19,  &v16);
  uint64_t v6 = swift_getKeyPath(&unk_1002DFA98);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x65646F6D5FLL,  0xE500000000000000LL,  v6,  &v19,  &v16);
  uint64_t v7 = swift_getKeyPath(&unk_1002DFAC0);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6C656E6E6168635FLL,  0xE800000000000000LL,  v7,  &v19,  &v16);
  uint64_t v8 = swift_getKeyPath(&unk_1002DFAE8);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6365536567615FLL,  0xE700000000000000LL,  v8,  &v19,  &v16);
  uint64_t v9 = swift_getKeyPath(&unk_1002DFB10);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x656C70704173695FLL,  0xEF746F7073746F48LL,  v9,  &v19,  &v16);
  uint64_t v10 = swift_getKeyPath(&unk_1002DFB38);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6E69766F4D73695FLL,  0xE900000000000067LL,  v10,  &v19,  &v16);
  uint64_t v11 = swift_getKeyPath(&unk_1002DFB60);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x646E61625FLL,  0xE500000000000000LL,  v11,  &v19,  &v16);
  uint64_t v12 = swift_getKeyPath(&unk_1002DFB88);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6E6575716572665FLL,  0xED00007A684B7963LL,  v12,  &v19,  &v16);
  uint64_t v13 = swift_getKeyPath(&unk_1002DFBB0);
  *((void *)&v20 + 1) = &type metadata for Int;
  *(void *)&__int128 v19 = 0LL;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0xD000000000000012LL,  0x80000001002F5EA0LL,  v13,  &v19,  &v16);
  uint64_t v14 = swift_getKeyPath(&unk_1002DFBD8);
  __int128 v19 = 0u;
  __int128 v20 = 0u;
  uint64_t v18 = 0LL;
  __int128 v16 = 0u;
  __int128 v17 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0xD000000000000016LL,  0x80000001002F5EC0LL,  v14,  &v19,  &v16);
  return v2;
}

uint64_t type metadata accessor for ALBTScanRow(uint64_t a1)
{
  return sub_10000E68C(a1, (uint64_t *)&unk_1003C1518, (uint64_t)&nominal type descriptor for ALBTScanRow);
}

uint64_t sub_1002B048C()
{
  return sub_1002A9D28(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002B04B4()
{
  return sub_1002AA340( *(double *)(v0 + 24),  *(void *)(v0 + 16),  (uint64_t)&unk_1002DFC28,  &qword_100368CA8,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002B0500()
{
  return sub_1002AABFC( *(void *)(v0 + 16),  *(_BYTE *)(v0 + 24),  (uint64_t)&unk_1002DFC50,  (uint64_t)&protocol witness table for UInt8);
}

uint64_t sub_1002B053C()
{
  return sub_1002AABFC( *(void *)(v0 + 16),  *(_BYTE *)(v0 + 24),  (uint64_t)&unk_1002DFC78,  (uint64_t)&protocol witness table for Int8);
}

uint64_t sub_1002B0578()
{
  return sub_1002AB1E8(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t _s8ALDaemon11ALBTScanRowC14schemaMetadataSay9SwiftData6SchemaC08PropertyE0VGvgZ_0()
{
  uint64_t v0 = sub_100003A0C(&qword_1003690D0);
  uint64_t v1 = type metadata accessor for Schema.PropertyMetadata(0LL);
  uint64_t v2 = swift_allocObject( v0,  ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL))
       + 5LL * *(void *)(*(void *)(v1 - 8) + 72LL),
         *(unsigned __int8 *)(*(void *)(v1 - 8) + 80LL) | 7LL);
  *(_OWORD *)(v2 + swift_weakDestroy(v0 + 16) = xmmword_1002B32F0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1002DFC00);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v11 = 0LL;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)(6513005LL, 0xE300000000000000LL, KeyPath, &v12, &v9);
  uint64_t v4 = swift_getKeyPath(&unk_1002DFC28);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v11 = 0LL;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6D617473656D6974LL,  0xE900000000000070LL,  v4,  &v12,  &v9);
  uint64_t v5 = swift_getKeyPath(&unk_1002DFC50);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v11 = 0LL;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x6C656E6E616863LL,  0xE700000000000000LL,  v5,  &v12,  &v9);
  uint64_t v6 = swift_getKeyPath(&unk_1002DFC78);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v11 = 0LL;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)(1769173874LL, 0xE400000000000000LL, v6, &v12, &v9);
  uint64_t v7 = swift_getKeyPath(&unk_1002DFCA0);
  __int128 v12 = 0u;
  __int128 v13 = 0u;
  uint64_t v11 = 0LL;
  __int128 v9 = 0u;
  __int128 v10 = 0u;
  Schema.PropertyMetadata.init(name:keypath:defaultValue:metadata:)( 0x66664F7361577061LL,  0xE800000000000000LL,  v7,  &v12,  &v9);
  return v2;
}

uint64_t sub_1002B0790()
{
  return sub_1002B0F84(41LL, 0xD000000000000027LL, (void *)0x80000001002F5E70LL);
}

uint64_t sub_1002B07B0()
{
  return sub_1002B0F84(39LL, 0xD000000000000025LL, (void *)0x80000001002F5E20LL);
}

uint64_t sub_1002B07D0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1002AF234(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

unint64_t sub_1002B07EC()
{
  unint64_t result = qword_100368CE8;
  if (!qword_100368CE8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Mode,  &type metadata for ALWiFiScanRow.Mode);
    atomic_store(result, (unint64_t *)&qword_100368CE8);
  }

  return result;
}

unint64_t sub_1002B0834()
{
  unint64_t result = qword_100368CF0;
  if (!qword_100368CF0)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Band,  &type metadata for ALWiFiScanRow.Band);
    atomic_store(result, (unint64_t *)&qword_100368CF0);
  }

  return result;
}

uint64_t sub_1002B0878()
{
  return sub_10000FD98( &qword_100368BA8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t sub_1002B08A4()
{
  return sub_10000FD98( &qword_100368CD8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t sub_1002B08D0()
{
  return sub_10000FD98( &qword_100368CF8,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t sub_1002B08FC()
{
  return sub_10000FD98( &qword_100368D00,  type metadata accessor for ALWiFiScanRow,  (uint64_t)&protocol conformance descriptor for ALWiFiScanRow);
}

uint64_t sub_1002B0928()
{
  return sub_10000FD98( &qword_100368D08,  (uint64_t (*)(uint64_t))&type metadata accessor for PersistentIdentifier,  (uint64_t)&protocol conformance descriptor for PersistentIdentifier);
}

uint64_t sub_1002B0954()
{
  return sub_10000FD98( &qword_100368CA0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002B0980()
{
  return sub_10000FD98( &qword_100368CE0,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002B09AC()
{
  return sub_10000FD98( &qword_100368D10,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002B09D8()
{
  return sub_10000FD98( &qword_100368D18,  type metadata accessor for ALBTScanRow,  (uint64_t)&protocol conformance descriptor for ALBTScanRow);
}

uint64_t sub_1002B0A04()
{
  return type metadata accessor for ALWiFiScanRow(0LL);
}

uint64_t sub_1002B0A0C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.Int8 + 64;
  v4[1] = (char *)&value witness table for Builtin.Int8 + 64;
  _OWORD v4[2] = (char *)&value witness table for Builtin.Int8 + 64;
  v4[3] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[4] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[5] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[6] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[7] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[8] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[9] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[10] = (char *)&value witness table for () + 64;
  v4[11] = (char *)&value witness table for Builtin.Int8 + 64;
  void v4[12] = &unk_1002E0178;
  uint64_t result = type metadata accessor for ObservationRegistrar(319LL);
  if (v3 <= 0x3F)
  {
    void v4[13] = *(void *)(result - 8) + 64LL;
    return swift_updateClassMetadata2(a1, 256LL, 14LL, v4, a1 + 80);
  }

  return result;
}

uint64_t method lookup function for ALWiFiScanRow(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALWiFiScanRow);
}

uint64_t dispatch thunk of ALWiFiScanRow.__allocating_init(mac:ssid:rssiDb:mode:channel:ageSec:isAppleHotspot:isMoving:band:frequencyKhz:cfAbsoluteTimeSec:machContinuousTimeSec:)( uint64_t a1, char a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  LOBYTE(a13) = a13 & 1;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 192))( a1,  a2 & 1,  a3,  a4,  a5 | ((HIDWORD(a5) & 1) << 32),  a6,  a7 | ((HIDWORD(a7) & 1) << 32),  a8 | ((HIDWORD(a8) & 1) << 32),  a9,  a10,  a11 | ((HIDWORD(a11) & 1) << 32),  a12,  a13,  a14);
}

uint64_t dispatch thunk of ALWiFiScanRow.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

ValueMetadata *type metadata accessor for ALWiFiScanRow.Mode()
{
  return &type metadata for ALWiFiScanRow.Mode;
}

uint64_t _s8ALDaemon13ALWiFiScanRowC4ModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(vsub_10001882C(v0 + 4) = 1;
  }
  else {
    LODWORD(vsub_10001882C(v0 + 4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1002B0BA4 + 4 * byte_1002DFA15[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1002B0BD8 + 4 * byte_1002DFA10[v4]))();
}

uint64_t sub_1002B0BD8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B0BE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1002B0BE8LL);
  }
  return result;
}

uint64_t sub_1002B0BF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1002B0BFCLL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_1002B0C00(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1002B0C08(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ALWiFiScanRow.Band()
{
  return &type metadata for ALWiFiScanRow.Band;
}

ValueMetadata *type metadata accessor for ALWiFiScanRow._SwiftDataNoType()
{
  return &type metadata for ALWiFiScanRow._SwiftDataNoType;
}

uint64_t sub_1002B0C34()
{
  return type metadata accessor for ALBTScanRow(0LL);
}

uint64_t sub_1002B0C3C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for () + 64;
  v4[1] = (char *)&value witness table for () + 64;
  _OWORD v4[2] = (char *)&value witness table for () + 64;
  v4[3] = (char *)&value witness table for () + 64;
  void v4[4] = (char *)&value witness table for () + 64;
  void v4[5] = &unk_1002E0178;
  uint64_t result = type metadata accessor for ObservationRegistrar(319LL);
  if (v3 <= 0x3F)
  {
    void v4[6] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t method lookup function for ALBTScanRow(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ALBTScanRow);
}

uint64_t dispatch thunk of ALBTScanRow.__allocating_init(backingData:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

ValueMetadata *type metadata accessor for ALBTScanRow._SwiftDataNoType()
{
  return &type metadata for ALBTScanRow._SwiftDataNoType;
}

uint64_t type metadata accessor for ALDatabase()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon10ALDatabase);
}

unint64_t sub_1002B0D0C()
{
  unint64_t result = qword_100369038;
  if (!qword_100369038)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Band,  &type metadata for ALWiFiScanRow.Band);
    atomic_store(result, (unint64_t *)&qword_100369038);
  }

  return result;
}

unint64_t sub_1002B0D50()
{
  unint64_t result = qword_100369040;
  if (!qword_100369040)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for ALWiFiScanRow.Mode,  &type metadata for ALWiFiScanRow.Mode);
    atomic_store(result, (unint64_t *)&qword_100369040);
  }

  return result;
}

uint64_t sub_1002B0D94()
{
  return sub_1002B0F84(38LL, 0xD000000000000024LL, (void *)0x80000001002F5DA0LL);
}

unint64_t sub_1002B0DB4()
{
  unint64_t result = qword_100369090;
  if (!qword_100369090)
  {
    uint64_t v1 = sub_10000FED4(&qword_100369088);
    sub_1002B0E18();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Conjunction<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100369090);
  }

  return result;
}

unint64_t sub_1002B0E18()
{
  unint64_t result = qword_100369098;
  if (!qword_100369098)
  {
    uint64_t v1 = sub_10000FED4(&qword_100369068);
    sub_1002B0E84();
    sub_1002B0F00();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.Comparison<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_100369098);
  }

  return result;
}

unint64_t sub_1002B0E84()
{
  unint64_t result = qword_1003690A0;
  if (!qword_1003690A0)
  {
    uint64_t v1 = sub_10000FED4(&qword_100369060);
    sub_100298804( &qword_1003690A8,  &qword_100369058,  (uint64_t)&protocol conformance descriptor for PredicateExpressions.Variable<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> PredicateExpressions.KeyPath<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1003690A0);
  }

  return result;
}

unint64_t sub_1002B0F00()
{
  unint64_t result = qword_1003690B0;
  if (!qword_1003690B0)
  {
    uint64_t v1 = sub_10000FED4(&qword_100369050);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> PredicateExpressions.Value<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1003690B0);
  }

  return result;
}

uint64_t sub_1002B0F64()
{
  return sub_1002B0F84(36LL, 0xD000000000000022LL, (void *)0x80000001002F5DF0LL);
}

uint64_t sub_1002B0F84(Swift::Int a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *(void *)(v3 + 16);
  v12[0] = 0LL;
  v12[1] = 0xE000000000000000LL;
  _StringGuts.grow(_:)(a1);
  v7._countAndFlagsBits = a2;
  v7._object = a3;
  String.append(_:)(v7);
  uint64_t v11 = v6;
  uint64_t v8 = sub_100003A0C(&qword_100367A28);
  _print_unlocked<A, B>(_:_:)( &v11,  v12,  v8,  &type metadata for DefaultStringInterpolation,  &protocol witness table for DefaultStringInterpolation);
  v9._countAndFlagsBits = 0LL;
  v9._object = (void *)0xE000000000000000LL;
  String.append(_:)(v9);
  return v12[0];
}

uint64_t sub_1002B102C()
{
  return sub_1002A4528();
}

uint64_t sub_1002B1040()
{
  return sub_1002A7FB8();
}

uint64_t sub_1002B1058()
{
  return sub_1002A5304();
}

uint64_t sub_1002B106C()
{
  return sub_1002A5CA0();
}

uint64_t sub_1002B1080()
{
  return sub_1002A632C();
}

uint64_t sub_1002B1094()
{
  return sub_1002A6B20();
}

uint64_t sub_1002B10A8()
{
  return sub_1002A77D0();
}

uint64_t sub_1002B10BC()
{
  return sub_1002B048C();
}

uint64_t sub_1002B10D0()
{
  return sub_1002B04B4();
}

uint64_t sub_1002B10E4()
{
  return sub_1002B0500();
}

uint64_t sub_1002B10F8()
{
  return sub_1002B053C();
}

uint64_t sub_1002B110C()
{
  return sub_1002B0578();
}

uint64_t sub_1002B1124()
{
  return sub_1002A4C98();
}

uint64_t sub_1002B1138(uint64_t a1)
{
  Swift::UInt64 v1 = machContTimeNs()();
  ALBtAdvertisement._machContTimeNs.setter(v1, 0LL);
  unint64_t v2 = sub_1002A09F4(0xFFFFFFFFFFFFFFFFLL);
  ALBtAdvertisement._mac.setter(v2);
  uint64_t result = sub_1002A0968(61LL);
  if (__OFSUB__(0, result + 20))
  {
    __break(1u);
  }

  else
  {
    ALBtAdvertisement._rssidB.setter(-(result + 20));
    int v4 = sub_1002A0968(14LL);
    ALBtAdvertisement._channel.setter((v4 + 1));
    int v5 = sub_1002A0968(20LL);
    return ALBtAdvertisement._antennaIndex.setter((v5 + 1));
  }

  return result;
}

uint64_t sub_1002B11E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ALBtAdvertisement(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v42 - v6;
  uint64_t v8 = sub_100003A0C(&qword_1003517B8);
  __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Logger(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  __int128 v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for ALBtNotification(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  ALBtNotification.init()(v16);
  __int128 v19 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
  uint64_t v44 = a1;
  v19(a1, v18, v14);
  unint64_t v20 = sub_1002A09F4(0x29uLL);
  uint64_t v21 = corelog.getter((uint64_t)v13);
  unint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  unint64_t v43 = v20;
  if (v24)
  {
    int64_t v25 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)int64_t v25 = 134217984;
    unint64_t v20 = v43;
    unint64_t v46 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v25 + 4, v25 + 12);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Simulating BT advertisement count %ld", v25, 0xCu);
    swift_slowDealloc(v25, -1LL, -1LL);
  }

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v20 & 0x8000000000000000LL) == 0)
  {
    if (!v20)
    {
LABEL_20:
      double v40 = v42;
      static ALTimeStamp.now()(result);
      uint64_t v41 = type metadata accessor for ALTimeStamp(0LL);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56LL))(v40, 0LL, 1LL, v41);
      ALBtNotification._timestamp.setter(v40);
      return ALBtNotification._simulated.setter(1LL);
    }

    uint64_t v27 = 0LL;
    while (v27 != v20)
    {
      ALBtAdvertisement.init()(result);
      Swift::UInt64 v28 = machContTimeNs()();
      ALBtAdvertisement._machContTimeNs.setter(v28, 0LL);
      unint64_t v46 = 0LL;
      swift_stdlib_random(&v46, 8LL);
      for (unint64_t i = v46; !v46; unint64_t i = v46)
      {
        unint64_t v46 = 0LL;
        swift_stdlib_random(&v46, 8LL);
      }

      ALBtAdvertisement._mac.setter((i * (unsigned __int128)0xFFFFFFFFFFFFFFFFLL) >> 64);
      unint64_t v46 = 0LL;
      swift_stdlib_random(&v46, 8LL);
      unint64_t v30 = 61LL * v46;
      if (v30 <= 0x38)
      {
        do
        {
          unint64_t v46 = 0LL;
          swift_stdlib_random(&v46, 8LL);
          unint64_t v30 = 61LL * v46;
        }

        while (v30 < 0x39);
      }

      LOBYTE(v46) = 0;
      ALBtAdvertisement._rssidB.setter(4294967276u - HIDWORD(v30));
      do
      {
        unint64_t v46 = 0LL;
        swift_stdlib_random(&v46, 8LL);
        unint64_t v31 = 14LL * v46;
      }

      while ((v31 & 0xFFFFFFFC) == 0);
      LOBYTE(v46) = 0;
      ALBtAdvertisement._channel.setter(HIDWORD(v31) + 1);
      do
      {
        unint64_t v46 = 0LL;
        swift_stdlib_random(&v46, 8LL);
        uint64_t v32 = 20LL * v46;
      }

      while ((v32 & 0xFFFFFFF0) == 0);
      LOBYTE(v46) = 0;
      ALBtAdvertisement._antennaIndex.setter(((__int128)(unint64_t)v32 >> 32) + 1);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v45, v7, v2);
      uint64_t v33 = (void (*)(unint64_t *, void))ALBtNotification._advertisements.modify(&v46);
      uint64_t v35 = v34;
      unint64_t v36 = *v34;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v34);
      unint64_t *v35 = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v36 = sub_10028BDE8(0, *(void *)(v36 + 16) + 1LL, 1, v36);
        unint64_t *v35 = v36;
      }

      unint64_t v39 = *(void *)(v36 + 16);
      unint64_t v38 = *(void *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        unint64_t v36 = sub_10028BDE8(v38 > 1, v39 + 1, 1, v36);
        unint64_t *v35 = v36;
      }

      ++v27;
      *(void *)(v36 + swift_weakDestroy(v0 + 16) = v39 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))( v36 + ((*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
      + *(void *)(v3 + 72) * v39,
        v45,
        v2);
      v33(&v46, 0LL);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
      unint64_t v20 = v43;
      if (v27 == v43) {
        goto LABEL_20;
      }
    }

    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_1002B1698(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1002B17EC(a1, a2, a3);
  swift_release(a3);
  return v7;
}

uint64_t sub_1002B16F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1002B17EC(a1, a2, a3);
  swift_release(a3);
  return v4;
}

uint64_t sub_1002B1728()
{
  uint64_t v1 = type metadata accessor for ALBtNotification(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1002B11E0((uint64_t)v4);
  (*(void (**)(char *))(v0 + 24))(v4);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_1002B17C0()
{
}

uint64_t sub_1002B17EC(void *a1, uint64_t a2, uint64_t a3)
{
  void (*v14)(double *__return_ptr, unint64_t, unint64_t, void *);
  double v15;
  uint64_t v16;
  os_log_s *v17;
  os_log_type_t v18;
  uint8_t *v19;
  double v21;
  _BYTE v22[8];
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Logger(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_retain(v3);
  uint64_t v12 = sub_1002990B8();
  uint64_t v13 = *v12;
  uint64_t v14 = *(void (**)(double *__return_ptr, unint64_t, unint64_t, void *))(*(void *)*v12 + 112LL);
  swift_retain(*v12);
  v14(&v21, 0xD000000000000017LL, 0x80000001002F5F20LL, &type metadata for Double);
  swift_release(v13);
  if (v22[0]) {
    uint64_t v15 = 6.0;
  }
  else {
    uint64_t v15 = v21;
  }
  *(void *)(v4 + 2sub_10001882C(v0 + 4) = a2;
  *(void *)(v4 + 3sub_10001882C(v0 + 2) = a3;
  swift_retain(a3);
  swift_release(v4);
  uint64_t v16 = corelog.getter((uint64_t)v11);
  uint64_t v17 = (os_log_s *)Logger.logObject.getter(v16);
  uint64_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    __int128 v19 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    *(_DWORD *)__int128 v19 = 134217984;
    uint64_t v21 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v19 + 4, v19 + 12);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "ALBtSimulated,interval,%f,sec", v19, 0xCu);
    swift_slowDealloc(v19, -1LL, -1LL);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return ALDataGenerationBase.init(queue:interval:)(a1, v15);
}

uint64_t type metadata accessor for ALBtSimulated()
{
  return objc_opt_self(&OBJC_CLASS____TtC8ALDaemon13ALBtSimulated);
}