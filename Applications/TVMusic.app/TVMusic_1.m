uint64_t sub_10012EAF8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  v47 = a3;
  v5 = type metadata accessor for AccessibilityChildBehavior(0LL);
  v45 = *(void *)(v5 - 8);
  v46 = v5;
  __chkstk_darwin(v5, v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v9 = sub_1000DFE10(&qword_1002BAC28);
  __chkstk_darwin(v9, v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v13 = sub_1000DFE10(&qword_1002BAC30);
  __chkstk_darwin(v13, v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v17 = sub_1000DFE10(&qword_1002BAC38);
  v18 = *(void *)(v17 - 8);
  v20 = __chkstk_darwin(v17, v19);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v24 = __chkstk_darwin(v20, v23);
  v26 = (char *)&v44 - v25;
  *(void *)v12 = static HorizontalAlignment.leading.getter(v24);
  *((void *)v12 + 1) = 0LL;
  v12[16] = 0;
  v27 = sub_1000DFE10(&qword_1002BAC40);
  v28 = sub_10012ED98(a1, a2, (uint64_t)&v12[*(int *)(v27 + 44)]);
  LOBYTE(a1) = static Edge.Set.top.getter(v28);
  v29 = EdgeInsets.init(_all:)(12.0);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  sub_1000E04D4((uint64_t)v12, (uint64_t)v16, &qword_1002BAC28);
  v36 = &v16[*(int *)(v13 + 36)];
  *v36 = (char)a1;
  *((double *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  v37 = sub_1000E03B4((uint64_t)v12, &qword_1002BAC28);
  static AccessibilityChildBehavior.combine.getter(v37);
  v38 = sub_1001311E8();
  View.accessibilityElement(children:)(v8, v13, v38);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v46);
  sub_1000E03B4((uint64_t)v16, &qword_1002BAC30);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v22, v17);
  v39 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v39(v22, v26, v17);
  v40 = v47;
  v39(v47, v22, v17);
  v41 = &v40[*(int *)(sub_1000DFE10(&qword_1002BAC58) + 48)];
  *(void *)v41 = 0LL;
  v41[8] = 0;
  v42 = *(void (**)(char *, uint64_t))(v18 + 8);
  v42(v26, v17);
  return ((uint64_t (*)(char *, uint64_t))v42)(v22, v17);
}

uint64_t sub_10012ED98@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v209 = a2;
  uint64_t v212 = a3;
  uint64_t v4 = type metadata accessor for Calendar(0LL);
  __chkstk_darwin(v4, v5);
  v197 = (char *)&v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for Locale(0LL);
  __chkstk_darwin(v7, v8);
  v195 = (char *)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for Date.ComponentsFormatStyle.Style(0LL);
  __chkstk_darwin(v10, v11);
  v193 = (char *)&v182 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v196 = type metadata accessor for Date.ComponentsFormatStyle(0LL);
  __chkstk_darwin(v196, v13);
  v194 = (char *)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v190 = sub_1000DFE10(&qword_1002BAC60);
  uint64_t v16 = __chkstk_darwin(v190, v15);
  v192 = (char *)&v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v16, v18);
  v189 = (char *)&v182 - v19;
  uint64_t v213 = type metadata accessor for Date(0LL);
  uint64_t v187 = *(void *)(v213 - 8);
  uint64_t v21 = __chkstk_darwin(v213, v20);
  v199 = (char *)&v182 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21, v23);
  v198 = (char *)&v182 - v24;
  uint64_t v186 = sub_1000DFE10(&qword_1002BAC68);
  uint64_t v26 = __chkstk_darwin(v186, v25);
  v188 = (char *)&v182 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26, v28);
  uint64_t v191 = (uint64_t)&v182 - v29;
  uint64_t v205 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v203 = *(void *)(v205 - 8);
  __chkstk_darwin(v205, v30);
  v200 = (char *)&v182 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v206 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v204 = *(void *)(v206 - 8);
  __chkstk_darwin(v206, v32);
  v201 = (char *)&v182 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v218 = sub_1000DFE10(&qword_1002BAC70);
  uint64_t v214 = *(void *)(v218 - 8);
  __chkstk_darwin(v218, v34);
  v202 = (char *)&v182 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_1000DFE10(&qword_1002BAC78);
  uint64_t v38 = __chkstk_darwin(v36, v37);
  uint64_t v211 = (uint64_t)&v182 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v210 = (uint64_t)&v182 - v42;
  uint64_t v44 = __chkstk_darwin(v41, v43);
  v217 = (char *)&v182 - v45;
  __chkstk_darwin(v44, v46);
  uint64_t v219 = (uint64_t)&v182 - v47;
  uint64_t v48 = sub_1000DFE10(&qword_1002BAC80);
  uint64_t v50 = __chkstk_darwin(v48, v49);
  uint64_t v216 = (uint64_t)&v182 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = __chkstk_darwin(v50, v52);
  v55 = (char *)&v182 - v54;
  *(void *)v55 = static VerticalAlignment.lastTextBaseline.getter(v53);
  *((void *)v55 + 1) = 0x4010000000000000LL;
  v55[16] = 0;
  uint64_t v56 = *(int *)(sub_1000DFE10(&qword_1002BAC88) + 44);
  v215 = v55;
  sub_10012FAC8((uint64_t)a1, (uint64_t)&v55[v56]);
  uint64_t v57 = sub_1000DFE10(&qword_1002BAC90);
  uint64_t inited = swift_initStackObject(v57, &v221);
  *(_OWORD *)(inited + 16) = xmmword_1001EBC10;
  uint64_t v60 = a1[2];
  uint64_t v59 = a1[3];
  *(void *)(inited + 32) = v60;
  *(void *)(inited + 40) = v59;
  uint64_t v61 = a1[4];
  uint64_t v62 = a1[5];
  *(void *)(inited + 48) = v61;
  *(void *)(inited + 56) = v62;
  if (!v59)
  {
    swift_bridgeObjectRetain(v62);
    v64 = (char *)&_swiftEmptyArrayStorage;
    if (!v62) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }

  v63 = a1;
  swift_bridgeObjectRetain(v62);
  swift_bridgeObjectRetain_n(v59, 2LL);
  v64 = sub_10015A948(0LL, 1LL, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v66 = *((void *)v64 + 2);
  unint64_t v65 = *((void *)v64 + 3);
  if (v66 >= v65 >> 1) {
    v64 = sub_10015A948((char *)(v65 > 1), v66 + 1, 1, v64);
  }
  *((void *)v64 + 2) = v66 + 1;
  v67 = &v64[16 * v66];
  *((void *)v67 + 4) = v60;
  *((void *)v67 + 5) = v59;
  a1 = v63;
  if (v62)
  {
LABEL_7:
    swift_bridgeObjectRetain(v62);
    if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0) {
      v64 = sub_10015A948(0LL, *((void *)v64 + 2) + 1LL, 1, v64);
    }
    unint64_t v69 = *((void *)v64 + 2);
    unint64_t v68 = *((void *)v64 + 3);
    if (v69 >= v68 >> 1) {
      v64 = sub_10015A948((char *)(v68 > 1), v69 + 1, 1, v64);
    }
    *((void *)v64 + 2) = v69 + 1;
    v70 = &v64[16 * v69];
    *((void *)v70 + 4) = v61;
    *((void *)v70 + 5) = v62;
  }

uint64_t sub_10012FAC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v84 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v85 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BAC70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002BAC78);
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v86 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v76 - v21;
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    uint64_t v89 = *(void *)a1;
    uint64_t v90 = v23;
    unint64_t v24 = sub_1000E95D4();
    uint64_t v80 = v8;
    unint64_t v25 = v24;
    swift_bridgeObjectRetain(v23);
    uint64_t v26 = Text.init<A>(_:)(&v89, &type metadata for String, v25);
    uint64_t v28 = v27;
    uint64_t v82 = v11;
    uint64_t v30 = v29;
    uint64_t v79 = v7;
    uint64_t v32 = v31 & 1;
    uint64_t v33 = static Font.callout.getter();
    uint64_t v81 = v12;
    uint64_t v34 = v33;
    uint64_t v35 = Text.font(_:)(v33, v26, v28, v32, v30);
    uint64_t v77 = v3;
    uint64_t v36 = v35;
    uint64_t v83 = a1;
    uint64_t v38 = v37;
    uint64_t v76 = v4;
    char v40 = v39;
    uint64_t v78 = v15;
    uint64_t v41 = v22;
    uint64_t v43 = v42;
    swift_release(v34);
    sub_1000EC044(v26, v28, v32);
    __n128 v44 = swift_bridgeObjectRelease(v30);
    uint64_t v45 = Text.bold()(v36, v38, v40 & 1, v43, v44);
    uint64_t v47 = v46;
    LOBYTE(v32) = v48;
    uint64_t v50 = v49;
    uint64_t v12 = v81;
    sub_1000EC044(v36, v38, v40 & 1);
    uint64_t v51 = v43;
    uint64_t v22 = v41;
    __n128 v52 = swift_bridgeObjectRelease(v51);
    uint64_t v89 = v45;
    uint64_t v90 = v47;
    uint64_t v11 = v82;
    char v91 = v32 & 1;
    uint64_t v92 = v50;
    uint64_t v53 = v76;
    uint64_t v54 = v84;
    uint64_t v55 = v77;
    (*(void (**)(char *, void, uint64_t, __n128))(v76 + 104))( v84,  enum case for AutomationSemantics.NowPlayingElement.infoViewTitle(_:),  v77,  v52);
    memset(v88, 0, sizeof(v88));
    uint64_t v56 = v85;
    static AutomationSemantics.nowPlaying(_:id:)(v54, v88);
    sub_1000E03B4((uint64_t)v88, &qword_1002B7850);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
    uint64_t v57 = v78;
    View.automationSemantics(_:)(v56, &type metadata for Text, &protocol witness table for Text);
    a1 = v83;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v56, v79);
    sub_1000EC044(v89, v90, v91);
    __n128 v58 = swift_bridgeObjectRelease(v92);
    (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 32))(v41, v57, v11, v58);
    uint64_t v59 = 0LL;
  }

  else
  {
    uint64_t v59 = 1LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v22, v59, 1LL, v11);
  if ((*(_BYTE *)(a1 + 97) & 1) != 0)
  {
    id v67 = [(id)objc_opt_self(ICAgeVerificationManager) defaultManager];
    id v68 = [v67 ageVerificationState];

    if (v68 && (id v69 = [v68 treatment], v68, v69 == (id)1))
    {
      unint64_t v70 = 0xEE006C6C69662E65LL;
      uint64_t v71 = 0x6C637269632E3931LL;
    }

    else
    {
      unint64_t v70 = 0xED00006C6C69662ELL;
      uint64_t v71 = 0x6572617571732E65LL;
    }

    uint64_t v66 = (uint64_t)v86;
    uint64_t v65 = v87;
    uint64_t v60 = Image.init(systemName:)(v71, v70);
    uint64_t v62 = static Font.caption.getter();
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EBCA8);
    uint64_t v63 = static VerticalAlignment.lastTextBaseline.getter();
    v64 = sub_10012FFC8;
  }

  else
  {
    uint64_t v60 = 0LL;
    uint64_t KeyPath = 0LL;
    uint64_t v62 = 0LL;
    uint64_t v63 = 0LL;
    v64 = 0LL;
    uint64_t v66 = (uint64_t)v86;
    uint64_t v65 = v87;
  }

  sub_1000E04D4((uint64_t)v22, v66, &qword_1002BAC78);
  sub_1000E04D4(v66, v65, &qword_1002BAC78);
  uint64_t v72 = sub_1000DFE10(&qword_1002BACC0);
  uint64_t v73 = (uint64_t *)(v65 + *(int *)(v72 + 48));
  *uint64_t v73 = v60;
  v73[1] = KeyPath;
  v73[2] = v62;
  v73[3] = v63;
  v73[4] = (uint64_t)v64;
  v73[5] = 0LL;
  uint64_t v74 = v65 + *(int *)(v72 + 64);
  *(void *)uint64_t v74 = 0LL;
  *(_BYTE *)(v74 + 8) = 0;
  sub_10013126C(v60, KeyPath, v62, v63, (uint64_t)v64, 0LL);
  sub_1000E03B4((uint64_t)v22, &qword_1002BAC78);
  sub_1001312BC(v60, KeyPath, v62, v63, (uint64_t)v64, 0LL);
  return sub_1000E03B4(v66, &qword_1002BAC78);
}

double sub_10012FFC8()
{
  return ViewDimensions.height.getter() * 0.9;
}

uint64_t sub_10012FFF4@<X0>(uint64_t a1@<X8>)
{
  return sub_10012C580(a1);
}

uint64_t sub_100130044()
{
  return sub_1000EACAC(&qword_1002BAB08, &qword_1002BAAD0, (void (*)(void))sub_100130068);
}

unint64_t sub_100130068()
{
  unint64_t result = qword_1002BAB10;
  if (!qword_1002BAB10)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAAC8);
    sub_1001300EC();
    sub_1000E0374(&qword_1002BAB20, &qword_1002BAAF8, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BAB10);
  }

  return result;
}

unint64_t sub_1001300EC()
{
  unint64_t result = qword_1002BAB18;
  if (!qword_1002BAB18)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAAC0);
    v2[0] = sub_1000DEA98(&qword_1002BAAB0);
    v2[1] = sub_1000E0374(&qword_1002BAAE8, &qword_1002BAAB0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>,  1LL);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BAB18);
  }

  return result;
}

uint64_t sub_1001301B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, char *a5)
{
  int v53 = a4;
  uint64_t v50 = a3;
  uint64_t v6 = type metadata accessor for LayoutSubview(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002BAD40);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for LayoutSubviews(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v51 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = sub_1000DFE10(&qword_1002BAD48);
  __chkstk_darwin(v22, v23);
  unint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  __n128 v52 = a5;
  uint64_t v55 = v15;
  uint64_t v56 = v26;
  v26(v21, a5, v14);
  uint64_t v27 = sub_1000DF308( &qword_1002BAD50,  (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews,  (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()(v14, v27);
  uint64_t v28 = &v25[*(int *)(v22 + 36)];
  uint64_t v29 = sub_1000DF308( &qword_1002BAD58,  (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews,  (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  uint64_t v30 = *(void *)v28;
  dispatch thunk of Collection.endIndex.getter(v58, v14, v29);
  if (v30 == v58[0])
  {
    uint64_t v31 = v29;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
LABEL_10:
    char v46 = v53;
    char v48 = v51;
    uint64_t v47 = v52;
    v32(v13, 1LL, 1LL, v6);
  }

  else
  {
    double v33 = 0.0;
    double v34 = 0.0;
    while (1)
    {
      uint64_t v35 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read(v58, v28, v14, v29);
      (*(void (**)(char *))(v7 + 16))(v13);
      v35(v58, 0LL);
      v56(v21, v25, v14);
      dispatch thunk of Collection.formIndex(after:)(v28, v14, v29);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v21, v14);
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v32(v13, 0LL, 1LL, v6);
      uint64_t v36 = v54;
      uint64_t v37 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v54, v13, v6);
      uint64_t v38 = static ProposedViewSize.unspecified.getter(v37);
      LOBYTE(v58[0]) = v39 & 1;
      LOBYTE(v57) = v40 & 1;
      double v41 = LayoutSubview.sizeThatFits(_:)(v38);
      if (v41 > v33) {
        double v33 = v41;
      }
      double v34 = v34 + v42;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v36, v6);
      uint64_t v43 = v25;
      uint64_t v44 = *(void *)v28;
      dispatch thunk of Collection.endIndex.getter(v58, v14, v29);
      BOOL v45 = v44 == v58[0];
      unint64_t v25 = v43;
      if (v45)
      {
        uint64_t v31 = v29;
        goto LABEL_10;
      }
    }

    uint64_t v31 = v29;
    char v46 = v53;
    char v48 = v51;
    uint64_t v47 = v52;
  }

  sub_1000E03B4((uint64_t)v25, &qword_1002BAD48);
  v56(v48, v47, v14);
  if ((v46 & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v48, v14);
  }
  dispatch thunk of Collection.startIndex.getter(v58, v14, v31);
  dispatch thunk of Collection.endIndex.getter(&v57, v14, v31);
  uint64_t result = dispatch thunk of Collection.distance(from:to:)(v58, &v57, v14, v31);
  if (!__OFSUB__(result, 1LL)) {
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v48, v14);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001305E4( uint64_t a1, int a2, uint64_t a3, int a4, char *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, double a10, double a11)
{
  double v89 = a10;
  int v80 = a4;
  uint64_t v88 = a3;
  int v79 = a2;
  uint64_t v87 = a1;
  uint64_t v17 = type metadata accessor for LayoutSubview(0LL);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v86 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20, v22);
  *(void *)&double v85 = (char *)&v79 - v23;
  uint64_t v24 = sub_1000DFE10(&qword_1002BAD40);
  uint64_t v26 = __chkstk_darwin(v24, v25);
  uint64_t v82 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26, v28);
  uint64_t v30 = (char *)&v79 - v29;
  uint64_t v31 = type metadata accessor for LayoutSubviews(0LL);
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v33);
  uint64_t v35 = (char *)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_1000DFE10(&qword_1002BAD48);
  uint64_t v38 = __chkstk_darwin(v36, v37);
  char v91 = (char *)&v79 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v38, v40);
  double v42 = (char *)&v79 - v41;
  uint64_t v90 = v32;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  double v84 = *(double *)&a5;
  uint64_t v92 = v43;
  v43(v35, a5, v31);
  uint64_t v44 = sub_1000DF308( &qword_1002BAD50,  (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews,  (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  uint64_t v93 = v35;
  uint64_t v81 = v44;
  dispatch thunk of Sequence.makeIterator()(v31, v44);
  uint64_t v83 = v36;
  BOOL v45 = &v42[*(int *)(v36 + 36)];
  uint64_t v46 = sub_1000DF308( &qword_1002BAD58,  (uint64_t (*)(uint64_t))&type metadata accessor for LayoutSubviews,  (uint64_t)&protocol conformance descriptor for LayoutSubviews);
  uint64_t v47 = *(void *)v45;
  dispatch thunk of Collection.endIndex.getter(v95, v31, v46);
  if (v47 == v95[0])
  {
    char v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    double v49 = 0.0;
    double v50 = 0.0;
    v48(v30, 1LL, 1LL, v17);
  }

  else
  {
    double v50 = 0.0;
    double v49 = 0.0;
    while (1)
    {
      uint64_t v51 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read(v95, v45, v31, v46);
      (*(void (**)(char *))(v18 + 16))(v30);
      v51(v95, 0LL);
      __n128 v52 = v93;
      v92(v93, v42, v31);
      dispatch thunk of Collection.formIndex(after:)(v45, v31, v46);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v31);
      char v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      v48(v30, 0LL, 1LL, v17);
      double v53 = v85;
      uint64_t v54 = (*(uint64_t (**)(double, char *, uint64_t))(v18 + 32))(COERCE_DOUBLE(*(void *)&v85), v30, v17);
      uint64_t v55 = static ProposedViewSize.unspecified.getter(v54);
      LOBYTE(v95[0]) = v56 & 1;
      char v94 = v57 & 1;
      double v58 = LayoutSubview.sizeThatFits(_:)(v55);
      if (v58 <= v50) {
        double v58 = v50;
      }
      if (v58 > a11) {
        double v50 = v58;
      }
      else {
        double v50 = a11;
      }
      if (v59 > v49) {
        double v49 = v59;
      }
      (*(void (**)(double, uint64_t))(v18 + 8))(COERCE_DOUBLE(*(void *)&v53), v17);
      uint64_t v60 = *(void *)v45;
      dispatch thunk of Collection.endIndex.getter(v95, v31, v46);
      if (v60 == v95[0])
      {
        v48(v30, 1LL, 1LL, v17);
        break;
      }
    }
  }

  sub_1000E03B4((uint64_t)v42, &qword_1002BAD48);
  v92(v93, *(char **)&v84, v31);
  uint64_t v61 = (uint64_t)v91;
  dispatch thunk of Sequence.makeIterator()(v31, v81);
  uint64_t v62 = (uint64_t *)(v61 + *(int *)(v83 + 36));
  uint64_t v63 = *v62;
  dispatch thunk of Collection.endIndex.getter(v95, v31, v46);
  BOOL v64 = v63 == v95[0];
  uint64_t v65 = v82;
  if (v64)
  {
LABEL_19:
    v48(v65, 1LL, 1LL, v17);
  }

  else
  {
    double v85 = v50;
    double v84 = v49;
    double v66 = 2.0;
    char v67 = v79 & 1;
    LODWORD(v83) = v80 & 1;
    while (1)
    {
      id v68 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read(v95, v62, v31, v46);
      (*(void (**)(char *))(v18 + 16))(v65);
      v68(v95, 0LL);
      id v69 = v93;
      v92(v93, (char *)v61, v31);
      dispatch thunk of Collection.formIndex(after:)(v62, v31, v46);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v69, v31);
      v48(v65, 0LL, 1LL, v17);
      unint64_t v70 = v86;
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v86, v65, v17);
      LOBYTE(v95[0]) = v67;
      char v94 = v83;
      LayoutSubview.sizeThatFits(_:)(v87);
      double v72 = v71;
      v96.origin.x = a6;
      v96.origin.y = a7;
      v96.size.width = a8;
      v96.size.height = a9;
      double v73 = CGRectGetMinX(v96) + 0.0;
      v97.origin.x = a6;
      v97.origin.y = a7;
      v97.size.width = a8;
      v97.size.height = a9;
      double v74 = v66 + CGRectGetMinY(v97);
      double v75 = static UnitPoint.topLeading.getter();
      LOBYTE(v95[0]) = 0;
      char v94 = 0;
      LayoutSubview.place(at:anchor:proposal:)(*(void *)&v85, 0LL, *(void *)&v84, 0LL, v73, v74, v75, v76);
      double v66 = v66 + v72 + v89;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v70, v17);
      uint64_t v77 = *v62;
      dispatch thunk of Collection.endIndex.getter(v95, v31, v46);
      BOOL v64 = v77 == v95[0];
      uint64_t v61 = (uint64_t)v91;
      if (v64) {
        goto LABEL_19;
      }
    }
  }

  return sub_1000E03B4(v61, &qword_1002BAD48);
}

uint64_t sub_100130C40(uint64_t a1, char a2, uint64_t a3, char a4, char *a5)
{
  return sub_1001301B8(a1, a2 & 1, a3, a4 & 1, a5);
}

uint64_t sub_100130C5C( uint64_t a1, char a2, uint64_t a3, char a4, char *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  return sub_1001305E4(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9, *v9, v9[1]);
}

uint64_t sub_100130C78( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100130CD0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100130CA4( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100130CD0( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100130CD0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_100130D0C(void *a1))(void *a1)
{
  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_1000FEA2C;
}

uint64_t sub_100130D6C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100130D7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_100130D84()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 != 1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(void *)(v0 + 40));
    swift_bridgeObjectRelease(*(void *)(v0 + 56));
    swift_bridgeObjectRelease(*(void *)(v0 + 72));

    swift_unknownObjectRelease(*(void *)(v0 + 104));
  }

  swift_bridgeObjectRelease(*(void *)(v0 + 120));
  return swift_deallocObject(v0, 152LL, 7LL);
}

void sub_100130DE0(uint64_t a1@<X8>)
{
}

uint64_t sub_100130DEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  sub_100130E50( *(void *)a1,  *(void *)(a1 + 8),  *(void *)(a1 + 16),  *(void *)(a1 + 24),  *(void *)(a1 + 32),  *(void *)(a1 + 40),  *(void *)(a1 + 48),  *(void *)(a1 + 56),  *(void *)(a1 + 64),  *(void *)(a1 + 72),  *(void **)(a1 + 80),  *(void *)(a1 + 88));
  swift_bridgeObjectRetain(v2);
  return a1;
}

id sub_100130E50( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12)
{
  if (a2 != 1)
  {
    swift_unknownObjectRetain(a12);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    return a11;
  }

  return result;
}

unint64_t sub_100130EC4()
{
  unint64_t result = qword_1002BAB88;
  if (!qword_1002BAB88)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAB78);
    sub_1000E0374(&qword_1002BAB90, &qword_1002BAB98, (uint64_t)&unk_1001EB480);
    sub_1000E0374( &qword_1002B7BB0,  (uint64_t *)&unk_1002BA020,  (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BAB88);
  }

  return result;
}

unint64_t sub_100130F60()
{
  unint64_t result = qword_1002BABA0;
  if (!qword_1002BABA0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAB60);
    sub_1000E0374(&qword_1002BABA8, (uint64_t *)&unk_1002BE1A0, (uint64_t)&protocol conformance descriptor for HStack<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BABA0);
  }

  return result;
}

unint64_t sub_100130FE4()
{
  unint64_t result = qword_1002BABD0;
  if (!qword_1002BABD0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EAC28, &type metadata for NowPlayingActions.Action.Kind);
    atomic_store(result, (unint64_t *)&qword_1002BABD0);
  }

  return result;
}

uint64_t sub_100131028()
{
  return sub_1000EACAC(&qword_1002BABF0, &qword_1002BAB40, (void (*)(void))sub_10013104C);
}

unint64_t sub_10013104C()
{
  unint64_t result = qword_1002BABF8;
  if (!qword_1002BABF8)
  {
    uint64_t v1 = sub_1000DEA98((uint64_t *)&unk_1002BE1B0);
    sub_1000E0374(&qword_1002BAC00, &qword_1002BAC08, (uint64_t)&protocol conformance descriptor for _LayoutRoot<A>);
    sub_1001310D0();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _VariadicView.Tree<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BABF8);
  }

  return result;
}

unint64_t sub_1001310D0()
{
  unint64_t result = qword_1002BAC10;
  if (!qword_1002BAC10)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAC18);
    v2[0] = sub_1000DEA98(&qword_1002BABD8);
    v2[1] = sub_1000E0374(&qword_1002BABE0, &qword_1002BABD8, (uint64_t)&protocol conformance descriptor for Button<A>);
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BAC10);
  }

  return result;
}

uint64_t sub_10013117C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a6);
    swift_bridgeObjectRelease(a8);

    return swift_unknownObjectRelease(a12);
  }

  return result;
}

unint64_t sub_1001311E8()
{
  unint64_t result = qword_1002BAC48;
  if (!qword_1002BAC48)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAC30);
    sub_1000E0374(&qword_1002BAC50, &qword_1002BAC28, (uint64_t)&protocol conformance descriptor for VStack<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BAC48);
  }

  return result;
}

uint64_t sub_10013126C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result)
  {
    uint64_t v8 = result;
    swift_retain(a3);
    swift_retain(a6);
    swift_retain(v8);
    return swift_retain(a2);
  }

  return result;
}

uint64_t sub_1001312BC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (result)
  {
    swift_release(result);
    swift_release(a2);
    swift_release(a6);
    return swift_release(a3);
  }

  return result;
}

uint64_t sub_100131310()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100131334@<X0>(uint64_t a1@<X8>)
{
  return sub_10012E3D4(*(_BYTE *)(v1 + 16), a1);
}

unint64_t sub_100131340()
{
  unint64_t result = qword_1002BACD0;
  if (!qword_1002BACD0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BACC8);
    v2[0] = sub_1000DEA98(&qword_1002BACD8);
    v2[1] = sub_1001313D4();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BACD0);
  }

  return result;
}

unint64_t sub_1001313D4()
{
  unint64_t result = qword_1002BACE0;
  if (!qword_1002BACE0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BACD8);
    sub_100131590((unint64_t *)&qword_1002BBC10, (uint64_t *)&unk_1002B9FC0);
    sub_1000E0374( &qword_1002BA0D0,  &qword_1002BA0D8,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BACE0);
  }

  return result;
}

unint64_t sub_100131478()
{
  unint64_t result = qword_1002BACF0;
  if (!qword_1002BACF0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BACE8);
    sub_1000E0374(&qword_1002BACF8, &qword_1002BAD00, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BACF0);
  }

  return result;
}

unint64_t sub_100131504()
{
  unint64_t result = qword_1002BAD18;
  if (!qword_1002BAD18)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAD10);
    sub_100131590(&qword_1002BAD20, &qword_1002BAD28);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BAD18);
  }

  return result;
}

uint64_t sub_100131590(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_1000DEA98(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }

  return result;
}

ValueMetadata *type metadata accessor for InfoVStack()
{
  return &type metadata for InfoVStack;
}

uint64_t sub_100131600()
{
  v1[0] = sub_1000DEA98(&qword_1002BAAD8);
  v1[1] = sub_1000EACAC(&qword_1002BAB00, &qword_1002BAAD8, (void (*)(void))sub_100130044);
  return swift_getOpaqueTypeConformance2( v1,  &opaque type descriptor for <<opaque return type of View.drawingGroup(opaque:colorMode:)>>,  1LL);
}

unint64_t sub_100131670()
{
  unint64_t result = qword_1002BAD30;
  if (!qword_1002BAD30)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for EmptyAnimatableData,  &type metadata for EmptyAnimatableData);
    atomic_store(result, (unint64_t *)&qword_1002BAD30);
  }

  return result;
}

unint64_t sub_1001316B8()
{
  unint64_t result = qword_1002BAD38;
  if (!qword_1002BAD38)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EBD14, &type metadata for InfoVStack);
    atomic_store(result, (unint64_t *)&qword_1002BAD38);
  }

  return result;
}

uint64_t sub_1001316FC(char a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v4 = swift_getKeyPath(&unk_1001EC0D0);
  BYTE1(v12[0]) = a1;
  swift_retain(v1);
  static Published.subscript.setter((char *)v12 + 1, v1, KeyPath, v4);
  uint64_t v5 = v1 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
  uint64_t result = swift_beginAccess(v1 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged, (char *)v12 + 1, 0LL, 0LL);
  uint64_t v7 = *(void (**)(void, __n128))v5;
  if (*(void *)v5)
  {
    uint64_t v8 = *(void *)(v5 + 8);
    uint64_t v9 = swift_getKeyPath(&unk_1001EC0A8);
    uint64_t v10 = swift_getKeyPath(&unk_1001EC0D0);
    swift_retain(v8);
    static Published.subscript.getter(v12, v1, v9, v10);
    swift_release(v9);
    __n128 v11 = swift_release(v10);
    v7(LOBYTE(v12[0]), v11);
    return sub_1000E03F0((uint64_t)v7, v8);
  }

  return result;
}

double sub_100131800(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v6 = Strong;
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0F0);
    uint64_t v8 = swift_getKeyPath(&unk_1001EC118);
    uint64_t v9 = v2;
    swift_bridgeObjectRetain(v2);
    swift_retain(v6);
    static Published.subscript.setter(&v9, v6, KeyPath, v8);
    sub_1001318A8();
    *(void *)&double result = swift_release(v6).n128_u64[0];
  }

  return result;
}

double sub_1001318A8()
{
  uint64_t v1 = v0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0F0);
  uint64_t v3 = swift_getKeyPath(&unk_1001EC118);
  static Published.subscript.getter(v28, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  uint64_t v4 = *(void *)v28;
  uint64_t v5 = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v6 = swift_getKeyPath(&unk_1001EC0D0);
  static Published.subscript.getter(v28, v1, v5, v6);
  swift_release(v5);
  swift_release(v6);
  LOBYTE(v5) = sub_100131C88(v28[0], v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = swift_getKeyPath(&unk_1001EC0F0);
    uint64_t v8 = swift_getKeyPath(&unk_1001EC118);
    static Published.subscript.getter(v28, v1, v7, v8);
    swift_release(v7);
    swift_release(v8);
    if (*(void *)(*(void *)v28 + 16LL))
    {
      unsigned __int8 v9 = *(_BYTE *)(*(void *)v28 + 32LL);
      swift_bridgeObjectRelease(*(void *)v28);
      uint64_t v10 = swift_getKeyPath(&unk_1001EC0A8);
      uint64_t v11 = swift_getKeyPath(&unk_1001EC0D0);
      v28[0] = v9;
      swift_retain(v1);
      static Published.subscript.setter(v28, v1, v10, v11);
      uint64_t v12 = v1 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
      swift_beginAccess(v1 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged, v28, 0LL, 0LL);
      uint64_t v13 = *(void (**)(void, __n128))v12;
      if (*(void *)v12)
      {
        uint64_t v14 = *(void *)(v12 + 8);
        uint64_t v15 = swift_getKeyPath(&unk_1001EC0A8);
        uint64_t v16 = swift_getKeyPath(&unk_1001EC0D0);
        swift_retain(v14);
        static Published.subscript.getter(v27, v1, v15, v16);
        swift_release(v15);
        __n128 v17 = swift_release(v16);
        v13(LOBYTE(v27[0]), v17);
        sub_1000E03F0((uint64_t)v13, v14);
      }
    }

    else
    {
      swift_bridgeObjectRelease(*(void *)v28);
    }
  }

  uint64_t v18 = v1 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged;
  swift_beginAccess(v1 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged, v27, 0LL, 0LL);
  uint64_t v20 = *(void (**)(uint64_t, __n128))v18;
  if (*(void *)v18)
  {
    uint64_t v21 = *(void *)(v18 + 8);
    uint64_t v22 = swift_getKeyPath(&unk_1001EC0F0);
    uint64_t v23 = swift_getKeyPath(&unk_1001EC118);
    swift_retain(v21);
    static Published.subscript.getter(&v26, v1, v22, v23);
    swift_release(v22);
    __n128 v24 = swift_release(v23);
    uint64_t v25 = v26;
    v20(v26, v24);
    sub_1000E03F0((uint64_t)v20, v21);
    *(void *)&double result = swift_bridgeObjectRelease(v25).n128_u64[0];
  }

  return result;
}

uint64_t sub_100131B48()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0F0);
  uint64_t v2 = swift_getKeyPath(&unk_1001EC118);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100131BB8()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v2 = swift_getKeyPath(&unk_1001EC0D0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

BOOL sub_100131C28(BOOL result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0LL;
  }
  int v3 = result;
  if (*(_BYTE *)(a2 + 32) == result) {
    return 1LL;
  }
  if (v2 == 1) {
    return 0LL;
  }
  for (uint64_t i = 33LL; ; ++i)
  {
    uint64_t v5 = i - 31;
    if (__OFADD__(i - 32, 1LL)) {
      break;
    }
    int v6 = *(unsigned __int8 *)(a2 + i);
    double result = v6 == v3;
    if (v6 == v3 || v5 == v2) {
      return result;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_100131C88(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    swift_bridgeObjectRetain(a2);
    __asm { BR              X9 }
  }

  return 0LL;
}

uint64_t sub_100131EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    unint64_t v5 = a2 & 0xC000000000000001LL;
    if ((a2 & 0xC000000000000001LL) == 0)
    {
      id v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }

    while (1)
    {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, a2);
LABEL_5:
      uint64_t v7 = v6;
      sub_1000F4C28();
      char v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1LL;
      }

      if (v4 == 1) {
        goto LABEL_18;
      }
      if (v5) {
        break;
      }
      unint64_t v5 = 5LL;
      while (1)
      {
        unint64_t v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1LL)) {
          break;
        }
        id v16 = *(id *)(a2 + 8 * v5);
        char v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0) {
          goto LABEL_6;
        }
        ++v5;
        if (v15 == v4) {
          goto LABEL_18;
        }
      }

      __break(1u);
    }

    uint64_t v10 = 1LL;
    while (1)
    {
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      uint64_t v12 = v10 + 1;
      if (__OFADD__(v10, 1LL)) {
        break;
      }
      uint64_t v13 = v11;
      char v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0) {
        goto LABEL_6;
      }
      ++v10;
      if (v12 == v4) {
        goto LABEL_18;
      }
    }

    __break(1u);
LABEL_20:
    if (a2 < 0) {
      uint64_t v18 = a2;
    }
    else {
      uint64_t v18 = a2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a2);
  }

uint64_t sub_100132064@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0F0);
  uint64_t v5 = swift_getKeyPath(&unk_1001EC118);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

double sub_1001320E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0F0);
  uint64_t v5 = swift_getKeyPath(&unk_1001EC118);
  uint64_t v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  static Published.subscript.setter(&v7, v3, KeyPath, v5);
  return sub_1001318A8();
}

void (*sub_10013215C(void *a1))(unsigned __int8 **a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v5 = swift_getKeyPath(&unk_1001EC0D0);
  static Published.subscript.getter(v3, v1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *((_BYTE *)v3 + 56) = *(_BYTE *)v3;
  return sub_1001321EC;
}

void sub_1001321EC(unsigned __int8 **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a1 + 24;
  unsigned __int8 v5 = (*a1)[56];
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v7 = swift_getKeyPath(&unk_1001EC0D0);
  uint64_t v8 = *((void *)v3 + 6);
  *uint64_t v3 = v5;
  swift_retain(v8);
  static Published.subscript.setter(v3, v8, KeyPath, v7);
  uint64_t v9 = v8 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
  uint64_t v10 = v8 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
  if ((a2 & 1) != 0)
  {
    swift_beginAccess(v10, v4, 0LL, 0LL);
    uint64_t v11 = *(void (**)(uint64_t, __n128))v9;
    if (*(void *)v9)
    {
      uint64_t v12 = *((void *)v3 + 6);
      uint64_t v13 = *(void *)(v9 + 8);
      uint64_t v14 = swift_getKeyPath(&unk_1001EC0A8);
      uint64_t v15 = swift_getKeyPath(&unk_1001EC0D0);
      swift_retain(v13);
      static Published.subscript.getter(v3, v12, v14, v15);
      swift_release(v15);
      __n128 v16 = swift_release(v14);
      uint64_t v17 = *v3;
LABEL_6:
      v11(v17, v16);
      sub_1000E03F0((uint64_t)v11, v13);
    }
  }

  else
  {
    swift_beginAccess(v10, v3, 0LL, 0LL);
    uint64_t v11 = *(void (**)(uint64_t, __n128))v9;
    if (*(void *)v9)
    {
      uint64_t v18 = *((void *)v3 + 6);
      uint64_t v13 = *(void *)(v9 + 8);
      uint64_t v19 = swift_getKeyPath(&unk_1001EC0A8);
      uint64_t v20 = swift_getKeyPath(&unk_1001EC0D0);
      swift_retain(v13);
      static Published.subscript.getter(v4, v18, v19, v20);
      swift_release(v20);
      __n128 v16 = swift_release(v19);
      uint64_t v17 = v3[24];
      goto LABEL_6;
    }
  }

  free(v3);
}

uint64_t sub_100132384@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v5 = swift_getKeyPath(&unk_1001EC0D0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100132400(char *a1)
{
  return sub_1001316FC(*a1);
}

uint64_t sub_100132424()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs__tabs;
  uint64_t v2 = sub_1000DFE10(&qword_1002BAE80);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_1000E03F0( *(void *)((char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged),  *(void *)((char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged + 8));
  uint64_t v3 = (char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs__selectedTab;
  uint64_t v4 = sub_1000DFE10(&qword_1002BAE88);
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  sub_1000E03F0( *(void *)((char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged),  *(void *)((char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged + 8));
  swift_release(*(void *)((char *)v0 + OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t sub_1001324EC()
{
  return type metadata accessor for Tabs(0LL);
}

uint64_t type metadata accessor for Tabs(uint64_t a1)
{
  uint64_t result = qword_1002BAD98;
  if (!qword_1002BAD98) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Tabs);
  }
  return result;
}

void sub_100132530(uint64_t a1)
{
  v6[0] = "(";
  v6[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_1001325E8(319LL);
  if (v3 <= 0x3F)
  {
    v6[2] = *(void *)(v2 - 8) + 64LL;
    v6[3] = &unk_1001EBE78;
    sub_100132640();
    if (v5 <= 0x3F)
    {
      v6[4] = *(void *)(v4 - 8) + 64LL;
      v6[5] = &unk_1001EBE78;
      v6[6] = (char *)&value witness table for Builtin.NativeObject + 64;
      swift_updateClassMetadata2(a1, 256LL, 7LL, v6, a1 + 80);
    }
  }

void sub_1001325E8(uint64_t a1)
{
  if (!qword_1002BADA8)
  {
    uint64_t v2 = sub_1000DEA98((uint64_t *)&unk_1002BD140);
    unint64_t v3 = type metadata accessor for Published(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002BADA8);
    }
  }

void sub_100132640()
{
  if (!qword_1002BADB0)
  {
    unint64_t v0 = type metadata accessor for Published(0LL, &type metadata for TVMusicTabID);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1002BADB0);
    }
  }

uint64_t getEnumTagSinglePayload for TVMusicTabID(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }

uint64_t storeEnumTagSinglePayload for TVMusicTabID(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF9) {
    return ((uint64_t (*)(void))((char *)&loc_100132770 + 4 * byte_1001EBDF3[v4]))();
  }
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1001327A4 + 4 * byte_1001EBDEE[v4]))();
}

uint64_t sub_1001327A4(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001327AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1001327B4LL);
  }
  return result;
}

uint64_t sub_1001327C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1001327C8LL);
  }
  *(_BYTE *)uint64_t result = a2 + 6;
  return result;
}

uint64_t sub_1001327CC(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001327D4(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TVMusicTabID()
{
  return &type metadata for TVMusicTabID;
}

unint64_t sub_1001327F4()
{
  unint64_t result = qword_1002BAE60;
  if (!qword_1002BAE60)
  {
    uint64_t v1 = sub_1000DEA98((uint64_t *)&unk_1002BD140);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002BAE60);
  }

  return result;
}

uint64_t sub_100132840()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged, v4, 0LL, 0LL);
  uint64_t v2 = *v1;
  sub_10011418C(*v1, v1[1]);
  return v2;
}

uint64_t sub_10013289C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0LL;
  }
  unint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged);
  swift_beginAccess(v5, v9, 1LL, 0LL);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  *unint64_t v5 = a1;
  v5[1] = v4;
  return sub_1000E03F0(v6, v7);
}

void (*sub_1001328FC(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged;
  v3[5] = v1;
  v3[6] = v4;
  unint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 33LL, 0LL);
  if (*v5) {
    uint64_t v6 = v5[1];
  }
  else {
    uint64_t v6 = 0LL;
  }
  v3[3] = *v5;
  v3[4] = v6;
  return sub_100132970;
}

void sub_100132970(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = (void *)(*(void *)(*(void *)a1 + 40LL) + *(void *)(*(void *)a1 + 48LL));
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  uint64_t v4 = *(void *)(*(void *)a1 + 32LL);
  if (!v3) {
    uint64_t v4 = 0LL;
  }
  void *v2 = v3;
  v2[1] = v4;
  swift_endAccess(v1);
  free(v1);
}

uint64_t sub_1001329B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v4 = swift_getKeyPath(&unk_1001EC0D0);
  static Published.subscript.getter(&v6, v1, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t result = swift_release(v4);
  *a1 = v6;
  return result;
}

uint64_t sub_100132A28(char *a1)
{
  return sub_1001316FC(*a1);
}

void (*sub_100132A30(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10013215C(v2);
  return sub_1000FEA2C;
}

uint64_t (*sub_100132A74())(unsigned __int8 *)
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged);
  swift_beginAccess(v1, v7, 0LL, 0LL);
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  if (v2)
  {
    uint64_t v4 = swift_allocObject(&unk_1002738F0, 32LL, 7LL);
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = v3;
    unint64_t v5 = sub_100133F40;
  }

  else
  {
    unint64_t v5 = 0LL;
  }

  sub_10011418C(v2, v3);
  return v5;
}

uint64_t sub_100132B08(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject(&unk_1002738C8, 32LL, 7LL);
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    uint64_t v6 = sub_100133F54;
  }

  else
  {
    uint64_t v6 = 0LL;
    uint64_t v5 = 0LL;
  }

  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged);
  swift_beginAccess(v7, v11, 1LL, 0LL);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  return sub_1000E03F0(v8, v9);
}

void (*sub_100132B98(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess(v1 + v4, v3, 33LL, 0LL);
  uint64_t v6 = *v5;
  if (*v5)
  {
    uint64_t v7 = v5[1];
    uint64_t v8 = swift_allocObject(&unk_1002738A0, 32LL, 7LL);
    *(void *)(v8 + 16) = v6;
    *(void *)(v8 + 24) = v7;
    uint64_t v9 = sub_100133DB0;
  }

  else
  {
    uint64_t v9 = 0LL;
    uint64_t v8 = 0LL;
  }

  v3[3] = v9;
  v3[4] = v8;
  return sub_100132C3C;
}

void sub_100132C3C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24LL);
  if ((a2 & 1) == 0)
  {
    if (v3)
    {
      uint64_t v7 = v2[4];
      uint64_t v5 = swift_allocObject(&unk_100273878, 32LL, 7LL);
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v7;
      uint64_t v6 = sub_100133F54;
      goto LABEL_7;
    }

uint64_t sub_100132CE4()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC0A8);
  uint64_t v2 = swift_getKeyPath(&unk_1001EC0D0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return swift_retain(*(void *)(v0 + OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority));
}

uint64_t sub_100132D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_100132D88(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_100132DC0 + 4 * byte_1001EBDF8[a1]))( 0x6F4E6E657473696CLL,  0xE900000000000077LL);
}

uint64_t sub_100132DC0()
{
  return 0x6573776F7262LL;
}

uint64_t sub_100132DD4()
{
  return 0x6F69646172LL;
}

uint64_t sub_100132DE8()
{
  return 0x736F65646976LL;
}

uint64_t sub_100132DFC()
{
  return 0x7972617262696CLL;
}

uint64_t sub_100132E14()
{
  return 0x686372616573LL;
}

uint64_t sub_100132E28()
{
  return 0x6979616C50776F6ELL;
}

void sub_100132E44(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100132E70()
{
  v4[3] = &type metadata for Feature.TVMusic;
  v4[4] = sub_1000FF104();
  LOBYTE(v4[0]) = 3;
  char v0 = isFeatureEnabled(_:)(v4);
  sub_1000E053C(v4);
  if ((v0 & 1) != 0)
  {
    unint64_t v1 = 0x656C746954626154LL;
    unint64_t v2 = 0xEC000000656D6F48LL;
  }

  else
  {
    unint64_t v2 = 0x8000000100226E50LL;
    unint64_t v1 = 0xD000000000000011LL;
  }

  return LocalizedStringKey.init(stringLiteral:)(v1, v2);
}

void sub_100133004(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100133050()
{
  v3[3] = &type metadata for Feature.TVMusic;
  v3[4] = sub_1000FF104();
  LOBYTE(v3[0]) = 3;
  char v1 = isFeatureEnabled(_:)(v3);
  sub_1000E053C(v3);
  if ((v1 & 1) != 0) {
    return 0x6C69662E656D6F68LL;
  }
  else {
    return v0;
  }
}

void sub_10013314C(char a1)
{
  __asm { BR              X10 }

uint64_t sub_10013318C()
{
  v2[3] = &type metadata for Feature.TVMusic;
  v2[4] = sub_1000FF104();
  LOBYTE(v2[0]) = 3;
  char v0 = isFeatureEnabled(_:)(v2);
  sub_1000E053C(v2);
  if ((v0 & 1) != 0) {
    return 1701670760LL;
  }
  else {
    return 0x6E5F6E657473696CLL;
  }
}

void sub_1001332B8(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v18 = sub_1000DFE10(&qword_1002BAE90);
  __chkstk_darwin(v18, v3);
  uint64_t v20 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for AutomationSemantics(0LL);
  v17[0] = *(void *)(v5 - 8);
  v17[1] = v5;
  uint64_t v7 = __chkstk_darwin(v5, v6);
  __chkstk_darwin(v7, v8);
  uint64_t v9 = sub_1000DFE10(&qword_1002BAE98);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  __chkstk_darwin(v15, v16);
  __asm { BR              X10 }

void sub_100133440()
{
  char v2 = _stringCompareWithSmolCheck(_:_:expecting:)( 0x6573776F7262LL,  0xE600000000000000LL,  0x686372616573LL,  0xE600000000000000LL,  0LL);
  swift_bridgeObjectRelease(0xE600000000000000LL);
  if ((v2 & 1) != 0)
  {
    sub_100133004(v0);
    *(void *)(v1 - 120) = Image.init(_internalSystemName:)(v3, v4);
    *(void *)(v1 - 128) = ((uint64_t (*)(uint64_t, void *, void *))AnyView.init<A>(_:))( v1 - 120,  &type metadata for Image,  &protocol witness table for Image);
    __asm { BR              X11 }
  }

  sub_100132E44(v0);
  *(void *)(v1 - 120) = Text.init(_:tableName:bundle:comment:)(v5);
  *(void *)(v1 - 11sub_1000E053C(v0 + 2) = v6;
  *(_BYTE *)(v1 - 104) = v7 & 1;
  *(void *)(v1 - 96) = v8;
  *(void *)(v1 - 128) = ((uint64_t (*)(uint64_t, void *, void *))AnyView.init<A>(_:))( v1 - 120,  &type metadata for Text,  &protocol witness table for Text);
  __asm { BR              X11 }

void sub_1001335E8()
{
  *(void *)(v4 - 96) = &type metadata for String;
  *(void *)(v4 - 120) = 0x6F4E6E657473696CLL;
  *(void *)(v4 - 11sub_1000E053C(v0 + 2) = 0xE900000000000077LL;
  static AutomationSemantics.tabBar(tabName:)(v4 - 120);
  sub_1000E053C((void *)(v4 - 120));
  View.automationSemantics(_:)(v2, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v4 - 176) + 8LL))(v2, *(void *)(v4 - 168));
  __n128 v5 = swift_release(*(void *)(v4 - 128));
  uint64_t v6 = *(void *)(v4 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 32))(v1, v3, v0, v5);
  uint64_t v7 = *(void *)(v4 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v1, v0);
  swift_storeEnumTagMultiPayload(v7, *(void *)(v4 - 160), 1LL);
  *(void *)(v4 - 120) = &type metadata for AnyView;
  *(void *)(v4 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v4 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v7, v0, v0, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133604()
{
  *(void *)(v5 - 96) = &type metadata for String;
  *(void *)(v5 - 120) = 0x6F69646172LL;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = 0xE500000000000000LL;
  static AutomationSemantics.tabBar(tabName:)(v5 - 120);
  sub_1000E053C((void *)(v5 - 120));
  View.automationSemantics(_:)(v0, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v5 - 176) + 8LL))(v0, *(void *)(v5 - 168));
  swift_release(*(void *)(v5 - 128));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v2, v1);
  uint64_t v6 = *(void *)(v5 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v4, v1);
  swift_storeEnumTagMultiPayload(v6, *(void *)(v5 - 160), 0LL);
  *(void *)(v5 - 120) = &type metadata for AnyView;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v5 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v6, v1, v1, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133618(uint64_t a1@<X8>)
{
  *(void *)(v6 - 96) = &type metadata for String;
  *(void *)(v6 - 120) = 0x736F65646976LL;
  *(void *)(v6 - 11sub_1000E053C(v0 + 2) = a1;
  static AutomationSemantics.tabBar(tabName:)(v6 - 120);
  sub_1000E053C((void *)(v6 - 120));
  View.automationSemantics(_:)(v1, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v6 - 176) + 8LL))(v1, *(void *)(v6 - 168));
  swift_release(*(void *)(v6 - 128));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v3, v2);
  uint64_t v7 = *(void *)(v6 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v5, v2);
  swift_storeEnumTagMultiPayload(v7, *(void *)(v6 - 160), 0LL);
  *(void *)(v6 - 120) = &type metadata for AnyView;
  *(void *)(v6 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v6 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v7, v2, v2, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133628()
{
  *(void *)(v5 - 96) = &type metadata for String;
  *(void *)(v5 - 120) = 0x7972617262696CLL;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = 0xE700000000000000LL;
  static AutomationSemantics.tabBar(tabName:)(v5 - 120);
  sub_1000E053C((void *)(v5 - 120));
  View.automationSemantics(_:)(v0, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v5 - 176) + 8LL))(v0, *(void *)(v5 - 168));
  swift_release(*(void *)(v5 - 128));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v2, v1);
  uint64_t v6 = *(void *)(v5 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v4, v1);
  swift_storeEnumTagMultiPayload(v6, *(void *)(v5 - 160), 0LL);
  *(void *)(v5 - 120) = &type metadata for AnyView;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v5 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v6, v1, v1, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133640(uint64_t a1@<X8>)
{
  *(void *)(v6 - 96) = &type metadata for String;
  *(void *)(v6 - 120) = 0x686372616573LL;
  *(void *)(v6 - 11sub_1000E053C(v0 + 2) = a1;
  static AutomationSemantics.tabBar(tabName:)(v6 - 120);
  sub_1000E053C((void *)(v6 - 120));
  View.automationSemantics(_:)(v1, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v6 - 176) + 8LL))(v1, *(void *)(v6 - 168));
  swift_release(*(void *)(v6 - 128));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5, v3, v2);
  uint64_t v7 = *(void *)(v6 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v5, v2);
  swift_storeEnumTagMultiPayload(v7, *(void *)(v6 - 160), 0LL);
  *(void *)(v6 - 120) = &type metadata for AnyView;
  *(void *)(v6 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v6 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v7, v2, v2, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133650()
{
}

void sub_100133740()
{
  *(void *)(v4 - 96) = &type metadata for String;
  *(void *)(v4 - 120) = 0x6F69646172LL;
  *(void *)(v4 - 11sub_1000E053C(v0 + 2) = 0xE500000000000000LL;
  static AutomationSemantics.tabBar(tabName:)(v4 - 120);
  sub_1000E053C((void *)(v4 - 120));
  View.automationSemantics(_:)(v2, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v4 - 176) + 8LL))(v2, *(void *)(v4 - 168));
  swift_release(*(void *)(v4 - 128));
  uint64_t v5 = *(void *)(v4 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v3, v0);
  uint64_t v6 = *(void *)(v4 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v1, v0);
  swift_storeEnumTagMultiPayload(v6, *(void *)(v4 - 160), 1LL);
  *(void *)(v4 - 120) = &type metadata for AnyView;
  *(void *)(v4 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v4 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v6, v0, v0, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133754(uint64_t a1@<X8>)
{
  *(void *)(v5 - 96) = &type metadata for String;
  *(void *)(v5 - 120) = 0x736F65646976LL;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = a1;
  static AutomationSemantics.tabBar(tabName:)(v5 - 120);
  sub_1000E053C((void *)(v5 - 120));
  View.automationSemantics(_:)(v3, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v5 - 176) + 8LL))(v3, *(void *)(v5 - 168));
  swift_release(*(void *)(v5 - 128));
  uint64_t v6 = *(void *)(v5 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v4, v1);
  uint64_t v7 = *(void *)(v5 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v2, v1);
  swift_storeEnumTagMultiPayload(v7, *(void *)(v5 - 160), 1LL);
  *(void *)(v5 - 120) = &type metadata for AnyView;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v5 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v7, v1, v1, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_100133764()
{
  *(void *)(v4 - 96) = &type metadata for String;
  *(void *)(v4 - 120) = 0x7972617262696CLL;
  *(void *)(v4 - 11sub_1000E053C(v0 + 2) = 0xE700000000000000LL;
  static AutomationSemantics.tabBar(tabName:)(v4 - 120);
  sub_1000E053C((void *)(v4 - 120));
  View.automationSemantics(_:)(v2, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v4 - 176) + 8LL))(v2, *(void *)(v4 - 168));
  swift_release(*(void *)(v4 - 128));
  uint64_t v5 = *(void *)(v4 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v3, v0);
  uint64_t v6 = *(void *)(v4 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v1, v0);
  swift_storeEnumTagMultiPayload(v6, *(void *)(v4 - 160), 1LL);
  *(void *)(v4 - 120) = &type metadata for AnyView;
  *(void *)(v4 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v4 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v6, v0, v0, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_10013377C(uint64_t a1@<X8>)
{
  *(void *)(v5 - 96) = &type metadata for String;
  *(void *)(v5 - 120) = 0x686372616573LL;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = a1;
  static AutomationSemantics.tabBar(tabName:)(v5 - 120);
  sub_1000E053C((void *)(v5 - 120));
  View.automationSemantics(_:)(v3, &type metadata for AnyView, &protocol witness table for AnyView);
  (*(void (**)(uint64_t, void))(*(void *)(v5 - 176) + 8LL))(v3, *(void *)(v5 - 168));
  swift_release(*(void *)(v5 - 128));
  uint64_t v6 = *(void *)(v5 - 152);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, v4, v1);
  uint64_t v7 = *(void *)(v5 - 144);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v2, v1);
  swift_storeEnumTagMultiPayload(v7, *(void *)(v5 - 160), 1LL);
  *(void *)(v5 - 120) = &type metadata for AnyView;
  *(void *)(v5 - 11sub_1000E053C(v0 + 2) = &protocol witness table for AnyView;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v5 - 120,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  _ConditionalContent<>.init(storage:)(v7, v1, v1, OpaqueTypeConformance2, OpaqueTypeConformance2);
  JUMPOUT(0x100133880LL);
}

void sub_10013378C()
{
}

void sub_1001338B0(char *a1)
{
}

void sub_1001338BC()
{
}

void sub_1001338C8()
{
  __asm { BR              X10 }

uint64_t sub_100133908(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xE600000000000000LL);
}

void sub_1001339A0(uint64_t a1)
{
}

unint64_t sub_1001339A8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_100133DDC(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001339D4()
{
  return ((uint64_t (*)(void))((char *)sub_100133A08 + 4 * byte_1001EBE30[*v0]))();
}

void sub_100133A08(void *a1@<X8>)
{
  *a1 = 0x6573776F7262LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100133A20(void *a1@<X8>)
{
  *a1 = 0x6F69646172LL;
  a1[1] = 0xE500000000000000LL;
}

void sub_100133A38(void *a1@<X8>)
{
  *a1 = 0x736F65646976LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100133A50(void *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000LL;
}

void sub_100133A6C(void *a1@<X8>)
{
  *a1 = 0x686372616573LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100133A84(void *a1@<X8>)
{
  *a1 = 0x6979616C50776F6ELL;
  a1[1] = 0xEA0000000000676ELL;
}

uint64_t sub_100133AA4()
{
  return ((uint64_t (*)(void))((char *)sub_100133AD8 + 4 * byte_1001EBE37[*v0]))();
}

void sub_100133AD8(void *a1@<X8>)
{
  *a1 = 0x6573776F7262LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100133AF0(void *a1@<X8>)
{
  *a1 = 0x6F69646172LL;
  a1[1] = 0xE500000000000000LL;
}

void sub_100133B08(void *a1@<X8>)
{
  *a1 = 0x736F65646976LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100133B20(void *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000LL;
}

void sub_100133B3C(void *a1@<X8>)
{
  *a1 = 0x686372616573LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100133B54(void *a1@<X8>)
{
  *a1 = 0x6979616C50776F6ELL;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_100133B74(void *a1@<X8>)
{
  *a1 = &off_10026F990;
}

void *sub_100133B84()
{
  return &protocol witness table for String;
}

unint64_t sub_100133B94()
{
  unint64_t result = qword_1002BAE68;
  if (!qword_1002BAE68)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EBF88, &type metadata for TVMusicTabID);
    atomic_store(result, (unint64_t *)&qword_1002BAE68);
  }

  return result;
}

unint64_t sub_100133BDC()
{
  unint64_t result = qword_1002BAE70;
  if (!qword_1002BAE70)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EBED8, &type metadata for TVMusicTabID);
    atomic_store(result, (unint64_t *)&qword_1002BAE70);
  }

  return result;
}

uint64_t sub_100133C20@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result = sub_100133E24(a1);
  *a2 = result;
  return result;
}

void sub_100133C44()
{
  __asm { BR              X10 }

uint64_t sub_100133C70()
{
  uint64_t v1 = enum case for MusicTabID.listenNow(_:);
  uint64_t v2 = ((uint64_t (*)(void))type metadata accessor for MusicTabID)(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 104LL))(v0, v1, v2);
}

unint64_t sub_100133CF0()
{
  unint64_t result = qword_1002BAE78;
  if (!qword_1002BAE78)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EBFB0, &type metadata for TVMusicTabID);
    atomic_store(result, (unint64_t *)&qword_1002BAE78);
  }

  return result;
}

uint64_t sub_100133D38(char *a1)
{
  return sub_1001316FC(*a1);
}

uint64_t sub_100133D5C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100133D80(char a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = a1;
  return v2(&v4);
}

uint64_t sub_100133DB0(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_100133DDC(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10026F8C8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 7) {
    return 7LL;
  }
  else {
    return v3;
  }
}

uint64_t sub_100133E24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MusicTabID(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == enum case for MusicTabID.listenNow(_:)) {
    return 0LL;
  }
  if (v4 == enum case for MusicTabID.browse(_:)) {
    return 1LL;
  }
  if (v4 == enum case for MusicTabID.videos(_:)) {
    return 3LL;
  }
  if (v4 == enum case for MusicTabID.radio(_:)) {
    return 2LL;
  }
  if (v4 == enum case for MusicTabID.library(_:)) {
    return 4LL;
  }
  if (v4 == enum case for MusicTabID.nowPlaying(_:)) {
    return 6LL;
  }
  if (v4 == enum case for MusicTabID.search(_:)) {
    return 5LL;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return 7LL;
}

uint64_t sub_100133F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notification(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = *(void (**)(char *))(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v9);
  v10(v8);
  swift_release(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100133FFC()
{
  id v1 = [v0 type];
  if (v1 == (id)9 || v1 == (id)6) {
    return 0LL;
  }
  if (v1 != (id)1) {
    return 4LL;
  }
  id v4 = [v0 song];
  else {
    return 2LL;
  }
}

id sub_10013408C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    uint64_t v4 = 12LL;
  }
  else {
    uint64_t v4 = 0LL;
  }
  uint64_t v5 = (objc_class *)type metadata accessor for TVMusicPlaybackViewController(0LL);
  unsigned __int8 v6 = objc_allocWithZone(v5);
  Logger.init(subsystem:category:)( 0xD000000000000028LL,  0x8000000100227060LL,  0xD00000000000001DLL,  0x80000001001EC140LL);
  v6[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_isVisible] = 0;
  *(void *)&v6[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_didBecomeActiveNotification] = 0LL;
  uint64_t v7 = &v6[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingType];
  *(void *)uint64_t v7 = a2;
  v7[8] = 0;
  *(void *)&v6[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingOptions] = v4;

  v9.receiver = v6;
  v9.super_class = v5;
  return objc_msgSendSuper2(&v9, "initWithNibName:bundle:", 0, 0);
}

id sub_100134184(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  Logger.init(subsystem:category:)( 0xD000000000000028LL,  0x8000000100227060LL,  0xD00000000000001DLL,  0x80000001001EC140LL);
  v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_isVisible] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_didBecomeActiveNotification] = 0LL;
  unsigned __int8 v6 = &v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingType];
  *(void *)unsigned __int8 v6 = a1;
  v6[8] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingOptions] = a2;

  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, "initWithNibName:bundle:", 0, 0);
}

id sub_10013426C(uint64_t a1)
{
  return sub_10013408C(a1, *(void *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_100134278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001373C0();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1001342C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001373C0();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100134318(uint64_t a1)
{
  unint64_t v2 = sub_1001373C0();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_10013433C()
{
  return swift_unknownObjectWeakInit(&unk_1002BAEA0, 0LL);
}

id sub_1001343F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  Logger.init(subsystem:category:)( 0xD000000000000028LL,  0x8000000100227060LL,  0xD00000000000001DLL,  0x80000001001EC140LL);
  v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_isVisible] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_didBecomeActiveNotification] = 0LL;
  unint64_t v6 = &v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingType];
  *(void *)unint64_t v6 = a1;
  v6[8] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingOptions] = a2;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for TVMusicPlaybackViewController(0LL);
  return objc_msgSendSuper2(&v8, "initWithNibName:bundle:", 0, 0);
}

void sub_1001345E8()
{
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingOptions) & 8) == 0) {
    goto LABEL_6;
  }
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlayerManager);
  id v2 = [v1 defaultPlayer];
  id v3 = [v2 playQueue];

  if (v3)
  {
    unsigned __int8 v4 = [v3 vocalAttenuationEnabled];

    if ((v4 & 1) != 0)
    {
LABEL_6:
      id v7 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
      id v8 = [(id)objc_opt_self(NSOperationQueue) mainQueue];
      uint64_t v9 = swift_allocObject(&unk_100273BF8, 24LL, 7LL);
      swift_unknownObjectWeakInit(v9 + 16, v0);
      v13[4] = sub_1001372F4;
      uint64_t v14 = v9;
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 1107296256LL;
      v13[2] = sub_100133F58;
      v13[3] = &unk_100273C10;
      uint64_t v10 = _Block_copy(v13);
      id v11 =  objc_msgSend( v7,  "addObserverForName:object:queue:usingBlock:",  UIApplicationDidBecomeActiveNotification,  0,  v8,  v10,  swift_release(v14).n128_f64[0]);
      _Block_release(v10);

      uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_didBecomeActiveNotification);
      *(void *)(v0 + OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_didBecomeActiveNotification) = v11;
      swift_unknownObjectRelease(v12);
      return;
    }

    id v5 = [v1 defaultPlayer];
    id v6 = [v5 playQueue];

    if (v6)
    {
      [v6 setVocalAttenuationEnabled:1];

      goto LABEL_6;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
}

void sub_1001347F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    unsigned __int8 v4 = (void *)Strong;
    if (*(_BYTE *)(Strong + OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_isVisible) == 1) {
      sub_10013496C();
    }
  }

void sub_10013496C()
{
  uint64_t v1 = v0;
  if (qword_1002B71B8 != -1) {
    swift_once(&qword_1002B71B8, sub_10013433C);
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&unk_1002BAEA0);
  if (!Strong) {
    goto LABEL_6;
  }
  id v3 = Strong;
  id v4 = [Strong parentViewController];

  if (!v4
    || (sub_100137174(),
        id v5 = v1,
        id v6 = v4,
        char v7 = static NSObject.== infix(_:_:)(),
        v6,
        v6,
        v5,
        (v7 & 1) == 0))
  {
LABEL_6:
    id v8 = &v1[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingType];
    unint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingType];
    unsigned __int8 v10 = v1[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingType + 8];
    *(void *)id v8 = 0LL;
    v8[8] = 1;
    LOBYTE(v8) = v9 > 3;
    unsigned int v11 = 0x3000204u >> (8 * v9);
    else {
      char v12 = v11;
    }
    uint64_t v13 = (char *)swift_unknownObjectWeakLoadStrong(&unk_1002BAEA0);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    if (v13)
    {
      if (v16)
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Reusing shared PlaybackViewController", v17, 2u);
        swift_slowDealloc(v17, -1LL, -1LL);
      }

      uint64_t v18 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingOptions];
      uint64_t v19 = *(void *)&v13[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions];
      *(void *)&v13[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions] = v18;
      if (v18 != v19)
      {
        uint64_t v13 = v13;
      }
    }

    else
    {
      if (v16)
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v21 = swift_slowAlloc(32LL, -1LL);
        uint64_t v32 = v21;
        *(_DWORD *)uint64_t v20 = 136446210;
        LOBYTE(v31) = v12;
        uint64_t v22 = sub_1000DFE10(&qword_1002BB000);
        uint64_t v23 = String.init<A>(describing:)(&v31, v22);
        unint64_t v25 = v24;
        uint64_t v31 = sub_1001B2690(v23, v24, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v20 + 4);
        swift_bridgeObjectRelease(v25);
        _os_log_impl( (void *)&_mh_execute_header,  v14,  v15,  "Instantiating PlaybackViewController with initialContentType: %{public}s",  v20,  0xCu);
        swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v21, -1LL, -1LL);
        swift_slowDealloc(v20, -1LL, -1LL);
      }

      uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic29TVMusicPlaybackViewController_nowPlayingOptions];
      uint64_t v27 = (objc_class *)type metadata accessor for PlaybackViewController(0LL);
      uint64_t v28 = objc_allocWithZone(v27);
      Logger.init(subsystem:category:)( 0xD000000000000028LL,  0x8000000100227060LL,  0xD000000000000016LL,  0x80000001001EC1B0LL);
      uint64_t v29 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType;
      v28[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType] = 4;
      uint64_t v30 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions;
      *(void *)&v28[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions] = 0LL;
      *(void *)&v28[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_playerResponseSubscription] = 0LL;
      *(void *)&v28[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController] = 0LL;
      *(void *)&v28[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_parents] = &_swiftEmptyArrayStorage;
      v28[v29] = v12;
      *(void *)&v28[v30] = v26;

      v33.receiver = v28;
      v33.super_class = v27;
      uint64_t v13 = (char *)objc_msgSendSuper2(&v33, "initWithNibName:bundle:", 0, 0);
      swift_unknownObjectWeakAssign(&unk_1002BAEA0, v13);
    }

    sub_10013621C(v1);
  }

id sub_100134E48()
{
  return sub_100136700(type metadata accessor for TVMusicPlaybackViewController);
}

uint64_t sub_100134EA4()
{
  return type metadata accessor for TVMusicPlaybackViewController(0LL);
}

uint64_t type metadata accessor for TVMusicPlaybackViewController(uint64_t a1)
{
  return sub_1000EE114( a1,  (uint64_t *)&unk_1002BAEF8,  (uint64_t)&nominal type descriptor for TVMusicPlaybackViewController);
}

uint64_t sub_100134EC0(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for Logger(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = &unk_1001EC180;
    v5[2] = &unk_1001EC198;
    v5[3] = &unk_1001EC1B0;
    v5[4] = (char *)&value witness table for Builtin.Int64 + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v5, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

BOOL sub_100134F58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0LL;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

void sub_100134FB8(id a1)
{
  int v2 = v1;
  id v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
  if (!v5)
  {
    if (!a1) {
      return;
    }
    goto LABEL_6;
  }

  if (a1)
  {
    sub_100137174();
    id v3 = v3;
    id v6 = v5;
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) != 0) {
      return;
    }
LABEL_6:
    [v3 willMoveToParentViewController:0];
    id v8 = [v3 view];
    if (!v8)
    {
      __break(1u);
      goto LABEL_17;
    }

    unint64_t v9 = v8;
    [v8 removeFromSuperview];
  }

  [v3 removeFromParentViewController];
  unsigned __int8 v10 = *(void **)&v2[v4];
  if (v10)
  {
    id v29 = v10;
    [v2 addChildViewController:v29];
    id v11 = [v29 view];
    if (v11)
    {
      char v12 = v11;
      id v13 = [v2 view];
      if (v13)
      {
        uint64_t v14 = v13;
        [v13 bounds];
        double v16 = v15;
        double v18 = v17;
        double v20 = v19;
        double v22 = v21;

        objc_msgSend(v12, "setFrame:", v16, v18, v20, v22);
        id v23 = [v29 view];
        if (v23)
        {
          unint64_t v24 = v23;
          [v23 setAutoresizingMask:18];

          id v25 = [v2 view];
          if (v25)
          {
            uint64_t v26 = v25;
            id v27 = [v29 view];
            if (v27)
            {
              uint64_t v28 = v27;
              [v26 addSubview:v27];

              [v29 didMoveToParentViewController:v2];
              return;
            }

            goto LABEL_21;
          }

double sub_100135240()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000DFE10((uint64_t *)&unk_1002BB070);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  char v7 = (objc_class *)type metadata accessor for PlaybackViewController(0LL);
  v23.receiver = v0;
  v23.super_class = v7;
  objc_msgSendSuper2(&v23, "viewDidLoad");
  uint64_t v8 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType;
  sub_100135B08(v0[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType]);
  int v9 = v0[v8];
  id v10 = [(id)objc_opt_self(TVMusicPlayerManager) defaultPlayer];
  id v11 = [v10 playQueue];

  if (v11)
  {
    if (v9 == 4) {
      uint64_t v12 = 5LL;
    }
    else {
      uint64_t v12 = 1LL;
    }
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EC2A8);
    id v14 = v11;
    _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, v12);

    swift_release(KeyPath);
    uint64_t v15 = swift_allocObject(&unk_100273BA8, 24LL, 7LL);
    swift_unknownObjectWeakInit(v15 + 16, v1);
    uint64_t v16 = swift_allocObject(&unk_100273BD0, 32LL, 7LL);
    *(void *)(v16 + 16) = v15;
    *(void *)(v16 + 24) = v11;
    unint64_t v17 = sub_100123F7C();
    id v18 = v14;
    uint64_t v19 = Publisher<>.sink(receiveValue:)(sub_100137204, v16, v2, v17);
    __n128 v20 = swift_release(v16);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v6, v2, v20);
  }

  else
  {
    uint64_t v19 = 0LL;
  }

  uint64_t v21 = *(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_playerResponseSubscription];
  *(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_playerResponseSubscription] = v19;

  *(void *)&double result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100135418(void **a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v42, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    char v7 = (_BYTE *)Strong;
    id v8 = v4;
    id v9 = [v8 tracklist];
    id v10 = [v9 playingItem];

    id v11 = [v8 videoOutput];
    if (!v10) {
      goto LABEL_13;
    }
    id v12 = [v10 metadataObject];
    if (!v12)
    {
LABEL_13:
      id v18 = &v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
      int v19 = v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
      v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType] = 2;
      goto LABEL_16;
    }

    id v13 = v12;
    char v14 = sub_100133FFC();

    switch(v14)
    {
      case 2:
        if (!v11) {
          goto LABEL_39;
        }
        break;
      case 3:
        if (!v11) {
          goto LABEL_39;
        }
        break;
      case 4:
        goto LABEL_13;
      default:
        id v15 = [a3 audioRoute];
        if (!v15) {
          goto LABEL_13;
        }
        id v16 = v15;
        unsigned __int8 v17 = [v16 isDeviceRoute];

        if ((v17 & 1) == 0) {
          goto LABEL_13;
        }
LABEL_39:
        id v38 = [v10 metadataObject];
        if (!v38 || (uint64_t v39 = v38, v40 = sub_100133FFC(), v39, v40 == 4)) {
          char v40 = 2;
        }
        id v18 = &v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
        int v41 = v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
        v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType] = v40;
        if (v41 != 4)
        {
          if (v40 == 2)
          {
            if (v41 == 2) {
              goto LABEL_16;
            }
          }

          else if (v40 == 3)
          {
            if (v41 == 3) {
              goto LABEL_16;
            }
          }

          else if ((v41 & 0xFE) != 2 && ((((v40 & 1) == 0) ^ v41) & 1) != 0)
          {
            goto LABEL_16;
          }
        }

        if ([v7 isViewLoaded]) {
LABEL_15:
        }
          sub_100135B08(*v18);
LABEL_16:
        if (!v11) {
          goto LABEL_20;
        }
        goto LABEL_17;
    }

    id v33 = [v8 tracklist];
    id v34 = [v33 items];

    id v35 = [v34 totalItemCount];
    if (v35 == (id)1)
    {
      uint64_t v36 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType;
      int v37 = v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
      v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType] = 1;
LABEL_17:
      int v20 = v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
      if ((v20 - 2) >= 2 && v20 != 4)
      {
        uint64_t v21 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController;
        double v22 = *(void **)&v7[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
        if (v22
          && (uint64_t v23 = objc_opt_self(&OBJC_CLASS___TVMusicVideoPlayerViewController),
              (uint64_t v24 = swift_dynamicCastObjCClass(v22, v23)) != 0))
        {
          id v25 = (id)v24;
          swift_unknownObjectRetain(v11);
          id v26 = v22;
        }

        else
        {
          id v27 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlayerManager);
          swift_unknownObjectRetain(v11);
          id v28 = [v27 defaultPlayer];
          id v29 = [objc_allocWithZone((Class)TVMusicVideoPlayerViewController) initWithPlayer:v28];

          uint64_t v30 = *(void **)&v7[v21];
          *(void *)&v7[v21] = v29;
          id v25 = v29;
          sub_100134FB8(v30);
        }

        id v31 = [v25 videoOutput];
        if (v31 && (id v32 = v31, swift_unknownObjectRelease(v31), v32 == v11))
        {

          swift_unknownObjectRelease_n(v11, 2LL);
          id v8 = v10;
          id v10 = v25;
        }

        else
        {
          swift_unknownObjectRetain(v11);
          [v25 setVideoOutput:v11];

          swift_unknownObjectRelease_n(v11, 3LL);
        }

        goto LABEL_21;
      }

      swift_unknownObjectRelease(v11);
LABEL_20:

LABEL_21:
      char v7 = v10;
LABEL_22:

      return;
    }

    goto LABEL_39;
  }

void sub_100135908(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for PlaybackViewController(0LL);
  objc_msgSendSuper2(&v12, "viewWillDisappear:", a1 & 1);
  int v3 = v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType];
  unsigned int v4 = v3 - 5;
  int v5 = v3 & 1;
  if (v4 <= 0xFFFFFFFC && v5 == 0)
  {
    char v7 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlayerManager);
    id v8 = [v7 defaultPlayer];
    id v9 = [v8 playQueue];

    if (!v9
      || (unsigned __int8 v10 = [v9 isVideoPictureInPictureRunning], v9, (v10 & 1) == 0))
    {
      if (([(id)objc_opt_self(TVMusicSystemNowPlayingViewController) isVisible] & 1) == 0)
      {
        id v11 = [v7 defaultPlayer];
        [v11 stopAndClearPlayQueue:1];
      }
    }
  }

void sub_100135B08(char a1)
{
  int v3 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlayerManager);
  id v4 = [v3 defaultPlayer];
  switch(a1)
  {
    case 2:
      uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
      if (!v17
        || (char v67 = &OBJC_PROTOCOL___TVMusicNowPlayingViewPresenting,
            !swift_dynamicCastObjCProtocolConditional(v17, 1LL, &v67)))
      {
LABEL_16:
        id v18 = [v1 view];
        if (v18)
        {
          int v19 = v18;
          [v18 setBackgroundColor:0];

          uint64_t v20 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions;
          id v21 = [objc_allocWithZone((Class)TVMNowPlayingViewController) initWithPlayer:v4 options:*(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions]];
          id v22 = v21;
          uint64_t v23 = *(void *)&v1[v20];
          if ((v23 & 2) != 0)
          {
            [v21 setInitialViewMode:1];
          }

          else
          {
            if ((v23 & 4) != 0) {
              uint64_t v24 = 2LL;
            }
            else {
              uint64_t v24 = 0LL;
            }
            [v21 setInitialViewMode:v24];
          }

          double v49 = *(void **)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
          *(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController] = v22;
          goto LABEL_39;
        }

        __break(1u);
        goto LABEL_48;
      }

      break;
    case 3:
      uint64_t v25 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController;
      uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
      if (!v26
        || (id v68 = &OBJC_PROTOCOL___TVMusicNowPlayingViewPresenting,
            !swift_dynamicCastObjCProtocolConditional(v26, 1LL, &v68)))
      {
        id v27 = [v1 view];
        if (!v27)
        {
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }

        id v28 = v27;
        [v27 setBackgroundColor:0];

        id v29 = [objc_allocWithZone((Class)TVMNowPlayingViewController) initWithPlayer:v4];
        if ((v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions] & 2) != 0)
        {
          uint64_t v41 = 1LL;
        }

        else
        {
          id v30 = [v3 defaultPlayer];
          id v31 = [v30 playQueue];

          if (!v31)
          {
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }

          id v32 = [v31 audioRoute];

          if (v32)
          {
            id v33 = v32;
            unsigned int v34 = [v33 isDeviceRoute];

            if (!v34) {
              goto LABEL_31;
            }
          }

          id v35 = [v4 playQueue];
          if (!v35)
          {
LABEL_53:
            __break(1u);
            goto LABEL_54;
          }

          uint64_t v36 = v35;
          unsigned int v37 = [v35 isVideoPictureInPictureRunning];

          if (!v37) {
            goto LABEL_41;
          }
          id v38 = [v4 playQueue];
          if (!v38)
          {
LABEL_54:
            __break(1u);
            return;
          }

          uint64_t v39 = v38;
          unsigned __int8 v40 = [v38 isVideoPictureInPictureDismissing];

          if ((v40 & 1) != 0) {
LABEL_31:
          }
            uint64_t v41 = 0LL;
          else {
LABEL_41:
          }
            uint64_t v41 = 3LL;
        }

        [v29 setInitialViewMode:v41];
        uint64_t v51 = *(void **)&v1[v25];
        *(void *)&v1[v25] = v29;
        id v52 = v29;
        sub_100134FB8(v51);
      }

      break;
    case 4:
      goto LABEL_16;
    default:
      uint64_t v5 = OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController;
      uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
      if (v6)
      {
        uint64_t v7 = objc_opt_self(&OBJC_CLASS___TVMusicVideoPlayerViewController);
        if (swift_dynamicCastObjCClass(v6, v7))
        {
          id v8 = [v4 playQueue];
          if (v8)
          {
            id v9 = v8;
            id v10 = [v8 videoOutput];

            id v11 = *(void **)&v1[v5];
            if (v11)
            {
              uint64_t v12 = objc_opt_self(&OBJC_CLASS___TVMusicVideoPlayerViewController);
              uint64_t v13 = swift_dynamicCastObjCClass(v11, v12);
              if (v13)
              {
                char v14 = (void *)v13;
                swift_unknownObjectRetain(v10);
                id v15 = v11;
                id v16 = [v14 videoOutput];
                swift_unknownObjectRelease(v10);
                if (!v16 || (swift_unknownObjectRelease(v16), v10 != v16)) {
                  [v14 setVideoOutput:v10];
                }
              }
            }

            swift_unknownObjectRelease(v10);
            break;
          }

          goto LABEL_51;
        }
      }

      id v42 = [v1 view];
      if (v42)
      {
        uint64_t v43 = v42;
        id v44 = [(id)objc_opt_self(UIColor) blackColor];
        [v43 setBackgroundColor:v44];

        id v45 = [v3 defaultPlayer];
        id v22 = [objc_allocWithZone((Class)TVMusicVideoPlayerViewController) initWithPlayer:v45];

        id v46 = [v4 playQueue];
        if (v46)
        {
          uint64_t v47 = v46;
          id v48 = [v46 videoOutput];

          [v22 setVideoOutput:v48];
          swift_unknownObjectRelease(v48);
          double v49 = *(void **)&v1[v5];
          *(void *)&v1[v5] = v22;
LABEL_39:
          id v50 = v22;
          sub_100134FB8(v49);

          break;
        }

LABEL_49:
      __break(1u);
      goto LABEL_50;
  }

  double v53 = v1;
  uint64_t v54 = (os_log_s *)Logger.logObject.getter(v53);
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc(22LL, -1LL);
    uint64_t v57 = swift_slowAlloc(64LL, -1LL);
    uint64_t v70 = v57;
    *(_DWORD *)uint64_t v56 = 136446466;
    LOBYTE(v69) = a1;
    uint64_t v58 = sub_1000DFE10(&qword_1002BB000);
    uint64_t v59 = String.init<A>(describing:)(&v69, v58);
    unint64_t v61 = v60;
    id v69 = (id)sub_1001B2690(v59, v60, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v56 + 4);
    swift_bridgeObjectRelease(v61);
    *(_WORD *)(v56 + 1sub_1000E053C(v0 + 2) = 2082;
    id v69 = *(id *)&v53[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController];
    id v62 = v69;
    uint64_t v63 = sub_1000DFE10(&qword_1002BB008);
    uint64_t v64 = String.init<A>(describing:)(&v69, v63);
    unint64_t v66 = v65;
    id v69 = (id)sub_1001B2690(v64, v65, &v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70, v56 + 14);

    swift_bridgeObjectRelease(v66);
    _os_log_impl( (void *)&_mh_execute_header,  v54,  v55,  "Configured content type: %{public}s with view controller: %{public}s",  (uint8_t *)v56,  0x16u);
    swift_arrayDestroy(v57, 2LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v57, -1LL, -1LL);
    swift_slowDealloc(v56, -1LL, -1LL);
  }

  else
  {
  }
}

  swift_bridgeObjectRelease(v1);
  uint64_t v39 = *(void **)&v2[v41];
  if (v39 && v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_isHeaderLabelNearFocusedItem] == 1)
  {
    unsigned __int8 v40 = v39;
    [v40 frame];
    objc_msgSend(v40, "setFrame:");
  }

    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v1 + 1, 1LL);
    goto LABEL_28;
  }

uint64_t sub_1001361F8()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

void sub_10013621C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (uint64_t *)&v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_parents];
  swift_beginAccess( &v1[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_parents],  v50,  0LL,  0LL);
  uint64_t v5 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*v4);
    if (v6) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease(v5);
    goto LABEL_16;
  }

  if (v5 < 0) {
    uint64_t v13 = *v4;
  }
  else {
    uint64_t v13 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v4);
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_3:
  unint64_t v7 = v6 - 1;
  if (__OFSUB__(v6, 1LL))
  {
    __break(1u);
    goto LABEL_39;
  }

  if ((v5 & 0xC000000000000001LL) != 0)
  {
LABEL_39:
    uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    goto LABEL_8;
  }

  if ((v7 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
    goto LABEL_41;
  }

  if (v7 >= *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }

  uint64_t v8 = *(void *)(v5 + 8 * v7 + 32);
  swift_retain(v8);
LABEL_8:
  swift_bridgeObjectRelease(v5);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v8 + 16);
  swift_release(v8);
  if (!Strong
    || (type metadata accessor for TVMusicPlaybackViewController(0LL),
        id v10 = a1,
        id v11 = Strong,
        char v12 = static NSObject.== infix(_:_:)(),
        v11,
        v11,
        v10,
        (v12 & 1) == 0))
  {
LABEL_16:
    swift_beginAccess(v4, v49, 33LL, 0LL);
    char v14 = a1;
    uint64_t v15 = sub_100136A28(v4, v14);

    uint64_t v16 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      if (v16 < 0) {
        uint64_t v48 = *v4;
      }
      else {
        uint64_t v48 = v16 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*v4);
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(v16);
      if (v18 >= v15)
      {
LABEL_18:
        sub_100136EA4(v15, v18);
        uint64_t v19 = sub_1000DFE10((uint64_t *)&unk_1002BAFF0);
        uint64_t v16 = swift_allocObject(v19, 24LL, 7LL);
        uint64_t v20 = swift_unknownObjectWeakInit(v16 + 16, 0LL);
        uint64_t v21 = swift_unknownObjectWeakAssign(v20, v14);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v21);
        char v14 = *(char **)((*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v17 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if ((unint64_t)v14 < v17 >> 1)
        {
LABEL_19:
          v22.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v16);
          specialized Array._endMutation()(v22);
          swift_endAccess(v49);
          goto LABEL_20;
        }

void sub_1001366BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v8 = a4;
  _swift_stdlib_reportUnimplementedInitializer(a5, a6, "init(nibName:bundle:)", 21LL, 0LL);
  __break(1u);
}

id sub_1001366F4()
{
  return sub_100136700(type metadata accessor for PlaybackViewController);
}

id sub_100136700(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0LL);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t sub_1001367A8()
{
  return type metadata accessor for PlaybackViewController(0LL);
}

uint64_t type metadata accessor for PlaybackViewController(uint64_t a1)
{
  return sub_1000EE114(a1, qword_1002BAF60, (uint64_t)&nominal type descriptor for PlaybackViewController);
}

uint64_t sub_1001367C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for Logger(319LL, a2);
  if (v4 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = &unk_1001EC1E8;
    v5[2] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[3] = &unk_1001EC198;
    v5[4] = &unk_1001EC198;
    void v5[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 6LL, v5, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100136860(uint64_t a1)
{
  uint64_t v2 = "\b";
  return swift_initClassMetadata2(a1, 0LL, 1LL, &v2, a1 + 88);
}

uint64_t type metadata accessor for PlaybackViewController.WeakReference( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackViewController.WeakReference);
}

uint64_t getEnumTagSinglePayload for PlaybackViewController.ContentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFD)
  {
    unsigned int v6 = *a1;
    if (v6 >= 2)
    {
      unsigned int v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      uint64_t result = v7 - 1;
      if (v7 > 1) {
        return result;
      }
    }

    return 0LL;
  }

  unsigned int v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00) {
    unsigned int v3 = 4;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v2 >> 8 < 0xFF) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x100) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0LL;
  }
  return ((uint64_t (*)(void))((char *)&loc_1001368FC + 4 * byte_1001EC150[v4]))();
}

uint64_t storeEnumTagSinglePayload for PlaybackViewController.ContentType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    LODWORD(v5) = v4;
  }
  else {
    LODWORD(v5) = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1001369A8 + 4 * byte_1001EC15A[v5]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001369DC + 4 * byte_1001EC155[v5]))();
}

uint64_t sub_1001369DC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001369E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1001369ECLL);
  }
  return result;
}

uint64_t sub_1001369F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100136A00LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_100136A04(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100136A0C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlaybackViewController.ContentType()
{
  return &type metadata for PlaybackViewController.ContentType;
}

uint64_t sub_100136A28(uint64_t *a1, void *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (!v3)
  {
LABEL_14:
    swift_bridgeObjectRelease(v2);
    uint64_t v11 = *a1;
    if (v11 < 0) {
      uint64_t v38 = *a1;
    }
    else {
      uint64_t v38 = v11 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*a1);
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v11);
    return v39;
  }

uint64_t sub_100136EA4(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }

  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    uint64_t v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v7 >= a2) {
        goto LABEL_4;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }

  if (v5 < 0) {
    uint64_t v21 = v5;
  }
  else {
    uint64_t v21 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v5);
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2) {
    goto LABEL_34;
  }
LABEL_4:
  uint64_t v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }

  uint64_t v6 = v4 - v2;
  if (__OFSUB__(0LL, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }

  uint64_t v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v9 = v8 - v7;
    if (!__OFADD__(v8, v6)) {
      goto LABEL_8;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0) {
      uint64_t v23 = v5;
    }
    else {
      uint64_t v23 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }

unint64_t sub_100137174()
{
  unint64_t result = qword_1002BD110;
  if (!qword_1002BD110)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___UIViewController);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002BD110);
  }

  return result;
}

uint64_t sub_1001371B4()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001371D8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_100137204(void **a1)
{
}

void sub_10013720C()
{
  v0[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentType] = 4;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_nowPlayingOptions] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_playerResponseSubscription] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_contentViewController] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusicP33_035D42A14CF7650629E28B54E9D73EE622PlaybackViewController_parents] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100223C30LL,  "TVMusic/PlaybackViewController.swift",  36LL,  2LL,  192LL,  0);
  __break(1u);
}

void sub_1001372F4(uint64_t a1)
{
}

uint64_t sub_1001372FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10013730C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t getEnumTagSinglePayload for PlaybackView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = a2 + 1;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for PlaybackView()
{
  return &type metadata for PlaybackView;
}

unint64_t sub_1001373C0()
{
  unint64_t result = qword_1002BB088;
  if (!qword_1002BB088)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EC2DC, &type metadata for PlaybackView);
    atomic_store(result, (unint64_t *)&qword_1002BB088);
  }

  return result;
}

unint64_t sub_100137408@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100138170(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_100137460(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100139058(a1, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) == 1)
  {
    sub_100139018((uint64_t)v9);
    NSString v12 = 0LL;
  }

  else
  {
    URL.absoluteString.getter();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
  }

  if ((a3 & 1) != 0) {
    uint64_t v15 = 0LL;
  }
  else {
    uint64_t v15 = a2;
  }
  sub_1000932DC(v15, v12);
}

uint64_t sub_100137568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *(void (**)(char *))(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(a2);
    uint64_t v10 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v7, 0LL, 1LL, v10);
  }

  else
  {
    uint64_t v11 = type metadata accessor for URL(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v7, 1LL, 1LL, v11);
  }

  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return sub_100139018((uint64_t)v7);
}

void sub_100137684(uint64_t a1)
{
  uint64_t v1 = sub_1001376E4(a1);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v1);
  sub_100087738(isa);
}

uint64_t sub_1001376E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1000DFE10(&qword_1002BB0D0);
    unsigned int v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    unsigned int v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v29 = a1 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1LL << -(char)v4);
  }
  else {
    uint64_t v5 = -1LL;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  uint64_t result = swift_retain(v3);
  int64_t v9 = 0LL;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }

    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }

    if (v14 >= v28) {
      goto LABEL_37;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v14);
    int64_t v16 = v9 + 1;
    if (!v15)
    {
      int64_t v16 = v9 + 2;
      if (v9 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v15 = *(void *)(v29 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v9 + 3;
        if (v9 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v15 = *(void *)(v29 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v9 + 4;
          if (v9 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v15 = *(void *)(v29 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }

id sub_100137B7C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Upsell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Upsell()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic6Upsell);
}

unint64_t sub_100137BCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10013CCD8(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }

  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      unint64_t result = swift_release(v19[1]);
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }

    goto LABEL_11;
  }

  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10013FC90();
    goto LABEL_7;
  }

  sub_10013D850(v15, a4 & 1);
  unint64_t v21 = sub_10013CCD8(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    unint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for AnyHashable);
    __break(1u);
    return result;
  }

  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if ((v16 & 1) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1001390A0(a3, (uint64_t)v23);
  return sub_10013FAB0(v12, (uint64_t)v23, a1, a2, v18);
}

_OWORD *sub_100137CF0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10013CD08(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }

  else
  {
    char v16 = v11;
    uint64_t v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        uint64_t v19 = (void *)(v18[7] + 32 * v12);
        sub_1000E053C(v19);
        return sub_1000F2010(a1, v19);
      }

      goto LABEL_11;
    }

    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10013FE6C();
      goto LABEL_7;
    }

    sub_10013DB60(v15, a4 & 1);
    unint64_t v21 = sub_10013CD08(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if ((v16 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_10013FB0C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain(a3);
    }
  }

  unint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

uint64_t sub_100137E20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10013CD08(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }

  else
  {
    char v16 = v11;
    uint64_t v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        uint64_t v19 = v18[7];
        uint64_t result = swift_release(*(void *)(v19 + 8 * v12));
        *(void *)(v19 + 8 * v1sub_1000E053C(v0 + 2) = a1;
        return result;
      }

      goto LABEL_11;
    }

    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100140204();
      goto LABEL_7;
    }

    sub_10013E170(v15, a4 & 1);
    unint64_t v21 = sub_10013CD08(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if ((v16 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_10013FB74(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain(a3);
    }
  }

  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100137F4C(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10013CF3C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }

  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_9;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_100140614();
    goto LABEL_9;
  }

  sub_10013E810(v13, a3 & 1);
  uint64_t v16 = sub_10013CF3C(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_13:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for TVMusicTabID);
    __break(1u);
    return;
  }

  unint64_t v10 = v16;
LABEL_9:
  char v18 = a1 & 1;
  uint64_t v19 = *v4;
  if ((v14 & 1) != 0) {
    *(_BYTE *)(v19[7] + v10) = v18;
  }
  else {
    sub_10013FBBC(v10, a2, v18, v19);
  }
}

void sub_100138050(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10013CD08(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }

  else
  {
    char v16 = v11;
    uint64_t v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      char v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v18[7] + v1sub_1000E053C(v0 + 2) = a1;
        return;
      }

      goto LABEL_11;
    }

    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10014079C();
      goto LABEL_7;
    }

    sub_10013EBC0(v15, a4 & 1);
    unint64_t v19 = sub_10013CD08(a2, a3);
    if ((v16 & 1) == (v20 & 1))
    {
      unint64_t v12 = v19;
      char v18 = *v5;
      if ((v16 & 1) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      sub_10013FC04(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain(a3);
      return;
    }
  }

  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

unint64_t sub_100138170(unint64_t result)
{
  if (result > 5) {
    return 0LL;
  }
  return result;
}

uint64_t sub_100138180(uint64_t a1)
{
  uint64_t result = (uint64_t)(id)MobileGestalt_get_current_device();
  if (result)
  {
    unsigned int v3 = (void *)result;
    int internalBuild = MobileGestalt_get_internalBuild();

    if (internalBuild
      && (id v5 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults],
          NSString v6 = String._bridgeToObjectiveC()(),
          unsigned __int8 v7 = [v5 BOOLForKey:v6],
          v5,
          v6,
          (v7 & 1) != 0))
    {
      return 1LL;
    }

    else
    {
      return a1 == 0;
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

void *sub_100138244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URLQueryItem(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v14);
  char v16 = (char *)&v23 - v15;
  if (a2)
  {
    URLQueryItem.init(name:value:)(1684366707LL, 0xE400000000000000LL, a1, a2);
    uint64_t v17 = (void *)sub_10015AA54(0, 1LL, 1, (unint64_t)&_swiftEmptyArrayStorage);
    unint64_t v19 = v17[2];
    unint64_t v18 = v17[3];
    if (v19 >= v18 >> 1) {
      uint64_t v17 = (void *)sub_10015AA54(v18 > 1, v19 + 1, 1, (unint64_t)v17);
    }
    void v17[2] = v19 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))( (unint64_t)v17 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
    + *(void *)(v9 + 72) * v19,
      v16,
      v8);
  }

  else
  {
    uint64_t v17 = &_swiftEmptyArrayStorage;
  }

  URLQueryItem.init(name:value:)(0x74694B636973756DLL, 0xEC000000646E694BLL, a3, a4);
  if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0) {
    uint64_t v17 = (void *)sub_10015AA54(0, v17[2] + 1LL, 1, (unint64_t)v17);
  }
  unint64_t v21 = v17[2];
  unint64_t v20 = v17[3];
  if (v21 >= v20 >> 1) {
    uint64_t v17 = (void *)sub_10015AA54(v20 > 1, v21 + 1, 1, (unint64_t)v17);
  }
  void v17[2] = v21 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))( (unint64_t)v17 + ((*(unsigned __int8 *)(v9 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
  + *(void *)(v9 + 72) * v21,
    v13,
    v8);
  return v17;
}

void sub_100138440(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v4, v5);
  unsigned __int8 v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2
    && (id v8 = [a2 identifiers],
        id v9 = [v8 universalStore],
        v8,
        v9))
  {
    id v10 = [v9 adamID];
    swift_unknownObjectRelease(v9);
    int v11 = 0;
  }

  else
  {
    id v10 = 0LL;
    int v11 = 1;
  }

  if ([(id)objc_opt_self(TVMusicApplication) usingMusicUI])
  {
    unint64_t v12 = 0xD000000000000011LL;
    unint64_t v13 = 0x8000000100227220LL;
    switch(a1)
    {
      case 0LL:
        uint64_t v14 = "musicLibraryEmpty";
        goto LABEL_19;
      case 1LL:
        goto LABEL_20;
      case 2LL:
        char v22 = "musicAddToPlaylist";
        goto LABEL_25;
      case 3LL:
        unint64_t v12 = 0xD000000000000015LL;
        uint64_t v14 = "musicNowPlayingLyrics";
        goto LABEL_19;
      case 4LL:
        unint64_t v12 = 0xD000000000000013LL;
        uint64_t v14 = "musicPlaybackUpsell";
LABEL_19:
        unint64_t v13 = (unint64_t)(v14 - 32) | 0x8000000000000000LL;
LABEL_20:
        if ((v11 & 1) != 0) {
          goto LABEL_21;
        }
        goto LABEL_26;
      case 5LL:
        char v22 = "musicPlaybackQueue";
LABEL_25:
        unint64_t v13 = (unint64_t)(v22 - 32) | 0x8000000000000000LL;
        unint64_t v12 = 0xD000000000000012LL;
        if ((v11 & 1) != 0)
        {
LABEL_21:
          uint64_t v23 = 0LL;
          uint64_t v24 = 0LL;
          if (!a2) {
            goto LABEL_29;
          }
        }

        else
        {
LABEL_26:
          aBlock[0] = v10;
          uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int64,  &protocol witness table for Int64);
          uint64_t v24 = v25;
          if (!a2) {
            goto LABEL_29;
          }
        }

        if ([a2 hasVideo])
        {
          uint64_t v26 = 0xEA00000000006F65LL;
          uint64_t v27 = 0x646956636973756DLL;
          goto LABEL_30;
        }

void sub_100138938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v58 = a5;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v59 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v62 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62, v14);
  id v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = type metadata accessor for DispatchTime(0LL);
  uint64_t v17 = *(void *)(v60 - 8);
  uint64_t v19 = __chkstk_darwin(v60, v18);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v57 - v23;
  uint64_t v25 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v25, v26);
  int64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ([(id)objc_opt_self(TVMusicApplication) usingMusicUI])
  {
    uint64_t v29 = sub_100138244(a1, a2, a3, a4);
    if (qword_1002B7218 != -1) {
      swift_once(&qword_1002B7218, sub_100188700);
    }
    uint64_t v30 = (void *)qword_1002C5EE0;
    uint64_t v31 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56LL))(v28, 1LL, 1LL, v31);
    type metadata accessor for MainActor(0LL);
    swift_bridgeObjectRetain(v29);
    id v32 = v30;
    uint64_t v33 = static MainActor.shared.getter(v32);
    uint64_t v34 = (void *)swift_allocObject(&unk_100273DC0, 64LL, 7LL);
    v34[2] = v33;
    v34[3] = &protocol witness table for MainActor;
    v34[4] = 0xD000000000000013LL;
    v34[5] = 0x8000000100227150LL;
    v34[6] = v29;
    v34[7] = v32;
    uint64_t v35 = sub_100125950((uint64_t)v28, (uint64_t)&unk_1002BB0C8, (uint64_t)v34);
    swift_bridgeObjectRelease(v29);
    swift_release(v35);
  }

  else
  {
    unint64_t v36 = sub_100186EB0((uint64_t)&_swiftEmptyArrayStorage);
    if (a6)
    {
      uint64_t v37 = sub_1000DFE10(&qword_1002BB0B8);
      uint64_t inited = swift_initStackObject(v37, v65);
      *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E84B0;
      *(void *)(inited + 3sub_1000E053C(v0 + 2) = 7107189LL;
      *(void *)(inited + 40) = 0xE300000000000000LL;
      *(void *)(inited + 48) = v58;
      *(void *)(inited + 56) = a6;
      swift_bridgeObjectRetain(a6);
      unint64_t v39 = sub_10018713C(inited);
      id v68 = (void *)sub_1000DFE10(&qword_1002BB0C0);
      *(void *)&__int128 aBlock = v39;
      sub_1000F2010(&aBlock, v72);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v36);
      unint64_t v71 = v36;
      sub_100137CF0(v72, 0x6B726F77747261LL, 0xE700000000000000LL, isUniquelyReferenced_nonNull_native);
      unint64_t v36 = v71;
      swift_bridgeObjectRelease(0x8000000000000000LL);
    }

    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(@"kind");
    uint64_t v43 = v42;
    id v68 = &type metadata for String;
    *(void *)&__int128 aBlock = a3;
    *((void *)&aBlock + 1) = a4;
    sub_1000F2010(&aBlock, v72);
    swift_bridgeObjectRetain(a4);
    char v44 = swift_isUniquelyReferenced_nonNull_native(v36);
    unint64_t v71 = v36;
    sub_100137CF0(v72, v41, v43, v44);
    unint64_t v45 = v71;
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(0x8000000000000000LL);
    sub_1000F9904();
    id v46 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)(v21, 0.5);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v48 = v60;
    v47(v21, v60);
    uint64_t v49 = swift_allocObject(&unk_100273D70, 24LL, 7LL);
    *(void *)(v49 + swift_unknownObjectWeakDestroy(v0 + 16) = v45;
    id v69 = sub_100138E80;
    uint64_t v70 = v49;
    *(void *)&__int128 aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256LL;
    char v67 = sub_1000FA280;
    id v68 = &unk_100273D88;
    id v50 = _Block_copy(&aBlock);
    swift_release(v70);
    static DispatchQoS.unspecified.getter(v51);
    *(void *)&__int128 aBlock = &_swiftEmptyArrayStorage;
    unint64_t v52 = sub_1000F99EC();
    uint64_t v53 = sub_1000DFE10(&qword_1002B86F8);
    unint64_t v54 = sub_1000F9A34();
    os_log_type_t v55 = v59;
    uint64_t v56 = v64;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v53, v54, v64, v52);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v24, v16, v55, v50);
    _Block_release(v50);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v55, v56);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
    v47(v24, v48);
  }

uint64_t sub_100138E5C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100138E80()
{
}

uint64_t sub_100138E88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100138E98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100138EA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  id v10 = (void *)swift_task_alloc(dword_1002BD0B4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_1000E0B64;
  return sub_10018B584(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100138F30()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_100138F40(uint64_t a1)
{
}

uint64_t sub_100138F50()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100138F8C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  id v10 = (void *)swift_task_alloc(dword_1002BD0B4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *id v10 = v2;
  v10[1] = sub_1000E01FC;
  return sub_10018B584(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100139018(uint64_t a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002B7890);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100139058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002B7890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001390A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

ValueMetadata *type metadata accessor for Upsell.UpsellType()
{
  return &type metadata for Upsell.UpsellType;
}

unint64_t sub_1001390F0()
{
  unint64_t result = qword_1002BB0E0;
  if (!qword_1002BB0E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EC430, &type metadata for Upsell.UpsellType);
    atomic_store(result, (unint64_t *)&qword_1002BB0E0);
  }

  return result;
}

uint64_t destroy for NowPlayingMetadata(uint64_t a1)
{
  return swift_unknownObjectRelease(*(void *)(a1 + 88));
}

uint64_t initializeWithCopy for NowPlayingMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  uint64_t v9 = *(void **)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v8;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  id v10 = v9;
  swift_unknownObjectRetain(v8);
  return a1;
}

uint64_t assignWithCopy for NowPlayingMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  uint64_t v12 = *(void *)(a2 + 64);
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 72);
  *(void *)(a1 + 64) = v12;
  uint64_t v13 = *(void **)(a1 + 80);
  uint64_t v14 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v14;
  id v15 = v14;

  uint64_t v16 = *(void *)(a1 + 88);
  uint64_t v17 = *(void *)(a2 + 88);
  *(void *)(a1 + 88) = v17;
  swift_unknownObjectRetain(v17);
  swift_unknownObjectRelease(v16);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

__n128 initializeWithTake for NowPlayingMetadata(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[2];
  *(_OWORD *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[1];
  *(_OWORD *)(a1 + 3sub_1000E053C(v0 + 2) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  __int128 v5 = a2[4];
  __int128 v6 = a2[5];
  *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for NowPlayingMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 72);

  uint64_t v12 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_unknownObjectRelease(v12);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 98)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0LL;
    *(_OWORD *)(result + 7sub_1000E053C(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 98) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 98) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for NowPlayingMetadata()
{
  return &type metadata for NowPlayingMetadata;
}

id sub_10013964C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMLShelfViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TVMLShelfViewController()
{
  return objc_opt_self(&OBJC_CLASS___TVMusicTVMLShelfViewController);
}

id sub_10013969C(id a1, double *a2)
{
  id result = [v2 collectionView];
  if (!result) {
    return result;
  }
  id v6 = result;

  if (v6 != a1) {
    return 0LL;
  }
  uint64_t v7 = OBJC_IVAR___TVMusicTVMLShelfViewController_scrollInterval;
  id result = [v2 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }

  uint64_t v8 = result;
  [result adjustedContentInset];
  double v10 = v9;

  id result = [v2 collectionView];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }

  uint64_t v11 = result;
  [result contentSize];
  double v13 = v12;

  id result = [v2 collectionView];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }

  uint64_t v14 = result;
  [result visibleSize];
  double v16 = v15;

  id result = [v2 collectionView];
  if (!result)
  {
LABEL_19:
    __break(1u);
    return result;
  }

  uint64_t v17 = result;
  double v18 = v13 - v16;
  [result adjustedContentInset];
  double v20 = v19;

  double v21 = *(double *)&v2[v7] * round(*a2 / *(double *)&v2[v7]) - v10;
  if (v21 <= -v10) {
    double v21 = -v10;
  }
  if (v18 + v20 < v21) {
    double v21 = v18 + v20;
  }
  *a2 = v21;
  return *(id *)&v21;
}

void sub_100139850(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100139890(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100139924 + 4 * byte_1001EC4A5[a2]))(0x7373656C73736F6CLL);
}

uint64_t sub_100139924(uint64_t a1)
{
  if (a1 == 0x7373656C73736F6CLL && v1 == 0xE800000000000000LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x7373656C73736F6CLL, 0xE800000000000000LL, 0LL);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE800000000000000LL);
  return v2 & 1;
}

void sub_100139A00(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100139A50(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100139AB0 + 4 * byte_1001EC4AE[a2]))(0x746E6F7A69726F68LL);
}

uint64_t sub_100139AB0(uint64_t a1)
{
  if (a1 == 0x746E6F7A69726F68LL && v1 == 0xEA00000000006C61LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x746E6F7A69726F68LL, 0xEA00000000006C61LL, 0LL);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xEA00000000006C61LL);
  return v2 & 1;
}

void sub_100139B54(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100139BB0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_100139C4C + 4 * byte_1001EC4B9[a2]))(0x6573776F7262LL);
}

uint64_t sub_100139C4C(uint64_t a1)
{
  if (a1 == 0x6573776F7262LL && v1 == 0xE600000000000000LL) {
    char v2 = 1;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, v1, 0x6573776F7262LL, 0xE600000000000000LL, 0LL);
  }
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(0xE600000000000000LL);
  return v2 & 1;
}

void sub_100139D44(unint64_t a1)
{
  uint64_t v83 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements);
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain_n(v3, 2LL);
  unint64_t v85 = a1;
  while (v4)
  {
    unint64_t v88 = v3 & 0xC000000000000001LL;
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    uint64_t v6 = 4LL;
    uint64_t v86 = v4;
    uint64_t v87 = v3;
    while (1)
    {
      uint64_t v7 = v6 - 4;
      if (v88)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v3);
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v7, 1LL)) {
          break;
        }
        goto LABEL_9;
      }

      uint64_t v8 = *(void *)(v3 + 8 * v6);
      swift_retain(v8);
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1LL)) {
        break;
      }
LABEL_9:
      uint64_t v89 = v9;
      id v10 = objc_msgSend(*(id *)(v8 + 24), "elementName", v83);
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      uint64_t v13 = v12;

      id v14 = *(id *)(v8 + 16);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
      unint64_t v90 = (unint64_t)v5;
      uint64_t v3 = (uint64_t)v5;
      a1 = sub_10013CD08(v11, v13);
      uint64_t v17 = v5[2];
      BOOL v18 = (v16 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        goto LABEL_23;
      }
      char v20 = v16;
      if (v5[3] >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v3 = (uint64_t)&v90;
          sub_100140050();
          uint64_t v5 = (void *)v90;
        }
      }

      else
      {
        sub_10013DE5C(v19, isUniquelyReferenced_nonNull_native);
        uint64_t v5 = (void *)v90;
        uint64_t v3 = v90;
        unint64_t v21 = sub_10013CD08(v11, v13);
        if ((v20 & 1) != (v22 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
          __break(1u);
          JUMPOUT(0x10013A684LL);
        }

        a1 = v21;
      }

      swift_bridgeObjectRelease(0x8000000000000000LL);
      if ((v20 & 1) == 0)
      {
        v5[(a1 >> 6) + 8] |= 1LL << a1;
        uint64_t v24 = (uint64_t *)(v5[6] + 16 * a1);
        *uint64_t v24 = v11;
        v24[1] = v13;
        *(void *)(v5[7] + 8 * a1) = &_swiftEmptyArrayStorage;
        uint64_t v25 = v5[2];
        BOOL v26 = __OFADD__(v25, 1LL);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_24;
        }
        v5[2] = v27;
        uint64_t v23 = swift_bridgeObjectRetain(v13);
      }

      int64_t v28 = (void *)(v5[7] + 8 * a1);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v23);
      unint64_t v30 = *(void *)((*v28 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v29 = *(void *)((*v28 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v30 >= v29 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1LL);
      }
      v31.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v14);
      specialized Array._endMutation()(v31);
      swift_release(v8);
      swift_bridgeObjectRelease(v13);
      ++v6;
      uint64_t v3 = v87;
      if (v89 == v86) {
        goto LABEL_30;
      }
    }

    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    if (v3 < 0) {
      uint64_t v32 = v3;
    }
    else {
      uint64_t v32 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(v3, 3LL);
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v3);
    unint64_t v85 = a1;
  }

  uint64_t v5 = &_swiftEmptyDictionarySingleton;
LABEL_30:
  swift_bridgeObjectRelease(v3);
  uint64_t v93 = v5;
  swift_bridgeObjectRelease(v3);
  uint64_t v33 = &_swiftEmptyArrayStorage;
  unint64_t v92 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v34 = v85;
  if (!v85) {
    goto LABEL_75;
  }
  uint64_t v35 = v85 & 0xFFFFFFFFFFFFFF8LL;
  if (v85 >> 62) {
    goto LABEL_70;
  }
  uint64_t v36 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v85);
  if (!v36)
  {
LABEL_74:
    swift_bridgeObjectRelease(v34);
    uint64_t v33 = &_swiftEmptyArrayStorage;
LABEL_75:
    uint64_t v81 = swift_bridgeObjectRetain(v5);
    sub_10013A694(v81);
    swift_bridgeObjectRelease_n(v5, 2LL);
    uint64_t v82 = *(void *)&v84[v83];
    *(void *)&v84[v83] = v33;
    swift_bridgeObjectRetain(v33);
    swift_bridgeObjectRelease(v82);
    __asm { BR              X10 }
  }

  while (2)
  {
    uint64_t v37 = objc_opt_self(&OBJC_CLASS___TVInterfaceFactory);
    if (v36 < 1)
    {
      __break(1u);
      JUMPOUT(0x10013A65CLL);
    }

    uint64_t v5 = (void *)v37;
    uint64_t v38 = 0LL;
    unint64_t v39 = v34 & 0xC000000000000001LL;
    while (1)
    {
      id v41 = v39
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v38, v34)
          : *(id *)(v34 + 8 * v38 + 32);
      id v42 = v41;
      id v43 = objc_msgSend(v41, "elementName", v83);
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
      uint64_t v46 = v45;

      uint64_t v48 = sub_10013CA68(&v90, v44, v46);
      uint64_t v49 = *v47;
      if (*v47) {
        break;
      }
      ((void (*)(unint64_t *, void))v48)(&v90, 0LL);
      id v50 = 0LL;
LABEL_51:
      id v56 = objc_msgSend(v5, "sharedInterfaceFactory", swift_bridgeObjectRelease(v46).n128_f64[0]);
      id v57 = [v56 viewForElement:v42 existingView:v50];

      if (v57)
      {
        id v58 = [v42 attributes];
        if (v58)
        {
          uint64_t v59 = v58;
          uint64_t v60 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v58,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

          if (*(void *)(v60 + 16))
          {
            unint64_t v61 = sub_10013CD08(0x646E616D6D6F63LL, 0xE700000000000000LL);
            if ((v62 & 1) != 0)
            {
              uint64_t v63 = (uint64_t *)(*(void *)(v60 + 56) + 16 * v61);
              uint64_t v64 = *v63;
              unint64_t v65 = (void *)v63[1];
              swift_bridgeObjectRetain(v65);
              swift_bridgeObjectRelease(v60);
              unint64_t v90 = 0xD000000000000011LL;
              unint64_t v91 = 0x8000000100227440LL;
              v66._countAndFlagsBits = v64;
              v66._object = v65;
              String.append(_:)(v66);
              swift_bridgeObjectRelease(v65);
              unint64_t v67 = v91;
              NSString v68 = String._bridgeToObjectiveC()();
              *(void *)&double v69 = swift_bridgeObjectRelease(v67).n128_u64[0];
LABEL_58:
              objc_msgSend(v57, "setAccessibilityIdentifier:", v68, v69);

              uint64_t v70 = objc_opt_self(&OBJC_CLASS___UILabel);
              uint64_t v71 = swift_dynamicCastObjCClass(v57, v70);
              if (v71)
              {
                double v72 = (void *)v71;
                id v73 = v57;
                objc_msgSend(v72, "setEnablesMarqueeWhenAncestorFocused:", objc_msgSend(v72, "tv_marqueeOnHighlight"));
              }

              [v84 addSubview:v57];
              uint64_t v74 = type metadata accessor for TVMLStackView.StackViewElement();
              uint64_t v75 = swift_allocObject(v74, 32LL, 7LL);
              *(void *)(v75 + swift_unknownObjectWeakDestroy(v0 + 16) = v57;
              *(void *)(v75 + 24) = v42;
              id v40 = v57;
              id v42 = v42;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
              unint64_t v77 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
              unint64_t v76 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
              if (v77 >= v76 >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1LL);
              }
              v78.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
              specialized Array._endMutation()(v78);

              goto LABEL_36;
            }
          }

          swift_bridgeObjectRelease(v60);
        }

        NSString v68 = String._bridgeToObjectiveC()();
        goto LABEL_58;
      }

      id v40 = v50;
LABEL_36:
      ++v38;

      uint64_t v34 = v85;
      if (v36 == v38)
      {
        swift_bridgeObjectRelease(v85);
        uint64_t v33 = (void *)v92;
        uint64_t v5 = v93;
        goto LABEL_75;
      }
    }

    uint64_t v34 = (uint64_t)v47;
    if ((unint64_t)v49 >> 62)
    {
      if (v49 < 0) {
        uint64_t v79 = *v47;
      }
      else {
        uint64_t v79 = v49 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(*v47);
      id v50 = (void *)_CocoaArrayWrapper.endIndex.getter(v79);
      swift_bridgeObjectRelease(v49);
      if (v50) {
        goto LABEL_43;
      }
    }

    else
    {
      id v50 = *(void **)((v49 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v50)
      {
LABEL_43:
        uint64_t v51 = *(void *)v34;
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*(void *)v34);
        *(void *)uint64_t v34 = v51;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v51 < 0 || (v51 & 0x4000000000000000LL) != 0)
        {
          uint64_t v51 = sub_100140E5C(v51);
          *(void *)uint64_t v34 = v51;
        }

        uint64_t v35 = v51 & 0xFFFFFFFFFFFFFF8LL;
        uint64_t v54 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        if (!v54)
        {
          __break(1u);
LABEL_70:
          if (v34 >= 0) {
            uint64_t v80 = v35;
          }
          else {
            uint64_t v80 = v34;
          }
          swift_bridgeObjectRetain(v34);
          uint64_t v36 = _CocoaArrayWrapper.endIndex.getter(v80);
          if (!v36) {
            goto LABEL_74;
          }
          continue;
        }

        uint64_t v55 = v54 - 1;
        id v50 = *(void **)((v51 & 0xFFFFFFFFFFFFFF8LL) + 8 * v55 + 0x20);
        *(void *)((v51 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v55;
        specialized Array._endMutation()(v53);
      }
    }

    break;
  }

  ((void (*)(unint64_t *, void))v48)(&v90, 0LL);
  goto LABEL_51;
}

uint64_t sub_10013A694(uint64_t a1)
{
  uint64_t v1 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v2 = -1LL;
  if (v1 < 64) {
    uint64_t v2 = ~(-1LL << v1);
  }
  unint64_t v3 = v2 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v1 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain(a1);
  int64_t i = 0LL;
  while (1)
  {
    if (v3)
    {
      unint64_t v6 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v7 = v6 | (i << 6);
    }

    else
    {
      int64_t v8 = i + 1;
      if (__OFADD__(i, 1LL)) {
        goto LABEL_37;
      }
      if (v8 >= v19) {
        return swift_release(a1);
      }
      unint64_t v9 = *(void *)(v18 + 8 * v8);
      ++i;
      if (!v9)
      {
        int64_t i = v8 + 1;
        if (v8 + 1 >= v19) {
          return swift_release(a1);
        }
        unint64_t v9 = *(void *)(v18 + 8 * i);
        if (!v9)
        {
          int64_t i = v8 + 2;
          if (v8 + 2 >= v19) {
            return swift_release(a1);
          }
          unint64_t v9 = *(void *)(v18 + 8 * i);
          if (!v9)
          {
            int64_t i = v8 + 3;
            if (v8 + 3 >= v19) {
              return swift_release(a1);
            }
            unint64_t v9 = *(void *)(v18 + 8 * i);
            if (!v9)
            {
              int64_t v10 = v8 + 4;
              if (v10 >= v19) {
                return swift_release(a1);
              }
              unint64_t v9 = *(void *)(v18 + 8 * v10);
              for (int64_t i = v10; !v9; ++v10)
              {
                int64_t i = v10 + 1;
                if (__OFADD__(v10, 1LL)) {
                  goto LABEL_38;
                }
                if (i >= v19) {
                  return swift_release(a1);
                }
                unint64_t v9 = *(void *)(v18 + 8 * i);
              }
            }
          }
        }
      }

      unint64_t v3 = (v9 - 1) & v9;
      unint64_t v7 = __clz(__rbit64(v9)) + (i << 6);
    }

    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 16 * v7 + 8);
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v7);
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0) {
        uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v7);
      }
      else {
        uint64_t v17 = v12 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain_n(v12, 2LL);
      swift_bridgeObjectRetain(v11);
      uint64_t result = _CocoaArrayWrapper.endIndex.getter(v17);
      uint64_t v13 = result;
      if (!result) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain_n(v12, 2LL);
      uint64_t result = swift_bridgeObjectRetain(v11);
      if (!v13) {
        goto LABEL_4;
      }
    }

    if (v13 < 1) {
      break;
    }
    for (uint64_t j = 0LL; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001LL) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v12);
      }
      else {
        id v15 = *(id *)(v12 + 8 * j + 32);
      }
      char v16 = v15;
      [v15 removeFromSuperview];
    }

void sub_10013A8F8(char *a1)
{
}

void sub_10013A904()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)(v2, 0LL);
  __asm { BR              X9 }

Swift::Int sub_10013A950()
{
  return Hasher._finalize()();
}

void sub_10013A9BC()
{
  __asm { BR              X10 }

uint64_t sub_10013A9F8(uint64_t a1)
{
  return swift_bridgeObjectRelease(0xEA00000000006C61LL);
}

void sub_10013AA50(uint64_t a1)
{
  uint64_t v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }

Swift::Int sub_10013AA98()
{
  return Hasher._finalize()();
}

unint64_t sub_10013AB04@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_100140EC4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10013AB30()
{
  return ((uint64_t (*)(void))((char *)sub_10013AB60 + 4 * byte_1001EC4CC[*v0]))();
}

void sub_10013AB60(void *a1@<X8>)
{
  *a1 = 0x746E6F7A69726F68LL;
  a1[1] = 0xEA00000000006C61LL;
}

void sub_10013AB80(void *a1@<X8>)
{
  *a1 = 0x64656B63617473LL;
  a1[1] = 0xE700000000000000LL;
}

void sub_10013AB9C(void *a1@<X8>)
{
  *a1 = 1684632167LL;
  a1[1] = 0xE400000000000000LL;
}

id sub_10013ABB0(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType(v4);
  uint64_t v10 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_viewElementMap;
  uint64_t v11 = v4;
  *(void *)&v4[v10] = sub_10018725C((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)&v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_focusGuide] = 0LL;
  v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_axis] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines] = 0LL;
  *(void *)&v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_spacing] = 0LL;
  *(void *)&v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_minimumDynamicHeaderSpacing] = 0LL;
  v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_isHeaderLabelNearFocusedItem] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_headerLabel] = 0LL;
  *(void *)&v11[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements] = &_swiftEmptyArrayStorage;

  v14.receiver = v11;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, "initWithFrame:", a1, a2, a3, a4);
  [v12 setInsetsLayoutMarginsFromSafeArea:0];
  objc_msgSend( v12,  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);

  return v12;
}

void sub_10013AD3C()
{
  uint64_t v2 = v0;
  v48.receiver = v0;
  v48.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v48, "layoutSubviews");
  id v3 = [v0 layoutMarginsGuide];
  [v3 layoutFrame];
  double v46 = v5;
  CGFloat v47 = v4;
  double width = v6;
  double Height = v8;

  double v10 = *(double *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_minimumDynamicHeaderSpacing];
  uint64_t v11 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_axis;
  CGFloat v45 = width;
  if (v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_axis] - 2 >= 2)
  {
    if (v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_axis])
    {
      double width = UILayoutFittingCompressedSize.width;
      v50.origin.y = v46;
      v50.origin.x = v47;
      v50.size.height = Height;
      v50.size.double width = v45;
      double Height = CGRectGetHeight(v50);
    }

    else
    {
      v49.origin.y = v46;
      v49.origin.x = v47;
      v49.size.height = Height;
      v49.size.double width = width;
      double width = CGRectGetWidth(v49);
      double Height = UILayoutFittingCompressedSize.height;
    }
  }

  objc_msgSend(v2, "tv_maxWidth");
  if (v12 != 0.0) {
    objc_msgSend(v2, "tv_maxWidth");
  }
  uint64_t v44 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines;
  uint64_t v13 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines];
  if (v13 < 0) {
    goto LABEL_44;
  }
  objc_super v14 = *(void **)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_headerLabel];
  uint64_t v41 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_headerLabel;
  *(void *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_headerLabel] = 0LL;

  uint64_t v43 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements;
  uint64_t v1 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  uint64_t v15 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(*(void *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements]);
  if (v15)
  {
    while (1)
    {
      double v16 = v46 + v10;
      uint64_t v42 = v11;
      if ((v1 & 0xC000000000000001LL) != 0)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v1);
      }

      else
      {
        uint64_t v17 = *(void *)(v1 + 32);
        swift_retain(v17);
      }

      uint64_t v18 = *(void **)(v17 + 16);
      objc_msgSend(v18, "sizeThatFits:", width, Height);
      double v10 = v19;
      CGFloat v21 = v20;
      uint64_t v22 = objc_opt_self(&OBJC_CLASS___UILabel);
      uint64_t v23 = swift_dynamicCastObjCClass(v18, v22);
      if (!v23 || !*(void *)&v2[v44]) {
        goto LABEL_37;
      }
      uint64_t v24 = (void *)v23;
      id v25 = v18;
      id v26 = [v24 font];
      if (!v26)
      {
        __break(1u);
        JUMPOUT(0x10013B484LL);
      }

      uint64_t v27 = v26;
      [v26 lineHeight];
      double v29 = v28;

      v51.origin.x = v47;
      v51.origin.y = v16;
      v51.size.double width = v10;
      v51.size.height = v21;
      double v30 = CGRectGetHeight(v51) / v29;
      if ((~*(void *)&v30 & 0x7FF0000000000000LL) == 0) {
        break;
      }
      if (v30 <= -9.22337204e18) {
        goto LABEL_40;
      }
      if (v30 >= 9.22337204e18) {
        goto LABEL_41;
      }
      if (v13 >= (uint64_t)v30)
      {
        uint64_t v1 = (v13 - (uint64_t)v30) & ~((v13 - (uint64_t)v30) >> 63);
      }

      else
      {
        uint64_t v1 = 0LL;
      }

      uint64_t v31 = *(void *)&v2[v43];
      if ((unint64_t)v31 >> 62)
      {
        if (v31 < 0) {
          uint64_t v37 = *(void *)&v2[v43];
        }
        else {
          uint64_t v37 = v31 & 0xFFFFFFFFFFFFFF8LL;
        }
        swift_bridgeObjectRetain(*(void *)&v2[v43]);
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter(v37);
        if (!v13)
        {
LABEL_36:

          swift_bridgeObjectRelease(v31);
          goto LABEL_37;
        }
      }

      else
      {
        uint64_t v13 = *(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10);
        swift_bridgeObjectRetain(*(void *)&v2[v43]);
        if (!v13) {
          goto LABEL_36;
        }
      }

      if ((v31 & 0xC000000000000001LL) != 0)
      {
        uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v31);
        goto LABEL_28;
      }

      if (*(void *)((v31 & 0xFFFFFFFFFFFFF8LL) + 0x10))
      {
        uint64_t v32 = *(void *)(v31 + 32);
        swift_retain(v32);
LABEL_28:
        swift_bridgeObjectRelease(v31);
        id v33 = *(id *)(v32 + 16);
        swift_release(v32);
        sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
        id v34 = v25;
        char v35 = static NSObject.== infix(_:_:)(v24, v33);

        if ((v35 & 1) != 0)
        {
          uint64_t v36 = *(void **)&v2[v41];
          *(void *)&v2[v41] = v24;
        }

        else
        {
        }

        uint64_t v11 = v42;
LABEL_37:
        __asm { BR              X9 }
      }

id sub_10013B4C8(double a1, double a2)
{
  uint64_t v37 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines;
  if ((*(void *)&v3[OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines] & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    double v4 = a2;
    double v5 = a1;
    uint64_t v38 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines];
    objc_msgSend(v3, "tv_maxWidth");
    if (v6 != 0.0) {
      objc_msgSend(v3, "tv_maxWidth");
    }
    uint64_t v36 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements;
    uint64_t v2 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
    if (!((unint64_t)v2 >> 62))
    {
      uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      swift_bridgeObjectRetain(*(void *)&v3[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements]);
      double v8 = &unk_1002BB000;
      if (v7) {
        goto LABEL_6;
      }
      goto LABEL_35;
    }
  }

  if (v2 < 0) {
    uint64_t v31 = v2;
  }
  else {
    uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v2);
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  double v8 = (void *)&unk_1002BB000;
  if (v32)
  {
LABEL_6:
    uint64_t v9 = v8[50];
    if ((v2 & 0xC000000000000001LL) != 0)
    {
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
    }

    else
    {
      uint64_t v10 = *(void *)(v2 + 32);
      swift_retain(v10);
    }

    [v3 layoutMargins];
    double v15 = v5 - v13 - v14;
    if (v15 < 0.0) {
      double v16 = 0.0;
    }
    else {
      double v16 = v15;
    }
    double v17 = v4 - v11 - v12;
    if (v17 < 0.0) {
      double v18 = 0.0;
    }
    else {
      double v18 = v17;
    }
    double v19 = *(void **)(v10 + 16);
    objc_msgSend(v19, "sizeThatFits:", v16, v18);
    double v21 = v20;
    uint64_t v22 = objc_opt_self(&OBJC_CLASS___UILabel);
    uint64_t v23 = swift_dynamicCastObjCClass(v19, v22);
    if (!v23 || !*(void *)&v3[v37])
    {
      swift_release(v10);
      goto LABEL_25;
    }

    uint64_t v24 = (void *)v23;
    id v25 = v19;
    id v26 = [v24 font];
    if (!v26)
    {
      __break(1u);
      JUMPOUT(0x10013B9D0LL);
    }

    uint64_t v27 = v26;
    [v26 lineHeight];
    double v29 = v28;
    swift_release(v10);

    double v30 = v21 / v29;
    if ((~COERCE__INT64(v21 / v29) & 0x7FF0000000000000LL) != 0)
    {
      if (v30 > -9.22337204e18)
      {
        if (v30 < 9.22337204e18)
        {
          if (v38 >= (uint64_t)v30 && __OFSUB__(v38, (uint64_t)v30))
          {
            __break(1u);
            JUMPOUT(0x10013B7E0LL);
          }

uint64_t sub_10013BA38(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v10, "setHighlighted:", a1 & 1);
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n(v3, 2LL);
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n(v3, 2LL);
  }

  if (v3 < 0) {
    uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  }
  else {
    uint64_t v9 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain_n(v3, 2LL);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v9);
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n(v3, 2LL);
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = a1 & 1;
    do
    {
      if ((v3 & 0xC000000000000001LL) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }

      else
      {
        uint64_t v8 = *(void *)(v3 + 8 * v6 + 32);
        swift_retain(v8);
      }

      ++v6;
      [*(id *)(v8 + 16) setHighlighted:v7];
      swift_release(v8);
    }

    while (v4 != v6);
    return swift_bridgeObjectRelease_n(v3, 2LL);
  }

  __break(1u);
  return result;
}

void sub_10013BB9C(char a1, char a2, void *a3)
{
  v32.receiver = v3;
  v32.super_class = (Class)swift_getObjectType(v3);
  objc_msgSendSuper2(&v32, "setHighlighted:animated:withAnimationCoordinator:", a1 & 1, a2 & 1, a3);
  if (a3)
  {
    if ((a2 & 1) != 0)
    {
      uint64_t v7 = swift_allocObject(&unk_100274070, 25LL, 7LL);
      *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
      *(_BYTE *)(v7 + 24) = a1 & 1;
      double v30 = sub_10014161C;
      uint64_t v31 = v7;
      id v26 = _NSConcreteStackBlock;
      uint64_t v27 = 1107296256LL;
      double v28 = sub_1000FA280;
      double v29 = &unk_100274088;
      uint64_t v8 = _Block_copy(&v26);
      uint64_t v9 = v31;
      id v10 = a3;
      double v11 = v3;
      objc_msgSend(v10, "addCoordinatedAnimations:completion:", v8, 0, swift_release(v9).n128_f64[0]);
      _Block_release(v8);

      return;
    }
  }

  else if ((a2 & 1) != 0)
  {
    BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
    char v13 = a1 & 1;
    double v14 = 0.12;
    if ((a1 & 1) == 0) {
      double v14 = 0.5;
    }
    if (IsReduceMotionEnabled) {
      double v15 = 0.0;
    }
    else {
      double v15 = v14;
    }
    double v16 = (void *)objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v17 = swift_allocObject(&unk_100274020, 25LL, 7LL);
    *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
    *(_BYTE *)(v17 + 24) = v13;
    double v30 = sub_1001414E4;
    uint64_t v31 = v17;
    id v26 = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256LL;
    double v28 = sub_1000FA280;
    double v29 = &unk_100274038;
    double v18 = _Block_copy(&v26);
    uint64_t v19 = v31;
    double v20 = v3;
    swift_release(v19);
    [v16 animateWithDuration:v18 animations:v15];
    _Block_release(v18);
    return;
  }

  uint64_t v21 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v25 = v21;
    }
    else {
      uint64_t v25 = v21 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v21);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v25);
    if (v22) {
      goto LABEL_13;
    }
LABEL_23:
    swift_bridgeObjectRelease(v21);
    return;
  }

  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v21);
  if (!v22) {
    goto LABEL_23;
  }
LABEL_13:
  if (v22 >= 1)
  {
    for (uint64_t i = 0LL; i != v22; ++i)
    {
      if ((v21 & 0xC000000000000001LL) != 0)
      {
        uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
      }

      else
      {
        uint64_t v24 = *(void *)(v21 + 8 * i + 32);
        swift_retain(v24);
      }

      [*(id *)(v24 + 16) setHighlighted:a1 & 1];
      swift_release(v24);
    }

    goto LABEL_23;
  }

  __break(1u);
}

uint64_t sub_10013BE44(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements);
  if (!((unint64_t)v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)(a1 + OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements));
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease(v3);
  }

  if (v3 < 0) {
    uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements);
  }
  else {
    uint64_t v9 = v3 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)(a1 + OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements));
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v9);
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease(v3);
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0LL;
    uint64_t v7 = a2 & 1;
    do
    {
      if ((v3 & 0xC000000000000001LL) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }

      else
      {
        uint64_t v8 = *(void *)(v3 + 8 * v6 + 32);
        swift_retain(v8);
      }

      ++v6;
      [*(id *)(v8 + 16) setHighlighted:v7];
      swift_release(v8);
    }

    while (v4 != v6);
    return swift_bridgeObjectRelease(v3);
  }

  __break(1u);
  return result;
}

uint64_t sub_10013BFA4(char a1, char a2)
{
  v13.receiver = v2;
  v13.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v13, "setSelected:animated:", a1 & 1, a2 & 1);
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n(v5, 2LL);
    if (v6) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n(v5, 2LL);
  }

  if (v5 < 0) {
    uint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  }
  else {
    uint64_t v12 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain_n(v5, 2LL);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v12);
  uint64_t v6 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n(v5, 2LL);
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0LL;
    uint64_t v9 = a1 & 1;
    uint64_t v10 = a2 & 1;
    do
    {
      if ((v5 & 0xC000000000000001LL) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      }

      else
      {
        uint64_t v11 = *(void *)(v5 + 8 * v8 + 32);
        swift_retain(v11);
      }

      ++v8;
      [*(id *)(v11 + 16) setSelected:v9 animated:v10];
      swift_release(v11);
    }

    while (v6 != v8);
    return swift_bridgeObjectRelease_n(v5, 2LL);
  }

  __break(1u);
  return result;
}

uint64_t sub_10013C120(char a1, char a2, uint64_t a3)
{
  v15.receiver = v3;
  v15.super_class = (Class)swift_getObjectType(v3);
  objc_msgSendSuper2(&v15, "setSelected:animated:withAnimationCoordinator:", a1 & 1, a2 & 1, a3);
  uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if (!((unint64_t)v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n(v7, 2LL);
    if (v8) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n(v7, 2LL);
  }

  if (v7 < 0) {
    uint64_t v14 = v7;
  }
  else {
    uint64_t v14 = v7 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain_n(v7, 2LL);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v14);
  uint64_t v8 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n(v7, 2LL);
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0LL;
    uint64_t v11 = a1 & 1;
    uint64_t v12 = a2 & 1;
    do
    {
      if ((v7 & 0xC000000000000001LL) != 0)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v7);
      }

      else
      {
        uint64_t v13 = *(void *)(v7 + 8 * v10 + 32);
        swift_retain(v13);
      }

      ++v10;
      [*(id *)(v13 + 16) setSelected:v11 animated:v12 withAnimationCoordinator:a3];
      swift_release(v13);
    }

    while (v8 != v10);
    return swift_bridgeObjectRelease_n(v7, 2LL);
  }

  __break(1u);
  return result;
}

void sub_10013C2CC(void *a1, void *a2)
{
  id v4 = [a1 nextFocusedItem];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = objc_opt_self(&OBJC_CLASS___UIView);
    uint64_t v7 = (void *)swift_dynamicCastObjCClass(v5, v6);
    if (v7)
    {
      uint64_t v8 = v7;
      unsigned int v9 = [v7 isDescendantOfView:v2];
      uint64_t v10 = *(void **)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_focusGuide];
      if (v10) {
        [v10 setEnabled:v9 ^ 1];
      }
      uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_headerLabel];
      if (v11)
      {
        uint64_t v12 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_minimumDynamicHeaderSpacing;
        if (*(double *)&v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_minimumDynamicHeaderSpacing] != 0.0)
        {
          if ((v9 & 1) != 0)
          {
            id v13 = v11;
            [v8 bounds];
            objc_msgSend(v8, "convertRect:toCoordinateSpace:", v2);
            CGFloat v15 = v14;
            CGFloat v17 = v16;
            CGFloat v19 = v18;
            CGFloat v21 = v20;
            [v13 bounds];
            double v23 = v22;
            id v24 = [v2 layoutMarginsGuide];
            [v24 layoutFrame];
            double v26 = v25;

            double v27 = v26 + *(double *)&v2[v12];
            objc_msgSend(v13, "sizeThatFits:", 0.0, 0.0);
            objc_msgSend(v13, "convertRect:toCoordinateSpace:", v2, v23, v27, v28, v29);
            v55.origin.x = v30;
            v55.origin.y = v31;
            v55.size.double width = v32;
            v55.size.height = v33;
            v54.origin.x = v15;
            v54.origin.y = v17;
            v54.size.double width = v19;
            v54.size.height = v21;
            int v34 = CGRectIntersectsRect(v54, v55);
            if (v34 != v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_isHeaderLabelNearFocusedItem])
            {
              int v35 = v34;
              v2[OBJC_IVAR____TtC7TVMusic13TVMLStackView_isHeaderLabelNearFocusedItem] = v34;
              [v2 setNeedsLayout];
              if (v35)
              {
                uint64_t v36 = swift_allocObject(&unk_100274110, 24LL, 7LL);
                *(void *)(v36 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
                unint64_t v52 = sub_100141620;
                uint64_t v53 = v36;
                objc_super v48 = _NSConcreteStackBlock;
                uint64_t v49 = 1107296256LL;
                CGRect v50 = sub_10013C668;
                CGRect v51 = &unk_100274128;
                uint64_t v37 = _Block_copy(&v48);
                uint64_t v38 = v53;
                unint64_t v39 = v2;
                objc_msgSend( a2,  "addCoordinatedFocusingAnimations:completion:",  v37,  0,  swift_release(v38).n128_f64[0]);

                swift_unknownObjectRelease(v5);
                id v40 = v37;
LABEL_14:
                _Block_release(v40);
                return;
              }

uint64_t sub_10013C668(uint64_t a1, uint64_t a2)
{
  id v4 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  uint64_t v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

id sub_10013C718()
{
  id v1 = [objc_allocWithZone(UIFocusGuide) init];
  [v0 addLayoutGuide:v1];
  id v2 = [v1 topAnchor];
  id v3 = [v0 topAnchor];
  id v4 = [v2 constraintEqualToAnchor:v3 constant:-1.0];

  [v4 setActive:1];
  id v5 = [v1 widthAnchor];
  id v6 = [v0 widthAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  [v7 setActive:1];
  id v8 = [v1 heightAnchor];
  id v9 = [v8 constraintEqualToConstant:1.0];

  [v9 setActive:1];
  return v1;
}

uint64_t sub_10013C8AC()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(28LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  v2._countAndFlagsBits = _typeName(_:qualified:)(*(void *)v0, 0LL);
  object = v2._object;
  String.append(_:)(v2);
  swift_bridgeObjectRelease(object);
  v4._countAndFlagsBits = 4212947480056180000LL;
  v4._object = (void *)0xE900000000000020LL;
  String.append(_:)(v4);
  id v5 = *(id *)(v0 + 16);
  id v6 = [v5 description];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  id v9 = v8;

  v10._countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);

  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0x6E656D656C65202CLL;
  v11._object = (void *)0xEB00000000203A74LL;
  String.append(_:)(v11);
  id v12 = *(id *)(v1 + 24);
  id v13 = [v12 description];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  double v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);

  swift_bridgeObjectRelease(v16);
  v18._countAndFlagsBits = 62LL;
  v18._object = (void *)0xE100000000000000LL;
  String.append(_:)(v18);
  return 60LL;
}

uint64_t sub_10013CA1C()
{
  return swift_deallocClassInstance(v0, 32LL, 7LL);
}

uint64_t sub_10013CA48()
{
  return sub_10013C8AC();
}

void (*sub_10013CA68(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  id v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain(a3);
  v6[5] = sub_100140AE4(v6, a2, a3);
  return sub_10013CAD4;
}

void sub_10013CAD4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void *)(*a1 + 32LL);
  (*(void (**)(void, void))(*a1 + 40LL))(*a1, 0LL);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

uint64_t type metadata accessor for TVMLStackView()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic13TVMLStackView);
}

uint64_t type metadata accessor for TVMLStackView.StackViewElement()
{
  return objc_opt_self(&OBJC_CLASS____TtCC7TVMusic13TVMLStackViewP33_0B4CCE100CFA5FF176251E0864A85B2816StackViewElement);
}

uint64_t storeEnumTagSinglePayload for TVMLStackView.Axis(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_10013CBF0 + 4 * byte_1001EC4D5[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10013CC24 + 4 * byte_1001EC4D0[v4]))();
}

uint64_t sub_10013CC24(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013CC2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10013CC34LL);
  }
  return result;
}

uint64_t sub_10013CC40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10013CC48LL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_10013CC4C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10013CC54(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TVMLStackView.Axis()
{
  return &type metadata for TVMLStackView.Axis;
}

unint64_t sub_10013CC74()
{
  unint64_t result = qword_1002BB298;
  if (!qword_1002BB298)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EC5C0, &type metadata for TVMLStackView.Axis);
    atomic_store(result, (unint64_t *)&qword_1002BB298);
  }

  return result;
}

uint64_t sub_10013CCB8()
{
  return 0x53636973756D7674LL;
}

unint64_t sub_10013CCD8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10013CF6C(a1, v4);
}

unint64_t sub_10013CD08(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_10013D030(a1, a2, v5);
}

uint64_t sub_10013CD6C(uint64_t a1)
{
  uint64_t v3 = sub_100163ADC(a1);
  uint64_t v5 = v4;
  String.hash(into:)(v8, v3, v4);
  swift_bridgeObjectRelease(v5);
  Swift::Int v6 = Hasher._finalize()();
  return sub_10013D110(a1, v6);
}

unint64_t sub_10013CDE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  uint64_t v6 = v5;
  Hasher.init(_seed:)(v9, v3);
  String.hash(into:)(v9, v4, v6);
  Swift::Int v7 = Hasher._finalize()();
  swift_bridgeObjectRelease(v6);
  return sub_10013D3D0(a1, v7);
}

unint64_t sub_10013CE60(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = Hasher._finalize()();
  return sub_10013D030(a1, a2, v5);
}

unint64_t sub_10013CED8(Swift::UInt a1)
{
  Swift::Int v3 = Hasher._finalize()();
  return sub_10013D544(a1, v3);
}

uint64_t sub_10013CF3C(uint64_t a1)
{
  return sub_10013D5E0(a1, v3);
}

unint64_t sub_10013CF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0)
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_1001390A0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_1000E0060((uint64_t)v9);
      if ((v7 & 1) != 0) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }

    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v4) & 1) != 0);
  }

  return v4;
}

unint64_t sub_10013D030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0)
  {
    uint64_t v9 = *(void *)(v3 + 48);
    Swift::String v10 = (void *)(v9 + 16 * v6);
    uint64_t v11 = v10[1];
    BOOL v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0LL) & 1) == 0)
    {
      uint64_t v13 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v13;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v14 = (void *)(v9 + 16 * v6);
        uint64_t v15 = v14[1];
        BOOL v16 = *v14 == a1 && v15 == a2;
      }

      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0LL) & 1) == 0);
    }
  }

  return v6;
}

uint64_t sub_10013D110(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
  if (((*(void *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v3) & 1) != 0) {
    __asm { BR              X9 }
  }

  return a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
}

unint64_t sub_10013D3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if (((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
  {
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v2 + 48) + 8 * v5));
    uint64_t v9 = v8;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
    if (v7 == v10 && v9 == v11)
    {
LABEL_16:
      swift_bridgeObjectRelease_n(v9, 2LL);
      return v5;
    }

    uint64_t v13 = v11;
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0LL);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = ~v4;
      unint64_t v5 = (v5 + 1) & v15;
      if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0)
      {
        while (1)
        {
          uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(*(void *)(*(void *)(v2 + 48) + 8 * v5));
          uint64_t v9 = v17;
          uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
          if (v16 == v18 && v9 == v19) {
            break;
          }
          uint64_t v21 = v19;
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v9, v18, v19, 0LL);
          swift_bridgeObjectRelease(v9);
          swift_bridgeObjectRelease(v21);
          if ((v22 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v15;
            if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v5) & 1) != 0) {
              continue;
            }
          }

          return v5;
        }

        goto LABEL_16;
      }
    }
  }

  return v5;
}

unint64_t sub_10013D544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0)
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8LL)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }

  return result;
}

uint64_t sub_10013D5E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
  if (((*(void *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v3) & 1) != 0) {
    __asm { BR              X9 }
  }

  return a2 & ~(-1LL << *(_BYTE *)(v2 + 32));
}

Swift::Int sub_10013D850(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10(&qword_1002BB2F8);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_44;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v15 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v15 << 6);
      goto LABEL_25;
    }

    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1LL))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }

    if (v22 >= v12) {
      break;
    }
    double v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v12) {
        goto LABEL_37;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v15);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0) {
            goto LABEL_44;
          }
          goto LABEL_40;
        }

        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v15 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_46;
            }
            if (v15 >= v12) {
              goto LABEL_37;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v15);
            ++v25;
            if (v24) {
              goto LABEL_24;
            }
          }
        }

        int64_t v15 = v25;
      }
    }

LABEL_24:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_25:
    uint64_t v26 = *(void *)(v5 + 48) + 40 * v21;
    if ((a2 & 1) != 0)
    {
      __int128 v27 = *(_OWORD *)v26;
      __int128 v28 = *(_OWORD *)(v26 + 16);
      uint64_t v41 = *(void *)(v26 + 32);
      __int128 v39 = v27;
      __int128 v40 = v28;
      __int128 v38 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
    }

    else
    {
      sub_1001390A0(v26, (uint64_t)&v39);
      __int128 v38 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      swift_retain(*(void *)(*(void *)(v5 + 56) + 16 * v21 + 8));
    }

    Swift::Int result = AnyHashable._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v29 = -1LL << *(_BYTE *)(v8 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1LL << v30) & ~*(void *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1LL << v30) & ~*(void *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0LL;
    }

    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }

        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0LL;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v13 + 8 * v31);
      }

      while (v35 == -1);
      unint64_t v16 = __clz(__rbit64(~v35)) + (v31 << 6);
    }

    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v16;
    uint64_t v17 = *(void *)(v8 + 48) + 40 * v16;
    __int128 v18 = v39;
    __int128 v19 = v40;
    *(void *)(v17 + 3sub_1000E053C(v0 + 2) = v41;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v19;
    *(_OWORD *)(*(void *)(v8 + 56) + 16 * vswift_unknownObjectWeakDestroy(v0 + 16) = v38;
    ++*(void *)(v8 + 16);
  }

  swift_release(v5);
  double v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_40:
  uint64_t v36 = 1LL << *(_BYTE *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *double v23 = -1LL << v36;
  }
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
LABEL_44:
  Swift::Int result = swift_release(v5);
  *unint64_t v3 = v8;
  return result;
}

        unint64_t v11 = (v20 - 1) & v20;
        __int128 v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }

      int64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      unint64_t v24 = *v22;
      double v23 = v22[1];
      int64_t v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_1000F2010(v25, v38);
      }

      else
      {
        sub_1000E0094((uint64_t)v25, (uint64_t)v38);
        swift_bridgeObjectRetain(v23);
      }

      Hasher.init(_seed:)(v37, *(void *)(v8 + 40));
      String.hash(into:)(v37, v24, v23);
      Swift::Int result = Hasher._finalize()();
      uint64_t v26 = -1LL << *(_BYTE *)(v8 + 32);
      __int128 v27 = result & ~v26;
      __int128 v28 = v27 >> 6;
      if (((-1LL << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        int64_t v15 = __clz(__rbit64((-1LL << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0LL;
      }

      else
      {
        uint64_t v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }

          unint64_t v31 = v28 == v30;
          if (v28 == v30) {
            __int128 v28 = 0LL;
          }
          v29 |= v31;
          char v32 = *(void *)(v12 + 8 * v28);
        }

        while (v32 == -1);
        int64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }

      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      Swift::Int result = (uint64_t)sub_1000F2010(v38, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }

  Swift::Int result = swift_release(v5);
  *unint64_t v3 = v8;
  return result;
}

  swift_release(v5);
  if ((a2 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_27:
  uint64_t v17 = 1LL << *(_BYTE *)(v5 + 32);
  if (v17 >= 64) {
    bzero(v12, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *int64_t v12 = -1LL << v17;
  }
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
LABEL_31:
  swift_release(v5);
  *unint64_t v3 = v7;
}

  swift_release(v3);
  uint64_t v2 = v18;
  unint64_t v16 = 1LL << *(_BYTE *)(v3 + 32);
  if (v16 > 63) {
    bzero((void *)(v3 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
  }
  else {
    *uint64_t v7 = -1LL << v16;
  }
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
LABEL_28:
  Swift::Int result = swift_release(v3);
  uint64_t *v2 = v5;
  return result;
}

  Swift::Int result = swift_release_n(v3, 2LL);
  uint64_t v2 = v16;
LABEL_26:
  uint64_t *v2 = v5;
  return result;
}

uint64_t sub_10013DB60(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10(&qword_1002BD0A0);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    BOOL v34 = v3;
    uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1LL << v9);
    }
    else {
      uint64_t v10 = -1LL;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain(v5);
    int64_t v14 = 0LL;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }

      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1LL))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }

        if (v19 >= v35) {
          goto LABEL_37;
        }
        unint64_t v20 = v36[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v35) {
            goto LABEL_37;
          }
          unint64_t v20 = v36[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v35)
            {
LABEL_37:
              swift_release(v5);
              unint64_t v3 = v34;
              if ((a2 & 1) != 0)
              {
                uint64_t v33 = 1LL << *(_BYTE *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v36 = -1LL << v33;
                }
                *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
              }

              break;
            }

            unint64_t v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1LL)) {
                  goto LABEL_44;
                }
                if (v14 >= v35) {
                  goto LABEL_37;
                }
                unint64_t v20 = v36[v14];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }

            int64_t v14 = v21;
          }
        }

void sub_10013DE5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10(&qword_1002BB2C8);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_retain(v5);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }

    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v13 >= v35) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v13 = v25;
      }
    }

Swift::Int sub_10013E170(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10(&qword_1002BB2F0);
  char v37 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  Swift::Int result = swift_retain(v5);
  int64_t v14 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }

    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_36:
          swift_release(v5);
          if ((v37 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v14 >= v35) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v14 = v25;
      }
    }

void sub_10013E484(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v48 = type metadata accessor for SocialProfile(0LL);
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin(v48, v7);
  CGFloat v47 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = *v3;
  if (*(void *)(*v3 + 24) > a1) {
    a1 = *(void *)(*v3 + 24);
  }
  sub_1000DFE10((uint64_t *)&unk_1002BD1D0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_43;
  }
  uint64_t v12 = 1LL << *(_BYTE *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  CGFloat v45 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1LL << v12);
  }
  else {
    uint64_t v14 = -1LL;
  }
  unint64_t v15 = v14 & v13;
  id v43 = v3;
  int64_t v44 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v16 = v10 + 64;
  swift_retain(v9);
  int64_t v17 = 0LL;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }

    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }

    if (v22 >= v44) {
      break;
    }
    uint64_t v23 = v45;
    unint64_t v24 = v45[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v44) {
        goto LABEL_36;
      }
      unint64_t v24 = v45[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v44)
        {
LABEL_36:
          swift_release(v9);
          unint64_t v3 = v43;
          if ((v46 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = v45[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v17 >= v44) {
              goto LABEL_36;
            }
            unint64_t v24 = v45[v17];
            ++v25;
            if (v24) {
              goto LABEL_23;
            }
          }
        }

        int64_t v17 = v25;
      }
    }

void sub_10013E810(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10((uint64_t *)&unk_1002BB300);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_29;
  }
  uint64_t v8 = 1LL << *(_BYTE *)(v5 + 32);
  int64_t v19 = v3;
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  swift_retain(v5);
  if (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    goto LABEL_21;
  }

  if (v11 <= 1)
  {
    swift_release(v5);
    uint64_t v13 = (void *)(v5 + 64);
    if ((a2 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }

  uint64_t v13 = (void *)(v5 + 64);
  unint64_t v14 = *(void *)(v5 + 72);
  uint64_t v15 = 1LL;
  if (v14) {
    goto LABEL_20;
  }
  uint64_t v15 = 2LL;
  if (v11 <= 2) {
    goto LABEL_22;
  }
  unint64_t v14 = *(void *)(v5 + 80);
  if (v14)
  {
LABEL_20:
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_21:
    uint64_t v17 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v12);
    Hasher.init(_seed:)(v20, *(void *)(v7 + 40));
    __asm { BR              X8 }
  }

  uint64_t v16 = 3LL;
  if (v11 > 3)
  {
    unint64_t v14 = *(void *)(v5 + 88);
    if (v14)
    {
      uint64_t v15 = 3LL;
      goto LABEL_20;
    }

    while (1)
    {
      uint64_t v15 = v16 + 1;
      if (__OFADD__(v16, 1LL))
      {
        __break(1u);
        JUMPOUT(0x10013EBA4LL);
      }

      if (v15 >= v11) {
        break;
      }
      unint64_t v14 = *(void *)(v5 + 64 + 8 * v15);
      ++v16;
      if (v14) {
        goto LABEL_20;
      }
    }
  }

void sub_10013EBC0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10(&qword_1002BD030);
  char v38 = a2;
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v9 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  else {
    uint64_t v10 = -1LL;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  unint64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_retain(v5);
  int64_t v13 = 0LL;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }

    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1LL))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }

    if (v22 >= v36) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          unint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }

        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1LL)) {
              goto LABEL_45;
            }
            if (v13 >= v36) {
              goto LABEL_36;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_33;
            }
          }
        }

        int64_t v13 = v25;
      }
    }

void sub_10013EEC8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  if (*(void *)(*v2 + 24) <= a1) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = *(void *)(*v2 + 24);
  }
  sub_1000DFE10((uint64_t *)&unk_1002BB2D0);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_31;
  }
  uint64_t v8 = 1LL << *(_BYTE *)(v5 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1LL << v8);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v18 = (unint64_t)(v8 + 63) >> 6;
  swift_retain(v5);
  if (v10)
  {
    unint64_t v11 = __clz(__rbit64(v10));
    goto LABEL_21;
  }

  if (v18 <= 1)
  {
    swift_release(v5);
    uint64_t v12 = (void *)(v5 + 64);
    if ((a2 & 1) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }

  uint64_t v12 = (void *)(v5 + 64);
  unint64_t v13 = *(void *)(v5 + 72);
  uint64_t v14 = 1LL;
  if (v13) {
    goto LABEL_20;
  }
  uint64_t v14 = 2LL;
  if (v18 <= 2) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v5 + 80);
  if (v13)
  {
LABEL_20:
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_21:
    uint64_t v16 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v11);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain(*(void *)(*(void *)(v5 + 56) + 8 * v11));
    }
    Hasher.init(_seed:)(v19, *(void *)(v7 + 40));
    __asm { BR              X8 }
  }

  uint64_t v15 = 3LL;
  if (v18 > 3)
  {
    unint64_t v13 = *(void *)(v5 + 88);
    if (v13)
    {
      uint64_t v14 = 3LL;
      goto LABEL_20;
    }

    while (1)
    {
      uint64_t v14 = v15 + 1;
      if (__OFADD__(v15, 1LL))
      {
        __break(1u);
        JUMPOUT(0x10013F268LL);
      }

      if (v14 >= v18) {
        break;
      }
      unint64_t v13 = *(void *)(v5 + 64 + 8 * v14);
      ++v15;
      if (v13) {
        goto LABEL_20;
      }
    }
  }

unint64_t sub_10013F284(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    Swift::Int result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1001390A0(*(void *)(a2 + 48) + 40 * v6, (uint64_t)v27);
        Swift::Int v9 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
        Swift::Int result = sub_1000E0060((uint64_t)v27);
        Swift::Int v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 >= v8 && v3 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(a2 + 48);
            unint64_t v14 = v13 + 40 * v3;
            uint64_t v15 = (__int128 *)(v13 + 40 * v6);
            if (v3 != v6 || v14 >= (unint64_t)v15 + 40)
            {
              __int128 v16 = *v15;
              __int128 v17 = v15[1];
              *(void *)(v14 + 3sub_1000E053C(v0 + 2) = *((void *)v15 + 4);
              *(_OWORD *)unint64_t v14 = v16;
              *(_OWORD *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
            }

            uint64_t v18 = *(void *)(a2 + 56);
            int64_t v19 = (_OWORD *)(v18 + 16 * v3);
            unint64_t v20 = (_OWORD *)(v18 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v19 >= v20 + 1))
            {
              *int64_t v19 = *v20;
              int64_t v3 = v6;
            }
          }
        }

        else if (v10 >= v8 || v3 >= v10)
        {
          goto LABEL_16;
        }

        unint64_t v6 = (v6 + 1) & v7;
      }

      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) != 0);
    }

    unint64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1LL << v3) - 1;
  }

  else
  {
    unint64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1LL << result) - 1;
  }

  *unint64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1LL);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }

  else
  {
    *(void *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }

  return result;
}

unint64_t sub_10013F44C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    Swift::Int result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::Int v9 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v10 = *v9;
        uint64_t v11 = v9[1];
        Hasher.init(_seed:)(v26, *(void *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v26, v10, v11);
        Swift::Int v12 = Hasher._finalize()();
        Swift::Int result = swift_bridgeObjectRelease(v11);
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }

        else if (v13 >= v8)
        {
          goto LABEL_11;
        }

        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          __int128 v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (void *)(v17 + 8 * v3);
          int64_t v19 = (void *)(v17 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 1))
          {
            *uint64_t v18 = *v19;
            int64_t v3 = v6;
          }
        }

unint64_t sub_10013F620(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    Swift::Int result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Swift::Int v9 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v6);
        uint64_t v10 = *v9;
        uint64_t v11 = v9[1];
        Hasher.init(_seed:)(v29, *(void *)(a2 + 40));
        swift_bridgeObjectRetain(v11);
        String.hash(into:)(v29, v10, v11);
        Swift::Int v12 = Hasher._finalize()();
        Swift::Int result = swift_bridgeObjectRelease(v11);
        unint64_t v13 = v12 & v7;
        if (v13 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v14 = *(void *)(a2 + 48);
        uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
        __int128 v16 = (_OWORD *)(v14 + 16 * v6);
        if (v3 != v6 || v15 >= v16 + 1) {
          *uint64_t v15 = *v16;
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(type metadata accessor for SocialProfile(0LL) - 8) + 72LL);
        int64_t v19 = v18 * v3;
        Swift::Int result = v17 + v18 * v3;
        int64_t v20 = v18 * v6;
        unint64_t v21 = v17 + v18 * v6 + v18;
        if (v19 < v20 || result >= v21)
        {
          Swift::Int result = swift_arrayInitWithTakeFrontToBack();
        }

        else
        {
          int64_t v3 = v6;
          if (v19 == v20) {
            goto LABEL_6;
          }
          Swift::Int result = swift_arrayInitWithTakeBackToFront();
        }

        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }

      if (v13 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      goto LABEL_12;
    }

unint64_t sub_10013F81C(unint64_t result, uint64_t a2)
{
  unint64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1LL << *(_BYTE *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1LL << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    Swift::Int result = _HashTable.previousHole(before:)(result, a2 + 64, ~v5);
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1LL << v6)) != 0)
    {
      uint64_t v7 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
      Hasher.init(_seed:)(v14, *(void *)(a2 + 40));
      __asm { BR              X8 }
    }

    unint64_t v8 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    uint64_t v9 = *v8;
    uint64_t v10 = (-1LL << v3) - 1;
  }

  else
  {
    unint64_t v8 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v10 = *v8;
    uint64_t v9 = (-1LL << result) - 1;
  }

  *unint64_t v8 = v10 & v9;
  uint64_t v11 = *(void *)(a2 + 16);
  BOOL v12 = __OFSUB__(v11, 1LL);
  uint64_t v13 = v11 - 1;
  if (v12)
  {
    __break(1u);
    JUMPOUT(0x10013FA94LL);
  }

  *(void *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_10013FAB0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1LL << result;
  uint64_t v5 = a5[6] + 40 * result;
  __int128 v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(v5 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  uint64_t v7 = (void *)(a5[7] + 16 * result);
  *uint64_t v7 = a3;
  v7[1] = a4;
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

_OWORD *sub_10013FB0C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1LL << a1;
  __int128 v6 = (void *)(a5[6] + 16 * a1);
  *__int128 v6 = a2;
  v6[1] = a3;
  Swift::Int result = sub_1000F2010(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1LL);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_10013FB74(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1LL << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_10013FBBC(unint64_t result, char a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1LL << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_BYTE *)(a4[7] + result) = a3 & 1;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1LL);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_10013FC04(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1LL << result;
  BOOL v5 = (void *)(a5[6] + 16 * result);
  *BOOL v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1LL);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_10013FC4C(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1LL << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1LL);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

void *sub_10013FC90()
{
  uint64_t v1 = v0;
  sub_1000DFE10(&qword_1002BB2F8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    Swift::Int result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  Swift::Int result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }

void *sub_10013FE6C()
{
  uint64_t v1 = v0;
  sub_1000DFE10(&qword_1002BD0A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    Swift::Int result = (void *)swift_release(v2);
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }

  uint64_t v25 = v1;
  Swift::Int result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void sub_100140050()
{
  uint64_t v1 = v0;
  sub_1000DFE10(&qword_1002BB2C8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *uint64_t v1 = v4;
    return;
  }

  BOOL v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void *sub_100140204()
{
  uint64_t v1 = v0;
  sub_1000DFE10(&qword_1002BB2F0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    Swift::Int result = (void *)swift_release(v2);
    *uint64_t v1 = v4;
    return result;
  }

  Swift::Int result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }

void sub_1001403B8()
{
  uint64_t v35 = type metadata accessor for SocialProfile(0LL);
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000DFE10((uint64_t *)&unk_1002BD1D0);
  uint64_t v32 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v36 = v6;
  if (!v7)
  {
    swift_release(v5);
    uint64_t v30 = v36;
    uint64_t v29 = v32;
LABEL_28:
    *uint64_t v29 = v30;
    return;
  }

  uint64_t v8 = v6;
  int64_t v9 = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1LL << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)v9 >= v5 + 64 + 8 * v10)
  {
    memmove(v9, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v36;
  }

  uint64_t v33 = v5 + 64;
  int64_t v12 = 0LL;
  *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1LL << *(_BYTE *)(v5 + 32);
  uint64_t v14 = -1LL;
  if (v13 < 64) {
    uint64_t v14 = ~(-1LL << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v16 = v35;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }

    int64_t v26 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
      __break(1u);
      goto LABEL_30;
    }

    if (v26 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      int64_t v12 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v12);
      if (!v27) {
        break;
      }
    }

void sub_100140614()
{
  uint64_t v1 = v0;
  sub_1000DFE10((uint64_t *)&unk_1002BB300);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *uint64_t v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }

void sub_10014079C()
{
  uint64_t v1 = v0;
  sub_1000DFE10(&qword_1002BD030);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *uint64_t v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }

void sub_100140944()
{
  uint64_t v1 = v0;
  sub_1000DFE10((uint64_t *)&unk_1002BB2D0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)(*v0);
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    swift_release(v2);
    *uint64_t v1 = v4;
    return;
  }

  uint64_t v5 = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1LL << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  int64_t v9 = 0LL;
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1LL << *(_BYTE *)(v2 + 32);
  uint64_t v11 = -1LL;
  if (v10 < 64) {
    uint64_t v11 = ~(-1LL << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }

    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1LL))
    {
      __break(1u);
      goto LABEL_28;
    }

    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }

void (*sub_100140AE4(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  unint64_t v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain(a3);
  void v7[9] = sub_100140D2C(v7);
  v7[10] = sub_100140BC4(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100140B74;
}

void sub_100140B74(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72LL);
  uint64_t v3 = *(void *)(*(void *)a1 + 64LL);
  (*(void (**)(uint64_t, void))(*(void *)a1 + 80LL))(*(void *)a1 + 32LL, 0LL);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0LL);
  free(v1);
}

void (*sub_100140BC4(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  uint64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_10013CD08(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }

  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *uint64_t v10 = v19;
        return sub_100140CF0;
      }

void sub_100140CF0(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_100140D58(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease(*v1);
  free(v1);
}

uint64_t (*sub_100140D2C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000LL;
  return sub_100140D4C;
}

uint64_t sub_100140D4C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t *sub_100140D58(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *result;
  if (!*result)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy(*(void *)(*a3 + 48) + 16 * a4, 1LL, &type metadata for String);
      sub_10013F44C(a4, *a3);
    }

    return (uint64_t *)swift_bridgeObjectRetain(v8);
  }

  int64_t v9 = (void *)*a3;
  if ((a2 & 1) != 0)
  {
    *(void *)(v9[7] + 8 * a4) = v8;
    return (uint64_t *)swift_bridgeObjectRetain(v8);
  }

  v9[(a4 >> 6) + 8] |= 1LL << a4;
  uint64_t v10 = (void *)(v9[6] + 16 * a4);
  *uint64_t v10 = a5;
  v10[1] = a6;
  *(void *)(v9[7] + 8 * a4) = v8;
  uint64_t v11 = v9[2];
  BOOL v12 = __OFADD__(v11, 1LL);
  uint64_t v13 = v11 + 1;
  if (!v12)
  {
    v9[2] = v13;
    swift_bridgeObjectRetain(a6);
    return (uint64_t *)swift_bridgeObjectRetain(v8);
  }

  __break(1u);
  return result;
}

char *sub_100140E1C(uint64_t a1)
{
  return sub_100159E7C(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_100140E30(void *a1)
{
  return sub_10015A1D0(0LL, a1[2], 0, a1);
}

char *sub_100140E44(uint64_t a1)
{
  return sub_10015A614(0LL, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100140E5C(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v4 = a1;
    }
    else {
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0LL, v2, 0LL, a1);
}

unint64_t sub_100140EC4(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10026E4D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4) {
    return 4LL;
  }
  else {
    return v3;
  }
}

void sub_100140F0C(char *a1, void *a2)
{
  double v5 = sub_10014D6A8();
  if ((v6 & 1) == 0)
  {
    double v7 = v4;
    id v8 = objc_msgSend(a1, "layer", v5);
    [v8 setCornerRadius:v7];
  }

  id v9 = objc_msgSend(a2, "element", v5);
  if (!v9)
  {
    __break(1u);
    goto LABEL_40;
  }

  uint64_t v10 = v9;
  id v11 = [v9 style];

  if (!v11)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }

  id v12 = [v11 valueForStyle:TVViewElementStyleBorderContinuous];

  if (!v12)
  {
    memset(v69, 0, sizeof(v69));
    sub_1000F3754((uint64_t)v69);
    goto LABEL_12;
  }

  _bridgeAnyObjectToAny(_:)(v69);
  swift_unknownObjectRelease(v12);
  sub_1000F3754((uint64_t)v69);
  id v13 = [a1 layer];
  id v14 = [a2 element];
  if (!v14) {
    goto LABEL_41;
  }
  BOOL v15 = v14;
  id v16 = [v14 style];

  if (!v16)
  {
LABEL_42:
    __break(1u);
    return;
  }

  unsigned int v17 = objc_msgSend(v16, "tv_borderContinuous");

  uint64_t v18 = (id *)&kCACornerCurveContinuous;
  if (!v17) {
    uint64_t v18 = (id *)&kCACornerCurveCircular;
  }
  id v19 = *v18;
  [v13 setCornerCurve:v19];

LABEL_12:
  id v20 = [a2 style];
  id v21 = [v20 backgroundColor];

  id v22 = [v21 color];
  [a1 setBackgroundColor:v22];

  id v23 = [a2 style];
  if (v23)
  {
    uint64_t v24 = v23;
    [v23 padding];
    double top = v25;
    double left = v27;
    double bottom = v29;
    double right = v31;
  }

  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }

  objc_msgSend(a1, "setLayoutMargins:", top, left, bottom, right);
  id v33 = [a2 style];
  if (!v33) {
    goto LABEL_18;
  }
  int64_t v34 = v33;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC698);
  uint64_t v36 = sub_1000F07DC(KeyPath);
  char v38 = v37;
  swift_release(KeyPath);

  if (!v38 || (v70._countAndFlagsBits = v36, v70._object = v38, char v39 = sub_100140EC4(v70), v39 == 4)) {
LABEL_18:
  }
    char v39 = 0;
  a1[OBJC_IVAR____TtC7TVMusic13TVMLStackView_axis] = v39;
  [a1 setNeedsLayout];
  id v40 = [a2 style];
  if (v40)
  {
    uint64_t v41 = v40;
    unint64_t v42 = (unint64_t)[v40 maxTextLines];

    if ((v42 & 0x8000000000000000LL) == 0) {
      goto LABEL_23;
    }
    _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3451LL,  0);
    __break(1u);
  }

  unint64_t v42 = 0LL;
LABEL_23:
  *(void *)&a1[OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines] = v42;
  [a1 setNeedsLayout];
  id v43 = [a2 style];
  double v44 = 0.0;
  double v45 = 0.0;
  if (v43)
  {
    int v46 = v43;
    uint64_t v47 = swift_getKeyPath(&unk_1001EC678);
    *(double *)&uint64_t v48 = COERCE_DOUBLE(sub_1000F0A38(v47));
    char v50 = v49;
    swift_release(v47);

    double v45 = *(double *)&v48;
    if ((v50 & 1) != 0) {
      double v45 = 0.0;
    }
  }

  *(double *)&a1[OBJC_IVAR____TtC7TVMusic13TVMLStackView_spacing] = v45;
  [a1 setNeedsLayout];
  id v51 = [a2 style];
  if (v51)
  {
    unint64_t v52 = v51;
    uint64_t v53 = swift_getKeyPath(&unk_1001EC658);
    uint64_t v54 = sub_1000F0A44(v53);
    char v56 = v55;
    swift_release(v53);

    if ((v56 & 1) != 0) {
      double v44 = 0.0;
    }
    else {
      double v44 = (double)v54;
    }
  }

  *(double *)&a1[OBJC_IVAR____TtC7TVMusic13TVMLStackView_minimumDynamicHeaderSpacing] = v44;
  [a1 setNeedsLayout];
  id v57 = [a1 layer];
  id v58 = [a2 style];
  if (v58)
  {
    uint64_t v59 = v58;
    uint64_t v60 = swift_getKeyPath(&unk_1001EC638);
    *(double *)&uint64_t v61 = COERCE_DOUBLE(sub_1000F0A38(v60));
    char v63 = v62;
    swift_release(v60);

    double v64 = *(double *)&v61;
    if ((v63 & 1) != 0) {
      double v64 = 0.0;
    }
  }

  else
  {
    double v64 = 0.0;
  }

  [v57 setZPosition:v64];

  id v65 = [a2 childViewElements];
  if (v65)
  {
    Swift::String v66 = v65;
    uint64_t v67 = sub_1000E0418(0LL, &qword_1002B8388, &OBJC_CLASS___TVViewElement_ptr);
    unint64_t v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v66, v67);
  }

  else
  {
    unint64_t v68 = 0LL;
  }

  sub_100139D44(v68);
  swift_bridgeObjectRelease(v68);
}

uint64_t sub_1001414C0()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

uint64_t sub_1001414E4()
{
  return sub_10013BE44(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_100141500(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100141510(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100141518()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10014153C()
{
  uint64_t v1 = OBJC_IVAR____TtC7TVMusic13TVMLStackView_viewElementMap;
  *(void *)&v0[v1] = sub_10018725C((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_focusGuide] = 0LL;
  v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_axis] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_maxLines] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_spacing] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_minimumDynamicHeaderSpacing] = 0LL;
  v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_isHeaderLabelNearFocusedItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_headerLabel] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100223C30LL,  "TVMusic/TVMLStackView.swift",  27LL,  2LL,  74LL,  0);
  __break(1u);
}

uint64_t sub_100141644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_1000DFE10(&qword_1002BB570);
  v4[11] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[12] = v6;
  v4[13] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BB568);
  v4[14] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[15] = v8;
  v4[16] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002BB578);
  v4[17] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v4[18] = v10;
  v4[19] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002B9658);
  v4[20] = swift_task_alloc((*(void *)(*(void *)(v11 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for MainActor(0LL);
  v4[21] = static MainActor.shared.getter(v12);
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v4[22] = v13;
  v4[23] = v14;
  return swift_task_switch(sub_10014175C, v13, v14);
}

uint64_t sub_10014175C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8D0);
  *(void *)(v0 + 40) = v2;
  uint64_t v4 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  swift_bridgeObjectRetain(v1);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 40, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles);
  swift_beginAccess(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles, v0 + 16, 0LL, 0LL);
  uint64_t v6 = *v5;
  if (*(void *)(*v5 + 16))
  {
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);
    swift_bridgeObjectRetain(v6);
    unint64_t v9 = sub_10013CE60(v7, v8);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 72);
    if ((v12 & 1) != 0)
    {
      unint64_t v13 = v9;
      uint64_t v14 = *(void *)(v6 + 56);
      uint64_t v15 = type metadata accessor for SocialProfile(0LL);
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))( v10,  v14 + *(void *)(v16 + 72) * v13,  v15);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v10, 0LL, 1LL, v15);
    }

    else
    {
      uint64_t v15 = type metadata accessor for SocialProfile(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v10, 1LL, 1LL, v15);
    }

    swift_bridgeObjectRelease(v6);
  }

  else
  {
    uint64_t v17 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v15 = type metadata accessor for SocialProfile(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v17, 1LL, 1LL, v15);
  }

  swift_bridgeObjectRelease(v11);
  uint64_t v18 = *(void *)(v0 + 160);
  type metadata accessor for SocialProfile(0LL);
  *(void *)(v0 + 19sub_1000E053C(v0 + 2) = v15;
  uint64_t v19 = *(void *)(v15 - 8);
  *(void *)(v0 + 200) = v19;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v18, 1LL, v15) == 1)
  {
    uint64_t v21 = *(void *)(v0 + 64);
    uint64_t v20 = *(void *)(v0 + 72);
    sub_1000E03B4(v18, &qword_1002B9658);
    uint64_t v22 = swift_getKeyPath(&unk_1001EC8F8);
    uint64_t v23 = sub_1000DFE10(&qword_1002BB628);
    uint64_t v24 = swift_allocObject(v23, 48LL, 7LL);
    *(_OWORD *)(v24 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E84B0;
    *(void *)(v24 + 3sub_1000E053C(v0 + 2) = v21;
    *(void *)(v24 + 40) = v20;
    uint64_t v25 = sub_1000DF308( &qword_1002BB580,  (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile,  (uint64_t)&protocol conformance descriptor for SocialProfile);
    uint64_t v26 = sub_1000DF308( &qword_1002BB588,  (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile,  (uint64_t)&protocol conformance descriptor for SocialProfile);
    swift_bridgeObjectRetain(v20);
    MusicCatalogResourceRequest.init<A>(matching:memberOf:)(v22, v24, v15, v25, v26);
    double v27 = (void *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(void *)(v0 + 208) = v27;
    *double v27 = v0;
    v27[1] = sub_100141AA0;
    return MusicCatalogResourceRequest.response()(*(void *)(v0 + 128), *(void *)(v0 + 136));
  }

  else
  {
    uint64_t v29 = *(void *)(v0 + 56);
    swift_release(*(void *)(v0 + 168));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v29, v18, v15);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v29, 0LL, 1LL, v15);
    uint64_t v30 = *(void *)(v0 + 152);
    uint64_t v31 = *(void *)(v0 + 128);
    uint64_t v32 = *(void *)(v0 + 104);
    swift_task_dealloc(*(void *)(v0 + 160));
    swift_task_dealloc(v30);
    swift_task_dealloc(v31);
    swift_task_dealloc(v32);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100141AA0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 208);
  *(void *)(*v1 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100141BDC;
  }
  else {
    uint64_t v4 = sub_100141B00;
  }
  return swift_task_switch(v4, *(void *)(v2 + 176), *(void *)(v2 + 184));
}

uint64_t sub_100141B00()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 56);
  swift_release(*(void *)(v0 + 168));
  MusicCatalogResourceResponse.items.getter(v4);
  sub_100154F68(v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v14, v13);
  uint64_t v9 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 160));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100141BDC()
{
  if (qword_1002B7290 != -1) {
    swift_once(&qword_1002B7290, sub_1001B22D8);
  }
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = type metadata accessor for Logger(0LL, v1);
  sub_1000E96CC(v3, (uint64_t)static Logger.sharePlay);
  swift_errorRetain(v2);
  uint64_t v4 = swift_errorRetain(v2);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.error.getter(v5);
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain(v8);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(void *)(v0 + 48) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v9 + 4);
    *uint64_t v10 = v11;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Social profile request failed with error: %@", v9, 0xCu);
    uint64_t v12 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v10, 1LL, v12);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {

    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }

  uint64_t v13 = *(void *)(v0 + 192);
  uint64_t v14 = *(void *)(v0 + 200);
  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v15 = *(void *)(v0 + 152);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 56);
  swift_errorRelease(*(void *)(v0 + 216));
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v18, 1LL, 1LL, v13);
  uint64_t v19 = *(void *)(v0 + 152);
  uint64_t v20 = *(void *)(v0 + 128);
  uint64_t v21 = *(void *)(v0 + 104);
  swift_task_dealloc(*(void *)(v0 + 160));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100141E08()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC880);
  uint64_t v6 = v0;
  uint64_t v2 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return v3;
}

uint64_t sub_100141EB0(uint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1LL << *(_BYTE *)(a1 + 32);
  uint64_t v4 = -1LL;
  if (v3 < 64) {
    uint64_t v4 = ~(-1LL << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain(a1);
  int64_t v8 = 0LL;
  int64_t v34 = (char *)&_swiftEmptyArrayStorage;
  int64_t v32 = v6;
  uint64_t v33 = result;
  uint64_t v31 = v2;
  if (v5) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v11 = v8 + 1;
    if (!__OFADD__(v8, 1LL))
    {
      if (v11 < v6)
      {
        unint64_t v12 = *(void *)(v2 + 8 * v11);
        ++v8;
        if (v12) {
          goto LABEL_23;
        }
        int64_t v8 = v11 + 1;
        if (v11 + 1 >= v6) {
          goto LABEL_34;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (v12) {
          goto LABEL_23;
        }
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v6) {
          goto LABEL_34;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (v12) {
          goto LABEL_23;
        }
        int64_t v8 = v11 + 3;
        if (v11 + 3 >= v6) {
          goto LABEL_34;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v8);
        if (v12)
        {
LABEL_23:
          unint64_t v5 = (v12 - 1) & v12;
          for (unint64_t i = __clz(__rbit64(v12)) + (v8 << 6); ; unint64_t i = v9 | (v8 << 6))
          {
            sub_1001390A0(*(void *)(v1 + 48) + 40 * i, (uint64_t)v38);
            v36[0] = v38[0];
            v36[1] = v38[1];
            uint64_t v37 = v39;
            sub_1001390A0((uint64_t)v36, (uint64_t)v35);
            uint64_t v14 = sub_1000DFE10(&qword_1002BB530);
            uint64_t v15 = v1;
            uint64_t v16 = v2;
            id v17 = v40;
            id v18 = [v40 identity];
            if (!v18) {
              break;
            }
            uint64_t v19 = v18;
            id v20 = [v18 displayName];

            if (!v20) {
              break;
            }
            uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
            uint64_t v23 = v22;

            id v24 = [v17 identifier];
            uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
            uint64_t v27 = v26;
            swift_unknownObjectRelease(v17);

            sub_1000E0060((uint64_t)v36);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native(v34);
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_10015AD94(0LL, *((void *)v34 + 2) + 1LL, 1, v34);
              int64_t v34 = (char *)result;
            }

            unint64_t v29 = *((void *)v34 + 2);
            unint64_t v28 = *((void *)v34 + 3);
            if (v29 >= v28 >> 1)
            {
              uint64_t result = (uint64_t)sub_10015AD94((char *)(v28 > 1), v29 + 1, 1, v34);
              int64_t v34 = (char *)result;
            }

            *((void *)v34 + sub_1000E053C(v0 + 2) = v29 + 1;
            uint64_t v30 = &v34[32 * v29];
            *((void *)v30 + 4) = v25;
            *((void *)v30 + 5) = v27;
            *((void *)v30 + 6) = v21;
            *((void *)v30 + 7) = v23;
            uint64_t v2 = v31;
            int64_t v6 = v32;
            uint64_t v1 = v33;
            if (!v5) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v9 = __clz(__rbit64(v5));
            v5 &= v5 - 1;
          }

          swift_unknownObjectRelease(v17);
          uint64_t v2 = v16;
          uint64_t v1 = v15;
LABEL_6:
          uint64_t result = sub_1000E0060((uint64_t)v36);
          if (!v5) {
            continue;
          }
          goto LABEL_7;
        }

        int64_t v13 = v11 + 4;
        if (v13 < v6)
        {
          unint64_t v12 = *(void *)(v2 + 8 * v13);
          if (v12)
          {
            int64_t v8 = v13;
            goto LABEL_23;
          }

          while (1)
          {
            int64_t v8 = v13 + 1;
            if (__OFADD__(v13, 1LL)) {
              goto LABEL_36;
            }
            if (v8 >= v6) {
              break;
            }
            unint64_t v12 = *(void *)(v2 + 8 * v8);
            ++v13;
            if (v12) {
              goto LABEL_23;
            }
          }
        }
      }

uint64_t sub_1001421EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a2 + 8);
  if ((sub_100159A48(*(void **)a1, *(void **)a2) & 1) != 0) {
    return sub_100159A48(v2, v3);
  }
  else {
    return 0LL;
  }
}

void sub_100142234(uint64_t *a1@<X8>)
{
  id v3 = [*(id *)(v1 + 16) identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t sub_100142288(uint64_t a1, uint64_t a2)
{
  return sub_10014816C(*(void **)(a1 + 16), *(void **)(a2 + 16));
}

uint64_t sub_100142294@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC880);
  uint64_t v9 = v3;
  uint64_t v5 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8);
  *a2 = v6;
  a2[1] = v7;
  swift_bridgeObjectRetain(v6);
  return swift_bridgeObjectRetain(v7);
}

double sub_100142338(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC880);
  uint64_t v7 = v4;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_100148F18);
  swift_release(KeyPath);
  swift_bridgeObjectRelease(v3);
  *(void *)&double result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_10014240C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8);
  *uint64_t v4 = a2;
  v4[1] = a3;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRelease(v6);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_10014246C()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8D0);
  v5[0] = v0;
  uint64_t v2 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v5, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles);
  swift_beginAccess(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles, v5, 0LL, 0LL);
  return swift_bridgeObjectRetain(*v3);
}

uint64_t sub_100142514@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8D0);
  v9[0] = v3;
  uint64_t v5 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles);
  swift_beginAccess(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles, v9, 0LL, 0LL);
  uint64_t v7 = *v6;
  *a2 = *v6;
  return swift_bridgeObjectRetain(v7);
}

double sub_1001425C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8D0);
  uint64_t v6 = v3;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_100148EF0);
  swift_release(KeyPath);
  *(void *)&double result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_10014267C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles);
  swift_beginAccess(a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles, v6, 1LL, 0LL);
  uint64_t v4 = *v3;
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1001426E8()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8A8);
  uint64_t v4 = v0;
  uint64_t v2 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_retain(*(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask));
}

uint64_t sub_100142778@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8A8);
  uint64_t v8 = v3;
  uint64_t v5 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask);
  *a2 = v6;
  return swift_retain(v6);
}

double sub_100142810(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8A8);
  uint64_t v6 = v3;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  swift_retain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_10014866C);
  swift_release(KeyPath);
  *(void *)&double result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_1001428C8()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC858);
  uint64_t v4 = v0;
  uint64_t v2 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__isConnected);
}

void sub_100142954(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC858);
  uint64_t v6 = v3;
  uint64_t v5 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__isConnected);
}

double sub_1001429E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC858);
  uint64_t v5 = v2;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v5, KeyPath, sub_100148F04);
  *(void *)&double result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100142A90()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  uint64_t v4 = v0;
  uint64_t v2 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_unknownObjectRetain(*(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession));
}

uint64_t sub_100142B20@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  uint64_t v8 = v3;
  uint64_t v5 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  *a2 = v6;
  return swift_unknownObjectRetain(v6);
}

uint64_t sub_100142BB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  uint64_t v6 = v3;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  swift_unknownObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_100148B18);
  swift_release(KeyPath);
  return swift_unknownObjectRelease(v2);
}

uint64_t sub_100142C70()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC9C0);
  uint64_t v5 = v0;
  uint64_t v2 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v5, KeyPath, v2);
  swift_release(KeyPath);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__host);
  sub_100148C84( v3,  *(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__host + 8),  *(void *)(v0 + OBJC_IVAR____TtC7TVMusic12GroupSession__host + 16));
  return v3;
}

uint64_t sub_100142D20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC9C0);
  uint64_t v10 = v3;
  uint64_t v5 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__host);
  uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__host + 8);
  uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic12GroupSession__host + 16);
  *a2 = v6;
  a2[1] = v7;
  a2[2] = v8;
  return sub_100148C84(v6, v7, v8);
}

double sub_100142DC4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC9C0);
  uint64_t v8 = v5;
  sub_100148C84(v2, v3, v4);
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_100148B34);
  sub_100148B48(v2, v3, v4);
  *(void *)&double result = swift_release(KeyPath).n128_u64[0];
  return result;
}

char *sub_100142E98(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType(v1);
  uint64_t v4 = &v1[OBJC_IVAR____TtC7TVMusic12GroupSession__participants];
  *(void *)uint64_t v4 = &_swiftEmptyArrayStorage;
  *((void *)v4 + 1) = &_swiftEmptyArrayStorage;
  uint64_t v5 = v1;
  unint64_t v6 = sub_10018737C((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles] = v6;
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask] = 0LL;
  v5[OBJC_IVAR____TtC7TVMusic12GroupSession__isConnected] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession] = 0LL;
  uint64_t v7 = &v5[OBJC_IVAR____TtC7TVMusic12GroupSession__host];
  *((void *)v7 + 1) = 0LL;
  *((void *)v7 + sub_1000E053C(v0 + 2) = 0LL;
  *(void *)uint64_t v7 = 0LL;
  ObservationRegistrar.init()(v6);

  v28.receiver = v5;
  v28.super_class = ObjectType;
  uint64_t v8 = (char *)objc_msgSendSuper2(&v28, "init");
  NSString v9 = [a1 identifier];
  if (!v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0LL);
    uint64_t v11 = v10;
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v11);
  }

  id v12 =  [(id)objc_opt_self(MRGroupSessionProvider) remoteControlGroupSessionWithIdentifier:v9 delegate:v8];

  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  __chkstk_darwin(KeyPath, v14);
  uint64_t v27 = v8;
  uint64_t v15 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v27, KeyPath, sub_100148B18);
  swift_release(KeyPath);
  swift_unknownObjectRelease(v12);
  uint64_t v16 = swift_getKeyPath(&unk_1001EC998);
  uint64_t v27 = v8;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, v16, v15);
  *(void *)&double v17 = swift_release(v16).n128_u64[0];
  double result = *(char **)&v8[OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession];
  if (result)
  {
    id v19 = objc_msgSend(result, "host", v17);
    if (v19)
    {
      id v20 = sub_100148B78(v19);
      uint64_t v22 = v21;
      uint64_t v24 = v23;
    }

    else
    {
      id v20 = 0LL;
      uint64_t v22 = 0LL;
      uint64_t v24 = 0LL;
    }

    uint64_t v25 = swift_getKeyPath(&unk_1001EC9C0);
    __chkstk_darwin(v25, v26);
    uint64_t v27 = v8;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v27, v25, sub_100148B34);
    sub_100148B48((uint64_t)v20, v22, v24);

    swift_release(v25);
    return v8;
  }

  else
  {
    __break(1u);
  }

  return result;
}

void *sub_10014317C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType(v1);
  sub_1000F370C(a1, (uint64_t)v22);
  if (!v22[3])
  {
    sub_1000E03B4((uint64_t)v22, &qword_1002B7850);
    goto LABEL_9;
  }

  if ((swift_dynamicCast(&v21, v22, (char *)&type metadata for Any + 8, ObjectType, 6LL) & 1) == 0)
  {
LABEL_9:
    char v20 = 0;
    return (void *)(v20 & 1);
  }

  uint64_t v5 = v21;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  v22[0] = v2;
  uint64_t v7 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v22, KeyPath, v7);
  *(void *)&double v8 = swift_release(KeyPath).n128_u64[0];
  double result = *(void **)(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  if (result)
  {
    id v10 = objc_msgSend(result, "identifier", v8);
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    uint64_t v13 = v12;

    uint64_t v14 = swift_getKeyPath(&unk_1001EC998);
    v22[0] = v5;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v22, v14, v7);
    *(void *)&double v15 = swift_release(v14).n128_u64[0];
    double result = *(void **)&v5[OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession];
    if (result)
    {
      id v16 = objc_msgSend(result, "identifier", v15);
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
      uint64_t v19 = v18;

      if (v11 == v17 && v13 == v19)
      {
        char v20 = 1;
        uint64_t v19 = v13;
      }

      else
      {
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v17, v19, 0LL);
      }

      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v19);

      return (void *)(v20 & 1);
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

uint64_t sub_1001433EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[17] = a4;
  v7[18] = a7;
  v7[16] = a1;
  return swift_task_switch(sub_100143408, 0LL, 0LL);
}

uint64_t sub_100143408()
{
  uint64_t v1 = v0[17];
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  v0[10] = v1;
  uint64_t v3 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 10, KeyPath, v3);
  uint64_t result = swift_release(KeyPath);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  v0[19] = v5;
  if (v5)
  {
    uint64_t v6 = v0[18];
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_100143520;
    v0[14] = swift_continuation_init(v0 + 2, 0LL);
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000LL;
    v0[12] = sub_100113944;
    v0[13] = &unk_100274510;
    [(id)swift_unknownObjectRetain(v5) approvePendingParticipant:v6 completion:v0 + 10];
    return swift_continuation_await(v0 + 2);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100143520()
{
  return swift_task_switch(sub_100148EEC, 0LL, 0LL);
}

uint64_t sub_10014356C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[17] = a4;
  v7[18] = a7;
  v7[16] = a1;
  return swift_task_switch(sub_100143588, 0LL, 0LL);
}

uint64_t sub_100143588()
{
  uint64_t v1 = v0[17];
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  v0[10] = v1;
  uint64_t v3 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 10, KeyPath, v3);
  uint64_t result = swift_release(KeyPath);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  v0[19] = v5;
  if (v5)
  {
    uint64_t v6 = v0[18];
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_1001436A0;
    v0[14] = swift_continuation_init(v0 + 2, 0LL);
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000LL;
    v0[12] = sub_100113944;
    v0[13] = &unk_100274528;
    [(id)swift_unknownObjectRetain(v5) denyPendingParticipant:v6 completion:v0 + 10];
    return swift_continuation_await(v0 + 2);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_1001436A0()
{
  return swift_task_switch(sub_1001436EC, 0LL, 0LL);
}

uint64_t sub_1001436EC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100143724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[17] = a4;
  v7[18] = a7;
  v7[16] = a1;
  return swift_task_switch(sub_100143740, 0LL, 0LL);
}

uint64_t sub_100143740()
{
  uint64_t v1 = v0[17];
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  v0[10] = v1;
  uint64_t v3 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 10, KeyPath, v3);
  uint64_t result = swift_release(KeyPath);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  v0[19] = v5;
  if (v5)
  {
    uint64_t v6 = v0[18];
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_100143520;
    v0[14] = swift_continuation_init(v0 + 2, 0LL);
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000LL;
    v0[12] = sub_100113944;
    v0[13] = &unk_100274540;
    [(id)swift_unknownObjectRetain(v5) removeParticipant:v6 completion:v0 + 10];
    return swift_continuation_await(v0 + 2);
  }

  else
  {
    __break(1u);
  }

  return result;
}

double sub_100143858()
{
  uint64_t v1 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for TaskPriority(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1LL, 1LL, v5);
  uint64_t v7 = (void *)swift_allocObject(&unk_1002744B8, 40LL, 7LL);
  v7[2] = 0LL;
  double v8 = v7 + 2;
  v7[3] = 0LL;
  v7[4] = v0;
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5);
  id v10 = v0;
  if (v9 == 1)
  {
    sub_1000E03B4((uint64_t)v4, &qword_1002BB500);
    uint64_t v11 = 0LL;
    uint64_t v12 = 0LL;
    uint64_t v13 = 7168LL;
  }

  else
  {
    unsigned __int8 v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v13 = v14 | 0x1C00LL;
    uint64_t v15 = *v8;
    if (*v8)
    {
      uint64_t v16 = v7[3];
      uint64_t ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      uint64_t v12 = v18;
      swift_unknownObjectRelease(v15);
    }

    else
    {
      uint64_t v11 = 0LL;
      uint64_t v12 = 0LL;
    }
  }

  uint64_t v19 = swift_allocObject(&unk_1002744E0, 32LL, 7LL);
  *(void *)(v19 + swift_unknownObjectWeakDestroy(v0 + 16) = &unk_1002BB638;
  *(void *)(v19 + 24) = v7;
  uint64_t v20 = sub_1000DFE10((uint64_t *)&unk_1002B7EE0);
  if (v12 | v11)
  {
    v24[0] = 0LL;
    v24[1] = 0LL;
    uint64_t v21 = v24;
    v24[2] = v11;
    v24[3] = v12;
  }

  else
  {
    uint64_t v21 = 0LL;
  }

  uint64_t v22 = swift_task_create(v13, v21, v20, &unk_1002BA9F8, v19);
  *(void *)&double result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_100143A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 128) = a1;
  *(void *)(v4 + 136) = a4;
  return swift_task_switch(sub_100143A48, 0LL, 0LL);
}

void sub_100143A48()
{
  uint64_t v1 = v0[17];
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC998);
  v0[10] = v1;
  uint64_t v3 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 10, KeyPath, v3);
  swift_release(KeyPath);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  v0[18] = v4;
  if (v4)
  {
    v0[7] = v0 + 15;
    v0[2] = v0;
    v0[3] = sub_100143B58;
    v0[14] = swift_continuation_init(v0 + 2, 0LL);
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000LL;
    v0[12] = sub_100113944;
    v0[13] = &unk_1002744F8;
    [(id)swift_unknownObjectRetain(v4) removeAllParticipantsWithCompletion:v0 + 10];
    swift_continuation_await(v0 + 2);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_100143B58()
{
  return swift_task_switch(sub_100143BA4, 0LL, 0LL);
}

uint64_t sub_100143BA4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  **(void **)(v0 + 128) = *(void *)(v0 + 120);
  swift_unknownObjectRelease(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100143CAC()
{
  return type metadata accessor for GroupSession(0LL);
}

uint64_t type metadata accessor for GroupSession(uint64_t a1)
{
  return sub_1000EE114(a1, (uint64_t *)&unk_1002BB370, (uint64_t)&nominal type descriptor for GroupSession);
}

uint64_t sub_100143CC8(uint64_t a1)
{
  v4[0] = &unk_1001EC6F8;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_1001EC710;
  v4[3] = &unk_1001EC728;
  v4[4] = &unk_1001EC710;
  v4[5] = &unk_1001EC740;
  uint64_t result = type metadata accessor for ObservationRegistrar(319LL);
  if (v3 <= 0x3F)
  {
    v4[6] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 7LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

id sub_100143D6C()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for GroupSessionManager(0)) init];
  qword_1002C5E58 = (uint64_t)result;
  return result;
}

void *sub_100143DDC()
{
  return sub_1001440AC((uint64_t)&unk_1001EC970, &OBJC_IVAR___TVMGroupSessionManager__currentSession);
}

id sub_100143DF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10014414C(a1, (uint64_t)&unk_1001EC970, &OBJC_IVAR___TVMGroupSessionManager__currentSession, a2);
}

double sub_100143E04(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC970);
  uint64_t v7 = v3;
  sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  id v5 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_100148A40);

  *(void *)&double result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_100143EB8()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC948);
  uint64_t v4 = v0;
  uint64_t v2 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_retain(*(void *)(v0 + OBJC_IVAR___TVMGroupSessionManager__groupSessionInfoObserver));
}

uint64_t sub_100143F48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC948);
  uint64_t v8 = v3;
  uint64_t v5 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = *(void *)(v3 + OBJC_IVAR___TVMGroupSessionManager__groupSessionInfoObserver);
  *a2 = v6;
  return swift_retain(v6);
}

double sub_100143FE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC948);
  uint64_t v6 = v3;
  sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  swift_retain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_100148A04);
  swift_release(v2);
  *(void *)&double result = swift_release(KeyPath).n128_u64[0];
  return result;
}

void *sub_100144098()
{
  return sub_1001440AC((uint64_t)&unk_1001EC920, &OBJC_IVAR___TVMGroupSessionManager__eligibilityStatus);
}

void *sub_1001440AC(uint64_t a1, void *a2)
{
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v9 = v2;
  uint64_t v5 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t v6 = *(void **)(v2 + *a2);
  id v7 = v6;
  return v6;
}

id sub_100144138@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10014414C(a1, (uint64_t)&unk_1001EC920, &OBJC_IVAR___TVMGroupSessionManager__eligibilityStatus, a2);
}

id sub_10014414C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, void *a3@<X4>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v11 = v6;
  uint64_t v8 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v8);
  swift_release(KeyPath);
  uint64_t v9 = *(void **)(v6 + *a3);
  *a4 = v9;
  return v9;
}

double sub_1001441E4(void **a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC920);
  uint64_t v7 = v3;
  sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  id v5 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_1001489E0);

  *(void *)&double result = swift_release(KeyPath).n128_u64[0];
  return result;
}

char *sub_100144298()
{
  uint64_t v1 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  id v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  *(void *)&v0[OBJC_IVAR___TVMGroupSessionManager__currentSession] = 0LL;
  *(void *)&v0[OBJC_IVAR___TVMGroupSessionManager__groupSessionInfoObserver] = 0LL;
  uint64_t v6 = OBJC_IVAR___TVMGroupSessionManager__eligibilityStatus;
  *(void *)&v0[OBJC_IVAR___TVMGroupSessionManager__eligibilityStatus] = 0LL;
  uint64_t v7 = OBJC_IVAR___TVMGroupSessionManager_eligiblityMonitor;
  id v8 = objc_allocWithZone(&OBJC_CLASS___MRGroupSessionEligibilityMonitor);
  uint64_t v9 = v0;
  id v10 = [v8 init];
  *(void *)&v0[v7] = v10;
  ObservationRegistrar.init()(v10);
  id v11 = [v10 status];

  *(void *)&v0[v6] = v11;
  uint64_t v12 = (objc_class *)type metadata accessor for GroupSessionManager(0LL);
  v29.receiver = v9;
  v29.super_class = v12;
  id v13 = objc_msgSendSuper2(&v29, "init");
  unsigned __int8 v14 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v15 = v13;
  id v16 = [v14 defaultCenter];
  NSNotificationCenter.publisher(for:object:)(MRActiveGroupSessionInfoDidChangeNotification, 0LL);

  uint64_t v17 = swift_allocObject(&unk_100274440, 24LL, 7LL);
  *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = v15;
  uint64_t v18 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v19 = (char *)v15;
  uint64_t v20 = Publisher<>.sink(receiveValue:)(sub_100148D78, v17, v1, v18);
  __n128 v21 = swift_release(v17);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v2 + 8))(v5, v1, v21);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC948);
  uint64_t v26 = v19;
  uint64_t v27 = v20;
  objc_super v28 = v19;
  sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v28, KeyPath, sub_100148A04);
  swift_release(v20);
  swift_release(KeyPath);
  id v23 = *(id *)&v19[OBJC_IVAR___TVMGroupSessionManager_eligiblityMonitor];
  [v23 addObserver:v19];

  return v19;
}

double sub_100144538(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))(v6, 1LL, 1LL, v7);
  type metadata accessor for MainActor(0LL);
  id v8 = a2;
  uint64_t v9 = static MainActor.shared.getter(v8);
  id v10 = (void *)swift_allocObject(&unk_100274468, 40LL, 7LL);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  uint64_t v11 = sub_100125950((uint64_t)v6, (uint64_t)&unk_1002BB608, (uint64_t)v10);
  *(void *)&double result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_100144634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  void v5[5] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001446A0, v7, v8);
}

uint64_t sub_1001446A0()
{
  id v1 = objc_msgSend(*(id *)(v0 + 24), "route", swift_release(*(void *)(v0 + 40)).n128_f64[0]);
  if (!v1) {
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  uint64_t v3 = objc_opt_self(&OBJC_CLASS___MPAVEndpointRoute);
  uint64_t v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
  if (!v4
    || (id v5 = [v4 endpointObject]) == 0
    || (uint64_t v6 = v5, v7 = [v5 groupSessionInfo], v6, !v7))
  {

LABEL_7:
    uint64_t v13 = *(void *)(v0 + 32);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EC970);
    uint64_t v12 = swift_task_alloc(32LL);
    *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
    *(void *)(v12 + 24) = 0LL;
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
    sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100148A40);
    swift_release(KeyPath);
    goto LABEL_8;
  }

  uint64_t v8 = *(void *)(v0 + 32);
  objc_allocWithZone((Class)type metadata accessor for GroupSession(0LL));
  id v9 = v7;
  id v10 = sub_100142E98(v9);
  uint64_t v11 = swift_getKeyPath(&unk_1001EC970);
  uint64_t v12 = swift_task_alloc(32LL);
  *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *(void *)(v12 + 24) = v10;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, v11, sub_100148A40);

  swift_release(v11);
LABEL_8:
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001449C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_1000DFE10(&qword_1002BB500);
  v4[3] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  v4[4] = v6;
  v4[5] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100144A58, v7, v8);
}

void sub_100144A58()
{
  id v1 = [(id)objc_opt_self(TVMusicPlayerManager) sharedInstance];
  id v2 = [v1 player];

  id v3 = [v2 playQueue];
  if (v3)
  {
    id v4 = [v3 lastPlayerResponse];

    if (v4)
    {
      id v5 = [v4 playerPath];

      if (v5)
      {
        uint64_t v6 = *(void *)(v0 + 24);
        uint64_t v7 = *(void **)(v0 + 16);
        uint64_t v8 = type metadata accessor for TaskPriority(0LL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v6, 1LL, 1LL, v8);
        id v9 = v5;
        id v10 = v7;
        uint64_t v11 = static MainActor.shared.getter(v10);
        uint64_t v12 = (void *)swift_allocObject(&unk_100274490, 48LL, 7LL);
        v12[2] = v11;
        void v12[3] = &protocol witness table for MainActor;
        v12[4] = v9;
        v12[5] = v10;
        uint64_t v13 = sub_100125950(v6, (uint64_t)&unk_1002BB610, (uint64_t)v12);

        swift_release(v13);
      }
    }

    swift_task_dealloc(*(void *)(v0 + 24));
    (*(void (**)(void))(v0 + 8))();
  }

  else
  {
    __break(1u);
  }

id sub_100144BD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GroupSessionManager(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100144C88()
{
  return type metadata accessor for GroupSessionManager(0LL);
}

uint64_t type metadata accessor for GroupSessionManager(uint64_t a1)
{
  return sub_1000EE114(a1, (uint64_t *)&unk_1002BB3D0, (uint64_t)&nominal type descriptor for GroupSessionManager);
}

uint64_t sub_100144CA4(uint64_t a1)
{
  v4[0] = &unk_1001EC710;
  v4[1] = &unk_1001EC710;
  v4[2] = &unk_1001EC710;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  uint64_t result = type metadata accessor for ObservationRegistrar(319LL);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100144D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  void v5[5] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100144D98, v7, v8);
}

uint64_t sub_100144D98()
{
  id v1 = *(void **)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release(*(void *)(v0 + 40));
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC920);
  uint64_t v4 = swift_task_alloc(32LL);
  *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  id v5 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_1001489E0);

  swift_release(KeyPath);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100144FA0(void *a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v2, v3);
  uint64_t v79 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v91 = &_swiftEmptySetSingleton;
  id v80 = a1;
  id v5 = [a1 pendingParticipants];
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)( v5,  &type metadata for AnyHashable,  &protocol witness table for AnyHashable);

  int64_t v7 = 0LL;
  uint64_t v8 = v6 + 56;
  uint64_t v9 = 1LL << *(_BYTE *)(v6 + 32);
  uint64_t v10 = -1LL;
  if (v9 < 64) {
    uint64_t v10 = ~(-1LL << v9);
  }
  unint64_t v11 = v10 & *(void *)(v6 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v83 = (char *)&_swiftEmptyArrayStorage;
  while (v11)
  {
    unint64_t v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_5:
    sub_1001390A0(*(void *)(v6 + 48) + 40 * v14, (uint64_t)&v88);
    __int128 v85 = v88;
    __int128 v86 = v89;
    uint64_t v87 = v90;
    uint64_t v15 = sub_1000DFE10(&qword_1002BB530);
    if ((swift_dynamicCast(&v84, &v85, &type metadata for AnyHashable, v15, 6LL) & 1) != 0)
    {
      uint64_t v19 = v84;
      id v20 = [(id)swift_unknownObjectRetain(v84) identity];
      if (v20
        && (__n128 v21 = v20, v22 = [v20 type], v21, v22 == (id)1)
        && (id v23 = [v19 identity]) != 0)
      {
        uint64_t v24 = v23;
        id v25 = [v23 identifier];

        id v81 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        uint64_t v27 = v26;

        swift_bridgeObjectRetain(v27);
        id v81 = (id)MusicItemID.init(rawValue:)(v81, v27);
        uint64_t v29 = v28;
        swift_bridgeObjectRelease(v27);
        swift_unknownObjectRelease(v19);
      }

      else
      {
        swift_unknownObjectRelease(v19);
        id v81 = 0LL;
        uint64_t v29 = 0LL;
      }

      swift_bridgeObjectRetain(v29);
      swift_unknownObjectRetain(v19);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v83);
      uint64_t v82 = (char *)v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v83 = sub_10015AC5C(0LL, *((void *)v83 + 2) + 1LL, 1, v83);
      }
      unint64_t v32 = *((void *)v83 + 2);
      unint64_t v31 = *((void *)v83 + 3);
      if (v32 >= v31 >> 1) {
        uint64_t v83 = sub_10015AC5C((char *)(v31 > 1), v32 + 1, 1, v83);
      }
      uint64_t v33 = v83;
      *((void *)v83 + sub_1000E053C(v0 + 2) = v32 + 1;
      int64_t v34 = &v33[24 * v32];
      uint64_t v35 = (uint64_t)v81;
      uint64_t v36 = v82;
      *((void *)v34 + 4) = v81;
      *((void *)v34 + 5) = v29;
      *((void *)v34 + 6) = v36;
      if (v29)
      {
        sub_10014BEC8((uint64_t *)&v85, v35, v29);
        swift_unknownObjectRelease(v36);
        swift_bridgeObjectRelease(*((void *)&v85 + 1));
      }

      else
      {
        swift_unknownObjectRelease(v36);
      }
    }
  }

  int64_t v16 = v7 + 1;
  if (__OFADD__(v7, 1LL))
  {
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }

  if (v16 >= v12) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  ++v7;
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 1;
  if (v16 + 1 >= v12) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v7);
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 2;
  if (v16 + 2 >= v12) {
    goto LABEL_33;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v7);
  if (v17)
  {
LABEL_20:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_5;
  }

  int64_t v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_33:
    *(void *)&double v37 = swift_release(v6).n128_u64[0];
    id v38 = objc_msgSend(v80, "participants", v37);
    uint64_t v39 = static Set._unconditionallyBridgeFromObjectiveC(_:)( v38,  &type metadata for AnyHashable,  &protocol witness table for AnyHashable);

    int64_t v40 = 0LL;
    uint64_t v41 = v39 + 56;
    uint64_t v42 = 1LL << *(_BYTE *)(v39 + 32);
    uint64_t v43 = -1LL;
    if (v42 < 64) {
      uint64_t v43 = ~(-1LL << v42);
    }
    unint64_t v44 = v43 & *(void *)(v39 + 56);
    int64_t v45 = (unint64_t)(v42 + 63) >> 6;
    uint64_t v82 = (char *)&_swiftEmptyArrayStorage;
    while (1)
    {
      do
      {
        if (v44)
        {
          unint64_t v46 = __clz(__rbit64(v44));
          v44 &= v44 - 1;
          unint64_t v47 = v46 | (v40 << 6);
        }

        else
        {
          int64_t v49 = v40 + 1;
          if (__OFADD__(v40, 1LL)) {
            goto LABEL_68;
          }
          if (v49 >= v45)
          {
LABEL_66:
            swift_release(v39);
            uint64_t v70 = type metadata accessor for TaskPriority(0LL);
            uint64_t v71 = (uint64_t)v79;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56LL))( v79,  1LL,  1LL,  v70);
            double v72 = v91;
            type metadata accessor for MainActor(0LL);
            id v73 = v78[1];
            uint64_t v74 = static MainActor.shared.getter(v73);
            uint64_t v75 = (void *)swift_allocObject(&unk_100274328, 64LL, 7LL);
            v75[2] = v74;
            v75[3] = &protocol witness table for MainActor;
            unint64_t v76 = v83;
            v75[4] = v73;
            v75[5] = v76;
            v75[6] = v82;
            v75[7] = v72;
            uint64_t v77 = sub_100125950(v71, (uint64_t)&unk_1002BB540, (uint64_t)v75);
            swift_release(v77);
            return;
          }

          unint64_t v50 = *(void *)(v41 + 8 * v49);
          ++v40;
          if (!v50)
          {
            int64_t v40 = v49 + 1;
            if (v49 + 1 >= v45) {
              goto LABEL_66;
            }
            unint64_t v50 = *(void *)(v41 + 8 * v40);
            if (!v50)
            {
              int64_t v40 = v49 + 2;
              if (v49 + 2 >= v45) {
                goto LABEL_66;
              }
              unint64_t v50 = *(void *)(v41 + 8 * v40);
              if (!v50)
              {
                int64_t v51 = v49 + 3;
                if (v51 >= v45) {
                  goto LABEL_66;
                }
                unint64_t v50 = *(void *)(v41 + 8 * v51);
                if (!v50)
                {
                  while (1)
                  {
                    int64_t v40 = v51 + 1;
                    if (__OFADD__(v51, 1LL)) {
                      goto LABEL_70;
                    }
                    if (v40 >= v45) {
                      goto LABEL_66;
                    }
                    unint64_t v50 = *(void *)(v41 + 8 * v40);
                    ++v51;
                    if (v50) {
                      goto LABEL_52;
                    }
                  }
                }

                int64_t v40 = v51;
              }
            }
          }

LABEL_52:
          unint64_t v44 = (v50 - 1) & v50;
          unint64_t v47 = __clz(__rbit64(v50)) + (v40 << 6);
        }

        sub_1001390A0(*(void *)(v39 + 48) + 40 * v47, (uint64_t)&v88);
        __int128 v85 = v88;
        __int128 v86 = v89;
        uint64_t v87 = v90;
        uint64_t v48 = sub_1000DFE10(&qword_1002BB530);
      }

      while ((swift_dynamicCast(&v84, &v85, &type metadata for AnyHashable, v48, 6LL) & 1) == 0);
      id v52 = v84;
      id v53 = [(id)swift_unknownObjectRetain(v84) identity];
      id v81 = v52;
      if (v53)
      {
        uint64_t v54 = v53;
        id v55 = [v53 type];

        if (v55 == (id)1)
        {
          id v52 = v81;
          id v56 = [v81 identity];
          if (v56)
          {
            id v57 = v56;
            id v58 = [v56 identifier];

            uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
            uint64_t v61 = v60;

            id v52 = v81;
            swift_bridgeObjectRetain(v61);
            id v80 = (id)MusicItemID.init(rawValue:)(v59, v61);
            uint64_t v63 = v62;
            swift_bridgeObjectRelease(v61);
            swift_unknownObjectRelease(v52);
            goto LABEL_59;
          }
        }

        else
        {
          id v52 = v81;
        }
      }

      swift_unknownObjectRelease(v52);
      id v80 = 0LL;
      uint64_t v63 = 0LL;
LABEL_59:
      swift_bridgeObjectRetain(v63);
      swift_unknownObjectRetain(v52);
      if ((swift_isUniquelyReferenced_nonNull_native(v82) & 1) == 0) {
        uint64_t v82 = sub_10015AC5C(0LL, *((void *)v82 + 2) + 1LL, 1, v82);
      }
      unint64_t v65 = *((void *)v82 + 2);
      unint64_t v64 = *((void *)v82 + 3);
      if (v65 >= v64 >> 1) {
        uint64_t v82 = sub_10015AC5C((char *)(v64 > 1), v65 + 1, 1, v82);
      }
      Swift::String v66 = v82;
      *((void *)v82 + sub_1000E053C(v0 + 2) = v65 + 1;
      uint64_t v67 = &v66[24 * v65];
      uint64_t v68 = (uint64_t)v80;
      id v69 = v81;
      *((void *)v67 + 4) = v80;
      *((void *)v67 + 5) = v63;
      *((void *)v67 + 6) = v69;
      if (v63)
      {
        sub_10014BEC8((uint64_t *)&v85, v68, v63);
        swift_unknownObjectRelease(v69);
        swift_bridgeObjectRelease(*((void *)&v85 + 1));
      }

      else
      {
        swift_unknownObjectRelease(v69);
      }
    }
  }

  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_20;
  }

  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1LL)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }

LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

uint64_t sub_100145744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  uint64_t v8 = sub_1000DFE10(&qword_1002BB500);
  v7[20] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for SocialProfile(0LL);
  v7[21] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[22] = v10;
  v7[23] = swift_task_alloc((*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v11 = (*(void *)(*(void *)(sub_1000DFE10(&qword_1002B9658) - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  _BYTE v7[24] = swift_task_alloc(v11);
  v7[25] = swift_task_alloc(v11);
  v7[26] = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for MainActor(0LL);
  v7[27] = v12;
  v7[28] = static MainActor.shared.getter(v12);
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_100145844, v13, v14);
}

void sub_100145844()
{
  uint64_t v1 = v0[16];
  swift_release(v0[28]);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8A8);
  v0[12] = v1;
  uint64_t v128 = v0 + 2;
  int v120 = v0 + 11;
  uint64_t v121 = v0 + 10;
  v119 = v0 + 13;
  uint64_t v122 = v0 + 14;
  uint64_t v116 = v0 + 15;
  uint64_t v136 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 12, KeyPath, v136);
  swift_release(KeyPath);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask);
  if (v3)
  {
    swift_retain(*(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask));
    Task.cancel()();
    swift_release(v3);
  }

  uint64_t v4 = v0[22];
  uint64_t v5 = v0[18];
  uint64_t v131 = v0[19];
  uint64_t v6 = v0[16];
  uint64_t v7 = v0[17];
  uint64_t v8 = swift_getKeyPath(&unk_1001EC880);
  uint64_t v9 = (void *)swift_task_alloc(48LL);
  v9[2] = v6;
  void v9[3] = v7;
  v9[4] = v5;
  v0[9] = v6;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v5);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 9, v8, sub_100148F18);
  uint64_t v10 = v7;
  uint64_t v11 = v4;
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v5);
  uint64_t v12 = v8;
  uint64_t v13 = v131;
  swift_release(v12);
  swift_task_dealloc(v9);
  uint64_t v14 = swift_getKeyPath(&unk_1001EC8D0);
  v0[8] = v6;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 8, v14, v136);
  swift_release(v14);
  uint64_t v15 = (uint64_t *)(v6 + OBJC_IVAR____TtC7TVMusic12GroupSession__participantSocialProfiles);
  swift_beginAccess(v15, v0 + 5, 0LL, 0LL);
  uint64_t v117 = *v15 + 64;
  uint64_t v16 = -1LL << *(_BYTE *)(*v15 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1LL << -(char)v16);
  }
  else {
    uint64_t v17 = -1LL;
  }
  unint64_t v18 = v17 & *(void *)(*v15 + 64);
  int64_t v118 = (unint64_t)(63 - v16) >> 6;
  uint64_t v130 = v131 + 56;
  uint64_t v125 = *v15;
  swift_bridgeObjectRetain_n(*v15, 2LL);
  int64_t v19 = 0LL;
  uint64_t v124 = v4;
  v134 = v0;
  if (v18) {
    goto LABEL_27;
  }
LABEL_9:
  int64_t v20 = v19 + 1;
  if (__OFADD__(v19, 1LL))
  {
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }

  if (v20 < v118)
  {
    unint64_t v21 = *(void *)(v117 + 8 * v20);
    ++v19;
    if (v21) {
      goto LABEL_26;
    }
    int64_t v19 = v20 + 1;
    if (v20 + 1 >= v118) {
      goto LABEL_64;
    }
    unint64_t v21 = *(void *)(v117 + 8 * v19);
    if (v21) {
      goto LABEL_26;
    }
    int64_t v19 = v20 + 2;
    if (v20 + 2 >= v118) {
      goto LABEL_64;
    }
    unint64_t v21 = *(void *)(v117 + 8 * v19);
    if (v21) {
      goto LABEL_26;
    }
    int64_t v19 = v20 + 3;
    if (v20 + 3 >= v118) {
      goto LABEL_64;
    }
    unint64_t v21 = *(void *)(v117 + 8 * v19);
    if (v21) {
      goto LABEL_26;
    }
    int64_t v19 = v20 + 4;
    if (v20 + 4 >= v118) {
      goto LABEL_64;
    }
    unint64_t v21 = *(void *)(v117 + 8 * v19);
    if (v21)
    {
LABEL_26:
      unint64_t v18 = (v21 - 1) & v21;
      for (unint64_t i = __clz(__rbit64(v21)) + (v19 << 6); ; unint64_t i = v24 | (v19 << 6))
      {
        id v25 = (uint64_t *)(*(void *)(v125 + 48) + 16 * i);
        uint64_t v27 = *v25;
        uint64_t v26 = v25[1];
        if (*(void *)(v13 + 16))
        {
          Hasher.init(_seed:)(v137, *(void *)(v13 + 40));
          swift_bridgeObjectRetain(v26);
          String.hash(into:)(v137, v27, v26);
          Swift::Int v28 = Hasher._finalize()();
          uint64_t v29 = -1LL << *(_BYTE *)(v13 + 32);
          unint64_t v30 = v28 & ~v29;
          if (((*(void *)(v130 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v30) & 1) != 0)
          {
            uint64_t v31 = *(void *)(v13 + 48);
            unint64_t v32 = (void *)(v31 + 16 * v30);
            uint64_t v33 = v32[1];
            BOOL v34 = *v32 == v27 && v33 == v26;
            if (v34 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v32, v33, v27, v26, 0LL) & 1) != 0)
            {
LABEL_8:
              swift_bridgeObjectRelease(v26);
              uint64_t v0 = v134;
              if (!v18) {
                goto LABEL_9;
              }
              goto LABEL_27;
            }

            uint64_t v35 = ~v29;
            while (1)
            {
              unint64_t v30 = (v30 + 1) & v35;
              if (((*(void *)(v130 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v30) & 1) == 0) {
                break;
              }
              uint64_t v36 = (void *)(v31 + 16 * v30);
              uint64_t v37 = v36[1];
              BOOL v38 = *v36 == v27 && v37 == v26;
              if (v38 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v36, v37, v27, v26, 0LL) & 1) != 0) {
                goto LABEL_8;
              }
            }
          }
        }

        else
        {
          swift_bridgeObjectRetain(v26);
        }

        unint64_t v127 = v18;
        uint64_t v132 = v26;
        int64_t v126 = v19;
        uint64_t v39 = v134[26];
        uint64_t v40 = v134[21];
        uint64_t v41 = v134[16];
        uint64_t v123 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v123(v39, 1LL, 1LL, v40);
        uint64_t v42 = swift_getKeyPath(&unk_1001EC8D0);
        v134[10] = v41;
        ObservationRegistrar.access<A, B>(_:keyPath:)(v121, v42, v136);
        swift_release(v42);
        v134[11] = v41;
        uint64_t v43 = swift_getKeyPath(&unk_1001EC8D0);
        ObservationRegistrar.willSet<A, B>(_:keyPath:)(v120, v43, v136);
        swift_release(v43);
        swift_beginAccess(v15, v128, 33LL, 0LL);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v39, 1LL, v40) == 1)
        {
          sub_1000E03B4(v134[26], &qword_1002B9658);
          uint64_t v44 = *v15;
          swift_bridgeObjectRetain(*v15);
          unint64_t v45 = sub_10013CE60(v27, v26);
          char v47 = v46;
          __n128 v48 = swift_bridgeObjectRelease(v44);
          if ((v47 & 1) != 0)
          {
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
            uint64_t v50 = *v15;
            v137[0] = *v15;
            *uint64_t v15 = 0x8000000000000000LL;
            uint64_t v13 = v131;
            uint64_t v0 = v134;
            unint64_t v18 = v127;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1001403B8();
              uint64_t v50 = v137[0];
            }

            uint64_t v51 = v134[25];
            uint64_t v52 = v134[21];
            __n128 v53 = swift_bridgeObjectRelease(*(void *)(*(void *)(v50 + 48) + 16 * v45 + 8));
            (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v124 + 32))( v51,  *(void *)(v50 + 56) + *(void *)(v124 + 72) * v45,  v52,  v53);
            sub_10013F620(v45, v50);
            uint64_t v54 = *v15;
            *uint64_t v15 = v50;
            __n128 v48 = swift_bridgeObjectRelease(v54);
            uint64_t v55 = 0LL;
          }

          else
          {
            uint64_t v55 = 1LL;
            uint64_t v13 = v131;
            uint64_t v0 = v134;
            unint64_t v18 = v127;
          }

          uint64_t v67 = v0[25];
          ((void (*)(uint64_t, uint64_t, uint64_t, void, __n128))v123)(v67, v55, 1LL, v0[21], v48);
          swift_bridgeObjectRelease(v132);
          sub_1000E03B4(v67, &qword_1002B9658);
          uint64_t v11 = v124;
        }

        else
        {
          id v56 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32);
          v56(v134[23], v134[26], v134[21]);
          uint64_t v57 = swift_isUniquelyReferenced_nonNull_native(*v15);
          v137[0] = *v15;
          id v58 = (void *)v137[0];
          *uint64_t v15 = 0x8000000000000000LL;
          unint64_t v60 = sub_10013CE60(v27, v26);
          uint64_t v61 = v58[2];
          BOOL v62 = (v59 & 1) == 0;
          uint64_t v63 = v61 + v62;
          if (__OFADD__(v61, v62)) {
            goto LABEL_103;
          }
          char v64 = v59;
          if (v58[3] >= v63)
          {
            unint64_t v18 = v127;
            if ((v57 & 1) == 0)
            {
              sub_1001403B8();
              id v58 = (void *)v137[0];
            }
          }

          else
          {
            sub_10013E484(v63, v57);
            id v58 = (void *)v137[0];
            unint64_t v65 = sub_10013CE60(v27, v26);
            unint64_t v18 = v127;
            if ((v64 & 1) != (v66 & 1))
            {
              KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
              return;
            }

            unint64_t v60 = v65;
          }

          uint64_t v68 = v134[23];
          uint64_t v69 = v134[21];
          uint64_t v13 = v131;
          if ((v64 & 1) != 0)
          {
            uint64_t v11 = v124;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v124 + 40))( v58[7] + *(void *)(v124 + 72) * v60,  v68,  v69);
          }

          else
          {
            v58[(v60 >> 6) + 8] |= 1LL << v60;
            uint64_t v70 = (uint64_t *)(v58[6] + 16 * v60);
            uint64_t *v70 = v27;
            v70[1] = v26;
            v56(v58[7] + *(void *)(v124 + 72) * v60, v68, v69);
            uint64_t v71 = v58[2];
            BOOL v72 = __OFADD__(v71, 1LL);
            uint64_t v73 = v71 + 1;
            if (v72) {
              goto LABEL_104;
            }
            v58[2] = v73;
            swift_bridgeObjectRetain(v26);
            uint64_t v11 = v124;
          }

          uint64_t v74 = *v15;
          *uint64_t v15 = (uint64_t)v58;
          swift_bridgeObjectRelease(v74);
          swift_bridgeObjectRelease(v26);
          uint64_t v0 = v134;
        }

        uint64_t v75 = v0[16];
        swift_endAccess(v128);
        v0[13] = v75;
        uint64_t v76 = swift_getKeyPath(&unk_1001EC8D0);
        ObservationRegistrar.didSet<A, B>(_:keyPath:)(v119, v76, v136);
        swift_release(v76);
        int64_t v19 = v126;
        if (!v18) {
          goto LABEL_9;
        }
LABEL_27:
        unint64_t v24 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
      }
    }

    int64_t v22 = v20 + 5;
    if (v22 < v118)
    {
      unint64_t v21 = *(void *)(v117 + 8 * v22);
      if (v21)
      {
        int64_t v19 = v22;
        goto LABEL_26;
      }

      while (1)
      {
        int64_t v19 = v22 + 1;
        if (__OFADD__(v22, 1LL)) {
          goto LABEL_106;
        }
        if (v19 >= v118) {
          break;
        }
        unint64_t v21 = *(void *)(v117 + 8 * v19);
        ++v22;
        if (v21) {
          goto LABEL_26;
        }
      }
    }
  }

LABEL_64:
  uint64_t v77 = v15;
  swift_release(v125);
  uint64_t v133 = v0[22];
  uint64_t v78 = -1LL;
  uint64_t v79 = -1LL << *(_BYTE *)(v13 + 32);
  if (-v79 < 64) {
    uint64_t v78 = ~(-1LL << -(char)v79);
  }
  unint64_t v80 = v78 & *(void *)(v13 + 56);
  int64_t v135 = (unint64_t)(63 - v79) >> 6;
  swift_bridgeObjectRetain(v0[19]);
  int64_t v81 = 0LL;
  v129 = (char *)&_swiftEmptyArrayStorage;
  if (v80) {
    goto LABEL_71;
  }
LABEL_77:
  int64_t v89 = v81 + 1;
  if (__OFADD__(v81, 1LL)) {
    goto LABEL_102;
  }
  if (v89 < v135)
  {
    unint64_t v90 = *(void *)(v130 + 8 * v89);
    ++v81;
    if (v90) {
      goto LABEL_90;
    }
    int64_t v81 = v89 + 1;
    if (v89 + 1 >= v135) {
      goto LABEL_96;
    }
    unint64_t v90 = *(void *)(v130 + 8 * v81);
    if (v90) {
      goto LABEL_90;
    }
    int64_t v81 = v89 + 2;
    if (v89 + 2 >= v135) {
      goto LABEL_96;
    }
    unint64_t v90 = *(void *)(v130 + 8 * v81);
    if (v90)
    {
LABEL_90:
      unint64_t v80 = (v90 - 1) & v90;
      for (unint64_t j = __clz(__rbit64(v90)) + (v81 << 6); ; unint64_t j = v84 | (v81 << 6))
      {
        uint64_t v92 = v0[16];
        uint64_t v93 = (uint64_t *)(*(void *)(v13 + 48) + 16 * j);
        uint64_t v94 = *v93;
        uint64_t v95 = v93[1];
        uint64_t v96 = swift_getKeyPath(&unk_1001EC8D0);
        v0[14] = v92;
        swift_bridgeObjectRetain_n(v95, 2LL);
        ObservationRegistrar.access<A, B>(_:keyPath:)(v122, v96, v136);
        swift_release(v96);
        uint64_t v97 = *v77;
        if (*(void *)(*v77 + 16))
        {
          swift_bridgeObjectRetain(*v77);
          unint64_t v98 = sub_10013CE60(v94, v95);
          uint64_t v99 = v0[24];
          uint64_t v100 = v0[21];
          if ((v101 & 1) != 0)
          {
            (*(void (**)(void, unint64_t, void))(v133 + 16))( v0[24],  *(void *)(v97 + 56) + *(void *)(v11 + 72) * v98,  v0[21]);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v99, 0LL, 1LL, v100);
          }

          else
          {
            (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v11 + 56))(v0[24], 1LL, 1LL, v100);
          }

          swift_bridgeObjectRelease(v97);
        }

        else
        {
          (*(void (**)(void, uint64_t, uint64_t, void))(v11 + 56))(v0[24], 1LL, 1LL, v0[21]);
        }

        __n128 v82 = swift_bridgeObjectRelease(v95);
        uint64_t v83 = v0[24];
        if ((*(unsigned int (**)(uint64_t, uint64_t, void, __n128))(v11 + 48))(v83, 1LL, v0[21], v82) == 1)
        {
          sub_1000E03B4(v83, &qword_1002B9658);
          if ((swift_isUniquelyReferenced_nonNull_native(v129) & 1) == 0) {
            v129 = sub_10015AD80(0LL, *((void *)v129 + 2) + 1LL, 1, v129);
          }
          unint64_t v87 = *((void *)v129 + 2);
          unint64_t v86 = *((void *)v129 + 3);
          if (v87 >= v86 >> 1) {
            v129 = sub_10015AD80((char *)(v86 > 1), v87 + 1, 1, v129);
          }
          *((void *)v129 + sub_1000E053C(v0 + 2) = v87 + 1;
          __int128 v88 = &v129[16 * v87];
          *((void *)v88 + 4) = v94;
          *((void *)v88 + 5) = v95;
          uint64_t v13 = v131;
          if (!v80) {
            goto LABEL_77;
          }
        }

        else
        {
          swift_bridgeObjectRelease(v95);
          sub_1000E03B4(v83, &qword_1002B9658);
          uint64_t v13 = v131;
          if (!v80) {
            goto LABEL_77;
          }
        }

LABEL_71:
        unint64_t v84 = __clz(__rbit64(v80));
        v80 &= v80 - 1;
      }
    }

    int64_t v91 = v89 + 3;
    if (v91 < v135)
    {
      unint64_t v90 = *(void *)(v130 + 8 * v91);
      if (v90)
      {
        int64_t v81 = v91;
        goto LABEL_90;
      }

      while (1)
      {
        int64_t v81 = v91 + 1;
        if (__OFADD__(v91, 1LL)) {
          break;
        }
        if (v81 >= v135) {
          goto LABEL_96;
        }
        unint64_t v90 = *(void *)(v130 + 8 * v81);
        ++v91;
        if (v90) {
          goto LABEL_90;
        }
      }

    swift_release(inited);
    int64_t v135 = *((void *)v128 + 2);
    if (!v135)
    {
LABEL_90:
      swift_bridgeObjectRelease(v128);
      uint64_t v155 = v24;
      sub_10015B754((void *)v13);
      if (v156)
      {
        *(void *)&__int128 v222 = v156;
        uint64_t v157 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
        *(void *)&v220[0] = static OS_dispatch_queue.main.getter();
        uint64_t v158 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
        v159 = (uint64_t)v211;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56LL))(v211, 1LL, 1LL, v158);
        uint64_t v13 = sub_10015C724();
        uint64_t v160 = sub_10015C768();
        uint64_t v218 = v155;
        v161 = v212;
        Publisher.receive<A>(on:options:)(v220, v159, &_s9PublisherVN, v157, v13, v160);
        sub_1000E03B4(v159, &qword_1002BBD68);

        uint64_t inited = swift_allocObject(&unk_100274AC8, 24LL, 7LL);
        unint64_t v24 = (char *)v216;
        swift_unknownObjectWeakInit(inited + 16, v216);
        v162 = sub_1000E0374( &qword_1002BBD98,  &qword_1002BBD70,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
        __n128 v163 = v214;
        char v59 = Publisher<>.sink(receiveValue:)(sub_10015C7E4, inited, v214, v162);
        uint64_t v164 = swift_release(inited);
        uint64_t v165 = v161;
        uint64_t v155 = v218;
        (*(void (**)(char *, uint64_t, __n128))(v213 + 8))(v165, v163, v164);
      }

      else
      {
        char v59 = 0LL;
        unint64_t v24 = (char *)v216;
      }

      uint64_t v166 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imagePublisher;
      uint64_t v167 = *(void *)&v24[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imagePublisher];
      *(void *)&v24[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imagePublisher] = v59;
      swift_release(v167);
      if (!*(void *)&v24[v166])
      {
        char v59 = (unint64_t)*(id *)&object[(void)v24];
        sub_1001588D8();
        uint64_t inited = v168;
        [(id)v59 setStackImage:v168];
      }

      goto LABEL_96;
    }

    swift_bridgeObjectRetain(v128);
    uint64_t v206 = v128;
    uint64_t v13 = (unint64_t)(v128 + 40);
    while (1)
    {
      uint64_t inited = *(void *)(v13 - 8);
      uint64_t v136 = *(void *)v13;
      v137 = inited == 2573 && v136 == 0xE200000000000000LL;
      if (!v137
        && (_stringCompareWithSmolCheck(_:_:expecting:)( *(void *)(v13 - 8),  *(void *)v13,  2573LL,  0xE200000000000000LL,  0LL) & 1) == 0)
      {
        swift_bridgeObjectRetain(v136);
        if ((Character._isSingleScalar.getter(inited, v136) & 1) == 0) {
          goto LABEL_89;
        }
        uint64_t result = sub_10015B370(inited, v136);
        if ((result & 0x100000000LL) != 0)
        {
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }

        if ((result & 0xFFFFFF80) != 0)
        {
LABEL_89:
          uint64_t v128 = v206;
          swift_bridgeObjectRelease(v206);
          swift_bridgeObjectRelease(v136);
          uint64_t v13 = (unint64_t)v208;
          goto LABEL_90;
        }

        uint64_t result = sub_10015B370(inited, v136);
        if ((result & 0x100000000LL) != 0) {
          goto LABEL_142;
        }
        uint64_t v138 = result;
        swift_bridgeObjectRelease(v136);
        if ((v138 & 0xFFFFFF00) != 0) {
          break;
        }
      }

      v13 += 16LL;
      if (!--v135) {
        goto LABEL_85;
      }
    }

    __break(1u);
LABEL_85:
    v139 = v206;
    *(void *)&v140 = swift_bridgeObjectRelease(v206).n128_u64[0];
    objc_msgSend(*(id *)&v218[v216], "bounds", v140);
    uint64_t inited = (unint64_t)objc_msgSend( objc_allocWithZone(UILabel),  "initWithFrame:",  v141,  v142,  v143,  v144);
    [(id)inited setAutoresizingMask:18];
    uint64_t result = (unint64_t)[(id)inited setTextAlignment:1];
    if (!kCTFontUIFontDesignRounded) {
      goto LABEL_144;
    }
    uint64_t v145 =  [(id)objc_opt_self(UIFont) systemFontOfSize:kCTFontUIFontDesignRounded weight:41.0 design:UIFontWeightSemibold];
    [(id)inited setFont:v145];

    *(void *)&__int128 v222 = v139;
    v146 = sub_1000DFE10(&qword_1002BBDA0);
    uint64_t v147 = sub_1000E0374(&qword_1002BBDA8, &qword_1002BBDA0, (uint64_t)&protocol conformance descriptor for [A]);
    String.init<A>(_:)(&v222, v146, v147);
    uint64_t v149 = v148;
    object = (char *)String.uppercased()()._object;
    swift_bridgeObjectRelease(v149);
    v150 = String._bridgeToObjectiveC()();
    objc_msgSend((id)inited, "setText:", v150, swift_bridgeObjectRelease(object).n128_f64[0]);

    v151 = [v208 style];
    uint64_t v152 = [v151 color];

    uint64_t v153 = [v152 color];
    uint64_t v77 = v219;
    if (!v153) {
      uint64_t v153 = [(id)objc_opt_self(UIColor) whiteColor];
    }
    [(id)inited setTextColor:v153];

    char v59 = v216;
    uint64_t v154 = *(id *)&v218[v216];
    [v154 addSubview:inited];

    unint64_t v24 = (char *)v59;
  }

  uint64_t v179 = (void *)v178;
  uint64_t v180 = 0LL;
  uint64_t v181 = v219 & 0xC000000000000001LL;
  v182 = &selRef_setMonogramBottomFocusGuide_;
  int v183 = &selRef_startPoint;
  v184 = 0.0;
  do
  {
    if (v181) {
      uint64_t v185 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v180, v219);
    }
    else {
      uint64_t v185 = *(id *)(v219 + 8 * v180 + 32);
    }
    uint64_t v186 = v185;
    uint64_t v187 = [v179 v182[404]];
    v188 = objc_msgSend(v187, v183[309], v186, 0);

    if (v188)
    {
      v189 = objc_opt_self(&OBJC_CLASS___UILabel);
      uint64_t v190 = swift_dynamicCastObjCClass(v188, v189);
      if (v190)
      {
        uint64_t v191 = (void *)v190;
        v192 = v183;
        v193 = v64;
        v194 = v182;
        v195 = v188;
        objc_msgSend(v191, "setEnablesMarqueeWhenAncestorFocused:", objc_msgSend(v195, "tv_marqueeOnHighlight"));

        v182 = v194;
        char v64 = v193;
        int v183 = v192;
      }

      objc_msgSend(v188, "sizeThatFits:", 0.0, 0.0);
      v197 = v196;
      [v188 frame];
      objc_msgSend(v188, "setFrame:");
      [v188 frame];
      objc_msgSend(v188, "setFrame:");
      [v218 addSubview:v188];
      [v188 frame];
      Width = CGRectGetWidth(v225);

      if (v184 <= Width) {
        v184 = Width;
      }
      uint64_t v177 = v177 + v197;
    }

    else
    {
    }

    ++v180;
  }

  while (v64 != v180);
  *(void *)&v199 = swift_release(v219).n128_u64[0];
  v200 = v218;
  objc_msgSend(v218, "frame", v199);
  objc_msgSend(v200, "setFrame:");

  uint64_t v13 = v210;
  unint64_t v24 = (char *)v216;
LABEL_130:
  unint64_t v65 = v217;
LABEL_131:

  return (unint64_t)v24;
}

LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
      return;
    }
  }

LABEL_96:
  swift_release(v0[19]);
  if (*((void *)v129 + 2))
  {
    uint64_t v102 = v0[20];
    uint64_t v103 = v0[16];
    uint64_t v104 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56LL))(v102, 1LL, 1LL, v104);
    uint64_t v105 = swift_allocObject(&unk_100274350, 24LL, 7LL);
    swift_unknownObjectWeakInit(v105 + 16, v103);
    uint64_t v106 = swift_retain(v105);
    uint64_t v107 = static MainActor.shared.getter(v106);
    uint64_t v108 = (void *)swift_allocObject(&unk_100274378, 48LL, 7LL);
    v108[2] = v107;
    v108[3] = &protocol witness table for MainActor;
    v108[4] = v129;
    v108[5] = v105;
    swift_release(v105);
    uint64_t v109 = sub_100125950(v102, (uint64_t)&unk_1002BB558, (uint64_t)v108);
    uint64_t v110 = swift_getKeyPath(&unk_1001EC8A8);
    uint64_t v111 = swift_task_alloc(32LL);
    *(void *)(v111 + swift_unknownObjectWeakDestroy(v0 + 16) = v103;
    *(void *)(v111 + 24) = v109;
    v0[15] = v103;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v116, v110, sub_10014866C);
    swift_release(v109);
    swift_release(v110);
    swift_bridgeObjectRelease(v125);
    swift_task_dealloc(v111);
  }

  else
  {
    swift_bridgeObjectRelease(v129);
    swift_bridgeObjectRelease(v125);
  }

  uint64_t v112 = v0[25];
  uint64_t v114 = v0[23];
  uint64_t v113 = v0[24];
  uint64_t v115 = v0[20];
  swift_task_dealloc(v0[26]);
  swift_task_dealloc(v112);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v115);
  ((void (*)(void))v0[1])();
}

uint64_t sub_1001464E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = sub_1000DFE10(&qword_1002BB500);
  v5[14] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SocialProfile(0LL);
  v5[15] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[16] = v8;
  unint64_t v9 = (*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[17] = swift_task_alloc(v9);
  v5[18] = swift_task_alloc(v9);
  v5[19] = swift_task_alloc(v9);
  uint64_t v10 = sub_1000DFE10(&qword_1002BB560);
  v5[20] = v10;
  unint64_t v11 = (*(void *)(*(void *)(v10 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[21] = swift_task_alloc(v11);
  v5[22] = swift_task_alloc(v11);
  uint64_t v12 = sub_1000DFE10(&qword_1002BB568);
  v5[23] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  _BYTE v5[24] = v13;
  v5[25] = swift_task_alloc((*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(&qword_1002BB570);
  v5[26] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v5[27] = v15;
  unint64_t v16 = (*(void *)(v15 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v5[28] = swift_task_alloc(v16);
  v5[29] = swift_task_alloc(v16);
  uint64_t v17 = sub_1000DFE10(&qword_1002BB578);
  v5[30] = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  v5[31] = v18;
  v5[32] = swift_task_alloc((*(void *)(v18 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = type metadata accessor for MainActor(0LL);
  v5[33] = v19;
  v5[34] = static MainActor.shared.getter(v19);
  uint64_t v20 = dispatch thunk of Actor.unownedExecutor.getter(v19, &protocol witness table for MainActor);
  v5[35] = v20;
  v5[36] = v21;
  return swift_task_switch(sub_100146684, v20, v21);
}

uint64_t sub_100146684(uint64_t a1)
{
  if ((static Task<>.isCancelled.getter(a1) & 1) != 0)
  {
    swift_release(*(void *)(v1 + 272));
    uint64_t v2 = *(void *)(v1 + 224);
    uint64_t v3 = *(void *)(v1 + 232);
    uint64_t v4 = *(void *)(v1 + 200);
    uint64_t v6 = *(void *)(v1 + 168);
    uint64_t v5 = *(void *)(v1 + 176);
    uint64_t v8 = *(void *)(v1 + 144);
    uint64_t v7 = *(void *)(v1 + 152);
    uint64_t v9 = *(void *)(v1 + 136);
    uint64_t v10 = *(void *)(v1 + 112);
    swift_task_dealloc(*(void *)(v1 + 256));
    swift_task_dealloc(v3);
    swift_task_dealloc(v2);
    swift_task_dealloc(v4);
    swift_task_dealloc(v5);
    swift_task_dealloc(v6);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  else
  {
    uint64_t v12 = *(void *)(v1 + 120);
    uint64_t v13 = *(void *)(v1 + 96);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8F8);
    uint64_t v15 = sub_1000DF308( &qword_1002BB580,  (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile,  (uint64_t)&protocol conformance descriptor for SocialProfile);
    uint64_t v16 = sub_1000DF308( &qword_1002BB588,  (uint64_t (*)(uint64_t))&type metadata accessor for SocialProfile,  (uint64_t)&protocol conformance descriptor for SocialProfile);
    swift_bridgeObjectRetain(v13);
    MusicCatalogResourceRequest.init<A>(matching:memberOf:)(KeyPath, v13, v12, v15, v16);
    uint64_t v17 = (void *)swift_task_alloc(async function pointer to MusicCatalogResourceRequest.response()[1]);
    *(void *)(v1 + 296) = v17;
    *uint64_t v17 = v1;
    v17[1] = sub_100146818;
    return MusicCatalogResourceRequest.response()(*(void *)(v1 + 200), *(void *)(v1 + 240));
  }

uint64_t sub_100146818()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 296);
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc(v3);
  if (v0) {
    uint64_t v4 = sub_100146E14;
  }
  else {
    uint64_t v4 = sub_100146878;
  }
  return swift_task_switch(v4, *(void *)(v2 + 280), *(void *)(v2 + 288));
}

uint64_t sub_100146878()
{
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 184);
  swift_release(*(void *)(v0 + 272));
  MusicCatalogResourceResponse.items.getter(v3);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if ((static Task<>.isCancelled.getter(v4) & 1) != 0)
  {
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 240);
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8LL))(*(void *)(v0 + 232), *(void *)(v0 + 208));
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
LABEL_19:
    uint64_t v77 = *(void *)(v0 + 224);
    uint64_t v78 = *(void *)(v0 + 232);
    uint64_t v79 = *(void *)(v0 + 200);
    uint64_t v81 = *(void *)(v0 + 168);
    uint64_t v80 = *(void *)(v0 + 176);
    uint64_t v83 = *(void *)(v0 + 144);
    uint64_t v82 = *(void *)(v0 + 152);
    uint64_t v84 = *(void *)(v0 + 136);
    uint64_t v85 = *(void *)(v0 + 112);
    swift_task_dealloc(*(void *)(v0 + 256));
    swift_task_dealloc(v78);
    swift_task_dealloc(v77);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v81);
    swift_task_dealloc(v82);
    swift_task_dealloc(v83);
    swift_task_dealloc(v84);
    swift_task_dealloc(v85);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v10 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v12 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 176);
  uint64_t v13 = *(void *)(v0 + 160);
  unint64_t v99 = sub_10018737C((uint64_t)&_swiftEmptyArrayStorage);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v14(v12, v8, v10);
  unint64_t v15 = sub_1001486C4();
  dispatch thunk of Collection.startIndex.getter((void *)(v0 + 80), v10, v15);
  *(void *)(v12 + *(int *)(v13 + 36)) = *(void *)(v0 + 80);
  sub_100148710(v12, v11);
  uint64_t v16 = (void *)(v11 + *(int *)(v13 + 36));
  uint64_t v17 = *v16;
  dispatch thunk of Collection.endIndex.getter((void *)(v0 + 88), v10, v15);
  if (v17 == *(void *)(v0 + 88))
  {
LABEL_4:
    uint64_t v18 = sub_1000E03B4(*(void *)(v0 + 176), &qword_1002BB560);
    if ((static Task<>.isCancelled.getter(v18) & 1) != 0)
    {
      uint64_t v20 = *(void *)(v0 + 248);
      uint64_t v19 = *(void *)(v0 + 256);
      uint64_t v22 = *(void *)(v0 + 232);
      uint64_t v21 = *(void *)(v0 + 240);
      uint64_t v23 = *(void *)(v0 + 208);
      uint64_t v24 = *(void *)(v0 + 216);
      __n128 v25 = swift_bridgeObjectRelease(v99);
      (*(void (**)(uint64_t, uint64_t, __n128))(v24 + 8))(v22, v23, v25);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    }

    else
    {
      uint64_t v64 = *(void *)(v0 + 256);
      uint64_t v96 = *(void *)(v0 + 248);
      uint64_t v98 = *(void *)(v0 + 240);
      uint64_t v94 = *(void *)(v0 + 232);
      uint64_t v66 = *(void *)(v0 + 208);
      uint64_t v65 = *(void *)(v0 + 216);
      uint64_t v67 = *(void *)(v0 + 112);
      uint64_t v68 = *(void *)(v0 + 104) + 16LL;
      uint64_t v69 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56LL))(v67, 1LL, 1LL, v69);
      uint64_t v70 = swift_allocObject(&unk_100274350, 24LL, 7LL);
      swift_beginAccess(v68, v0 + 48, 0LL, 0LL);
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v68);
      swift_unknownObjectWeakInit(v70 + 16, Strong);

      uint64_t v72 = swift_retain(v70);
      uint64_t v73 = static MainActor.shared.getter(v72);
      uint64_t v74 = (void *)swift_allocObject(&unk_1002743A0, 48LL, 7LL);
      v74[2] = v73;
      v74[3] = &protocol witness table for MainActor;
      v74[4] = v70;
      v74[5] = v99;
      swift_release(v70);
      uint64_t v75 = sub_100125C70(v67, (uint64_t)&unk_1002BB5A8, (uint64_t)v74);
      __n128 v76 = swift_release(v75);
      (*(void (**)(uint64_t, uint64_t, __n128))(v65 + 8))(v94, v66, v76);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v64, v98);
    }

    goto LABEL_19;
  }

  uint64_t v90 = v0 + 16;
  int64_t v91 = v14;
  uint64_t v88 = v0;
  uint64_t v89 = *(void *)(v0 + 216);
  uint64_t v26 = *(void *)(v0 + 128);
  unint64_t v86 = v15;
  unint64_t v87 = (void *)(v0 + 88);
  while (1)
  {
    uint64_t v32 = v26;
    uint64_t v33 = *(void *)(v0 + 224);
    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 176);
    uint64_t v36 = v16;
    uint64_t v37 = *(void *)(v0 + 152);
    uint64_t v93 = v37;
    unint64_t v95 = *(void *)(v0 + 144);
    uint64_t v97 = *(void *)(v0 + 136);
    uint64_t v38 = *(void *)(v0 + 120);
    uint64_t v92 = (void (*)(uint64_t, void))dispatch thunk of Collection.subscript.read(v90, v36, v34, v15);
    uint64_t v39 = *(void (**)(uint64_t))(v32 + 16);
    uint64_t v40 = v37;
    uint64_t v41 = v38;
    v39(v40);
    v92(v90, 0LL);
    v91(v33, v35, v34);
    uint64_t v16 = v36;
    dispatch thunk of Collection.formIndex(after:)(v36, v34, v15);
    (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v33, v34);
    uint64_t v42 = v32;
    uint64_t v43 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v32 + 32);
    uint64_t v44 = v43(v95, v93, v41);
    uint64_t v45 = SocialProfile.id.getter(v44);
    uint64_t v47 = v46;
    ((void (*)(uint64_t, unint64_t, uint64_t))v39)(v97, v95, v41);
    __n128 v48 = (void *)v99;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v99);
    unint64_t v51 = sub_10013CE60(v45, v47);
    uint64_t v52 = *(void *)(v99 + 16);
    BOOL v53 = (v50 & 1) == 0;
    uint64_t result = v52 + v53;
    if (__OFADD__(v52, v53)) {
      break;
    }
    char v55 = v50;
    if (*(void *)(v99 + 24) >= result)
    {
      uint64_t v0 = v88;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1001403B8();
        __n128 v48 = (void *)v99;
      }
    }

    else
    {
      sub_10013E484(result, isUniquelyReferenced_nonNull_native);
      __n128 v48 = (void *)v99;
      unint64_t v56 = sub_10013CE60(v45, v47);
      uint64_t v0 = v88;
      if ((v55 & 1) != (v57 & 1)) {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      }
      unint64_t v51 = v56;
    }

    uint64_t v26 = v42;
    uint64_t v58 = *(void *)(v0 + 136);
    uint64_t v59 = *(void *)(v0 + 120);
    unint64_t v99 = (unint64_t)v48;
    if ((v55 & 1) != 0)
    {
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 40))( v48[7] + *(void *)(v42 + 72) * v51,  v58,  v59);
    }

    else
    {
      v48[(v51 >> 6) + 8] |= 1LL << v51;
      unint64_t v60 = (uint64_t *)(v48[6] + 16 * v51);
      *unint64_t v60 = v45;
      v60[1] = v47;
      uint64_t result = v43(v48[7] + *(void *)(v42 + 72) * v51, v58, v59);
      uint64_t v61 = v48[2];
      BOOL v62 = __OFADD__(v61, 1LL);
      uint64_t v63 = v61 + 1;
      if (v62) {
        goto LABEL_22;
      }
      v48[2] = v63;
      swift_bridgeObjectRetain(v47);
    }

    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v28 = *(void *)(v0 + 144);
    uint64_t v29 = *(void *)(v0 + 120);
    swift_bridgeObjectRelease(0x8000000000000000LL);
    __n128 v30 = swift_bridgeObjectRelease(v47);
    (*(void (**)(uint64_t, uint64_t, __n128))(v26 + 8))(v28, v29, v30);
    uint64_t v31 = *v16;
    unint64_t v15 = v86;
    dispatch thunk of Collection.endIndex.getter(v87, v27, v86);
    if (v31 == *(void *)(v0 + 88)) {
      goto LABEL_4;
    }
  }

  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_100146E14()
{
  if (qword_1002B7290 != -1) {
    swift_once(&qword_1002B7290, sub_1001B22D8);
  }
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = type metadata accessor for Logger(0LL, v1);
  sub_1000E96CC(v3, (uint64_t)static Logger.sharePlay);
  swift_errorRetain(v2);
  uint64_t v4 = swift_errorRetain(v2);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.error.getter(v5);
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 304);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain(v8);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(void *)(v0 + 7sub_1000E053C(v0 + 2) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80, v9 + 4);
    *uint64_t v10 = v11;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Updating social profile error: %@", v9, 0xCu);
    uint64_t v12 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v10, 1LL, v12);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {

    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }

  swift_errorRelease(v8);
  (*(void (**)(void, void))(*(void *)(v0 + 248) + 8LL))(*(void *)(v0 + 256), *(void *)(v0 + 240));
  uint64_t v13 = *(void *)(v0 + 224);
  uint64_t v14 = *(void *)(v0 + 232);
  uint64_t v15 = *(void *)(v0 + 200);
  uint64_t v17 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v19 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v20 = *(void *)(v0 + 136);
  uint64_t v21 = *(void *)(v0 + 112);
  swift_task_dealloc(*(void *)(v0 + 256));
  swift_task_dealloc(v14);
  swift_task_dealloc(v13);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100147058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  void v5[6] = a1;
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  void v5[9] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1001470C8, v7, v8);
}

uint64_t sub_1001470C8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_release(*(void *)(v0 + 72));
  v1 += 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EC8D0);
    uint64_t v5 = swift_task_alloc(32LL);
    *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = Strong;
    *(void *)(v5 + 24) = v3;
    *(void *)(v0 + 40) = Strong;
    sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
    swift_bridgeObjectRetain(v3);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 40, KeyPath, sub_100148830);
    swift_bridgeObjectRelease(v3);
    swift_release(KeyPath);

    swift_task_dealloc(v5);
  }

  **(_BYTE **)(v0 + 48) = Strong == 0LL;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001471F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  *(void *)(v4 + 3sub_1000E053C(v0 + 2) = static MainActor.shared.getter(v5);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100147264, v6, v7);
}

uint64_t sub_100147264()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release(*(void *)(v0 + 32));
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC858);
  uint64_t v3 = swift_task_alloc(32LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *(_BYTE *)(v3 + 24) = 1;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_100148F04);
  swift_release(KeyPath);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001474A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = type metadata accessor for Locale(0LL);
  void v5[5] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for String.LocalizationValue(0LL);
  void v5[6] = swift_task_alloc((*(void *)(*(void *)(v7 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for MainActor(0LL);
  v5[7] = static MainActor.shared.getter(v8);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_10014754C, v9, v10);
}

uint64_t sub_10014754C()
{
  if ((byte_1002C5E68 & 1) == 0)
  {
    uint64_t v1 = *(void *)(v0 + 24);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EC880);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
    uint64_t v3 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 16, KeyPath, v3);
    swift_release(KeyPath);
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants);
    int64_t v5 = *(void *)(v4 + 16);
    uint64_t v6 = &_swiftEmptyArrayStorage;
    uint64_t v60 = v0;
    if (v5)
    {
      v63[0] = &_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v4);
      sub_1000F3D70(0, v5, 0);
      uint64_t v6 = &_swiftEmptyArrayStorage;
      uint64_t v7 = (uint64_t *)(v4 + 48);
      do
      {
        uint64_t v8 = *(v7 - 1);
        uint64_t v9 = *v7;
        swift_bridgeObjectRetain(v8);
        id v10 = [(id)swift_unknownObjectRetain(v9) identifier];
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
        uint64_t v13 = v12;

        swift_bridgeObjectRelease(v8);
        swift_unknownObjectRelease(v9);
        v63[0] = v6;
        unint64_t v15 = v6[2];
        unint64_t v14 = v6[3];
        if (v15 >= v14 >> 1)
        {
          sub_1000F3D70(v14 > 1, v15 + 1, 1);
          uint64_t v6 = (void *)v63[0];
        }

        v6[2] = v15 + 1;
        uint64_t v16 = (char *)&v6[2 * v15];
        *((void *)v16 + 4) = v11;
        *((void *)v16 + 5) = v13;
        v7 += 3;
        --v5;
      }

      while (v5);
      swift_bridgeObjectRelease(v4);
    }

    uint64_t v17 = *(void *)(v0 + 32);
    uint64_t v18 = sub_10011E3A0((uint64_t)v6);
    swift_bridgeObjectRelease(v6);
    uint64_t v19 = sub_100141EB0(v17);
    uint64_t v20 = v19;
    uint64_t v61 = *(void *)(v19 + 16);
    if (v61)
    {
      uint64_t v62 = v19 + 32;
      uint64_t v21 = v18 + 56;
      uint64_t v59 = v19;
      swift_bridgeObjectRetain(v19);
      for (uint64_t i = 0LL; i != v61; ++i)
      {
        uint64_t v23 = (uint64_t *)(v62 + 32 * i);
        uint64_t v24 = v23[1];
        uint64_t v25 = v23[2];
        uint64_t v26 = v23[3];
        if (!*(void *)(v18 + 16))
        {
          swift_bridgeObjectRetain(v23[1]);
          swift_bridgeObjectRetain(v26);
LABEL_28:
          swift_bridgeObjectRelease(v59);
          uint64_t v0 = v60;
          swift_bridgeObjectRelease(v18);
          uint64_t v40 = *(void *)(v60 + 40);
          uint64_t v39 = *(void *)(v60 + 48);
          swift_bridgeObjectRelease(v59);
          uint64_t v41 = sub_1000DFE10(&qword_1002BB5B0);
          uint64_t v42 = swift_allocObject(v41, 72LL, 7LL);
          *(_OWORD *)(v42 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E84B0;
          swift_bridgeObjectRelease(v24);
          *(void *)(v42 + 56) = &type metadata for String;
          *(void *)(v42 + 64) = sub_100148888();
          *(void *)(v42 + 3sub_1000E053C(v0 + 2) = v25;
          *(void *)(v42 + 40) = v26;
          uint64_t v43 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
          v64._object = (void *)0xE000000000000000LL;
          v44._object = (void *)0x8000000100227650LL;
          v44._countAndFlagsBits = 0xD000000000000028LL;
          v45.value._countAndFlagsBits = 0x616C506572616853LL;
          v45.value._object = (void *)0xE900000000000079LL;
          v46._countAndFlagsBits = 0LL;
          v46._object = (void *)0xE000000000000000LL;
          v64._countAndFlagsBits = 0LL;
          Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v45, v43, v46, v64);

          String.init(format:_:)(v47._countAndFlagsBits, v47._object, v42);
          uint64_t v49 = v48;
          swift_bridgeObjectRelease(v47._object);
          uint64_t v50 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000002ALL, 0x8000000100227680LL);
          static Locale.current.getter(v50);
          String.init(localized:table:bundle:locale:comment:)( v39,  0x616C506572616853LL,  0xE900000000000079LL,  0LL,  v40,  0LL,  0LL,  256LL);
          uint64_t v52 = v51;
          id v53 = [(id)objc_opt_self(TVMusicHUDController) sharedInstance];
          NSString v54 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v49);
          NSString v55 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v52);
          NSString v56 = String._bridgeToObjectiveC()();
          [v53 showWithTitle:v54 message:v55 symbolName:v56];

          goto LABEL_29;
        }

        uint64_t v27 = *v23;
        Hasher.init(_seed:)(v63, *(void *)(v18 + 40));
        swift_bridgeObjectRetain(v24);
        swift_bridgeObjectRetain(v26);
        String.hash(into:)(v63, v27, v24);
        Swift::Int v28 = Hasher._finalize()();
        uint64_t v29 = -1LL << *(_BYTE *)(v18 + 32);
        unint64_t v30 = v28 & ~v29;
        if (((*(void *)(v21 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v30) & 1) == 0) {
          goto LABEL_28;
        }
        uint64_t v31 = *(void *)(v18 + 48);
        uint64_t v32 = (void *)(v31 + 16 * v30);
        uint64_t v33 = v32[1];
        BOOL v34 = *v32 == v27 && v33 == v24;
        if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v32, v33, v27, v24, 0LL) & 1) == 0)
        {
          uint64_t v35 = ~v29;
          do
          {
            unint64_t v30 = (v30 + 1) & v35;
            if (((*(void *)(v21 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v30) & 1) == 0) {
              goto LABEL_28;
            }
            uint64_t v36 = (void *)(v31 + 16 * v30);
            uint64_t v37 = v36[1];
            BOOL v38 = *v36 == v27 && v37 == v24;
          }

          while (!v38 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v36, v37, v27, v24, 0LL) & 1) == 0);
        }

        swift_bridgeObjectRelease(v24);
        swift_bridgeObjectRelease(v26);
      }

      swift_bridgeObjectRelease_n(v59, 2LL);
      swift_bridgeObjectRelease(v18);
      uint64_t v0 = v60;
    }

    else
    {
      swift_bridgeObjectRelease(v18);
      swift_bridgeObjectRelease(v20);
    }
  }

uint64_t sub_100147BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  *(void *)(v4 + 3sub_1000E053C(v0 + 2) = static MainActor.shared.getter(v5);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100147C58, v6, v7);
}

uint64_t sub_100147C58()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release(*(void *)(v0 + 32));
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EC858);
  uint64_t v3 = swift_task_alloc(32LL);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *(_BYTE *)(v3 + 24) = 0;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, KeyPath, sub_1001483F4);
  swift_release(KeyPath);
  swift_task_dealloc(v3);
  uint64_t v4 = swift_getKeyPath(&unk_1001EC880);
  uint64_t v5 = (void *)swift_task_alloc(48LL);
  v5[2] = v1;
  void v5[3] = &_swiftEmptyArrayStorage;
  v5[4] = &_swiftEmptyArrayStorage;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 16, v4, sub_100148414);
  swift_release(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t destroy for GroupSession.Participant(uint64_t a1)
{
  return swift_unknownObjectRelease(*(void *)(a1 + 16));
}

void *_s7TVMusic12GroupSessionC11ParticipantVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  swift_unknownObjectRetain(v4);
  return a1;
}

void *assignWithCopy for GroupSession.Participant(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  return a1;
}

void *assignWithTake for GroupSession.Participant(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease(a1[1]);
  uint64_t v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupSession.Participant(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupSession.Participant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for GroupSession.Participant()
{
  return &type metadata for GroupSession.Participant;
}

uint64_t destroy for GroupSession.Participants(void *a1)
{
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s7TVMusic12GroupSessionC12ParticipantsVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for GroupSession.Participants(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

void *assignWithTake for GroupSession.Participants(void *a1, _OWORD *a2)
{
  uint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for GroupSession.Participants()
{
  return &type metadata for GroupSession.Participants;
}

uint64_t sub_10014816C(void *a1, void *a2)
{
  id v4 = [a1 identifier];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  uint64_t v7 = v6;

  id v8 = [a2 identifier];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v11 = v10;

  if (v5 == v9 && v7 == v11)
  {
    swift_bridgeObjectRelease_n(v7, 2LL);
  }

  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v11, 0LL);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v11);
    char v14 = 0;
    if ((v13 & 1) == 0) {
      return v14 & 1;
    }
  }

  if ([a1 isPending])
  {
    id v15 = [a1 identity];
    uint64_t v16 = v15;
    if (v15)
    {
      id v17 = [v15 identifier];

      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      uint64_t v16 = v19;
    }

    else
    {
      uint64_t v18 = 0LL;
    }

    id v20 = [a2 identity];
    if (v20)
    {
      uint64_t v21 = v20;
      id v22 = [v20 identifier];

      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      uint64_t v25 = v24;

      if (v16)
      {
        if (v25)
        {
          if (v18 == v23 && v16 == v25)
          {
            swift_bridgeObjectRelease(v16);
            char v14 = 1;
          }

          else
          {
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v16, v23, v25, 0LL);
            swift_bridgeObjectRelease(v16);
          }

          goto LABEL_25;
        }

        goto LABEL_20;
      }

      if (v25)
      {
        char v14 = 0;
        goto LABEL_25;
      }
    }

    else if (v16)
    {
LABEL_20:
      char v14 = 0;
      uint64_t v25 = v16;
LABEL_25:
      swift_bridgeObjectRelease(v25);
      return v14 & 1;
    }

    char v14 = 1;
  }

  else
  {
    char v14 = 0;
  }

  return v14 & 1;
}

uint64_t sub_100148380(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1002BB50C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E01FC;
  return sub_100147BEC(a1, v4, v5, v6);
}

void sub_1001483F4()
{
  *(_BYTE *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7TVMusic12GroupSession__isConnected) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_100148414()
{
  return sub_10014240C(v0[2], v0[3], v0[4]);
}

uint64_t sub_100148430()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100148464(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc(dword_1002BB524);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_1001474A0(a1, v4, v5, v7, v6);
}

uint64_t sub_1001484DC()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  swift_bridgeObjectRelease(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100148520(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc(dword_1002BB53C);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000E0B64;
  return sub_100145744(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1001485BC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001485E0()
{
  return sub_10014876C( (void (*)(void))&_swift_bridgeObjectRelease,  (void (*)(void))&_swift_release);
}

uint64_t sub_1001485F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BB554);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_1001464E0(a1, v4, v5, v7, v6);
}

uint64_t sub_10014866C()
{
  return sub_100148848();
}

uint64_t sub_100148680@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_1000E0518(a1, v3);
  uint64_t result = dispatch thunk of SocialProfileFilter.id.getter(v3, v4);
  *a2 = result;
  a2[1] = v6;
  return result;
}

unint64_t sub_1001486C4()
{
  unint64_t result = qword_1002BBE60;
  if (!qword_1002BBE60)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BB570);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for MusicItemCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BBE60);
  }

  return result;
}

uint64_t sub_100148710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BB560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100148758()
{
  return sub_10014876C( (void (*)(void))&_swift_release,  (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10014876C(void (*a1)(void), void (*a2)(void))
{
  return swift_deallocObject(v2, 48LL, 7LL);
}

uint64_t sub_1001487B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BB5A4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_100147058(a1, v4, v5, v7, v6);
}

uint64_t sub_100148830()
{
  return sub_10014267C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100148848()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask);
  *(void *)(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__socialProfileTask) = v1;
  swift_retain(v1);
  return swift_release(v3);
}

unint64_t sub_100148888()
{
  unint64_t result = qword_1002BB5B8;
  if (!qword_1002BB5B8)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, &qword_1002BB5B8);
  }

  return result;
}

uint64_t sub_1001488D0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1002BB5C4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_1001471F8(a1, v4, v5, v6);
}

uint64_t sub_100148940(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BB5D4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_100144D2C(a1, v4, v5, v7, v6);
}

id sub_1001489B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10014414C(a1, (uint64_t)&unk_1001EC920, &OBJC_IVAR___TVMGroupSessionManager__eligibilityStatus, a2);
}

void sub_1001489E0()
{
}

uint64_t sub_100148A04()
{
  return sub_100148D80();
}

id sub_100148A18@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10014414C(a1, (uint64_t)&unk_1001EC970, &OBJC_IVAR___TVMGroupSessionManager__currentSession, a2);
}

void sub_100148A40()
{
}

uint64_t sub_100148A60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BB5EC);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_100144634(a1, v4, v5, v7, v6);
}

void sub_100148AD8(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void **)(v2 + *a1);
  *(void *)(v2 + *a1) = v3;
  id v5 = v3;
}

uint64_t sub_100148B18()
{
  return sub_100148D14();
}

uint64_t sub_100148B34()
{
  return sub_100148CB4();
}

uint64_t sub_100148B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_unknownObjectRelease(a3);
    return swift_bridgeObjectRelease(a2);
  }

  return result;
}

void *sub_100148B78(void *a1)
{
  id v2 = [(id)swift_unknownObjectRetain(a1) identity];
  uint64_t v3 = v2;
  if (!v2) {
    goto LABEL_5;
  }
  id v4 = [v2 type];

  if (v4 != (id)1)
  {
    swift_unknownObjectRelease(a1);
    return 0LL;
  }

  id v5 = [a1 identity];
  uint64_t v3 = v5;
  if (v5)
  {
    id v6 = [v5 identifier];

    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v9 = v8;

    swift_bridgeObjectRetain(v9);
    uint64_t v3 = (void *)MusicItemID.init(rawValue:)(v7, v9);
    swift_bridgeObjectRelease(v9);
    swift_unknownObjectRelease(a1);
  }

  else
  {
LABEL_5:
    swift_unknownObjectRelease(a1);
  }

  return v3;
}

uint64_t sub_100148C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain(a2);
    return swift_unknownObjectRetain(a3);
  }

  return result;
}

uint64_t sub_100148CB4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  id v4 = (uint64_t *)(v0[2] + OBJC_IVAR____TtC7TVMusic12GroupSession__host);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = v4[2];
  *id v4 = v1;
  v4[1] = v2;
  v4[2] = v3;
  sub_100148C84(v1, v2, v3);
  return sub_100148B48(v5, v6, v7);
}

uint64_t sub_100148D14()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession);
  *(void *)(v2 + OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession) = v1;
  swift_unknownObjectRetain(v1);
  return swift_unknownObjectRelease(v3);
}

uint64_t sub_100148D54()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_100148D78(uint64_t a1)
{
  return sub_100144538(a1, *(void **)(v1 + 16));
}

uint64_t sub_100148D80()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___TVMGroupSessionManager__groupSessionInfoObserver);
  *(void *)(v2 + OBJC_IVAR___TVMGroupSessionManager__groupSessionInfoObserver) = v1;
  swift_retain(v1);
  return swift_release(v3);
}

uint64_t sub_100148DC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1002BB604);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_1001449C4(a1, v4, v5, v6);
}

uint64_t sub_100148E38()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100148E64(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc(dword_1002BB634);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000E0B64;
  v5[16] = a1;
  v5[17] = v4;
  return swift_task_switch(sub_100143A48, 0LL, 0LL);
}

uint64_t sub_100148EC8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100148EF0()
{
  return sub_100148830();
}

void sub_100148F04()
{
}

uint64_t sub_100148F18()
{
  return sub_100148414();
}

BOOL sub_100148F2C(uint64_t (*a1)(char *), BOOL a2, uint64_t a3)
{
  uint64_t v4 = v3;
  BOOL v33 = a2;
  BOOL v34 = a1;
  uint64_t v35 = type metadata accessor for IndexPath(0LL);
  uint64_t v6 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10((uint64_t *)&unk_1002BB690);
  __chkstk_darwin(v10, v11);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = *(void *)(a3 + 16);
  if (v14)
  {
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v30 = *(void *)(v6 + 72);
    uint64_t v31 = v9;
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v28 = a3;
    swift_bridgeObjectRetain(a3);
    while (1)
    {
      uint64_t v16 = v35;
      v32(v13, v15, v35);
      id v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v17(v13, 0LL, 1LL, v16);
      int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v13, 1LL, v16);
      BOOL v19 = v18 != 1;
      if (v18 == 1)
      {
        a3 = v28;
        goto LABEL_13;
      }

      int v29 = 1;
      id v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v21 = v6;
      id v22 = v31;
      v20(v31, v13, v16);
      BOOL v19 = v33;
      char v23 = v34(v22);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v16);
        swift_bridgeObjectRelease(v28);
        return v19;
      }

      char v24 = v23;
      uint64_t v25 = v17;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v16);
      if ((v24 & 1) != 0) {
        break;
      }
      v15 += v30;
      --v14;
      uint64_t v4 = 0LL;
      uint64_t v6 = v21;
      if (!v14)
      {
        a3 = v28;
        goto LABEL_9;
      }
    }

    a3 = v28;
    BOOL v19 = v29;
  }

  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain(a3);
LABEL_9:
    v25(v13, 1LL, 1LL, v35);
    BOOL v19 = 0;
  }

void *sub_1001491A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000DFE10((uint64_t *)&unk_1002BB690);
  uint64_t v4 = __chkstk_darwin(v2, v3);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4, v7);
  uint64_t v9 = (char *)v38 - v8;
  uint64_t v10 = type metadata accessor for IndexPath(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ([v1 isUserInteractionEnabled])
  {
    id v15 = [v1 delegate];
    if (v15)
    {
      uint64_t v16 = v15;
      if ([v15 respondsToSelector:"indexPathForPreferredFocusedViewInCollectionView:"])
      {
        id v17 = [v16 indexPathForPreferredFocusedViewInCollectionView:v1];
        if (v17)
        {
          int v18 = v17;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v19 = 0LL;
        }

        else
        {
          uint64_t v19 = 1LL;
        }

        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v6, v19, 1LL, v10);
        sub_100149688((uint64_t)v6, (uint64_t)v9);
        swift_unknownObjectRelease(v16);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10) != 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
          id v25 = [v1 indexPathsForVisibleItems];
          uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v10);

          __chkstk_darwin(v27, v28);
          v38[-2] = v14;
          LOBYTE(v25) = sub_100148F2C((uint64_t (*)(char *))sub_1001496D0, (BOOL)&v38[-4], v26);
          __n128 v29 = swift_bridgeObjectRelease(v26);
          if ((v25 & 1) != 0)
          {
            NSIndexPath v40 = IndexPath._bridgeToObjectiveC()();
            Class isa = v40.super.isa;
            id v31 = objc_msgSend(v1, "cellForItemAtIndexPath:", v40.super.isa, v40._reserved);

            if (v31)
            {
              id v32 = objc_msgSend(v1, "tvm_focusedView");
              if (v32)
              {
                BOOL v33 = v32;
                if ([v32 isDescendantOfView:v31])
                {
                  uint64_t v34 = sub_1000DFE10(&qword_1002B8A00);
                  uint64_t v35 = swift_allocObject(v34, 48LL, 7LL);
                  __n128 v36 = (__n128)xmmword_1001E9160;
                  *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9160;
                  *(void *)(v35 + 3sub_1000E053C(v0 + 2) = v33;
                  *(void *)(v35 + 40) = v31;
LABEL_22:
                  v38[0] = v35;
                  specialized Array._endMutation()(v36);
                  uint64_t v20 = v38[0];
                  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
                  return (void *)v20;
                }
              }

              uint64_t v37 = sub_1000DFE10(&qword_1002B8A00);
              uint64_t v35 = swift_allocObject(v37, 40LL, 7LL);
              __n128 v36 = (__n128)xmmword_1001E9180;
              *(_OWORD *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
              *(void *)(v35 + 3sub_1000E053C(v0 + 2) = v31;
              goto LABEL_22;
            }
          }

          (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v14, v10, v29);
          goto LABEL_10;
        }

id sub_1001495F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMusicNowPlayingCollectionView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TVMusicNowPlayingCollectionView()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic31TVMusicNowPlayingCollectionView);
}

uint64_t sub_100149648(uint64_t a1)
{
  uint64_t v2 = sub_1000DFE10((uint64_t *)&unk_1002BB690);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100149688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10((uint64_t *)&unk_1002BB690);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001496D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = type metadata accessor for IndexPath(0LL);
  unint64_t v5 = sub_10014972C();
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

unint64_t sub_10014972C()
{
  unint64_t result = qword_1002BB6A0;
  if (!qword_1002BB6A0)
  {
    uint64_t v1 = type metadata accessor for IndexPath(255LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for IndexPath, v1);
    atomic_store(result, (unint64_t *)&qword_1002BB6A0);
  }

  return result;
}

uint64_t sub_100149774()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECAE8);
  uint64_t v2 = swift_getKeyPath(&unk_1001ECB10);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_1001497E4()
{
  uint64_t v0 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v47 = *(void *)(v0 - 8);
  uint64_t v48 = v0;
  __chkstk_darwin(v0, v1);
  Swift::String v46 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = sub_1000DFE10(&qword_1002BB7E8);
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v3);
  uint64_t v49 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002BB7F0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002BA158);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(&qword_1002BB7F8);
  uint64_t v45 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  id v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (qword_1002B71C8 != -1) {
    swift_once(&qword_1002B71C8, sub_10014CD44);
  }
  swift_beginAccess( qword_1002C5E60 + OBJC_IVAR____TtC7TVMusic28ManagedConfigurationObserver__isMusicVideoBlocked,  v53,  33LL,  0LL);
  uint64_t v18 = sub_1000DFE10(&qword_1002BA170);
  Published.projectedValue.getter(v18);
  swift_endAccess(v53);
  id v44 = (id)objc_opt_self(&OBJC_CLASS___NSOperationQueue);
  v53[0] = [v44 mainQueue];
  uint64_t v19 = type metadata accessor for NSOperationQueue.SchedulerOptions(0LL);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56LL);
  v43(v8, 1LL, 1LL, v19);
  unint64_t v20 = sub_10014CB98();
  unint64_t v42 = v20;
  uint64_t v21 = sub_1000E0374( &qword_1002BA178,  &qword_1002BA158,  (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  uint64_t v22 = sub_1000DF308( (unint64_t *)&qword_1002BDC00,  (uint64_t (*)(uint64_t))sub_10014CB98,  (uint64_t)&protocol conformance descriptor for NSOperationQueue);
  unint64_t v23 = v20;
  uint64_t v24 = v22;
  Publisher.receive<A>(on:options:)(v53, v8, v9, v23, v21, v22);
  sub_1000E03B4((uint64_t)v8, &qword_1002BB7F0);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = swift_allocObject(&unk_1002745C0, 24LL, 7LL);
  uint64_t v26 = v51;
  swift_weakInit(v25 + 16, v51);
  uint64_t v27 = sub_1000E0374( &qword_1002BB800,  &qword_1002BB7F8,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  uint64_t v28 = Publisher<>.sink(receiveValue:)(sub_10014CBD4, v25, v14, v27);
  __n128 v29 = swift_release(v25);
  (*(void (**)(char *, uint64_t, __n128))(v45 + 8))(v17, v14, v29);
  uint64_t v30 = v26 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_subscriptions;
  swift_beginAccess(v26 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_subscriptions, v53, 33LL, 0LL);
  AnyCancellable.store(in:)(v30);
  swift_endAccess(v53);
  swift_release(v28);
  id v31 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v32 = v46;
  NSNotificationCenter.publisher(for:object:)(TVMusicSubscriptionStatusChangedNotification, 0LL);

  v53[0] = [v44 mainQueue];
  v43(v8, 1LL, 1LL, v19);
  uint64_t v33 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v34 = v48;
  uint64_t v35 = v49;
  Publisher.receive<A>(on:options:)(v53, v8, v48, v42, v33, v24);
  sub_1000E03B4((uint64_t)v8, &qword_1002BB7F0);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v34);
  uint64_t v36 = swift_allocObject(&unk_1002745C0, 24LL, 7LL);
  swift_weakInit(v36 + 16, v26);
  uint64_t v37 = sub_1000E0374( &qword_1002BB808,  &qword_1002BB7E8,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  uint64_t v38 = v52;
  uint64_t v39 = Publisher<>.sink(receiveValue:)(sub_10014CBDC, v36, v52, v37);
  __n128 v40 = swift_release(v36);
  (*(void (**)(char *, uint64_t, __n128))(v50 + 8))(v35, v38, v40);
  swift_beginAccess(v30, v53, 33LL, 0LL);
  AnyCancellable.store(in:)(v30);
  swift_endAccess(v53);
  *(void *)&double result = swift_release(v39).n128_u64[0];
  return result;
}

uint64_t sub_100149D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = sub_1000DFE10(&qword_1002BB500);
  v4[3] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  v4[4] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100149D98, v7, v8);
}

uint64_t sub_100149D98()
{
  uint64_t v1 = *(void *)(v0 + 16);
  __n128 v2 = swift_release(*(void *)(v0 + 32));
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isRunningUpdate) & 1) == 0)
  {
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    *(_BYTE *)(v1 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isRunningUpdate) = 1;
    static TaskPriority.utility.getter(v2);
    uint64_t v5 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v3, 0LL, 1LL, v5);
    uint64_t v6 = swift_allocObject(&unk_1002745C0, 24LL, 7LL);
    swift_weakInit(v6 + 16, v4);
    uint64_t v7 = (void *)swift_allocObject(&unk_1002745E8, 40LL, 7LL);
    v7[2] = 0LL;
    v7[3] = 0LL;
    v7[4] = v6;
    uint64_t v8 = sub_10014A260(v3, (uint64_t)&unk_1002BB7E0, (uint64_t)v7);
    sub_1000E03B4(v3, &qword_1002BB500);
    uint64_t v9 = *(void *)(v4 + 16);
    *(void *)(v4 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    swift_release(v9);
  }

  swift_task_dealloc(*(void *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100149E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  return swift_task_switch(sub_100149EB0, 0LL, 0LL);
}

uint64_t sub_100149EB0()
{
  uint64_t v1 = *(void *)(v0 + 56) + 16LL;
  swift_beginAccess(v1, v0 + 16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v1);
  *(void *)(v0 + 64) = Strong;
  if (!Strong) {
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  uint64_t v3 = OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isCustomerSubscribed;
  *(void *)(v0 + 7sub_1000E053C(v0 + 2) = OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isCustomerSubscribed;
  uint64_t v4 = Strong + v3;
  uint64_t v5 = *(uint64_t (**)(uint64_t))v4;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = swift_retain(v6);
  char v8 = v5(v7);
  uint64_t v9 = v8 & 1;
  *(_BYTE *)(v0 + 11sub_1000E053C(v0 + 2) = v8 & 1;
  swift_release(v6);
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)&dword_1002BA370 + dword_1002BA370);
  uint64_t v10 = (void *)swift_task_alloc(unk_1002BA374);
  *(void *)(v0 + 80) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100149F84;
  return v12(v9);
}

uint64_t sub_100149F84(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80LL);
  *(void *)(*(void *)v1 + 88LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100149FE0, 0LL, 0LL);
}

uint64_t sub_100149FE0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  if (!v1)
  {
LABEL_5:
    if ((*(_BYTE *)(v0 + 112) & 1) != 0) {
      uint64_t v3 = &off_10026F9E0;
    }
    else {
      uint64_t v3 = &off_10026F9B8;
    }
    uint64_t v2 = (uint64_t)sub_1000F8C18((uint64_t)v3);
    goto LABEL_9;
  }

  if (!*(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease(*(void *)(v0 + 88));
    goto LABEL_5;
  }

  uint64_t v2 = sub_10014C8B4(*(void *)(v0 + 88));
  swift_bridgeObjectRelease(v1);
LABEL_9:
  uint64_t v4 = *(void *)(v0 + 64);
  *(void *)(v0 + 40) = v2;
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_musicTabFilters);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = (void *)(v5 + 32);
    swift_bridgeObjectRetain(*(void *)(v4 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_musicTabFilters));
    do
    {
      uint64_t v8 = *(void *)(v0 + 64) + *(void *)(v0 + 72);
      uint64_t v9 = v7[3];
      uint64_t v10 = v7[4];
      sub_1000E0518(v7, v9);
      uint64_t v12 = *(uint64_t (**)(uint64_t))v8;
      uint64_t v11 = *(void *)(v8 + 8);
      uint64_t v13 = swift_retain(v11);
      LOBYTE(v1sub_1000E053C(v0 + 2) = v12(v13);
      __n128 v14 = swift_release(v11);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t, __n128))(v10 + 8))( v0 + 40,  v12 & 1,  v9,  v10,  v14);
      v7 += 5;
      --v6;
    }

    while (v6);
    swift_bridgeObjectRelease(v5);
    uint64_t v2 = *(void *)(v0 + 40);
  }

  swift_bridgeObjectRetain(v2);
  *(void *)(v0 + 96) = sub_10014CA94((uint64_t)&off_10026FA08, v2);
  swift_bridgeObjectRelease_n(v2, 2LL);
  uint64_t v15 = type metadata accessor for MainActor(0LL);
  *(void *)(v0 + 104) = static MainActor.shared.getter(v15);
  uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  return swift_task_switch(sub_10014A180, v16, v17);
}

uint64_t sub_10014A180()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  swift_release(v0[13]);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECAE8);
  uint64_t v4 = swift_getKeyPath(&unk_1001ECB10);
  v0[6] = v1;
  swift_retain(v2);
  swift_bridgeObjectRetain(v1);
  static Published.subscript.setter(v0 + 6, v2, KeyPath, v4);
  *(_BYTE *)(v2 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isRunningUpdate) = 0;
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_10014A230, 0LL, 0LL);
}

uint64_t sub_10014A230()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10014A260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_10014A848(a1, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for TaskPriority(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1LL, v10);
  if ((_DWORD)v12 == 1)
  {
    sub_1000E03B4((uint64_t)v9, &qword_1002BB500);
    uint64_t v13 = 4096LL;
    uint64_t v14 = *(void *)(a3 + 16);
    if (v14)
    {
LABEL_3:
      uint64_t v15 = *(void *)(a3 + 24);
      uint64_t ObjectType = swift_getObjectType(v14);
      swift_unknownObjectRetain(v14);
      uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      uint64_t v19 = v18;
      swift_unknownObjectRelease(v14);
      goto LABEL_6;
    }
  }

  else
  {
    unsigned __int8 v20 = TaskPriority.rawValue.getter(v12);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    uint64_t v13 = v20 | 0x1000LL;
    uint64_t v14 = *(void *)(a3 + 16);
    if (v14) {
      goto LABEL_3;
    }
  }

  uint64_t v17 = 0LL;
  uint64_t v19 = 0LL;
LABEL_6:
  uint64_t v21 = swift_allocObject(&unk_100274610, 32LL, 7LL);
  *(void *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v21 + 24) = a3;
  if (v19 | v17)
  {
    v24[0] = 0LL;
    v24[1] = 0LL;
    uint64_t v22 = v24;
    v24[2] = v17;
    v24[3] = v19;
  }

  else
  {
    uint64_t v22 = 0LL;
  }

  return swift_task_create(v13, v22, (char *)&type metadata for () + 8, &unk_1002BA6E8, v21);
}

double sub_10014A3F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v9 = Strong;
    uint64_t v10 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v6, 1LL, 1LL, v10);
    type metadata accessor for MainActor(0LL);
    uint64_t v11 = swift_retain(v9);
    uint64_t v12 = static MainActor.shared.getter(v11);
    uint64_t v13 = (void *)swift_allocObject(&unk_100274660, 40LL, 7LL);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v9;
    uint64_t v14 = sub_100125950((uint64_t)v6, (uint64_t)&unk_1002BB818, (uint64_t)v13);
    swift_release(v9);
    *(void *)&double result = swift_release(v14).n128_u64[0];
  }

  return result;
}

double sub_10014A508(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  a2 += 16LL;
  swift_beginAccess(a2, v16, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(a2);
  if (Strong)
  {
    uint64_t v9 = Strong;
    uint64_t v10 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v6, 1LL, 1LL, v10);
    type metadata accessor for MainActor(0LL);
    uint64_t v11 = swift_retain(v9);
    uint64_t v12 = static MainActor.shared.getter(v11);
    uint64_t v13 = (void *)swift_allocObject(&unk_100274638, 40LL, 7LL);
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v9;
    uint64_t v14 = sub_100125950((uint64_t)v6, (uint64_t)&unk_1002BB810, (uint64_t)v13);
    swift_release(v9);
    *(void *)&double result = swift_release(v14).n128_u64[0];
  }

  return result;
}

uint64_t sub_10014A620()
{
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider__musicTabs;
  uint64_t v2 = sub_1000DFE10(&qword_1002BAE80);
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  sub_1000E053C((void *)((char *)v0 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_musicTabAccessor));
  swift_bridgeObjectRelease(*(void *)((char *)v0 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_musicTabFilters));
  sub_1000E053C((void *)((char *)v0 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_sortingProvider));
  swift_bridgeObjectRelease(*(void *)((char *)v0 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_subscriptions));
  swift_release(*(void *)((char *)v0 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isCustomerSubscribed + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48LL), *(unsigned __int16 *)(*v0 + 52LL));
}

uint64_t sub_10014A6D0()
{
  return type metadata accessor for MusicTabs.DefaultProvider(0LL);
}

uint64_t type metadata accessor for MusicTabs.DefaultProvider(uint64_t a1)
{
  uint64_t result = qword_1002BB710;
  if (!qword_1002BB710) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MusicTabs.DefaultProvider);
  }
  return result;
}

void sub_10014A714(uint64_t a1)
{
  v4[0] = "\b";
  sub_1001325E8(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    v4[2] = &unk_1001ECA98;
    v4[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[4] = &unk_1001ECA98;
    void v4[5] = &unk_1001ECAB0;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    void v4[7] = (char *)&value witness table for () + 64;
    swift_updateClassMetadata2(a1, 256LL, 8LL, v4, a1 + 80);
  }

uint64_t sub_10014A7C0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_10014A7E8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc(dword_1002BB7DC);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_1000E0B64;
  v3[7] = v2;
  return swift_task_switch(sub_100149EB0, 0LL, 0LL);
}

uint64_t sub_10014A848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BB500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10014A890@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECAE8);
  uint64_t v5 = swift_getKeyPath(&unk_1001ECB10);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10014A90C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECAE8);
  uint64_t v5 = swift_getKeyPath(&unk_1001ECB10);
  uint64_t v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10014A984()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10014A9A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000DFE10(&qword_1002B85F0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  if (!*(void *)(v3 + 16)) {
    goto LABEL_28;
  }
  uint64_t v18 = v2;
  uint64_t v6 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v7 = (void *)(v3 + 56);
  if (v6 < 64) {
    uint64_t v8 = ~(-1LL << v6);
  }
  else {
    uint64_t v8 = -1LL;
  }
  unint64_t v9 = v8 & *(void *)(v3 + 56);
  int64_t v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v9)
  {
    unint64_t v11 = __clz(__rbit64(v9));
    goto LABEL_23;
  }

  if (v10 > 1)
  {
    unint64_t v12 = *(void *)(v3 + 64);
    uint64_t v13 = 1LL;
    if (v12) {
      goto LABEL_22;
    }
    uint64_t v13 = 2LL;
    if (v10 > 2)
    {
      unint64_t v12 = *(void *)(v3 + 72);
      if (v12) {
        goto LABEL_22;
      }
      uint64_t v13 = 3LL;
      if (v10 > 3)
      {
        unint64_t v12 = *(void *)(v3 + 80);
        if (!v12)
        {
          uint64_t v14 = 4LL;
          if (v10 > 4)
          {
            unint64_t v12 = *(void *)(v3 + 88);
            if (v12)
            {
              uint64_t v13 = 4LL;
              goto LABEL_22;
            }

            while (1)
            {
              uint64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1LL))
              {
                __break(1u);
                JUMPOUT(0x10014AD18LL);
              }

              if (v13 >= v10) {
                break;
              }
              unint64_t v12 = v7[v13];
              ++v14;
              if (v12) {
                goto LABEL_22;
              }
            }
          }

          goto LABEL_24;
        }

void sub_10014AD34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000DFE10(&qword_1002B8610);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    id v32 = v2;
    uint64_t v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    swift_retain(v3);
    int64_t v12 = 0LL;
    while (1)
    {
      if (v9)
      {
        unint64_t v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }

      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }

        if (v17 >= v10) {
          goto LABEL_36;
        }
        unint64_t v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v10) {
            goto LABEL_36;
          }
          unint64_t v18 = v33[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v10) {
              goto LABEL_36;
            }
            unint64_t v18 = v33[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                uint64_t v2 = v32;
                uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v33 = -1LL << v31;
                }
                *(void *)(v3 + swift_weakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v12 >= v10) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = v33[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v12 = v19;
            }
          }
        }

void sub_10014B020(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000DFE10(&qword_1002B8618);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1LL);
  uint64_t v6 = v5;
  if (*(void *)(v3 + 16))
  {
    uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
    id v32 = v2;
    uint64_t v33 = (void *)(v3 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1LL << v7);
    }
    else {
      uint64_t v8 = -1LL;
    }
    unint64_t v9 = v8 & *(void *)(v3 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    swift_retain(v3);
    int64_t v12 = 0LL;
    while (1)
    {
      if (v9)
      {
        unint64_t v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v16 = v15 | (v12 << 6);
      }

      else
      {
        int64_t v17 = v12 + 1;
        if (__OFADD__(v12, 1LL))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }

        if (v17 >= v10) {
          goto LABEL_36;
        }
        unint64_t v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          int64_t v12 = v17 + 1;
          if (v17 + 1 >= v10) {
            goto LABEL_36;
          }
          unint64_t v18 = v33[v12];
          if (!v18)
          {
            int64_t v12 = v17 + 2;
            if (v17 + 2 >= v10) {
              goto LABEL_36;
            }
            unint64_t v18 = v33[v12];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                uint64_t v2 = v32;
                uint64_t v31 = 1LL << *(_BYTE *)(v3 + 32);
                if (v31 > 63) {
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8LL);
                }
                else {
                  *uint64_t v33 = -1LL << v31;
                }
                *(void *)(v3 + swift_weakDestroy(v0 + 16) = 0LL;
                break;
              }

              unint64_t v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v12 = v19 + 1;
                  if (__OFADD__(v19, 1LL)) {
                    goto LABEL_42;
                  }
                  if (v12 >= v10) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = v33[v12];
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v12 = v19;
            }
          }
        }

uint64_t sub_10014B2FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000DFE10(&qword_1002B85F0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  if (!*(void *)(v3 + 16))
  {
    uint64_t result = swift_release(v3);
    goto LABEL_26;
  }

  unint64_t v16 = v2;
  uint64_t v6 = 1LL << *(_BYTE *)(v3 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1LL << v6);
  }
  else {
    uint64_t v7 = -1LL;
  }
  unint64_t v8 = v7 & *(void *)(v3 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  if (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    goto LABEL_23;
  }

  if (v9 > 1)
  {
    unint64_t v11 = *(void *)(v3 + 64);
    uint64_t v12 = 1LL;
    if (v11) {
      goto LABEL_22;
    }
    uint64_t v12 = 2LL;
    if (v9 > 2)
    {
      unint64_t v11 = *(void *)(v3 + 72);
      if (v11) {
        goto LABEL_22;
      }
      uint64_t v12 = 3LL;
      if (v9 > 3)
      {
        unint64_t v11 = *(void *)(v3 + 80);
        if (!v11)
        {
          uint64_t v13 = 4LL;
          if (v9 > 4)
          {
            unint64_t v11 = *(void *)(v3 + 88);
            if (v11)
            {
              uint64_t v12 = 4LL;
              goto LABEL_22;
            }

            while (1)
            {
              uint64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1LL))
              {
                __break(1u);
                JUMPOUT(0x10014B638LL);
              }

              if (v12 >= v9) {
                break;
              }
              unint64_t v11 = *(void *)(v3 + 56 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_22;
              }
            }
          }

          goto LABEL_24;
        }

void sub_10014B654(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000DFE10(&qword_1002B8610);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    uint64_t *v2 = v6;
    return;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  swift_retain(v3);
  int64_t v12 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }

    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v32) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v12);
      if (!v18)
      {
        int64_t v12 = v17 + 2;
        if (v17 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v12);
        if (!v18) {
          break;
        }
      }
    }

void sub_10014B90C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *v1;
  if (*(void *)(*v1 + 24) <= a1) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = *(void *)(*v1 + 24);
  }
  sub_1000DFE10(&qword_1002B8618);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0LL);
  uint64_t v6 = v5;
  if (!*(void *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    uint64_t *v2 = v6;
    return;
  }

  uint64_t v7 = 1LL << *(_BYTE *)(v3 + 32);
  uint64_t v8 = v3 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1LL << v7);
  }
  else {
    uint64_t v9 = -1LL;
  }
  unint64_t v10 = v9 & *(void *)(v3 + 56);
  uint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  swift_retain(v3);
  int64_t v12 = 0LL;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }

    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1LL))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }

    if (v17 >= v32) {
      goto LABEL_36;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v17 + 1;
      if (v17 + 1 >= v32) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v12);
      if (!v18)
      {
        int64_t v12 = v17 + 2;
        if (v17 + 2 >= v32) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v12);
        if (!v18) {
          break;
        }
      }
    }

uint64_t sub_10014BBB8(char *a1, char a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain(v4);
  sub_1000F6E74(v5, a2);
  unint64_t v7 = v6 & ~(-1LL << *(_BYTE *)(v4 + 32));
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v7) & 1) != 0) {
    __asm { BR              X9 }
  }

  swift_bridgeObjectRelease(v4);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  uint64_t v13 = *v11;
  *uint64_t v11 = 0x8000000000000000LL;
  sub_10014C230(a2, v7, isUniquelyReferenced_nonNull_native);
  uint64_t v9 = *v11;
  *uint64_t v11 = v13;
  swift_bridgeObjectRelease(v9);
  uint64_t result = 1LL;
  *a1 = a2;
  return result;
}

uint64_t sub_10014BEC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v24, *(void *)(*v3 + 40LL));
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(a3);
  String.hash(into:)(v24, a2, a3);
  swift_bridgeObjectRelease(a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v7 + 48);
    int64_t v12 = (void *)(v11 + 16 * v10);
    uint64_t v13 = v12[1];
    BOOL v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0LL) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      unint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48LL) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0LL;
    }

    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        break;
      }
      int64_t v19 = (void *)(v11 + 16 * v10);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0LL) & 1) != 0) {
        goto LABEL_7;
      }
    }
  }

  swift_bridgeObjectRelease(v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  swift_bridgeObjectRetain(a3);
  sub_10014C574(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = *v3;
  *uint64_t v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1LL;
}

uint64_t sub_10014C084(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)(v24, *(void *)(*v3 + 40LL));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1LL << *(_BYTE *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) != 0)
  {
    uint64_t v11 = *(void *)(v7 + 48);
    int64_t v12 = (void *)(v11 + 16 * v10);
    uint64_t v13 = v12[1];
    BOOL v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0LL) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      unint64_t v15 = (uint64_t *)(*(void *)(*v3 + 48LL) + 16 * v10);
      uint64_t v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0LL;
    }

    uint64_t v18 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v18;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v10) & 1) == 0) {
        break;
      }
      int64_t v19 = (void *)(v11 + 16 * v10);
      uint64_t v20 = v19[1];
      BOOL v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0LL) & 1) != 0) {
        goto LABEL_7;
      }
    }
  }

  swift_bridgeObjectRelease(v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  swift_bridgeObjectRetain(a3);
  sub_10014C71C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = *v3;
  *uint64_t v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1LL;
}

void sub_10014C230(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    uint64_t v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_10014A9A8(v8);
    }

    else
    {
      if (v7 > v6)
      {
        sub_1000F84A4();
        goto LABEL_10;
      }

      sub_10014B2FC(v8);
    }

    uint64_t v9 = *v3;
    sub_1000F6E74(*(void *)(*v3 + 40), a1);
    a2 = v10 & ~(-1LL << *(_BYTE *)(v9 + 32));
    if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a2) & 1) != 0) {
      __asm { BR              X9 }
    }
  }

void sub_10014C574(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10014AD34(v11);
  }

  else
  {
    if (v10 > v9)
    {
      sub_1000F8634();
      goto LABEL_22;
    }

    sub_10014B654(v11);
  }

  uint64_t v12 = *v4;
  Hasher.init(_seed:)(v29, *(void *)(*v4 + 40));
  swift_bridgeObjectRetain(a2);
  String.hash(into:)(v29, a1, a2);
  swift_bridgeObjectRelease(a2);
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1LL << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  uint64_t v15 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v16 = *(void *)(v12 + 48);
    int64_t v17 = (void *)(v16 + 16 * a3);
    uint64_t v18 = v17[1];
    BOOL v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0LL) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for MusicItemID);
      __break(1u);
    }

    else
    {
      uint64_t v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(void *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v21 = (void *)(v16 + 16 * a3);
        uint64_t v22 = v21[1];
        BOOL v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0LL) & 1) != 0) {
          goto LABEL_21;
        }
      }
    }
  }

void sub_10014C71C(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10014B020(v11);
  }

  else
  {
    if (v10 > v9)
    {
      sub_1000F87E4();
      goto LABEL_22;
    }

    sub_10014B90C(v11);
  }

  uint64_t v12 = *v4;
  Hasher.init(_seed:)(v29, *(void *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1LL << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  uint64_t v15 = v12 + 56;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) != 0)
  {
    uint64_t v16 = *(void *)(v12 + 48);
    int64_t v17 = (void *)(v16 + 16 * a3);
    uint64_t v18 = v17[1];
    BOOL v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0LL) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }

    else
    {
      uint64_t v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(void *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v21 = (void *)(v16 + 16 * a3);
        uint64_t v22 = v21[1];
        BOOL v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0LL) & 1) != 0) {
          goto LABEL_21;
        }
      }
    }
  }

uint64_t sub_10014C8B4(uint64_t a1)
{
  uint64_t v5 = a1;
  swift_bridgeObjectRetain(a1);
  sub_10014BBB8((char *)v4, 6);
  uint64_t v1 = v5;
  if (*(void *)(v5 + 16))
  {
    Hasher.init(_seed:)(v4, *(void *)(v5 + 40));
    swift_bridgeObjectRetain(v1);
    String.hash(into:)(v4, 0x6573776F7262LL, 0xE600000000000000LL);
    unint64_t v2 = Hasher._finalize()() & ~(-1LL << *(_BYTE *)(v1 + 32));
    if (((*(void *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8LL)) >> v2) & 1) != 0) {
      __asm { BR              X9 }
    }

    swift_bridgeObjectRelease(v1);
  }

  return v1;
}

uint64_t sub_10014CA94(uint64_t result, uint64_t a2)
{
  unint64_t v3 = 0LL;
  unint64_t v4 = *(void *)(result + 16);
  uint64_t v5 = result + 32;
LABEL_2:
  if (v3 <= v4) {
    unint64_t v6 = v4;
  }
  else {
    unint64_t v6 = v3;
  }
  while (1)
  {
    if (v4 == v3) {
      return (uint64_t)&_swiftEmptyArrayStorage;
    }
    if (v6 == v3) {
      break;
    }
    char v7 = *(_BYTE *)(v5 + v3++);
    uint64_t result = sub_100115334(v7, a2);
    if ((result & 1) != 0)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptyArrayStorage);
      if ((result & 1) == 0) {
        uint64_t result = sub_1000F3D8C(0, *((void *)&_swiftEmptyArrayStorage + 2) + 1LL, 1);
      }
      unint64_t v9 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v8 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v9 >= v8 >> 1) {
        uint64_t result = sub_1000F3D8C(v8 > 1, v9 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + sub_1000E053C(v0 + 2) = v9 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage + v9 + 3sub_1000E053C(v0 + 2) = v7;
      goto LABEL_2;
    }
  }

  __break(1u);
  return result;
}

unint64_t sub_10014CB98()
{
  unint64_t result = qword_1002BDBF0;
  if (!qword_1002BDBF0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSOperationQueue);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002BDBF0);
  }

  return result;
}

double sub_10014CBD4(uint64_t a1)
{
  return sub_10014A3F0(a1, v1);
}

double sub_10014CBDC(uint64_t a1)
{
  return sub_10014A508(a1, v1);
}

uint64_t sub_10014CBE8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc(dword_1002BB7D4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_100149D08(a1, v4, v5, v6);
}

uint64_t sub_10014CC58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc(dword_1002BB7D4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_1000E01FC;
  return sub_100149D08(a1, v4, v5, v6);
}

ValueMetadata *type metadata accessor for MusicTabs()
{
  return &type metadata for MusicTabs;
}

uint64_t sub_10014CCD4()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECB50);
  uint64_t v2 = swift_getKeyPath(&unk_1001ECB78);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id sub_10014CD44()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for ManagedConfigurationObserver(0)) init];
  qword_1002C5E60 = (uint64_t)result;
  return result;
}

id sub_10014CD74()
{
  uint64_t v1 = (void *)objc_opt_self(&OBJC_CLASS___MCProfileConnection);
  uint64_t v2 = v0;
  id result = [v1 sharedConnection];
  if (result)
  {
    uint64_t v4 = result;
    unsigned int v5 = [result effectiveBoolValueForSetting:MCFeatureMusicVideosAllowed];

    swift_beginAccess(&v2[OBJC_IVAR____TtC7TVMusic28ManagedConfigurationObserver__isMusicVideoBlocked], v10, 33LL, 0LL);
    BOOL v9 = v5 != 1;
    Published.init(initialValue:)(&v9, &type metadata for Bool);
    swift_endAccess(v10);

    v8.receiver = v2;
    v8.super_class = (Class)type metadata accessor for ManagedConfigurationObserver(0LL);
    id v6 = objc_msgSendSuper2(&v8, "init");
    id result = [v1 sharedConnection];
    if (result)
    {
      char v7 = result;
      [result registerObserver:v6];

      return v6;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

id sub_10014CECC()
{
  id result = [(id)objc_opt_self(MCProfileConnection) sharedConnection];
  if (result)
  {
    uint64_t v2 = result;
    [result unregisterObserver:v0];

    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for ManagedConfigurationObserver(0LL);
    return objc_msgSendSuper2(&v3, "dealloc");
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10014D018()
{
  return type metadata accessor for ManagedConfigurationObserver(0LL);
}

uint64_t type metadata accessor for ManagedConfigurationObserver(uint64_t a1)
{
  uint64_t result = qword_1002BB8B0;
  if (!qword_1002BB8B0) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ManagedConfigurationObserver);
  }
  return result;
}

void sub_10014D0E0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

void *sub_10014D154(void *result)
{
  if (result)
  {
    unsigned int v2 = [result effectiveBoolValueForSetting:MCFeatureMusicVideosAllowed];
    uint64_t KeyPath = swift_getKeyPath(&unk_1001ECB50);
    uint64_t v4 = swift_getKeyPath(&unk_1001ECB78);
    static Published.subscript.getter(&v9, v1, KeyPath, v4);
    swift_release(KeyPath);
    uint64_t result = (void *)swift_release(v4);
    if ((v2 != 1) != v9)
    {
      BOOL v5 = v2 != 1;
      uint64_t v6 = swift_getKeyPath(&unk_1001ECB50);
      uint64_t v7 = swift_getKeyPath(&unk_1001ECB78);
      BOOL v8 = v5;
      return (void *)static Published.subscript.setter(&v8, v1, v6, v7);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_10014D244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10014D260(a1, a2, (uint64_t (*)(id, uint64_t))sub_1000F15A4, a3);
}

uint64_t sub_10014D260@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(id, uint64_t)@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_1000DFE10(&qword_1002B7850);
  if (swift_dynamicCast(&v11, v12, v8, v4, 6LL))
  {
    id v9 = v11;
  }

  else
  {
    id v11 = 0LL;
    id v9 = objc_msgSend( objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  }

  uint64_t result = a3(v9, a1);
  a4[3] = v4;
  *a4 = v9;
  return result;
}

void sub_10014D328(void *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002B7850);
  if (swift_dynamicCast(v8, v9, v6, v3, 6LL))
  {
    uint64_t v7 = *(char **)v8;
  }

  else
  {
    *(void *)uint64_t v8 = 0LL;
    uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone(v3), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  }

  sub_10015BCA0(v7, a1);
  a3[3] = (char *)v3;
  *a3 = v7;
}

uint64_t sub_10014D3E0()
{
  uint64_t v1 = v0;
  unsigned int v2 = &selRef_animateAlongsideTransition_completion_;
  if ([v0 colorType] == (id)1)
  {
    id v3 = [v0 color];
    if (v3) {
      return (uint64_t)v3;
    }
  }

  id v5 = [v0 gradientColors];
  if (!v5) {
    return 0LL;
  }
  uint64_t v6 = sub_1000E0418(0LL, &qword_1002BB968, &OBJC_CLASS___UIColor_ptr);
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  id v7 = [v1 gradientPoints];
  if (!v7)
  {
    swift_bridgeObjectRelease(v4);
    return 0LL;
  }

  uint64_t v8 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BDC20, &OBJC_CLASS___NSNumber_ptr);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if (!((unint64_t)v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (v10) {
      goto LABEL_8;
    }
LABEL_23:
    *(void *)&double v19 = swift_bridgeObjectRelease(v9).n128_u64[0];
LABEL_24:
    id v21 = objc_msgSend(v1, v2[227], v19);
    if (v21 != (id)2 && v21 != (id)3)
    {
      swift_bridgeObjectRelease(v4);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      return 0LL;
    }

    return v4;
  }

  if (v9 < 0) {
    uint64_t v20 = v9;
  }
  else {
    uint64_t v20 = v9 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v9);
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v9);
  if (!v10) {
    goto LABEL_23;
  }
LABEL_8:
  uint64_t result = sub_1000F3D38(0, v10 & ~(v10 >> 63), 0);
  if ((v10 & 0x8000000000000000LL) == 0)
  {
    for (uint64_t i = 0LL; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001LL) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else {
        id v13 = *(id *)(v9 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      [v13 doubleValue];
      uint64_t v16 = v15;

      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1) {
        sub_1000F3D38(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      _swiftEmptyArrayStorage[v18 + 4] = v16;
    }

    *(void *)&double v19 = swift_bridgeObjectRelease(v9).n128_u64[0];
    unsigned int v2 = &selRef_animateAlongsideTransition_completion_;
    goto LABEL_24;
  }

  __break(1u);
  return result;
}

uint64_t sub_10014D68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10014D260(a1, a2, (uint64_t (*)(id, uint64_t))sub_1000F4324, a3);
}

double sub_10014D6A8()
{
  __int128 v2 = 0u;
  *(_OWORD *)id v3 = 0u;
  [(id)objc_opt_self(TVMLUtilities) cornerRadiiFromElement:v0 cornerRadii:&v2 circle:0];
  double result = *(double *)&v2;
  if (result <= v3[0]) {
    double result = v3[0];
  }
  if (result <= v3[1]) {
    return v3[1];
  }
  return result;
}

uint64_t sub_10014D740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10014D260(a1, a2, (uint64_t (*)(id, uint64_t))sub_100140F0C, a3);
}

id TVMusicInterfaceFactoryBridging.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMusicInterfaceFactoryBridging();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for TVMusicInterfaceFactoryBridging()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic31TVMusicInterfaceFactoryBridging);
}

id TVMusicInterfaceFactoryBridging.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMusicInterfaceFactoryBridging();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10014D86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16LL);
}

void *sub_10014D878(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  return a1;
}

void *sub_10014D8AC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

void *sub_10014D900(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

uint64_t _s14descr100274711O8PropertyVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&_s14descr100274711O8PropertyVMn);
}

uint64_t sub_10014D948()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

uint64_t sub_10014D974()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10014D97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_10014D260(a1, a2, (uint64_t (*)(id, uint64_t))sub_10014FB74, a3);
}

uint64_t sub_10014DDDC(void *a1, void *a2)
{
  void (*v19)(void *__return_ptr, void *, __int128 *, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  void v26[4];
  if (qword_1002B70C8 != -1) {
    swift_once(&qword_1002B70C8, sub_1000E4238);
  }
  uint64_t v4 = *(void *)(qword_1002C5970 + 16);
  if (!v4) {
    return 0LL;
  }
  uint64_t v22 = a2;
  BOOL v23 = swift_bridgeObjectRetain(qword_1002C5970);
  for (uint64_t i = (void *)(v23 + 40); ; i += 2)
  {
    uint64_t v6 = *(i - 1);
    uint64_t v7 = *i;
    uint64_t v8 = (*(uint64_t (**)(uint64_t, void))(*i + 8LL))(v6, *i);
    uint64_t v10 = v9;
    id v11 = [a1 elementName];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    uint64_t v14 = v13;

    if (v8 == v12 && v10 == v14)
    {
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease_n(v10, 2LL);
      unint64_t v17 = v22;
      if (!v6) {
        return 0LL;
      }
      goto LABEL_13;
    }

    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v10, v12, v14, 0LL);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v14);
    if ((v16 & 1) != 0) {
      break;
    }
    if (!--v4)
    {
      swift_bridgeObjectRelease(v23);
      return 0LL;
    }
  }

  swift_bridgeObjectRelease(v23);
  unint64_t v17 = v22;
  if (!v6) {
    return 0LL;
  }
LABEL_13:
  if (v17)
  {
    *((void *)&v25 + 1) = sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
    *(void *)&uint64_t v24 = v17;
  }

  else
  {
    uint64_t v24 = 0u;
    unint64_t v25 = 0u;
  }

  double v19 = *(void (**)(void *__return_ptr, void *, __int128 *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v20 = v17;
  v19(v26, a1, &v24, v6, v7);
  sub_1000E03B4((uint64_t)&v24, &qword_1002B7850);
  id v21 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
  else {
    return 0LL;
  }
}

id sub_10014DFE0()
{
  uint64_t v1 = OBJC_IVAR____TtC7TVMusic12TVMLCardView____lazy_storage___specularLayer;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC7TVMusic12TVMLCardView____lazy_storage___specularLayer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7TVMusic12TVMLCardView____lazy_storage___specularLayer);
  }

  else
  {
    id v4 = sub_10014E040(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0LL;
  }

  id v6 = v2;
  return v3;
}

id sub_10014E040(uint64_t a1)
{
  id v2 = [objc_allocWithZone(CALayer) init];
  objc_msgSend(v2, "setAnchorPoint:", 0.5, 0.5);
  [v2 setAllowsGroupOpacity:0];
  [v2 setAllowsEdgeAntialiasing:0];
  LODWORD(v3) = 0;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected) == 1) {
    LODWORD(v3) = *(_DWORD *)(a1 + OBJC_IVAR____TtC7TVMusic12TVMLCardView_specularOpacity);
  }
  id v4 = *(void **)UIImage.specularImage.unsafeMutableAddressor([v2 setOpacity:v3]);
  if (v4 && (id v5 = [v4 CGImage]) != 0)
  {
    id v9 = v5;
    type metadata accessor for CGImage(0LL);
    uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)(&v9, v6);
  }

  else
  {
    uint64_t v7 = 0LL;
  }

  [v2 setContents:v7];
  swift_unknownObjectRelease(v7);
  return v2;
}

char *sub_10014E160(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic12TVMLCardView_overlayView] = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic12TVMLCardView____lazy_storage___specularLayer] = 0LL;
  *(_DWORD *)&v4[OBJC_IVAR____TtC7TVMusic12TVMLCardView_specularOpacity] = 1045220557;
  uint64_t v10 = OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView;
  uint64_t v11 = type metadata accessor for TVMLStackView();
  id v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v11));
  uint64_t v13 = v4;
  *(void *)&v4[v10] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC7TVMusic12TVMLCardView_childrenViews;
  *(void *)&v13[v14] = sub_10018751C((uint64_t)_swiftEmptyArrayStorage);
  __asm { FMOV            V0.2D, #0.5 }

  *(_OWORD *)&v13[OBJC_IVAR____TtC7TVMusic12TVMLCardView_focusDirection] = _Q0;
  v13[OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected] = 0;
  *(void *)&v13[OBJC_IVAR____TtC7TVMusic12TVMLCardView_contentMotionEffect] = 0LL;

  v48.receiver = v13;
  v48.super_class = ObjectType;
  uint64_t v20 = (char *)objc_msgSendSuper2(&v48, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v21 = OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView;
  uint64_t v22 = *(void **)&v20[OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView];
  BOOL v23 = v20;
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  double result = (char *)[v23 contentView];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }

  unint64_t v25 = result;
  [result addSubview:v22];

  id v26 = [*(id *)&v20[v21] topAnchor];
  double result = (char *)[v23 contentView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }

  BOOL v27 = result;
  id v28 = [result topAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28];
  [v29 setActive:1];

  id v30 = [*(id *)&v20[v21] leftAnchor];
  double result = (char *)[v23 contentView];
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }

  uint64_t v31 = result;
  id v32 = [result leftAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32];
  [v33 setActive:1];

  id v34 = [*(id *)&v20[v21] rightAnchor];
  double result = (char *)[v23 contentView];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }

  uint64_t v35 = result;
  id v36 = [result rightAnchor];

  id v37 = [v34 constraintEqualToAnchor:v36];
  [v37 setActive:1];

  id v38 = [*(id *)&v20[v21] bottomAnchor];
  double result = (char *)[v23 contentView];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }

  uint64_t v39 = result;
  id v40 = [result bottomAnchor];

  id v41 = [v38 constraintEqualToAnchor:v40];
  [v41 setActive:1];

  double result = (char *)[v23 contentView];
  if (result)
  {
    unint64_t v42 = result;
    id v43 = [result layer];

    id v44 = sub_10014DFE0();
    [v43 addSublayer:v44];

    uint64_t v45 = (void *)objc_opt_self(&OBJC_CLASS____UIFocusAnimationConfiguration);
    Swift::String v46 = v23;
    id v47 = [v45 configurationWithStyle:0];
    [v46 setFocusAnimationConfiguration:v47];

    objc_msgSend(v46, "setContentMotionRotation:translation:", 0.036, 0.036, 10.0, 10.0);
    [v46 setContinuousCornerEnabled:1];
    [v46 setCornerRadius:14.0];
    [v46 _setTracksFocusedAncestors:1];

    return v46;
  }

void sub_10014E690()
{
  if (CGRectGetWidth(v26) > 0.0)
  {
    [v0 bounds];
    if (CGRectGetHeight(v27) > 0.0 && v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected] == 1)
    {
      id v1 = sub_10014DFE0();
      id v2 = [v0 layer];
      [v2 bounds];
      double v4 = v3;
      double v6 = v5;
      double v8 = v7;
      double v10 = v9;

      objc_msgSend(v1, "setFrame:", v4, v6, v8, v10);
      [v0 bounds];
      double Width = CGRectGetWidth(v28);
      [v0 bounds];
      double Height = CGRectGetHeight(v29);
      if (Width > Height) {
        double Height = Width;
      }
      double v13 = Height * 1.75;
      [v0 bounds];
      double v14 = CGRectGetWidth(v30) / v13;
      [v0 bounds];
      double v15 = CGRectGetHeight(v31) / v13;
      [v0 scaleFactor];
      if (v16 > 1.3) {
        double v17 = v16;
      }
      else {
        double v17 = 1.3;
      }
      unint64_t v18 = (double *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_focusDirection];
      double v19 = *(double *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_focusDirection] * 1.3;
      [v0 bounds];
      double v20 = v19 * CGRectGetWidth(v32);
      double v21 = v18[1] * 1.3;
      [v0 bounds];
      double v22 = (v13 * 0.4 - v21 * CGRectGetHeight(v33)) / v17 / v13;
      double v23 = 0.5 - v20 / v17 / v13;
      double v24 = v22 + 0.5;
      id v25 = sub_10014DFE0();
      objc_msgSend(v25, "setContentsRect:", v23 - v14 * 0.5, v24 - v15 * 0.5, v14, v15);
    }
  }

void sub_10014E90C()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v8, "didMoveToWindow");
  id v1 = [v0 window];

  if (!v1 || (id v2 = objc_msgSend(v0, "tvm_focusedView")) == 0)
  {
    unint64_t v5 = (unint64_t)[v0 controlState];
    double v3 = 0LL;
    goto LABEL_6;
  }

  double v3 = v2;
  unsigned int v4 = [v0 isDescendantOfView:v2];
  unint64_t v5 = (unint64_t)[v0 controlState];
  if (!v4)
  {
LABEL_6:
    char v7 = 0;
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFF7LL;
    goto LABEL_7;
  }

  unint64_t v6 = v5 | 8;
  char v7 = 1;
LABEL_7:
  [v0 setControlState:v6 withAnimationCoordinator:0];
  sub_10014ECAC(v7, 1);
}

uint64_t sub_10014EA40(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v12, "setHighlighted:", a1 & 1);
  double v3 = *(void **)&v1[OBJC_IVAR____TtC7TVMusic12TVMLCardView_overlayView];
  if (v3) {
    [v3 setHighlighted:a1 & 1];
  }
  v11.receiver = *(id *)&v1[OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView];
  receiver = (char *)v11.receiver;
  v11.super_class = (Class)type metadata accessor for TVMLStackView();
  objc_msgSendSuper2(&v11, "setHighlighted:", a1 & 1);
  uint64_t v5 = *(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if (!((unint64_t)v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n(v5, 2LL);
    if (v6) {
      goto LABEL_5;
    }
    return swift_bridgeObjectRelease_n(v5, 2LL);
  }

  if (v5 < 0) {
    uint64_t v10 = *(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  }
  else {
    uint64_t v10 = v5 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain_n(v5, 2LL);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v10);
  uint64_t v6 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n(v5, 2LL);
  }
LABEL_5:
  if (v6 >= 1)
  {
    for (uint64_t i = 0LL; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001LL) != 0)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      }

      else
      {
        uint64_t v9 = *(void *)(v5 + 8 * i + 32);
        swift_retain(v9);
      }

      [*(id *)(v9 + 16) setHighlighted:a1 & 1];
      swift_release(v9);
    }

    return swift_bridgeObjectRelease_n(v5, 2LL);
  }

  __break(1u);
  return result;
}

void sub_10014ECAC(char a1, char a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v2);
  v2[OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected] = a1;
  v17.receiver = v2;
  v17.super_class = ObjectType;
  objc_msgSendSuper2(&v17, "setSelected:animated:", a1 & 1, a2 & 1);
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC7TVMusic12TVMLCardView_overlayView];
  if (v6) {
    [v6 setSelected:a1 & 1 animated:a2 & 1];
  }
  v16.receiver = *(id *)&v2[OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView];
  receiver = (char *)v16.receiver;
  v16.super_class = (Class)type metadata accessor for TVMLStackView();
  objc_msgSendSuper2(&v16, "setSelected:animated:", a1 & 1, a2 & 1);
  uint64_t v8 = *(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0) {
      uint64_t v12 = *(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
    }
    else {
      uint64_t v12 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain_n(*(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements], 2LL);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v12);
    if (!v9) {
      goto LABEL_15;
    }
  }

  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(*(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements], 2LL);
    if (!v9) {
      goto LABEL_15;
    }
  }

  if (v9 < 1)
  {
    __break(1u);
    return;
  }

  for (uint64_t i = 0LL; i != v9; ++i)
  {
    if ((v8 & 0xC000000000000001LL) != 0)
    {
      uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
    }

    else
    {
      uint64_t v11 = *(void *)(v8 + 8 * i + 32);
      swift_retain(v11);
    }

    [*(id *)(v11 + 16) setSelected:a1 & 1 animated:a2 & 1];
    swift_release(v11);
  }

void sub_10014EEB8(char a1, char a2, void *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  v3[OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected] = a1;
  v27.receiver = v3;
  v27.super_class = ObjectType;
  objc_msgSendSuper2(&v27, "setSelected:animated:withAnimationCoordinator:", a1 & 1, a2 & 1, a3);
  uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC7TVMusic12TVMLCardView_overlayView];
  if (v8) {
    [v8 setSelected:a1 & 1 animated:a2 & 1 withAnimationCoordinator:a3];
  }
  v26.receiver = *(id *)&v3[OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView];
  receiver = (char *)v26.receiver;
  v26.super_class = (Class)type metadata accessor for TVMLStackView();
  objc_msgSendSuper2(&v26, "setSelected:animated:withAnimationCoordinator:", a1 & 1, a2 & 1, a3);
  uint64_t v10 = *(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  if (!((unint64_t)v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain_n(*(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements], 2LL);
    if (v11) {
      goto LABEL_5;
    }
LABEL_15:
    swift_bridgeObjectRelease_n(v10, 2LL);
    uint64_t v15 = swift_allocObject(&unk_100274740, 25LL, 7LL);
    *(void *)(v15 + swift_weakDestroy(v0 + 16) = v3;
    *(_BYTE *)(v15 + 24) = a1 & 1;
    double v24 = sub_1001508C8;
    uint64_t v25 = v15;
    __int128 aBlock = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256LL;
    double v22 = sub_1000FA280;
    double v23 = &unk_100274758;
    objc_super v16 = _Block_copy(&aBlock);
    uint64_t v17 = v25;
    unint64_t v18 = v3;
    swift_release(v17);
    double v24 = (void (*)())nullsub_46;
    uint64_t v25 = 0LL;
    __int128 aBlock = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256LL;
    double v22 = sub_1000FA280;
    double v23 = &unk_100274780;
    double v19 = _Block_copy(&aBlock);
    [a3 addCoordinatedAnimations:v16 completion:v19];
    _Block_release(v19);
    _Block_release(v16);
    return;
  }

  if (v10 < 0) {
    uint64_t v14 = *(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements];
  }
  else {
    uint64_t v14 = v10 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain_n(*(void *)&receiver[OBJC_IVAR____TtC7TVMusic13TVMLStackView_stackViewElements], 2LL);
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v11) {
    goto LABEL_15;
  }
LABEL_5:
  if (v11 >= 1)
  {
    for (uint64_t i = 0LL; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001LL) != 0)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
      }

      else
      {
        uint64_t v13 = *(void *)(v10 + 8 * i + 32);
        swift_retain(v13);
      }

      [*(id *)(v13 + 16) setSelected:a1 & 1 animated:a2 & 1 withAnimationCoordinator:a3];
      swift_release(v13);
    }

    goto LABEL_15;
  }

  __break(1u);
}

void sub_10014F134(uint64_t a1, char a2)
{
  id v4 = sub_10014DFE0();
  LODWORD(v5) = 0;
  if ((a2 & 1) != 0) {
    LODWORD(v5) = *(_DWORD *)(a1 + OBJC_IVAR____TtC7TVMusic12TVMLCardView_specularOpacity);
  }
  id v6 = v4;
  [v4 setOpacity:v5];
}

uint64_t sub_10014F1EC(unsigned __int8 a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t v18 = (unint64_t)[v4 controlState];
  [v4 setControlState:v18 & 0xFFFFFFFFFFFFFFFELL | a1 & ((v18 & 8) != 0) animated:a2 & 1];
  sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
  double v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = swift_allocObject(&unk_1002747E0, 32LL, 7LL);
  *(void *)(v20 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  aBlock[4] = sub_100150944;
  uint64_t v31 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1000FA280;
  aBlock[3] = &unk_1002747F8;
  uint64_t v21 = _Block_copy(aBlock);
  uint64_t v22 = v31;
  sub_10011418C(a3, a4);
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  unint64_t v24 = sub_1000F99EC();
  uint64_t v25 = sub_1000DFE10(&qword_1002B86F8);
  unint64_t v26 = sub_1000F9A34();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v9, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v17, v12, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

void sub_10014F4C0(void *a1, void *a2)
{
  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v11, "_ancestorWillUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  if (!a1)
  {
    __break(1u);
    return;
  }

  id v5 = [a1 nextFocusedView];
  if (!v5)
  {
    unint64_t v7 = (unint64_t)[v2 controlState];
    goto LABEL_6;
  }

  unsigned int v6 = [v2 isDescendantOfView:v5];
  unint64_t v7 = (unint64_t)[v2 controlState];
  if (!v6)
  {
LABEL_6:
    char v9 = 0;
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFF7LL;
    goto LABEL_7;
  }

  unint64_t v8 = v7 | 8;
  char v9 = 1;
LABEL_7:
  [v2 setControlState:v8 withAnimationCoordinator:a2];
  if (a2)
  {
    id v10 = a2;
    sub_10014EEB8(v9, 1, v10);

    id v5 = v10;
  }

  else
  {
    sub_10014ECAC(v9, 1);
  }
}

void sub_10014F64C(uint64_t a1, uint64_t a2)
{
  double v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  if (a1) {
    v7.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
  else {
    v7.super.Class isa = 0LL;
  }
  v22.receiver = v3;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "_applyKeyPathsAndRelativeValues:forMotionEffect:", v7.super.isa, a2);

  if (a1)
  {
    *(void *)&__int128 v20 = 0x7269447375636F66LL;
    *((void *)&v20 + 1) = 0xEF586E6F69746365LL;
    AnyHashable.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
    if (*(void *)(a1 + 16) && (unint64_t v8 = sub_10013CCD8((uint64_t)v19), (v9 & 1) != 0))
    {
      sub_1000E0094(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v20);
    }

    else
    {
      __int128 v20 = 0u;
      __int128 v21 = 0u;
    }

    sub_1000E0060((uint64_t)v19);
    if (*((void *)&v21 + 1))
    {
      if (swift_dynamicCast( &v18,  &v20,  (char *)&type metadata for Any + 8,  &type metadata for Double,  6LL))
      {
        double v10 = v18;
LABEL_14:
        *(void *)&__int128 v20 = 0x7269447375636F66LL;
        *((void *)&v20 + 1) = 0xEF596E6F69746365LL;
        AnyHashable.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
        if (*(void *)(a1 + 16) && (unint64_t v11 = sub_10013CCD8((uint64_t)v19), (v12 & 1) != 0))
        {
          sub_1000E0094(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v20);
        }

        else
        {
          __int128 v20 = 0u;
          __int128 v21 = 0u;
        }

        sub_1000E0060((uint64_t)v19);
        if (*((void *)&v21 + 1))
        {
          if (swift_dynamicCast( &v18,  &v20,  (char *)&type metadata for Any + 8,  &type metadata for Double,  6LL))
          {
            double v13 = v18;
LABEL_23:
            uint64_t v14 = (double *)&v3[OBJC_IVAR____TtC7TVMusic12TVMLCardView_focusDirection];
            *uint64_t v14 = v10;
            v14[1] = v13;
            uint64_t v15 = (void *)objc_opt_self(&OBJC_CLASS___CATransaction);
            [v15 animationDuration];
            double v17 = v16;
            [v15 setAnimationDuration:0.1];
            sub_10014E690();
            [v15 setAnimationDuration:v17];
            return;
          }
        }

        else
        {
          sub_1000F3754((uint64_t)&v20);
        }

        double v13 = 0.5;
        goto LABEL_23;
      }
    }

    else
    {
      sub_1000F3754((uint64_t)&v20);
    }

    double v10 = 0.5;
    goto LABEL_14;
  }

  __break(1u);
}

uint64_t type metadata accessor for TVMLCardView()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic12TVMLCardView);
}

uint64_t sub_10014F9D4()
{
  return 0x43636973756D7674LL;
}

void sub_10014F9F4(double a1, double a2)
{
  id v5 = [v2 layer];
  [v5 anchorPoint];

  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) == 0 || (*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    [v2 bounds];
    a1 = v6;
    a2 = v7;
  }

  if (a1 > a2) {
    double v8 = a1;
  }
  else {
    double v8 = a2;
  }
  if ((*(void *)&v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    [v2 focusedSizeIncrease];
  }
}

void sub_10014FB74(char *a1, void *a2)
{
  double v5 = sub_10014D6A8();
  if ((v6 & 1) == 0) {
    [a1 setCornerRadius:v4];
  }
  id v7 = objc_msgSend(a2, "element", v5);
  if (v7)
  {
    double v8 = v7;
    id v9 = [v7 style];

    if (v9)
    {
      objc_msgSend(v9, "tv_focusSizeIncrease");
      if (v10 > 0.0)
      {
        objc_msgSend(v9, "tv_focusSizeIncrease");
        objc_msgSend(a1, "setFocusedSizeIncrease:");
      }

      objc_msgSend(v9, "tv_focusTransform");
      if (!CGAffineTransformIsIdentity(&v145))
      {
        double v143 = 0.0;
        double v144 = 0.0;
        double v141 = 0.0;
        double v142 = 0.0;
        unint64_t v11 = (void *)objc_opt_self(&OBJC_CLASS___TVMLUtilities);
        objc_msgSend(v9, "tv_focusTransform");
        [v11 getValuesFromTransform:&v145 translation:&v143 rotation:&v141];
        objc_msgSend(a1, "setContentMotionRotation:translation:", v141, v142, v143, v144);
      }

      if (objc_msgSend(v9, "tv_hasWidth"))
      {
        objc_msgSend(v9, "tv_width");
        [a1 frame];
        objc_msgSend(a1, "setFrame:");
      }

      if (objc_msgSend(v9, "tv_hasHeight"))
      {
        objc_msgSend(v9, "tv_height");
        [a1 frame];
        objc_msgSend(a1, "setFrame:");
      }
    }
  }

  id v12 = [a2 style];
  if (v12)
  {
    double v13 = v12;
    uint64_t KeyPath = swift_getKeyPath(&unk_1001ECD90);
    uint64_t v15 = (SEL *)sub_1000F0900(KeyPath);
    swift_release(KeyPath);
  }

  else
  {
    uint64_t v15 = 0LL;
  }

  id v16 = -[SEL color](v15, "color");
  [a1 setBackgroundColor:v16 forState:0];

  id v17 = [a2 style];
  if (v17)
  {
    double v18 = v17;
    uint64_t v19 = swift_getKeyPath(&unk_1001ECD70);
    CGFloat a = COERCE_DOUBLE(sub_1000F0900(v19));
    swift_release(v19);
  }

  else
  {
    CGFloat a = 0.0;
  }

  id v21 = [*(id *)&a color];
  [a1 setBackgroundColor:v21 forState:8];

  id v22 = [*(id *)&a color];
  [a1 setBackgroundColor:v22 forState:1];

  uint64_t v23 = *(char **)&a1[OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView];
  id v24 = [a2 style];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 padding];
    double top = v26;
    double left = v28;
    double bottom = v30;
    double right = v32;
  }

  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }

  objc_msgSend(v23, "setLayoutMargins:", top, left, bottom, right);
  id v34 = [a2 style];
  if (v34)
  {
    uint64_t v35 = v34;
    [v34 interitemSpacing];
    uint64_t v37 = v36;
  }

  else
  {
    uint64_t v37 = 0LL;
  }

  *(void *)&v23[OBJC_IVAR____TtC7TVMusic13TVMLStackView_spacing] = v37;
  [v23 setNeedsLayout];
  uint64_t v136 = a2;
  id v38 = [a2 childViewElements];
  uint64_t v39 = &qword_1002BB000;
  v139 = v23;
  v140 = a1;
  v137 = v15;
  CGFloat v138 = a;
  if (!v38)
  {
    CGFloat a = 0.0;
    int64_t v42 = 0LL;
    uint64_t v15 = (SEL *)&selRef_findMPSongWithIdentifiers_itemProperties_completionHandler_;
    goto LABEL_64;
  }

  uint64_t v40 = sub_1000E0418(0LL, &qword_1002B8388, &OBJC_CLASS___TVViewElement_ptr);
  uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v38, v40);

  *(void *)&v145.CGFloat a = _swiftEmptyArrayStorage;
  double v143 = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  if ((unint64_t)v41 >> 62)
  {
    if (v41 < 0) {
      uint64_t v61 = v41;
    }
    else {
      uint64_t v61 = v41 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v41);
    int64_t v42 = _CocoaArrayWrapper.endIndex.getter(v61);
    if (v42) {
      goto LABEL_29;
    }
  }

  else
  {
    int64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v41);
    if (v42)
    {
LABEL_29:
      if (v42 >= 1)
      {
        uint64_t v43 = 0LL;
        uint64_t v44 = TVElementKeyOverlay;
        while (1)
        {
          id v49 = (v41 & 0xC000000000000001LL) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v43, v41)
              : *(id *)(v41 + 8 * v43 + 32);
          id v50 = v49;
          id v51 = [v49 elementName];
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
          uint64_t v54 = v53;

          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
          BOOL v57 = v52 == v55 && v54 == v56;
          if (v57) {
            break;
          }
          uint64_t v58 = v56;
          char v59 = _stringCompareWithSmolCheck(_:_:expecting:)(v52, v54, v55, v56, 0LL);
          swift_bridgeObjectRelease(v54);
          swift_bridgeObjectRelease(v58);
          if ((v59 & 1) != 0) {
            goto LABEL_32;
          }
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
          unint64_t v47 = *(void *)((*(void *)&v143 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v60 = *(void *)((*(void *)&v143 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v47 >= v60 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v47 + 1, 1LL);
          }
LABEL_34:
          v48.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v50);
          specialized Array._endMutation()(v48);
          if (v42 == ++v43)
          {
            swift_bridgeObjectRelease(v41);
            CGFloat a = v145.a;
            int64_t v42 = *(void *)&v143;
            uint64_t v15 = (SEL *)&selRef_findMPSongWithIdentifiers_itemProperties_completionHandler_;
            uint64_t v39 = &qword_1002BB000;
            goto LABEL_53;
          }
        }

        uint64_t v45 = swift_bridgeObjectRelease_n(v54, 2LL);
LABEL_32:
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
        unint64_t v47 = *(void *)((*(void *)&v145.a & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v46 = *(void *)((*(void *)&v145.a & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v47 >= v46 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1LL);
        }
        goto LABEL_34;
      }

      __break(1u);
      goto LABEL_104;
    }
  }

  swift_bridgeObjectRelease(v41);
  int64_t v42 = (int64_t)_swiftEmptyArrayStorage;
  CGFloat a = COERCE_DOUBLE(_swiftEmptyArrayStorage);
  uint64_t v15 = (SEL *)&selRef_findMPSongWithIdentifiers_itemProperties_completionHandler_;
LABEL_53:
  swift_bridgeObjectRelease(v41);
  if (*(void *)&a >> 62)
  {
    if (a < 0.0) {
      uint64_t v67 = *(void *)&a;
    }
    else {
      uint64_t v67 = *(void *)&a & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&a);
    id v38 = (id)_CocoaArrayWrapper.endIndex.getter(v67);
    if (v38)
    {
LABEL_55:
      if ((*(void *)&a & 0xC000000000000001LL) == 0)
      {
        if (!*(void *)((*(void *)&a & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
          __break(1u);
        }
        id v62 = *(id *)(*(void *)&a + 32LL);
        goto LABEL_58;
      }

LABEL_104:
      id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, *(void *)&a);
LABEL_58:
      uint64_t v63 = v62;
      swift_bridgeObjectRelease(*(void *)&a);
      Swift::String v64 = (void *)objc_opt_self(&OBJC_CLASS___TVInterfaceFactory);
      id v65 = v63;
      id v66 = [v64 sharedInterfaceFactory];
      id v38 = [v66 viewForElement:v65 existingView:*(void *)&a1[v39[304]]];

      goto LABEL_64;
    }
  }

  else
  {
    id v38 = *(id *)((*(void *)&a & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&a);
    if (v38) {
      goto LABEL_55;
    }
  }

  swift_bridgeObjectRelease(*(void *)&a);
LABEL_64:
  uint64_t v68 = v39[304];
  uint64_t v69 = *(void **)&a1[v68];
  *(void *)&a1[v68] = v38;
  id v70 = v38;
  if (v69)
  {
    if (v38)
    {
      sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
      id v71 = v69;
      id v72 = v70;
      char v73 = static NSObject.== infix(_:_:)(v71, v72);

      if ((v73 & 1) != 0)
      {
LABEL_75:

        if (a != 0.0) {
          goto LABEL_76;
        }
LABEL_73:
        int64_t v42 = 0LL;
        goto LABEL_77;
      }
    }
  }

  else if (!v38)
  {
LABEL_74:
    id v71 = v69;
    goto LABEL_75;
  }

  [v69 removeFromSuperview];
  uint64_t v74 = *(void **)&a1[v68];
  if (!v74) {
    goto LABEL_74;
  }
  id v75 = v74;
  id v76 = [a1 contentView];
  if (!v76)
  {
    __break(1u);
    goto LABEL_107;
  }

  uint64_t v77 = v76;
  [v76 bounds];
  double v79 = v78;
  double v81 = v80;
  double v83 = v82;
  double v85 = v84;

  objc_msgSend(v75, "setFrame:", v79, v81, v83, v85);
  [v75 setAutoresizingMask:18];
  [v75 setTranslatesAutoresizingMaskIntoConstraints:1];
  id v86 = [a1 contentView];
  if (!v86)
  {
LABEL_107:
    __break(1u);
    return;
  }

  unint64_t v87 = v86;
  [v86 insertSubview:v75 aboveSubview:v139];

  if (a == 0.0) {
    goto LABEL_73;
  }
LABEL_76:
  swift_bridgeObjectRelease(*(void *)&a);
LABEL_77:
  sub_100139D44(v42);
  objc_msgSend(a1, v15[44], swift_bridgeObjectRelease(v42).n128_f64[0]);
  if ((v89 & 0x7FFFFFFFFFFFFFFFLL) == 0 || (v88 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    sub_10013B4C8(UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
    [a1 v15[44]];
    objc_msgSend(a1, "setFrame:");
  }

  id v90 = [v136 style];
  if (v90)
  {
    uint64_t v91 = swift_getKeyPath(&unk_1001ECD50);
    id v92 = v90;
    double v93 = COERCE_DOUBLE(sub_1000F0A38(v91));
    char v95 = v94;
    swift_release(v91);

    float v96 = v93;
    BOOL v57 = (v95 & 1) == 0;
    a1 = v140;
    if (!v57) {
      float v96 = 0.2;
    }
  }

  else
  {
    float v96 = 0.2;
  }

  uint64_t v97 = OBJC_IVAR____TtC7TVMusic12TVMLCardView_specularOpacity;
  *(float *)&a1[OBJC_IVAR____TtC7TVMusic12TVMLCardView_specularOpacity] = v96;
  if (a1[OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected] == 1)
  {
    id v98 = sub_10014DFE0();
    LODWORD(v99) = *(_DWORD *)&a1[v97];
    [v98 setOpacity:v99];
  }

  if (v90)
  {
    uint64_t v100 = swift_getKeyPath(&unk_1001ECD30);
    id v101 = v90;
    *(double *)&uint64_t v102 = COERCE_DOUBLE(sub_1000F0A38(v100));
    char v104 = v103;
    swift_release(v100);

    double v105 = *(double *)&v102;
    if ((v104 & 1) != 0) {
      double v105 = 0.4;
    }
    [v140 setUnfocusedShadowOpacity:v105];
    uint64_t v106 = swift_getKeyPath(&unk_1001ECD10);
    id v107 = v101;
    *(double *)&uint64_t v108 = COERCE_DOUBLE(sub_1000F0A38(v106));
    char v110 = v109;
    swift_release(v106);

    double v111 = *(double *)&v108;
    if ((v110 & 1) != 0) {
      double v111 = 12.0;
    }
    [v140 setUnfocusedShadowRadius:v111];
    uint64_t v112 = swift_getKeyPath(&unk_1001ECCF0);
    id v113 = v107;
    *(double *)&uint64_t v114 = COERCE_DOUBLE(sub_1000F0A38(v112));
    char v116 = v115;
    swift_release(v112);

    double v117 = *(double *)&v114;
    if ((v116 & 1) != 0) {
      double v117 = 4.0;
    }
    [v140 setUnfocusedShadowVerticalOffset:v117];
    uint64_t v118 = swift_getKeyPath(&unk_1001ECCD0);
    id v119 = v113;
    *(double *)&uint64_t v120 = COERCE_DOUBLE(sub_1000F0A38(v118));
    char v122 = v121;
    swift_release(v118);

    double v123 = *(double *)&v120;
    if ((v122 & 1) != 0) {
      double v123 = 0.3;
    }
    [v140 setShadowOpacity:1 forUserInterfaceStyle:v123];
    uint64_t v124 = swift_getKeyPath(&unk_1001ECCB0);
    id v125 = v119;
    *(double *)&uint64_t v126 = COERCE_DOUBLE(sub_1000F0A38(v124));
    char v128 = v127;
    swift_release(v124);

    double v129 = *(double *)&v126;
    if ((v128 & 1) != 0) {
      double v129 = 35.0;
    }
    [v140 setShadowRadius:v129];
    uint64_t v130 = swift_getKeyPath(&unk_1001ECC90);
    id v131 = v125;
    *(double *)&uint64_t v132 = COERCE_DOUBLE(sub_1000F0A38(v130));
    char v134 = v133;
    swift_release(v130);

    double v135 = *(double *)&v132;
    BOOL v57 = (v134 & 1) == 0;
    a1 = v140;
    if (!v57) {
      double v135 = 50.0;
    }
  }

  else
  {
    [a1 setUnfocusedShadowOpacity:0.4];
    [a1 setUnfocusedShadowRadius:12.0];
    [a1 setUnfocusedShadowVerticalOffset:4.0];
    [a1 setShadowOpacity:1 forUserInterfaceStyle:0.3];
    [a1 setShadowRadius:35.0];
    double v135 = 50.0;
  }

  [a1 setShadowVerticalOffset:v135];
  [a1 setUseShadowImage:0];
}

uint64_t sub_1001508A4()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

void sub_1001508C8()
{
}

uint64_t sub_1001508D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001508E4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001508EC()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100150910()
{
  return sub_100113974(*(void *)(v0 + 16));
}

uint64_t sub_100150918()
{
  if (*(void *)(v0 + 16)) {
    swift_release(*(void *)(v0 + 24));
  }
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100150944()
{
  id v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

void sub_10015096C()
{
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_overlayView] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView____lazy_storage___specularLayer] = 0LL;
  *(_DWORD *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_specularOpacity] = 1045220557;
  uint64_t v1 = OBJC_IVAR____TtC7TVMusic12TVMLCardView_stackView;
  uint64_t v2 = type metadata accessor for TVMLStackView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v2)) init];
  uint64_t v3 = OBJC_IVAR____TtC7TVMusic12TVMLCardView_childrenViews;
  *(void *)&v0[v3] = sub_10018751C((uint64_t)_swiftEmptyArrayStorage);
  __asm { FMOV            V0.2D, #0.5 }

  *(_OWORD *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_focusDirection] = _Q0;
  v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic12TVMLCardView_contentMotionEffect] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100223C30LL,  "TVMusic/TVMLCardView.swift",  26LL,  2LL,  150LL,  0);
  __break(1u);
}

ValueMetadata *type metadata accessor for SharePlayManagementView()
{
  return &type metadata for SharePlayManagementView;
}

uint64_t sub_100150A80(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023D60C, 1LL);
}

uint64_t sub_100150A90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v51 = sub_1000DFE10(&qword_1002BBBA0);
  __chkstk_darwin(v51, v1);
  uint64_t v3 = (uint64_t *)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v4 = sub_1000DFE10(&qword_1002BBBA8);
  __chkstk_darwin(v4, v5);
  id v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000DFE10(&qword_1002BBC50);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  id v12 = (uint64_t *)((char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v10, v13);
  uint64_t v53 = (uint64_t)&v50 - v14;
  uint64_t v15 = Image.init(systemName:)(0x616C706572616873LL, 0xE900000000000079LL);
  uint64_t v16 = static Font.caption.getter();
  uint64_t v17 = Font.bold()();
  swift_release(v16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECFD0);
  uint64_t v19 = static Color.primary.getter(KeyPath);
  uint64_t v20 = swift_getKeyPath(&unk_1001ED0F8);
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v21 = type metadata accessor for SymbolRenderingMode(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56LL))(v7, 0LL, 1LL, v21);
  uint64_t v22 = swift_getKeyPath(&unk_1001ED000);
  sub_1000E04D4((uint64_t)v7, (uint64_t)v3 + *(int *)(v51 + 28), &qword_1002BBBA8);
  *uint64_t v3 = v22;
  sub_1000E04D4((uint64_t)v3, (uint64_t)v12 + *(int *)(v8 + 36), &qword_1002BBBA0);
  *id v12 = v15;
  v12[1] = KeyPath;
  v12[2] = v17;
  void v12[3] = v20;
  v12[4] = v19;
  swift_retain(v15);
  swift_retain(KeyPath);
  swift_retain(v17);
  swift_retain(v20);
  swift_retain(v19);
  sub_1000E03B4((uint64_t)v3, &qword_1002BBBA0);
  sub_1000E03B4((uint64_t)v7, &qword_1002BBBA8);
  swift_release(v19);
  swift_release(v20);
  swift_release(v17);
  swift_release(KeyPath);
  swift_release(v15);
  sub_1000E011C((uint64_t)v12, v53, &qword_1002BBC50);
  uint64_t v23 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000012LL, 0x8000000100227AF0LL);
  uint64_t v24 = Text.init(_:tableName:bundle:comment:)(v23);
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29 & 1;
  uint64_t v31 = static Font.body.getter();
  uint64_t v32 = Font.bold()();
  swift_release(v31);
  uint64_t v33 = Text.font(_:)(v32, v24, v26, v30, v28);
  uint64_t v35 = v34;
  LOBYTE(v15) = v36;
  uint64_t v38 = v37;
  swift_release(v32);
  sub_1000EC044(v24, v26, v30);
  __n128 v39 = swift_bridgeObjectRelease(v28);
  v54[0] = static HierarchicalShapeStyle.primary.getter(v39);
  uint64_t v40 = Text.foregroundStyle<A>(_:)( v54,  v33,  v35,  v15 & 1,  v38,  &type metadata for HierarchicalShapeStyle,  &protocol witness table for HierarchicalShapeStyle);
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  LOBYTE(v30) = v45 & 1;
  sub_1000EC044(v33, v35, v15 & 1);
  swift_bridgeObjectRelease(v38);
  uint64_t v46 = v53;
  sub_1000E04D4(v53, (uint64_t)v12, &qword_1002BBC50);
  uint64_t v47 = v52;
  sub_1000E04D4((uint64_t)v12, v52, &qword_1002BBC50);
  uint64_t v48 = v47 + *(int *)(sub_1000DFE10(&qword_1002BBC58) + 48);
  *(void *)uint64_t v48 = v40;
  *(void *)(v48 + 8) = v42;
  *(_BYTE *)(v48 + swift_weakDestroy(v0 + 16) = v30;
  *(void *)(v48 + 24) = v44;
  sub_1000EC004(v40, v42, v30);
  swift_bridgeObjectRetain(v44);
  sub_1000E03B4(v46, &qword_1002BBC50);
  sub_1000EC044(v40, v42, v30);
  swift_bridgeObjectRelease(v44);
  return sub_1000E03B4((uint64_t)v12, &qword_1002BBC50);
}

uint64_t sub_100150EC4@<X0>(uint64_t a1@<X8>)
{
  return sub_100152628( (uint64_t (*)(void))&static VerticalAlignment.center.getter,  0x4020000000000000LL,  &qword_1002BBC48,  (uint64_t (*)(void))sub_100150A90,  a1);
}

uint64_t sub_100150EE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BBBC8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BBBD0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v12 = (char *)*v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECE18);
  uint64_t v25 = v12;
  uint64_t v14 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, KeyPath, v14);
  swift_release(KeyPath);
  uint64_t v15 = *(void **)&v12[OBJC_IVAR___TVMGroupSessionManager__currentSession];
  if (v15)
  {
    uint64_t v24 = a1;
    uint64_t v16 = swift_getKeyPath(&unk_1001ECE70);
    uint64_t v25 = v15;
    uint64_t v17 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
    double v18 = v15;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v16, v17);
    __n128 v19 = swift_release(v16);
    if (*(void *)(*(void *)&v18[OBJC_IVAR____TtC7TVMusic12GroupSession__participants] + 16LL)
      || *(void *)(*(void *)&v18[OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8] + 16LL))
    {
      *(void *)uint64_t v6 = static VerticalAlignment.bottom.getter(v19);
      *((void *)v6 + 1) = 0x4038000000000000LL;
      v6[16] = 0;
      uint64_t v20 = sub_1000DFE10(&qword_1002BBBD8);
      sub_100151150((uint64_t)v18, (uint64_t)v1, (uint64_t)&v6[*(int *)(v20 + 44)]);
      uint64_t v21 = sub_1000E0374(&qword_1002BBBE0, &qword_1002BBBC8, (uint64_t)&protocol conformance descriptor for HStack<A>);
      View.focusSection()(v3, v21);

      sub_1000E03B4((uint64_t)v6, &qword_1002BBBC8);
      a1 = v24;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v24, v11, v7);
      uint64_t v22 = 0LL;
    }

    else
    {

      uint64_t v22 = 1LL;
      a1 = v24;
    }
  }

  else
  {
    uint64_t v22 = 1LL;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, v22, 1LL, v7);
}

uint64_t sub_100151150@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v111 = a3;
  uint64_t v4 = type metadata accessor for ButtonBorderShape(0LL);
  uint64_t v109 = *(void *)(v4 - 8);
  uint64_t v110 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v106 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for SharePlayHeader(0LL);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64LL);
  uint64_t v98 = *(void *)(v7 - 8);
  uint64_t v99 = v8;
  __chkstk_darwin(v7, v9);
  uint64_t v97 = (uint64_t)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BBBE8);
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v108 = v11;
  __chkstk_darwin(v11, v12);
  id v101 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = sub_1000DFE10(&qword_1002BBBF0);
  uint64_t v15 = __chkstk_darwin(v103, v14);
  uint64_t v102 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15, v17);
  uint64_t v105 = (uint64_t)&v84 - v18;
  uint64_t v94 = type metadata accessor for OpacityTransition(0LL);
  uint64_t v96 = *(void *)(v94 - 8);
  __chkstk_darwin(v94, v19);
  uint64_t v91 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v95 = sub_1000DFE10(&qword_1002BBBF8);
  uint64_t v93 = *(void *)(v95 - 8);
  uint64_t v22 = __chkstk_darwin(v95, v21);
  id v92 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  id v90 = (char *)&v84 - v26;
  uint64_t v100 = static HorizontalAlignment.leading.getter(v25);
  uint64_t v89 = static VerticalAlignment.center.getter(v100);
  sub_1001518F8(a1, (uint64_t)&v171);
  uint64_t v27 = v171;
  uint64_t v28 = v172;
  char v29 = v173;
  uint64_t v30 = *(void *)((char *)v174 + 7);
  uint64_t v31 = *(void *)((char *)&v174[1] + 7);
  char v32 = HIBYTE(v174[1]);
  uint64_t v87 = *(void *)((char *)v175 + 7);
  uint64_t v88 = *(void *)((char *)v174 + 15);
  uint64_t v85 = *(void *)((char *)&v175[1] + 7);
  uint64_t v86 = *(void *)((char *)v175 + 15);
  char v33 = HIBYTE(v175[1]);
  uint64_t v84 = *(void *)((char *)&v176 + 7);
  uint64_t v36 = static Font.caption.getter(v34, v35);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECFD0);
  char v115 = 0;
  char v114 = v29;
  char v113 = v32;
  char v112 = v33;
  int v38 = static HierarchicalShapeStyle.secondary.getter();
  *(void *)&__int128 v116 = v89;
  *((void *)&v116 + 1) = 0x4010000000000000LL;
  LOBYTE(v117) = v115;
  *((void *)&v117 + 1) = v27;
  *(void *)&__int128 v118 = v28;
  BYTE8(v118) = v114;
  *(void *)&__int128 v119 = v30;
  *((void *)&v119 + 1) = v88;
  *(void *)&__int128 v120 = v31;
  BYTE8(v120) = v113;
  *(void *)&__int128 v121 = v87;
  *((void *)&v121 + 1) = v86;
  *(void *)&__int128 v122 = v85;
  BYTE8(v12sub_1000E053C(v0 + 2) = v112;
  *(void *)&v123[0] = v84;
  *((void *)&v123[0] + 1) = KeyPath;
  *(void *)&v123[1] = v36;
  DWORD2(v123[1]) = v38;
  __int128 v126 = v118;
  __int128 v127 = v119;
  __int128 v124 = v116;
  __int128 v125 = v117;
  *(_OWORD *)((char *)v131 + 1sub_1000E053C(v0 + 2) = *(_OWORD *)((char *)v123 + 12);
  __int128 v130 = v122;
  v131[0] = v123[0];
  __int128 v128 = v120;
  __int128 v129 = v121;
  v132[0] = v89;
  v132[1] = 0x4010000000000000LL;
  char v133 = v115;
  uint64_t v134 = v27;
  uint64_t v135 = v28;
  char v136 = v114;
  uint64_t v137 = v30;
  uint64_t v138 = v88;
  uint64_t v139 = v31;
  char v140 = v113;
  uint64_t v141 = v87;
  uint64_t v142 = v86;
  uint64_t v143 = v85;
  char v144 = v112;
  uint64_t v145 = v84;
  uint64_t v146 = KeyPath;
  uint64_t v147 = v36;
  int v148 = v38;
  sub_100154390((uint64_t)&v116);
  uint64_t v39 = sub_100154454((uint64_t)v132);
  *(_OWORD *)&v149[103] = v130;
  *(_OWORD *)&v149[87] = v129;
  *(_OWORD *)&v149[39] = v126;
  *(_OWORD *)&v149[23] = v125;
  *(_OWORD *)&v149[119] = v131[0];
  *(_OWORD *)&v149[131] = *(_OWORD *)((char *)v131 + 12);
  *(_OWORD *)&v149[55] = v127;
  char v150 = 0;
  *(_OWORD *)&v149[71] = v128;
  *(_OWORD *)&v149[7] = v124;
  __int128 v157 = *(_OWORD *)&v149[96];
  __int128 v158 = *(_OWORD *)&v149[112];
  v159[0] = *(_OWORD *)&v149[128];
  *(_DWORD *)((char *)v159 + 15) = DWORD2(v131[1]);
  __int128 v153 = *(_OWORD *)&v149[32];
  __int128 v154 = *(_OWORD *)&v149[48];
  __int128 v155 = *(_OWORD *)&v149[64];
  __int128 v156 = *(_OWORD *)&v149[80];
  __int128 v151 = *(_OWORD *)v149;
  __int128 v152 = *(_OWORD *)&v149[16];
  uint64_t v40 = v91;
  uint64_t v41 = OpacityTransition.init()(v39);
  uint64_t v42 = static Animation.easeInOut.getter(v41);
  uint64_t v43 = sub_1000DF308( (unint64_t *)&unk_1002BBC00,  (uint64_t (*)(uint64_t))&type metadata accessor for OpacityTransition,  (uint64_t)&protocol conformance descriptor for OpacityTransition);
  uint64_t v44 = v90;
  uint64_t v45 = v94;
  Transition.animation(_:)(v42, v94, v43);
  __n128 v46 = swift_release(v42);
  uint64_t v47 = v40;
  uint64_t v48 = v45;
  (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v47, v45, v46);
  uint64_t v50 = v92;
  uint64_t v49 = v93;
  uint64_t v51 = v44;
  uint64_t v52 = v44;
  uint64_t v53 = v95;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v92, v51, v95);
  uint64_t v171 = v48;
  uint64_t v172 = v43;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v171,  &opaque type descriptor for <<opaque return type of Transition.animation(_:)>>,  1LL);
  uint64_t v55 = AnyTransition.init<A>(_:)(v50, v53, OpaqueTypeConformance2);
  __int128 v166 = v157;
  __int128 v167 = v158;
  v168[0] = v159[0];
  *(_DWORD *)((char *)v168 + 15) = *(_DWORD *)((char *)v159 + 15);
  __int128 v162 = v153;
  __int128 v163 = v154;
  __int128 v164 = v155;
  __int128 v165 = v156;
  __int128 v160 = v151;
  __int128 v161 = v152;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v53);
  uint64_t v56 = v97;
  sub_10015399C(v104, v97);
  uint64_t v57 = *(unsigned __int8 *)(v98 + 80);
  uint64_t v58 = (v57 + 16) & ~v57;
  uint64_t v59 = swift_allocObject(&unk_1002748E0, v58 + v99, v57 | 7);
  sub_1001538AC(v56, v59 + v58);
  uint64_t v60 = sub_1000DFE10((uint64_t *)&unk_1002B9FC0);
  unint64_t v61 = sub_10011B39C();
  id v62 = v101;
  uint64_t v63 = Button.init(action:label:)(sub_1001545C8, v59, sub_100151DF4, 0LL, v60, v61);
  Swift::String v64 = v106;
  static ButtonBorderShape.capsule.getter(v63);
  uint64_t v65 = swift_getKeyPath(&unk_1001ED060);
  uint64_t v66 = (uint64_t)v102;
  uint64_t v67 = (uint64_t *)&v102[*(int *)(v103 + 36)];
  uint64_t v68 = sub_1000DFE10(&qword_1002B9938);
  uint64_t v70 = v109;
  uint64_t v69 = v110;
  (*(void (**)(char *, char *, uint64_t))(v109 + 16))((char *)v67 + *(int *)(v68 + 28), v64, v110);
  uint64_t *v67 = v65;
  uint64_t v72 = v107;
  uint64_t v71 = v108;
  (*(void (**)(uint64_t, char *, uint64_t))(v107 + 16))(v66, v62, v108);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v64, v69);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v62, v71);
  uint64_t v73 = v105;
  sub_1000E011C(v66, v105, &qword_1002BBBF0);
  sub_1000E04D4(v73, v66, &qword_1002BBBF0);
  uint64_t v74 = v100;
  *(void *)&__int128 v169 = v100;
  *((void *)&v169 + 1) = 0x4000000000000000LL;
  LOBYTE(v170[0]) = 0;
  *(_OWORD *)((char *)&v170[7] + 1) = v167;
  *(_OWORD *)((char *)&v170[6] + 1) = v166;
  *(_OWORD *)((char *)&v170[8] + 1) = v168[0];
  LODWORD(v170[9]) = *(_DWORD *)((char *)v168 + 15);
  *(_OWORD *)((char *)&v170[2] + 1) = v162;
  *(_OWORD *)((char *)&v170[3] + 1) = v163;
  *(_OWORD *)((char *)&v170[4] + 1) = v164;
  *(_OWORD *)((char *)&v170[5] + 1) = v165;
  *(_OWORD *)((char *)v170 + 1) = v160;
  *(_OWORD *)((char *)&v170[1] + 1) = v161;
  *((void *)&v170[9] + 1) = v55;
  __int128 v75 = v170[8];
  uint64_t v76 = v111;
  *(_OWORD *)(v111 + 128) = v170[7];
  *(_OWORD *)(v76 + 144) = v75;
  __int128 v77 = v170[4];
  *(_OWORD *)(v76 + 64) = v170[3];
  *(_OWORD *)(v76 + 80) = v77;
  __int128 v78 = v170[6];
  *(_OWORD *)(v76 + 96) = v170[5];
  *(_OWORD *)(v76 + 11sub_1000E053C(v0 + 2) = v78;
  __int128 v79 = v170[0];
  *(_OWORD *)uint64_t v76 = v169;
  *(_OWORD *)(v76 + swift_weakDestroy(v0 + 16) = v79;
  __int128 v80 = v170[2];
  *(_OWORD *)(v76 + 3sub_1000E053C(v0 + 2) = v170[1];
  *(_OWORD *)(v76 + 48) = v80;
  *(_OWORD *)(v76 + 160) = v170[9];
  *(void *)(v76 + 176) = 0LL;
  *(_BYTE *)(v76 + 184) = 0;
  uint64_t v81 = v76;
  uint64_t v82 = sub_1000DFE10(&qword_1002BBC20);
  sub_1000E04D4(v66, v81 + *(int *)(v82 + 64), &qword_1002BBBF0);
  sub_100154638((uint64_t)&v169);
  sub_1000E03B4(v73, &qword_1002BBBF0);
  sub_1000E03B4(v66, &qword_1002BBBF0);
  __int128 v178 = v166;
  __int128 v179 = v167;
  *(_OWORD *)uint64_t v180 = v168[0];
  v175[0] = v162;
  v175[1] = v163;
  __int128 v176 = v164;
  __int128 v177 = v165;
  v174[0] = v160;
  uint64_t v171 = v74;
  uint64_t v172 = 0x4000000000000000LL;
  char v173 = 0;
  *(_DWORD *)&v180[15] = *(_DWORD *)((char *)v168 + 15);
  v174[1] = v161;
  uint64_t v181 = v55;
  return sub_10015470C((uint64_t)&v171);
}

double sub_1001518F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocalizedStringKey.StringInterpolation(0LL);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(14LL, 1LL);
  v8._countAndFlagsBits = 0LL;
  v8._object = (void *)0xE000000000000000LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECE70);
  uint64_t v53 = a1;
  uint64_t v51 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, KeyPath, v51);
  __n128 v10 = swift_release(KeyPath);
  uint64_t v50 = a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants;
  uint64_t v53 = *(void *)(*(void *)(a1 + OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8) + 16LL);
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)( &v53,  1684827173LL,  0xE400000000000000LL,  &type metadata for Int,  &protocol witness table for Int,  v10);
  v11._countAndFlagsBits = 0x20656C706F655020LL;
  v11._object = (void *)0xEE00657669746341LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v11);
  uint64_t v12 = LocalizedStringKey.init(stringInterpolation:)(v7);
  uint64_t v13 = Text.init(_:tableName:bundle:comment:)(v12);
  uint64_t v48 = v14;
  uint64_t v49 = v13;
  uint64_t v16 = v15;
  LOBYTE(KeyPath) = v17 & 1;
  uint64_t v18 = LocalizedStringKey.init(stringLiteral:)(10649826LL, 0xA300000000000000LL);
  uint64_t v19 = Text.init(_:tableName:bundle:comment:)(v18);
  uint64_t v46 = v20;
  uint64_t v47 = v19;
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(8LL, 1LL);
  v25._countAndFlagsBits = 0LL;
  v25._object = (void *)0xE000000000000000LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
  uint64_t v26 = swift_getKeyPath(&unk_1001ECE70);
  uint64_t v53 = a1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v53, v26, v51);
  __n128 v27 = swift_release(v26);
  uint64_t v53 = *(void *)(*(void *)v50 + 16LL);
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)( &v53,  1684827173LL,  0xE400000000000000LL,  &type metadata for Int,  &protocol witness table for Int,  v27);
  v28._countAndFlagsBits = 0x676E69646E655020LL;
  v28._object = (void *)0xE800000000000000LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v28);
  uint64_t v29 = LocalizedStringKey.init(stringInterpolation:)(v7);
  uint64_t v30 = Text.init(_:tableName:bundle:comment:)(v29);
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  LOBYTE(v53) = KeyPath;
  char v52 = v24;
  LOBYTE(a1) = v35 & 1;
  uint64_t v36 = v49;
  *(void *)a2 = v49;
  *(void *)(a2 + 8) = v16;
  uint64_t v37 = v16;
  uint64_t v45 = v16;
  *(_BYTE *)(a2 + swift_weakDestroy(v0 + 16) = KeyPath;
  char v38 = KeyPath;
  uint64_t v39 = v47;
  uint64_t v40 = v48;
  *(void *)(a2 + 24) = v48;
  *(void *)(a2 + 3sub_1000E053C(v0 + 2) = v39;
  uint64_t v41 = v46;
  *(void *)(a2 + 40) = v46;
  *(_BYTE *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v22;
  *(void *)(a2 + 64) = v30;
  *(void *)(a2 + 7sub_1000E053C(v0 + 2) = v32;
  *(_BYTE *)(a2 + 80) = a1;
  *(void *)(a2 + 88) = v33;
  uint64_t v42 = v36;
  sub_1000EC004(v36, v37, v38);
  swift_bridgeObjectRetain(v40);
  sub_1000EC004(v39, v41, v24);
  swift_bridgeObjectRetain(v22);
  sub_1000EC004(v30, v32, a1);
  swift_bridgeObjectRetain(v34);
  sub_1000EC044(v30, v32, a1);
  swift_bridgeObjectRelease(v34);
  sub_1000EC044(v39, v41, v52);
  swift_bridgeObjectRelease(v22);
  sub_1000EC044(v42, v45, v53);
  *(void *)&double result = swift_bridgeObjectRelease(v40).n128_u64[0];
  return result;
}

uint64_t sub_100151CD8(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for DismissAction(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECE18);
  uint64_t v14 = v7;
  uint64_t v9 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v14, KeyPath, v9);
  swift_release(KeyPath);
  __n128 v10 = *(void **)(v7 + OBJC_IVAR___TVMGroupSessionManager__currentSession);
  if (v10)
  {
    id v11 = v10;
    sub_100143858();
  }

  type metadata accessor for SharePlayHeader(0LL);
  sub_1000E3354((uint64_t)v6);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_100151DF4(uint64_t a1@<X8>)
{
  uint64_t v2 = LocalizedStringKey.init(stringLiteral:)(6581829LL, 0xE300000000000000LL);
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8 & 1;
  uint64_t v10 = static Font.caption.getter(v3, v4);
  uint64_t v12 = Font.bold()(v10, v11);
  swift_release(v10);
  uint64_t v13 = Text.font(_:)(v12, v3, v5, v9, v7);
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release(v12);
  sub_1000EC044(v3, v5, v9);
  __n128 v20 = swift_bridgeObjectRelease(v7);
  LOBYTE(v3) = static Edge.Set.vertical.getter(v20);
  double v21 = EdgeInsets.init(_all:)(7.0);
  *(void *)a1 = v13;
  *(void *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v19;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = v3;
  *(double *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v23;
  *(void *)(a1 + 64) = v24;
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = 0;
}

uint64_t sub_100151F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v1 = sub_1000DFE10(&qword_1002BBBA0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (uint64_t *)((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v5 = sub_1000DFE10(&qword_1002BBBA8);
  __chkstk_darwin(v5, v6);
  char v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002BBBB0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (uint64_t *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v44 = sub_1000DFE10(&qword_1002BBBB8);
  uint64_t v14 = __chkstk_darwin(v44, v13);
  char v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v14, v17);
  uint64_t v47 = (uint64_t)&v42 - v18;
  uint64_t v19 = Image.init(systemName:)(0x616C706572616873LL, 0xE900000000000079LL);
  uint64_t v20 = static Font.largeTitle.getter();
  uint64_t v22 = Font.bold()(v20, v21);
  swift_release(v20);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECFD0);
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v24 = type metadata accessor for SymbolRenderingMode(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56LL))(v8, 0LL, 1LL, v24);
  uint64_t v25 = swift_getKeyPath(&unk_1001ED000);
  sub_1000E04D4((uint64_t)v8, (uint64_t)v4 + *(int *)(v1 + 28), &qword_1002BBBA8);
  *uint64_t v4 = v25;
  sub_1000E04D4((uint64_t)v4, (uint64_t)v12 + *(int *)(v9 + 36), &qword_1002BBBA0);
  *uint64_t v12 = v19;
  v12[1] = KeyPath;
  v12[2] = v22;
  swift_retain(v19);
  swift_retain(KeyPath);
  swift_retain(v22);
  sub_1000E03B4((uint64_t)v4, &qword_1002BBBA0);
  sub_1000E03B4((uint64_t)v8, &qword_1002BBBA8);
  swift_release(v22);
  swift_release(KeyPath);
  __n128 v26 = swift_release(v19);
  LODWORD(v2sub_1000E053C(v0 + 2) = static HierarchicalShapeStyle.primary.getter(v26);
  uint64_t v46 = v16;
  sub_1000E04D4((uint64_t)v12, (uint64_t)v16, &qword_1002BBBB0);
  *(_DWORD *)&v16[*(int *)(v44 + 36)] = v22;
  sub_1000E03B4((uint64_t)v12, &qword_1002BBBB0);
  uint64_t v27 = v47;
  uint64_t v28 = sub_1000E011C((uint64_t)v16, v47, &qword_1002BBBB8);
  uint64_t v44 = static HorizontalAlignment.center.getter(v28);
  sub_100152318((uint64_t)v48);
  uint64_t v29 = v48[0];
  uint64_t v30 = v48[1];
  LOBYTE(KeyPath) = v49;
  uint64_t v31 = v50;
  uint64_t v32 = v51;
  uint64_t v33 = v52;
  LOBYTE(v19) = v53;
  uint64_t v43 = v54;
  uint64_t v34 = swift_getKeyPath(&unk_1001ED030);
  uint64_t v35 = v27;
  uint64_t v36 = (uint64_t)v46;
  sub_1000E04D4(v35, (uint64_t)v46, &qword_1002BBBB8);
  uint64_t v37 = v36;
  uint64_t v38 = v45;
  sub_1000E04D4(v37, v45, &qword_1002BBBB8);
  uint64_t v39 = v38 + *(int *)(sub_1000DFE10(&qword_1002BBBC0) + 48);
  uint64_t v40 = v43;
  *(void *)uint64_t v39 = v44;
  *(void *)(v39 + 8) = 0LL;
  *(_BYTE *)(v39 + swift_weakDestroy(v0 + 16) = 1;
  *(void *)(v39 + 24) = v29;
  *(void *)(v39 + 3sub_1000E053C(v0 + 2) = v30;
  *(_BYTE *)(v39 + 40) = KeyPath;
  *(void *)(v39 + 48) = v31;
  *(void *)(v39 + 56) = v32;
  *(void *)(v39 + 64) = v33;
  *(_BYTE *)(v39 + 7sub_1000E053C(v0 + 2) = v19;
  *(void *)(v39 + 80) = v40;
  *(void *)(v39 + 88) = v34;
  *(_BYTE *)(v39 + 96) = 1;
  sub_1000EC004(v29, v30, KeyPath);
  swift_bridgeObjectRetain(v31);
  sub_1000EC004(v32, v33, v19);
  swift_bridgeObjectRetain(v40);
  swift_retain(v34);
  sub_1000E03B4(v47, &qword_1002BBBB8);
  sub_1000EC044(v29, v30, KeyPath);
  swift_bridgeObjectRelease(v31);
  sub_1000EC044(v32, v33, v19);
  swift_release(v34);
  swift_bridgeObjectRelease(v40);
  return sub_1000E03B4((uint64_t)v46, &qword_1002BBBB8);
}

double sub_100152318@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015LL, 0x80000001002279C0LL);
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8 & 1;
  uint64_t v10 = static Font.title3.getter(v3, v4);
  uint64_t v12 = Font.bold()(v10, v11);
  swift_release(v10);
  uint64_t v13 = Text.font(_:)(v12, v3, v5, v9, v7);
  uint64_t v15 = v14;
  LOBYTE(v10) = v16;
  uint64_t v18 = v17;
  swift_release(v12);
  uint64_t v19 = v10 & 1;
  sub_1000EC044(v3, v5, v9);
  __n128 v20 = swift_bridgeObjectRelease(v7);
  v54[0] = static HierarchicalShapeStyle.primary.getter(v20);
  uint64_t v21 = Text.foregroundStyle<A>(_:)( v54,  v13,  v15,  v19,  v18,  &type metadata for HierarchicalShapeStyle,  &protocol witness table for HierarchicalShapeStyle);
  uint64_t v50 = v22;
  uint64_t v51 = v21;
  uint64_t v52 = v23;
  char v49 = v24 & 1;
  sub_1000EC044(v13, v15, v19);
  swift_bridgeObjectRelease(v18);
  uint64_t v25 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000017LL, 0x80000001002279E0LL);
  uint64_t v26 = Text.init(_:tableName:bundle:comment:)(v25);
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31 & 1;
  uint64_t v33 = static Font.body.getter(v26, v27);
  uint64_t v34 = Text.font(_:)(v33, v26, v28, v32, v30);
  uint64_t v36 = v35;
  LOBYTE(v7) = v37;
  uint64_t v39 = v38;
  swift_release(v33);
  uint64_t v40 = v7 & 1;
  sub_1000EC044(v26, v28, v32);
  __n128 v41 = swift_bridgeObjectRelease(v30);
  v53[0] = static HierarchicalShapeStyle.secondary.getter(v41);
  uint64_t v42 = Text.foregroundStyle<A>(_:)( v53,  v34,  v36,  v40,  v39,  &type metadata for HierarchicalShapeStyle,  &protocol witness table for HierarchicalShapeStyle);
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  LOBYTE(v30) = v47 & 1;
  sub_1000EC044(v34, v36, v40);
  swift_bridgeObjectRelease(v39);
  *(void *)a1 = v51;
  *(void *)(a1 + 8) = v50;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v49;
  *(void *)(a1 + 24) = v52;
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v42;
  *(void *)(a1 + 40) = v44;
  *(_BYTE *)(a1 + 48) = v30;
  *(void *)(a1 + 56) = v46;
  sub_1000EC004(v51, v50, v49);
  swift_bridgeObjectRetain(v52);
  sub_1000EC004(v42, v44, v30);
  swift_bridgeObjectRetain(v46);
  sub_1000EC044(v42, v44, v30);
  swift_bridgeObjectRelease(v46);
  sub_1000EC044(v51, v50, v49);
  *(void *)&double result = swift_bridgeObjectRelease(v52).n128_u64[0];
  return result;
}

uint64_t sub_100152608@<X0>(uint64_t a1@<X8>)
{
  return sub_100152628( (uint64_t (*)(void))&static HorizontalAlignment.center.getter,  0x403E000000000000LL,  &qword_1002BBB98,  (uint64_t (*)(void))sub_100151F28,  a1);
}

uint64_t sub_100152628@<X0>( uint64_t (*a1)(void)@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1();
  *(void *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + swift_weakDestroy(v0 + 16) = 0;
  sub_1000DFE10(a3);
  return a4();
}

uint64_t sub_100152678@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BBA10);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BBA18);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BBA20);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter(v13);
  *((void *)v6 + 1) = 0LL;
  v6[16] = 0;
  uint64_t v16 = sub_1000DFE10(&qword_1002BBA28);
  uint64_t v17 = sub_100152850(v1, (uint64_t)&v6[*(int *)(v16 + 44)]);
  uint64_t v18 = static SafeAreaRegions.all.getter(v17);
  char v19 = static Edge.Set.all.getter(v18);
  sub_1000E04D4((uint64_t)v6, (uint64_t)v10, &qword_1002BBA10);
  __n128 v20 = &v10[*(int *)(v7 + 36)];
  *(void *)__n128 v20 = v18;
  v20[8] = v19;
  sub_1000E03B4((uint64_t)v6, &qword_1002BBA10);
  sub_1000E04D4((uint64_t)v10, (uint64_t)v15, &qword_1002BBA18);
  uint64_t v21 = (void (**)())&v15[*(int *)(v11 + 36)];
  *uint64_t v21 = sub_100153758;
  v21[1] = 0LL;
  v21[2] = 0LL;
  v21[3] = 0LL;
  sub_1000E03B4((uint64_t)v10, &qword_1002BBA18);
  sub_1000E04D4((uint64_t)v15, a1, &qword_1002BBA20);
  uint64_t v22 = (void *)(a1 + *(int *)(sub_1000DFE10(&qword_1002BBA30) + 36));
  *uint64_t v22 = 0LL;
  v22[1] = 0LL;
  v22[2] = sub_100153768;
  v22[3] = 0LL;
  return sub_1000E03B4((uint64_t)v15, &qword_1002BBA20);
}

void *sub_100152850@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = sub_1000DFE10(&qword_1002BBA38);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = sub_1000DFE10(&qword_1002BBA40);
  __chkstk_darwin(v82, v7);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v83 = sub_1000DFE10(&qword_1002BBA48);
  __chkstk_darwin(v83, v10);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v84 = sub_1000DFE10(&qword_1002BBA50);
  uint64_t v14 = __chkstk_darwin(v84, v13);
  uint64_t v79 = (uint64_t)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  char v19 = (char *)&v77 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v85 = (uint64_t)&v77 - v22;
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter(v21);
  *((void *)v6 + 1) = 0LL;
  v6[16] = 0;
  uint64_t v23 = sub_1000DFE10((uint64_t *)&unk_1002BBA58);
  uint64_t v24 = sub_100152EEC(a1, (uint64_t)&v6[*(int *)(v23 + 44)]);
  uint64_t v80 = static Animation.easeIn.getter(v24);
  uint64_t v25 = (char *)*a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECE18);
  *(void *)&v97[0] = v25;
  uint64_t v81 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v97, KeyPath, v81);
  swift_release(KeyPath);
  uint64_t v27 = *(void **)&v25[OBJC_IVAR___TVMGroupSessionManager__currentSession];
  if (v27)
  {
    uint64_t v28 = swift_getKeyPath(&unk_1001ECE70);
    *(void *)&v97[0] = v27;
    uint64_t v29 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
    uint64_t v30 = v27;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v97, v28, v29);
    swift_release(v28);
    uint64_t v31 = *(void *)&v30[OBJC_IVAR____TtC7TVMusic12GroupSession__participants];
    uint64_t v32 = *(void *)&v30[OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8];
    swift_bridgeObjectRetain(v31);
    swift_bridgeObjectRetain(v32);

    if (*(void *)(v31 + 16))
    {
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v31);
      char v33 = 0;
    }

    else
    {
      uint64_t v35 = *(void *)(v32 + 16);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v31);
      char v33 = v35 == 0;
    }

    uint64_t v34 = v82;
  }

  else
  {
    char v33 = 2;
    uint64_t v34 = v82;
  }

  sub_1000E04D4((uint64_t)v6, (uint64_t)v9, &qword_1002BBA38);
  uint64_t v36 = &v9[*(int *)(v34 + 36)];
  *(void *)uint64_t v36 = v80;
  v36[8] = v33;
  uint64_t v37 = sub_1000E03B4((uint64_t)v6, &qword_1002BBA38);
  uint64_t v38 = static Alignment.center.getter(v37);
  _FrameLayout.init(width:height:alignment:)(v99, 0x4087C00000000000LL, 0LL, 0LL, 1LL, v38, v39);
  sub_1000E04D4((uint64_t)v9, (uint64_t)v12, &qword_1002BBA40);
  uint64_t v40 = &v12[*(int *)(v83 + 36)];
  __int128 v41 = v99[1];
  *(_OWORD *)uint64_t v40 = v99[0];
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + sub_1000E053C(v0 + 2) = v99[2];
  sub_1000E03B4((uint64_t)v9, &qword_1002BBA40);
  char v43 = static Edge.Set.leading.getter(v42);
  double v44 = EdgeInsets.init(_all:)(190.0);
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  sub_1000E04D4((uint64_t)v12, (uint64_t)v19, &qword_1002BBA48);
  uint64_t v51 = &v19[*(int *)(v84 + 36)];
  *uint64_t v51 = v43;
  *((double *)v51 + 1) = v44;
  *((void *)v51 + sub_1000E053C(v0 + 2) = v46;
  *((void *)v51 + 3) = v48;
  *((void *)v51 + 4) = v50;
  v51[40] = 0;
  sub_1000E03B4((uint64_t)v12, &qword_1002BBA48);
  uint64_t v52 = v85;
  sub_1000E011C((uint64_t)v19, v85, &qword_1002BBA50);
  uint64_t v53 = swift_getKeyPath(&unk_1001ECE18);
  *(void *)&v97[0] = v25;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v97, v53, v81);
  swift_release(v53);
  uint64_t v54 = *(void **)&v25[OBJC_IVAR___TVMGroupSessionManager__currentSession];
  if (!v54)
  {
    id v60 = 0LL;
    goto LABEL_11;
  }

  uint64_t v55 = swift_getKeyPath(&unk_1001ECE48);
  *(void *)&v97[0] = v54;
  uint64_t v56 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  uint64_t v57 = v54;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v97, v55, v56);
  *(void *)&double v58 = swift_release(v55).n128_u64[0];
  double result = *(void **)&v57[OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession];
  if (result)
  {
    id v60 = objc_msgSend(result, "joinToken", v58);

LABEL_11:
    uint64_t v61 = v78;
    *(void *)&v95[0] = 0LL;
    uint64_t v62 = sub_1000DFE10(&qword_1002BBA68);
    uint64_t v63 = State.init(wrappedValue:)(v97, v95, v62);
    __int128 v64 = v97[0];
    uint64_t v65 = static Alignment.center.getter(v63);
    sub_100196E1C( 0.0,  1,  0.0,  1,  INFINITY,  0,  0.0,  1,  (uint64_t)&v86,  0.0,  1,  INFINITY,  0,  v65,  v66,  v60,  (void *)v64,  *((uint64_t *)&v64 + 1));

    swift_release(*((void *)&v64 + 1));
    uint64_t v67 = v79;
    sub_1000E04D4(v52, v79, &qword_1002BBA50);
    sub_1000E04D4(v67, v61, &qword_1002BBA50);
    uint64_t v68 = *(int *)(sub_1000DFE10((uint64_t *)&unk_1002BBA70) + 48);
    __int128 v69 = v93;
    v95[6] = v92;
    v95[7] = v93;
    __int128 v70 = v91;
    __int128 v71 = v90;
    v95[4] = v90;
    void v95[5] = v91;
    __int128 v72 = v88;
    __int128 v73 = v89;
    v95[2] = v88;
    v95[3] = v89;
    __int128 v74 = v87;
    __int128 v75 = v86;
    v95[0] = v86;
    v95[1] = v87;
    uint64_t v76 = v61 + v68;
    *(_OWORD *)(v76 + 96) = v92;
    *(_OWORD *)(v76 + 11sub_1000E053C(v0 + 2) = v69;
    *(_OWORD *)(v76 + 3sub_1000E053C(v0 + 2) = v72;
    *(_OWORD *)(v76 + 48) = v73;
    *(_OWORD *)(v76 + 64) = v71;
    *(_OWORD *)(v76 + 80) = v70;
    uint64_t v96 = v94;
    *(void *)(v76 + 128) = v94;
    *(_OWORD *)uint64_t v76 = v75;
    *(_OWORD *)(v76 + swift_weakDestroy(v0 + 16) = v74;
    sub_100153780((uint64_t)v95);
    sub_1000E03B4(v52, &qword_1002BBA50);
    v97[6] = v92;
    v97[7] = v93;
    uint64_t v98 = v94;
    v97[2] = v88;
    v97[3] = v89;
    v97[4] = v90;
    v97[5] = v91;
    v97[0] = v86;
    v97[1] = v87;
    sub_1001537BC((uint64_t)v97);
    return (void *)sub_1000E03B4(v67, &qword_1002BBA50);
  }

  __break(1u);
  return result;
}

uint64_t sub_100152EEC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v3 = sub_1000DFE10(&qword_1002BBA80);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BBA88);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for ContentTransition(0LL);
  uint64_t v110 = *(void *)(v11 - 8);
  uint64_t v111 = v11;
  __chkstk_darwin(v11, v12);
  uint64_t v109 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v108 = sub_1000DFE10(&qword_1002BBA90);
  uint64_t v15 = __chkstk_darwin(v108, v14);
  char v114 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15, v17);
  uint64_t v115 = (uint64_t)&v88 - v18;
  uint64_t v19 = type metadata accessor for Divider(0LL);
  uint64_t v105 = *(void *)(v19 - 8);
  uint64_t v106 = v19;
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v104 = sub_1000DFE10(&qword_1002BBA98);
  uint64_t v24 = __chkstk_darwin(v104, v23);
  char v113 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24, v26);
  uint64_t v116 = (uint64_t)&v88 - v27;
  uint64_t v28 = type metadata accessor for SharePlayHeader(0LL);
  uint64_t v30 = __chkstk_darwin(v28, v29);
  char v112 = (uint64_t *)((char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __chkstk_darwin(v30, v32);
  uint64_t v117 = (uint64_t)&v88 - v33;
  uint64_t v107 = a1;
  uint64_t v34 = (char *)*a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ECE18);
  id v121 = v34;
  uint64_t v36 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v121, KeyPath, v36);
  swift_release(KeyPath);
  uint64_t v37 = *(void **)&v34[OBJC_IVAR___TVMGroupSessionManager__currentSession];
  if (!v37) {
    goto LABEL_8;
  }
  uint64_t v101 = v3;
  uint64_t v102 = v7;
  uint64_t v103 = v6;
  uint64_t v38 = swift_getKeyPath(&unk_1001ECE70);
  id v121 = v37;
  uint64_t v39 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  uint64_t v40 = v37;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v121, v38, v39);
  swift_release(v38);
  if (!*(void *)(*(void *)&v40[OBJC_IVAR____TtC7TVMusic12GroupSession__participants] + 16LL)
    && !*(void *)(*(void *)&v40[OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8] + 16LL))
  {

    uint64_t v7 = v102;
    uint64_t v6 = v103;
    uint64_t v3 = v101;
LABEL_8:
    swift_storeEnumTagMultiPayload(v6, v3, 1LL);
    uint64_t v86 = sub_1000E0374(&qword_1002BBAA0, &qword_1002BBA88, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    unint64_t v87 = sub_100153848();
    return _ConditionalContent<>.init(storage:)(v6, v7, &type metadata for SharePlayParticipantsEmptyView, v86, v87);
  }

  uint64_t v42 = static Alignment.center.getter(v41);
  _FrameLayout.init(width:height:alignment:)(&v128, 0LL, 1LL, 0x406D400000000000LL, 0LL, v42, v43);
  uint64_t v100 = v128;
  int v99 = v129;
  uint64_t v98 = v130;
  int v97 = v131;
  uint64_t v95 = v133;
  uint64_t v96 = v132;
  if (qword_1002B71C0 != -1) {
    swift_once(&qword_1002B71C0, sub_100143D6C);
  }
  double v44 = (void *)qword_1002C5E58;
  uint64_t v45 = (uint64_t)v112;
  *char v112 = qword_1002C5E58;
  uint64_t v46 = (void *)(v45 + *(int *)(v28 + 20));
  *uint64_t v46 = swift_getKeyPath(&unk_1001ECE98);
  uint64_t v47 = sub_1000DFE10(&qword_1002BBAB0);
  swift_storeEnumTagMultiPayload(v46, v47, 0LL);
  sub_1001538AC(v45, v117);
  uint64_t v48 = static Alignment.center.getter(v44);
  uint64_t v50 = _FrameLayout.init(width:height:alignment:)(&v134, 0LL, 1LL, 0x4038000000000000LL, 0LL, v48, v49);
  uint64_t v94 = v134;
  int v93 = v135;
  uint64_t v92 = v136;
  int v91 = v137;
  uint64_t v89 = v139;
  uint64_t v90 = v138;
  Divider.init()(v50);
  id v51 = [(id)objc_opt_self(UIColor) separatorColor];
  uint64_t v52 = Color.init(_:)(v51);
  char v53 = static Edge.Set.all.getter(v52);
  uint64_t v55 = v105;
  uint64_t v54 = v106;
  uint64_t v56 = (uint64_t)v113;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v113, v22, v106);
  uint64_t v57 = v56 + *(int *)(v104 + 36);
  *(void *)uint64_t v57 = v52;
  *(_BYTE *)(v57 + 8) = v53;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v54);
  sub_1000E011C(v56, v116, &qword_1002BBA98);
  sub_1000FF28C((uint64_t)(v107 + 1), (uint64_t)v122);
  id v121 = v40;
  uint64_t v107 = v40;
  uint64_t v58 = static SafeAreaRegions.all.getter(v107);
  char v59 = static Edge.Set.all.getter(v58);
  sub_100110C70((uint64_t)&v121, (uint64_t)v119);
  v119[6] = v58;
  char v120 = v59;
  id v60 = sub_1001538F0(&v121);
  LOBYTE(v58) = static Edge.Set.horizontal.getter(v60);
  double v61 = EdgeInsets.init(_all:)(-30.0);
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  sub_1000E04D4((uint64_t)v119, (uint64_t)&v121, &qword_1002BBAB8);
  v122[56] = v58;
  double v123 = v61;
  uint64_t v124 = v63;
  uint64_t v125 = v65;
  uint64_t v126 = v67;
  char v127 = 0;
  uint64_t v68 = sub_1000E03B4((uint64_t)v119, &qword_1002BBAB8);
  __int128 v69 = v109;
  static ContentTransition.opacity.getter(v68);
  uint64_t v70 = swift_getKeyPath(&unk_1001ECEC8);
  uint64_t v71 = (uint64_t)v114;
  __int128 v72 = (uint64_t *)&v114[*(int *)(v108 + 36)];
  uint64_t v73 = sub_1000DFE10(&qword_1002BBAC0);
  uint64_t v74 = v110;
  uint64_t v75 = v111;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))((char *)v72 + *(int *)(v73 + 28), v69, v111);
  *__int128 v72 = v70;
  sub_1000E04D4((uint64_t)&v121, v71, &qword_1002BBAC8);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v75);
  sub_1000E03B4((uint64_t)&v121, &qword_1002BBAC8);
  uint64_t v76 = v115;
  sub_1000E011C(v71, v115, &qword_1002BBA90);
  sub_10015399C(v117, v45);
  uint64_t v77 = v116;
  sub_1000E04D4(v116, v56, &qword_1002BBA98);
  sub_1000E04D4(v76, v71, &qword_1002BBA90);
  *(void *)uint64_t v10 = 0LL;
  v10[8] = 0;
  *((void *)v10 + sub_1000E053C(v0 + 2) = v100;
  _BYTE v10[24] = v99;
  *((void *)v10 + 4) = v98;
  v10[40] = v97;
  uint64_t v78 = v95;
  *((void *)v10 + 6) = v96;
  *((void *)v10 + 7) = v78;
  uint64_t v79 = (int *)sub_1000DFE10(&qword_1002BBAD0);
  sub_10015399C(v45, (uint64_t)&v10[v79[12]]);
  uint64_t v80 = &v10[v79[16]];
  *(void *)uint64_t v80 = 0LL;
  v80[8] = 0;
  *((void *)v80 + sub_1000E053C(v0 + 2) = v94;
  v80[24] = v93;
  *((void *)v80 + 4) = v92;
  v80[40] = v91;
  uint64_t v81 = v89;
  *((void *)v80 + 6) = v90;
  *((void *)v80 + 7) = v81;
  sub_1000E04D4(v56, (uint64_t)&v10[v79[20]], &qword_1002BBA98);
  sub_1000E04D4(v71, (uint64_t)&v10[v79[24]], &qword_1002BBA90);
  sub_1000E03B4(v71, &qword_1002BBA90);
  sub_1000E03B4(v56, &qword_1002BBA98);
  sub_1001539E0(v45);
  uint64_t v82 = (uint64_t)v103;
  sub_1000E04D4((uint64_t)v10, (uint64_t)v103, &qword_1002BBA88);
  swift_storeEnumTagMultiPayload(v82, v101, 0LL);
  uint64_t v83 = sub_1000E0374(&qword_1002BBAA0, &qword_1002BBA88, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  unint64_t v84 = sub_100153848();
  _ConditionalContent<>.init(storage:)(v82, v102, &type metadata for SharePlayParticipantsEmptyView, v83, v84);

  sub_1000E03B4((uint64_t)v10, &qword_1002BBA88);
  sub_1000E03B4(v76, &qword_1002BBA90);
  sub_1000E03B4(v77, &qword_1002BBA98);
  return sub_1001539E0(v117);
}

void sub_100153758()
{
  byte_1002C5E68 = 1;
}

void sub_100153768()
{
  byte_1002C5E68 = 0;
}

uint64_t sub_100153780(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  swift_retain(*(void *)(a1 + 16));
  id v4 = v2;
  id v5 = v3;
  return a1;
}

uint64_t sub_1001537BC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);

  swift_release(v3);
  return a1;
}

uint64_t type metadata accessor for SharePlayHeader(uint64_t a1)
{
  uint64_t result = qword_1002BBB38;
  if (!qword_1002BBB38) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SharePlayHeader);
  }
  return result;
}

unint64_t sub_100153848()
{
  unint64_t result = qword_1002BBAA8;
  if (!qword_1002BBAA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001ECF80, &type metadata for SharePlayParticipantsEmptyView);
    atomic_store(result, (unint64_t *)&qword_1002BBAA8);
  }

  return result;
}

uint64_t sub_10015388C()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t sub_1001538AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharePlayHeader(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

id *sub_1001538F0(id *a1)
{
  return a1;
}

uint64_t sub_100153924()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100153944()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100153964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001541D8( a1,  a2,  a3,  a4,  (uint64_t (*)(void))&type metadata accessor for ContentTransition,  (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_100153978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001541D8( a1,  a2,  a3,  a4,  (uint64_t (*)(void))&type metadata accessor for ContentTransition,  (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_10015399C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharePlayHeader(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001539E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharePlayHeader(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayParticipantsEmptyView()
{
  return &type metadata for SharePlayParticipantsEmptyView;
}

void **sub_100153A2C(void **a1, void **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  id v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16LL) & ~(unint64_t)v4];
    swift_retain(v5);
  }

  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = v5;
    uint64_t v10 = sub_1000DFE10(&qword_1002BBAB0);
    if (swift_getEnumCaseMultiPayload(v8, v10) == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16LL))(v7, v8, v11);
      uint64_t v12 = v7;
      uint64_t v13 = v10;
      uint64_t v14 = 1LL;
    }

    else
    {
      uint64_t v15 = *v8;
      *uint64_t v7 = *v8;
      swift_retain(v15);
      uint64_t v12 = v7;
      uint64_t v13 = v10;
      uint64_t v14 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v12, v13, v14);
  }

  return a1;
}

double sub_100153B00(id *a1, uint64_t a2)
{
  int v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  uint64_t v5 = sub_1000DFE10(&qword_1002BBAB0);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8LL))(v4, v6);
  }

  else
  {
    *(void *)&double result = swift_release(*v4).n128_u64[0];
  }

  return result;
}

void **sub_100153B78(void **a1, void **a2, uint64_t a3)
{
  int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (uint64_t *)((char *)a1 + v5);
  uint64_t v7 = (uint64_t *)((char *)a2 + v5);
  id v8 = v4;
  uint64_t v9 = sub_1000DFE10(&qword_1002BBAB0);
  if (swift_getEnumCaseMultiPayload(v7, v9) == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16LL))(v6, v7, v10);
    uint64_t v11 = 1LL;
  }

  else
  {
    uint64_t v12 = *v7;
    *uint64_t v6 = *v7;
    swift_retain(v12);
    uint64_t v11 = 0LL;
  }

  swift_storeEnumTagMultiPayload(v6, v9, v11);
  return a1;
}

void **sub_100153C20(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_1000E03B4((uint64_t)a1 + v9, &qword_1002BBAB0);
    uint64_t v12 = sub_1000DFE10(&qword_1002BBAB0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      uint64_t v13 = type metadata accessor for DismissAction(0LL);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16LL))(v10, v11, v13);
      uint64_t v14 = 1LL;
    }

    else
    {
      uint64_t v15 = *v11;
      *uint64_t v10 = *v11;
      swift_retain(v15);
      uint64_t v14 = 0LL;
    }

    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }

  return a1;
}

void *sub_100153CF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1000DFE10(&qword_1002BBAB0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    uint64_t v8 = type metadata accessor for DismissAction(0LL);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32LL))(v5, v6, v8);
    swift_storeEnumTagMultiPayload(v5, v7, 1LL);
  }

  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64LL));
  }

  return a1;
}

void **sub_100153D98(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1000E03B4((uint64_t)a1 + v7, &qword_1002BBAB0);
    uint64_t v10 = sub_1000DFE10(&qword_1002BBAB0);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction(0LL);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32LL))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1LL);
    }

    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64LL));
    }
  }

  return a1;
}

uint64_t sub_100153E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100153E74);
}

uint64_t sub_100153E74(char *a1, uint64_t a2, uint64_t a3)
{
  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }

  else
  {
    uint64_t v8 = sub_1000DFE10(&qword_1002BBAD8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48LL))( &a1[*(int *)(a3 + 20)],  a2,  v8);
  }

uint64_t sub_100153EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100153F00);
}

char *sub_100153F00(char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)double result = (a2 - 1);
  }

  else
  {
    uint64_t v7 = sub_1000DFE10(&qword_1002BBAD8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56LL))( &v5[*(int *)(a4 + 20)],  a2,  a2,  v7);
  }

  return result;
}

void sub_100153F78(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_100153FF0(319LL);
  if (v3 <= 0x3F)
  {
    v4[1] = *(void *)(v2 - 8) + 64LL;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
  }

void sub_100153FF0(uint64_t a1)
{
  if (!qword_1002BBB48)
  {
    uint64_t v2 = type metadata accessor for DismissAction(255LL);
    unint64_t v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002BBB48);
    }
  }

uint64_t sub_100154044()
{
  return sub_10015408C(&qword_1002BBB78, &qword_1002BBA30, (void (*)(void))sub_100154070);
}

uint64_t sub_100154070()
{
  return sub_10015408C(&qword_1002BBB80, &qword_1002BBA20, (void (*)(void))sub_1001540F8);
}

uint64_t sub_10015408C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_1000DEA98(a2);
    a3();
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_1001540F8()
{
  unint64_t result = qword_1002BBB88;
  if (!qword_1002BBB88)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BBA18);
    sub_1000E0374(&qword_1002BBB90, &qword_1002BBA10, (uint64_t)&protocol conformance descriptor for HStack<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BBB88);
  }

  return result;
}

uint64_t sub_10015417C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023D680, 1LL);
}

uint64_t sub_10015418C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023D658, 1LL);
}

uint64_t sub_1001541A4()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_1001541C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001541D8( a1,  a2,  a3,  a4,  (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape,  (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_1001541D8( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0LL);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)&v14 - v10, a1);
  return a6(v11);
}

uint64_t sub_100154254()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100154274(uint64_t a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BBBA8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000E04D4(a1, (uint64_t)v5, &qword_1002BBBA8);
  return EnvironmentValues.symbolRenderingMode.setter(v5);
}

uint64_t sub_1001542F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100154320@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100154348(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_10015436C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_100154390(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  char v5 = *(_BYTE *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 96);
  char v9 = *(_BYTE *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 120);
  sub_1000EC004(*(void *)(a1 + 24), *(void *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_1000EC004(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  sub_1000EC004(v7, v8, v9);
  swift_retain(v10);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  return a1;
}

uint64_t sub_100154454(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  char v5 = *(_BYTE *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 96);
  char v9 = *(_BYTE *)(a1 + 104);
  uint64_t v10 = *(void *)(a1 + 120);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 128);
  sub_1000EC044(*(void *)(a1 + 24), *(void *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_1000EC044(v3, v4, v5);
  swift_bridgeObjectRelease(v6);
  sub_1000EC044(v7, v8, v9);
  swift_release(v10);
  swift_bridgeObjectRelease(v12);
  swift_release(v13);
  return a1;
}

uint64_t sub_100154518()
{
  uint64_t v1 = type metadata accessor for SharePlayHeader(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);

  uint64_t v6 = (void *)(v0 + v4 + *(int *)(v1 + 20));
  uint64_t v7 = sub_1000DFE10(&qword_1002BBAB0);
  if (swift_getEnumCaseMultiPayload(v6, v7) == 1)
  {
    uint64_t v8 = type metadata accessor for DismissAction(0LL);
    (*(void (**)(void *, uint64_t))(*(void *)(v8 - 8) + 8LL))(v6, v8);
  }

  else
  {
    swift_release(*v6);
  }

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1001545C8()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SharePlayHeader(0LL) - 8) + 80LL);
  return sub_100151CD8((uint64_t *)(v0 + ((v1 + 16) & ~v1)));
}

uint64_t sub_1001545F4()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100154614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001541D8( a1,  a2,  a3,  a4,  (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape,  (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_100154638(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  char v5 = *(_BYTE *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  char v9 = *(_BYTE *)(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 152);
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v14 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 168);
  sub_1000EC004(*(void *)(a1 + 48), *(void *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRetain(v2);
  sub_1000EC004(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  sub_1000EC004(v7, v8, v9);
  swift_retain(v10);
  swift_retain(v12);
  swift_bridgeObjectRetain(v13);
  swift_retain(v14);
  return a1;
}

uint64_t sub_10015470C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  char v5 = *(_BYTE *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  char v9 = *(_BYTE *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v13 = *(void *)(a1 + 136);
  uint64_t v14 = *(void *)(a1 + 152);
  uint64_t v10 = *(void *)(a1 + 168);
  sub_1000EC044(*(void *)(a1 + 48), *(void *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRelease(v2);
  sub_1000EC044(v3, v4, v5);
  swift_bridgeObjectRelease(v6);
  sub_1000EC044(v7, v8, v9);
  swift_release(v10);
  swift_release(v12);
  swift_bridgeObjectRelease(v13);
  swift_release(v14);
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayWordmark()
{
  return &type metadata for SharePlayWordmark;
}

uint64_t sub_1001547F4()
{
  return sub_1000E0374(&qword_1002BBC28, &qword_1002BBC30, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

unint64_t sub_100154824()
{
  unint64_t result = qword_1002BBC38;
  if (!qword_1002BBC38)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BBC40);
    v2[0] = sub_1000DEA98(&qword_1002BBBC8);
    v2[1] = sub_1000E0374(&qword_1002BBBE0, &qword_1002BBBC8, (uint64_t)&protocol conformance descriptor for HStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.focusSection()>>, 1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002BBC38);
  }

  return result;
}

uint64_t sub_1001548D0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023D6A8, 1LL);
}

uint64_t sub_1001548E8()
{
  return sub_1000E0374(&qword_1002BBC60, &qword_1002BBC68, (uint64_t)&protocol conformance descriptor for HStack<A>);
}

uint64_t initializeWithCopy for VertexMap(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *((_OWORD *)a2 + 1);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for VertexMap(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  uint64_t v6 = a2[1];
  uint64_t v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for VertexMap(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for VertexMap()
{
  return &type metadata for VertexMap;
}

__n128 sub_100154A10()
{
  xmmword_1002C5E70 = xmmword_1001ED130;
  *(_OWORD *)&qword_1002C5E80 = xmmword_1001ED130;
  __asm { FMOV            V0.2D, #2.0 }

  xmmword_1002C5E90 = (__int128)result;
  return result;
}

uint64_t sub_100154A30(uint64_t a1, uint64_t a2, uint64_t a3, float64_t a4, float64_t a5, __n128 a6, double a7)
{
  double v70 = a6.n128_f64[0];
  if (a1 >= 1 && a2 >= 1)
  {
    uint64_t v75 = a1 + 1;
    if (!__OFADD__(a1, 1LL))
    {
      uint64_t v8 = 0LL;
      double v9 = (double)a1;
      double v10 = (double)a2;
      double v11 = 0.0 / (double)a1;
      uint64_t v12 = a3 + 32;
      uint64_t v64 = a3;
      unint64_t v13 = *(void *)(a3 + 16);
      a6.n128_f64[1] = a7;
      v14.f64[0] = a4;
      v14.f64[1] = a5;
      uint64_t v15 = _swiftEmptyArrayStorage;
      uint64_t v65 = a1 - 1;
      float64x2_t v66 = v14;
      __n128 v67 = a6;
      while (1)
      {
        unint64_t v16 = v8 * v75;
        if (v16 >= v13) {
          goto LABEL_56;
        }
        uint64_t v17 = (double *)(v12 + 16 * v16);
        double v19 = *v17;
        double v18 = v17[1];
        if ((swift_isUniquelyReferenced_nonNull_native(v15) & 1) == 0) {
          uint64_t v15 = sub_10015A4F4(0LL, v15[2] + 1LL, 1, v15);
        }
        unint64_t v21 = v15[2];
        unint64_t v20 = v15[3];
        if (v21 >= v20 >> 1) {
          uint64_t v15 = sub_10015A4F4((void *)(v20 > 1), v21 + 1, 1, v15);
        }
        uint64_t v22 = 0LL;
        uint64_t v76 = v8;
        double v23 = (double)v8 / v10;
        v15[2] = v21 + 1;
        uint64_t v24 = (double *)&v15[5 * v21];
        void v24[4] = v11;
        v24[5] = v23;
        v24[6] = v19 * v70 + a4;
        v24[7] = v18 * a7 + a5;
        v24[8] = 0.5;
        uint64_t v25 = 40 * v21 + 72;
        float64x2_t v27 = v66;
        float64x2_t v26 = (float64x2_t)v67;
        do
        {
          uint64_t v28 = v22 + 1;
          unint64_t v29 = v16 + v22 + 1;
          if (__OFADD__(v16, v22 + 1))
          {
            __break(1u);
LABEL_50:
            __break(1u);
            return (uint64_t)v15;
          }

          if (v29 >= v13) {
            goto LABEL_50;
          }
          float64x2_t v30 = *(float64x2_t *)(v12 + 16 * v29);
          unint64_t v31 = v15[3];
          unint64_t v32 = v21 + v22;
          unint64_t v33 = v32 + 2;
          if (v28 + v21 >= v31 >> 1)
          {
            float64x2_t v63 = v30;
            uint64_t v35 = sub_10015A4F4((void *)(v31 > 1), v32 + 2, 1, v15);
            float64x2_t v30 = v63;
            float64x2_t v27 = v66;
            float64x2_t v26 = (float64x2_t)v67;
            uint64_t v15 = v35;
          }

          v15[2] = v33;
          uint64_t v34 = (float64x2_t *)((char *)v15 + v25);
          v34->f64[0] = (double)v28 / v9;
          v34->f64[1] = v23;
          v34[1] = vaddq_f64(vmulq_f64(v30, v26), v27);
          v34[2].f64[0] = 0.5;
          v25 += 40LL;
          uint64_t v22 = v28;
        }

        while (a1 != v28);
        uint64_t v36 = a2;
        if (v76 == a2)
        {
          uint64_t v37 = 0LL;
          uint64_t v38 = 0LL;
          uint64_t v71 = (a1 + 1);
          uint64_t v39 = (a1 + 2);
          uint64_t v40 = _swiftEmptyArrayStorage;
          uint64_t v41 = v75;
          while (v38 != v36)
          {
            uint64_t v42 = v75 * v38;
            if (v42 < 0) {
              goto LABEL_64;
            }
            if (v42 == 0xFFFFFFFFLL) {
              goto LABEL_63;
            }
            uint64_t v43 = v42 + a1;
            if (__OFADD__(v42, a1)) {
              goto LABEL_60;
            }
            unint64_t v44 = v43 + 2;
            if (__OFADD__(v43, 2LL)) {
              goto LABEL_61;
            }
            if ((v44 & 0x8000000000000000LL) != 0) {
              goto LABEL_64;
            }
            if (HIDWORD(v44)) {
              goto LABEL_63;
            }
            if (v43 < -1)
            {
LABEL_64:
              swift_bridgeObjectRelease(v64);
              _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Negative value is not representable",  35LL,  2LL,  "Swift/Integers.swift",  20LL,  2,  3451LL,  0);
              goto LABEL_65;
            }

            int v45 = v43 + 1;
            uint64_t v73 = v39;
            uint64_t v46 = v38;
            uint64_t v77 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native(v40) & 1) == 0) {
              uint64_t v40 = sub_10015A3E8(0LL, v40[2] + 1LL, 1, v40);
            }
            uint64_t v47 = 0LL;
            uint64_t v38 = v46 + 1;
            uint64_t v48 = v40[2];
            uint64_t v49 = 4 * v48;
            uint64_t v50 = v65;
            uint64_t v51 = v77;
            uint64_t v52 = v73;
            while (1)
            {
              unint64_t v53 = v40[3];
              if (v48 + v47 >= v53 >> 1)
              {
                char v59 = v40;
                uint64_t v60 = v38;
                double v61 = sub_10015A3E8((void *)(v53 > 1), v48 + v47 + 1, 1, v59);
                uint64_t v52 = v73;
                uint64_t v38 = v60;
                uint64_t v51 = v77;
                uint64_t v50 = v65;
                uint64_t v40 = v61;
              }

              v40[2] = v48 + v47 + 1;
              uint64_t v54 = &v40[v49];
              *((_DWORD *)v54 + 8) = v51 + v47;
              *((_DWORD *)v54 + 9) = v51 + v47 + 1;
              *((_DWORD *)v54 + 10) = v52 + v47;
              *((_DWORD *)v54 + 11) = v45;
              v54[6] = 0LL;
              v54[7] = 0LL;
              if (v50 == v47) {
                break;
              }
              unint64_t v55 = v42 + v47 + 1;
              if (__OFADD__(v42, v47 + 1))
              {
                __break(1u);
LABEL_53:
                __break(1u);
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }

              if (HIDWORD(v55) || v55 == 0xFFFFFFFF) {
                goto LABEL_63;
              }
              BOOL v56 = __OFADD__(v55, a1);
              unint64_t v57 = v55 + a1;
              if (v56) {
                goto LABEL_53;
              }
              unint64_t v58 = v57 + 2;
              if (__OFADD__(v57, 2LL)) {
                goto LABEL_54;
              }
              if ((v58 & 0x8000000000000000LL) != 0) {
                goto LABEL_64;
              }
              if (!HIDWORD(v58))
              {
                if (v41 < -1) {
                  goto LABEL_64;
                }
                int v45 = v57 + 1;
                v49 += 4LL;
                ++v47;
                if (!((v57 + 1) >> 32)) {
                  continue;
                }
              }

              goto LABEL_63;
            }

            v41 += v75;
            uint64_t v37 = v51 + v71;
            uint64_t v39 = v52 + v71;
            uint64_t v36 = a2;
            if (v38 == a2) {
              return (uint64_t)v15;
            }
          }

          goto LABEL_58;
        }

        uint64_t v8 = v76 + 1;
        if (__OFADD__(v76, 1LL)) {
          goto LABEL_57;
        }
      }

uint64_t sub_100154F68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BB570);
  uint64_t v3 = sub_1000E0374( (unint64_t *)&qword_1002BBE60,  &qword_1002BB570,  (uint64_t)&protocol conformance descriptor for MusicItemCollection<A>);
  dispatch thunk of Collection.startIndex.getter(&v12, v2, v3);
  dispatch thunk of Collection.endIndex.getter(v11, v2, v3);
  if (v12 == v11[0])
  {
    uint64_t v4 = type metadata accessor for SocialProfile(0LL);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))( a1,  1LL,  1LL,  v4);
  }

  else
  {
    uint64_t v6 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read(v11, &v12, v2, v3);
    uint64_t v8 = v7;
    uint64_t v9 = type metadata accessor for SocialProfile(0LL);
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, v8, v9);
    v6(v11, 0LL);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0LL, 1LL, v9);
  }

uint64_t sub_100155084(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter(15LL, a1, a2);
  }
  else {
    return 0LL;
  }
}

void sub_1001550C4(double a1, double a2)
{
  uint64_t v3 = (double *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize];
  double v4 = *(double *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize];
  double v5 = *(double *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize + 8];
  *uint64_t v3 = a1;
  v3[1] = a2;
  if (v4 == a1 && v5 == a2) {
    return;
  }
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
    }
    else {
      uint64_t v16 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v7);
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v16);
    if (v8) {
      goto LABEL_7;
    }
LABEL_20:
    swift_bridgeObjectRelease(v7);
    [v2 setNeedsLayout];
    return;
  }

  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(v7);
  if (!v8) {
    goto LABEL_20;
  }
LABEL_7:
  if (v8 >= 1)
  {
    uint64_t v9 = 0LL;
    do
    {
      if ((v7 & 0xC000000000000001LL) != 0) {
        uint64_t v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v7);
      }
      else {
        uint64_t v10 = (char *)*(id *)(v7 + 8 * v9 + 32);
      }
      double v11 = v10;
      ++v9;
      double v12 = *v3;
      if (*v3 <= v3[1]) {
        double v12 = v3[1];
      }
      uint64_t v13 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius;
      *(double *)&v10[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius] = v12 * 0.5;
      id v14 = [*(id *)&v10[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView] layer];
      [v14 setCornerRadius:*(double *)&v11[v13]];

      id v15 = [*(id *)&v11[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView] config];
      [v15 setCornerRadius:*(double *)&v11[v13]];
    }

    while (v8 != v9);
    goto LABEL_20;
  }

  __break(1u);
}

void sub_10015528C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_layoutItems];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_layoutItems], v64, 0LL, 0LL);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 16LL);
  double v5 = 0.0;
  if (!v4) {
    goto LABEL_43;
  }
  uint64_t v59 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_focusedItemSpacing;
  uint64_t v60 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSpacing;
  swift_bridgeObjectRetain(v3);
  unint64_t v6 = 0LL;
  uint64_t v7 = 24LL;
  double v61 = v1;
  uint64_t v62 = v3;
  do
  {
    if (v7 != 24)
    {
      if (v6 - 1 >= *(void *)(*(void *)v2 + 16LL))
      {
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }

      double v9 = *(double *)(v3 + v7 + 8);
      uint64_t v10 = (char *)(*(void *)v2 + v7);
      char v11 = *v10;
      if ((*(_BYTE *)(v3 + v7 + 24) & 1) != 0)
      {
        uint64_t v13 = (void *)*((void *)v10 - 2);
        uint64_t v12 = *((void *)v10 - 1);
        if ((*v10 & 1) == 0)
        {
          sub_1001595E8(*((id *)v10 - 2), *((void *)v10 - 1), 0);
          sub_1001595E8(v13, v12, 0);
          id v14 = v13;
          if ([v14 isFocused])
          {
            uint64_t v15 = *(void *)&v1[v59];
            swift_beginAccess(v2, v63, 33LL, 0LL);
            uint64_t v16 = *(char **)v2;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(void *)v2);
            *(void *)uint64_t v2 = v16;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              uint64_t v16 = sub_100140E1C((uint64_t)v16);
              *(void *)uint64_t v2 = v16;
            }

            if (v6 >= *((void *)v16 + 2)) {
              goto LABEL_54;
            }
            double v18 = &v16[v7];
            uint64_t v19 = v15;
            unint64_t v20 = *(void **)&v16[v7 + 8];
            uint64_t v21 = *((void *)v18 + 2);
            char v22 = v18[24];
            *((void *)v18 + 1) = v19;
            *((void *)v18 + sub_1000E053C(v0 + 2) = 0LL;
            v18[24] = 1;
            swift_endAccess(v63);
            char v23 = v22;
            uint64_t v1 = v61;
            sub_100159604(v20, v21, v23);
            [v61 setNeedsLayout];
            sub_100159604(v13, v12, 0);
            sub_100159604(v13, v12, 0);

LABEL_6:
            uint64_t v3 = v62;
            goto LABEL_7;
          }

          sub_100159604(v13, v12, 0);
        }

        double v8 = *(double *)&v1[v60];
        if (v8 != v9)
        {
          swift_beginAccess(v2, v63, 33LL, 0LL);
          unint64_t v32 = *(char **)v2;
          char v33 = swift_isUniquelyReferenced_nonNull_native(*(void *)v2);
          *(void *)uint64_t v2 = v32;
          if ((v33 & 1) == 0)
          {
            unint64_t v32 = sub_100140E1C((uint64_t)v32);
            *(void *)uint64_t v2 = v32;
          }

          if (v6 >= *((void *)v32 + 2)) {
            goto LABEL_53;
          }
          uint64_t v34 = &v32[v7];
          uint64_t v35 = *(void **)&v32[v7 + 8];
          uint64_t v36 = *((void *)v34 + 2);
          char v37 = v34[24];
          *((double *)v34 + 1) = v8;
          *((void *)v34 + sub_1000E053C(v0 + 2) = 0LL;
          v34[24] = 1;
          swift_endAccess(v63);
          char v38 = v37;
          uint64_t v1 = v61;
          sub_100159604(v35, v36, v38);
          [v61 setNeedsLayout];
        }

        sub_100159604(v13, v12, v11);
        sub_100159604(v13, v12, v11);
        goto LABEL_6;
      }

      if ((*v10 & 1) != 0)
      {
        uint64_t v24 = *(void *)(v3 + v7 + 16);
        sub_1001595E8(*(id *)(v3 + v7 + 8), v24, 0);
        sub_1001595E8(*(id *)&v9, v24, 0);
        sub_1001595E8(*(id *)&v9, v24, 0);
        if ([*(id *)&v9 isFocused])
        {
          uint64_t v25 = *(void *)&v1[v59];
          swift_beginAccess(v2, v63, 33LL, 0LL);
          float64x2_t v26 = *(char **)v2;
          char v27 = swift_isUniquelyReferenced_nonNull_native(*(void *)v2);
          *(void *)uint64_t v2 = v26;
          if ((v27 & 1) == 0)
          {
            float64x2_t v26 = sub_100140E1C((uint64_t)v26);
            *(void *)uint64_t v2 = v26;
          }

          if (v6 - 1 >= *((void *)v26 + 2)) {
            goto LABEL_55;
          }
          uint64_t v28 = &v26[v7];
          unint64_t v29 = *(void **)&v26[v7 - 16];
          uint64_t v30 = *((void *)v28 - 1);
          char v31 = *v28;
          *((void *)v28 - sub_1000E053C(v0 + 2) = v25;
          *((void *)v28 - 1) = 0LL;
          *uint64_t v28 = 1;
          swift_endAccess(v63);
          sub_100159604(v29, v30, v31);
          uint64_t v1 = v61;
          [v61 setNeedsLayout];
          sub_100159604(*(id *)&v9, v24, 0);
          sub_100159604(*(id *)&v9, v24, 0);

          goto LABEL_6;
        }

        sub_100159604(*(id *)&v9, v24, 0);
        sub_100159604(*(id *)&v9, v24, 0);
      }
    }

void sub_100155850(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews;
  unint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
  swift_bridgeObjectRetain(v4);
  unsigned __int8 v5 = sub_100159B88(a1, v4);
  swift_bridgeObjectRelease(v4);
  if ((v5 & 1) != 0) {
    return;
  }
  uint64_t v40 = v3;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v10 = a1;
    }
    else {
      uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v6) {
      goto LABEL_14;
    }
  }

  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v6) {
      goto LABEL_14;
    }
  }

  if (v6 < 1)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    return;
  }

  for (uint64_t i = 0LL; i != v6; ++i)
  {
    if ((a1 & 0xC000000000000001LL) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
    }
    else {
      id v8 = *(id *)(a1 + 8 * i + 32);
    }
    double v9 = v8;
    [v8 removeFromSuperview];
  }

char *sub_100155CDC(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v4);
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_maxWidth] = 0x7FF0000000000000LL;
  *(int64x2_t *)&v4[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize] = vdupq_n_s64(0x4054000000000000uLL);
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_scaleSizeIncrease] = 0x403E000000000000LL;
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSpacing] = 0xC038000000000000LL;
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_focusedItemSpacing] = 0x402C000000000000LL;
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_footerView] = 0LL;
  uint64_t v10 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupRowView;
  id v11 = objc_allocWithZone(&OBJC_CLASS___UIView);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews] = &_swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_layoutItems] = &_swiftEmptyArrayStorage;

  v16.receiver = v12;
  v16.super_class = ObjectType;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  [v13 setInsetsLayoutMarginsFromSafeArea:0];
  uint64_t v14 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupRowView;
  objc_msgSend( *(id *)&v13[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupRowView],  "setLayoutMargins:",  UIEdgeInsetsZero.top,  UIEdgeInsetsZero.left,  UIEdgeInsetsZero.bottom,  UIEdgeInsetsZero.right);
  [v13 addSubview:*(void *)&v13[v14]];

  return v13;
}

void sub_100155EB0()
{
  uint64_t v1 = v0;
  v143.receiver = v0;
  v143.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v143, "layoutSubviews");
  id v2 = [v0 traitCollection];
  id v137 = [v2 layoutDirection];

  uint64_t v3 = (unint64_t *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_layoutItems];
  swift_beginAccess(&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_layoutItems], v142, 0LL, 0LL);
  uint64_t v130 = v3;
  unint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 16);
  if (v5)
  {
    if (v5 == 1)
    {
      uint64_t v6 = 0LL;
      double v7 = 0.0;
    }

    else
    {
      uint64_t v6 = v5 & 0x7FFFFFFFFFFFFFFELL;
      id v8 = (unsigned __int8 *)(v4 + 72);
      double v7 = 0.0;
      uint64_t v9 = v5 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        uint64_t v10 = (double *)(v8 - 40);
        id v11 = (double *)(v8 - 16);
        int v12 = *(v8 - 24);
        int v14 = *v8;
        v8 += 48;
        int v13 = v14;
        if (!v12) {
          uint64_t v10 = (double *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize];
        }
        if (!v13) {
          id v11 = (double *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize];
        }
        double v7 = v7 + *v10 + *v11;
        v9 -= 2LL;
      }

      while (v9);
      if (v5 == v6) {
        goto LABEL_17;
      }
    }

    uint64_t v15 = v5 - v6;
    uint64_t v16 = v4 + 24 * v6 + 32;
    do
    {
      if (*(_BYTE *)(v16 + 16)) {
        uint64_t v17 = (double *)v16;
      }
      else {
        uint64_t v17 = (double *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize];
      }
      double v7 = v7 + *v17;
      v16 += 24LL;
      --v15;
    }

    while (v15);
  }

  else
  {
    double v7 = 0.0;
  }

void sub_100156A40(void *a1, void *a2)
{
  v17.receiver = v2;
  v17.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v17, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  sub_10015528C();
  uint64_t v5 = swift_allocObject(&unk_100274BE0, 32LL, 7LL);
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = v2;
  *(void *)(v5 + 24) = a1;
  uint64_t v15 = sub_10015DAD8;
  uint64_t v16 = v5;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  int v13 = sub_1000FA280;
  int v14 = &unk_100274BF8;
  uint64_t v6 = _Block_copy(&v11);
  uint64_t v7 = v16;
  id v8 = v2;
  id v9 = a1;
  swift_release(v7);
  uint64_t v15 = (id (*)())nullsub_46;
  uint64_t v16 = 0LL;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  int v13 = sub_1000FA280;
  int v14 = &unk_100274C20;
  uint64_t v10 = _Block_copy(&v11);
  [a2 addCoordinatedAnimations:v6 completion:v10];
  _Block_release(v10);
  _Block_release(v6);
}

id sub_100156B74(char *a1, void *a2)
{
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_footerView];
  if (v3)
  {
    id v5 = v3;
    id v6 = [a2 nextFocusedView];
    if (!v6
      || (uint64_t v7 = v6,
          unsigned __int8 v8 = [v6 isDescendantOfView:a1],
          v7,
          double v9 = 0.0,
          (v8 & 1) == 0))
    {
      double v9 = 1.0;
    }

    [v5 setAlpha:v9];
  }

  return [a1 layoutIfNeeded];
}

id sub_100156C80(double a1, double a2)
{
  id result = *(id *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_footerView];
  if (result) {
    id result = objc_msgSend(result, "sizeThatFits:", a1, a2);
  }
  uint64_t v4 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews;
  uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
    }
    else {
      uint64_t v9 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews]);
    _CocoaArrayWrapper.endIndex.getter(v9);
    id result = (id)swift_bridgeObjectRelease(v5);
    uint64_t v5 = *(void *)&v2[v4];
  }

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v10 = v5;
    }
    else {
      uint64_t v10 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    id result = (id)swift_bridgeObjectRelease(v5);
  }

  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if (v6 == 2) {
    goto LABEL_11;
  }
  uint64_t v7 = *(void *)&v2[v4];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0) {
      uint64_t v11 = *(void *)&v2[v4];
    }
    else {
      uint64_t v11 = v7 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&v2[v4]);
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter(v11);
    id result = (id)swift_bridgeObjectRelease(v7);
    if (v12 < 3) {
      goto LABEL_11;
    }
  }

  else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10) < 3)
  {
LABEL_11:
    objc_msgSend(v2, "layoutMargins", v15, v16);
    [v2 layoutMargins];
    [v2 layoutMargins];
    return [v2 layoutMargins];
  }

  uint64_t v8 = *(void *)&v2[v4];
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0) {
      uint64_t v13 = *(void *)&v2[v4];
    }
    else {
      uint64_t v13 = v8 & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSpacing];
    uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_focusedItemSpacing];
    swift_bridgeObjectRetain(*(void *)&v2[v4]);
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter(v13);
    id result = (id)swift_bridgeObjectRelease(v8);
    if (!__OFSUB__(v14, 3LL)) {
      goto LABEL_11;
    }
  }

  else if (!__OFSUB__(*(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10), 3LL))
  {
    goto LABEL_11;
  }

  __break(1u);
  return result;
}

uint64_t type metadata accessor for TVMLMonogramRow()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic15TVMLMonogramRow);
}

unint64_t sub_100156FD0()
{
  return 0xD000000000000012LL;
}

unint64_t sub_100156FEC(void *a1)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BBD68);
  __chkstk_darwin(v3, v4);
  uint64_t v211 = (char *)&v204 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000DFE10(&qword_1002BBD70);
  uint64_t v213 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v212 = (char *)&v204 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView;
  id v10 = objc_allocWithZone(&OBJC_CLASS___UIView);
  uint64_t v11 = v1;
  *(void *)&v1[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView;
  *(void *)&v11[v12] = objc_msgSend( objc_allocWithZone(_UIStackedImageContainerView),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v11[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius] = 0x4044000000000000LL;
  *(void *)&v11[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imagePublisher] = 0LL;
  *(void *)&v11[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_footerView] = 0LL;
  *(void *)&v11[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_element] = a1;
  unint64_t v13 = a1;

  uint64_t v14 = (objc_class *)type metadata accessor for TVMLMonogramRow.LockupView();
  v224.receiver = v11;
  v224.super_class = v14;
  id v15 = objc_msgSendSuper2(&v224, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  id v16 = [(id)v13 attributes];
  uint64_t v214 = v6;
  if (v16)
  {
    uint64_t v18 = v16;
    uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v16,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

    if (*(void *)(v19 + 16))
    {
      unint64_t v20 = sub_10013CD08(0xD000000000000011LL, 0x8000000100227C90LL);
      if ((v21 & 1) != 0)
      {
        uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 16 * v20 + 8);
        swift_bridgeObjectRetain(v22);
        swift_bridgeObjectRelease(v19);
        NSString v23 = String._bridgeToObjectiveC()();
        unint64_t v17 = swift_bridgeObjectRelease(v22).n128_u64[0];
        goto LABEL_7;
      }
    }

    unint64_t v17 = swift_bridgeObjectRelease(v19).n128_u64[0];
  }

  NSString v23 = 0LL;
LABEL_7:
  objc_msgSend(v15, "setAccessibilityLabel:", v23, *(double *)&v17);

  [v15 setAccessibilityTraits:UIAccessibilityTraitButton];
  uint64_t v24 = (char *)v15;
  id v25 = [(id)v13 attributes];
  NSString v27 = v25;
  if (v25)
  {
    uint64_t v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v25,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

    if (*(void *)(v28 + 16) && (unint64_t v29 = sub_10013CD08(0xD000000000000011LL, 0x8000000100227C70LL), (v30 & 1) != 0))
    {
      uint64_t v31 = *(void *)(*(void *)(v28 + 56) + 16 * v29 + 8);
      swift_bridgeObjectRetain(v31);
      swift_bridgeObjectRelease(v28);
      NSString v27 = String._bridgeToObjectiveC()();
      unint64_t v26 = swift_bridgeObjectRelease(v31).n128_u64[0];
    }

    else
    {
      unint64_t v26 = swift_bridgeObjectRelease(v28).n128_u64[0];
      NSString v27 = 0LL;
    }
  }

  objc_msgSend(v24, "setAccessibilityHint:", v27, *(double *)&v26);

  object = (char *)OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView;
  id v33 = *(id *)&v24[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView];
  [v24 bounds];
  objc_msgSend(v33, "setFrame:");

  CGFloat v34 = *(void **)&object[(void)v24];
  [v34 setAutoresizingMask:18];
  [v34 setTranslatesAutoresizingMaskIntoConstraints:1];
  [v24 addSubview:v34];
  id v35 = [v34 layer];
  uint64_t v36 = objc_opt_self(&OBJC_CLASS____UIStackedImageContainerLayer);
  uint64_t v37 = swift_dynamicCastObjCClass(v35, v36);
  v217 = (void *)v37;
  if (v37)
  {
    double v38 = (void *)v37;
    double v39 = *(void **)&v24[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView];
    id v40 = v35;
    id v35 = [v39 layer];
    [v38 _setOverlayLayer:v35];
  }

  double v41 = *(void **)&object[(void)v24];
  double v42 = (void *)objc_opt_self(&OBJC_CLASS____UIStackedImageConfiguration);
  id v43 = v41;
  id v44 = [v42 newStandardConfiguration];
  [v43 setConfig:v44];

  id v45 = [*(id *)&object[(void)v24] config];
  [v45 setDefaultUnfocusedShadowRadius:14.0];

  id v46 = [*(id *)&object[(void)v24] config];
  [v46 setDefaultUnfocusedShadowOpacity:0.12];

  id v47 = [*(id *)&object[(void)v24] config];
  [v47 setDefaultUnfocusedShadowVerticalOffset:2.0];

  id v48 = [*(id *)&object[(void)v24] config];
  [v48 setDefaultFocusedShadowRadius:14.0];

  id v49 = [*(id *)&object[(void)v24] config];
  [v49 setDefaultFocusedShadowOpacity:0.12];

  id v50 = [*(id *)&object[(void)v24] config];
  [v50 setDefaultFocusedShadowVerticalOffset:2.0];

  id v51 = [*(id *)&object[(void)v24] config];
  [v51 setDefaultHighlightedShadowRadius:14.0];

  id v52 = [*(id *)&object[(void)v24] config];
  [v52 setDefaultHighlightedShadowOpacity:0.12];

  id v53 = [*(id *)&object[(void)v24] config];
  [v53 setDefaultHighlightedShadowVerticalOffset:2.0];

  id v54 = [*(id *)&object[(void)v24] config];
  [v54 setScaleSizeIncrease:30.0];

  uint64_t v218 = (char *)OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView;
  id v55 = [*(id *)&v24[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView] layer];
  uint64_t v56 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius;
  [v55 setCornerRadius:*(double *)&v24[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius]];

  id v57 = [*(id *)&object[(void)v24] config];
  [v57 setCornerRadius:*(double *)&v24[v56]];

  id v58 = [objc_allocWithZone(UITapGestureRecognizer) initWithTarget:v24 action:"selectRecognized:"];
  [v58 setDelegate:v24];
  [v24 addGestureRecognizer:v58];
  unint64_t v59 = (unint64_t)[objc_allocWithZone(UILongPressGestureRecognizer) initWithTarget:v24 action:"longPressRecognized:"];
  [(id)v59 setDelegate:v24];
  [(id)v59 setMinimumPressDuration:0.0];
  [v24 addGestureRecognizer:v59];
  id v60 = [(id)v13 childViewElements];
  if (!v60)
  {

    goto LABEL_130;
  }

  double v61 = v60;
  id v215 = v58;
  uint64_t v62 = sub_1000E0418(0LL, &qword_1002B8388, &OBJC_CLASS___TVViewElement_ptr);
  uint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v61, v62);

  if ((unint64_t)v63 >> 62)
  {
LABEL_133:
    if (v63 < 0) {
      uint64_t v201 = v63;
    }
    else {
      uint64_t v201 = v63 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v63);
    uint64_t v64 = _CocoaArrayWrapper.endIndex.getter(v201);
    swift_bridgeObjectRelease(v63);
  }

  else
  {
    uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  id v65 = v217;
  if (!v64)
  {
    swift_bridgeObjectRelease(v63);

    goto LABEL_131;
  }

  id v209 = (id)v59;
  unint64_t v216 = (unint64_t)v24;
  unint64_t v210 = v13;
  unint64_t v219 = v63 & 0xC000000000000001LL;
  uint64_t v66 = TVElementKeyMonogram;
  swift_bridgeObjectRetain(v63);
  uint64_t v67 = 4LL;
  do
  {
    if (v219) {
      uint64_t v68 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v67 - 4, v63);
    }
    else {
      uint64_t v68 = (char *)*(id *)(v63 + 8 * v67);
    }
    uint64_t v24 = v68;
    unint64_t v13 = v67 - 3;
    if (__OFADD__(v67 - 4, 1LL))
    {
      __break(1u);
      goto LABEL_133;
    }

    unint64_t v59 = (unint64_t)[v68 elementName];
    unint64_t inited = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
    uint64_t v71 = v70;

    uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    if (inited == v72 && v71 == v73)
    {
      swift_bridgeObjectRelease(v63);
      swift_bridgeObjectRelease(v71);
      goto LABEL_34;
    }

    unint64_t v59 = v73;
    unint64_t inited = _stringCompareWithSmolCheck(_:_:expecting:)(inited, v71, v72, v73, 0LL);
    swift_bridgeObjectRelease(v71);
    swift_bridgeObjectRelease(v59);
    if ((inited & 1) != 0)
    {
      uint64_t v71 = v63;
LABEL_34:
      swift_bridgeObjectRelease(v71);
      uint64_t v75 = objc_opt_self(&OBJC_CLASS___TVImageElement);
      double v76 = (void *)swift_dynamicCastObjCClass(v24, v75);
      unint64_t v77 = v219;
      if (!v76)
      {

        uint64_t v24 = (char *)v216;
        goto LABEL_97;
      }

      id v78 = v76;
      unint64_t result = (unint64_t)[v76 element];
      if (!result)
      {
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
        return result;
      }

      double v80 = (void *)result;
      id v81 = [(id)result style];

      if (v81)
      {
        id v82 = [v81 valueForStyle:TVViewElementStyleBorderWidth];
        if (v82)
        {
          id v83 = v82;
          _bridgeAnyObjectToAny(_:)(v220);
          swift_unknownObjectRelease(v83);
        }

        else
        {
          memset(v220, 0, sizeof(v220));
        }

        sub_10015C6DC((uint64_t)v220, (uint64_t)&v222);
        if (*((void *)&v223 + 1))
        {
          type metadata accessor for UIEdgeInsets(0LL);
          if ((swift_dynamicCast(v220, &v222, (char *)&type metadata for Any + 8, v84, 6LL) & 1) != 0)
          {
            double v85 = *(double *)v220;
            id v86 = [*(id *)&v218[v216] layer];
            [v86 setBorderWidth:v85 + v85];
LABEL_47:

            id v207 = v81;
            id v87 = objc_msgSend(v81, "tv_borderColor");
            id v88 = [v87 color];

            if (!v88) {
              id v88 = [(id)objc_opt_self(UIColor) whiteColor];
            }
            id v89 = [*(id *)&v218[v216] layer];
            id v90 = [v88 CGColor];
            [v89 setBorderColor:v90];

            id v91 = [v78 attributes];
            id v93 = v91;
            id v208 = v78;
            if (v91)
            {
              uint64_t v94 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v91,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

              uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)(TVAttributeKeyFirstName);
              uint64_t v97 = v96;
              if (*(void *)(v94 + 16) && (unint64_t v98 = sub_10013CD08(v95, v96), (v99 & 1) != 0))
              {
                uint64_t v100 = (uint64_t *)(*(void *)(v94 + 56) + 16 * v98);
                uint64_t v101 = *v100;
                unint64_t v102 = v100[1];
                swift_bridgeObjectRetain(v102);
                swift_bridgeObjectRelease(v97);
                swift_bridgeObjectRelease(v94);
                uint64_t v103 = sub_100155084(v101, v102);
                id v93 = v104;
                unint64_t v105 = v102;
                id v78 = v208;
                unint64_t v92 = swift_bridgeObjectRelease(v105).n128_u64[0];
              }

              else
              {
                swift_bridgeObjectRelease(v97);
                unint64_t v92 = swift_bridgeObjectRelease(v94).n128_u64[0];
                uint64_t v103 = 0LL;
                id v93 = 0LL;
              }
            }

            else
            {
              uint64_t v103 = 0LL;
            }

            id v106 = objc_msgSend(v78, "attributes", *(double *)&v92);
            if (v106)
            {
              double v107 = v106;
              uint64_t v206 = (char *)v103;
              uint64_t v108 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v106,  &type metadata for String,  &type metadata for String,  &protocol witness table for String);

              uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(TVAttributeKeyLastName);
              uint64_t v111 = v110;
              if (*(void *)(v108 + 16) && (unint64_t v112 = sub_10013CD08(v109, v110), (v113 & 1) != 0))
              {
                double v114 = (uint64_t *)(*(void *)(v108 + 56) + 16 * v112);
                uint64_t v116 = *v114;
                unint64_t v115 = v114[1];
                swift_bridgeObjectRetain(v115);
                swift_bridgeObjectRelease(v111);
                swift_bridgeObjectRelease(v108);
                uint64_t v117 = sub_100155084(v116, v115);
                uint64_t v119 = v118;
                swift_bridgeObjectRelease(v115);
                uint64_t v103 = (uint64_t)v206;
                uint64_t v120 = v117;
              }

              else
              {
                swift_bridgeObjectRelease(v111);
                swift_bridgeObjectRelease(v108);
                uint64_t v119 = 0LL;
                uint64_t v103 = (uint64_t)v206;
                uint64_t v120 = 0LL;
              }
            }

            else
            {
              uint64_t v120 = 0LL;
              uint64_t v119 = 0LL;
            }

            uint64_t v121 = sub_1000DFE10(&qword_1002BBD78);
            unint64_t inited = swift_initStackObject(v121, v221);
            *(_OWORD *)(inited + swift_weakDestroy(v0 + 16) = xmmword_1001EBC10;
            *(void *)(inited + 3sub_1000E053C(v0 + 2) = v103;
            *(void *)(inited + 40) = v93;
            *(void *)(inited + 48) = v120;
            *(void *)(inited + 56) = v119;
            uint64_t v122 = v119;
            if (v93)
            {
              uint64_t v205 = v119;
              uint64_t v206 = (char *)v120;
              uint64_t v123 = (void *)v103;
              swift_bridgeObjectRetain(v93);
              uint64_t v124 = sub_10015AFC0(0LL, 1LL, 1, (char *)&_swiftEmptyArrayStorage, (uint64_t *)&unk_1002BBDB0);
              unint64_t v59 = *((void *)v124 + 2);
              unint64_t v125 = *((void *)v124 + 3);
              uint64_t v126 = v124;
              unint64_t v13 = v59 + 1;
              if (v59 < v125 >> 1) {
                goto LABEL_63;
              }
              goto LABEL_140;
            }

            uint64_t v128 = (char *)&_swiftEmptyArrayStorage;
            unint64_t v13 = (unint64_t)v208;
            if (v122) {
              goto LABEL_66;
            }
            goto LABEL_71;
          }

void sub_1001588D8()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [(id)objc_opt_self(NSBundle) bundleWithIdentifier:v0];

  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___UIImage);
  id v4 = [v3 imageNamed:v2 inBundle:v1 withConfiguration:0];

  id v5 = v4;
  if (v4) {
    goto LABEL_4;
  }
  NSString v6 = String._bridgeToObjectiveC()();
  id v5 = [v3 systemImageNamed:v6];

  if (v5)
  {
    id v5 = v5;
LABEL_4:
    id v7 = v4;
    [v5 size];
    double v9 = v8;
    double v11 = v10;

    goto LABEL_5;
  }

  double v11 = 44.0;
  double v9 = 44.0;
LABEL_5:
  id v12 = objc_msgSend(objc_allocWithZone(UIGraphicsImageRenderer), "initWithSize:", v9, v11);
  unint64_t v13 = (double *)swift_allocObject(&unk_100274AF0, 40LL, 7LL);
  v13[2] = v9;
  v13[3] = v11;
  *((void *)v13 + 4) = v5;
  uint64_t v14 = swift_allocObject(&unk_100274B18, 32LL, 7LL);
  *(void *)(v14 + swift_weakDestroy(v0 + 16) = sub_10015C810;
  *(void *)(v14 + 24) = v13;
  v18[4] = sub_1000FF1AC;
  uint64_t v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256LL;
  v18[2] = sub_1000E8E54;
  v18[3] = &unk_100274B30;
  id v15 = _Block_copy(v18);
  uint64_t v16 = v19;
  id v17 = v5;
  swift_retain(v14);
  objc_msgSend(v12, "imageWithActions:", v15, swift_release(v16).n128_f64[0]);

  _Block_release(v15);
  LOBYTE(v1sub_1000E053C(v0 + 2) = swift_isEscapingClosureAtFileLocation(v14, "", 75LL, 428LL, 79LL, 1LL);
  swift_release(v13);
  swift_release(v14);
}

id sub_100158B80(void *a1, void *a2, double a3, double a4)
{
  id v8 = [(id)objc_opt_self(UIColor) whiteColor];
  [v8 setFill];

  id result = objc_msgSend(a1, "fillRect:", 0.0, 0.0, a3, a4);
  if (a2) {
    return objc_msgSend(a2, "drawInRect:blendMode:alpha:", 22, 0.0, 0.0, a3, a4, 1.0);
  }
  return result;
}

void sub_100158C48(void **a1, uint64_t a2)
{
  NSString v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = *(id *)(Strong + OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView);

    if (v2)
    {
      id v7 = v2;
    }

    else
    {
      sub_1001588D8();
      id v7 = v8;
    }

    id v9 = v2;
    [v6 setStackImage:v7];
  }

void *sub_100158D0C(char a1, char a2, uint64_t a3)
{
  v18.receiver = v3;
  v18.super_class = (Class)type metadata accessor for TVMLMonogramRow.LockupView();
  objc_msgSendSuper2(&v18, "setHighlighted:animated:withAnimationCoordinator:", a1 & 1, a2 & 1, a3);
  id result = *(void **)&v3[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_footerView];
  if (result)
  {
    id v8 = [result subviews];
    uint64_t v9 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
    uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0) {
        uint64_t v17 = v10;
      }
      else {
        uint64_t v17 = v10 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v10);
      id result = (void *)_CocoaArrayWrapper.endIndex.getter(v17);
      uint64_t v11 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      id result = (void *)swift_bridgeObjectRetain(v10);
      if (v11)
      {
LABEL_4:
        if (v11 < 1)
        {
          __break(1u);
          return result;
        }

        uint64_t v12 = 0LL;
        uint64_t v13 = a1 & 1;
        uint64_t v14 = a2 & 1;
        do
        {
          if ((v10 & 0xC000000000000001LL) != 0) {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v10);
          }
          else {
            id v15 = *(id *)(v10 + 8 * v12 + 32);
          }
          uint64_t v16 = v15;
          ++v12;
          [v15 setHighlighted:v13 animated:v14 withAnimationCoordinator:a3];
        }

        while (v11 != v12);
      }
    }

    return (void *)swift_bridgeObjectRelease_n(v10, 2LL);
  }

  return result;
}

void *sub_100158EF4(char a1, char a2)
{
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for TVMLMonogramRow.LockupView();
  objc_msgSendSuper2(&v16, "setSelected:animated:", a1 & 1, a2 & 1);
  id result = *(void **)&v2[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_footerView];
  if (result)
  {
    id v6 = [result subviews];
    uint64_t v7 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = v8 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v8);
      id result = (void *)_CocoaArrayWrapper.endIndex.getter(v15);
      uint64_t v9 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }

    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      id result = (void *)swift_bridgeObjectRetain(v8);
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return result;
        }

        uint64_t v10 = 0LL;
        uint64_t v11 = a1 & 1;
        uint64_t v12 = a2 & 1;
        do
        {
          if ((v8 & 0xC000000000000001LL) != 0) {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, v8);
          }
          else {
            id v13 = *(id *)(v8 + 8 * v10 + 32);
          }
          uint64_t v14 = v13;
          ++v10;
          [v13 setSelected:v11 animated:v12];
        }

        while (v9 != v10);
      }
    }

    return (void *)swift_bridgeObjectRelease_n(v8, 2LL);
  }

  return result;
}

void sub_100159124(void *a1)
{
  NSString v2 = (char *)[a1 state];
  if ((unint64_t)(v2 - 3) >= 3)
  {
    [v1 setSelected:1 animated:1];
    id v7 = [*(id *)&v1[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView] layer];
    uint64_t v5 = objc_opt_self(&OBJC_CLASS____UIStackedImageContainerLayer);
    id v6 = (void *)swift_dynamicCastObjCClass(v7, v5);
    if (v6) {
      [v6 setPressed:1 animated:1];
    }
  }

  else
  {
    [v1 setSelected:0 animated:1];
    id v7 = [*(id *)&v1[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView] layer];
    uint64_t v3 = objc_opt_self(&OBJC_CLASS____UIStackedImageContainerLayer);
    id v4 = (void *)swift_dynamicCastObjCClass(v7, v3);
    if (v4) {
      [v4 setPressed:0 animated:1];
    }
  }
}

void sub_100159294(uint64_t a1, void *a2)
{
  v17.receiver = v2;
  v17.super_class = (Class)type metadata accessor for TVMLMonogramRow.LockupView();
  objc_msgSendSuper2(&v17, "didUpdateFocusInContext:withAnimationCoordinator:", a1, a2);
  objc_msgSend( *(id *)&v2[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView],  "setStackFocused:withFocusAnimationCoordinator:",  objc_msgSend(v2, "isFocused"),  a2);
  uint64_t v5 = swift_allocObject(&unk_100274B68, 32LL, 7LL);
  *(void *)(v5 + swift_weakDestroy(v0 + 16) = v2;
  *(void *)(v5 + 24) = a2;
  uint64_t v15 = sub_10015DAD0;
  uint64_t v16 = v5;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  id v13 = sub_1000FA280;
  uint64_t v14 = &unk_100274B80;
  id v6 = _Block_copy(&v11);
  uint64_t v7 = v16;
  uint64_t v8 = v2;
  id v9 = a2;
  swift_release(v7);
  uint64_t v15 = (id (*)())nullsub_46;
  uint64_t v16 = 0LL;
  uint64_t v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256LL;
  id v13 = sub_1000FA280;
  uint64_t v14 = &unk_100274BA8;
  uint64_t v10 = _Block_copy(&v11);
  [v9 addCoordinatedAnimations:v6 completion:v10];
  _Block_release(v10);
  _Block_release(v6);
}

id sub_1001593F0(char *a1, uint64_t a2)
{
  id v4 = *(void **)&a1[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_footerView];
  if (v4)
  {
    id v5 = v4;
    unsigned int v6 = [a1 isFocused];
    double v7 = 0.0;
    if (v6) {
      double v7 = 1.0;
    }
    [v5 setAlpha:v7];
  }

  return objc_msgSend(a1, "setHighlighted:animated:withAnimationCoordinator:", objc_msgSend(a1, "isFocused"), 1, a2);
}

id sub_10015952C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMLMonogramRow.LockupView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TVMLMonogramRow.LockupView()
{
  return objc_opt_self(&OBJC_CLASS____TtCC7TVMusic15TVMLMonogramRow10LockupView);
}

id sub_1001595E8(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return result;
  }
  return result;
}

void destroy for TVMLMonogramRow.LayoutType(uint64_t a1)
{
}

void sub_100159604(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
}
  }

uint64_t _s7TVMusic15TVMLMonogramRowC10LayoutTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_1001595E8(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TVMLMonogramRow.LayoutType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_1001595E8(*(id *)a2, v4, v5);
  unsigned int v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(_BYTE *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  sub_100159604(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TVMLMonogramRow.LayoutType(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  sub_100159604(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TVMLMonogramRow.LayoutType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TVMLMonogramRow.LayoutType( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = 0;
    *(void *)id result = a2 - 255;
    *(void *)(result + 8) = 0LL;
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 17) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFF) {
      *(_BYTE *)(result + 17) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_10015977C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100159784(uint64_t result, char a2)
{
  *(_BYTE *)(result + swift_weakDestroy(v0 + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TVMLMonogramRow.LayoutType()
{
  return &type metadata for TVMLMonogramRow.LayoutType;
}

uint64_t sub_1001597A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = _s12SubscriptionVMa(0LL, v11, v12, v12);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  objc_super v17 = (char *)&v22[-1] - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  id v18 = a2;
  CombineIdentifier.init()();
  *(void *)&v17[*(int *)(v13 + 36)] = v18;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v17, v10, a3);
  v22[3] = v13;
  void v22[4] = swift_getWitnessTable(&unk_1001ED280, v13);
  uint64_t v19 = sub_10015DB08(v22);
  (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v19, v17, v13);
  dispatch thunk of Subscriber.receive(subscription:)(v22, a3, a4);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return sub_1000E053C(v22);
}

uint64_t sub_1001598F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001597A0(a1, *v3, a2, a3);
}

void sub_100159908(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8 = [a1 uiImage];
  id v9 = v8;
  dispatch thunk of Subscriber.receive(_:)(&v9, a5, a6);
}

void sub_10015996C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v8 = *(void (**)(void *, void *, uint64_t))(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  swift_retain(v7);
  id v10 = a2;
  id v9 = a3;
  v8(a2, a3, a4);
  swift_release(v7);
}

id sub_1001599E8(uint64_t a1)
{
  return [*(id *)(v1 + *(int *)(a1 + 36)) cancel];
}

id sub_1001599FC(uint64_t a1, uint64_t a2)
{
  return sub_10015D770(a2, a2);
}

uint64_t sub_100159A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = type metadata accessor for CombineIdentifier(0LL);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16LL))(a2, v4, v5);
}

uint64_t sub_100159A48(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    goto LABEL_7;
  }
  if (!v2 || a1 == a2) {
    goto LABEL_6;
  }
  uint64_t v6 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v7 = a2[5];
  id v8 = (void *)a2[6];
  swift_bridgeObjectRetain(v7);
  swift_unknownObjectRetain(v8);
  swift_bridgeObjectRetain(v6);
  id v9 = (void *)swift_unknownObjectRetain(v5);
  char v10 = sub_10014816C(v9, v8);
  swift_unknownObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  swift_unknownObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  if ((v10 & 1) == 0)
  {
LABEL_7:
    char v11 = 0;
    return v11 & 1;
  }

  if (v2 == 1)
  {
LABEL_6:
    char v11 = 1;
    return v11 & 1;
  }

  uint64_t v13 = v2 - 2;
  uint64_t v14 = (void **)(a2 + 9);
  uint64_t v15 = a1 + 9;
  do
  {
    uint64_t v17 = *(v15 - 1);
    uint64_t v16 = *v15;
    uint64_t v18 = (uint64_t)*(v14 - 1);
    uint64_t v19 = *v14;
    swift_bridgeObjectRetain(v18);
    swift_unknownObjectRetain(v19);
    swift_bridgeObjectRetain(v17);
    unint64_t v20 = (void *)swift_unknownObjectRetain(v16);
    char v11 = sub_10014816C(v20, v19);
    swift_unknownObjectRelease(v16);
    swift_bridgeObjectRelease(v17);
    swift_unknownObjectRelease(v19);
    swift_bridgeObjectRelease(v18);
    BOOL v22 = v13-- != 0;
    if ((v11 & 1) == 0) {
      break;
    }
    v14 += 3;
    v15 += 3;
  }

  while (v22);
  return v11 & 1;
}

id sub_100159B88(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v6 = a2 >> 62;
    if (!(a2 >> 62)) {
      goto LABEL_3;
    }
LABEL_50:
    if (v2 < 0) {
      uint64_t v31 = v2;
    }
    else {
      uint64_t v31 = v2 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v2);
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v2);
    if (v5 == v32) {
      goto LABEL_4;
    }
LABEL_54:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }

  if (a1 < 0) {
    uint64_t v30 = a1;
  }
  else {
    uint64_t v30 = a1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(a1);
  unint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v3);
  unint64_t v6 = (unint64_t)v2 >> 62;
LABEL_3:
  if (v5 != *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
    goto LABEL_54;
  }
LABEL_4:
  if (!v5) {
    goto LABEL_37;
  }
  uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8LL;
  if (v3 < 0) {
    uint64_t v7 = v3;
  }
  if (!v4) {
    uint64_t v7 = (v3 & 0xFFFFFFFFFFFFFF8LL) + 32;
  }
  uint64_t v8 = v2 & 0xFFFFFFFFFFFFFF8LL;
  uint64_t v9 = (v2 & 0xFFFFFFFFFFFFFF8LL) + 32;
  if (v2 < 0) {
    uint64_t v10 = v2;
  }
  else {
    uint64_t v10 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  if (v6) {
    uint64_t v9 = v10;
  }
  if (v7 == v9)
  {
LABEL_37:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }

  if ((v5 & 0x8000000000000000LL) != 0) {
    goto LABEL_60;
  }
  unint64_t v33 = v3 & 0xC000000000000001LL;
  if ((v3 & 0xC000000000000001LL) != 0) {
    goto LABEL_61;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3))
  {
    uint64_t v12 = result;
    if ((v2 & 0xC000000000000001LL) == 0) {
      break;
    }
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v2);
LABEL_21:
    uint64_t v14 = v13;
    type metadata accessor for TVMLMonogramRow.LockupView();
    char v15 = static NSObject.== infix(_:_:)(v12, v14);

    if ((v15 & 1) == 0) {
      goto LABEL_54;
    }
    unint64_t v16 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((v2 | v3) & 0xC000000000000001LL) != 0)
    {
      uint64_t v17 = 0LL;
      unint64_t v18 = v5 - 2;
      while (v16 != v17)
      {
        unint64_t v5 = v17 + 1;
        if (v33) {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v3);
        }
        else {
          id v19 = *(id *)(v3 + 40 + 8 * v17);
        }
        unint64_t v20 = v19;
        if ((v2 & 0xC000000000000001LL) != 0)
        {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 + 1, v2);
        }

        else
        {
          if (v5 >= *(void *)(v8 + 16)) {
            goto LABEL_59;
          }
          id v21 = *(id *)(v2 + 40 + 8 * v17);
        }

        BOOL v22 = v21;
        unint64_t v5 = static NSObject.== infix(_:_:)(v20, v21);

        if ((v5 & 1) != 0 && v18 != v17++) {
          continue;
        }
        return (id)(v5 & 1);
      }

      __break(1u);
    }

    else
    {
      unint64_t v24 = *(void *)(v8 + 16);
      if (v24 <= 1) {
        unint64_t v24 = 1LL;
      }
      unint64_t v25 = v24 - 1;
      unint64_t v26 = (void **)(v3 + 40);
      uint64_t v8 = v2 + 40;
      while (v16)
      {
        if (!v25) {
          goto LABEL_58;
        }
        uint64_t v28 = *v26++;
        NSString v27 = v28;
        unint64_t v29 = *(void **)v8;
        v8 += 8LL;
        uint64_t v2 = v27;
        uint64_t v3 = v29;
        unint64_t v5 = static NSObject.== infix(_:_:)(v2, v3);

        if ((v5 & 1) != 0)
        {
          --v25;
          if (--v16) {
            continue;
          }
        }

        return (id)(v5 & 1);
      }
    }

    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    ;
  }

  if (*(void *)(v8 + 16))
  {
    id v13 = *(id *)(v2 + 32);
    goto LABEL_21;
  }

  __break(1u);
  return result;
}

char *sub_100159E68(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_100159E90(a1, a2, a3, a4, (uint64_t *)&unk_1002B7EC0);
}

char *sub_100159E7C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_100159E90(a1, a2, a3, a4, &qword_1002BBDC0);
}

char *sub_100159E90(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }

  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if (v8 + 0x4000000000000000LL >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      uint64_t v11 = sub_1000DFE10(a5);
      uint64_t v12 = (char *)swift_allocObject(v11, 24 * v10 + 32, 7LL);
      size_t v13 = j__malloc_size(v12);
      *((void *)v12 + sub_1000E053C(v0 + 2) = v9;
      *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
      uint64_t v14 = v12 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[24 * v9 + 32]) {
          memmove(v14, a4 + 32, 24 * v9);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v14 = (char *)&_swiftEmptyArrayStorage + 32;
    }

    sub_10015B664(0LL, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }

  __break(1u);
  return result;
}

void *sub_100159FBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10((uint64_t *)&unk_1002BBDF0);
      uint64_t v11 = (void *)swift_allocObject(v10, 2 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      int64_t v13 = v12 - 32;
      if (v12 < 32) {
        int64_t v13 = v12 - 31;
      }
      v11[2] = v8;
      v11[3] = v13 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015C92C(0LL, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015A0C4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002B9B10);
      uint64_t v11 = (void *)swift_allocObject(v10, (v9 << 6) | 0x20, 15LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 + 31;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 6);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[8 * v8 + 4]) {
          memmove(v14, a4 + 4, v8 << 6);
        }
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015C844(0LL, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015A1D0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE18);
      uint64_t v11 = (void *)swift_allocObject(v10, 4 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 29;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 2);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015CA14(0LL, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015A2DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE10);
      uint64_t v11 = (void *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4]) {
          memmove(v14, a4 + 4, 16 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015CAFC(0LL, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015A3E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE00);
      uint64_t v11 = (void *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4]) {
          memmove(v14, a4 + 4, 32 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015CCD0(0LL, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015A4F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE08);
      uint64_t v11 = (void *)swift_allocObject(v10, 40 * v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      uint64_t v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4]) {
          memmove(v13, a4 + 4, 40 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
    }

    sub_10015CBE4(0LL, v8, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_10015A614(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE20);
      uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 15LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      *((void *)v11 + sub_1000E053C(v0 + 2) = v8;
      *((void *)v11 + 3) = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 32;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32]) {
          memmove(v14, a4 + 32, 16 * v8);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015CAFC(0LL, v8, v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015A720(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBDC8);
      uint64_t v11 = (void *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4]) {
          memmove(v13, a4 + 4, 24 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
    }

    sub_10015CDB8(0LL, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_10015A844(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10((uint64_t *)&unk_1002BBDE0);
      uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      *((void *)v11 + sub_1000E053C(v0 + 2) = v8;
      *((void *)v11 + 3) = 2 * v12 - 64;
      uint64_t v13 = v11 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v8 + 32]) {
          memmove(v13, a4 + 32, v8);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
    }

    sub_10015CFB4(0LL, v8, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_10015A93C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10015B1F0(a1, a2, a3, a4, qword_1002BBE68);
}

char *sub_10015A948(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002B84C0);
      uint64_t v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      *((void *)v11 + sub_1000E053C(v0 + 2) = v8;
      *((void *)v11 + 3) = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 32;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[16 * v8 + 32]) {
          memmove(v14, a4 + 32, 16 * v8);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015D098(0LL, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

uint64_t sub_10015AA54(char a1, int64_t a2, char a3, unint64_t a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
LABEL_29:
        uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division by zero",  16LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14377LL,  0);
LABEL_31:
        __break(1u);
        return result;
      }

      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    uint64_t v7 = a2;
  }

  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    char v15 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }

  uint64_t v10 = sub_1000DFE10(&qword_1002B7F08);
  uint64_t v11 = *(void *)(type metadata accessor for URLQueryItem(0LL) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  char v15 = (void *)swift_allocObject(v10, v14 + v12 * v9, v13 | 7);
  size_t v16 = j__malloc_size(v15);
  if (!v12) {
    goto LABEL_29;
  }
  if (v16 - v14 == 0x8000000000000000LL && v12 == -1)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Division results in an overflow",  31LL,  2LL,  "Swift/IntegerTypes.swift",  24LL,  2,  14384LL,  0);
    goto LABEL_31;
  }

  v15[2] = v8;
  v15[3] = 2 * ((uint64_t)(v16 - v14) / v12);
LABEL_19:
  uint64_t v18 = type metadata accessor for URLQueryItem(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v15 + v20;
  if ((a1 & 1) != 0)
  {
    unint64_t v22 = a4 + v20;
    if ((unint64_t)v15 < a4 || v21 >= v22 + *(void *)(v19 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v15 + v20, v22, v8, v18);
    }

    else if (v15 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v15 + v20);
    }

    *(void *)(a4 + swift_weakDestroy(v0 + 16) = 0LL;
  }

  else
  {
    sub_10015D188(0LL, v8, v21, a4);
  }

  swift_bridgeObjectRelease(a4);
  return (uint64_t)v15;
}

char *sub_10015AC5C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE40);
      uint64_t v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      *((void *)v11 + sub_1000E053C(v0 + 2) = v8;
      *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[24 * v8 + 32]) {
          memmove(v13, a4 + 32, 24 * v8);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
    }

    sub_10015D2A0(0LL, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_10015AD80(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10015AFC0(a1, a2, a3, a4, &qword_1002BB628);
}

char *sub_10015AD94(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE48);
      uint64_t v11 = (char *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      *((void *)v11 + sub_1000E053C(v0 + 2) = v8;
      *((void *)v11 + 3) = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 32;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v14 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[32 * v8 + 32]) {
          memmove(v14, a4 + 32, 32 * v8);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015CEAC(0LL, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

void *sub_10015AEA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10(&qword_1002BBE28);
      uint64_t v11 = (void *)swift_allocObject(v10, 40 * v9 + 32, 7LL);
      size_t v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
      uint64_t v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[5 * v8 + 4]) {
          memmove(v13, a4 + 4, 40 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_22;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
    }

    sub_10015D480(0LL, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_10015AFC0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }

  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if (v8 + 0x4000000000000000LL >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      uint64_t v11 = sub_1000DFE10(a5);
      size_t v12 = (char *)swift_allocObject(v11, 16 * v10 + 32, 7LL);
      int64_t v13 = j__malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 17;
      }
      *((void *)v12 + sub_1000E053C(v0 + 2) = v9;
      *((void *)v12 + 3) = 2 * (v14 >> 4);
      char v15 = v12 + 32;
      if ((v6 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      size_t v12 = (char *)&_swiftEmptyArrayStorage;
      char v15 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[16 * v9 + 32]) {
          memmove(v15, a4 + 32, 16 * v9);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015D394(0LL, v9, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }

  __break(1u);
  return result;
}

void *sub_10015B0D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }

  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if (v7 + 0x4000000000000000LL >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      uint64_t v10 = sub_1000DFE10((uint64_t *)&unk_1002BBEF0);
      uint64_t v11 = (void *)swift_allocObject(v10, 32 * v9 + 32, 7LL);
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 5);
      uint64_t v14 = v11 + 4;
      if ((v5 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      uint64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v8 + 4]) {
          memmove(v14, a4 + 4, 32 * v8);
        }
        a4[2] = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015D8AC(0LL, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }

  __break(1u);
  return result;
}

char *sub_10015B1E4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10015B1F0(a1, a2, a3, a4, &qword_1002BBDD0);
}

char *sub_10015B1F0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }

  unint64_t v7 = *((void *)a4 + 3);
  uint64_t v8 = v7 >> 1;
  if (v8 + 0x4000000000000000LL >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
LABEL_8:
    uint64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      uint64_t v10 = *((void *)a4 + 2);
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      uint64_t v11 = sub_1000DFE10(a5);
      int64_t v12 = (char *)swift_allocObject(v11, 16 * v10 + 32, 7LL);
      int64_t v13 = j__malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 17;
      }
      *((void *)v12 + sub_1000E053C(v0 + 2) = v9;
      *((void *)v12 + 3) = 2 * (v14 >> 4);
      char v15 = v12 + 32;
      if ((v6 & 1) != 0) {
        goto LABEL_15;
      }
    }

    else
    {
      int64_t v12 = (char *)&_swiftEmptyArrayStorage;
      char v15 = (char *)&_swiftEmptyArrayStorage + 32;
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[16 * v9 + 32]) {
          memmove(v15, a4 + 32, 16 * v9);
        }
        *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
        goto LABEL_24;
      }
    }

    sub_10015D99C(0LL, v9, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v12;
  }

  __break(1u);
  return result;
}

uint64_t sub_10015B2F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = a1;
  unint64_t v6 = a1 >> 16;
  uint64_t v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000LL) == 0 || (a2 & 0x800000000000000LL) != 0)
  {
    uint64_t v13 = String.UTF16View.index(_:offsetBy:)(15LL, v6, a2);
    uint64_t v14 = v13 + (v7 << 16);
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v16 = v14 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v16 = v15;
    }
    return v16 | 4;
  }

  else
  {
    uint64_t v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15LL, v6);
    uint64_t v9 = v8 + (v7 << 16);
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    unint64_t v11 = v9 & 0xFFFFFFFFFFFF0000LL;
    if (!v7) {
      unint64_t v11 = v10;
    }
    return v11 | 8;
  }

unint64_t sub_10015B370(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    unint64_t v7 = sub_10015B44C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000LL) != 0)
    {
      unsigned int v11 = _StringGuts.foreignErrorCorrectedScalar(startingAt:)(v7 & 0xFFFFFFFFFFFF0000LL, a1, a2);
    }

    else
    {
      unint64_t v8 = v7 >> 16;
      if ((a2 & 0x2000000000000000LL) != 0)
      {
        v14[0] = a1;
        v14[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        uint64_t v9 = v14;
        uint64_t v10 = v2;
      }

      else
      {
        if ((a1 & 0x1000000000000000LL) != 0)
        {
          uint64_t v9 = (void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
        }

        else
        {
          uint64_t v9 = (void *)_StringObject.sharedUTF8.getter(a1, a2);
          uint64_t v3 = v13;
        }

        uint64_t v10 = v3;
      }

      unsigned int v11 = _decodeScalar(_:startingAt:)(v9, v10, v8);
    }
  }

  else
  {
    unsigned int v11 = 0;
  }

  LOBYTE(v14[0]) = v4 == 0;
  return v11 | ((unint64_t)(v4 == 0) << 32);
}

unint64_t sub_10015B44C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000LL) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 1) == 0 || (result & 0xC) == 4LL << v5) {
    goto LABEL_9;
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000LL) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_10015B4E8(result, a2, a3);
    if ((result & 1) == 0) {
      return result & 0xC | sub_10015B554(result, a2, a3) & 0xFFFFFFFFFFFFFFF3LL | 1;
    }
  }

  return result;
}

unint64_t sub_10015B4E8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000LL) == 0) {
    LOBYTE(v5) = 1;
  }
  if ((result & 0xC) == 4LL << v5) {
    uint64_t result = sub_10015B2F8(result, a2, a3);
  }
  unint64_t v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000LL) == 0) {
    unint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v6 <= result >> 16) {
    __break(1u);
  }
  return result;
}

unint64_t sub_10015B554(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000LL;
  }

  else
  {
    unint64_t v5 = result >> 16;
    if ((a3 & 0x1000000000000000LL) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000LL) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            unint64_t v7 = v5 - 1;
            int v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }

          while (v11 == 128);
          return v7 << 16;
        }

        goto LABEL_14;
      }

      if ((a2 & 0x1000000000000000LL) != 0)
      {
        uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_14;
        }
      }

      else
      {
        unint64_t v12 = result >> 16;
        uint64_t v6 = _StringObject.sharedUTF8.getter(a2, a3);
        unint64_t v5 = v12;
        if (v12 == v10) {
          goto LABEL_14;
        }
      }

      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          unint64_t v7 = v5 - 1;
          int v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }

        while (v8 == 128);
        return v7 << 16;
      }

uint64_t sub_10015B664(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v5 = a4 + 24 * a1 + 32;
  unint64_t v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10015B754(void *a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v2, v3);
  unint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for URL(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  int v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)v30 - v13;
  id v15 = [(id)objc_opt_self(TVInterfaceFactory) sharedInterfaceFactory];
  id v16 = [a1 element];
  id v17 = [v15 _imageProxyFromElement:v16];

  if (v17)
  {

    return;
  }

  id v18 = [a1 URL];
  if (!v18)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1LL, 1LL, v6);
    goto LABEL_8;
  }

  uint64_t v19 = v18;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

  unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v20(v5, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0LL, 1LL, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1LL, v6) == 1)
  {
LABEL_8:

    sub_1000E03B4((uint64_t)v5, &qword_1002B7890);
    return;
  }

  v20(v14, v5, v6);
  uint64_t v31 = v6;
  unint64_t v21 = sub_10015DB08(v30);
  (*(void (**)(void *, char *, uint64_t))(v7 + 16))(v21, v14, v6);
  id v22 = [(id)objc_opt_self(TVURLImageLoader) sharedInstance];
  uint64_t v23 = v31;
  if (v31)
  {
    unint64_t v24 = sub_1000E0518(v30, v31);
    uint64_t v25 = *(void *)(v23 - 8);
    __chkstk_darwin(v24, v24);
    NSString v27 = (char *)v30 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v25 + 16))(v27);
    uint64_t v28 = _bridgeAnythingToObjectiveC<A>(_:)(v27, v23);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    sub_1000E053C(v30);
  }

  else
  {
    uint64_t v28 = 0LL;
  }

  id v29 = [objc_allocWithZone(TVImageProxy) initWithObject:v28 imageLoader:v22 groupType:0];
  swift_unknownObjectRelease(v28);

  if (v29)
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
  }

  else
  {
    __break(1u);
  }

void *sub_10015BA70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter(v23))
  {
    uint64_t v25 = v3;
    uint64_t v26 = (double *)(a2 + OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize);
    uint64_t v7 = 4LL;
    while (1)
    {
      a2 = v7 - 4;
      id v8 = (a1 & 0xC000000000000001LL) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(a2, 1LL)) {
        break;
      }
      uint64_t v3 = v6;
      id v11 = objc_allocWithZone((Class)type metadata accessor for TVMLMonogramRow.LockupView());
      id v12 = v9;
      unint64_t v13 = sub_100156FEC(v12);
      unint64_t v14 = v13;
      double v15 = *v26;
      if (*v26 <= v26[1]) {
        double v15 = v26[1];
      }
      uint64_t v16 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius;
      *(double *)(v13 + OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius) = v15 * 0.5;
      id v17 =  objc_msgSend( *(id *)(v13 + OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView),  "layer",  v25);
      [v17 setCornerRadius:*(double *)(v14 + v16)];

      id v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v14
                                                                  + OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView), "config"));
      [v18 setCornerRadius:*(double *)(v14 + v16)];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
      unint64_t v21 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v20 = *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v21 >= v20 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1LL);
      }
      v22.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v14);
      specialized Array._endMutation()(v22);
      ++v7;
      uint64_t v6 = v3;
      if (v10 == v3) {
        goto LABEL_19;
      }
    }

    __break(1u);
LABEL_15:
    if (a1 < 0) {
      uint64_t v23 = a1;
    }
    else {
      uint64_t v23 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
  }

void sub_10015BCA0(char *a1, id a2)
{
  id v2 = a2;
  id v4 = [a2 childViewElements];
  id v125 = v2;
  uint64_t v127 = a1;
  if (v4)
  {
    unint64_t v5 = v4;
    uint64_t v6 = sub_1000E0418(0LL, &qword_1002B8388, &OBJC_CLASS___TVViewElement_ptr);
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v7);
    for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter(v85))
    {
      uint64_t v9 = TVElementKeyFooter;
      uint64_t v10 = 4LL;
      while (1)
      {
        id v11 = (v7 & 0xC000000000000001LL) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v7)
            : *(id *)(v7 + 8 * v10);
        id v12 = v11;
        uint64_t v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1LL)) {
          break;
        }
        id v14 = [v11 elementName];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        uint64_t v17 = v16;

        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        if (v15 == v18 && v17 == v19)
        {
          swift_bridgeObjectRelease_n(v7, 2LL);
          goto LABEL_23;
        }

        uint64_t v21 = v19;
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v18, v19, 0LL);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v21);
        if ((v22 & 1) != 0)
        {
          uint64_t v17 = v7;
LABEL_23:
          swift_bridgeObjectRelease_n(v17, 2LL);
          id v29 = [(id)objc_opt_self(TVInterfaceFactory) sharedInterfaceFactory];
          uint64_t v30 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_footerView;
          a1 = v127;
          id v31 =  [v29 viewForElement:v12 existingView:*(void *)&v127[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_footerView]];

          uint64_t v32 = *(void **)&v127[v30];
          *(void *)&v127[v30] = v31;
          id v33 = v31;
          uint64_t v28 = v33;
          if (v32)
          {
            if (v33)
            {
              sub_1000E0418(0LL, (unint64_t *)&qword_1002BB2E0, &OBJC_CLASS___UIView_ptr);
              id v34 = v32;
              id v35 = v28;
              char v36 = static NSObject.== infix(_:_:)(v34, v35);

              if ((v36 & 1) != 0)
              {
LABEL_33:

LABEL_34:
                id v2 = v125;
                goto LABEL_35;
              }
            }

LABEL_63:
  uint64_t v70 = 0x7FF0000000000000LL;
LABEL_64:
  *(void *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_maxWidth] = v70;
  id v71 = [v126 style];
  if (!v71)
  {
    __int128 v130 = 0u;
    __int128 v131 = 0u;
LABEL_72:
    sub_1000E03B4((uint64_t)&v130, &qword_1002B7850);
    goto LABEL_73;
  }

  uint64_t v72 = v71;
  id v73 = [v71 cssValueForStyleProperty:TVViewElementStyleFocusSizeIncrease];

  if (v73)
  {
    _bridgeAnyObjectToAny(_:)(&v128);
    swift_unknownObjectRelease(v73);
  }

  else
  {
    __int128 v128 = 0u;
    __int128 v129 = 0u;
  }

  sub_10015C6DC((uint64_t)&v128, (uint64_t)&v130);
  if (!*((void *)&v131 + 1)) {
    goto LABEL_72;
  }
  if (swift_dynamicCast( &v128,  &v130,  (char *)&type metadata for Any + 8,  &type metadata for CGFloat,  6LL))
  {
    double v74 = *(double *)&v128;
    goto LABEL_74;
  }

LABEL_73:
  double v74 = 30.0;
LABEL_74:
  uint64_t v75 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_scaleSizeIncrease;
  double v76 = *(double *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_scaleSizeIncrease];
  *(double *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_scaleSizeIncrease] = v74;
  unint64_t v77 = &qword_1002BB000;
  if (v76 == v74) {
    goto LABEL_94;
  }
  uint64_t v78 = *(void *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
  if ((unint64_t)v78 >> 62)
  {
    if (v78 < 0) {
      uint64_t v86 = *(void *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews];
    }
    else {
      uint64_t v86 = v78 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews]);
    uint64_t v79 = _CocoaArrayWrapper.endIndex.getter(v86);
    if (v79) {
      goto LABEL_77;
    }
  }

  else
  {
    uint64_t v79 = *(void *)((v78 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(*(void *)&a1[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews]);
    if (v79)
    {
LABEL_77:
      if (v79 < 1)
      {
LABEL_124:
        __break(1u);
        return;
      }

      uint64_t v80 = 0LL;
      do
      {
        if ((v78 & 0xC000000000000001LL) != 0) {
          id v81 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v80, v78);
        }
        else {
          id v81 = (char *)*(id *)(v78 + 8 * v80 + 32);
        }
        id v82 = v81;
        ++v80;
        double v83 = *(double *)&v127[v75];
        id v84 = [*(id *)&v81[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView] config];
        [v84 setScaleSizeIncrease:v83];
      }

      while (v79 != v80);
    }
  }

  a1 = v127;
  objc_msgSend(v127, "setNeedsLayout", swift_bridgeObjectRelease(v78).n128_f64[0]);
  uint64_t v63 = v126;
  unint64_t v77 = &qword_1002BB000;
LABEL_94:
  id v87 = [v63 childViewElements];
  id v88 = &_swiftEmptyArrayStorage;
  if (v87)
  {
    id v89 = v87;
    uint64_t v90 = sub_1000E0418(0LL, &qword_1002B8388, &OBJC_CLASS___TVViewElement_ptr);
    uint64_t v91 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v89, v90);

    *(void *)&__int128 v130 = &_swiftEmptyArrayStorage;
    unint64_t v92 = &selRef_startPoint;
    if ((unint64_t)v91 >> 62)
    {
      if (v91 < 0) {
        uint64_t v111 = v91;
      }
      else {
        uint64_t v111 = v91 & 0xFFFFFFFFFFFFFF8LL;
      }
      swift_bridgeObjectRetain(v91);
      uint64_t v93 = _CocoaArrayWrapper.endIndex.getter(v111);
      swift_bridgeObjectRelease(v91);
      if (v93) {
        goto LABEL_97;
      }
    }

    else
    {
      uint64_t v93 = *(void *)((v91 & 0xFFFFFFFFFFFFF8LL) + 0x10);
      if (v93)
      {
LABEL_97:
        if (v93 >= 1)
        {
          uint64_t v94 = 0LL;
          uint64_t v95 = TVElementKeyMonogramLockup;
          while (1)
          {
            if ((v91 & 0xC000000000000001LL) != 0) {
              id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v94, v91);
            }
            else {
              id v99 = *(id *)(v91 + 8 * v94 + 32);
            }
            uint64_t v100 = v99;
            id v101 = [v99 elementName];
            uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
            uint64_t v104 = v103;

            uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v95);
            if (v102 == v105 && v104 == v106)
            {
              swift_bridgeObjectRelease_n(v104, 2LL);
            }

            else
            {
              uint64_t v108 = v106;
              char v109 = _stringCompareWithSmolCheck(_:_:expecting:)(v102, v104, v105, v106, 0LL);
              swift_bridgeObjectRelease(v104);
              __n128 v96 = swift_bridgeObjectRelease(v108);
              if ((v109 & 1) == 0)
              {

                goto LABEL_101;
              }
            }

            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v96);
            uint64_t v97 = *(void *)(v130 + 16);
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v97);
            uint64_t v98 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v97, v100);
            specialized ContiguousArray._endMutation()(v98);
LABEL_101:
            if (v93 == ++v94)
            {
              swift_bridgeObjectRelease(v91);
              uint64_t v110 = (void *)v130;
              a1 = v127;
              unint64_t v92 = &selRef_startPoint;
              goto LABEL_118;
            }
          }
        }

        __break(1u);
        goto LABEL_124;
      }
    }

    swift_bridgeObjectRelease(v91);
    uint64_t v110 = &_swiftEmptyArrayStorage;
LABEL_118:
    unint64_t v112 = a1;
    id v88 = sub_10015BA70((uint64_t)v110, (uint64_t)v112);
    swift_release(v110);

    uint64_t v63 = v126;
    unint64_t v77 = &qword_1002BB000;
  }

  else
  {
    unint64_t v92 = &selRef_startPoint;
  }

  uint64_t v113 = v77[405];
  uint64_t v114 = *(void *)&a1[v113];
  *(void *)&a1[v113] = v88;
  sub_100155850(v114);
  id v115 = objc_msgSend(v63, v92[45], swift_bridgeObjectRelease(v114).n128_f64[0]);
  if (v115)
  {
    uint64_t v116 = v115;
    [v115 padding];
    double top = v117;
    double left = v119;
    double bottom = v121;
    double right = v123;
  }

  else
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }

  objc_msgSend(a1, "setLayoutMargins:", top, left, bottom, right);
}

uint64_t sub_10015C6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002B7850);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

unint64_t sub_10015C724()
{
  unint64_t result = qword_1002BBD88;
  if (!qword_1002BBD88)
  {
    unint64_t result = swift_getWitnessTable("Y{\b", &_s9PublisherVN);
    atomic_store(result, (unint64_t *)&qword_1002BBD88);
  }

  return result;
}

unint64_t sub_10015C768()
{
  unint64_t result = qword_1002BBD90;
  if (!qword_1002BBD90)
  {
    uint64_t v1 = sub_1000E0418(255LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for OS_dispatch_queue, v1);
    atomic_store(result, (unint64_t *)&qword_1002BBD90);
  }

  return result;
}

uint64_t sub_10015C7C0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10015C7E4(void **a1)
{
}

uint64_t sub_10015C7EC()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_10015C810(void *a1)
{
  return sub_100158B80(a1, *(void **)(v1 + 32), *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_10015C81C()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10015C82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10015C83C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

char *sub_10015C844(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = (char *)(a4 + (a1 << 6) + 32);
    size_t v6 = v4 << 6;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }

  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10015C92C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }

  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10015CA14(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }

  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10015CAFC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }

  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10015CBE4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v5 = (char *)(a4 + 40 * a1 + 32);
  size_t v6 = 40 * v4;
  uint64_t v7 = &__dst[v6];
  if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
  {
    memcpy(__dst, v5, v6);
    return v7;
  }

  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_10015CCD0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }

  unint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015CDB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v5 = a4 + 24 * a1 + 32;
  unint64_t v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10015CEAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v6 = a4 + 32 * a1 + 32;
    unint64_t v7 = a3 + 32 * v4;
    if (v6 >= v7 || v6 + 32 * v4 <= a3)
    {
      sub_1000DFE10((uint64_t *)&unk_1002BBE50);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_10015CFB4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if ((v4 & 0x8000000000000000LL) != 0)
    {
      uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }

  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015D098(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015D188(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  uint64_t v8 = *(void *)(type metadata accessor for URLQueryItem(0LL) - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 72);
  unint64_t v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
  uint64_t v12 = v10 * v4;
  unint64_t v13 = a3 + v12;
  unint64_t v14 = v11 + v12;
  if (v11 >= v13 || v14 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v13;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10015D2A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v5 = a4 + 24 * a1 + 32;
  unint64_t v6 = a3 + 24 * v4;
  if (v5 >= v6 || v5 + 24 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10015D394(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015D480(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }

  if (v4 < 0)
  {
LABEL_9:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
    goto LABEL_11;
  }

  unint64_t v6 = a4 + 40 * a1 + 32;
  unint64_t v7 = a3 + 40 * v4;
  if (v6 >= v7 || v6 + 40 * v4 <= a3)
  {
    sub_1000DFE10((uint64_t *)&unk_1002BBE30);
    swift_arrayInitWithCopy(a3);
    return v7;
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10015D58C()
{
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_maxWidth] = 0x7FF0000000000000LL;
  *(int64x2_t *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSize] = vdupq_n_s64(0x4054000000000000uLL);
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_scaleSizeIncrease] = 0x403E000000000000LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_itemSpacing] = 0xC038000000000000LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_focusedItemSpacing] = 0x402C000000000000LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_footerView] = 0LL;
  uint64_t v1 = OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupRowView;
  *(void *)&v0[v1] = [objc_allocWithZone(UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_lockupViews] = &_swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic15TVMLMonogramRow_layoutItems] = &_swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100223C30LL,  "TVMusic/TVMLMonogramRow.swift",  29LL,  2LL,  97LL,  0);
  __break(1u);
}

void sub_10015D690()
{
  uint64_t v1 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_monogramView;
  *(void *)&v0[v1] = [objc_allocWithZone(UIView) init];
  uint64_t v2 = OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imageView;
  *(void *)&v0[v2] = objc_msgSend( objc_allocWithZone(_UIStackedImageContainerView),  "initWithFrame:",  0.0,  0.0,  0.0,  0.0);
  *(void *)&v0[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_cornerRadius] = 0x4044000000000000LL;
  *(void *)&v0[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_imagePublisher] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtCC7TVMusic15TVMLMonogramRow10LockupView_footerView] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100223C30LL,  "TVMusic/TVMLMonogramRow.swift",  29LL,  2LL,  487LL,  0);
  __break(1u);
}

id sub_10015D770(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  unint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = *(int *)(__chkstk_darwin(a1, a2) + 36);
  uint64_t v8 = *(void **)(v2 + v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = (v9 + 32) & ~v9;
  uint64_t v11 = swift_allocObject(&unk_100274CD8, v10 + v5, v9 | 7);
  *(_OWORD *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(a1 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, v6, a1);
  aBlock[4] = sub_10015E4CC;
  uint64_t v15 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_10015996C;
  aBlock[3] = &unk_100274CF0;
  uint64_t v12 = _Block_copy(aBlock);
  objc_msgSend(v8, "setCompletionHandler:", v12, swift_release(v15).n128_f64[0]);
  _Block_release(v12);
  return [*(id *)(v2 + v7) load];
}

uint64_t sub_10015D8AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015D99C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }

  else
  {
    if (v4 < 0)
    {
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize with negative count",  51LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1090LL,  0);
      goto LABEL_9;
    }

    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_1000DFE10(&qword_1002BBDD8);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }

  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutablePointer.initialize overlapping range",  49LL,  2LL,  "Swift/UnsafePointer.swift",  25LL,  2,  1092LL,  0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_10015DAA4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

id sub_10015DAD0()
{
  return sub_1001593F0(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

id sub_10015DAD8()
{
  return sub_100156B74(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

ValueMetadata *_s9PublisherVMa()
{
  return &_s9PublisherVN;
}

void *sub_10015DAF0()
{
  return &protocol witness table for Never;
}

uint64_t _s12SubscriptionVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&_s12SubscriptionVMn);
}

void *sub_10015DB08(void *a1)
{
  uint64_t v1 = a1;
  if ((*(_BYTE *)(*(void *)(a1[3] - 8LL) + 82LL) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (void *)v2;
  }

  return v1;
}

uint64_t sub_10015DB44(uint64_t a1)
{
  uint64_t result = swift_checkMetadataState(319LL, *(void *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(void *)(result - 8) + 64LL;
    v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    uint64_t result = type metadata accessor for CombineIdentifier(319LL);
    if (v4 <= 0x3F)
    {
      v5[2] = *(void *)(result - 8) + 64LL;
      swift_initStructMetadata(a1, 0LL, 3LL, v5, a1 + 32);
      return 0LL;
    }
  }

  return result;
}

uint64_t *sub_10015DBD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for CombineIdentifier(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unsigned int v11 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (((v10 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8) & ~v10) + *(void *)(v9 + 64) <= 0x18
      ? (BOOL v12 = v11 > 7)
      : (BOOL v12 = 1),
        v12))
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + (((v11 | 7) + 16LL) & ~(unint64_t)(v11 | 7)));
    swift_retain(v21);
  }

  else
  {
    uint64_t v13 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v14 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL);
    uint64_t v15 = (void **)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8LL);
    uint64_t v16 = *v15;
    *unint64_t v14 = *v15;
    uint64_t v17 = ((unint64_t)v14 + v10 + 8) & ~v10;
    uint64_t v18 = ((unint64_t)v15 + v10 + 8) & ~v10;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    id v20 = v16;
    v19(v17, v18, v13);
  }

  return a1;
}

uint64_t sub_10015DD04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8LL);
  (*(void (**)(void))(v3 + 8))();
  unint64_t v4 = (id *)((a1 + *(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8LL);

  uint64_t v5 = type metadata accessor for CombineIdentifier(0LL);
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))( ((unint64_t)v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80LL),  v5);
}

uint64_t sub_10015DD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 16))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v9 = *v8;
  *uint64_t v7 = *v8;
  uint64_t v10 = type metadata accessor for CombineIdentifier(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  id v16 = v9;
  v15(v13, v14, v10);
  return a1;
}

uint64_t sub_10015DE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 24))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v9 = *v8;
  uint64_t v10 = *v7;
  *uint64_t v7 = *v8;
  id v11 = v9;

  uint64_t v12 = type metadata accessor for CombineIdentifier(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 24))( ((unint64_t)v7 + *(unsigned __int8 *)(v13 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80),  ((unint64_t)v8 + *(unsigned __int8 *)(v13 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80),  v12);
  return a1;
}

uint64_t sub_10015DEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 32))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  *uint64_t v7 = *v8;
  uint64_t v9 = type metadata accessor for CombineIdentifier(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))( ((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80),  ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80),  v9);
  return a1;
}

uint64_t sub_10015DF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8LL);
  (*(void (**)(void))(v5 + 40))();
  uint64_t v6 = *(void *)(v5 + 64) + 7LL;
  uint64_t v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v8 = (void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8LL);
  uint64_t v9 = *v7;
  *uint64_t v7 = *v8;

  uint64_t v10 = type metadata accessor for CombineIdentifier(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 40))( ((unint64_t)v7 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80),  ((unint64_t)v8 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80),  v10);
  return a1;
}

uint64_t sub_10015DFC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = type metadata accessor for CombineIdentifier(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  else {
    unsigned int v11 = v7;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  else {
    unsigned int v12 = v11;
  }
  if (!a2) {
    return 0LL;
  }
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  if (a2 <= v12) {
    goto LABEL_27;
  }
  unint64_t v15 = ((v14 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8LL) + 8) & ~v14) + *(void *)(v9 + 64);
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)(a1 + v15);
      if (!v17) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }

    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15)) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }

    if (v19 < 2)
    {
LABEL_27:
      if ((_DWORD)v7 == v12) {
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
      }
      char v22 = (unint64_t *)((a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8LL);
      if ((v11 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))( ((unint64_t)v22 + v14 + 8) & ~v14,  v10,  v8);
      }
      unint64_t v23 = *v22;
      if (v23 >= 0xFFFFFFFF) {
        LODWORD(v23) = -1;
      }
      return (v23 + 1);
    }
  }

  int v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15)) {
    goto LABEL_27;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if ((_DWORD)v15)
  {
    else {
      int v21 = 4;
    }
    __asm { BR              X12 }
  }

  return v12 + v20 + 1;
}

void sub_10015E1A0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8LL);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(type metadata accessor for CombineIdentifier(0LL) - 8);
  if (v8 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v10 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v10 = v8;
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = v10;
  }
  if (a3 <= v11)
  {
    unsigned int v13 = 0;
  }

  else if (v12 <= 3)
  {
    unsigned int v15 = ((a3 - v11 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      unsigned int v13 = &dword_100000004;
    }

    else if (v15 >= 0x100)
    {
      unsigned int v13 = 2;
    }

    else
    {
      unsigned int v13 = v15 > 1;
    }
  }

  else
  {
    unsigned int v13 = &_mh_execute_header.magic + 1;
  }

  if (v11 < a2)
  {
    int v14 = ~v11 + a2;
    if (v12 < 4)
    {
      if ((_DWORD)v12)
      {
        int v16 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if ((_DWORD)v12 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }

        else if ((_DWORD)v12 == 2)
        {
          *(_WORD *)a1 = v16;
        }

        else
        {
          *a1 = v16;
        }
      }
    }

    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v14;
    }

    __asm { BR              X10 }
  }

  __asm { BR              X16 }

uint64_t sub_10015E400(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1001ED258, a1);
}

uint64_t sub_10015E410(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1001ED230, a1);
}

uint64_t sub_10015E420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = _s12SubscriptionVMa(0LL, v5, *(void *)(v4 + 24), a4);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v8 + 32) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v8 | 7;
  uint64_t v12 = v4 + v9;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8LL))(v4 + v9, v5);

  uint64_t v13 = v12 + *(int *)(v6 + 40);
  uint64_t v14 = type metadata accessor for CombineIdentifier(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8LL))(v13, v14);
  return swift_deallocObject(v4, v10, v11);
}

void sub_10015E4CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(_s12SubscriptionVMa(0LL, v8, v9, a4) - 8) + 80LL);
  sub_100159908(a1, a2, a3, v4 + ((v10 + 32) & ~v10), v8, v9);
}

uint64_t *sub_10015E568(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80LL);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16LL) & ~(unint64_t)v5));
  }

  else
  {
    uint64_t v7 = type metadata accessor for Composer(0LL);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16LL))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void **)v10;
    uint64_t v12 = *((void *)v10 + 1);
    *uint64_t v9 = *(void *)v10;
    v9[1] = v12;
    id v13 = v11;
  }

  swift_retain(v12);
  return v4;
}

uint64_t sub_10015E600(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Composer(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return swift_release(*(void *)(v5 + 8));
}

uint64_t sub_10015E650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Composer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)v9;
  uint64_t v11 = *(void *)(v9 + 8);
  *uint64_t v8 = *(void *)v9;
  v8[1] = v11;
  id v12 = v10;
  swift_retain(v11);
  return a1;
}

uint64_t sub_10015E6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Composer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void **)(a1 + v7);
  uint64_t v11 = *(void **)v9;
  *uint64_t v8 = *(void *)v9;
  id v12 = v11;

  uint64_t v13 = v8[1];
  uint64_t v14 = *(void *)(v9 + 8);
  v8[1] = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

uint64_t sub_10015E748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Composer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32LL))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10015E7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Composer(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40LL))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = *(void **)(a1 + v7);
  *uint64_t v8 = *v9;

  uint64_t v11 = v8[1];
  v8[1] = v9[1];
  swift_release(v11);
  return a1;
}

uint64_t sub_10015E820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10015E82C);
}

uint64_t sub_10015E82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Composer(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  }
  unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF) {
    LODWORD(v9) = -1;
  }
  int v10 = v9 - 1;
  if (v10 < 0) {
    int v10 = -1;
  }
  return (v10 + 1);
}

uint64_t sub_10015E8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10015E8C0);
}

uint64_t sub_10015E8C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Composer(0LL);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  }
  *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for LibraryComposerAlbumsPage(uint64_t a1)
{
  uint64_t result = qword_1002BBF58;
  if (!qword_1002BBF58) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryComposerAlbumsPage);
  }
  return result;
}

uint64_t sub_10015E974(uint64_t a1)
{
  uint64_t result = type metadata accessor for Composer(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = &unk_1001ED2E0;
    swift_initStructMetadata(a1, 256LL, 2LL, v4, a1 + 16);
    return 0LL;
  }

  return result;
}

uint64_t sub_10015E9E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023D908, 1LL);
}

uint64_t sub_10015E9F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v42 = type metadata accessor for _TaskModifier(0LL);
  __chkstk_darwin(v42, v3);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6, v7);
  id v41 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for LibraryComposerAlbumsPage(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = sub_1000DFE10(&qword_1002B8AB0);
  uint64_t v15 = __chkstk_darwin(v45, v14);
  int v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15, v18);
  uint64_t v40 = (uint64_t)&v39 - v19;
  uint64_t v20 = sub_1000DFE10(&qword_1002BBF90);
  __chkstk_darwin(v20, v21);
  unint64_t v23 = (uint64_t *)((char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  __int128 v47 = *(_OWORD *)(v2 + *(int *)(v9 + 20));
  sub_1000DFE10(&qword_1002BBF98);
  unint64_t v24 = State.wrappedValue.getter(&v48);
  if (v48)
  {
    *unint64_t v23 = v48;
    swift_storeEnumTagMultiPayload(v23, v20, 0LL);
    unint64_t v25 = sub_10015F4F8();
    unint64_t v26 = sub_100100738();
    return _ConditionalContent<>.init(storage:)( v23,  &type metadata for LibraryComposerViewControllerWrapper,  v45,  v25,  v26);
  }

  else
  {
    uint64_t v39 = static HorizontalAlignment.center.getter(v24);
    sub_1000EE02C( v2,  (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL),  type metadata accessor for LibraryComposerAlbumsPage);
    uint64_t v28 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v29 = (v28 + 16) & ~v28;
    uint64_t v30 = swift_allocObject(&unk_100274DA8, v29 + v11, v28 | 7);
    uint64_t v31 = sub_10015F450((uint64_t)v13, v30 + v29);
    uint64_t v32 = v41;
    static TaskPriority.userInitiated.getter(v31);
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(&v5[*(int *)(v42 + 20)], v32, v44);
    *(void *)uint64_t v5 = &unk_1002BBFA8;
    *((void *)v5 + 1) = v30;
    uint64_t v35 = v45;
    sub_1000EE02C( (uint64_t)v5,  (uint64_t)&v17[*(int *)(v45 + 36)],  (uint64_t (*)(void))&type metadata accessor for _TaskModifier);
    *(void *)int v17 = v39;
    *((void *)v17 + 1) = 0LL;
    v17[16] = 1;
    sub_100100628((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
    uint64_t v36 = v40;
    sub_100100664((uint64_t)v17, v40);
    sub_1001006AC(v36, (uint64_t)v23);
    swift_storeEnumTagMultiPayload(v23, v20, 1LL);
    unint64_t v37 = sub_10015F4F8();
    unint64_t v38 = sub_100100738();
    _ConditionalContent<>.init(storage:)(v23, &type metadata for LibraryComposerViewControllerWrapper, v35, v37, v38);
    return sub_100100838(v36);
  }

uint64_t sub_10015ED18(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v3 = type metadata accessor for MainActor(0LL);
  v1[6] = v3;
  v1[7] = static MainActor.shared.getter(v3);
  uint64_t v4 = (void *)swift_task_alloc(dword_1002BBFBC);
  v1[8] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10015ED94;
  v4[16] = a1;
  return swift_task_switch(sub_10015EE9C, 0LL, 0LL);
}

uint64_t sub_10015ED94(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 48LL);
  *(void *)(*(void *)v1 + 72LL) = a1;
  swift_task_dealloc(v2);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_10015EE0C, v4, v5);
}

uint64_t sub_10015EE0C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_release(*(void *)(v0 + 56));
  *(_OWORD *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)(v2 + *(int *)(type metadata accessor for LibraryComposerAlbumsPage(0LL) + 20));
  *(void *)(v0 + 3sub_1000E053C(v0 + 2) = v1;
  uint64_t v3 = sub_1000DFE10(&qword_1002BBF98);
  State.wrappedValue.setter(v0 + 32, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10015EE84(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return swift_task_switch(sub_10015EE9C, 0LL, 0LL);
}

uint64_t sub_10015EE9C()
{
  uint64_t result = Composer.id.getter();
  uint64_t v3 = v2;
  uint64_t v4 = HIBYTE(v2) & 0xF;
  uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000LL) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    __n128 v20 = swift_bridgeObjectRelease(v3);
    return (*(uint64_t (**)(void, __n128))(v0 + 8))(0LL, v20);
  }

  if ((v3 & 0x1000000000000000LL) != 0)
  {
    uint64_t v8 = (uint64_t)sub_100100998(result, v3, 10LL);
    char v10 = v35;
    goto LABEL_44;
  }

  if ((v3 & 0x2000000000000000LL) == 0)
  {
    if ((result & 0x1000000000000000LL) != 0) {
      uint64_t v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, v3);
    }
    uint64_t v8 = (uint64_t)sub_100100984(v7, v5, 10LL);
    char v10 = v9 & 1;
LABEL_44:
    __n128 v20 = swift_bridgeObjectRelease(v3);
    if ((v10 & 1) == 0 && v8)
    {
      uint64_t v21 = v0 + 16;
      uint64_t v22 = sub_1000DFE10(&qword_1002B84C0);
      uint64_t v23 = swift_allocObject(v22, 48LL, 7LL);
      *(_OWORD *)(v23 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E84B0;
      *(void *)(v23 + 3sub_1000E053C(v0 + 2) = static String._unconditionallyBridgeFromObjectiveC(_:)(MPModelPropertyComposerName);
      *(void *)(v23 + 40) = v24;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v23);
      id v26 = [(id)objc_opt_self(MPPropertySet) propertySetWithProperties:isa];
      *(void *)(v0 + 136) = v26;

      double v27 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
      unint64_t v28 = sub_10015F648();
      id v29 = [(id)swift_getObjCClassFromMetadata(v28) identityKind];
      *(void *)(v0 + 144) = v29;
      *(void *)(v0 + 56) = v0 + 120;
      *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_10015F2F4;
      uint64_t v30 = swift_continuation_init(v0 + 16, 0LL);
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      uint64_t v31 = (void *)(v0 + 80);
      v31[1] = 0x40000000LL;
      v31[2] = sub_10016F1B0;
      v31[3] = &unk_100274DC0;
      v31[4] = v30;
      [v27 findItemInLibraryWithPersistentID:v8 itemKind:v29 itemProperties:v26 completionHandler:v31];
      return swift_continuation_await(v21);
    }

    return (*(uint64_t (**)(void, __n128))(v0 + 8))(0LL, v20);
  }

  v36[0] = result;
  v36[1] = v3 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v4) {
      goto LABEL_58;
    }
    uint64_t v8 = (BYTE1(result) - 48);
    if (v4 != 2)
    {
      uint64_t v8 = 10LL * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v11 = v4 - 3;
      if (v11)
      {
        uint64_t v12 = (unsigned __int8 *)v36 + 3;
        while (1)
        {
          unsigned int v13 = *v12 - 48;
          if (v13 > 9) {
            goto LABEL_31;
          }
          uint64_t v14 = 10 * v8;
          uint64_t v8 = v14 + v13;
          char v10 = 0;
          ++v12;
          if (!--v11) {
            goto LABEL_44;
          }
        }
      }
    }

uint64_t sub_10015F2F4()
{
  return swift_task_switch(sub_10015F340, 0LL, 0LL);
}

uint64_t sub_10015F340()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = objc_opt_self(&OBJC_CLASS___MPModelComposer);
    uint64_t v3 = swift_dynamicCastObjCClass(v1, v2);
    if (!v3) {
  }
    }

  else
  {
    uint64_t v3 = 0LL;
  }

  uint64_t v4 = *(void **)(v0 + 144);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_10015F3BC()
{
  uint64_t v1 = type metadata accessor for LibraryComposerAlbumsPage(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = v0 + v4;
  uint64_t v8 = type metadata accessor for Composer(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL))(v7, v8);
  uint64_t v9 = v7 + *(int *)(v1 + 20);

  swift_release(*(void *)(v9 + 8));
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10015F450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryComposerAlbumsPage(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_10015F494()
{
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for LibraryComposerAlbumsPage(0LL) - 8) + 80LL);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  uint64_t v4 = (void *)swift_task_alloc(dword_1002BBFA4);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000E01FC;
  return sub_10015ED18(v3);
}

unint64_t sub_10015F4F8()
{
  unint64_t result = qword_1002BBFB0;
  if (!qword_1002BBFB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001ED3F0, &type metadata for LibraryComposerViewControllerWrapper);
    atomic_store(result, &qword_1002BBFB0);
  }

  return result;
}

id sub_10015F53C()
{
  id result =  [(id)objc_opt_self(TVMusicLibraryViewController) albumsViewControllerForComposer:*v0];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10015F584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10015F708();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10015F5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10015F708();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10015F624(uint64_t a1)
{
  unint64_t v2 = sub_10015F708();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_10015F648()
{
  unint64_t result = qword_1002BBFC0;
  if (!qword_1002BBFC0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___MPModelComposerKind);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002BBFC0);
  }

  return result;
}

ValueMetadata *type metadata accessor for LibraryComposerViewControllerWrapper()
{
  return &type metadata for LibraryComposerViewControllerWrapper;
}

unint64_t sub_10015F698()
{
  unint64_t result = qword_1002BBFC8;
  if (!qword_1002BBFC8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BBFD0);
    sub_10015F4F8();
    sub_100100738();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BBFC8);
  }

  return result;
}

unint64_t sub_10015F708()
{
  unint64_t result = qword_1002BBFD8;
  if (!qword_1002BBFD8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001ED378, &type metadata for LibraryComposerViewControllerWrapper);
    atomic_store(result, (unint64_t *)&qword_1002BBFD8);
  }

  return result;
}

uint64_t sub_10015F74C()
{
  uint64_t result = MGGetProductType();
  BOOL v1 = result != 1114644381 && result != 1110205732;
  char v2 = result != 33245053 && v1;
  byte_1002C5EA0 = v2;
  return result;
}

id sub_10015F818()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Device();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for Device()
{
  return objc_opt_self(&OBJC_CLASS___TVMDevice);
}

id sub_10015F868(uint64_t a1)
{
  id v2 = [(id)objc_opt_self(MPModelSong) kindWithVariants:3];
  id v3 = [(id)objc_opt_self(MPModelAlbum) kindWithSongKind:v2];
  id v4 = [(id)objc_opt_self(MPModelTVEpisode) kindWithVariants:2];
  uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___MPModelMovie);
  id v6 = [v5 kindWithVariants:2];
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___MPModelPlaylistEntry);
  uint64_t v8 = sub_1000DFE10(&qword_1002B8A00);
  uint64_t v9 = swift_allocObject(v8, 56LL, 7LL);
  *(_OWORD *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9170;
  *(void *)(v9 + 3sub_1000E053C(v0 + 2) = v2;
  *(void *)(v9 + 40) = v4;
  *(void *)(v9 + 48) = v6;
  uint64_t v29 = v9;
  specialized Array._endMutation()((__n128)xmmword_1001E9170);
  id v28 = v2;
  id v10 = v4;
  id v11 = v6;
  sub_1000DFE10(&qword_1002BC008);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v13 = objc_msgSend(v7, "kindWithKinds:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  uint64_t v14 = v13;
  uint64_t v15 = v11;
  uint64_t v16 = v10;
  unsigned int v17 = v28;
  switch(a1)
  {
    case 1LL:
      uint64_t v14 = v13;
      uint64_t v15 = v3;
      uint64_t v16 = v11;
      unsigned int v17 = v10;
      id v3 = v28;
      goto LABEL_22;
    case 2LL:
      goto LABEL_22;
    case 3LL:
      id v18 = [(id)objc_opt_self(MPModelArtist) kindWithAlbumKind:v3];
      goto LABEL_14;
    case 4LL:
      id v18 = [(id)objc_opt_self(MPModelPlaylist) kindWithVariants:87 playlistEntryKind:v13 options:0];
      goto LABEL_14;
    case 5LL:
      uint64_t v14 = v28;
      uint64_t v15 = v3;
      uint64_t v16 = v10;
      unsigned int v17 = v11;
      id v3 = v13;
      goto LABEL_22;
    case 6LL:
      uint64_t v14 = v13;
      uint64_t v15 = v3;
      uint64_t v16 = v11;
      unsigned int v17 = v28;
      id v3 = v10;
      goto LABEL_22;
    case 7LL:
      id v18 = [(id)objc_opt_self(MPModelTVSeason) kindWithEpisodeKind:v10];
      goto LABEL_14;
    case 8LL:
      uint64_t v19 = (void *)objc_opt_self(&OBJC_CLASS___MPModelTVShow);
      id v20 = [(id)objc_opt_self(MPModelTVSeason) kindWithEpisodeKind:v10];
      id v21 = [v19 kindWithSeasonKind:v20];

      goto LABEL_15;
    case 9LL:
      id v18 = [v5 kindWithVariants:2];
      goto LABEL_14;
    case 10LL:
      id v18 = [(id)objc_opt_self(MPModelMediaClip) kind];
      goto LABEL_14;
    case 13LL:
      uint64_t v22 = sub_1000E0418(0LL, &qword_1002BC020, &OBJC_CLASS___MPModelRadioStationKind_ptr);
      id v23 = [(id)swift_getObjCClassFromMetadata(v22) identityKind];
      goto LABEL_20;
    case 14LL:
      id v18 = [(id)objc_opt_self(MPModelComposer) kindWithAlbumKind:v3];
      goto LABEL_14;
    case 15LL:
      id v18 = [(id)objc_opt_self(MPModelGenre) kindWithAlbumKind:v3];
LABEL_14:
      id v21 = v18;
LABEL_15:

      uint64_t v14 = v3;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      unsigned int v17 = v28;
      goto LABEL_21;
    case 16LL:
      uint64_t v24 = sub_1000E0418(0LL, &qword_1002BC028, &OBJC_CLASS___MPModelCuratorActualKind_ptr);
      id v23 = [(id)swift_getObjCClassFromMetadata(v24) identityKind];
      goto LABEL_20;
    case 17LL:
      uint64_t v25 = sub_1000E0418(0LL, &qword_1002BC010, &OBJC_CLASS___MPModelSocialPersonKind_ptr);
      id v23 = [(id)swift_getObjCClassFromMetadata(v25) identityKind];
      goto LABEL_20;
    case 19LL:
      uint64_t v26 = sub_1000E0418(0LL, &qword_1002BC018, &OBJC_CLASS___MPModelRecordLabelKind_ptr);
      id v23 = [(id)swift_getObjCClassFromMetadata(v26) identityKind];
      goto LABEL_20;
    default:
      id v23 = [(id)objc_opt_self(MPModelKind) unknownKind];
LABEL_20:
      id v21 = v23;

      uint64_t v14 = v3;
      uint64_t v15 = v10;
      uint64_t v16 = v11;
      unsigned int v17 = v13;
LABEL_21:
      id v3 = v21;
LABEL_22:

      return v3;
  }

void **initializeBufferWithCopyOfBuffer for SharePlayManagementButton.SheetType(void **a1, void **a2)
{
  id v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for SharePlayManagementButton.SheetType(void **a1, void **a2)
{
  id v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for SharePlayManagementButton.SheetType(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for SharePlayManagementButton.SheetType()
{
  return &type metadata for SharePlayManagementButton.SheetType;
}

void destroy for SharePlayManagementButton(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
  swift_release(*(void *)(a1 + 16));
  id v3 = *(void **)(a1 + 24);
}

void *initializeWithCopy for SharePlayManagementButton(void *a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  id v6 = v4;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void **)(a2 + 24);
  a1[1] = v5;
  a1[2] = v8;
  swift_retain(v8);
  a1[3] = v9;
  return a1;
}

uint64_t assignWithCopy for SharePlayManagementButton(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = (void *)(a1 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a2 + 8);
  if (v8 == (void *)1)
  {
    if (v9 != (void *)1)
    {
      *id v7 = v9;
      id v10 = v9;
      goto LABEL_8;
    }

    goto LABEL_6;
  }

  if (v9 == (void *)1)
  {
    sub_10011B5B8((id *)(a1 + 8));
    uint64_t v9 = *(void **)(a2 + 8);
LABEL_6:
    *id v7 = v9;
    goto LABEL_8;
  }

  *id v7 = v9;
  id v11 = v9;

LABEL_8:
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a2 + 16);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  swift_retain(v13);
  swift_release(v12);
  uint64_t v14 = (void *)(a1 + 24);
  uint64_t v15 = *(void **)(a1 + 24);
  uint64_t v16 = *(void **)(a2 + 24);
  if (v15 != (void *)1)
  {
    if (v16 != (void *)1)
    {
      *uint64_t v14 = v16;
      id v18 = v16;

      return a1;
    }

    sub_10011B5B8((id *)(a1 + 24));
    uint64_t v16 = *(void **)(a2 + 24);
    goto LABEL_13;
  }

  if (v16 == (void *)1)
  {
LABEL_13:
    *uint64_t v14 = v16;
    return a1;
  }

  *uint64_t v14 = v16;
  id v17 = v16;
  return a1;
}

uint64_t assignWithTake for SharePlayManagementButton(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  id v6 = (uint64_t *)(a1 + 8);
  id v5 = *(void **)(a1 + 8);
  uint64_t v7 = a2[1];
  if (v7 == 1)
  {
    sub_10011B5B8((id *)(a1 + 8));
    uint64_t v7 = 1LL;
LABEL_4:
    *id v6 = v7;
    goto LABEL_6;
  }

  *id v6 = v7;

LABEL_6:
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = a2[2];
  swift_release(v8);
  id v10 = (uint64_t *)(a1 + 24);
  uint64_t v9 = *(void **)(a1 + 24);
  uint64_t v11 = a2[3];
  if (v9 != (void *)1)
  {
    if (v11 != 1)
    {
      *id v10 = v11;

      return a1;
    }

    sub_10011B5B8((id *)(a1 + 24));
    uint64_t v11 = 1LL;
  }

  *id v10 = v11;
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayManagementButton()
{
  return &type metadata for SharePlayManagementButton;
}

uint64_t sub_100160068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1LL, v6);
  if ((_DWORD)v8 == 1)
  {
    sub_1000E03B4(a1, &qword_1002BB500);
    uint64_t v9 = 7168LL;
    uint64_t v10 = *(void *)(a3 + 16);
    if (!v10)
    {
LABEL_6:
      uint64_t v16 = 0LL;
      return swift_task_create(v9, v16, (char *)&type metadata for () + 8, a2, a3);
    }
  }

  else
  {
    unsigned __int8 v17 = TaskPriority.rawValue.getter(v8);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    uint64_t v9 = v17 | 0x1C00LL;
    uint64_t v10 = *(void *)(a3 + 16);
    if (!v10) {
      goto LABEL_6;
    }
  }

  uint64_t v11 = *(void *)(a3 + 24);
  uint64_t ObjectType = swift_getObjectType(v10);
  swift_unknownObjectRetain(v10);
  uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v11);
  uint64_t v15 = v14;
  swift_unknownObjectRelease(v10);
  if (!(v15 | v13)) {
    goto LABEL_6;
  }
  v19[0] = 0LL;
  v19[1] = 0LL;
  uint64_t v16 = v19;
  v19[2] = v13;
  v19[3] = v15;
  return swift_task_create(v9, v16, (char *)&type metadata for () + 8, a2, a3);
}

void *sub_10016019C(void *a1)
{
  if (!a1) {
    return (void *)0xD000000000000014LL;
  }
  BOOL v1 = a1;
  _StringGuts.grow(_:)(21LL);
  swift_bridgeObjectRelease(0xE000000000000000LL);
  unint64_t v12 = 0xD000000000000013LL;
  unint64_t v13 = 0x8000000100228010LL;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ED580);
  uint64_t v11 = v1;
  uint64_t v3 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v3);
  *(void *)&double v4 = swift_release(KeyPath).n128_u64[0];
  uint64_t result = *(void **)&v1[OBJC_IVAR____TtC7TVMusic12GroupSession__mrGroupSession];
  if (result)
  {
    id v6 = objc_msgSend(result, "identifier", v4);
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    uint64_t v9 = v8;

    v10._countAndFlagsBits = v7;
    v10._object = v9;
    String.append(_:)(v10);

    swift_bridgeObjectRelease(v9);
    return (void *)v12;
  }

  else
  {
    __break(1u);
  }

  return result;
}

void *sub_1001602D0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_10016019C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1001602F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023D994, 1LL);
}

uint64_t sub_100160308@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1000DFE10(&qword_1002BC030);
  uint64_t v74 = *(void *)(v10 - 8);
  uint64_t v75 = v10;
  __chkstk_darwin(v10, v11);
  double v76 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000DFE10(&qword_1002BC038);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  unsigned __int8 v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000DFE10(&qword_1002BC040);
  __chkstk_darwin(v18, v19);
  id v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1000DFE10(&qword_1002BC048);
  __chkstk_darwin(v22, v23);
  double v27 = (char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = v27;
  uint64_t v72 = v25;
  uint64_t v73 = v24;
  uint64_t v29 = (void *)swift_allocObject(&unk_100274FC0, 56LL, 7LL);
  uint64_t v68 = v21;
  uint64_t v30 = v29;
  uint64_t v71 = a5;
  v29[2] = a1;
  v29[3] = a2;
  v29[4] = a3;
  v29[5] = a4;
  v29[6] = a4;
  __chkstk_darwin(v29, v31);
  uint64_t v69 = v18;
  id v58 = a1;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  char v61 = a4;
  sub_1001626B0(a4);
  sub_1001626B0(a4);
  sub_1001626B0(a4);
  id v32 = a1;
  id v65 = v17;
  id v33 = v32;
  sub_1001626B0(a2);
  swift_retain(a3);
  uint64_t v34 = sub_1000DFE10(&qword_1002BC050);
  unint64_t v35 = sub_1001626C0();
  Button.init(action:label:)(sub_100162698, v30, sub_1001626A4, &v62 - 6, v34, v35);
  double v83 = a2;
  uint64_t v84 = a3;
  uint64_t v36 = sub_1000DFE10(&qword_1002BC090);
  State.projectedValue.getter(&v77, v36);
  unint64_t v37 = (void *)swift_allocObject(&unk_100274FE8, 48LL, 7LL);
  _OWORD v37[2] = v33;
  v37[3] = a2;
  uint64_t v66 = a3;
  v37[4] = a3;
  v37[5] = a4;
  sub_1001626B0(a4);
  id v67 = v33;
  sub_1001626B0(a2);
  swift_retain(a3);
  unint64_t v38 = (void *)sub_1000DFE10(&qword_1002BC098);
  uint64_t v39 = sub_1000E0374(&qword_1002BC0A0, &qword_1002BC030, (uint64_t)&protocol conformance descriptor for Button<A>);
  unint64_t v40 = sub_1001627D8();
  unint64_t v41 = sub_10016281C();
  uint64_t v64 = v14;
  uint64_t v63 = v13;
  unint64_t v42 = v41;
  uint64_t v43 = v65;
  uint64_t v45 = v75;
  uint64_t v44 = v76;
  View.fullScreenCover<A, B>(item:onDismiss:content:)( &v77,  0LL,  0LL,  sub_1001627CC,  v37,  v75,  &type metadata for SharePlayManagementButton.SheetType,  v38,  v39,  v40,  v41);
  swift_release(v37);
  swift_release(v77);
  swift_release(v78);
  sub_100162960(v79);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v44, v45);
  uint64_t v77 = v45;
  uint64_t v78 = &type metadata for SharePlayManagementButton.SheetType;
  id v79 = v38;
  uint64_t v80 = v39;
  unint64_t v81 = v40;
  unint64_t v82 = v42;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v77,  &opaque type descriptor for <<opaque return type of View.fullScreenCover<A, B>(item:onDismiss:content:)>>,  1LL);
  uint64_t v47 = (uint64_t)v68;
  uint64_t v48 = v63;
  View.accessibilityIdentifier(_:)(0xD000000000000021LL, 0x8000000100227E80LL, v63, OpaqueTypeConformance2);
  uint64_t v49 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v43, v48);
  __chkstk_darwin(v49, v50);
  id v58 = v67;
  uint64_t v59 = a2;
  uint64_t v60 = v66;
  char v61 = a4;
  uint64_t v51 = sub_1000DFE10(&qword_1002BC0D0);
  unint64_t v52 = sub_10016297C();
  unint64_t v53 = sub_100162A80();
  double v54 = v70;
  View.contextMenu<A>(menuItems:)(sub_100162970, &v62 - 6, v69, v51, v52, v53);
  sub_100162960(a4);
  sub_1000E03B4(v47, &qword_1002BC040);
  uint64_t v55 = v71;
  uint64_t v56 = v72;
  uint64_t v57 = v73;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v71, v54, v73);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v55, 0LL, 1LL, v57);
}

uint64_t sub_1001607CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v8[1] = a2;
  int v8[2] = a3;
  v8[0] = a5;
  id v5 = a5;
  uint64_t v6 = sub_1000DFE10(&qword_1002BC090);
  return State.wrappedValue.setter(v8, v6);
}

uint64_t sub_100160814@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1000DFE10(&qword_1002BC078);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BC068);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter(v9);
  *((void *)v6 + 1) = 0LL;
  v6[16] = 0;
  uint64_t v12 = sub_1000DFE10(&qword_1002BC178);
  uint64_t v13 = sub_100160A10((uint64_t)a1, (uint64_t)&v6[*(int *)(v12 + 44)]);
  char v14 = static Edge.Set.horizontal.getter(v13);
  double v15 = EdgeInsets.init(_all:)(6.0);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_1000E04D4((uint64_t)v6, (uint64_t)v11, &qword_1002BC078);
  uint64_t v22 = &v11[*(int *)(v7 + 36)];
  *uint64_t v22 = v14;
  *((double *)v22 + 1) = v15;
  *((void *)v22 + sub_1000E053C(v0 + 2) = v17;
  *((void *)v22 + 3) = v19;
  *((void *)v22 + 4) = v21;
  v22[40] = 0;
  uint64_t v23 = sub_1000E03B4((uint64_t)v6, &qword_1002BC078);
  uint64_t v24 = static Alignment.topTrailing.getter(v23);
  uint64_t v38 = v25;
  uint64_t v39 = v24;
  sub_1001610B4(a1, (uint64_t)v41);
  uint64_t v26 = v41[0];
  uint64_t v27 = v41[1];
  char v28 = v42;
  uint64_t v29 = v43;
  LOBYTE(v6) = v44;
  uint64_t v31 = v45;
  uint64_t v30 = v46;
  uint64_t v32 = v47;
  uint64_t v33 = v40;
  sub_1000E04D4((uint64_t)v11, v40, &qword_1002BC068);
  uint64_t v34 = v33 + *(int *)(sub_1000DFE10(&qword_1002BC050) + 36);
  *(void *)uint64_t v34 = v26;
  *(void *)(v34 + 8) = v27;
  *(_BYTE *)(v34 + swift_unknownObjectWeakDestroy(v0 + 16) = v28;
  *(void *)(v34 + 24) = v29;
  *(_BYTE *)(v34 + 3sub_1000E053C(v0 + 2) = (_BYTE)v6;
  *(void *)(v34 + 40) = v31;
  *(void *)(v34 + 48) = v30;
  *(void *)(v34 + 56) = v32;
  uint64_t v35 = v38;
  *(void *)(v34 + 64) = v39;
  *(void *)(v34 + 7sub_1000E053C(v0 + 2) = v35;
  return sub_1000E03B4((uint64_t)v11, &qword_1002BC068);
}

uint64_t sub_100160A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v3 = type metadata accessor for LocalizedStringKey.StringInterpolation(0LL);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BC188);
  uint64_t v84 = *(void *)(v7 - 8);
  uint64_t v85 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  unint64_t v81 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9, v11);
  uint64_t v80 = (char *)&v77 - v12;
  uint64_t v13 = sub_1000DFE10(&qword_1002BC190);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v86 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v77 - v18;
  uint64_t v20 = sub_1000DFE10(&qword_1002BC198);
  uint64_t v22 = __chkstk_darwin(v20, v21);
  double v83 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v77 - v25;
  uint64_t v27 = Image.init(systemName:)(0x616C706572616873LL, 0xE900000000000079LL);
  v88[0] = v27;
  uint64_t v28 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000010LL, 0x8000000100227F50LL);
  uint64_t v29 = Text.init(_:tableName:bundle:comment:)(v28);
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  unint64_t v82 = v26;
  View.accessibility(label:)();
  sub_1000EC044(v29, v31, v35);
  swift_release(v27);
  swift_bridgeObjectRelease(v33);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ED528);
  v88[0] = a1;
  uint64_t v37 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v88, KeyPath, v37);
  swift_release(KeyPath);
  uint64_t v38 = *(void **)(a1 + OBJC_IVAR___TVMGroupSessionManager__currentSession);
  if (!v38) {
    goto LABEL_5;
  }
  uint64_t v39 = swift_getKeyPath(&unk_1001ED550);
  v88[0] = v38;
  uint64_t v40 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  unint64_t v41 = v38;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v88, v39, v40);
  swift_release(v39);
  char v42 = &v41[OBJC_IVAR____TtC7TVMusic12GroupSession__participants];
  if (!*(void *)(*(void *)&v41[OBJC_IVAR____TtC7TVMusic12GroupSession__participants + 8] + 16LL))
  {

LABEL_5:
    uint64_t v70 = 1LL;
    uint64_t v72 = (uint64_t)v86;
    uint64_t v71 = v87;
    uint64_t v69 = v85;
    goto LABEL_6;
  }

  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(0LL, 1LL);
  v43._countAndFlagsBits = 0LL;
  v43._object = (void *)0xE000000000000000LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v43);
  uint64_t v44 = swift_getKeyPath(&unk_1001ED550);
  v88[0] = v41;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v88, v44, v40);
  __n128 v45 = swift_release(v44);
  v88[0] = *(void *)(*((void *)v42 + 1) + 16LL);
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)( v88,  1684827173LL,  0xE400000000000000LL,  &type metadata for Int,  &protocol witness table for Int,  v45);
  v46._countAndFlagsBits = 0LL;
  v46._object = (void *)0xE000000000000000LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v46);
  uint64_t v47 = LocalizedStringKey.init(stringInterpolation:)(v6);
  uint64_t v48 = Text.init(_:tableName:bundle:comment:)(v47);
  uint64_t v78 = v40;
  id v79 = v41;
  uint64_t v49 = v41;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  v88[0] = v48;
  v88[1] = v50;
  char v55 = v54 & 1;
  char v89 = v54 & 1;
  uint64_t v90 = v52;
  View.accessibilityIdentifier(_:)( 0xD000000000000024LL,  0x8000000100227F90LL,  &type metadata for Text,  &protocol witness table for Text);
  sub_1000EC044(v48, v51, v55);
  swift_bridgeObjectRelease(v53);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(13LL, 1LL);
  v56._countAndFlagsBits = 0LL;
  v56._object = (void *)0xE000000000000000LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v56);
  uint64_t v57 = swift_getKeyPath(&unk_1001ED550);
  v88[0] = v49;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v88, v57, v78);
  __n128 v58 = swift_release(v57);
  v88[0] = *(void *)(*((void *)v42 + 1) + 16LL);
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:specifier:)( v88,  1684827173LL,  0xE400000000000000LL,  &type metadata for Int,  &protocol witness table for Int,  v58);
  v59._countAndFlagsBits = 0x6963697472615020LL;
  v59._object = (void *)0xED000073746E6170LL;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v59);
  uint64_t v60 = LocalizedStringKey.init(stringInterpolation:)(v6);
  uint64_t v61 = Text.init(_:tableName:bundle:comment:)(v60);
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  LOBYTE(v53) = v66 & 1;
  uint64_t v68 = (uint64_t)v80;
  uint64_t v67 = (uint64_t)v81;
  uint64_t v69 = v85;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_1000EC044(v61, v63, v53);

  swift_bridgeObjectRelease(v65);
  sub_1000E03B4(v67, &qword_1002BC188);
  sub_1000E011C(v68, (uint64_t)v19, &qword_1002BC188);
  uint64_t v70 = 0LL;
  uint64_t v72 = (uint64_t)v86;
  uint64_t v71 = v87;
LABEL_6:
  uint64_t v73 = (uint64_t)v83;
  uint64_t v74 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v19, v70, 1LL, v69);
  sub_1000E04D4(v74, v73, &qword_1002BC198);
  sub_1000E04D4((uint64_t)v19, v72, &qword_1002BC190);
  sub_1000E04D4(v73, v71, &qword_1002BC198);
  uint64_t v75 = sub_1000DFE10(&qword_1002BC1A0);
  sub_1000E04D4(v72, v71 + *(int *)(v75 + 48), &qword_1002BC190);
  sub_1000E03B4((uint64_t)v19, &qword_1002BC190);
  sub_1000E03B4(v74, &qword_1002BC198);
  sub_1000E03B4(v72, &qword_1002BC190);
  return sub_1000E03B4(v73, &qword_1002BC198);
}

void sub_1001610B4(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = static Color.red.getter();
  uint64_t v4 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(&v23, 0x4024000000000000LL, 0LL, 0x4024000000000000LL, 0LL, v4, v5);
  uint64_t v6 = v23;
  char v7 = v24;
  uint64_t v8 = v25;
  char v9 = v26;
  uint64_t v10 = v27;
  uint64_t v20 = v28;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ED528);
  uint64_t v22 = a1;
  uint64_t v12 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, KeyPath, v12);
  swift_release(KeyPath);
  uint64_t v13 = *(void **)&a1[OBJC_IVAR___TVMGroupSessionManager__currentSession];
  if (!v13) {
    goto LABEL_3;
  }
  uint64_t v14 = swift_getKeyPath(&unk_1001ED550);
  uint64_t v22 = v13;
  uint64_t v15 = sub_1000DF308(&qword_1002BC180, type metadata accessor for GroupSession, (uint64_t)&unk_1001EC820);
  uint64_t v16 = v13;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v22, v14, v15);
  swift_release(v14);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC7TVMusic12GroupSession__participants];
  swift_bridgeObjectRetain(v17);

  uint64_t v18 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease(v17);
  double v19 = 1.0;
  if (!v18) {
LABEL_3:
  }
    double v19 = 0.0;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *(void *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 3sub_1000E053C(v0 + 2) = v9;
  *(void *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v20;
  *(double *)(a2 + 56) = v19;
}

uint64_t sub_100161254@<X0>( void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v68 = a4;
  uint64_t v69 = a5;
  char v66 = a2;
  uint64_t v67 = a3;
  uint64_t v75 = a6;
  uint64_t v76 = sub_1000DFE10(&qword_1002BC160);
  uint64_t v7 = *(void *)(v76 - 8);
  uint64_t v9 = __chkstk_darwin(v76, v8);
  uint64_t v11 = (char *)&Description - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&Description - v13;
  uint64_t v72 = sub_1000DFE10(&qword_1002BC168);
  __chkstk_darwin(v72, v15);
  uint64_t v74 = (char *)&Description - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = type metadata accessor for Material(0LL);
  uint64_t v70 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&Description - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v71 = (ValueMetadata *)sub_1000DFE10(&qword_1002BC0B8);
  Description = (void (**)(char *, ValueMetadata *))v71[-1].Description;
  __chkstk_darwin(v71, v21);
  uint64_t v23 = (char *)&Description - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = sub_1000DFE10(&qword_1002BC170);
  uint64_t v24 = *(void *)(v73 - 8);
  uint64_t v26 = __chkstk_darwin(v73, v25);
  uint64_t v28 = (char *)&Description - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v26, v29);
  uint64_t v31 = (char *)&Description - v30;
  if (*a1)
  {
    if (qword_1002B71C0 != -1) {
      swift_once(&qword_1002B71C0, sub_100143D6C);
    }
    uint64_t v32 = (void *)qword_1002C5E58;
    uint64_t v78 = (ValueMetadata *)qword_1002C5E58;
    uint64_t v33 = (objc_class *)type metadata accessor for LegacyMonogramProvider();
    char v34 = (void *)swift_allocObject(v33, 120LL, 15LL);
    id v35 = v32;
    swift_defaultActor_initialize(v34);
    v34[14] = 0LL;
    v77.receiver = v34;
    v77.super_class = v33;
    id v36 = objc_msgSendSuper2(&v77, "init");
    unint64_t v82 = v33;
    double v83 = &off_100271BE0;
    unint64_t v79 = (unint64_t)v36;
    uint64_t v37 = (void *)swift_allocObject(&unk_1002751B0, 48LL, 7LL);
    uint64_t v38 = v66;
    uint64_t v39 = v67;
    _OWORD v37[2] = v66;
    v37[3] = v39;
    uint64_t v41 = v68;
    uint64_t v40 = v69;
    v37[4] = v68;
    v37[5] = v40;
    id v42 = v38;
    sub_1001626B0(v39);
    swift_retain(v41);
    sub_1001626B0(v40);
    unint64_t v43 = sub_1000EA9C4();
    View.onExitCommand(perform:)(sub_1001639BC, v37, &type metadata for SharePlayManagementView, v43);
    swift_release(v37);
    uint64_t v44 = sub_1000EAA88((id *)&v78);
    static Material.thick.getter(v44);
    uint64_t v78 = &type metadata for SharePlayManagementView;
    unint64_t v79 = v43;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v78,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
    Swift::String v46 = v71;
    View.presentationBackground<A>(_:)(v20, v71, v17, OpaqueTypeConformance2, &protocol witness table for Material);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v20, v17);
    Description[1](v23, v46);
    uint64_t v47 = v73;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v28, v73);
    uint64_t v48 = v74;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v74, v31, v47);
    swift_storeEnumTagMultiPayload(v48, v72, 0LL);
    uint64_t v78 = v46;
    unint64_t v79 = v17;
    unint64_t v80 = OpaqueTypeConformance2;
    unint64_t v81 = &protocol witness table for Material;
    uint64_t v49 = swift_getOpaqueTypeConformance2( &v78,  &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>,  1LL);
    unint64_t v50 = sub_10016291C();
    uint64_t v78 = &type metadata for SharePlayIdentityConfirmationView;
    unint64_t v79 = v17;
    unint64_t v80 = v50;
    unint64_t v81 = &protocol witness table for Material;
    uint64_t v51 = swift_getOpaqueTypeConformance2( &v78,  &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>,  1LL);
    _ConditionalContent<>.init(storage:)(v48, v47, v76, v49, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v31, v47);
  }

  else
  {
    if (qword_1002B71C0 != -1) {
      swift_once(&qword_1002B71C0, sub_100143D6C);
    }
    v84[0] = 0;
    uint64_t v53 = (ValueMetadata *)(id)qword_1002C5E58;
    char v54 = State.init(wrappedValue:)(&v78, v84, &type metadata for Bool);
    char v55 = (char)v78;
    unint64_t v56 = v79;
    uint64_t v78 = v53;
    LOBYTE(v79) = v55;
    unint64_t v80 = v56;
    static Material.thick.getter(v54);
    unint64_t v57 = sub_10016291C();
    View.presentationBackground<A>(_:)( v20,  &type metadata for SharePlayIdentityConfirmationView,  v17,  v57,  &protocol witness table for Material);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v20, v17);

    __n128 v58 = swift_release(v80);
    uint64_t v59 = v76;
    (*(void (**)(char *, char *, uint64_t, __n128))(v7 + 32))(v14, v11, v76, v58);
    uint64_t v60 = v74;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v74, v14, v59);
    swift_storeEnumTagMultiPayload(v60, v72, 1LL);
    unint64_t v61 = sub_1000EA9C4();
    uint64_t v78 = &type metadata for SharePlayManagementView;
    unint64_t v79 = v61;
    uint64_t v62 = swift_getOpaqueTypeConformance2( &v78,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
    uint64_t v78 = v71;
    unint64_t v79 = v17;
    unint64_t v80 = v62;
    unint64_t v81 = &protocol witness table for Material;
    uint64_t v63 = swift_getOpaqueTypeConformance2( &v78,  &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>,  1LL);
    uint64_t v78 = &type metadata for SharePlayIdentityConfirmationView;
    unint64_t v79 = v17;
    unint64_t v80 = v57;
    unint64_t v81 = &protocol witness table for Material;
    uint64_t v64 = swift_getOpaqueTypeConformance2( &v78,  &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>,  1LL);
    _ConditionalContent<>.init(storage:)(v60, v73, v59, v63, v64);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v59);
  }

id sub_1001617E0@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v78 = a4;
  uint64_t v88 = a5;
  uint64_t v8 = sub_1000DFE10(&qword_1002BC0D0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000DFE10(&qword_1002BC100);
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12, v13);
  unint64_t v82 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  unint64_t v81 = (char *)&v76 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  unint64_t v80 = (char *)&v76 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v84 = (char *)&v76 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  unint64_t v79 = (char *)&v76 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  double v83 = (char *)&v76 - v30;
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v86 = (char *)&v76 - v33;
  __chkstk_darwin(v32, v34);
  uint64_t v85 = (char *)&v76 - v35;
  uint64_t v36 = sub_1000DFE10((uint64_t *)&unk_1002BC108);
  uint64_t v38 = __chkstk_darwin(v36, v37);
  uint64_t v40 = (char *)&v76 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = __chkstk_darwin(v38, v41);
  uint64_t v44 = (char *)&v76 - v43;
  id result = (id)MobileGestalt_get_current_device(v42);
  if (result)
  {
    Swift::String v46 = result;
    int internalBuild = MobileGestalt_get_internalBuild();

    if (internalBuild
      && (id v48 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults],
          NSString v49 = String._bridgeToObjectiveC()(),
          unsigned int v50 = [v48 BOOLForKey:v49],
          v48,
          v49,
          v50))
    {
      uint64_t KeyPath = swift_getKeyPath(&unk_1001ED528);
      char v89 = a1;
      uint64_t v52 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v89, KeyPath, v52);
      __n128 v53 = swift_release(KeyPath);
      char v54 = *(void **)&a1[OBJC_IVAR___TVMGroupSessionManager__currentSession];
      objc_super v77 = v44;
      if (v54)
      {
        char v55 = (void *)swift_allocObject(&unk_100275088, 56LL, 7LL);
        v55[2] = a1;
        v55[3] = a2;
        unint64_t v56 = v78;
        v55[4] = a3;
        v55[5] = v56;
        v55[6] = v54;
        id v57 = v54;
        __n128 v58 = a1;
        sub_1001626B0(a2);
        swift_retain(a3);
        sub_1001626B0(v56);
        Button.init(action:label:)( sub_100162698,  v55,  sub_100161F84,  0LL,  &type metadata for Text,  &protocol witness table for Text);

        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v44, 0LL, 1LL, v12);
      }

      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v87 + 56))(v44, 1LL, 1LL, v12, v53);
        unint64_t v56 = v78;
      }

      uint64_t v60 = (void *)swift_allocObject(&unk_100275010, 48LL, 7LL);
      v60[2] = a1;
      v60[3] = a2;
      v60[4] = a3;
      v60[5] = v56;
      unint64_t v61 = a1;
      sub_1001626B0(a2);
      swift_retain(a3);
      sub_1001626B0(v56);
      Button.init(action:label:)( sub_100162B08,  v60,  sub_100161FA4,  0LL,  &type metadata for Text,  &protocol witness table for Text);
      Button.init(action:label:)( sub_100161FC4,  0LL,  sub_1001622A0,  0LL,  &type metadata for Text,  &protocol witness table for Text);
      uint64_t v62 = (void *)swift_allocObject(&unk_100275038, 48LL, 7LL);
      v62[2] = v61;
      v62[3] = a2;
      v62[4] = a3;
      v62[5] = v56;
      uint64_t v63 = v61;
      sub_1001626B0(a2);
      swift_retain(a3);
      sub_1001626B0(v56);
      uint64_t v64 = v83;
      Button.init(action:label:)( sub_100162B14,  v62,  sub_100162420,  0LL,  &type metadata for Text,  &protocol witness table for Text);
      uint64_t v65 = (void *)swift_allocObject(&unk_100275060, 48LL, 7LL);
      v65[2] = v63;
      v65[3] = a2;
      v65[4] = a3;
      v65[5] = v56;
      char v66 = v63;
      sub_1001626B0(a2);
      swift_retain(a3);
      sub_1001626B0(v56);
      uint64_t v67 = v79;
      Button.init(action:label:)( sub_100162B44,  v65,  sub_100162658,  0LL,  &type metadata for Text,  &protocol witness table for Text);
      sub_1000E04D4((uint64_t)v77, (uint64_t)v40, (uint64_t *)&unk_1002BC108);
      uint64_t v76 = v40;
      uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
      v68(v84, v85, v12);
      uint64_t v69 = v80;
      v68(v80, v86, v12);
      uint64_t v70 = v81;
      v68(v81, v64, v12);
      uint64_t v71 = v82;
      v68(v82, v67, v12);
      *(void *)uint64_t v11 = 0xD000000000000014LL;
      *((void *)v11 + 1) = 0x8000000100227ED0LL;
      v11[16] = 0;
      *((void *)v11 + 3) = _swiftEmptyArrayStorage;
      uint64_t v72 = (int *)sub_1000DFE10((uint64_t *)&unk_1002BC118);
      sub_1000E04D4((uint64_t)v40, (uint64_t)&v11[v72[12]], (uint64_t *)&unk_1002BC108);
      uint64_t v73 = v84;
      v68(&v11[v72[16]], v84, v12);
      v68(&v11[v72[20]], v69, v12);
      v68(&v11[v72[24]], v70, v12);
      v68(&v11[v72[28]], v71, v12);
      sub_1000EC004(0xD000000000000014LL, 0x8000000100227ED0LL, 0);
      uint64_t v74 = *(void (**)(char *, uint64_t))(v87 + 8);
      swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
      v74(v67, v12);
      v74(v83, v12);
      v74(v86, v12);
      v74(v85, v12);
      sub_1000E03B4((uint64_t)v77, (uint64_t *)&unk_1002BC108);
      v74(v71, v12);
      v74(v70, v12);
      v74(v69, v12);
      v74(v73, v12);
      sub_1000E03B4((uint64_t)v76, (uint64_t *)&unk_1002BC108);
      sub_1000EC044(0xD000000000000014LL, 0x8000000100227ED0LL, 0);
      swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
      uint64_t v75 = sub_1000DFE10(&qword_1002BC0F8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v11, 0LL, 1LL, v75);
      return (id)sub_1000E011C((uint64_t)v11, v88, &qword_1002BC0D0);
    }

    else
    {
      uint64_t v59 = sub_1000DFE10(&qword_1002BC0F8);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56LL))( v88,  1LL,  1LL,  v59);
    }
  }

  else
  {
    __break(1u);
  }

  return result;
}

double sub_100161F84@<D0>(uint64_t a1@<X8>)
{
  double result = 5.00316639e223;
  *(_OWORD *)a1 = xmmword_1001ED450;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_100161FA4@<D0>(uint64_t a1@<X8>)
{
  double result = 2.63048835e180;
  *(_OWORD *)a1 = xmmword_1001ED460;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
  return result;
}

double sub_100161FC4()
{
  uint64_t v0 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56LL))(v3, 1LL, 1LL, v4);
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  uint64_t v6 = static MainActor.shared.getter(v5);
  uint64_t v7 = swift_allocObject(&unk_100275170, 32LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
  *(void *)(v7 + 24) = &protocol witness table for MainActor;
  uint64_t v8 = sub_100125950((uint64_t)v3, (uint64_t)&unk_1002BC158, v7);
  *(void *)&double result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_100162088()
{
  uint64_t v1 = type metadata accessor for MainActor(0LL);
  v0[16] = static MainActor.shared.getter(v1);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[17] = v2;
  v0[18] = v3;
  return swift_task_switch(sub_1001620F0, v2, v3);
}

uint64_t sub_1001620F0()
{
  uint64_t v1 = v0 + 2;
  id v2 = [(id)objc_opt_self(ICMediaUserStateCenter) shared];
  v0[19] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1001621B4;
  uint64_t v3 = swift_continuation_init(v0 + 2, 1LL);
  v0[10] = _NSConcreteStackBlock;
  uint64_t v4 = v0 + 10;
  v4[1] = 0x40000000LL;
  void v4[2] = sub_1000E6CF4;
  v4[3] = &unk_100275188;
  v4[4] = v3;
  [v2 refreshUserStatesWithOptions:1 completion:v4];
  return swift_continuation_await(v1);
}

uint64_t sub_1001621B4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 160) = v2;
  if (v2) {
    uint64_t v3 = sub_100162250;
  }
  else {
    uint64_t v3 = sub_100162210;
  }
  return swift_task_switch(v3, *(void *)(v1 + 136), *(void *)(v1 + 144));
}

uint64_t sub_100162210()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release(*(void *)(v0 + 128));
  swift_bridgeObjectRelease(*(void *)(v0 + 120));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100162250()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = swift_release(*(void *)(v0 + 128));
  swift_willThrow(v3);
  swift_errorRelease(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1001622A0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000012LL;
  *(void *)(a1 + 8) = 0x8000000100227F30LL;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_1001622D0()
{
  uint64_t v1 = type metadata accessor for MainActor(0LL);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  uint64_t v2 = (void *)swift_task_alloc(dword_1002BC13C);
  v0[4] = v2;
  void *v2 = v0;
  v2[1] = sub_100162330;
  return sub_100162C6C(0);
}

uint64_t sub_100162330()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 16LL);
  *(void *)(*(void *)v1 + 40LL) = v0;
  swift_task_dealloc(v2);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0) {
    uint64_t v6 = sub_1001623EC;
  }
  else {
    uint64_t v6 = sub_1001623B8;
  }
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_1001623B8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001623EC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100162420(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000016LL;
  *(void *)(a1 + 8) = 0x8000000100227F10LL;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

double sub_100162450(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  type metadata accessor for MainActor(0LL);
  id v17 = a1;
  sub_1001626B0(a2);
  swift_retain(a3);
  id v18 = sub_1001626B0(a4);
  uint64_t v19 = static MainActor.shared.getter(v18);
  uint64_t v20 = (void *)swift_allocObject(a5, 64LL, 7LL);
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v17;
  v20[5] = a2;
  v20[6] = a3;
  v20[7] = a4;
  uint64_t v21 = sub_100160068((uint64_t)v15, a6, (uint64_t)v20);
  *(void *)&double result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100162570()
{
  uint64_t v1 = type metadata accessor for MainActor(0LL);
  v0[2] = v1;
  v0[3] = static MainActor.shared.getter(v1);
  uint64_t v2 = (void *)swift_task_alloc(dword_1002BC13C);
  v0[4] = v2;
  void *v2 = v0;
  v2[1] = sub_1001625D0;
  return sub_100162C6C(1);
}

uint64_t sub_1001625D0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 32LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 16LL);
  *(void *)(*(void *)v1 + 40LL) = v0;
  swift_task_dealloc(v2);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  if (v0) {
    uint64_t v6 = sub_100163AD8;
  }
  else {
    uint64_t v6 = sub_100163AD0;
  }
  return swift_task_switch(v6, v5, v4);
}

void sub_100162658(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000017LL;
  *(void *)(a1 + 8) = 0x8000000100227EF0LL;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
  *(void *)(a1 + 24) = &_swiftEmptyArrayStorage;
}

uint64_t sub_100162688@<X0>(uint64_t a1@<X8>)
{
  return sub_100160308(*(void **)v1, *(void **)(v1 + 8), *(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_100162698()
{
  return sub_100162BC8((uint64_t (*)(void, void, void, void, void))sub_1001607CC);
}

uint64_t sub_1001626A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100160814(*(char **)(v1 + 16), a1);
}

id sub_1001626B0(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

unint64_t sub_1001626C0()
{
  unint64_t result = qword_1002BC058;
  if (!qword_1002BC058)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC050);
    sub_100162744();
    sub_1000E0374(&qword_1002BC080, &qword_1002BC088, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC058);
  }

  return result;
}

unint64_t sub_100162744()
{
  unint64_t result = qword_1002BC060;
  if (!qword_1002BC060)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC068);
    sub_1000E0374(&qword_1002BC070, &qword_1002BC078, (uint64_t)&protocol conformance descriptor for HStack<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC060);
  }

  return result;
}

uint64_t sub_1001627CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100161254(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), a2);
}

unint64_t sub_1001627D8()
{
  unint64_t result = qword_1002BC0A8;
  if (!qword_1002BC0A8)
  {
    unint64_t result = swift_getWitnessTable("-}\b", &type metadata for SharePlayManagementButton.SheetType);
    atomic_store(result, (unint64_t *)&qword_1002BC0A8);
  }

  return result;
}

unint64_t sub_10016281C()
{
  unint64_t result = qword_1002BC0B0;
  if (!qword_1002BC0B0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC098);
    uint64_t v2 = sub_1000DEA98(&qword_1002BC0B8);
    uint64_t v3 = type metadata accessor for Material(255LL);
    uint64_t v6 = &type metadata for SharePlayManagementView;
    unint64_t v7 = sub_1000EA9C4();
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v6,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
    uint64_t v6 = (ValueMetadata *)v2;
    unint64_t v7 = v3;
    unint64_t v8 = OpaqueTypeConformance2;
    uint64_t v9 = &protocol witness table for Material;
    swift_getOpaqueTypeConformance2( &v6,  &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>,  1LL);
    unint64_t v5 = sub_10016291C();
    uint64_t v6 = &type metadata for SharePlayIdentityConfirmationView;
    unint64_t v7 = v3;
    unint64_t v8 = v5;
    uint64_t v9 = &protocol witness table for Material;
    swift_getOpaqueTypeConformance2( &v6,  &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC0B0);
  }

  return result;
}

unint64_t sub_10016291C()
{
  unint64_t result = qword_1002BC0C8;
  if (!qword_1002BC0C8)
  {
    unint64_t result = swift_getWitnessTable("=y\b", &type metadata for SharePlayIdentityConfirmationView);
    atomic_store(result, (unint64_t *)&qword_1002BC0C8);
  }

  return result;
}

void sub_100162960(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_100162970@<X0>(uint64_t a1@<X8>)
{
  return sub_1001617E0(*(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), a1);
}

unint64_t sub_10016297C()
{
  unint64_t result = qword_1002BC0D8;
  if (!qword_1002BC0D8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC040);
    v2[0] = sub_1000DEA98(&qword_1002BC030);
    v2[1] = &type metadata for SharePlayManagementButton.SheetType;
    void v2[2] = sub_1000DEA98(&qword_1002BC098);
    v2[3] = sub_1000E0374(&qword_1002BC0A0, &qword_1002BC030, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[4] = sub_1001627D8();
    v2[5] = sub_10016281C();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.fullScreenCover<A, B>(item:onDismiss:content:)>>,  1LL);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC0D8);
  }

  return result;
}

unint64_t sub_100162A80()
{
  unint64_t result = qword_1002BC0E8;
  if (!qword_1002BC0E8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC0D0);
    sub_1000E0374(&qword_1002BC0F0, &qword_1002BC0F8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC0E8);
  }

  return result;
}

uint64_t sub_100162B08()
{
  return sub_1001639C4(0LL);
}

double sub_100162B14()
{
  return sub_100162450( *(void **)(v0 + 16),  *(void **)(v0 + 24),  *(void *)(v0 + 32),  *(void **)(v0 + 40),  (uint64_t)&unk_100275148,  (uint64_t)&unk_1002BC148);
}

double sub_100162B44()
{
  return sub_100162450( *(void **)(v0 + 16),  *(void **)(v0 + 24),  *(void *)(v0 + 32),  *(void **)(v0 + 40),  (uint64_t)&unk_1002750B0,  (uint64_t)&unk_1002BC130);
}

uint64_t sub_100162B74()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release(*(void *)(v0 + 32));
  uint64_t v2 = *(void **)(v0 + 40);

  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100162BC8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100162BE0()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_1002BC12C);
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000E0B64;
  return sub_100162570();
}

uint64_t sub_100162C6C(char a1)
{
  *(_BYTE *)(v1 + 664) = a1;
  uint64_t v2 = type metadata accessor for URLRequest(0LL);
  *(void *)(v1 + 504) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v1 + 51sub_1000E053C(v0 + 2) = v3;
  *(void *)(v1 + 520) = swift_task_alloc((*(void *)(v3 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000DFE10(&qword_1002B7890);
  *(void *)(v1 + 528) = swift_task_alloc((*(void *)(*(void *)(v4 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for URL(0LL);
  *(void *)(v1 + 536) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v1 + 544) = v6;
  unint64_t v7 = (*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v1 + 55sub_1000E053C(v0 + 2) = swift_task_alloc(v7);
  *(void *)(v1 + 560) = swift_task_alloc(v7);
  uint64_t v8 = type metadata accessor for MainActor(0LL);
  *(void *)(v1 + 568) = static MainActor.shared.getter(v8);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(void *)(v1 + 576) = v9;
  *(void *)(v1 + 584) = v10;
  return swift_task_switch(sub_100162D60, v9, v10);
}

uint64_t sub_100162D60()
{
  id v1 = objc_allocWithZone(&OBJC_CLASS___ICMusicKitRequestContext);
  v0[26] = _NSConcreteStackBlock;
  v0[30] = sub_1000E8E50;
  v0[31] = 0LL;
  v0[27] = 1107296256LL;
  v0[28] = sub_1000E8E54;
  v0[29] = &unk_1002750C8;
  uint64_t v2 = _Block_copy(v0 + 26);
  id v3 = [v1 initWithBlock:v2];
  v0[74] = v3;
  _Block_release(v2);
  swift_release(v0[31]);
  uint64_t result = swift_isEscapingClosureAtFileLocation(0LL, "", 0LL, 0LL, 0LL, 1LL);
  if ((result & 1) != 0)
  {
    __break(1u);
  }

  else
  {
    id v5 = [(id)objc_opt_self(ICURLBagProvider) sharedBagProvider];
    v0[75] = v5;
    v0[15] = v0 + 62;
    v0[10] = v0;
    v0[11] = sub_100162ED4;
    uint64_t v6 = swift_continuation_init(v0 + 10, 1LL);
    v0[47] = _NSConcreteStackBlock;
    v0[48] = 0x40000000LL;
    v0[49] = sub_1000E8A40;
    v0[50] = &unk_1002750F0;
    v0[51] = v6;
    [v5 getBagForRequestContext:v3 withCompletionHandler:v0 + 47];
    return swift_continuation_await(v0 + 10);
  }

  return result;
}

uint64_t sub_100162ED4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 608) = v2;
  if (v2) {
    id v3 = sub_100163598;
  }
  else {
    id v3 = sub_100162F34;
  }
  return swift_task_switch(v3, *(void *)(v1 + 576), *(void *)(v1 + 584));
}

uint64_t sub_100162F34()
{
  uint64_t v1 = *(void **)(v0 + 600);
  uint64_t v2 = *(void **)(v0 + 496);
  *(void *)(v0 + 6swift_unknownObjectWeakDestroy(v0 + 16) = v2;

  static String._unconditionallyBridgeFromObjectiveC(_:)(ICURLBagKeyMusicFriends);
  uint64_t v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = objc_msgSend(v2, "dictionaryForBagKey:", v5, swift_bridgeObjectRelease(v4).n128_f64[0]);

  if (!v6) {
    goto LABEL_14;
  }
  unint64_t v7 = (_OWORD *)(v0 + 416);
  char v8 = *(_BYTE *)(v0 + 664);
  uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v6,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  uint64_t v10 = 0x6472616F6266666FLL;
  if ((v8 & 1) == 0) {
    uint64_t v10 = 0x6472616F626E6FLL;
  }
  unint64_t v11 = 0xE800000000000000LL;
  if ((v8 & 1) == 0) {
    unint64_t v11 = 0xE700000000000000LL;
  }
  *(void *)(v0 + 448) = v10;
  *(void *)(v0 + 456) = v11;
  AnyHashable.init<A>(_:)(v0 + 448, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v9 + 16) && (unint64_t v12 = sub_10013CCD8(v0 + 296), (v13 & 1) != 0))
  {
    sub_1000E0094(*(void *)(v9 + 56) + 32 * v12, v0 + 416);
  }

  else
  {
    *unint64_t v7 = 0u;
    *(_OWORD *)(v0 + 43sub_1000E053C(v0 + 2) = 0u;
  }

  swift_bridgeObjectRelease(v9);
  sub_1000E0060(v0 + 296);
  if (!*(void *)(v0 + 440))
  {
    uint64_t v24 = *(void **)(v0 + 592);
    uint64_t v25 = *(void *)(v0 + 568);

    swift_release(v25);
    uint64_t v21 = &qword_1002B7850;
    goto LABEL_16;
  }

  if ((swift_dynamicCast(v0 + 464, v0 + 416, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) == 0)
  {
LABEL_14:
    uint64_t v22 = *(void **)(v0 + 592);
    uint64_t v23 = *(void *)(v0 + 568);

    swift_release(v23);
LABEL_17:
    uint64_t v26 = *(void *)(v0 + 552);
    uint64_t v27 = *(void *)(v0 + 528);
    uint64_t v28 = *(void *)(v0 + 520);
    swift_task_dealloc(*(void *)(v0 + 560));
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  uint64_t v14 = *(void *)(v0 + 544);
  uint64_t v15 = *(void *)(v0 + 536);
  uint64_t v16 = *(void *)(v0 + 528);
  uint64_t v17 = *(void *)(v0 + 472);
  URL.init(string:)(*(void *)(v0 + 464), v17);
  __n128 v18 = swift_bridgeObjectRelease(v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(v16, 1LL, v15, v18) == 1)
  {
    uint64_t v19 = *(void **)(v0 + 592);
    uint64_t v20 = *(void *)(v0 + 568);
    unint64_t v7 = *(_OWORD **)(v0 + 528);

    swift_release(v20);
    uint64_t v21 = &qword_1002B7890;
LABEL_16:
    sub_1000E03B4((uint64_t)v7, v21);
    goto LABEL_17;
  }

  uint64_t v30 = *(void **)(v0 + 592);
  uint64_t v31 = *(void *)(v0 + 560);
  uint64_t v32 = *(void *)(v0 + 552);
  uint64_t v33 = *(void *)(v0 + 544);
  uint64_t v34 = *(void *)(v0 + 536);
  (*(void (**)(uint64_t, void, uint64_t))(v33 + 32))(v31, *(void *)(v0 + 528), v34);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v32, v31, v34);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v32, 0LL, 60.0);
  URLRequest.httpMethod.setter(1414745936LL, 0xE400000000000000LL);
  id v35 = objc_allocWithZone(&OBJC_CLASS___ICMusicKitURLRequest);
  id v36 = v30;
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v38 = [v35 initWithURLRequest:isa requestContext:v36];
  *(void *)(v0 + 624) = v38;

  id v39 = [(id)objc_opt_self(ICURLSessionManager) highPrioritySession];
  *(void *)(v0 + 63sub_1000E053C(v0 + 2) = v39;
  *(void *)(v0 + 184) = v0 + 480;
  *(void *)(v0 + 144) = v0;
  *(void *)(v0 + 15sub_1000E053C(v0 + 2) = sub_100163318;
  *(void *)(v0 + 368) = swift_continuation_init(v0 + 144, 1LL);
  *(void *)(v0 + 336) = _NSConcreteStackBlock;
  *(void *)(v0 + 344) = 0x40000000LL;
  *(void *)(v0 + 35sub_1000E053C(v0 + 2) = sub_1000E8A40;
  *(void *)(v0 + 360) = &unk_100275108;
  [v39 enqueueDataRequest:v38 withCompletionHandler:v0 + 336];
  return swift_continuation_await(v0 + 144);
}

uint64_t sub_100163318()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 176);
  *(void *)(*v0 + 640) = v2;
  if (v2) {
    uint64_t v3 = sub_100163620;
  }
  else {
    uint64_t v3 = sub_100163378;
  }
  return swift_task_switch(v3, *(void *)(v1 + 576), *(void *)(v1 + 584));
}

uint64_t sub_100163378()
{
  uint64_t v1 = *(void **)(v0 + 632);

  id v2 = [(id)objc_opt_self(ICMediaUserStateCenter) shared];
  *(void *)(v0 + 648) = v2;
  *(void *)(v0 + 56) = v0 + 488;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_100163450;
  *(void *)(v0 + 288) = swift_continuation_init(v0 + 16, 1LL);
  *(void *)(v0 + 256) = _NSConcreteStackBlock;
  *(void *)(v0 + 264) = 0x40000000LL;
  *(void *)(v0 + 27sub_1000E053C(v0 + 2) = sub_1000E6CF4;
  *(void *)(v0 + 280) = &unk_100275120;
  [v2 refreshUserStatesWithOptions:1 completion:v0 + 256];
  return swift_continuation_await(v0 + 16);
}

uint64_t sub_100163450()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 656) = v2;
  if (v2) {
    uint64_t v3 = sub_100163704;
  }
  else {
    uint64_t v3 = sub_1001634B0;
  }
  return swift_task_switch(v3, *(void *)(v1 + 576), *(void *)(v1 + 584));
}

uint64_t sub_1001634B0()
{
  uint64_t v14 = *(void **)(v0 + 648);
  uint64_t v1 = *(void **)(v0 + 624);
  uint64_t v2 = *(void **)(v0 + 592);
  uint64_t v3 = *(void *)(v0 + 568);
  uint64_t v4 = *(void *)(v0 + 560);
  uint64_t v5 = *(void *)(v0 + 544);
  uint64_t v6 = *(void *)(v0 + 536);
  uint64_t v7 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 504);
  uint64_t v9 = *(void *)(v0 + 512);

  swift_release(v3);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease(*(void *)(v0 + 488));

  uint64_t v10 = *(void *)(v0 + 552);
  uint64_t v11 = *(void *)(v0 + 528);
  uint64_t v12 = *(void *)(v0 + 520);
  swift_task_dealloc(*(void *)(v0 + 560));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100163598()
{
  uint64_t v1 = *(void **)(v0 + 600);
  uint64_t v2 = *(void **)(v0 + 592);
  uint64_t v3 = swift_release(*(void *)(v0 + 568));
  swift_willThrow(v3);

  uint64_t v4 = *(void *)(v0 + 552);
  uint64_t v5 = *(void *)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 520);
  swift_task_dealloc(*(void *)(v0 + 560));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100163620()
{
  uint64_t v1 = *(void **)(v0 + 624);
  uint64_t v2 = *(void **)(v0 + 616);
  uint64_t v3 = *(void **)(v0 + 592);
  uint64_t v14 = *(void *)(v0 + 560);
  uint64_t v15 = *(void **)(v0 + 632);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 504);
  uint64_t v7 = *(void *)(v0 + 512);
  uint64_t v9 = swift_release(*(void *)(v0 + 568));
  swift_willThrow(v9);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v5);

  uint64_t v10 = *(void *)(v0 + 552);
  uint64_t v11 = *(void *)(v0 + 528);
  uint64_t v12 = *(void *)(v0 + 520);
  swift_task_dealloc(*(void *)(v0 + 560));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100163704()
{
  uint64_t v1 = *(void **)(v0 + 624);
  uint64_t v2 = *(void **)(v0 + 616);
  uint64_t v3 = *(void **)(v0 + 592);
  uint64_t v14 = *(void *)(v0 + 560);
  uint64_t v15 = *(void **)(v0 + 648);
  uint64_t v4 = *(void *)(v0 + 544);
  uint64_t v5 = *(void *)(v0 + 536);
  uint64_t v6 = *(void *)(v0 + 520);
  uint64_t v8 = *(void *)(v0 + 504);
  uint64_t v7 = *(void *)(v0 + 512);
  uint64_t v9 = swift_release(*(void *)(v0 + 568));
  swift_willThrow(v9);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v14, v5);

  uint64_t v10 = *(void *)(v0 + 552);
  uint64_t v11 = *(void *)(v0 + 528);
  uint64_t v12 = *(void *)(v0 + 520);
  swift_task_dealloc(*(void *)(v0 + 560));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001637E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001637F8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_100163804()
{
  uint64_t v1 = *(void **)(v0 + 40);
  swift_release(*(void *)(v0 + 48));
  uint64_t v2 = *(void **)(v0 + 56);
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100163858()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_1002BC144);
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000E01FC;
  return sub_1001622D0();
}

uint64_t sub_1001638E4()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100163908()
{
  uint64_t v1 = (void *)swift_task_alloc(dword_1002BC154);
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000E01FC;
  return sub_100162088();
}

uint64_t sub_100163970()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_release(*(void *)(v0 + 32));
  uint64_t v2 = *(void **)(v0 + 40);
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1001639BC()
{
  return sub_1001639C4(1LL);
}

uint64_t sub_1001639C4(uint64_t a1)
{
  __int128 v5 = *(_OWORD *)(v1 + 24);
  uint64_t v4 = a1;
  uint64_t v2 = sub_1000DFE10(&qword_1002BC090);
  return State.wrappedValue.setter(&v4, v2);
}

unint64_t sub_100163A20()
{
  unint64_t result = qword_1002BC1A8;
  if (!qword_1002BC1A8)
  {
    uint64_t v1 = sub_1000DEA98((uint64_t *)&unk_1002BC1B0);
    v2[0] = sub_1000DEA98(&qword_1002BC040);
    v2[1] = sub_1000DEA98(&qword_1002BC0D0);
    void v2[2] = sub_10016297C();
    v2[3] = sub_100162A80();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.contextMenu<A>(menuItems:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC1A8);
  }

  return result;
}

uint64_t sub_100163ADC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_100163B14 + 4 * byte_1001ED5B0[a1]))( 0xD00000000000001FLL,  0x8000000100223360LL);
}

uint64_t sub_100163B14(uint64_t a1)
{
  return a1 + 6;
}

unint64_t sub_100163BB8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_100165938(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void *sub_100163BE8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1LL && *result != 0LL;
  *(void *)a2 = *result == 1LL;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void sub_100163C18(void *a1@<X8>)
{
  *a1 = &off_10026FB58;
}

uint64_t sub_100163C28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a2;
  uint64_t v3 = sub_100163ADC(*a1);
  uint64_t v5 = v4;
  uint64_t v6 = sub_100163ADC(v2);
  if (v3 == v6 && v5 == v7)
  {
    char v10 = 1;
    uint64_t v9 = v5;
  }

  else
  {
    uint64_t v9 = v7;
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0LL);
  }

  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_100163CB0()
{
  unsigned __int8 v1 = *v0;
  Hasher.init(_seed:)(v6, 0LL);
  uint64_t v2 = sub_100163ADC(v1);
  uint64_t v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_100163D10(uint64_t a1)
{
  uint64_t v3 = sub_100163ADC(*v1);
  uint64_t v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(void *)&double result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_100163D50(uint64_t a1)
{
  unsigned __int8 v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  uint64_t v3 = sub_100163ADC(v2);
  uint64_t v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_100163DAC@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_100165C90(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100163DD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100163ADC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100163E00@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_100164D68(*a1);
  *a2 = result;
  return result;
}

void sub_100163E28(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_100163E34()
{
  unint64_t result = sub_100164B5C();
  qword_1002C5EA8 = result;
  return result;
}

uint64_t sub_100163E50()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ED7F8);
  uint64_t v2 = swift_getKeyPath(&unk_1001ED820);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void *sub_100163EC0(uint64_t a1)
{
  uint64_t v3 = sub_1000DFE10(&qword_1002BA170);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = &v1[OBJC_IVAR___TVMLibrarySortMenu_selectionHandler];
  *(void *)uint64_t v8 = 0LL;
  *((void *)v8 + 1) = 0LL;
  uint64_t v9 = &v1[OBJC_IVAR___TVMLibrarySortMenu__isFiltered];
  LOBYTE(v22[0]) = 0;
  char v10 = v1;
  Published.init(initialValue:)(v22, &type metadata for Bool);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
  *(void *)&v10[OBJC_IVAR___TVMLibrarySortMenu_pageType] = a1;

  uint64_t v11 = (objc_class *)type metadata accessor for SortMenu(0LL);
  v23.receiver = v10;
  v23.super_class = v11;
  id v12 = objc_msgSendSuper2(&v23, "init");
  char v13 = v12;
  switch(__ROR8__(a1, 1))
  {
    case 0LL:
    case 4LL:
    case 5LL:

      char v13 = 0LL;
      break;
    case 2LL:
      v22[3] = &type metadata for Feature.MediaPlayer;
      void v22[4] = sub_1000F5800();
      id v14 = v13;
      char v15 = isFeatureEnabled(_:)(v22);
      sub_1000E053C(v22);
      if ((v15 & 1) != 0) {
        goto LABEL_6;
      }

      char v13 = 0LL;
      break;
    default:
      id v16 = v12;
LABEL_6:
      BOOL v17 = sub_100164148();
      uint64_t KeyPath = swift_getKeyPath(&unk_1001ED7F8);
      uint64_t v19 = swift_getKeyPath(&unk_1001ED820);
      LOBYTE(v22[0]) = v17;
      static Published.subscript.setter(v22, v13, KeyPath, v19);
      break;
  }

  return v13;
}

void sub_1001640C8()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___TVMLibrarySortMenu_pageType) - 2LL;
  if (v1 <= 0xC && ((0x1EBDu >> v1) & 1) != 0)
  {
    char v2 = sub_100164538(byte_1001ED9B3[v1]);
    sub_100164D78(v2);
  }

BOOL sub_100164148()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___TVMLibrarySortMenu_pageType) - 2LL;
  return v1 <= 0xC && ((0x1EBDu >> v1) & 1) != 0 && sub_100165630(byte_1001ED9B3[v1]);
}

uint64_t sub_100164184()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR___TVMLibrarySortMenu_pageType) - 2LL;
  if (v1 > 0xC) {
    return 11LL;
  }
  else {
    return byte_1001ED9A6[v1];
  }
}

uint64_t sub_1001641B4()
{
  uint64_t v1 = 0LL;
  uint64_t v2 = 2LL;
  switch(*(void *)(v0 + OBJC_IVAR___TVMLibrarySortMenu_pageType))
  {
    case 2LL:
      return sub_100164538(v2);
    case 3LL:
      return 4LL;
    case 4LL:
      uint64_t v2 = 7LL;
      return sub_100164538(v2);
    case 5LL:
      return sub_100164538(3LL);
    case 6LL:
      return sub_100164538(0LL);
    case 7LL:
      return sub_100164538(5LL);
    case 9LL:
      return sub_100164538(1LL);
    case 0xBLL:
      return sub_100164538(4LL);
    case 0xCLL:
      return sub_100164538(9LL);
    case 0xDLL:
      return sub_100164538(8LL);
    case 0xELL:
      return sub_100164538(10LL);
    default:
      return v1;
  }

uint64_t sub_100164240(uint64_t a1)
{
  if (a1 != 1)
  {
    if (!a1)
    {
      uint64_t countAndFlagsBits = 0LL;
      uint64_t v10 = *(void *)(v1 + OBJC_IVAR___TVMLibrarySortMenu_pageType) - 2LL;
      uint64_t v2 = 0xD00000000000001CLL;
      uint64_t v4 = (void *)0x80000001002281D0LL;
      switch(v10)
      {
        case 0LL:
          uint64_t v2 = 0xD00000000000001ELL;
          uint64_t v3 = "MusicLibraryFilterAllPlaylists";
          goto LABEL_3;
        case 2LL:
          goto LABEL_4;
        case 3LL:
          uint64_t v2 = 0xD00000000000001BLL;
          uint64_t v3 = "MusicLibraryFilterAllAlbums";
          goto LABEL_3;
        case 4LL:
          uint64_t v11 = "MusicLibraryFilterAllSongs";
          goto LABEL_14;
        case 5LL:
          uint64_t v11 = "MusicLibraryFilterAllItems";
LABEL_14:
          uint64_t v4 = (void *)((unint64_t)(v11 - 32) | 0x8000000000000000LL);
          uint64_t v2 = 0xD00000000000001ALL;
          goto LABEL_4;
        case 7LL:
          uint64_t v2 = 0xD000000000000020LL;
          uint64_t v3 = "MusicLibraryFilterAllMusicVideos";
          goto LABEL_3;
        case 9LL:
          uint64_t v2 = 0xD000000000000021LL;
          uint64_t v3 = "MusicLibraryFilterAllCompilations";
          goto LABEL_3;
        default:
          return countAndFlagsBits;
      }
    }

    uint64_t v12 = a1;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for LibraryFilterType,  &v12,  &type metadata for LibraryFilterType,  &type metadata for Int);
    __break(1u);
    JUMPOUT(0x1001643E4LL);
  }

  uint64_t v2 = 0xD00000000000001BLL;
  uint64_t v3 = "MusicLibraryFilterFavorites";
LABEL_3:
  uint64_t v4 = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000LL);
LABEL_4:
  uint64_t v5 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v13._object = (void *)0xE000000000000000LL;
  v6._uint64_t countAndFlagsBits = v2;
  v6._object = v4;
  v7._uint64_t countAndFlagsBits = 0LL;
  v7._object = (void *)0xE000000000000000LL;
  v13._uint64_t countAndFlagsBits = 0LL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, v5, v7, v13)._countAndFlagsBits;
  swift_bridgeObjectRelease(v4);

  return countAndFlagsBits;
}

uint64_t sub_10016440C(uint64_t result)
{
  if (result == 1) {
    return 1918989427LL;
  }
  if (result)
  {
    uint64_t v2 = result;
    unint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)( &type metadata for LibraryFilterType,  &v2,  &type metadata for LibraryFilterType,  &type metadata for Int);
    __break(1u);
  }

  else
  {
    switch(*(void *)(v1 + OBJC_IVAR___TVMLibrarySortMenu_pageType))
    {
      case 2LL:
      case 6LL:
      case 7LL:
      case 9LL:
        unint64_t result = 0x6F6E2E636973756DLL;
        break;
      case 4LL:
        unint64_t result = 0x696D2E636973756DLL;
        break;
      case 5LL:
        unint64_t result = 0xD000000000000018LL;
        break;
      case 0xBLL:
        unint64_t result = 0xD000000000000013LL;
        break;
      default:
        return result;
    }
  }

  return result;
}

uint64_t sub_100164538(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  uint64_t v5 = sub_100163ADC(a1);
  uint64_t v7 = v6;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = objc_msgSend(v4, "integerForKey:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

  unint64_t v10 = sub_100164D68((unint64_t)v9);
  if ((_BYTE)v10)
  {
    BOOL v13 = v10;
  }

  else
  {
    if (v5 == 0xD000000000000028LL && v7 == 0x8000000100223470LL) {
      goto LABEL_9;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, 0xD000000000000028LL, 0x8000000100223470LL, 0LL);
    swift_bridgeObjectRelease(v7);
    if ((v11 & 1) == 0)
    {
LABEL_6:
      unint64_t v12 = *(void *)(v2 + OBJC_IVAR___TVMLibrarySortMenu_pageType) - 2LL;
      if (v12 >= 0xD) {
        return 0LL;
      }
      return byte_1001ED9C0[v12];
    }

    while (1)
    {
      id v15 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
      uint64_t v16 = sub_100163ADC(2u);
      uint64_t v18 = v17;
      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = objc_msgSend(v15, "integerForKey:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

      unint64_t v21 = sub_100164D68((unint64_t)v20);
      if ((_BYTE)v21) {
        break;
      }
      if (v16 == 0xD000000000000028LL && v18 == 0x8000000100223470LL)
      {
LABEL_9:
        swift_bridgeObjectRelease(0x8000000100223470LL);
      }

      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, 0xD000000000000028LL, 0x8000000100223470LL, 0LL);
        swift_bridgeObjectRelease(v18);
        if ((v14 & 1) == 0) {
          goto LABEL_6;
        }
      }
    }

    BOOL v13 = v21;
    a1 = 2LL;
  }

  if (qword_1002B71E0 != -1) {
    swift_once(&qword_1002B71E0, sub_100163E34);
  }
  uint64_t v22 = qword_1002C5EA8;
  if (!*(void *)(qword_1002C5EA8 + 16)
    || (uint64_t v23 = sub_10013CD6C(a1), (v24 & 1) == 0)
    || !sub_100131C28(v13, *(void *)(*(void *)(v22 + 56) + 8 * v23)))
  {
    unint64_t v12 = *(void *)(v2 + OBJC_IVAR___TVMLibrarySortMenu_pageType) - 2LL;
    if (v12 > 0xC) {
      return 0LL;
    }
    return byte_1001ED9C0[v12];
  }

  return v13;
}

id sub_100164828()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SortMenu(0LL);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001648B4()
{
  return type metadata accessor for SortMenu(0LL);
}

uint64_t type metadata accessor for SortMenu(uint64_t a1)
{
  uint64_t result = qword_1002BC200;
  if (!qword_1002BC200) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SortMenu);
  }
  return result;
}

void sub_1001648F8(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_1001ED600;
  sub_1001176EC();
  if (v3 <= 0x3F)
  {
    void v4[2] = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 3LL, v4, a1 + 80);
  }

ValueMetadata *type metadata accessor for LibraryFilterType()
{
  return &type metadata for LibraryFilterType;
}

ValueMetadata *type metadata accessor for LibraryPageType()
{
  return &type metadata for LibraryPageType;
}

unint64_t sub_1001649A0()
{
  unint64_t result = qword_1002BC210;
  if (!qword_1002BC210)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001ED6BC, &type metadata for LibraryPageType);
    atomic_store(result, (unint64_t *)&qword_1002BC210);
  }

  return result;
}

unint64_t sub_1001649E8()
{
  unint64_t result = qword_1002BC218;
  if (!qword_1002BC218)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BA250);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1002BC218);
  }

  return result;
}

uint64_t sub_100164A38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SortMenu(0LL);
  uint64_t result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_100164A74@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ED7F8);
  uint64_t v5 = swift_getKeyPath(&unk_1001ED820);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100164AF0(char *a1, void **a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001ED7F8);
  uint64_t v5 = swift_getKeyPath(&unk_1001ED820);
  char v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

unint64_t sub_100164B5C()
{
  uint64_t v0 = sub_1000DFE10(&qword_1002BC220);
  uint64_t inited = swift_initStackObject(v0, &v3);
  *(void *)(inited + 40) = &off_10026E550;
  *(_BYTE *)(inited + 48) = 2;
  *(void *)(inited + 56) = &off_10026E578;
  *(_BYTE *)(inited + 64) = 3;
  *(void *)(inited + 7sub_1000E053C(v0 + 2) = &off_10026E5A0;
  *(_BYTE *)(inited + 80) = 4;
  *(void *)(inited + 88) = &off_10026E5C8;
  *(_BYTE *)(inited + 96) = 9;
  *(void *)(inited + 104) = &off_10026E5F0;
  *(_BYTE *)(inited + 11sub_1000E053C(v0 + 2) = 1;
  *(void *)(inited + 120) = &off_10026E618;
  *(_BYTE *)(inited + 128) = 5;
  *(void *)(inited + 136) = &off_10026E640;
  *(_BYTE *)(inited + 144) = 6;
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001ED9D0;
  *(void *)(inited + 15sub_1000E053C(v0 + 2) = &off_10026E668;
  *(_BYTE *)(inited + 160) = 8;
  *(_BYTE *)(inited + 3sub_1000E053C(v0 + 2) = 0;
  *(void *)(inited + 168) = &off_10026E690;
  *(_BYTE *)(inited + 176) = 10;
  *(void *)(inited + 184) = &off_10026E6B8;
  *(_BYTE *)(inited + 19sub_1000E053C(v0 + 2) = 7;
  *(void *)(inited + 200) = &off_10026E6E0;
  return sub_100186FFC(inited);
}

uint64_t sub_100164C70(char a1, char a2)
{
  uint64_t v2 = 0xD000000000000015LL;
  if ((a1 & 1) != 0)
  {
    if ((a2 & 1) != 0) {
      uint64_t v2 = 0xD00000000000001BLL;
    }
    else {
      uint64_t v2 = 0xD000000000000017LL;
    }
    if ((a2 & 1) != 0) {
      uint64_t v3 = (void *)0x8000000100228250LL;
    }
    else {
      uint64_t v3 = (void *)0x8000000100228230LL;
    }
  }

  else
  {
    if ((a2 & 1) == 0) {
      return 0LL;
    }
    uint64_t v3 = (void *)0x8000000100228210LL;
  }

  id v4 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v9._object = (void *)0xE000000000000000LL;
  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v3;
  v6._uint64_t countAndFlagsBits = 0LL;
  v6._object = (void *)0xE000000000000000LL;
  v9._uint64_t countAndFlagsBits = 0LL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, v4, v6, v9)._countAndFlagsBits;
  swift_bridgeObjectRelease(v3);

  return countAndFlagsBits;
}

unint64_t sub_100164D68(unint64_t result)
{
  if (result >= 0x10) {
    return 16LL;
  }
  return result;
}

void sub_100164D78(char a1)
{
  __asm { BR              X10 }

uint64_t sub_100164DBC()
{
  return 0LL;
}

BOOL sub_100165630(unsigned __int8 a1)
{
  uint64_t v1 = sub_100163ADC(a1);
  uint64_t v3 = v2;
  uint64_t v9 = v1;
  uint64_t v10 = v2;
  swift_bridgeObjectRetain(v2);
  v4._uint64_t countAndFlagsBits = 0x7265746C69465FLL;
  v4._object = (void *)0xE700000000000000LL;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(v3);
  id v5 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults", v9);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = objc_msgSend(v5, "integerForKey:", v6, swift_bridgeObjectRelease(v10).n128_f64[0]);

  return v7 == (id)1;
}

uint64_t sub_1001656F8(char a1, uint64_t a2, char a3)
{
  uint64_t countAndFlagsBits = 0LL;
  uint64_t v4 = 0xD000000000000019LL;
  id v5 = (void *)0x8000000100224AF0LL;
  switch(a1)
  {
    case 1:
    case 3:
      goto LABEL_14;
    case 2:
    case 6:
      uint64_t v4 = 0xD00000000000001ALL;
      id v7 = "MusicLibrarySortTypeArtist";
      goto LABEL_11;
    case 4:
      uint64_t v4 = 0xD000000000000020LL;
      id v7 = "MusicLibrarySortTypePlaylistType";
      goto LABEL_11;
    case 5:
    case 11:
    case 13:
      if ((a3 & 1) != 0)
      {
LABEL_7:
        id v5 = (void *)0x8000000100224A70LL;
        uint64_t v4 = 0xD000000000000024LL;
      }

      else
      {
        uint64_t v4 = 0xD00000000000002ALL;
        id v5 = (void *)0x8000000100228300LL;
        switch(a2)
        {
          case 2LL:
          case 3LL:
          case 7LL:
            NSString v6 = "MusicLibrarySortTypeDateAdded_playlists";
            goto LABEL_13;
          case 6LL:
            uint64_t v4 = 0xD000000000000023LL;
            id v7 = "MusicLibrarySortTypeDateAdded_songs";
            goto LABEL_11;
          case 9LL:
            uint64_t v4 = 0xD000000000000029LL;
            id v7 = "MusicLibrarySortTypeDateAdded_musicVideos";
            goto LABEL_11;
          case 11LL:
            goto LABEL_14;
          default:
            goto LABEL_7;
        }
      }

      goto LABEL_14;
    case 7:
    case 9:
      uint64_t v4 = 0xD000000000000026LL;
      id v7 = "MusicLibrarySortTypeAlbumYearAscending";
      goto LABEL_11;
    case 8:
      NSString v6 = "MusicLibrarySortTypeAlbumYearDescending";
      goto LABEL_13;
    case 12:
      uint64_t v4 = 0xD00000000000001ELL;
      id v7 = "MusicLibrarySortTypeDatePlayed";
LABEL_11:
      id v5 = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000LL);
      goto LABEL_14;
    case 14:
      NSString v6 = "MusicLibrarySortTypePlaylistDateUpdated";
LABEL_13:
      id v5 = (void *)((unint64_t)(v6 - 32) | 0x8000000000000000LL);
      uint64_t v4 = 0xD000000000000027LL;
LABEL_14:
      NSString v8 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
      v12._object = (void *)0xE000000000000000LL;
      v9._uint64_t countAndFlagsBits = v4;
      v9._object = v5;
      v10._uint64_t countAndFlagsBits = 0LL;
      v10._object = (void *)0xE000000000000000LL;
      v12._uint64_t countAndFlagsBits = 0LL;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)( v9,  (Swift::String_optional)0,  v8,  v10,  v12)._countAndFlagsBits;
      swift_bridgeObjectRelease(v5);

      break;
    default:
      return countAndFlagsBits;
  }

  return countAndFlagsBits;
}

unint64_t sub_100165938(unint64_t result)
{
  if (result > 0xE) {
    return 0LL;
  }
  return result;
}

unint64_t sub_100165950()
{
  unint64_t result = qword_1002BA190;
  if (!qword_1002BA190)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSSortDescriptor);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002BA190);
  }

  return result;
}

uint64_t getEnumTagSinglePayload for LibrarySortCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }

uint64_t storeEnumTagSinglePayload for LibrarySortCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF5) {
    return ((uint64_t (*)(void))((char *)&loc_100165A68 + 4 * byte_1001ED5DD[v4]))();
  }
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_100165A9C + 4 * byte_1001ED5D8[v4]))();
}

uint64_t sub_100165A9C(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100165AA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100165AACLL);
  }
  return result;
}

uint64_t sub_100165AB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100165AC0LL);
  }
  *(_BYTE *)unint64_t result = a2 + 10;
  return result;
}

uint64_t sub_100165AC4(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100165ACC(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibrarySortCategory()
{
  return &type metadata for LibrarySortCategory;
}

uint64_t getEnumTagSinglePayload for LibrarySortType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }

uint64_t storeEnumTagSinglePayload for LibrarySortType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xF0) {
    return ((uint64_t (*)(void))((char *)&loc_100165BC4 + 4 * byte_1001ED5E7[v4]))();
  }
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_100165BF8 + 4 * byte_1001ED5E2[v4]))();
}

uint64_t sub_100165BF8(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100165C00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100165C08LL);
  }
  return result;
}

uint64_t sub_100165C14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100165C1CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 15;
  return result;
}

uint64_t sub_100165C20(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100165C28(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LibrarySortType()
{
  return &type metadata for LibrarySortType;
}

unint64_t sub_100165C4C()
{
  unint64_t result = qword_1002BC228;
  if (!qword_1002BC228)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001ED97C, &type metadata for LibrarySortCategory);
    atomic_store(result, (unint64_t *)&qword_1002BC228);
  }

  return result;
}

unint64_t sub_100165C90(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10026FA30, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xB) {
    return 11LL;
  }
  else {
    return v3;
  }
}

double sub_100165CE0()
{
  if (qword_1002B70D8 != -1) {
    swift_once(&qword_1002B70D8, sub_1000F6E64);
  }
  float32x4_t v1 = v0[4];
  if (v0[2].i64[0] >= 1)
  {
    float32x4_t v12 = v0[4];
    __int128 v13 = xmmword_1002C59C0;
    Swift::String v2 = (char **)&v0[2].i64[1];
    swift_beginAccess(&v0[2].u32[2], v15, 33LL, 0LL);
    unint64_t v3 = (char *)v0[2].i64[1];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
    v0[2].i64[1] = (uint64_t)v3;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v3 = sub_10015A614(0LL, *((void *)v3 + 2) + 1LL, 1, v3);
      void *v2 = v3;
    }

    unint64_t v6 = *((void *)v3 + 2);
    unint64_t v5 = *((void *)v3 + 3);
    float32x4_t v7 = v12;
    if (v6 >= v5 >> 1)
    {
      char v11 = sub_10015A614((char *)(v5 > 1), v6 + 1, 1, v3);
      float32x4_t v7 = v12;
      unint64_t v3 = v11;
      void *v2 = v11;
    }

    *((void *)v3 + sub_1000E053C(v0 + 2) = v6 + 1;
    *(float32x4_t *)&v3[16 * v6 + 32] = v7;
    uint64_t v8 = v0[2].i64[1];
    swift_endAccess(v15);
    float32x4_t v1 = (float32x4_t)v13;
    if (*(void *)(v8 + 16) >= v0[2].i64[0])
    {
      swift_beginAccess(&v0[2].u32[2], v15, 33LL, 0LL);
      sub_1000F9FF4(0LL);
      float32x4_t v14 = v9;
      swift_endAccess(v15);
      float32x4_t v1 = v14;
    }
  }

  *(void *)&double result = vmulq_f32(v1, v1).u64[0];
  return result;
}

uint64_t sub_100165E74()
{
  float32x4_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_100165F40();
    [v2 unregisterObserver:v3];

    float32x4_t v1 = *(void **)(v0 + 16);
  }

  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  __int128 v4 = *(_OWORD *)(v0 + 160);
  v9[4] = *(_OWORD *)(v0 + 144);
  v9[5] = v4;
  __int128 v5 = *(_OWORD *)(v0 + 192);
  v9[6] = *(_OWORD *)(v0 + 176);
  v9[7] = v5;
  __int128 v6 = *(_OWORD *)(v0 + 96);
  v9[0] = *(_OWORD *)(v0 + 80);
  v9[1] = v6;
  __int128 v7 = *(_OWORD *)(v0 + 128);
  v9[2] = *(_OWORD *)(v0 + 112);
  void v9[3] = v7;
  sub_100166D28(v9);
  return swift_deallocClassInstance(v0, 208LL, 15LL);
}

uint64_t type metadata accessor for SpectrumAnalysis()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic16SpectrumAnalysis);
}

id sub_100165F40()
{
  float32x4_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }

  else
  {
    id v3 = sub_100165F98(v0);
    __int128 v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v2 = v3;

    float32x4_t v1 = 0LL;
  }

  id v5 = v1;
  return v2;
}

id sub_100165F98(uint64_t a1)
{
  id v2 = [objc_allocWithZone(MPCAudioSpectrumObserver) init];
  LODWORD(v3) = 1133248512;
  LODWORD(v4) = 1128792064;
  objc_msgSend(v2, "addAnalysisBand:", v3, v4);
  LODWORD(v5) = 1142292480;
  LODWORD(v6) = 1142292480;
  objc_msgSend(v2, "addAnalysisBand:", v5, v6);
  LODWORD(v7) = 1161527296;
  LODWORD(v8) = 1161117696;
  objc_msgSend(v2, "addAnalysisBand:", v7, v8);
  uint64_t v9 = swift_allocObject(&unk_100275428, 24LL, 7LL);
  swift_weakInit(v9 + 16, a1);
  v12[4] = sub_100166D20;
  uint64_t v13 = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256LL;
  v12[2] = sub_100166124;
  void v12[3] = &unk_100275490;
  Swift::String v10 = _Block_copy(v12);
  objc_msgSend(v2, "setOnUpdate:", v10, swift_release(v13).n128_f64[0]);
  _Block_release(v10);
  return v2;
}

double sub_1001660C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v5 = Strong;
    sub_100166614();
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

void sub_100166124(uint64_t a1, void *a2)
{
  double v4 = *(void (**)(void))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_retain(v3);
  id v5 = a2;
  v4();
  swift_release(v3);
}

__n128 sub_100166174()
{
  float32x4_t v1 = v0 + 5;
  swift_beginAccess(v0 + 5, v57, 0LL, 0LL);
  __int128 v2 = v0[6];
  __int128 v58 = v0[5];
  __int128 v59 = v2;
  __int128 v3 = v0[10];
  __int128 v62 = v0[9];
  __int128 v63 = v3;
  __int128 v4 = v0[12];
  __int128 v64 = v0[11];
  __int128 v65 = v4;
  __int128 v5 = v0[8];
  unsigned __int128 v60 = v0[7];
  __int128 v61 = v5;
  float v6 = *(float *)&v58;
  float v41 = *((float *)&v58 + 3);
  uint64_t v7 = v59;
  unsigned __int128 v10 = v60;
  uint64_t v9 = v10 >> 64;
  uint64_t v8 = v10;
  uint64_t v11 = v62;
  uint64_t v12 = v63;
  uint64_t v13 = *((void *)&v64 + 1);
  uint64_t v14 = *((void *)&v65 + 1);
  sub_100166CAC(&v58);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v11);
  if ((float)(*((float *)&v9 + 1) - *(float *)&v9) > COERCE_FLOAT(1)) {
  __int128 v15 = v1[3];
  }
  __int128 v51 = v1[2];
  __int128 v52 = v15;
  unsigned __int128 v16 = v1[5];
  __int128 v53 = v1[4];
  unsigned __int128 v54 = v16;
  __int128 v17 = v1[7];
  __int128 v55 = v1[6];
  __int128 v56 = v17;
  __int128 v18 = v1[1];
  v50[0] = *v1;
  v50[1] = v18;
  uint64_t v19 = v18;
  uint64_t v20 = v51;
  float v21 = *(float *)&v52;
  float v40 = *((float *)&v52 + 3);
  uint64_t v22 = v53;
  unsigned __int128 v25 = v54;
  uint64_t v24 = v25 >> 64;
  uint64_t v23 = v25;
  uint64_t v26 = *((void *)&v55 + 1);
  uint64_t v27 = *((void *)&v17 + 1);
  sub_100166CAC(v50);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v19);
  else {
  __int128 v29 = v1[5];
  }
  __int128 v46 = v1[4];
  __int128 v47 = v29;
  __int128 v30 = v1[7];
  __int128 v48 = v1[6];
  __int128 v49 = v30;
  __int128 v31 = v1[1];
  v43[0] = *v1;
  v43[1] = v31;
  __int128 v32 = v1[3];
  __int128 v44 = v1[2];
  __int128 v45 = v32;
  uint64_t v33 = v31;
  uint64_t v34 = v44;
  uint64_t v35 = v46;
  uint64_t v36 = v47;
  uint64_t v37 = *((void *)&v48 + 1);
  uint64_t v38 = *((void *)&v49 + 1);
  *(void *)&__int128 v31 = __PAIR64__(LODWORD(v28), LODWORD(v41));
  *((void *)&v31 + 1) = DWORD1(v48);
  __int128 v42 = v31;
  sub_100166CAC(v43);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v38);
  swift_bridgeObjectRelease(v36);
  swift_bridgeObjectRelease(v35);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v33);
  return (__n128)v42;
}

uint64_t sub_1001663DC(__n128 a1)
{
  uint64_t v2 = v1;
  __int128 v3 = (void *)sub_100165F40();
  [v3 powerLevel];
  int v5 = v4;

  uint64_t v6 = v1 + 80;
  swift_beginAccess(v1 + 80, v43, 33LL, 0LL);
  *(_DWORD *)(v1 + 19sub_1000E053C(v0 + 2) = v5;
  uint64_t v7 = (float *)(v1 + 192);
  sub_1000F9DFC();
  swift_endAccess(v43);
  __int128 v8 = *(_OWORD *)(v1 + 160);
  __int128 v9 = *(_OWORD *)(v1 + 176);
  __int128 v10 = *(_OWORD *)(v1 + 128);
  __int128 v39 = *(_OWORD *)(v1 + 144);
  __int128 v40 = v8;
  __int128 v11 = *(_OWORD *)(v1 + 96);
  __int128 v12 = *(_OWORD *)(v1 + 112);
  __int128 v41 = v9;
  __int128 v42 = *(_OWORD *)(v1 + 192);
  v38[0] = *(_OWORD *)(v1 + 80);
  v38[1] = v11;
  void v38[2] = v12;
  _OWORD v38[3] = v10;
  uint64_t v35 = (_DWORD *)(v1 + 176);
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = *((void *)&v9 + 1);
  float v18 = *((float *)&v42 + 1);
  uint64_t v19 = *((void *)&v42 + 1);
  sub_100166CAC(v38);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  float v20 = v18 * 0.8;
  swift_beginAccess(v6, v43, 33LL, 0LL);
  *(float *)(v2 + 80) = v20;
  *(v7 - swift_unknownObjectWeakDestroy(v0 + 16) = v20;
  *(v7 - 26) = a1.n128_f32[0];
  sub_1000FA0C8();
  swift_endAccess(v43);
  __int128 v21 = *((_OWORD *)v7 - 6);
  __int128 v22 = *((_OWORD *)v7 - 4);
  __int128 v23 = *((_OWORD *)v7 - 3);
  __int128 v44 = *((_OWORD *)v7 - 5);
  __int128 v45 = v22;
  __int128 v24 = *((_OWORD *)v7 - 2);
  __int128 v25 = *((_OWORD *)v7 - 1);
  __int128 v46 = v23;
  __int128 v47 = v24;
  __int128 v26 = *(_OWORD *)v7;
  __int128 v48 = v25;
  __int128 v49 = v26;
  v43[0] = *(_OWORD *)(v2 + 80);
  v43[1] = v21;
  uint64_t v27 = v21;
  uint64_t v28 = v44;
  float v29 = *((float *)&v45 + 2);
  uint64_t v30 = v23;
  uint64_t v31 = v47;
  uint64_t v32 = *((void *)&v25 + 1);
  uint64_t v33 = *((void *)&v26 + 1);
  sub_100166CAC(v43);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v27);
  swift_beginAccess(v6, v37, 33LL, 0LL);
  *(v7 - 14) = a1.n128_f32[1] + (float)(v29 * 0.1);
  sub_1000FA0C8();
  *uint64_t v35 = a1.n128_u32[2];
  sub_1000F9DFC();
  return swift_endAccess(v37);
}

unint64_t sub_100166614()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  __int128 v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  unint64_t result = sub_1001668C4();
  unint64_t v15 = *(void *)(result + 16);
  if (!v15)
  {
    __break(1u);
    goto LABEL_32;
  }

  if (v15 == 1)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }

  if (v15 < 3)
  {
LABEL_33:
    __break(1u);
    return result;
  }

  float v16 = *(float *)(result + 32);
  float v17 = *(float *)(result + 36);
  if (v17 <= 1.0) {
    float v18 = *(float *)(result + 36);
  }
  else {
    float v18 = 1.0;
  }
  if ((~LODWORD(v17) & 0x7F800000) != 0 && v17 > 0.0) {
    *(float *)&__int128 v14 = v18;
  }
  else {
    *(float *)&__int128 v14 = 0.0;
  }
  __int128 v35 = v14;
  if (v16 <= 1.0) {
    float v20 = v16;
  }
  else {
    float v20 = 1.0;
  }
  if ((~LODWORD(v16) & 0x7F800000) != 0 && v16 > 0.0) {
    *(float *)&__int128 v13 = v20;
  }
  else {
    *(float *)&__int128 v13 = 0.0;
  }
  __int128 v34 = v13;
  float v22 = *(float *)(result + 40);
  swift_bridgeObjectRelease(result);
  if (v22 <= 1.0) {
    float v23 = v22;
  }
  else {
    float v23 = 1.0;
  }
  if (v22 <= 0.0 || (~LODWORD(v22) & 0x7F800000) == 0) {
    float v23 = 0.0;
  }
  *(void *)&__int128 v25 = __PAIR64__(v35, v34);
  *((void *)&v25 + 1) = LODWORD(v23);
  __int128 v35 = v25;
  sub_1000F9904();
  __int128 v26 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v27 = swift_allocObject(&unk_100275428, 24LL, 7LL);
  swift_weakInit(v27 + 16, v1);
  uint64_t v28 = swift_allocObject(&unk_100275450, 48LL, 15LL);
  *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v27;
  *(_OWORD *)(v28 + 3sub_1000E053C(v0 + 2) = v35;
  aBlock[4] = sub_100166C88;
  uint64_t v37 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1000FA280;
  aBlock[3] = &unk_100275468;
  float v29 = _Block_copy(aBlock);
  swift_release(v37);
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = _swiftEmptyArrayStorage;
  unint64_t v31 = sub_1000F99EC();
  uint64_t v32 = sub_1000DFE10(&qword_1002B86F8);
  unint64_t v33 = sub_1000F9A34();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v2, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v6, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

unint64_t sub_1001668C4()
{
  unint64_t result = (unint64_t)[v0 numberOfBands];
  if ((result & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else
  {
    unint64_t v2 = result;
    if (!result) {
      return (unint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v3 = 0LL;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      [v0 averagePowerOfBandAtIndex:v3 band:0];
      int v6 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0) {
        uint64_t v4 = sub_10015A1D0(0LL, v4[2] + 1LL, 1, v4);
      }
      unint64_t v8 = v4[2];
      unint64_t v7 = v4[3];
      if (v8 >= v7 >> 1) {
        uint64_t v4 = sub_10015A1D0((void *)(v7 > 1), v8 + 1, 1, v4);
      }
      ++v3;
      void v4[2] = v8 + 1;
      *((_DWORD *)v4 + v8 + 8) = v6;
    }

    while (v2 != v3);
    return (unint64_t)v4;
  }

  return result;
}

double sub_1001669C8(uint64_t a1, __n128 a2)
{
  uint64_t v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v5 = Strong;
    sub_1001663DC(a2);
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

uint64_t sub_100166A24()
{
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(void *)(v0 + 24) = 0LL;
  *(void *)(v0 + 3sub_1000E053C(v0 + 2) = 0LL;
  *(void *)(v0 + 40) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v0 + 48) = xmmword_1001ED9F0;
  if (qword_1002B70D8 != -1) {
    swift_once(&qword_1002B70D8, sub_1000F6E64);
  }
  *(_OWORD *)(v0 + 64) = xmmword_1002C59C0;
  uint64_t v1 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(6LL, &type metadata for Float);
  void v1[2] = 6LL;
  v1[5] = 0LL;
  v1[6] = 0LL;
  v1[4] = 0LL;
  uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)(10LL, &type metadata for Float);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = 10LL;
  *(_OWORD *)(v2 + 3sub_1000E053C(v0 + 2) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0LL;
  uint64_t v3 = static Array._allocateBufferUninitialized(minimumCapacity:)(8LL, &type metadata for Float);
  *(void *)(v3 + swift_unknownObjectWeakDestroy(v0 + 16) = 8LL;
  *(_OWORD *)(v3 + 3sub_1000E053C(v0 + 2) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  uint64_t v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)(6LL, &type metadata for Float);
  void v4[2] = 6LL;
  void v4[5] = 0LL;
  v4[6] = 0LL;
  v4[4] = 0LL;
  *(_DWORD *)(v0 + 80) = 1061997773;
  *(void *)(v0 + 88) = 0LL;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = 50LL;
  *(void *)(v0 + 11sub_1000E053C(v0 + 2) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 120) = 0x3F80000000000000LL;
  *(_DWORD *)(v0 + 128) = 1061997773;
  *(void *)(v0 + 136) = 0LL;
  *(void *)(v0 + 144) = v2;
  *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 50LL;
  *(void *)(v0 + 160) = _swiftEmptyArrayStorage;
  *(_OWORD *)(v0 + 168) = xmmword_1001EDA00;
  *(void *)(v0 + 184) = v3;
  *(void *)(v0 + 19sub_1000E053C(v0 + 2) = 0LL;
  *(void *)(v0 + 200) = v4;
  return v0;
}

void sub_100166B80(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  if (v3)
  {
    id v4 = v3;
    id v5 = sub_100165F40();
    [v4 unregisterObserver:v5];

    int v6 = *(void **)(v1 + 16);
  }

  else
  {
    int v6 = 0LL;
  }

  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  id v7 = a1;

  unint64_t v8 = *(void **)(v1 + 16);
  if (v8)
  {
    id v9 = v8;
    id v10 = sub_100165F40();
    [v9 registerObserver:v10];
  }

uint64_t sub_100166C40()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100166C64()
{
  return swift_deallocObject(v0, 48LL, 15LL);
}

double sub_100166C88()
{
  return sub_1001669C8(v0[1].n128_i64[0], v0[2]);
}

uint64_t sub_100166C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100166CA4(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

void *sub_100166CAC(void *a1)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[8];
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[13];
  uint64_t v6 = a1[15];
  swift_bridgeObjectRetain(a1[2]);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

double sub_100166D20(uint64_t a1)
{
  return sub_1001660C8(a1, v1);
}

void *sub_100166D28(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[8];
  uint64_t v5 = a1[10];
  uint64_t v6 = a1[13];
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return a1;
}

uint64_t type metadata accessor for WrapperViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrapperViewController);
}

uint64_t sub_100166DB0(void *a1)
{
  return swift_release(a1[4]);
}

uint64_t sub_100166DE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[4];
  __int128 v7 = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v7;
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v5;
  swift_retain(v3);
  swift_retain(v7);
  swift_retain(v5);
  return a1;
}

uint64_t *sub_100166E3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  uint64_t v6 = a2[2];
  uint64_t v7 = a1[2];
  a1[2] = v6;
  swift_retain(v6);
  swift_release(v7);
  uint64_t v9 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v10 = a1[4];
  a1[3] = v9;
  a1[4] = v8;
  swift_retain(v8);
  swift_release(v10);
  return a1;
}

void *sub_100166EB8(void *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  *a1 = *(void *)a2;
  swift_release(v4);
  a1[1] = *(void *)(a2 + 8);
  swift_release(a1[2]);
  uint64_t v5 = *(void *)(a2 + 32);
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  uint64_t v6 = a1[4];
  a1[4] = v5;
  swift_release(v6);
  return a1;
}

uint64_t type metadata accessor for TabNavigationStack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TabNavigationStack);
}

uint64_t sub_100166F20(uint64_t a1)
{
  return swift_getWitnessTable(&unk_1001EDB78, a1);
}

uint64_t sub_100166F30()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = type metadata accessor for MusicStackAuthority(0LL);
  uint64_t v4 = sub_1000DF308( &qword_1002BD300,  (uint64_t (*)(uint64_t))&type metadata accessor for MusicStackAuthority,  (uint64_t)&protocol conformance descriptor for MusicStackAuthority);
  return ObservedObject.projectedValue.getter(v1, v2, v3, v4);
}

uint64_t sub_100166F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1000DFE10(&qword_1002B8CF0);
  __chkstk_darwin(v3, v4);
  uint64_t v38 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = type metadata accessor for NavigationPath(255LL);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = type metadata accessor for Tabs(255LL);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
  unint64_t v10 = sub_100105348();
  uint64_t v45 = v6;
  uint64_t v46 = v7;
  uint64_t v37 = v6;
  __int128 v47 = &type metadata for DestinationPageProvider;
  uint64_t v48 = v8;
  uint64_t v36 = v8;
  uint64_t v49 = v9;
  unint64_t v50 = v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v45,  &opaque type descriptor for <<opaque return type of View.musicNavigationDestination<A, B>(using:)>>,  0LL);
  uint64_t v12 = type metadata accessor for PushDestination(255LL);
  uint64_t v13 = sub_1000DEA98(&qword_1002BC4D0);
  uint64_t v45 = v6;
  uint64_t v46 = v7;
  __int128 v47 = &type metadata for DestinationPageProvider;
  uint64_t v48 = v8;
  uint64_t v49 = v9;
  unint64_t v50 = v10;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v45,  &opaque type descriptor for <<opaque return type of View.musicNavigationDestination<A, B>(using:)>>,  1LL);
  uint64_t v15 = sub_1000DF308(&qword_1002B82F0, type metadata accessor for PushDestination, (uint64_t)&unk_1001E9854);
  uint64_t v16 = sub_1001053D4(&qword_1002BC4D8, &qword_1002BC4D0, (void (*)(void))sub_10016962C, (void (*)(void))sub_100102070);
  uint64_t v45 = OpaqueTypeMetadata2;
  uint64_t v46 = v12;
  __int128 v47 = (ValueMetadata *)v13;
  uint64_t v48 = OpaqueTypeConformance2;
  uint64_t v49 = v15;
  unint64_t v50 = v16;
  uint64_t v17 = swift_getOpaqueTypeMetadata2( 255LL,  &v45,  &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>,  0LL);
  uint64_t v45 = OpaqueTypeMetadata2;
  uint64_t v46 = v12;
  __int128 v47 = (ValueMetadata *)v13;
  uint64_t v48 = OpaqueTypeConformance2;
  uint64_t v49 = v15;
  unint64_t v50 = v16;
  uint64_t v18 = swift_getOpaqueTypeConformance2( &v45,  &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>,  1LL);
  uint64_t v19 = type metadata accessor for NavigationStack(0LL, v35, v17, v18);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  __int128 v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v22, v25);
  uint64_t v27 = (char *)&v35 - v26;
  uint64_t v28 = v39;
  uint64_t v29 = sub_100166F30();
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDC18);
  uint64_t v31 = sub_1000DF308( &qword_1002BD300,  (uint64_t (*)(uint64_t))&type metadata accessor for MusicStackAuthority,  (uint64_t)&protocol conformance descriptor for MusicStackAuthority);
  uint64_t v32 = v38;
  ObservedObject.Wrapper.subscript.getter(KeyPath, v29, v31);
  swift_release(v29);
  swift_release(KeyPath);
  uint64_t v42 = v37;
  uint64_t v43 = v36;
  uint64_t v44 = v28;
  NavigationStack.init<>(path:root:)(v32, sub_100169888, v41, v17, v18);
  swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v19);
  sub_1000E3E08((uint64_t)v24, v19, (uint64_t)v27);
  unint64_t v33 = *(void (**)(char *, uint64_t))(v20 + 8);
  v33(v24, v19);
  sub_1000E3158((uint64_t)v27, v19, v40);
  return ((uint64_t (*)(char *, uint64_t))v33)(v27, v19);
}

uint64_t sub_1001672AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v51 = *(void *)(a2 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for Tabs(255LL);
  uint64_t v10 = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
  unint64_t v11 = sub_100105348();
  uint64_t v55 = a2;
  uint64_t v56 = v9;
  id v57 = &type metadata for DestinationPageProvider;
  uint64_t v58 = a3;
  uint64_t v43 = a3;
  uint64_t v59 = v10;
  unint64_t v60 = v11;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 0LL,  &v55,  &opaque type descriptor for <<opaque return type of View.musicNavigationDestination<A, B>(using:)>>,  0LL);
  uint64_t v52 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v48 = OpaqueTypeMetadata2;
  __chkstk_darwin(OpaqueTypeMetadata2, v13);
  unsigned __int128 v54 = (char *)&v43 - v14;
  uint64_t v15 = type metadata accessor for PushDestination(255LL);
  uint64_t v16 = sub_1000DEA98(&qword_1002BC4D0);
  uint64_t v47 = v16;
  uint64_t v55 = a2;
  uint64_t v56 = v9;
  id v57 = &type metadata for DestinationPageProvider;
  uint64_t v58 = a3;
  uint64_t v59 = v10;
  unint64_t v60 = v11;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v55,  &opaque type descriptor for <<opaque return type of View.musicNavigationDestination<A, B>(using:)>>,  1LL);
  uint64_t v46 = OpaqueTypeConformance2;
  uint64_t v18 = sub_1000DF308(&qword_1002B82F0, type metadata accessor for PushDestination, (uint64_t)&unk_1001E9854);
  uint64_t v45 = v18;
  uint64_t v44 = sub_1001053D4(&qword_1002BC4D8, &qword_1002BC4D0, (void (*)(void))sub_10016962C, (void (*)(void))sub_100102070);
  uint64_t v55 = OpaqueTypeMetadata2;
  uint64_t v56 = v15;
  id v57 = (ValueMetadata *)v16;
  uint64_t v58 = OpaqueTypeConformance2;
  uint64_t v59 = v18;
  unint64_t v60 = v44;
  uint64_t v19 = swift_getOpaqueTypeMetadata2( 0LL,  &v55,  &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>,  0LL);
  uint64_t v50 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v49 = (uint64_t)&v43 - v26;
  uint64_t v27 = a1[4];
  ((void (*)(uint64_t))a1[3])(v25);
  uint64_t v28 = *a1;
  uint64_t v29 = v43;
  View.musicNavigationDestination<A, B>(using:)(*a1, a2, v43);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v8, a2);
  uint64_t v30 = swift_checkMetadataState(0LL, v15);
  uint64_t v31 = swift_allocObject(&unk_100275520, 72LL, 7LL);
  *(void *)(v31 + swift_weakDestroy(v0 + 16) = a2;
  *(void *)(v31 + 24) = v29;
  __int128 v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v31 + 3sub_1000E053C(v0 + 2) = *(_OWORD *)a1;
  *(_OWORD *)(v31 + 48) = v32;
  *(void *)(v31 + 64) = a1[4];
  __int128 v61 = *(_OWORD *)(a1 + 1);
  swift_retain(v28);
  sub_100112B28((uint64_t)&v61);
  swift_retain(v27);
  uint64_t v33 = v44;
  uint64_t v35 = (ValueMetadata *)v47;
  uint64_t v34 = v48;
  uint64_t v37 = v45;
  uint64_t v36 = v46;
  uint64_t v38 = v54;
  View.navigationDestination<A, B>(for:destination:)(v30, sub_1001698C8, v31, v48, v30, v47, v46, v45, v44);
  __n128 v39 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v38, v34, v39);
  uint64_t v55 = v34;
  uint64_t v56 = v30;
  id v57 = v35;
  uint64_t v58 = v36;
  uint64_t v59 = v37;
  unint64_t v60 = v33;
  swift_getOpaqueTypeConformance2( &v55,  &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>,  1LL);
  uint64_t v40 = v49;
  sub_1000E3E08((uint64_t)v23, v19, v49);
  __int128 v41 = *(void (**)(char *, uint64_t))(v50 + 8);
  v41(v23, v19);
  sub_1000E3158(v40, v19, v53);
  return ((uint64_t (*)(uint64_t, uint64_t))v41)(v40, v19);
}

void sub_10016764C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v125 = a1;
  uint64_t v129 = a3;
  uint64_t v84 = type metadata accessor for NowPlayingOptions(0LL);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84, v3);
  v72[3] = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002B80C0);
  uint64_t v7 = __chkstk_darwin(v5, v6);
  unint64_t v82 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7, v9);
  uint64_t v85 = (char *)v72 - v10;
  uint64_t v110 = type metadata accessor for Playlist(0LL);
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110, v11);
  uint64_t v108 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v111 = sub_1000DFE10((uint64_t *)&unk_1002BD580);
  __chkstk_darwin(v111, v13);
  uint64_t v114 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v101 = sub_1000DFE10(&qword_1002B8D70);
  __chkstk_darwin(v101, v15);
  uint64_t v106 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v112 = sub_1000DFE10(&qword_1002BD4C0);
  __chkstk_darwin(v112, v17);
  uint64_t v113 = (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v123 = sub_1000DFE10((uint64_t *)&unk_1002BD4B0);
  __chkstk_darwin(v123, v19);
  id v115 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v96 = type metadata accessor for Song(0LL);
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v21);
  uint64_t v94 = (char *)v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v105 = type metadata accessor for Album(0LL);
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105, v23);
  uint64_t v102 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v90 = sub_1000DFE10(&qword_1002BC530);
  __chkstk_darwin(v90, v25);
  uint64_t v93 = (char *)v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = sub_1000DFE10(&qword_1002BC518);
  __chkstk_darwin(v107, v27);
  uint64_t v97 = (char *)v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = type metadata accessor for LibraryComposerAlbumsPage(0LL);
  __chkstk_darwin(v75, v29);
  objc_super v77 = (char *)v72 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = sub_1000DFE10(&qword_1002BC528);
  uint64_t v32 = __chkstk_darwin(v92, v31);
  uint64_t v76 = (char *)v72 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v32, v34);
  unint64_t v81 = (char *)v72 - v35;
  uint64_t v80 = type metadata accessor for Composer(0LL);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v36);
  uint64_t v91 = (char *)v72 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = type metadata accessor for LibraryArtistAlbumsPage(0LL);
  __chkstk_darwin(v73, v38);
  uint64_t v89 = sub_1000DFE10(&qword_1002B8B78);
  uint64_t v40 = __chkstk_darwin(v89, v39);
  uint64_t v74 = (char *)v72 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v40, v42);
  uint64_t v78 = (char *)v72 - v43;
  uint64_t v126 = sub_1000DFE10(&qword_1002BC538);
  __chkstk_darwin(v126, v44);
  __int128 v128 = (char *)v72 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v119 = sub_1000DFE10(&qword_1002BC540);
  __chkstk_darwin(v119, v46);
  double v121 = (char *)v72 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v98 = sub_1000DFE10(&qword_1002BC548);
  __chkstk_darwin(v98, v48);
  uint64_t v100 = (char *)v72 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = sub_1000DFE10(qword_1002BC550);
  __chkstk_darwin(v86, v50);
  uint64_t v87 = (char *)v72 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v99 = sub_1000DFE10(&qword_1002BC508);
  __chkstk_darwin(v99, v52);
  uint64_t v88 = (char *)v72 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v120 = sub_1000DFE10(&qword_1002BC4F8);
  __chkstk_darwin(v120, v54);
  uint64_t v104 = (char *)v72 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v127 = sub_1000DFE10(&qword_1002BC4E8);
  __chkstk_darwin(v127, v56);
  uint64_t v124 = (char *)v72 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v58 = sub_1000DFE10((uint64_t *)&unk_1002BD590);
  __chkstk_darwin(v58, v59);
  uint64_t v122 = sub_1000DFE10(&qword_1002B8DA0);
  uint64_t v118 = *(void *)(v122 - 8);
  uint64_t v61 = __chkstk_darwin(v122, v60);
  __chkstk_darwin(v61, v62);
  double v117 = (char *)v72 - v63;
  uint64_t v64 = type metadata accessor for Artist(0LL);
  __chkstk_darwin(v64, v65);
  uint64_t v66 = type metadata accessor for PushDestination(0LL);
  __chkstk_darwin(v66, v67);
  uint64_t v69 = (char *)v72 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000EE02C(v125, (uint64_t)v69, v70);
  uint64_t v71 = (char *)sub_100167E84 + 4 * word_1001EDA70[swift_getEnumCaseMultiPayload(v69, v66)];
  __asm { BR              X10 }

uint64_t sub_100167E84()
{
  *(void *)(v8 - 608) = v0;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32);
  *(void *)(v8 - 6swift_weakDestroy(v0 + 16) = v4;
  v9(v5, v3, v4);
  uint64_t v10 = *(void *)(v8 - 248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v6, v5, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))( v6,  enum case for MusicPageProvider.Destination.artistDetail<A, B>(_:),  v1);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_retain(v11);
  ((void (*)(uint64_t, uint64_t))MusicPageProvider.page(for:stackAuthority:))(v6, v11);
  __n128 v12 = swift_release(v11);
  (*(void (**)(uint64_t, uint64_t, __n128))(v7 + 8))(v6, v1, v12);
  uint64_t v14 = *(void *)(v8 - 240);
  uint64_t v13 = *(void *)(v8 - 232);
  uint64_t v15 = *(void *)(v8 - 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v14, v2, v15);
  uint64_t v16 = *(void *)(v8 - 480);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v14, v15);
  swift_storeEnumTagMultiPayload(v16, *(void *)(v8 - 488), 0LL);
  uint64_t v17 = type metadata accessor for Tabs(255LL);
  uint64_t v18 = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
  unint64_t v19 = sub_100105348();
  *(void *)(v8 - 128) = v17;
  *(void *)(v8 - 120) = &type metadata for DestinationPageProvider;
  *(void *)(v8 - 11sub_1000E053C(v0 + 2) = v18;
  *(void *)(v8 - 104) = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v8 - 128,  &opaque type descriptor for <<opaque return type of MusicPageProvider.page(for:stackAuthority:)>>,  1LL);
  unint64_t v21 = sub_100101FEC();
  uint64_t v22 = *(void *)(v8 - 472);
  _ConditionalContent<>.init(storage:)(v16, v15, *(void *)(v8 - 464), OpaqueTypeConformance2, v21);
  uint64_t v23 = *(void *)(v8 - 376);
  sub_1000E04D4(v22, v23, &qword_1002BC508);
  swift_storeEnumTagMultiPayload(v23, *(void *)(v8 - 392), 0LL);
  unint64_t v24 = sub_100169674();
  unint64_t v25 = sub_100169738();
  uint64_t v26 = *(void *)(v8 - 344);
  _ConditionalContent<>.init(storage:)(v23, *(void *)(v8 - 384), *(void *)(v8 - 320), v24, v25);
  sub_1000E03B4(v22, &qword_1002BC508);
  uint64_t v27 = *(void *)(v8 - 208);
  sub_1000E04D4(v26, v27, &qword_1002BC4F8);
  swift_storeEnumTagMultiPayload(v27, *(void *)(v8 - 224), 0LL);
  uint64_t v28 = sub_100169650();
  unint64_t v29 = sub_1001055FC();
  uint64_t v30 = *(void *)(v8 - 184);
  _ConditionalContent<>.init(storage:)(v27, *(void *)(v8 - 216), *(void *)(v8 - 192), v28, v29);
  sub_1000E03B4(v26, &qword_1002BC4F8);
  uint64_t v31 = *(void *)(v8 - 152);
  sub_1000E04D4(v30, v31, &qword_1002BC4E8);
  swift_storeEnumTagMultiPayload(v31, *(void *)(v8 - 168), 0LL);
  uint64_t v32 = sub_1000DFE10(&qword_1002B8B80);
  uint64_t v33 = sub_10016962C();
  unint64_t v34 = sub_100102070();
  _ConditionalContent<>.init(storage:)(v31, *(void *)(v8 - 160), v32, v33, v34);
  sub_1000E03B4(v30, &qword_1002BC4E8);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v8 - 608) + 8LL))(v5, *(void *)(v8 - 616));
}

void sub_10016934C()
{
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000DFE10(&qword_1002B8108);
  uint64_t v4 = *(void *)(v1 - 496);
  sub_1000E011C((uint64_t)v0 + *(int *)(v3 + 48), v4, &qword_1002B80C0);
  uint64_t v5 = *(void *)(v1 - 520);
  sub_1000E04D4(v4, v5, &qword_1002B80C0);
  uint64_t v6 = *(void *)(v1 - 512);
  uint64_t v7 = *(void *)(v1 - 504);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1LL, v7) == 1)
  {
    uint64_t v8 = sub_1000E03B4(v5, &qword_1002B80C0);
    char v9 = 0;
  }

  else
  {
    uint64_t v10 = *(void *)(v1 - 600);
    static NowPlayingOptions.singMode.getter();
    uint64_t v11 = sub_1000DF308( &qword_1002B8BA0,  (uint64_t (*)(uint64_t))&type metadata accessor for NowPlayingOptions,  (uint64_t)&protocol conformance descriptor for NowPlayingOptions);
    char v9 = dispatch thunk of SetAlgebra.isSuperset(of:)(v10, v7, v11);
    __n128 v12 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v12(v10, v7);
    uint64_t v8 = v12(v5, v7);
  }

  uint64_t v13 = static SafeAreaRegions.all.getter(v8);
  char v14 = static Edge.Set.all.getter(v13);
  uint64_t v15 = *(void *)(v1 - 152);
  *(void *)uint64_t v15 = v2;
  *(_BYTE *)(v15 + 8) = v9 & 1;
  *(void *)(v15 + swift_weakDestroy(v0 + 16) = v13;
  *(_BYTE *)(v15 + 24) = v14;
  swift_storeEnumTagMultiPayload(v15, *(void *)(v1 - 168), 1LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002B8B80);
  uint64_t v17 = sub_10016962C();
  unint64_t v18 = sub_100102070();
  _ConditionalContent<>.init(storage:)(v15, *(void *)(v1 - 160), v16, v17, v18);
  sub_1000E03B4(v4, &qword_1002B80C0);
  JUMPOUT(0x10016932CLL);
}

uint64_t sub_1001694BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100166F8C(a1, a2);
}

id sub_1001694F4(uint64_t a1, uint64_t a2)
{
  return (id)nullsub_46(*v2, *(void *)(a2 + 16));
}

uint64_t sub_100169510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EDB00, a3);
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_10016956C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EDB00, a3);
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void sub_1001695C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EDB00, a1);
  UIViewControllerRepresentable.body.getter(a1, WitnessTable);
  __break(1u);
}

uint64_t sub_1001695F8(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10023DC90, 1LL);
}

uint64_t sub_10016962C()
{
  return sub_1001053D4(&qword_1002BC4E0, &qword_1002BC4E8, (void (*)(void))sub_100169650, (void (*)(void))sub_1001055FC);
}

uint64_t sub_100169650()
{
  return sub_1001053D4(&qword_1002BC4F0, &qword_1002BC4F8, (void (*)(void))sub_100169674, (void (*)(void))sub_100169738);
}

unint64_t sub_100169674()
{
  unint64_t result = qword_1002BC500;
  if (!qword_1002BC500)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC508);
    v2[0] = type metadata accessor for Tabs(255LL);
    v2[1] = &type metadata for DestinationPageProvider;
    void v2[2] = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
    v2[3] = sub_100105348();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of MusicPageProvider.page(for:stackAuthority:)>>,  1LL);
    sub_100101FEC();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC500);
  }

  return result;
}

unint64_t sub_100169738()
{
  unint64_t result = qword_1002BC510;
  if (!qword_1002BC510)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC518);
    sub_1001697FC();
    v2[0] = type metadata accessor for Tabs(255LL);
    v2[1] = &type metadata for DestinationPageProvider;
    void v2[2] = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
    v2[3] = sub_100105348();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of MusicPageProvider.page(for:stackAuthority:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC510);
  }

  return result;
}

unint64_t sub_1001697FC()
{
  unint64_t result = qword_1002BC520;
  if (!qword_1002BC520)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC528);
    sub_1000DF308(&qword_1002B8D50, type metadata accessor for LibraryComposerAlbumsPage, (uint64_t)&unk_1001ED2F8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC520);
  }

  return result;
}

uint64_t sub_100169888@<X0>(uint64_t a1@<X8>)
{
  return sub_1001672AC(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100169894()
{
  return swift_deallocObject(v0, 72LL, 7LL);
}

void sub_1001698C8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1001698D4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v16 = type metadata accessor for NavigationPath(255LL);
  uint64_t v3 = type metadata accessor for Tabs(255LL);
  uint64_t v4 = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
  unint64_t v5 = sub_100105348();
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  unint64_t v19 = &type metadata for DestinationPageProvider;
  uint64_t v20 = v1;
  uint64_t v21 = v4;
  unint64_t v22 = v5;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v17,  &opaque type descriptor for <<opaque return type of View.musicNavigationDestination<A, B>(using:)>>,  0LL);
  uint64_t v7 = type metadata accessor for PushDestination(255LL);
  uint64_t v8 = sub_1000DEA98(&qword_1002BC4D0);
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  unint64_t v19 = &type metadata for DestinationPageProvider;
  uint64_t v20 = v1;
  uint64_t v21 = v4;
  unint64_t v22 = v5;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v17,  &opaque type descriptor for <<opaque return type of View.musicNavigationDestination<A, B>(using:)>>,  1LL);
  uint64_t v10 = sub_1000DF308(&qword_1002B82F0, type metadata accessor for PushDestination, (uint64_t)&unk_1001E9854);
  uint64_t v11 = sub_1001053D4(&qword_1002BC4D8, &qword_1002BC4D0, (void (*)(void))sub_10016962C, (void (*)(void))sub_100102070);
  uint64_t v17 = OpaqueTypeMetadata2;
  uint64_t v18 = v7;
  unint64_t v19 = (ValueMetadata *)v8;
  uint64_t v20 = OpaqueTypeConformance2;
  uint64_t v21 = v10;
  unint64_t v22 = v11;
  uint64_t v12 = swift_getOpaqueTypeMetadata2( 255LL,  &v17,  &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>,  0LL);
  uint64_t v17 = OpaqueTypeMetadata2;
  uint64_t v18 = v7;
  unint64_t v19 = (ValueMetadata *)v8;
  uint64_t v20 = OpaqueTypeConformance2;
  uint64_t v21 = v10;
  unint64_t v22 = v11;
  uint64_t v13 = swift_getOpaqueTypeConformance2( &v17,  &opaque type descriptor for <<opaque return type of View.navigationDestination<A, B>(for:destination:)>>,  1LL);
  uint64_t v14 = type metadata accessor for NavigationStack(255LL, v16, v12, v13);
  return swift_getWitnessTable(&protocol conformance descriptor for NavigationStack<A, B>, v14);
}

uint64_t sub_100169A7C(uint64_t a1)
{
  uint64_t result = type metadata accessor for Optional(319LL);
  if (v3 <= 0x3F)
  {
    v4[0] = *(void *)(result - 8) + 64LL;
    v4[1] = v4[0];
    void v4[2] = v4[0];
    swift_initStructMetadata(a1, 0LL, 3LL, v4, a1 + 24);
    return 0LL;
  }

  return result;
}

uint64_t *sub_100169AEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1LL;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  size_t v10 = v7 + v8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || ((v10 + (v10 & v9)) & v9) + v7 > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v8 + 16) & v9));
    swift_retain(v13);
  }

  else
  {
    uint64_t v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
    if (v14(a2, 1LL, *(void *)(a3 + 16)))
    {
      memcpy(a1, a2, v7);
    }

    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0LL, 1LL, v5);
    }

    uint64_t v15 = (void *)(((unint64_t)a2 + v10) & v9);
    if (v14(v15, 1LL, v5))
    {
      memcpy((void *)(((unint64_t)a1 + v10) & v9), v15, v7);
    }

    else
    {
      (*(void (**)(unint64_t, void *, uint64_t))(v6 + 16))( ((unint64_t)a1 + v10) & v9,  v15,  v5);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v6 + 56))( ((unint64_t)a1 + v10) & v9,  0LL,  1LL,  v5);
    }

    uint64_t v16 = (void *)((v10 + (((unint64_t)a1 + v10) & v9)) & v9);
    uint64_t v17 = (void *)(((unint64_t)v15 + v10) & v9);
    if (v14(v17, 1LL, v5))
    {
      memcpy(v16, v17, v7);
    }

    else
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v16, v17, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v16, 0LL, 1LL, v5);
    }
  }

  return a1;
}

uint64_t sub_100169CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v5(a1, 1LL, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v6 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v6 = *(void *)(v4 + 64) + 1LL;
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = v6 + v7;
  uint64_t v9 = ~v7;
  uint64_t v10 = (v6 + v7 + a1) & ~v7;
  if (!v5(v10, 1LL, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v10, v3);
  }
  uint64_t v11 = (v8 + v10) & v9;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v11, 1LL, v3);
  if (!(_DWORD)result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v11, v3);
  }
  return result;
}

void *sub_100169D90(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1LL, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0LL, 1LL, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
  }

  if (v8) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  size_t v13 = v11 + v12;
  uint64_t v14 = ~v12;
  uint64_t v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  uint64_t v16 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v16, 1LL, v5))
  {
    memcpy(v15, v16, v11);
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v15, v16, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0LL, 1LL, v5);
  }

  uint64_t v17 = (void *)(((unint64_t)v15 + v13) & v14);
  uint64_t v18 = (const void *)(((unint64_t)v16 + v13) & v14);
  if (v7(v18, 1LL, v5))
  {
    memcpy(v17, v18, v11);
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v17, v18, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0LL, 1LL, v5);
  }

  return a1;
}

void *sub_100169F24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1LL, v5);
  int v9 = v7(a2, 1LL, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0LL, 1LL, v5);
      goto LABEL_10;
    }
  }

  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }

    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }

  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = *(void *)(v6 + 64) + 1LL;
  }
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v11 = *(void *)(v6 + 64);
  }
  else {
    size_t v11 = *(void *)(v6 + 64) + 1LL;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  size_t v13 = v11 + v12;
  uint64_t v14 = ~v12;
  uint64_t v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  uint64_t v16 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  int v17 = v7(v15, 1LL, v5);
  int v18 = v7(v16, 1LL, v5);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v15, v16, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0LL, 1LL, v5);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
LABEL_18:
    memcpy(v15, v16, v11);
    goto LABEL_19;
  }

  (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v15, v16, v5);
LABEL_19:
  unint64_t v19 = (void *)(((unint64_t)v15 + v13) & v14);
  uint64_t v20 = (void *)(((unint64_t)v16 + v13) & v14);
  int v21 = v7(v19, 1LL, v5);
  int v22 = v7(v20, 1LL, v5);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(v19, v20, v5);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v6 + 8))(v19, v5);
    goto LABEL_24;
  }

  if (v22)
  {
LABEL_24:
    memcpy(v19, v20, v11);
    return a1;
  }

  (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v19, v20, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0LL, 1LL, v5);
  return a1;
}

void *sub_10016A180(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  if (v7(a2, 1LL, v5))
  {
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
    if (v8) {
      size_t v10 = *(void *)(v6 + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    memcpy(a1, a2, v10);
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0LL, 1LL, v5);
    int v8 = *(_DWORD *)(v6 + 84);
    size_t v9 = *(void *)(v6 + 64);
  }

  if (v8) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v9 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  size_t v13 = v11 + v12;
  uint64_t v14 = ~v12;
  uint64_t v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  uint64_t v16 = (const void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  if (v7(v16, 1LL, v5))
  {
    memcpy(v15, v16, v11);
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v15, v16, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0LL, 1LL, v5);
  }

  int v17 = (void *)(((unint64_t)v15 + v13) & v14);
  int v18 = (const void *)(((unint64_t)v16 + v13) & v14);
  if (v7(v18, 1LL, v5))
  {
    memcpy(v17, v18, v11);
  }

  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v17, v18, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0LL, 1LL, v5);
  }

  return a1;
}

void *sub_10016A314(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1LL, v5);
  int v9 = v7(a2, 1LL, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0LL, 1LL, v5);
      goto LABEL_10;
    }
  }

  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }

    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }

  if (*(_DWORD *)(v6 + 84)) {
    size_t v10 = *(void *)(v6 + 64);
  }
  else {
    size_t v10 = *(void *)(v6 + 64) + 1LL;
  }
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84)) {
    size_t v11 = *(void *)(v6 + 64);
  }
  else {
    size_t v11 = *(void *)(v6 + 64) + 1LL;
  }
  uint64_t v12 = *(unsigned __int8 *)(v6 + 80);
  size_t v13 = v11 + v12;
  uint64_t v14 = ~v12;
  uint64_t v15 = (void *)(((unint64_t)a1 + v11 + v12) & ~v12);
  uint64_t v16 = (void *)(((unint64_t)a2 + v11 + v12) & ~v12);
  int v17 = v7(v15, 1LL, v5);
  int v18 = v7(v16, 1LL, v5);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v15, v16, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v15, 0LL, 1LL, v5);
      goto LABEL_19;
    }

    goto LABEL_18;
  }

  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v15, v5);
LABEL_18:
    memcpy(v15, v16, v11);
    goto LABEL_19;
  }

  (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v15, v16, v5);
LABEL_19:
  unint64_t v19 = (void *)(((unint64_t)v15 + v13) & v14);
  uint64_t v20 = (void *)(((unint64_t)v16 + v13) & v14);
  int v21 = v7(v19, 1LL, v5);
  int v22 = v7(v20, 1LL, v5);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(v19, v20, v5);
      return a1;
    }

    (*(void (**)(void *, uint64_t))(v6 + 8))(v19, v5);
    goto LABEL_24;
  }

  if (v22)
  {
LABEL_24:
    memcpy(v19, v20, v11);
    return a1;
  }

  (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v19, v20, v5);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v19, 0LL, 1LL, v5);
  return a1;
}

uint64_t sub_10016A570(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8LL);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(v4 + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0LL;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    uint64_t v9 = ((v7
         + *(unsigned __int8 *)(v4 + 80)
    char v10 = 8 * v9;
    unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)(a1 + v9);
      if (v11) {
        goto LABEL_15;
      }
    }

    else
    {
      if (v12 <= 0xFF)
      {
        if (v12 < 2) {
          goto LABEL_22;
        }
LABEL_8:
        int v11 = *(unsigned __int8 *)(a1 + v9);
        if (!*(_BYTE *)(a1 + v9)) {
          goto LABEL_22;
        }
LABEL_15:
        int v13 = (v11 - 1) << v10;
        if ((_DWORD)v9)
        {
          __asm { BR              X12 }
        }

        return v6 + v13 + 1;
      }

      int v11 = *(unsigned __int16 *)(a1 + v9);
      if (*(_WORD *)(a1 + v9)) {
        goto LABEL_15;
      }
    }
  }

void sub_10016A6C0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8LL);
  int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(v7 + 64);
  if (!v8) {
    ++v10;
  }
  size_t v11 = ((v10
        + *(unsigned __int8 *)(v7 + 80)
  BOOL v12 = a3 >= v9;
  unsigned int v13 = a3 - v9;
  if (v13 != 0 && v12)
  {
    if (v11 > 3)
    {
      unsigned int v6 = &_mh_execute_header.magic + 1;
      if (v9 < a2) {
        goto LABEL_15;
      }
      goto LABEL_22;
    }

    unsigned int v14 = ((v13 + ~(-1 << (8 * v11))) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      unsigned int v6 = &dword_100000004;
      if (v9 < a2)
      {
LABEL_15:
        unsigned int v15 = ~v9 + a2;
        if (v11 < 4)
        {
          if ((_DWORD)v11)
          {
            int v16 = v15 & ~(-1 << (8 * v11));
            bzero(a1, v11);
            if ((_DWORD)v11 == 3)
            {
              *a1 = v16;
              *((_BYTE *)a1 + sub_1000E053C(v0 + 2) = BYTE2(v16);
            }

            else if ((_DWORD)v11 == 2)
            {
              *a1 = v16;
            }

            else
            {
              *(_BYTE *)a1 = v16;
            }
          }
        }

        else
        {
          bzero(a1, v11);
          *(_DWORD *)a1 = v15;
        }

        __asm { BR              X10 }
      }

void sub_10016A880()
{
  *(_BYTE *)(v0 + v1) = v2;
}

void sub_10016A888()
{
  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for TransitionQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransitionQueue);
}

uint64_t _s22DefaultSortingProviderCMa()
{
  return objc_opt_self(&OBJC_CLASS____TtCO7TVMusic9MusicTabs22DefaultSortingProvider);
}

void sub_10016A8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    unsigned int v5 = *(void **)(Strong + OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer);
    *(void *)(Strong + OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer) = 0LL;

    [v4 setState:3];
  }

id sub_10016A9E4(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_pressDuration] = 0x3FE0000000000000LL;
  *(void *)&v2[OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer] = 0LL;
  sub_1000F370C(a1, (uint64_t)v15);
  uint64_t v5 = v16;
  if (v16)
  {
    unsigned int v6 = sub_1000E0518(v15, v16);
    uint64_t v7 = *(void *)(v5 - 8);
    __chkstk_darwin(v6, v6);
    unsigned int v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)(v9, v5);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_1000E053C(v15);
  }

  else
  {
    uint64_t v10 = 0LL;
  }

  size_t v11 = (objc_class *)type metadata accessor for TVMLongPressGestureRecognizer();
  v14.receiver = v2;
  v14.super_class = v11;
  id v12 = objc_msgSendSuper2(&v14, "initWithTarget:action:", v10, a2);
  swift_unknownObjectRelease(v10);
  sub_1000F3754(a1);
  return v12;
}

id sub_10016AB74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMLongPressGestureRecognizer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TVMLongPressGestureRecognizer()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic29TVMLongPressGestureRecognizer);
}

void sub_10016ABD4()
{
  uint64_t v1 = OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer;
  [*(id *)&v0[OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer] invalidate];
  objc_super v2 = (void *)objc_opt_self(&OBJC_CLASS___NSTimer);
  uint64_t v3 = swift_allocObject(&unk_100275660, 24LL, 7LL);
  swift_unknownObjectWeakInit(v3 + 16, v0);
  v7[4] = sub_10016AD80;
  uint64_t v8 = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256LL;
  v7[2] = sub_100166124;
  v7[3] = &unk_100275678;
  uint64_t v4 = _Block_copy(v7);
  swift_release(v8);
  id v5 = [v2 scheduledTimerWithTimeInterval:0 repeats:v4 block:0.5];
  _Block_release(v4);
  unsigned int v6 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v5;
}

void sub_10016ACE4()
{
  uint64_t v1 = OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC7TVMusic29TVMLongPressGestureRecognizer_timer];
  if (v2)
  {
    id v4 = v2;
    [v4 invalidate];
    uint64_t v3 = *(void **)&v0[v1];
    *(void *)&v0[v1] = 0LL;

    [v0 setState:5];
  }

uint64_t sub_10016AD5C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10016AD80(uint64_t a1)
{
}

uint64_t sub_10016AD88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10016AD98(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10016ADD0(float a1)
{
  *(float *)(v1 + OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_customBlackScrimAlpha) = a1;
  if (*(void *)(v1 + OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_visualizer))
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_visualizer + 8);
    if ((LODWORD(a1) & 0x7FFFFFFF) != 0) {
      float v3 = a1;
    }
    else {
      float v3 = 0.4;
    }
    uint64_t v4 = v2 + OBJC_IVAR____TtCV7TVMusic8Backdrop17CompositeRenderer_uniforms;
    uint64_t result = swift_beginAccess(v2 + OBJC_IVAR____TtCV7TVMusic8Backdrop17CompositeRenderer_uniforms, v6, 1LL, 0LL);
    *(float *)(v4 + 45sub_1000E053C(v0 + 2) = v3;
  }

  return result;
}

id sub_10016AF1C(uint64_t a1, uint64_t a2, char a3)
{
  id result = *(id *)(a1 + OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_visualizer);
  if (result) {
    return [result setPaused:a3 & 1];
  }
  return result;
}

id sub_10016AFE0()
{
  id v0 = [(id)objc_opt_self(TVMusicPlayerManager) defaultPlayer];
  id v1 = [v0 playbackEngine];

  if (!v1) {
    return 0LL;
  }
  if (qword_1002B7138 != -1) {
    swift_once(&qword_1002B7138, sub_100114708);
  }
  uint64_t v2 = (void *)qword_1002C5A20;
  if (!qword_1002C5A20)
  {

    return 0LL;
  }

  float v3 = (void *)qword_1002C5A38;
  uint64_t v4 = qword_1002C5A28;
  uint64_t v5 = unk_1002C5A30;
  v14[0] = qword_1002C5A20;
  v14[1] = qword_1002C5A28;
  void v14[2] = unk_1002C5A30;
  v14[3] = qword_1002C5A38;
  v14[4] = unk_1002C5A40;
  id v6 = objc_allocWithZone((Class)type metadata accessor for Backdrop.CompositeRenderer(0LL));
  sub_10016B5BC(v2, v4, v5, v3);
  swift_unknownObjectRetain(v2);
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRetain(v5);
  id v7 = v3;
  uint64_t v8 = (char *)sub_100107E48(v14);
  id v9 = [v1 audioAnalyzer];
  uint64_t v10 = *(void *)&v8[OBJC_IVAR____TtCV7TVMusic8Backdrop17CompositeRenderer_spectrumAnalysis];
  swift_retain(v10);
  sub_100166B80(v9);
  swift_release(v10);

  id v11 = objc_msgSend(objc_allocWithZone(MTKView), "initWithFrame:device:", v2, 0.0, 0.0, 0.0, 0.0);
  id v12 = v8;
  [v11 setDelegate:v12];

  swift_unknownObjectRelease(v5);
  swift_unknownObjectRelease(v4);
  swift_unknownObjectRelease(v2);

  return v11;
}

char *sub_10016B1D4(double a1, double a2, double a3, double a4)
{
  *(_DWORD *)&v4[OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_customBlackScrimAlpha] = 0;
  *(void *)&v4[OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_image] = 0LL;
  id v9 = (id *)&v4[OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_visualizer];
  uint64_t v10 = v4;
  *id v9 = sub_10016AFE0();
  v9[1] = v11;

  v22.receiver = v10;
  v22.super_class = (Class)type metadata accessor for ArtworkVisualizerView();
  id v12 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  unsigned int v13 = v12;
  objc_super v14 = *(void **)&v12[OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_visualizer];
  if (v14)
  {
    unsigned int v15 = *(void **)&v12[OBJC_IVAR___TVMusicNowPlayingArtworkVisualizerView_visualizer + 8];
    uint64_t v16 = v12;
    sub_1000DFE50(v14, v15);
    uint64_t v17 = qword_1002B7110;
    id v18 = v14;
    if (v17 != -1) {
      swift_once(&qword_1002B7110, sub_1001073E8);
    }
    [v18 setColorPixelFormat:qword_1002C59D0];

    [v18 setFramebufferOnly:1];
    id v19 = [v18 layer];
    [v19 setAllowsDisplayCompositing:0];

    id v20 = v18;
    [v16 bounds];
    objc_msgSend(v20, "setBounds:");

    [v20 setAutoresizingMask:18];
    [v20 setAutoResizeDrawable:0];
    [v20 setPreferredFramesPerSecond:30];
    [v16 addSubview:v20];
  }

  return v13;
}

id sub_10016B530()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ArtworkVisualizerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ArtworkVisualizerView()
{
  return objc_opt_self(&OBJC_CLASS___TVMusicNowPlayingArtworkVisualizerView);
}

id sub_10016B5BC(id result, uint64_t a2, uint64_t a3, void *a4)
{
  if (result)
  {
    swift_unknownObjectRetain(result);
    swift_unknownObjectRetain(a2);
    swift_unknownObjectRetain(a3);
    return a4;
  }

  return result;
}

NSString sub_10016B608()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002C5EB0 = (uint64_t)result;
  return result;
}

unint64_t sub_10016B6E8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_10016D7F8(*a1);
  *(void *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id sub_10016B744()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaPlayerDialogInfo();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MediaPlayerDialogInfo()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic21MediaPlayerDialogInfo);
}

uint64_t sub_10016B7D0(uint64_t a1, uint64_t a2)
{
  id v3 = [v2 localizedTitle];
  if (v3)
  {
    char v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    uint64_t v6 = v5;
  }

  else
  {
    uint64_t v6 = 0LL;
  }

  id v7 = [v2 localizedMessage];
  if (v7)
  {
    uint64_t v8 = v7;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    uint64_t v10 = v9;

    if (v6) {
      goto LABEL_6;
    }
LABEL_9:
    NSString v11 = 0LL;
    if (v10) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }

  uint64_t v10 = 0LL;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_6:
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  if (v10)
  {
LABEL_7:
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
    goto LABEL_11;
  }

void sub_10016BD30(int a1, id a2, void (*a3)(void, void), uint64_t a4)
{
  id v7 = [a2 commandRequest];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___MPCPlayerChangeRequest);
    uint64_t v10 = (void *)swift_allocObject(&unk_100275810, 40LL, 7LL);
    v10[2] = a2;
    v10[3] = a3;
    v10[4] = a4;
    v15[4] = sub_10016DB44;
    uint64_t v16 = v10;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256LL;
    v15[2] = sub_1000F56A4;
    void v15[3] = &unk_100275828;
    NSString v11 = _Block_copy(v15);
    NSString v12 = v16;
    id v13 = v8;
    id v14 = a2;
    sub_10011418C((uint64_t)a3, a4);
    objc_msgSend(v9, "performRequest:completion:", v13, v11, swift_release(v12).n128_f64[0]);
    _Block_release(v11);
  }

  else if (a3)
  {
    a3(0LL, 0LL);
  }

void sub_10016BE64(void *a1, id a2, void (*a3)(uint64_t, id))
{
  if ([a2 type] == (id)1)
  {
    if (a3)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(NSCocoaErrorDomain);
      uint64_t v6 = v5;
      id v7 = objc_allocWithZone(&OBJC_CLASS___NSError);
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v6);
      id v9 = [v7 initWithDomain:v8 code:3072 userInfo:0];

      a3(0LL, v9);
    }
  }

  else if (a3)
  {
    a3(1LL, a1);
  }

uint64_t sub_10016BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Logger(0LL, a2);
  sub_1001059D4(v2, qword_1002BC750);
  sub_1000E96CC(v2, (uint64_t)qword_1002BC750);
  return Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100224590LL,  0xD000000000000016LL,  0x8000000100228750LL);
}

void sub_10016C150(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = _convertErrorToNSError(_:)(a1);
  }
  else {
    uint64_t v3 = 0LL;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

void sub_10016C19C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  if ((a4 & 1) != 0) {
    uint64_t v12 = 0x10000LL;
  }
  else {
    uint64_t v12 = 0LL;
  }
  id v13 = (void *)objc_opt_self(&OBJC_CLASS___MPCPlayerChangeRequest);
  id v14 = (void *)swift_allocObject(&unk_100275888, 72LL, 7LL);
  void v14[2] = v6;
  v14[3] = a2;
  v14[4] = a3;
  void v14[5] = 0LL;
  v14[6] = 0LL;
  v14[7] = a5;
  v14[8] = a6;
  v17[4] = sub_10016D80C;
  double v18 = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256LL;
  void v17[2] = sub_100166124;
  v17[3] = &unk_1002758A0;
  unint64_t v15 = _Block_copy(v17);
  uint64_t v16 = v18;
  swift_bridgeObjectRetain(a3);
  sub_10011418C(a5, a6);
  objc_msgSend(v13, "performRequest:options:extendedStatusCompletion:", a1, v12, v15, swift_release(v16).n128_f64[0]);
  _Block_release(v15);
}

ValueMetadata *type metadata accessor for MediaPlayerDialogInfo.Response()
{
  return &type metadata for MediaPlayerDialogInfo.Response;
}

unint64_t sub_10016C544()
{
  unint64_t result = qword_1002BC7A8;
  if (!qword_1002BC7A8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EDDB8, &type metadata for MediaPlayerDialogInfo.Response);
    atomic_store(result, (unint64_t *)&qword_1002BC7A8);
  }

  return result;
}

void sub_10016C588( void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  id v13 = a1;
  id v14 = [a1 type];
  switch((unint64_t)v14)
  {
    case 0uLL:
      uint64_t v90 = a5;
      if (qword_1002B71F0 != -1) {
        swift_once(&qword_1002B71F0, sub_10016BF5C);
      }
      uint64_t v16 = type metadata accessor for Logger(0LL, v15);
      sub_1000E96CC(v16, (uint64_t)qword_1002BC750);
      uint64_t v17 = swift_bridgeObjectRetain_n(a4, 2LL);
      double v18 = (os_log_s *)Logger.logObject.getter(v17);
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v18, v19)) {
        goto LABEL_43;
      }
      uint64_t v20 = swift_slowAlloc(12LL, -1LL);
      unint64_t v82 = a7;
      uint64_t v21 = swift_slowAlloc(32LL, -1LL);
      uint64_t v94 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_bridgeObjectRetain(a4);
      id v93 = (id)sub_1001B2690(a3, a4, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v20 + 4);
      swift_bridgeObjectRelease_n(a4, 3LL);
      objc_super v22 = "Completed command %s with unknown status.";
      goto LABEL_37;
    case 1uLL:
      uint64_t v90 = a5;
      if ([v13 statusCode])
      {
        uint64_t v85 = a6;
        if (qword_1002B71F0 != -1) {
          swift_once(&qword_1002B71F0, sub_10016BF5C);
        }
        uint64_t v26 = type metadata accessor for Logger(0LL, v25);
        sub_1000E96CC(v26, (uint64_t)qword_1002BC750);
        swift_bridgeObjectRetain_n(a4, 2LL);
        id v27 = v13;
        id v28 = v13;
        uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = swift_slowAlloc(22LL, -1LL);
          uint64_t v32 = a3;
          uint64_t v33 = swift_slowAlloc(32LL, -1LL);
          uint64_t v94 = v33;
          *(_DWORD *)uint64_t v31 = 136315394;
          swift_bridgeObjectRetain(a4);
          id v93 = (id)sub_1001B2690(v32, a4, &v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v31 + 4);
          *(void *)&double v34 = swift_bridgeObjectRelease_n(a4, 3LL).n128_u64[0];
          *(_WORD *)(v31 + 1sub_1000E053C(v0 + 2) = 2048;
          id v35 = objc_msgSend(v28, "statusCode", v34);

          id v93 = v35;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v31 + 14);

          _os_log_impl( (void *)&_mh_execute_header,  v29,  v30,  "Completed player command %s with status code %ld.",  (uint8_t *)v31,  0x16u);
          swift_arrayDestroy(v33, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v33, -1LL, -1LL);
          swift_slowDealloc(v31, -1LL, -1LL);
        }

        else
        {

          swift_bridgeObjectRelease_n(a4, 2LL);
        }

        id v72 = [v28 error];
        uint64_t v73 = 0LL;
        id v13 = v27;
        a6 = v85;
        goto LABEL_45;
      }

      if (qword_1002B71F0 != -1) {
        swift_once(&qword_1002B71F0, sub_10016BF5C);
      }
      uint64_t v65 = type metadata accessor for Logger(0LL, v25);
      sub_1000E96CC(v65, (uint64_t)qword_1002BC750);
      uint64_t v66 = swift_bridgeObjectRetain_n(a4, 2LL);
      double v18 = (os_log_s *)Logger.logObject.getter(v66);
      os_log_type_t v19 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc(12LL, -1LL);
        unint64_t v82 = a7;
        uint64_t v21 = swift_slowAlloc(32LL, -1LL);
        uint64_t v94 = v21;
        *(_DWORD *)uint64_t v20 = 136315138;
        swift_bridgeObjectRetain(a4);
        id v93 = (id)sub_1001B2690(a3, a4, &v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v20 + 4);
        swift_bridgeObjectRelease_n(a4, 3LL);
        objc_super v22 = "Successfully executed player command %s.";
        goto LABEL_37;
      }

      goto LABEL_43;
    case 2uLL:
      uint64_t v36 = a3;
      if (qword_1002B71F0 != -1) {
        swift_once(&qword_1002B71F0, sub_10016BF5C);
      }
      uint64_t v37 = type metadata accessor for Logger(0LL, v15);
      sub_1000E96CC(v37, (uint64_t)qword_1002BC750);
      swift_bridgeObjectRetain_n(a4, 2LL);
      uint64_t v87 = v13;
      id v38 = v13;
      Swift::String v39 = (os_log_s *)Logger.logObject.getter(v38);
      os_log_type_t v40 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v91 = a5;
        uint64_t v83 = a7;
        uint64_t v41 = swift_slowAlloc(22LL, -1LL);
        uint64_t v42 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
        uint64_t v43 = swift_slowAlloc(32LL, -1LL);
        uint64_t v94 = v43;
        *(_DWORD *)uint64_t v41 = 136315394;
        swift_bridgeObjectRetain(a4);
        id v93 = (id)sub_1001B2690(v36, a4, &v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v41 + 4);
        *(void *)&double v44 = swift_bridgeObjectRelease_n(a4, 3LL).n128_u64[0];
        *(_WORD *)(v41 + 1sub_1000E053C(v0 + 2) = 2112;
        id v45 = objc_msgSend(v38, "error", v44);
        if (v45)
        {
          uint64_t v46 = _swift_stdlib_bridgeErrorToNSError(v45);
          id v93 = (id)v46;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v41 + 14);
        }

        else
        {
          id v93 = 0LL;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v41 + 14);
          uint64_t v46 = 0LL;
        }

        *uint64_t v42 = v46;

        _os_log_impl( (void *)&_mh_execute_header,  v39,  v40,  "Error performing player command %s. Error: %@",  (uint8_t *)v41,  0x16u);
        uint64_t v75 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
        swift_arrayDestroy(v42, 1LL, v75);
        swift_slowDealloc(v42, -1LL, -1LL);
        swift_arrayDestroy(v43, 1LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v43, -1LL, -1LL);
        swift_slowDealloc(v41, -1LL, -1LL);

        a7 = v83;
        a5 = v91;
      }

      else
      {

        *(void *)&double v63 = swift_bridgeObjectRelease_n(a4, 2LL).n128_u64[0];
      }

      id v72 = objc_msgSend(v38, "error", v63);
      uint64_t v73 = 0LL;
      id v13 = v87;
      goto LABEL_46;
    case 3uLL:
      uint64_t v80 = a3;
      id v47 = [v13 dialog];
      if (v47)
      {
        unint64_t v49 = v47;
        if (qword_1002B71F0 != -1) {
          swift_once(&qword_1002B71F0, sub_10016BF5C);
        }
        uint64_t v50 = type metadata accessor for Logger(0LL, v48);
        sub_1000E96CC(v50, (uint64_t)qword_1002BC750);
        swift_bridgeObjectRetain_n(a4, 2LL);
        uint64_t v88 = v13;
        id v51 = v13;
        uint64_t v52 = (os_log_s *)Logger.logObject.getter(v51);
        os_log_type_t v53 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v92 = a5;
          uint64_t v84 = a7;
          uint64_t v54 = swift_slowAlloc(22LL, -1LL);
          uint64_t v79 = (void *)swift_slowAlloc(8LL, -1LL);
          uint64_t v86 = swift_slowAlloc(32LL, -1LL);
          uint64_t v94 = v86;
          *(_DWORD *)uint64_t v54 = 136315394;
          swift_bridgeObjectRetain(a4);
          id v93 = (id)sub_1001B2690(v80, a4, &v94);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v54 + 4);
          *(void *)&double v55 = swift_bridgeObjectRelease_n(a4, 3LL).n128_u64[0];
          *(_WORD *)(v54 + 1sub_1000E053C(v0 + 2) = 2112;
          id v56 = objc_msgSend(v51, "dialog", v55);
          id v57 = v56;
          if (v56) {
            id v93 = v56;
          }
          else {
            id v93 = 0LL;
          }
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v54 + 14);
          *uint64_t v79 = v57;

          _os_log_impl( (void *)&_mh_execute_header,  v52,  v53,  "Showing dialog for player command %s. Dialog: %@",  (uint8_t *)v54,  0x16u);
          uint64_t v76 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
          swift_arrayDestroy(v79, 1LL, v76);
          swift_slowDealloc(v79, -1LL, -1LL);
          swift_arrayDestroy(v86, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v86, -1LL, -1LL);
          swift_slowDealloc(v54, -1LL, -1LL);

          a7 = v84;
          a5 = v92;
        }

        else
        {

          swift_bridgeObjectRelease_n(a4, 2LL);
        }

        objc_super v77 = (void *)swift_allocObject(&unk_100275748, 40LL, 7LL);
        v77[2] = a2;
        v77[3] = a5;
        v77[4] = a6;
        swift_bridgeObjectRetain(a6);
        uint64_t v78 = (void *)sub_10016B7D0((uint64_t)sub_10016DA58, (uint64_t)v77);
        swift_release(v77);
        [(id)objc_opt_self(TVMusicAlerts) showAlertController:v78];

        id v72 = 0LL;
        uint64_t v73 = 1LL;
        id v13 = v88;
        goto LABEL_46;
      }

      uint64_t v90 = a5;
      if (qword_1002B71F0 != -1) {
        swift_once(&qword_1002B71F0, sub_10016BF5C);
      }
      uint64_t v67 = type metadata accessor for Logger(0LL, v48);
      sub_1000E96CC(v67, (uint64_t)qword_1002BC750);
      uint64_t v68 = swift_bridgeObjectRetain_n(a4, 2LL);
      double v18 = (os_log_s *)Logger.logObject.getter(v68);
      os_log_type_t v69 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v69))
      {
        uint64_t v20 = swift_slowAlloc(12LL, -1LL);
        uint64_t v70 = a7;
        uint64_t v71 = swift_slowAlloc(32LL, -1LL);
        uint64_t v94 = v71;
        *(_DWORD *)uint64_t v20 = 136315138;
        swift_bridgeObjectRetain(a4);
        id v93 = (id)sub_1001B2690(a3, a4, &v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v20 + 4);
        swift_bridgeObjectRelease_n(a4, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v18,  v69,  "No dialog present for player command %s.",  (uint8_t *)v20,  0xCu);
        swift_arrayDestroy(v71, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v62 = v71;
        a7 = v70;
        goto LABEL_38;
      }

      goto LABEL_43;
    default:
      uint64_t v90 = a5;
      if (v14 != (id)999)
      {
        uint64_t v81 = a3;
        if (qword_1002B71F0 != -1) {
          swift_once(&qword_1002B71F0, sub_10016BF5C);
        }
        uint64_t v58 = type metadata accessor for Logger(0LL, v15);
        sub_1000E96CC(v58, (uint64_t)qword_1002BC750);
        swift_bridgeObjectRetain_n(a4, 2LL);
        id v59 = v13;
        double v18 = (os_log_s *)Logger.logObject.getter(v59);
        os_log_type_t v60 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v18, v60))
        {

          swift_bridgeObjectRelease_n(a4, 2LL);
          goto LABEL_44;
        }

        uint64_t v20 = swift_slowAlloc(22LL, -1LL);
        uint64_t v89 = v13;
        uint64_t v61 = swift_slowAlloc(32LL, -1LL);
        uint64_t v94 = v61;
        *(_DWORD *)uint64_t v20 = 134218242;
        id v93 = [v59 type];
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v20 + 4);

        *(_WORD *)(v20 + 1sub_1000E053C(v0 + 2) = 2080;
        swift_bridgeObjectRetain(a4);
        id v93 = (id)sub_1001B2690(v81, a4, &v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v20 + 14);
        swift_bridgeObjectRelease_n(a4, 3LL);
        _os_log_impl( (void *)&_mh_execute_header,  v18,  v60,  "Unknown response type %ld for player command %s.",  (uint8_t *)v20,  0x16u);
        swift_arrayDestroy(v61, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v62 = v61;
        id v13 = v89;
        goto LABEL_38;
      }

      if (qword_1002B71F0 != -1) {
        swift_once(&qword_1002B71F0, sub_10016BF5C);
      }
      uint64_t v23 = type metadata accessor for Logger(0LL, v15);
      sub_1000E96CC(v23, (uint64_t)qword_1002BC750);
      uint64_t v24 = swift_bridgeObjectRetain_n(a4, 2LL);
      double v18 = (os_log_s *)Logger.logObject.getter(v24);
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc(12LL, -1LL);
        unint64_t v82 = a7;
        uint64_t v21 = swift_slowAlloc(32LL, -1LL);
        uint64_t v94 = v21;
        *(_DWORD *)uint64_t v20 = 136315138;
        swift_bridgeObjectRetain(a4);
        id v93 = (id)sub_1001B2690(a3, a4, &v94);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v20 + 4);
        swift_bridgeObjectRelease_n(a4, 3LL);
        objc_super v22 = "Completed player command %s with custom data (ignored).";
LABEL_37:
        _os_log_impl((void *)&_mh_execute_header, v18, v19, v22, (uint8_t *)v20, 0xCu);
        swift_arrayDestroy(v21, 1LL, (char *)&type metadata for Any + 8);
        uint64_t v62 = v21;
        a7 = v82;
LABEL_38:
        swift_slowDealloc(v62, -1LL, -1LL);
        swift_slowDealloc(v20, -1LL, -1LL);

        goto LABEL_44;
      }

void sub_10016D478(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a1 & 1) != 0)
  {
    if (qword_1002B71F0 != -1) {
      swift_once(&qword_1002B71F0, sub_10016BF5C);
    }
    uint64_t v7 = type metadata accessor for Logger(0LL, a2);
    uint64_t v8 = sub_1000E96CC(v7, (uint64_t)qword_1002BC750);
    id v9 = (os_log_s *)Logger.logObject.getter(v8);
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      NSString v11 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)NSString v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "User accepted action on MPC dialog.", v11, 2u);
      swift_slowDealloc(v11, -1LL, -1LL);
    }

    if (a5)
    {
      uint64_t v12 = a4;
      uint64_t v13 = a5;
      uint64_t v14 = 3LL;
LABEL_20:
      sub_10016D854(v12, v13, v14, 0LL);
      return;
    }

    return;
  }

  if (a2)
  {
    uint64_t v16 = (void *)_convertErrorToNSError(_:)(a2);
    if (qword_1002B71F0 != -1) {
      swift_once(&qword_1002B71F0, sub_10016BF5C);
    }
    uint64_t v17 = type metadata accessor for Logger(0LL, v15);
    sub_1000E96CC(v17, (uint64_t)qword_1002BC750);
    id v18 = v16;
    os_log_type_t v19 = (os_log_s *)Logger.logObject.getter(v18);
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v32 = a4;
      id v33 = v18;
      objc_super v22 = (void *)swift_slowAlloc(8LL, -1LL);
      *(_DWORD *)uint64_t v21 = 138412290;
      id v23 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v21 + 4);
      *objc_super v22 = v18;

      _os_log_impl( (void *)&_mh_execute_header,  v19,  v20,  "User responded to MPC dialog, but there was an error: %@",  v21,  0xCu);
      uint64_t v24 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
      swift_arrayDestroy(v22, 1LL, v24);
      uint64_t v25 = v22;
      a4 = v32;
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v21, -1LL, -1LL);

      if (a5)
      {
LABEL_13:
        id v26 = v18;
        sub_10016D854(a4, a5, 4LL, (uint64_t)v18);

        return;
      }
    }

    else
    {

      if (a5) {
        goto LABEL_13;
      }
    }

    return;
  }

  if (qword_1002B71F0 != -1) {
    swift_once(&qword_1002B71F0, sub_10016BF5C);
  }
  uint64_t v27 = type metadata accessor for Logger(0LL, a2);
  uint64_t v28 = sub_1000E96CC(v27, (uint64_t)qword_1002BC750);
  uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "User cancelled MPC dialog.", v31, 2u);
    swift_slowDealloc(v31, -1LL, -1LL);
  }

  if (a5)
  {
    uint64_t v12 = a4;
    uint64_t v13 = a5;
    uint64_t v14 = 2LL;
    goto LABEL_20;
  }

unint64_t sub_10016D7F8(unint64_t result)
{
  if (result > 4) {
    return 0LL;
  }
  return result;
}

uint64_t sub_10016D810(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10016D820(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_10016D828()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10016D84C(uint64_t a1)
{
}

void sub_10016D854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_errorRetain(a4);
    uint64_t v8 = (void *)_convertErrorToNSError(_:)(a4);
    swift_errorRelease(a4);
  }

  else
  {
    uint64_t v8 = 0LL;
  }

  id v9 = (objc_class *)type metadata accessor for MediaPlayerDialogInfo();
  os_log_type_t v10 = (char *)objc_allocWithZone(v9);
  NSString v11 = &v10[OBJC_IVAR____TtC7TVMusic21MediaPlayerDialogInfo_identifier];
  *(void *)NSString v11 = a1;
  *((void *)v11 + 1) = a2;
  *(void *)&v10[OBJC_IVAR____TtC7TVMusic21MediaPlayerDialogInfo_response] = a3;
  *(void *)&v10[OBJC_IVAR____TtC7TVMusic21MediaPlayerDialogInfo_error] = v8;
  v23.receiver = v10;
  v23.super_class = v9;
  swift_bridgeObjectRetain(a2);
  id v12 = v8;
  id v13 = objc_msgSendSuper2(&v23, "init");
  id v14 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  if (qword_1002B71E8 != -1) {
    swift_once(&qword_1002B71E8, sub_10016B608);
  }
  uint64_t v15 = qword_1002C5EB0;
  uint64_t v16 = sub_1000DFE10(&qword_1002BC7B8);
  uint64_t inited = swift_initStackObject(v16, v22);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E84B0;
  v21[0] = 1868983913LL;
  v21[1] = 0xE400000000000000LL;
  AnyHashable.init<A>(_:)(v21, &type metadata for String, &protocol witness table for String);
  *(void *)(inited + 96) = v9;
  *(void *)(inited + 7sub_1000E053C(v0 + 2) = v13;
  id v18 = v13;
  unint64_t v19 = sub_100187634(inited);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v14, "postNotificationName:object:userInfo:", v15, 0, isa, swift_bridgeObjectRelease(v19).n128_f64[0]);
}

uint64_t sub_10016DA34()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_10016DA58(char a1, uint64_t a2)
{
}

unint64_t sub_10016DA64()
{
  unint64_t result = qword_1002BC7B0;
  if (!qword_1002BC7B0)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___MPCPlayerCommandDialogAction);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002BC7B0);
  }

  return result;
}

void sub_10016DAA4(int a1)
{
}

uint64_t sub_10016DAB0()
{
  if (*(void *)(v0 + 16)) {
    swift_release(*(void *)(v0 + 24));
  }
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10016DADC()
{
  uint64_t v1 = *(uint64_t (**)(void, void))(v0 + 16);
  if (v1) {
    return v1(0LL, 0LL);
  }
  return result;
}

uint64_t sub_10016DB10()
{
  if (*(void *)(v0 + 24)) {
    swift_release(*(void *)(v0 + 32));
  }
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_10016DB44(void *a1)
{
}

uint64_t sub_10016DB58()
{
  if (v0[7]) {
    swift_release(v0[8]);
  }
  return swift_deallocObject(v0, 72LL, 7LL);
}

void sub_10016DB94(void *a1)
{
}

uint64_t getEnumTagSinglePayload for SelectionIndicatorViewModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }

uint64_t storeEnumTagSinglePayload for SelectionIndicatorViewModifier( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_10016DCC8 + 4 * byte_1001EDDE5[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10016DCFC + 4 * byte_1001EDDE0[v4]))();
}

uint64_t sub_10016DCFC(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016DD04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x10016DD0CLL);
  }
  return result;
}

uint64_t sub_10016DD18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x10016DD20LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_10016DD24(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10016DD2C(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SelectionIndicatorViewModifier()
{
  return &type metadata for SelectionIndicatorViewModifier;
}

uint64_t sub_10016DD48(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023DEA4, 1LL);
}

uint64_t sub_10016DD58@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002BC7C8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  NSString v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9, v12);
  id v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15((char *)&v20 - v13, a1, v6);
  if ((a2 & 1) != 0) {
    uint64_t v16 = sub_10016DE80;
  }
  else {
    uint64_t v16 = 0LL;
  }
  v15(v11, (uint64_t)v14, v6);
  v15(a3, (uint64_t)v11, v6);
  uint64_t v17 = (double (**)@<D0>(uint64_t@<X8>))&a3[*(int *)(sub_1000DFE10(&qword_1002BC7D0) + 48)];
  *uint64_t v17 = v16;
  v17[1] = 0LL;
  sub_10011418C((uint64_t)v16, 0LL);
  id v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v14, v6);
  sub_1000E03F0((uint64_t)v16, 0LL);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v6);
}

double sub_10016DE80@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Alignment.center.getter();
  uint64_t v4 = _FrameLayout.init(width:height:alignment:)(&v15, 0x4018000000000000LL, 0LL, 0x4018000000000000LL, 0LL, v2, v3);
  uint64_t v5 = v15;
  char v6 = v16;
  uint64_t v7 = v17;
  char v8 = v18;
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  double v11 = GeometryProxy.size.getter(v4) * 0.5;
  GeometryProxy.size.getter(v12);
  *(void *)a1 = v5;
  double result = v13 + -11.0;
  *(_BYTE *)(a1 + 8) = v6;
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v9;
  *(void *)(a1 + 40) = v10;
  *(double *)(a1 + 48) = v11;
  *(double *)(a1 + 56) = v13 + -11.0;
  return result;
}

uint64_t sub_10016DF30@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  char v5 = *v2;
  *(void *)a2 = static Alignment.center.getter(a1);
  *((void *)a2 + 1) = v6;
  uint64_t v7 = sub_1000DFE10(&qword_1002BC7C0);
  return sub_10016DD58(a1, v5, &a2[*(int *)(v7 + 44)]);
}

unint64_t sub_10016DF88()
{
  unint64_t result = qword_1002BC7D8;
  if (!qword_1002BC7D8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BC7E0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for ZStack<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BC7D8);
  }

  return result;
}

id sub_10016DFD4(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR___TVMusicNowPlayingInteractionGestureRecognizer_hysteresis] = 0x3FB999999999999ALL;
  char v5 = &v2[OBJC_IVAR___TVMusicNowPlayingInteractionGestureRecognizer_startLocation];
  *(void *)char v5 = 0LL;
  *((void *)v5 + 1) = 0LL;
  v5[16] = 1;
  uint64_t v6 = &v2[OBJC_IVAR___TVMusicNowPlayingInteractionGestureRecognizer_currentLocation];
  *(void *)uint64_t v6 = 0LL;
  *((void *)v6 + 1) = 0LL;
  v6[16] = 1;
  sub_1000F370C(a1, (uint64_t)v29);
  uint64_t v7 = v30;
  if (v30)
  {
    char v8 = sub_1000E0518(v29, v30);
    uint64_t v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8, v8);
    double v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)(v11, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_1000E053C(v29);
  }

  else
  {
    uint64_t v12 = 0LL;
  }

  double v13 = (objc_class *)type metadata accessor for NowPlayingInteractionGestureRecognizer();
  v28.receiver = v2;
  v28.super_class = v13;
  id v14 = objc_msgSendSuper2(&v28, "initWithTarget:action:", v12, a2);
  swift_unknownObjectRelease(v12);
  uint64_t v15 = sub_1000DFE10(&qword_1002B8A00);
  uint64_t v16 = swift_allocObject(v15, 40LL, 7LL);
  __int128 v27 = xmmword_1001E9180;
  *(_OWORD *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  id v17 = v14;
  *(NSNumber *)(v16 + 3sub_1000E053C(v0 + 2) = Int._bridgeToObjectiveC()();
  v29[0] = v16;
  specialized Array._endMutation()(v18);
  uint64_t v19 = v29[0];
  sub_1000F4C28();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "setAllowedPressTypes:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  uint64_t v21 = swift_allocObject(v15, 40LL, 7LL);
  *(_OWORD *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = v27;
  id v22 = v17;
  *(NSNumber *)(v21 + 3sub_1000E053C(v0 + 2) = Int._bridgeToObjectiveC()();
  v29[0] = v21;
  specialized Array._endMutation()(v23);
  uint64_t v24 = v29[0];
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "setAllowedTouchTypes:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  [v22 setDelaysTouchesEnded:0];
  sub_1000F3754(a1);
  return v22;
}

void sub_10016E3AC(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v7 = a4;
  id v8 = a1;
  if ([v8 state] == (id)1 || objc_msgSend(v8, "state") == (id)2) {
    [v8 setState:a5];
  }
}

id sub_10016E4F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingInteractionGestureRecognizer();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingInteractionGestureRecognizer()
{
  return objc_opt_self(&OBJC_CLASS___TVMusicNowPlayingInteractionGestureRecognizer);
}

id sub_10016E548(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  [v1 state];
  uint64_t v6 = &v1[OBJC_IVAR___TVMusicNowPlayingInteractionGestureRecognizer_currentLocation];
  *(void *)uint64_t v6 = v3;
  *((void *)v6 + 1) = v5;
  v6[16] = 0;
  return [v1 setState:2];
}

id sub_10016E5EC()
{
  if ([v0 state] == (id)1 || (id result = objc_msgSend(v0, "state"), result == (id)2))
  {
    if (v0[OBJC_IVAR___TVMusicNowPlayingInteractionGestureRecognizer_currentLocation + 16]) {
      uint64_t v2 = 3LL;
    }
    else {
      uint64_t v2 = 2LL;
    }
    return [v0 setState:v2];
  }

  return result;
}

uint64_t String.init(formatLocalizationKey:_:table:comment:)( uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  id v14 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v21._object = a7;
  v15._uint64_t countAndFlagsBits = a1;
  v15._object = a2;
  v16.value._uint64_t countAndFlagsBits = a4;
  v16.value._object = a5;
  v17._uint64_t countAndFlagsBits = 0LL;
  v17._object = (void *)0xE000000000000000LL;
  v21._uint64_t countAndFlagsBits = a6;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, v14, v17, v21);

  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(a7);
  swift_bridgeObjectRelease(a5);
  uint64_t v19 = String.init(format:_:)(v18._countAndFlagsBits, v18._object, a3);
  swift_bridgeObjectRelease(v18._object);
  return v19;
}

Swift::String __swiftcall String.init(localizationKey:)(Swift::String localizationKey)
{
  object = localizationKey._object;
  uint64_t countAndFlagsBits = localizationKey._countAndFlagsBits;
  uint64_t v3 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v11._object = (void *)0xE000000000000000LL;
  v4._uint64_t countAndFlagsBits = countAndFlagsBits;
  v4._object = object;
  v5._uint64_t countAndFlagsBits = 0LL;
  v5._object = (void *)0xE000000000000000LL;
  v11._uint64_t countAndFlagsBits = 0LL;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, v3, v5, v11);

  swift_bridgeObjectRelease(object);
  Swift::String v10 = v6;
  uint64_t v7 = String.init<A>(_:)( &v10,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  result._object = v8;
  result._uint64_t countAndFlagsBits = v7;
  return result;
}

id PrivacyDisclaimer.viewController.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }

  else
  {
    id v3 = sub_10016E8CC();
    Swift::String v4 = *(void **)(v0 + 16);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0LL;
  }

  id v5 = v1;
  return v2;
}

uint64_t sub_10016E85C(uint64_t a1, uint64_t (*a2)(void))
{
  id v3 = [(id)objc_opt_self(ICPrivacyInfo) sharedPrivacyInfo];
  [v3 acknowledgePrivacyPolicyForIdentifier:ICPrivacyIdentifierMusic completionHandler:0];

  return a2();
}

id sub_10016E8CC()
{
  id v32 = [objc_allocWithZone(UIImage) init];
  uint64_t v0 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  uint64_t v1 = (NSBundle *)[v0 mainBundle];
  v34._object = (void *)0xE000000000000000LL;
  v2._uint64_t countAndFlagsBits = 0x5F454D4F434C4557LL;
  v2._object = (void *)0xED0000454C544954LL;
  v3._uint64_t countAndFlagsBits = 0LL;
  v3._object = (void *)0xE000000000000000LL;
  v34._uint64_t countAndFlagsBits = 0LL;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, v1, v3, v34);

  Swift::String v33 = v4;
  String.init<A>(_:)( &v33,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v6 = v5;
  uint64_t v7 = (NSBundle *)[v0 mainBundle];
  v35._object = (void *)0xE000000000000000LL;
  v8._object = (void *)0x8000000100228850LL;
  v8._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  v9._uint64_t countAndFlagsBits = 0LL;
  v9._object = (void *)0xE000000000000000LL;
  v35._uint64_t countAndFlagsBits = 0LL;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, v7, v9, v35);

  Swift::String v33 = v10;
  String.init<A>(_:)( &v33,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v12 = v11;
  double v13 = (NSBundle *)[v0 mainBundle];
  v14._uint64_t countAndFlagsBits = 0xD000000000000015LL;
  v36._object = (void *)0xE000000000000000LL;
  v14._object = (void *)0x8000000100228870LL;
  v15._uint64_t countAndFlagsBits = 0LL;
  v15._object = (void *)0xE000000000000000LL;
  v36._uint64_t countAndFlagsBits = 0LL;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, v13, v15, v36);

  Swift::String v33 = v16;
  String.init<A>(_:)( &v33,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v18 = v17;
  id v19 = objc_allocWithZone(&OBJC_CLASS___AMSUIOnboardingViewController);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v18);
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v19 initWithHeaderImage:v32 titleText:v20 descriptionText:v21 primaryButtonText:v22 privacyLinkBundleIdentifier:v23];

  Class v25 = (void *)objc_opt_self(&OBJC_CLASS___UIImage);
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = objc_msgSend(v25, "ams_imageWithSystemSymbolName:", v26);

  if (v27)
  {
    id v28 = [v27 imageWithRenderingMode:1];
    id v29 = [(id)objc_opt_self(UIColor) secondaryLabelColor];
    id v30 = [v28 imageWithTintColor:v29];

    [v24 setRightImage:v30];
  }

  return v24;
}

void PrivacyDisclaimer.viewController.setter(uint64_t a1)
{
  Swift::String v2 = *(void **)(v1 + 16);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
}

void (*PrivacyDisclaimer.viewController.modify(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = PrivacyDisclaimer.viewController.getter();
  return sub_10016ECB4;
}

void sub_10016ECB4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  Swift::String v3 = *(void **)(v1 + 16);
  *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
}

uint64_t PrivacyDisclaimer.deinit()
{
  return v0;
}

uint64_t PrivacyDisclaimer.__deallocating_deinit()
{
  return swift_deallocClassInstance(v0, 24LL, 7LL);
}

uint64_t type metadata accessor for PrivacyDisclaimer()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic17PrivacyDisclaimer);
}

void sub_10016EDFC(double a1)
{
  if (a1 > 0.0)
  {
    if (a1 < 3600.0)
    {
      double v2 = a1 / 60.0;
      if ((~*(void *)&v2 & 0x7FF0000000000000LL) != 0)
      {
        if (v2 > -9.22337204e18)
        {
          if (v2 < 9.22337204e18)
          {
            uint64_t v3 = (uint64_t)v2;
            uint64_t v4 = OBJC_IVAR___TVMusicTimeIntervalFormatter_minutesFormat;
LABEL_23:
            Swift::String v8 = (uint64_t *)(v1 + v4);
            uint64_t v9 = *v8;
            uint64_t v10 = v8[1];
            uint64_t v11 = sub_1000DFE10(&qword_1002BB5B0);
            uint64_t v12 = swift_allocObject(v11, 72LL, 7LL);
            *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E84B0;
            *(void *)(v12 + 56) = &type metadata for Int;
            *(void *)(v12 + 64) = &protocol witness table for Int;
            *(void *)(v12 + 3sub_1000E053C(v0 + 2) = v3;
            static String.localizedStringWithFormat(_:_:)(v9, v10, v12);
            swift_bridgeObjectRelease(v12);
            return;
          }

          goto LABEL_26;
        }
      }

      else
      {
        __break(1u);
      }

      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }

    if (a1 < 86400.0)
    {
      double v5 = a1 / 3600.0;
      if ((~*(void *)&v5 & 0x7FF0000000000000LL) != 0)
      {
        if (v5 > -9.22337204e18)
        {
          if (v5 < 9.22337204e18)
          {
            uint64_t v3 = (uint64_t)v5;
            uint64_t v4 = OBJC_IVAR___TVMusicTimeIntervalFormatter_hoursFormat;
            goto LABEL_23;
          }

          goto LABEL_29;
        }

id sub_10016F0F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimeIntervalFormatter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TimeIntervalFormatter()
{
  return objc_opt_self(&OBJC_CLASS___TVMusicTimeIntervalFormatter);
}

uint64_t sub_10016F1B0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40LL);
  id v4 = a2;
  sub_1000E011C((uint64_t)&v6, v3, &qword_1002BCAF8);
  return swift_continuation_resume(v2);
}

uint64_t sub_10016F200(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!a2) {
    return swift_continuation_throwingResume(*(void *)(a1 + 32));
  }
  uint64_t v4 = sub_1000DFE10((uint64_t *)&unk_1002B7EE0);
  uint64_t v5 = swift_allocError(v4, &protocol self-conformance witness table for Error, 0LL, 0LL);
  *double v6 = a2;
  id v7 = a2;
  return swift_continuation_throwingResumeWithError(v2, v5);
}

uint64_t sub_10016F274(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Logger(0LL, a2);
  sub_1001059D4(v2, qword_1002BC910);
  sub_1000E96CC(v2, (uint64_t)qword_1002BC910);
  return Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100224590LL,  0xD000000000000015LL,  0x8000000100228B90LL);
}

uint64_t sub_10016F2F0()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFD0);
  v4[0] = v0;
  uint64_t v2 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v4, KeyPath, v2);
  swift_release(KeyPath);
  swift_beginAccess(v0 + 32, v4, 0LL, 0LL);
  return swift_bridgeObjectRetain(*(void *)(v0 + 32));
}

uint64_t sub_10016F38C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFD0);
  v8[0] = v3;
  uint64_t v5 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v5);
  swift_release(KeyPath);
  swift_beginAccess(v3 + 32, v8, 0LL, 0LL);
  uint64_t v6 = *(void *)(v3 + 32);
  *a2 = v6;
  return swift_bridgeObjectRetain(v6);
}

double sub_10016F430(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFD0);
  uint64_t v6 = v3;
  sub_1000DF308(&qword_1002BDE60, type metadata accessor for DefaultNowPlayingMenuViewModel, (uint64_t)&unk_1001EDFB4);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v6, KeyPath, sub_1001822BC);
  swift_release(KeyPath);
  *(void *)&double result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_10016F4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_10016F54C()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFF8);
  uint64_t v4 = v0;
  uint64_t v2 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 40);
}

void sub_10016F5D0(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFF8);
  uint64_t v6 = v3;
  uint64_t v5 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 40);
}

double sub_10016F65C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFF8);
  uint64_t v5 = v2;
  sub_1000DF308(&qword_1002BDE60, type metadata accessor for DefaultNowPlayingMenuViewModel, (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v5, KeyPath, sub_100186CE8);
  *(void *)&double result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_10016F704(char a1)
{
  uint64_t v2 = (unsigned __int8 *)v1;
  if (a1 == 2)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
    uint64_t v5 = swift_getKeyPath(&unk_1001EE048);
    static Published.subscript.getter(&v13, v3, KeyPath, v5);
    swift_release(KeyPath);
    swift_release(v5);
    uint64_t v6 = v13;
    if (v13)
    {
      if ([(id)objc_opt_self(TVMusicLibraryUtilities) isPendingAddForMPObject:v13])
      {

        int v7 = 1;
      }

      else
      {
        int v7 = [v6 isLibraryAdded];
      }
    }

    else
    {
      int v7 = 0;
    }
  }

  else
  {
    int v7 = a1 & 1;
  }

  uint64_t v8 = swift_getKeyPath(&unk_1001EDFF8);
  double v13 = v2;
  uint64_t v9 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, v8, v9);
  *(void *)&double result = swift_release(v8).n128_u64[0];
  if (v7 != v2[40])
  {
    uint64_t v11 = swift_getKeyPath(&unk_1001EDFF8);
    __chkstk_darwin(v11, v12);
    double v13 = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v11, sub_100186CE8);
    *(void *)&double result = swift_release(v11).n128_u64[0];
  }

  return result;
}

double sub_10016F8BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  uint64_t v63 = v3;
  __chkstk_darwin(v2, v4);
  os_log_type_t v60 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000DFE10(&qword_1002BCB00);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  uint64_t v65 = v7;
  __chkstk_darwin(v6, v8);
  uint64_t v61 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002BBD68);
  __chkstk_darwin(v10, v11);
  double v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(&qword_1002BCB08);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_1000DFE10(&qword_1002BCB10);
  uint64_t v55 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  NSString v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_1000DFE10(&qword_1002BCB18);
  uint64_t v56 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v24);
  NSString v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_beginAccess( *((void *)v0 + 2) + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingSong,  v66,  33LL,  0LL);
  uint64_t v27 = sub_1000DFE10(&qword_1002BDE90);
  Published.projectedValue.getter(v27);
  swift_endAccess(v66);
  uint64_t v28 = sub_1000E0374( &qword_1002BCB20,  &qword_1002BCB08,  (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  Publisher.compactMap<A>(_:)(sub_1001717B0, 0LL, v14, &type metadata for String, v28);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  uint64_t v29 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
  v66[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL);
  uint64_t v59 = v30;
  v58(v13, 1LL, 1LL, v30);
  uint64_t v31 = sub_1000E0374( &qword_1002BCB28,  &qword_1002BCB10,  (uint64_t)&protocol conformance descriptor for Publishers.CompactMap<A, B>);
  uint64_t v57 = sub_100185CC8( (unint64_t *)&qword_1002BBD90,  (unint64_t *)&qword_1002BBD80,  &OBJC_CLASS___OS_dispatch_queue_ptr,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(v66, v13, v19, v29, v31, v57);
  sub_1000E03B4((uint64_t)v13, &qword_1002BBD68);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v19);
  uint64_t v32 = swift_allocObject(&unk_100275AD0, 24LL, 7LL);
  swift_weakInit(v32 + 16, v1);
  uint64_t v33 = sub_1000E0374( &qword_1002BCB30,  &qword_1002BCB18,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  uint64_t v34 = Publisher<>.sink(receiveValue:)(sub_10018227C, v32, v23, v33);
  __n128 v35 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v26, v23, v35);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFD0);
  v66[0] = v1;
  uint64_t v37 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v66, KeyPath, v37);
  swift_release(KeyPath);
  v66[0] = v1;
  uint64_t v38 = swift_getKeyPath(&unk_1001EDFD0);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v66, v38, v37);
  swift_release(v38);
  swift_beginAccess(v1 + 32, v66, 33LL, 0LL);
  AnyCancellable.store(in:)(v1 + 32);
  swift_endAccess(v66);
  swift_release(v34);
  v66[0] = v1;
  uint64_t v39 = swift_getKeyPath(&unk_1001EDFD0);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v66, v39, v37);
  swift_release(v39);
  id v40 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  uint64_t v41 = v60;
  NSNotificationCenter.publisher(for:object:)(MPModelLibraryTransientStateControllerDidChangeNotification, 0LL);

  v66[0] = (id)static OS_dispatch_queue.main.getter();
  v58(v13, 1LL, 1LL, v59);
  uint64_t v42 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v43 = v61;
  uint64_t v44 = v62;
  Publisher.receive<A>(on:options:)(v66, v13, v62, v29, v42, v57);
  sub_1000E03B4((uint64_t)v13, &qword_1002BBD68);

  (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v44);
  uint64_t v45 = swift_allocObject(&unk_100275AD0, 24LL, 7LL);
  swift_weakInit(v45 + 16, v1);
  uint64_t v46 = sub_1000E0374( &qword_1002BCB38,  &qword_1002BCB00,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  uint64_t v47 = v64;
  uint64_t v48 = v43;
  uint64_t v49 = Publisher<>.sink(receiveValue:)(sub_10018228C, v45, v64, v46);
  __n128 v50 = swift_release(v45);
  (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v48, v47, v50);
  uint64_t v51 = swift_getKeyPath(&unk_1001EDFD0);
  v66[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v66, v51, v37);
  swift_release(v51);
  v66[0] = v1;
  uint64_t v52 = swift_getKeyPath(&unk_1001EDFD0);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v66, v52, v37);
  swift_release(v52);
  swift_beginAccess(v1 + 32, v66, 33LL, 0LL);
  AnyCancellable.store(in:)(v1 + 32);
  swift_endAccess(v66);
  swift_release(v49);
  v66[0] = v1;
  uint64_t v53 = swift_getKeyPath(&unk_1001EDFD0);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v66, v53, v37);
  *(void *)&double result = swift_release(v53).n128_u64[0];
  return result;
}

id sub_10016FF60()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v3 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v8, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  uint64_t v4 = v8;
  if (!v8) {
    return 0LL;
  }
  id v5 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
  id v6 = [v5 hasCloudLibrary];

  return v6;
}

void sub_100170020()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v3 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v8, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  id v4 = v8;
  if (v8)
  {
    id v5 = [v8 identifiers];

    if (v5)
    {
      id v6 = [(id)objc_opt_self(TVMusicPlayerManager) defaultPlayer];
      id v7 = [v6 playQueue];

      if (v7)
      {
        [v7 sectionForItemWithIdentifiers:v5];
      }

      else
      {
        __break(1u);
      }
    }
  }

uint64_t sub_100170138()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v3 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v10, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  id v4 = v10;
  if (v10)
  {
    id v5 = [v10 artist];
    if (v5)
    {
      id v6 = v5;
      id v7 = [v5 identifiers];

      id v8 = [v7 universalStore];
      if (v8)
      {
        [v8 adamID];

        swift_unknownObjectRelease(v8);
        return 1LL;
      }
    }
  }

  return 0LL;
}

void sub_10017023C()
{
  uint64_t v1 = (_BYTE *)v0;
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v4 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v10, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  id v5 = v10;
  if (v10)
  {
    uint64_t v6 = swift_getKeyPath(&unk_1001EDFF8);
    id v10 = v1;
    uint64_t v7 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, v6, v7);
    swift_release(v6);
    if ((v1[40] & 1) == 0)
    {
      uint64_t v8 = swift_getKeyPath(&unk_1001EDFF8);
      __chkstk_darwin(v8, v9);
      id v10 = v1;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v10, v8, sub_100186CE8);
      swift_release(v8);
    }

    sub_100197030(v5);
  }

void sub_1001703AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v8 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v17, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  uint64_t v9 = v17;
  if (v17)
  {
    uint64_t v10 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56LL))(v5, 1LL, 1LL, v10);
    type metadata accessor for MainActor(0LL);
    id v11 = v9;
    uint64_t v12 = swift_retain(v1);
    uint64_t v13 = static MainActor.shared.getter(v12);
    uint64_t v14 = (void *)swift_allocObject(&unk_1002769F8, 48LL, 7LL);
    void v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v11;
    void v14[5] = v1;
    uint64_t v15 = sub_100125950((uint64_t)v5, (uint64_t)&unk_1002BCCF8, (uint64_t)v14);
    swift_release(v15);
  }

uint64_t sub_1001704F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  v5[17] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[18] = v7;
  v5[19] = v8;
  return swift_task_switch(sub_10017055C, v7, v8);
}

uint64_t sub_10017055C()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = (void *)v0[15];
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicAlerts);
  id v4 = [v2 title];
  v0[20] = v4;
  v0[7] = v0 + 21;
  v0[2] = v0;
  v0[3] = sub_10017062C;
  uint64_t v5 = swift_continuation_init(v0 + 2, 0LL);
  v0[10] = _NSConcreteStackBlock;
  uint64_t v6 = v0 + 10;
  v6[1] = 0x40000000LL;
  v6[2] = sub_100170804;
  v6[3] = &unk_100276A10;
  v6[4] = v5;
  [v3 showAlertForLibraryDeleteConfirmationWithItemName:v4 completion:v6];
  return swift_continuation_await(v1);
}

uint64_t sub_10017062C()
{
  return swift_task_switch(sub_100170670, *(void *)(*(void *)v0 + 144LL), *(void *)(*(void *)v0 + 152LL));
}

uint64_t sub_100170670()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release(*(void *)(v0 + 136));
  int v2 = *(unsigned __int8 *)(v0 + 168);

  if (v2 == 1)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFF8);
    *(void *)(v0 + 80) = v3;
    uint64_t v5 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 80, KeyPath, v5);
    swift_release(KeyPath);
    if (*(_BYTE *)(v3 + 40) == 1)
    {
      uint64_t v6 = *(void *)(v0 + 128);
      uint64_t v7 = swift_getKeyPath(&unk_1001EDFF8);
      uint64_t v8 = swift_task_alloc(32LL);
      *(void *)(v8 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
      *(_BYTE *)(v8 + 24) = 0;
      *(void *)(v0 + 80) = v6;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v0 + 80, v7, sub_100186CE8);
      swift_release(v7);
      swift_task_dealloc(v8);
    }

    uint64_t v9 = *(void *)(v0 + 120);
    uint64_t v10 = *(void *)(*(void *)(v0 + 128) + 16LL);
    uint64_t v11 = swift_getKeyPath(&unk_1001EE068);
    uint64_t v12 = swift_getKeyPath(&unk_1001EE090);
    *(_BYTE *)(v0 + 80) = 0;
    swift_retain(v10);
    static Published.subscript.setter(v0 + 80, v10, v11, v12);
    [(id)objc_opt_self(TVMusicLibraryUtilities) removeMPObjectFromLibrary:v9];
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100170804(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(_BYTE **)(*(void *)(v2 + 64) + 40LL) = a2;
  return swift_continuation_resume(v2);
}

id sub_100170818(void *a1, void *a2)
{
  id v4 = (objc_class *)type metadata accessor for LyricsViewDataSourceMP();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC7TVMusic22LyricsViewDataSourceMP_song] = a1;
  v17.receiver = v5;
  v17.super_class = v4;
  id v6 = a1;
  id v7 = objc_msgSendSuper2(&v17, "init");
  id v8 = objc_allocWithZone((Class)&OBJC_CLASS___TVMusicLyricsViewController);
  id v9 = objc_msgSend(v8, "initWithDataSource:", v7, v17.receiver, v17.super_class);
  id result = [(id)objc_opt_self(TVMusicNowPlayingManager) sharedInstance];
  if (result)
  {
    uint64_t v11 = result;
    unsigned int v12 = [result isNowPlayingVisible];

    if (v12)
    {
      NSString v13 = String._bridgeToObjectiveC()();
LABEL_6:
      [v9 setPAFFeatureName:v13];

      id v15 = [a2 playEvent];
      [v9 setPAFContainerData:v15];

      id v16 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
      [v16 presentViewController:v9];

      return (id)swift_unknownObjectRelease(v16);
    }

    id result = [(id)objc_opt_self(TVMusicLibraryUITracker) sharedTracker];
    if (result)
    {
      uint64_t v14 = result;
      NSString v13 = [result currentPAFFeatureName];

      goto LABEL_6;
    }
  }

  else
  {
    __break(1u);
  }

  __break(1u);
  return result;
}

void sub_1001709F4(void *a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  id v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v52 - v17;
  id v19 = [a1 identifiers];
  id v20 = [v19 universalStore];

  if (!v20) {
    goto LABEL_24;
  }
  id v21 = [v20 globalPlaylistID];
  swift_unknownObjectRelease(v20);
  if (!v21) {
    goto LABEL_24;
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  uint64_t v23 = v9;
  uint64_t v24 = v18;
  uint64_t v25 = v11;
  uint64_t v26 = v10;
  unint64_t v28 = v27;

  swift_bridgeObjectRelease(v28);
  uint64_t v29 = HIBYTE(v28) & 0xF;
  BOOL v30 = (v28 & 0x2000000000000000LL) == 0;
  uint64_t v31 = v25;
  uint64_t v32 = v24;
  uint64_t v33 = (uint64_t)v23;
  uint64_t v34 = v15;
  if (v30) {
    uint64_t v29 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    if ([(id)objc_opt_self(TVMusicApplication) usingMusicUI])
    {
      if (qword_1002B7218 != -1) {
        swift_once(&qword_1002B7218, sub_100188700);
      }
      sub_100188194(a1);
    }

    else
    {
      id v40 = [a1 identifiers];
      NSString v41 = [v40 universalStore];

      if (v41)
      {
        id v42 = [v41 globalPlaylistID];
        swift_unknownObjectRelease(v41);
        if (v42)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
          uint64_t v44 = v43;

          NSString v41 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v44);
        }

        else
        {
          NSString v41 = 0LL;
        }
      }

      id v45 = sub_100092F4C(v41, 0LL);

      if (v45)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v45);

        uint64_t v46 = *(void (**)(uint64_t, char *, uint64_t))(v31 + 32);
        v46(v33, v34, v26);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0LL, 1LL, v26);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1LL, v26) != 1)
        {
          v46((uint64_t)v32, (char *)v33, v26);
          uint64_t v47 = v32;
          id v48 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
          URL._bridgeToObjectiveC()(v49);
          uint64_t v51 = v50;
          [v48 openJavascriptAppWithURL:v50];
          swift_unknownObjectRelease(v48);

          (*(void (**)(char *, uint64_t))(v31 + 8))(v47, v26);
          return;
        }
      }

      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v33, 1LL, 1LL, v26);
      }

      sub_1000E03B4(v33, &qword_1002B7890);
    }
  }

  else
  {
LABEL_24:
    if ([a1 isLibraryAdded])
    {
      uint64_t v35 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56LL))(v5, 1LL, 1LL, v35);
      type metadata accessor for MainActor(0LL);
      id v36 = a1;
      uint64_t v37 = static MainActor.shared.getter(v36);
      uint64_t v38 = (void *)swift_allocObject(&unk_100276178, 40LL, 7LL);
      void v38[2] = v37;
      _OWORD v38[3] = &protocol witness table for MainActor;
      _OWORD v38[4] = v36;
      uint64_t v39 = sub_100125950((uint64_t)v5, (uint64_t)&unk_1002BCBD8, (uint64_t)v38);
      swift_release(v39);
    }
  }

void sub_100170E44(void *a1, int a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for URL(0LL);
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v10, v13);
  uint64_t v51 = (char *)&v50 - v14;
  uint64_t v15 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v19 = [a1 album];
  uint64_t v53 = v19;
  if (v19)
  {
    id v20 = [v19 identifiers];
    id v21 = [v20 universalStore];

    if (v21)
    {
      id v22 = [v21 adamID];
      swift_unknownObjectRelease(v21);
      if (v22)
      {
LABEL_6:
        int v25 = 0;
        goto LABEL_8;
      }

      id v23 = [v53 identifiers];
      id v24 = [v23 universalStore];

      if (v24)
      {
        id v22 = [v24 subscriptionAdamID];
        swift_unknownObjectRelease(v24);
        goto LABEL_6;
      }
    }
  }

  id v22 = 0LL;
  int v25 = 1;
LABEL_8:
  if ([(id)objc_opt_self(TVMusicApplication) usingMusicUI])
  {
    if (qword_1002B7218 != -1) {
      swift_once(&qword_1002B7218, sub_100188700);
    }
    uint64_t v26 = (void *)qword_1002C5EE0;
    if ((a2 & 1) != 0)
    {
      if (!v53) {
        return;
      }
      uint64_t v53 = v53;
      if ([a1 isLibraryAdded])
      {
        uint64_t v27 = type metadata accessor for TaskPriority(0LL);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56LL))(v18, 1LL, 1LL, v27);
        type metadata accessor for MainActor(0LL);
        unint64_t v28 = v53;
        id v29 = v26;
        uint64_t v30 = static MainActor.shared.getter(v29);
        uint64_t v31 = (void *)swift_allocObject(&unk_100275A90, 48LL, 7LL);
        v31[2] = v30;
        v31[3] = &protocol witness table for MainActor;
        v31[4] = v28;
        v31[5] = v29;
        uint64_t v32 = sub_100125950((uint64_t)v18, (uint64_t)&unk_1002BCAE8, (uint64_t)v31);
        swift_release(v32);

        return;
      }
    }

    else
    {
      if (v53) {
        char v44 = v25;
      }
      else {
        char v44 = 1;
      }
      if ((v44 & 1) != 0 || !v22)
      {
        sub_100187FBC(a1);
        goto LABEL_30;
      }

      uint64_t v53 = v53;
      sub_100187F9C(v53);
    }

LABEL_30:
    return;
  }

  if (!v53) {
    return;
  }
  if (((v25 | a2) & 1) != 0 || !v22)
  {
    uint64_t v45 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56LL))(v18, 1LL, 1LL, v45);
    type metadata accessor for MainActor(0LL);
    uint64_t v46 = v53;
    uint64_t v47 = static MainActor.shared.getter(v46);
    id v48 = (void *)swift_allocObject(&unk_100275A68, 40LL, 7LL);
    void v48[2] = v47;
    v48[3] = &protocol witness table for MainActor;
    v48[4] = v46;
    uint64_t v49 = sub_100125950((uint64_t)v18, (uint64_t)&unk_1002BCAD8, (uint64_t)v48);
    swift_release(v49);
  }

  else
  {
    id v33 = objc_allocWithZone(&OBJC_CLASS___NSNumber);
    uint64_t v34 = v53;
    id v35 = [v33 initWithLongLong:v22];
    id v36 = sub_100092C74(v35, 0LL);

    if (v36)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v36);

      uint64_t v37 = v52;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      v38(v7, v12, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v7, 0LL, 1LL, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v7, 1LL, v8) != 1)
      {
        uint64_t v39 = v51;
        v38(v51, v7, v8);
        id v40 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
        URL._bridgeToObjectiveC()(v41);
        uint64_t v43 = v42;
        [v40 openJavascriptAppWithURL:v42];

        swift_unknownObjectRelease(v40);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v8);
        return;
      }
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v7, 1LL, 1LL, v8);
    }

    sub_1000E03B4((uint64_t)v7, &qword_1002B7890);
  }

void sub_10017138C()
{
  uint64_t v1 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for URL(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v16 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v31, v14, KeyPath, v16);
  swift_release(KeyPath);
  *(void *)&double v17 = swift_release(v16).n128_u64[0];
  id v18 = v31;
  if (v31)
  {
    id v19 = objc_msgSend(v31, "artist", v17);

    if (v19)
    {
      id v20 = [v19 identifiers];
      id v21 = [v20 universalStore];

      if (!v21)
      {
LABEL_8:

        return;
      }

      id v22 = [v21 adamID];
      swift_unknownObjectRelease(v21);
      if ([(id)objc_opt_self(TVMusicApplication) usingMusicUI])
      {
        if (qword_1002B7218 != -1) {
          swift_once(&qword_1002B7218, sub_100188700);
        }
        sub_100187A84(v19);
        goto LABEL_8;
      }

      id v23 = [objc_allocWithZone(NSNumber) initWithLongLong:v22];
      id v24 = sub_100092E80(v23);

      if (v24)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v24);

        int v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v25(v4, v10, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0LL, 1LL, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1LL, v5) != 1)
        {
          v25(v13, v4, v5);
          id v26 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
          URL._bridgeToObjectiveC()(v27);
          id v29 = v28;
          [v26 openJavascriptAppWithURL:v28];

          swift_unknownObjectRelease(v26);
          (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
          return;
        }
      }

      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1LL, 1LL, v5);
      }

      sub_1000E03B4((uint64_t)v4, &qword_1002B7890);
    }
  }

uint64_t sub_1001716B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v3 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v10, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  uint64_t v4 = v10;
  if (!v10) {
    return 0LL;
  }
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v6 = swift_getKeyPath(&unk_1001EE190);
  uint64_t v10 = v5;
  uint64_t v7 = sub_1000DF308( (unint64_t *)&qword_1002B83A8,  type metadata accessor for NowPlayingFavoriteStateController,  (uint64_t)&unk_1001EB6BC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, v6, v7);
  swift_release(v6);
  LOBYTE(v6) = *(_BYTE *)(v5 + OBJC_IVAR___TVMNowPlayingFavoriteStateController__isDisliked);
  uint64_t v8 = type metadata accessor for NowPlayingMenu.SuggestLessButton.ViewModel();
  uint64_t result = swift_allocObject(v8, 25LL, 7LL);
  *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(_BYTE *)(result + 24) = v6;
  return result;
}

void sub_1001717B0(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (v3)
  {
    id v4 = [v3 identifiers];
    id v5 = [v4 contentItemID];

    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      uint64_t v8 = v7;
    }

    else
    {
      uint64_t v6 = 0LL;
      uint64_t v8 = 0LL;
    }

    *a2 = v6;
    a2[1] = v8;
  }

  else
  {
    *a2 = 0LL;
    a2[1] = 0LL;
  }

double sub_100171840(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v5 = Strong;
    sub_10016F704(2);
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

void sub_100171898(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    uint64_t v4 = Strong;
    Notification.object.getter(v13);
    if (v13[3])
    {
      uint64_t v5 = sub_1000E0418(0LL, &qword_1002BCB40, &OBJC_CLASS___MPModelLibraryTransientStateController_ptr);
      if ((swift_dynamicCast(&v12, v13, (char *)&type metadata for Any + 8, v5, 6LL) & 1) != 0)
      {
        uint64_t v6 = v12;
        int v7 = sub_100171A74(v12);
        uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFF8);
        v13[0] = v4;
        uint64_t v9 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
        ObservationRegistrar.access<A, B>(_:keyPath:)(v13, KeyPath, v9);
        swift_release(KeyPath);
        if (v7 == *(unsigned __int8 *)(v4 + 40))
        {
          swift_release(v4);
        }

        else
        {
          uint64_t v10 = swift_getKeyPath(&unk_1001EDFF8);
          __chkstk_darwin(v10, v11);
          v13[0] = v4;
          ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v13, v10, sub_10018229C);
          swift_release(v4);

          swift_release(v10);
        }
      }

      else
      {
        swift_release(v4);
      }
    }

    else
    {
      swift_release(v4);
      sub_1000E03B4((uint64_t)v13, &qword_1002B7850);
    }
  }

BOOL sub_100171A74(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v5 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v13, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  uint64_t v6 = v13;
  if (!v13) {
    return 0LL;
  }
  id v7 = [a1 transientAddStateForModelObject:v13];
  if (v7)
  {
    id v8 = v7;

    return v8 == (id)1;
  }

  else
  {
    uint64_t v10 = swift_getKeyPath(&unk_1001EE068);
    uint64_t v11 = swift_getKeyPath(&unk_1001EE090);
    static Published.subscript.getter(&v12, v3, v10, v11);

    swift_release(v10);
    swift_release(v11);
    if ((v12 & 0xFE) == 2) {
      return 0LL;
    }
    else {
      return v12 & 1;
    }
  }

uint64_t sub_100171B80()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC7TVMusic30DefaultNowPlayingMenuViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(v1, v2);
  return swift_deallocClassInstance( v0,  *(unsigned int *)(*(void *)v0 + 48LL),  *(unsigned __int16 *)(*(void *)v0 + 52LL));
}

uint64_t sub_100171BE8()
{
  return type metadata accessor for DefaultNowPlayingMenuViewModel(0LL);
}

uint64_t type metadata accessor for DefaultNowPlayingMenuViewModel(uint64_t a1)
{
  uint64_t result = qword_1002BC958;
  if (!qword_1002BC958) {
    return swift_getSingletonMetadata(a1, &nominal type descriptor for DefaultNowPlayingMenuViewModel);
  }
  return result;
}

uint64_t sub_100171C2C(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  void v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  void v4[3] = &unk_1001EDF40;
  uint64_t result = type metadata accessor for ObservationRegistrar(319LL);
  if (v3 <= 0x3F)
  {
    v4[4] = *(void *)(result - 8) + 64LL;
    uint64_t result = swift_updateClassMetadata2(a1, 256LL, 5LL, v4, a1 + 80);
    if (!result) {
      return 0LL;
    }
  }

  return result;
}

uint64_t sub_100171CCC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v272 = a3;
  int v4 = a2 & 1;
  uint64_t v268 = sub_1000DFE10(&qword_1002BCC20);
  uint64_t v267 = *(void *)(v268 - 8);
  __chkstk_darwin(v268, v5);
  v261 = (char *)&v254 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BCC28);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v275 = (uint64_t)&v254 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v9, v11);
  v274 = (char *)&v254 - v12;
  uint64_t v13 = sub_1000DFE10(&qword_1002BCC30);
  uint64_t v278 = *(void *)(v13 - 8);
  uint64_t v279 = v13;
  __chkstk_darwin(v13, v14);
  v277 = (char *)&v254 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v283 = sub_1000DFE10(&qword_1002BCC38);
  uint64_t v270 = *(void *)(v283 - 8);
  __chkstk_darwin(v283, v16);
  v276 = (char *)&v254 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000DFE10(&qword_1002BCC40);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v273 = (uint64_t)&v254 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v288 = (uint64_t)&v254 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v287 = (uint64_t)&v254 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v284 = (uint64_t)&v254 - v30;
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v290 = (uint64_t)&v254 - v33;
  __chkstk_darwin(v32, v34);
  uint64_t v294 = (uint64_t)&v254 - v35;
  uint64_t v36 = sub_1000DFE10(&qword_1002BCC48);
  uint64_t v38 = __chkstk_darwin(v36, v37);
  uint64_t v271 = (uint64_t)&v254 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v286 = (uint64_t)&v254 - v42;
  uint64_t v44 = __chkstk_darwin(v41, v43);
  uint64_t v292 = (uint64_t)&v254 - v45;
  __chkstk_darwin(v44, v46);
  uint64_t v293 = (uint64_t)&v254 - v47;
  uint64_t v257 = sub_1000DFE10(&qword_1002BCC50);
  uint64_t v256 = *(void *)(v257 - 8);
  __chkstk_darwin(v257, v48);
  v255 = (char *)&v254 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v266 = sub_1000DFE10(&qword_1002BCC58);
  uint64_t v265 = *(void *)(v266 - 8);
  __chkstk_darwin(v266, v50);
  v254 = (char *)&v254 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v52 = sub_1000DFE10(&qword_1002BCC60);
  uint64_t v54 = __chkstk_darwin(v52, v53);
  uint64_t v285 = (uint64_t)&v254 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v54, v56);
  uint64_t v295 = (uint64_t)&v254 - v57;
  uint64_t v259 = sub_1000DFE10(&qword_1002BCC68);
  __chkstk_darwin(v259, v58);
  uint64_t v260 = (uint64_t)&v254 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v60 = sub_1000DFE10(&qword_1002BCC70);
  uint64_t v280 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v61);
  uint64_t v63 = (char *)&v254 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v281 = sub_1000DFE10(&qword_1002BCC78);
  v269 = *(void **)(v281 - 8);
  uint64_t v65 = __chkstk_darwin(v281, v64);
  v258 = (char *)&v254 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v65, v67);
  os_log_type_t v69 = (char *)&v254 - v68;
  uint64_t v70 = sub_1000DFE10(&qword_1002BCC80);
  uint64_t v72 = __chkstk_darwin(v70, v71);
  id v74 = (char *)&v254 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v72, v75);
  objc_super v77 = (char *)&v254 - v76;
  uint64_t v78 = swift_retain(a1);
  int v79 = v4;
  uint64_t v80 = (unsigned __int8 *)sub_1000E35C0(v78, v4);
  swift_release(a1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EDFF8);
  v296 = v80;
  uint64_t v282 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v296, KeyPath, v282);
  swift_release(KeyPath);
  int v82 = v80[40];
  swift_release(v80);
  v291 = v77;
  v263 = v63;
  v262 = v69;
  v289 = v74;
  uint64_t v264 = v60;
  if (v82 != 1)
  {
    uint64_t v95 = v280;
    uint64_t v94 = v281;
    uint64_t v96 = swift_retain(a1);
    uint64_t v97 = sub_1000E35C0(v96, v79);
    swift_release(a1);
    uint64_t v98 = *(void *)(v97 + 16);
    uint64_t v99 = swift_getKeyPath(&unk_1001EE020);
    uint64_t v100 = swift_getKeyPath(&unk_1001EE048);
    static Published.subscript.getter(&v296, v98, v99, v100);
    swift_release(v99);
    swift_release(v100);
    uint64_t v101 = v296;
    if (v296)
    {
      BOOL v102 = sub_1001968B4(v296);
      swift_release(v97);

      uint64_t v103 = (uint64_t)v291;
      if (v102)
      {
        int v83 = v79;
        uint64_t v104 = swift_allocObject(&unk_1002769A8, 25LL, 7LL);
        *(void *)(v104 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
        *(_BYTE *)(v104 + 24) = v79 != 0;
        swift_retain(a1);
        uint64_t v105 = sub_1000DFE10(&qword_1002BCCA8);
        uint64_t v106 = sub_1000E0374( &qword_1002BCCB0,  &qword_1002BCCA8,  (uint64_t)&protocol conformance descriptor for Label<A, B>);
        uint64_t v107 = v263;
        Button.init(action:label:)(sub_100185608, v104, sub_1001736B4, 0LL, v105, v106);
        uint64_t v108 = sub_1000E0374( &qword_1002BCCB8,  &qword_1002BCC70,  (uint64_t)&protocol conformance descriptor for Button<A>);
        uint64_t v109 = (uint64_t)v258;
        uint64_t v110 = v264;
        View.accessibilityIdentifier(_:)(0xD000000000000022LL, 0x8000000100228E80LL, v264, v108);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v107, v110);
        uint64_t v111 = (uint64_t)v262;
        sub_1000E011C(v109, (uint64_t)v262, &qword_1002BCC78);
        uint64_t v112 = v260;
        sub_1000E04D4(v111, v260, &qword_1002BCC78);
        swift_storeEnumTagMultiPayload(v112, v259, 1LL);
        unint64_t v113 = sub_10018562C();
        uint64_t v114 = (uint64_t)v289;
        _ConditionalContent<>.init(storage:)(v112, v94, v94, v113, v113);
        sub_1000E03B4(v111, &qword_1002BCC78);
        uint64_t v115 = sub_1000DFE10(&qword_1002BCC88);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56LL))(v114, 0LL, 1LL, v115);
        sub_1000E011C(v114, v103, &qword_1002BCC80);
        goto LABEL_8;
      }
    }

    else
    {
      swift_release(v97);
      uint64_t v103 = (uint64_t)v291;
    }

    uint64_t v116 = sub_1000DFE10(&qword_1002BCC88);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56LL))(v103, 1LL, 1LL, v116);
    int v83 = v79;
    goto LABEL_8;
  }

  int v83 = v79;
  uint64_t v84 = swift_allocObject(&unk_1002769D0, 25LL, 7LL);
  *(void *)(v84 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
  *(_BYTE *)(v84 + 24) = v79 != 0;
  swift_retain(a1);
  uint64_t v85 = sub_1000DFE10(&qword_1002BCCA8);
  uint64_t v86 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(action:label:)(sub_1001856C8, v84, sub_100173688, 0LL, v85, v86);
  uint64_t v87 = sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
  uint64_t v88 = (uint64_t)v258;
  View.accessibilityIdentifier(_:)(0xD00000000000002BLL, 0x8000000100228EB0LL, v60, v87);
  (*(void (**)(char *, uint64_t))(v280 + 8))(v63, v60);
  sub_1000E011C(v88, (uint64_t)v69, &qword_1002BCC78);
  uint64_t v89 = v260;
  sub_1000E04D4((uint64_t)v69, v260, &qword_1002BCC78);
  swift_storeEnumTagMultiPayload(v89, v259, 0LL);
  unint64_t v90 = sub_10018562C();
  uint64_t v91 = v89;
  uint64_t v92 = v281;
  _ConditionalContent<>.init(storage:)(v91, v281, v281, v90, v90);
  sub_1000E03B4((uint64_t)v69, &qword_1002BCC78);
  uint64_t v93 = sub_1000DFE10(&qword_1002BCC88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56LL))(v74, 0LL, 1LL, v93);
  sub_1000E011C((uint64_t)v74, (uint64_t)v291, &qword_1002BCC80);
  uint64_t v94 = v92;
LABEL_8:
  uint64_t v117 = swift_retain(a1);
  uint64_t v118 = sub_1000E35C0(v117, v83);
  swift_release(a1);
  unsigned __int8 v119 = sub_10016FF60();
  swift_release(v118);
  if ((v119 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v120 = swift_retain(a1);
  uint64_t v121 = sub_1000E35C0(v120, v83);
  swift_release(a1);
  uint64_t v122 = *(void *)(v121 + 16);
  uint64_t v123 = swift_getKeyPath(&unk_1001EE020);
  uint64_t v124 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v296, v122, v123, v124);
  swift_release(v123);
  swift_release(v124);
  uint64_t v125 = (char *)v296;
  swift_release(v121);
  if (v125)
  {
    __chkstk_darwin(v126, v127);
    *(&v254 - sub_1000E053C(v0 + 2) = v125;
    *((_BYTE *)&v254 - 8) = 0;
    uint64_t v128 = sub_1000DFE10(&qword_1002BCCA8);
    uint64_t v129 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    unint64_t v130 = sub_1001855C4();
    __int128 v131 = v255;
    Menu.init(content:label:)( sub_1001855B8,  &v254 - 4,  sub_100173774,  0LL,  v128,  &type metadata for AddToPlaylistView,  v129,  v130);
    uint64_t v132 = sub_1000E0374(&qword_1002BCCE0, &qword_1002BCC50, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    uint64_t v133 = (uint64_t)v254;
    uint64_t v134 = v257;
    View.accessibilityIdentifier(_:)(0xD000000000000028LL, 0x8000000100228E50LL, v257, v132);

    (*(void (**)(char *, uint64_t))(v256 + 8))(v131, v134);
    sub_1000E011C(v133, v295, &qword_1002BCC58);
    uint64_t v135 = 0LL;
  }

  else
  {
LABEL_11:
    uint64_t v135 = 1LL;
  }

  unint64_t v136 = v269;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v265 + 56))(v295, v135, 1LL, v266);
  uint64_t v137 = swift_retain(a1);
  uint64_t v138 = sub_1000E35C0(v137, v83);
  swift_release(a1);
  uint64_t v139 = *(void *)(v138 + 16);
  uint64_t v140 = swift_getKeyPath(&unk_1001EE020);
  uint64_t v141 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v296, v139, v140, v141);
  swift_release(v140);
  swift_release(v141);
  double v142 = v296;
  if (v296)
  {
    char v143 = sub_10017DA00();
    swift_release(v138);

    uint64_t v144 = v283;
    if ((v143 & 1) != 0)
    {
      uint64_t v145 = swift_allocObject(&unk_100276980, 25LL, 7LL);
      *(void *)(v145 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
      *(_BYTE *)(v145 + 24) = v83 != 0;
      swift_retain(a1);
      uint64_t v146 = sub_1000DFE10(&qword_1002BCCA8);
      uint64_t v147 = sub_1000E0374( &qword_1002BCCB0,  &qword_1002BCCA8,  (uint64_t)&protocol conformance descriptor for Label<A, B>);
      uint64_t v148 = v263;
      Button.init(action:label:)(sub_1001855AC, v145, sub_100173888, 0LL, v146, v147);
      uint64_t v149 = sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
      uint64_t v150 = (uint64_t)v262;
      uint64_t v151 = v264;
      View.accessibilityIdentifier(_:)(0xD000000000000028LL, 0x8000000100228E20LL, v264, v149);
      (*(void (**)(char *, uint64_t))(v280 + 8))(v148, v151);
      uint64_t v152 = v293;
      sub_1000E011C(v150, v293, &qword_1002BCC78);
      id v153 = (void *)v136[7];
      uint64_t v154 = v152;
      uint64_t v155 = 0LL;
      goto LABEL_17;
    }
  }

  else
  {
    swift_release(v138);
    uint64_t v144 = v283;
  }

  id v153 = (void *)v136[7];
  uint64_t v154 = v293;
  uint64_t v155 = 1LL;
LABEL_17:
  v269 = v153;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v153)(v154, v155, 1LL, v94);
  uint64_t v156 = swift_retain(a1);
  uint64_t v157 = sub_1000E35C0(v156, v83);
  swift_release(a1);
  sub_100170020();
  if (v158)
  {
    uint64_t v159 = v158;
    id v160 = [v158 type];
    swift_release(v157);

    if (v160 == (id)4)
    {
      uint64_t v161 = swift_allocObject(&unk_100276958, 25LL, 7LL);
      *(void *)(v161 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
      *(_BYTE *)(v161 + 24) = v83 != 0;
      swift_retain(a1);
      uint64_t v162 = sub_1000DFE10(&qword_1002BCCC0);
      uint64_t v163 = sub_1000E0374( &qword_1002BCCC8,  &qword_1002BCCC0,  (uint64_t)&protocol conformance descriptor for TupleView<A>);
      __n128 v164 = v277;
      Button.init(action:label:)(sub_1001855A0, v161, sub_100173998, 0LL, v162, v163);
      uint64_t v165 = sub_1000E0374(&qword_1002BCCD0, &qword_1002BCC30, (uint64_t)&protocol conformance descriptor for Button<A>);
      uint64_t v166 = (uint64_t)v276;
      uint64_t v167 = v279;
      View.accessibilityIdentifier(_:)(0xD000000000000026LL, 0x8000000100228DF0LL, v279, v165);
      (*(void (**)(char *, uint64_t))(v278 + 8))(v164, v167);
      uint64_t v168 = v294;
      sub_1000E011C(v166, v294, &qword_1002BCC38);
      __int128 v169 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v270 + 56);
      v169(v168, 0LL, 1LL, v144);
      goto LABEL_22;
    }
  }

  else
  {
    swift_release(v157);
  }

  __int128 v169 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v270 + 56);
  v169(v294, 1LL, 1LL, v144);
LABEL_22:
  uint64_t v170 = swift_retain(a1);
  uint64_t v171 = sub_1000E35C0(v170, v83);
  swift_release(a1);
  uint64_t v172 = swift_getKeyPath(&unk_1001EDFF8);
  v296 = (void *)v171;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v296, v172, v282);
  swift_release(v172);
  char v173 = *(_BYTE *)(v171 + 40);
  uint64_t v174 = *(void *)(v171 + 16);
  uint64_t v175 = swift_getKeyPath(&unk_1001EE020);
  uint64_t v176 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v296, v174, v175, v176);
  swift_release(v175);
  swift_release(v176);
  double v177 = v296;
  int v178 = v83;
  if (v296)
  {
    char v179 = sub_100174380(v296, v173);
    swift_release(v171);

    uint64_t v180 = v284;
    if ((v179 & 1) != 0)
    {
      uint64_t v181 = swift_allocObject(&unk_100276930, 25LL, 7LL);
      *(void *)(v181 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
      *(_BYTE *)(v181 + 24) = v83 != 0;
      swift_retain(a1);
      uint64_t v182 = sub_1000DFE10(&qword_1002BCCC0);
      uint64_t v183 = sub_1000E0374( &qword_1002BCCC8,  &qword_1002BCCC0,  (uint64_t)&protocol conformance descriptor for TupleView<A>);
      double v184 = v277;
      Button.init(action:label:)(sub_100185594, v181, sub_100173B3C, 0LL, v182, v183);
      uint64_t v185 = sub_1000E0374(&qword_1002BCCD0, &qword_1002BCC30, (uint64_t)&protocol conformance descriptor for Button<A>);
      uint64_t v186 = (uint64_t)v276;
      uint64_t v187 = v279;
      View.accessibilityIdentifier(_:)(0xD000000000000023LL, 0x8000000100228DC0LL, v279, v185);
      (*(void (**)(char *, uint64_t))(v278 + 8))(v184, v187);
      uint64_t v188 = v290;
      sub_1000E011C(v186, v290, &qword_1002BCC38);
      uint64_t v189 = 0LL;
      goto LABEL_28;
    }

    uint64_t v189 = 1LL;
  }

  else
  {
    swift_release(v171);
    uint64_t v189 = 1LL;
    uint64_t v180 = v284;
  }

  uint64_t v188 = v290;
LABEL_28:
  uint64_t v190 = v283;
  uint64_t v191 = 1LL;
  v169(v188, v189, 1LL, v283);
  uint64_t v192 = swift_retain(a1);
  uint64_t v193 = sub_1000E35C0(v192, v178);
  swift_release(a1);
  char v194 = sub_100170138();
  __n128 v195 = swift_release(v193);
  if ((v194 & 1) != 0)
  {
    uint64_t v196 = swift_allocObject(&unk_100276908, 25LL, 7LL);
    *(void *)(v196 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
    *(_BYTE *)(v196 + 24) = v178 != 0;
    swift_retain(a1);
    uint64_t v197 = sub_1000DFE10(&qword_1002BCCC0);
    uint64_t v198 = sub_1000E0374(&qword_1002BCCC8, &qword_1002BCCC0, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    double v199 = v277;
    Button.init(action:label:)(sub_100185570, v196, sub_100173C6C, 0LL, v197, v198);
    uint64_t v200 = sub_1000E0374(&qword_1002BCCD0, &qword_1002BCC30, (uint64_t)&protocol conformance descriptor for Button<A>);
    uint64_t v201 = (uint64_t)v276;
    uint64_t v202 = v279;
    View.accessibilityIdentifier(_:)(0xD000000000000024LL, 0x8000000100228D90LL, v279, v200);
    (*(void (**)(char *, uint64_t))(v278 + 8))(v199, v202);
    sub_1000E011C(v201, v180, &qword_1002BCC38);
    uint64_t v191 = 0LL;
  }

  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v169)(v180, v191, 1LL, v190, v195);
  uint64_t v203 = swift_retain(a1);
  uint64_t v204 = sub_1000E35C0(v203, v178);
  swift_release(a1);
  uint64_t v205 = *(void *)(v204 + 16);
  uint64_t v206 = swift_getKeyPath(&unk_1001EE020);
  uint64_t v207 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v296, v205, v206, v207);
  swift_release(v206);
  swift_release(v207);
  id v208 = v296;
  if (v296)
  {
    unsigned __int8 v209 = [(id)objc_opt_self(TVMusicRadioUtilities) canPlayFromMPSong:v296];
    swift_release(v204);

    uint64_t v210 = (uint64_t)v274;
    uint64_t v211 = v292;
    if ((v209 & 1) != 0)
    {
      uint64_t v212 = swift_allocObject(&unk_1002768E0, 25LL, 7LL);
      *(void *)(v212 + swift_unknownObjectWeakDestroy(v0 + 16) = a1;
      *(_BYTE *)(v212 + 24) = v178 != 0;
      swift_retain(a1);
      uint64_t v213 = sub_1000DFE10(&qword_1002BCCA8);
      uint64_t v214 = sub_1000E0374( &qword_1002BCCB0,  &qword_1002BCCA8,  (uint64_t)&protocol conformance descriptor for Label<A, B>);
      id v215 = v263;
      Button.init(action:label:)(sub_100185564, v212, sub_100173E14, 0LL, v213, v214);
      uint64_t v216 = sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
      uint64_t v217 = (uint64_t)v262;
      uint64_t v218 = v264;
      View.accessibilityIdentifier(_:)(0xD000000000000027LL, 0x8000000100228D60LL, v264, v216);
      (*(void (**)(char *, uint64_t))(v280 + 8))(v215, v218);
      sub_1000E011C(v217, v211, &qword_1002BCC78);
      uint64_t v219 = 0LL;
    }

    else
    {
      uint64_t v219 = 1LL;
    }
  }

  else
  {
    swift_release(v204);
    uint64_t v219 = 1LL;
    uint64_t v210 = (uint64_t)v274;
    uint64_t v211 = v292;
  }

  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v269)(v211, v219, 1LL, v281);
  uint64_t v220 = swift_retain(a1);
  uint64_t v221 = (_BYTE *)sub_1000E35C0(v220, v178);
  swift_release(a1);
  uint64_t v222 = swift_getKeyPath(&unk_1001EDFF8);
  v296 = v221;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v296, v222, v282);
  swift_release(v222);
  if ((v221[40] & 1) != 0)
  {
    swift_release(v221);
  }

  else
  {
    id v223 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
    unsigned __int8 v224 = [v223 allowsFullCatalogPlayback];
    swift_release(v221);

    if ((v224 & 1) == 0)
    {
      uint64_t v241 = 1LL;
      uint64_t v242 = v268;
      uint64_t v243 = v267;
      uint64_t v240 = (uint64_t)v289;
      goto LABEL_44;
    }
  }

  uint64_t v225 = v180;
  uint64_t v226 = v210;
  uint64_t v227 = swift_retain(a1);
  uint64_t v228 = sub_1000E35C0(v227, v178);
  swift_release(a1);
  uint64_t v229 = *(unsigned __int8 **)(v228 + 24);
  uint64_t v230 = swift_getKeyPath(&unk_1001EE168);
  v296 = v229;
  uint64_t v231 = sub_1000DF308( (unint64_t *)&qword_1002B83A8,  type metadata accessor for NowPlayingFavoriteStateController,  (uint64_t)&unk_1001EB6BC);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v296, v230, v231);
  swift_release(v230);
  int v232 = v229[OBJC_IVAR___TVMNowPlayingFavoriteStateController__dislikeState];
  swift_release(v228);
  if (v232 == 2
    || (uint64_t v233 = swift_retain(a1),
        uint64_t v234 = sub_1000E35C0(v233, v178),
        swift_release(a1),
        char v235 = (void *)sub_1001716B4(),
        swift_release(v234),
        !v235))
  {
    uint64_t v239 = sub_1000DFE10(&qword_1002BCC98);
    uint64_t v237 = (uint64_t)v261;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v239 - 8) + 56LL))(v261, 1LL, 1LL, v239);
  }

  else
  {
    v296 = v235;
    unint64_t v236 = sub_1001854FC();
    swift_retain(v235);
    uint64_t v237 = (uint64_t)v261;
    View.accessibilityIdentifier(_:)( 0xD000000000000025LL,  0x8000000100228D30LL,  &type metadata for NowPlayingMenu.SuggestLessButton,  v236);
    swift_release_n(v235, 2LL);
    uint64_t v238 = sub_1000DFE10(&qword_1002BCC98);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v238 - 8) + 56LL))(v237, 0LL, 1LL, v238);
  }

  uint64_t v240 = (uint64_t)v289;
  uint64_t v210 = v226;
  sub_1000E011C(v237, v226, &qword_1002BCC20);
  uint64_t v241 = 0LL;
  uint64_t v242 = v268;
  uint64_t v243 = v267;
  uint64_t v180 = v225;
  uint64_t v188 = v290;
LABEL_44:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v243 + 56))(v210, v241, 1LL, v242);
  sub_1000E04D4((uint64_t)v291, v240, &qword_1002BCC80);
  uint64_t v244 = v285;
  sub_1000E04D4(v295, v285, &qword_1002BCC60);
  uint64_t v245 = v286;
  sub_1000E04D4(v293, v286, &qword_1002BCC48);
  sub_1000E04D4(v294, v287, &qword_1002BCC40);
  uint64_t v246 = v288;
  sub_1000E04D4(v188, v288, &qword_1002BCC40);
  uint64_t v247 = v273;
  sub_1000E04D4(v180, v273, &qword_1002BCC40);
  uint64_t v248 = v271;
  sub_1000E04D4(v292, v271, &qword_1002BCC48);
  uint64_t v249 = v275;
  sub_1000E04D4(v210, v275, &qword_1002BCC28);
  uint64_t v250 = v272;
  sub_1000E04D4(v240, v272, &qword_1002BCC80);
  v251 = (int *)sub_1000DFE10(&qword_1002BCC90);
  sub_1000E04D4(v244, v250 + v251[12], &qword_1002BCC60);
  sub_1000E04D4(v245, v250 + v251[16], &qword_1002BCC48);
  uint64_t v252 = v287;
  sub_1000E04D4(v287, v250 + v251[20], &qword_1002BCC40);
  sub_1000E04D4(v246, v250 + v251[24], &qword_1002BCC40);
  sub_1000E04D4(v247, v250 + v251[28], &qword_1002BCC40);
  sub_1000E04D4(v248, v250 + v251[32], &qword_1002BCC48);
  sub_1000E04D4(v249, v250 + v251[36], &qword_1002BCC28);
  sub_1000E03B4(v210, &qword_1002BCC28);
  sub_1000E03B4(v292, &qword_1002BCC48);
  sub_1000E03B4(v284, &qword_1002BCC40);
  sub_1000E03B4(v290, &qword_1002BCC40);
  sub_1000E03B4(v294, &qword_1002BCC40);
  sub_1000E03B4(v293, &qword_1002BCC48);
  sub_1000E03B4(v295, &qword_1002BCC60);
  sub_1000E03B4((uint64_t)v291, &qword_1002BCC80);
  sub_1000E03B4(v249, &qword_1002BCC28);
  sub_1000E03B4(v248, &qword_1002BCC48);
  sub_1000E03B4(v247, &qword_1002BCC40);
  sub_1000E03B4(v288, &qword_1002BCC40);
  sub_1000E03B4(v252, &qword_1002BCC40);
  sub_1000E03B4(v286, &qword_1002BCC48);
  sub_1000E03B4(v285, &qword_1002BCC60);
  return sub_1000E03B4((uint64_t)v289, &qword_1002BCC80);
}

uint64_t sub_100173688()
{
  return sub_100178640();
}

uint64_t sub_1001736B4()
{
  return sub_100178640();
}

__n128 sub_1001736E4@<Q0>(void *a1@<X0>, unsigned __int8 a2@<W1>, __n128 *a3@<X8>)
{
  uint64_t v10 = 0LL;
  id v6 = a1;
  uint64_t v7 = sub_1000DFE10(&qword_1002BCD00);
  State.init(wrappedValue:)(&v11, &v10, v7);
  __n128 v8 = v11;
  uint64_t v10 = 0LL;
  State.init(wrappedValue:)(&v11, &v10, v7);
  __n128 result = v11;
  a3->n128_u64[0] = (unint64_t)a1;
  a3->n128_u8[8] = a2;
  a3[1] = v8;
  a3[2] = result;
  return result;
}

uint64_t sub_100173774()
{
  return sub_100178640();
}

double sub_1001737B0(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = swift_retain(a1);
  uint64_t v5 = sub_1000E35C0(v4, v3);
  swift_release(a1);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v8 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v13, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  uint64_t v9 = v13;
  if (v13)
  {
    uint64_t v10 = *(void **)(v6 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingSongContainer);
    id v11 = v10;
    sub_100170818(v9, v10);
    swift_release(v5);
  }

  else
  {
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

uint64_t sub_100173888()
{
  return sub_100178640();
}

void sub_1001738C0(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = swift_retain(a1);
  uint64_t v5 = sub_1000E35C0(v4, v3);
  swift_release(a1);
  sub_100170020();
  if (v6 && (uint64_t v7 = v6, v8 = [v6 type], v7, v8 == (id)4) && (sub_100170020(), v9))
  {
    id v13 = v9;
    id v10 = [v9 playlist];
    if (v10)
    {
      id v12 = v10;
      sub_1001709F4(v10);
      swift_release(v5);

      id v11 = v12;
    }

    else
    {
      swift_release(v5);
      id v11 = v13;
    }
  }

  else
  {
    swift_release(v5);
  }

double sub_100173998@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = LocalizedStringKey.init(stringLiteral:)(0x6C50206F74206F47LL, 0xEE007473696C7961LL);
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = Image.init(systemName:)(0x6F6E2E636973756DLL, 0xEF7473696C2E6574LL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v10;
  sub_1000EC004(v3, v5, v9);
  swift_bridgeObjectRetain(v7);
  sub_1000EC044(v3, v5, v9);
  *(void *)&double result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

double sub_100173A80(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = swift_retain(a1);
  uint64_t v5 = sub_1000E35C0(v4, v3);
  swift_release(a1);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v8 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v11, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  char v9 = v11;
  if (v11)
  {
    sub_100170E44(v11, 0);
    swift_release(v5);
  }

  else
  {
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

double sub_100173B3C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = LocalizedStringKey.init(stringLiteral:)(0x6C41206F74206F47LL, 0xEB000000006D7562LL);
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = Image.init(_internalSystemName:)(0x71732E636973756DLL, 0xEC00000065726175LL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v10;
  sub_1000EC004(v3, v5, v9);
  swift_bridgeObjectRetain(v7);
  sub_1000EC044(v3, v5, v9);
  *(void *)&double result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

double sub_100173C1C(uint64_t a1, char a2, void (*a3)(__n128))
{
  char v5 = a2 & 1;
  uint64_t v6 = swift_retain(a1);
  uint64_t v7 = sub_1000E35C0(v6, v5);
  __n128 v8 = swift_release(a1);
  a3(v8);
  *(void *)&double result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_100173C6C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = LocalizedStringKey.init(stringLiteral:)(0x7241206F74206F47LL, 0xEC00000074736974LL);
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = Image.init(systemName:)(0x696D2E636973756DLL, 0xE900000000000063LL);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = v9;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v10;
  sub_1000EC004(v3, v5, v9);
  swift_bridgeObjectRetain(v7);
  sub_1000EC044(v3, v5, v9);
  *(void *)&double result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

double sub_100173D48(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v4 = swift_retain(a1);
  uint64_t v5 = sub_1000E35C0(v4, v3);
  swift_release(a1);
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE020);
  uint64_t v8 = swift_getKeyPath(&unk_1001EE048);
  static Published.subscript.getter(&v11, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  char v9 = v11;
  if (v11)
  {
    [(id)objc_opt_self(TVMusicRadioUtilities) playFromMPSong:v11];
    swift_release(v5);
  }

  else
  {
    *(void *)&double result = swift_release(v5).n128_u64[0];
  }

  return result;
}

uint64_t sub_100173E14()
{
  return sub_100178640();
}

uint64_t sub_100173E50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)v2;
  char v5 = *(_BYTE *)(v2 + 8);
  *(void *)a2 = static HorizontalAlignment.center.getter(a1);
  *(void *)(a2 + 8) = 0LL;
  *(_BYTE *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = 1;
  uint64_t v6 = sub_1000DFE10(&qword_1002BCC18);
  return sub_100171CCC(v4, v5, a2 + *(int *)(v6 + 44));
}

uint64_t sub_100173EAC()
{
  return swift_deallocClassInstance(v0, 25LL, 7LL);
}

uint64_t type metadata accessor for NowPlayingMenu.SuggestLessButton.ViewModel()
{
  return objc_opt_self(&OBJC_CLASS____TtCVV7TVMusic14NowPlayingMenu17SuggestLessButton9ViewModel);
}

uint64_t sub_100173EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BCC68);
  __chkstk_darwin(v4, v5);
  uint64_t v43 = (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BCC80);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BCC70);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002BCC78);
  uint64_t v18 = __chkstk_darwin(v16, v17);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v40 - v22;
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    swift_retain(a1);
    uint64_t v42 = a2;
    uint64_t v24 = sub_1000DFE10(&qword_1002BCCA8);
    uint64_t v41 = v4;
    uint64_t v25 = v24;
    uint64_t v26 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    Button.init(action:label:)(sub_1001857A8, a1, sub_1001742FC, 0LL, v25, v26);
    uint64_t v27 = sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
    View.accessibilityIdentifier(_:)(0xD000000000000029LL, 0x8000000100228F20LL, v11, v27);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_1000E011C((uint64_t)v20, (uint64_t)v23, &qword_1002BCC78);
    uint64_t v28 = v43;
    sub_1000E04D4((uint64_t)v23, v43, &qword_1002BCC78);
    uint64_t v29 = v28;
    uint64_t v30 = v41;
    uint64_t v31 = 0LL;
  }

  else
  {
    if ([*(id *)(a1 + 16) isFavorite])
    {
      uint64_t v32 = sub_1000DFE10(&qword_1002BCC88);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56LL))( a2,  1LL,  1LL,  v32);
    }

    swift_retain(a1);
    uint64_t v42 = a2;
    uint64_t v34 = sub_1000DFE10(&qword_1002BCCA8);
    uint64_t v41 = v4;
    uint64_t v35 = v34;
    uint64_t v36 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    Button.init(action:label:)(sub_1001857A0, a1, sub_100174338, 0LL, v35, v36);
    uint64_t v37 = sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
    View.accessibilityIdentifier(_:)(0xD000000000000025LL, 0x8000000100228D30LL, v11, v37);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_1000E011C((uint64_t)v20, (uint64_t)v23, &qword_1002BCC78);
    uint64_t v28 = v43;
    sub_1000E04D4((uint64_t)v23, v43, &qword_1002BCC78);
    uint64_t v29 = v28;
    uint64_t v30 = v41;
    uint64_t v31 = 1LL;
  }

  swift_storeEnumTagMultiPayload(v29, v30, v31);
  unint64_t v38 = sub_10018562C();
  _ConditionalContent<>.init(storage:)(v28, v16, v16, v38, v38);
  sub_1000E03B4((uint64_t)v23, &qword_1002BCC78);
  uint64_t v39 = sub_1000DFE10(&qword_1002BCC88);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56LL))(v10, 0LL, 1LL, v39);
  return sub_1000E011C((uint64_t)v10, v42, &qword_1002BCC80);
}

uint64_t sub_1001742FC()
{
  return sub_100178640();
}

uint64_t sub_100174338()
{
  return sub_100178640();
}

uint64_t sub_100174378@<X0>(uint64_t a1@<X8>)
{
  return sub_100173EF0(*v1, a1);
}

uint64_t sub_100174380(void *a1, char a2)
{
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___TVMSubscriptionManager);
  id v5 = [v4 sharedInstance];
  unsigned __int8 v6 = [v5 hasMusicSubscription];

  if ((v6 & 1) != 0)
  {
    unsigned __int8 v7 = 1;
  }

  else
  {
    id v8 = [v4 sharedInstance];
    unsigned __int8 v7 = [v8 hasPlaybackRestrictions];
  }

  unsigned int v9 = [(id)objc_opt_self(TVMusicApplication) usingMusicUI];
  id v10 = [a1 album];
  uint64_t v11 = v10;
  if (v9)
  {
    if (v10 && (id v12 = [v10 title], v11, v12))
    {
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      unint64_t v15 = v14;

      swift_bridgeObjectRelease(v15);
      uint64_t v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000LL) == 0) {
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v17 = v16 != 0;
      int v18 = v17;
      if ((v7 & 1) != 0) {
        return [a1 hasVideo] ^ 1 | v18;
      }
    }

    else
    {
      BOOL v17 = 0;
      int v18 = 0;
      if ((v7 & 1) != 0) {
        return [a1 hasVideo] ^ 1 | v18;
      }
    }

    if (a2 == 2)
    {
      if ([(id)objc_opt_self(TVMusicLibraryUtilities) isPendingAddForMPObject:a1])
      {
        if (!v17) {
          return 0LL;
        }
        goto LABEL_38;
      }

      if ([a1 isLibraryAdded] & v17)
      {
LABEL_38:
        int v18 = 1;
        return [a1 hasVideo] ^ 1 | v18;
      }
    }

    else if ((a2 & 1 & v17) != 0)
    {
      goto LABEL_38;
    }

    return 0LL;
  }

  if (!v10) {
    return 0LL;
  }
  id v19 = [v10 title];
  if (!v19)
  {

    return 0LL;
  }

  id v20 = [v11 identifiers];
  id v21 = [v20 universalStore];

  if (v21)
  {
    id v22 = [v21 adamID];
    uint64_t v23 = &selRef_subscriptionAdamID;
    if (v22) {
      uint64_t v23 = &selRef_adamID;
    }
    id v24 = [v21 *v23];
    swift_unknownObjectRelease(v21);
  }

  else
  {
    id v24 = 0LL;
  }

  id v25 = [v11 identifiers];
  id v26 = [v25 library];

  if (v26)
  {
    id v27 = [v26 persistentID];
    swift_unknownObjectRelease(v26);

    if (v24) {
      unsigned __int8 v28 = v7;
    }
    else {
      unsigned __int8 v28 = 0;
    }
    if ((v28 & 1) != 0) {
      return 1LL;
    }
  }

  else
  {

    if (v24) {
      unsigned __int8 v29 = v7;
    }
    else {
      unsigned __int8 v29 = 0;
    }
    if ((v29 & 1) != 0) {
      return 1LL;
    }
    id v27 = 0LL;
  }

  return v27 != 0LL;
}

uint64_t sub_100174690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  void v5[3] = a5;
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  v5[4] = v6;
  void v5[5] = static MainActor.shared.getter(v6);
  return swift_task_switch(sub_1001746E0, 0LL, 0LL);
}

uint64_t sub_1001746E0()
{
  id v1 = [(id)objc_opt_self(MPModelGenericObject) genericObjectWithModelObject:v0[2]];
  v0[6] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_100181DB0((uint64_t)[v1 type]);
    v0[7] = v3;
    if (v3)
    {
      id v4 = v3;
      unsigned int v9 = (uint64_t (*)(void *, id))((char *)&dword_1002BCAF0 + dword_1002BCAF0);
      id v5 = (void *)swift_task_alloc(unk_1002BCAF4);
      v0[8] = v5;
      *id v5 = v0;
      v5[1] = sub_1001747D4;
      return v9(v2, v4);
    }
  }

  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v0[4], &protocol witness table for MainActor);
  return swift_task_switch(sub_1001748F8, v7, v8);
}

uint64_t sub_1001747D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  *(void *)(*(void *)v1 + 72LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100174830, 0LL, 0LL);
}

uint64_t sub_100174830()
{
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 32);

  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100174894, v3, v4);
}

uint64_t sub_100174894()
{
  uint64_t v1 = *(void *)(v0 + 72);
  __n128 v2 = swift_release(*(void *)(v0 + 40));
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 72);
    uint64_t v4 = objc_opt_self(&OBJC_CLASS___MPModelAlbum);
    id v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5) {
      sub_100188174(v5);
    }
  }

  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1001748F8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100174928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  void v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  return swift_task_switch(sub_100174978, 0LL, 0LL);
}

uint64_t sub_100174978()
{
  id v1 = [(id)objc_opt_self(MPModelGenericObject) genericObjectWithModelObject:v0[2]];
  v0[5] = v1;
  if (v1)
  {
    __n128 v2 = v1;
    id v3 = sub_100181DB0((uint64_t)[v1 type]);
    v0[6] = v3;
    if (v3)
    {
      id v4 = v3;
      unsigned int v9 = (uint64_t (*)(void *, id))((char *)&dword_1002BCAF0 + dword_1002BCAF0);
      uint64_t v5 = (void *)swift_task_alloc(unk_1002BCAF4);
      v0[7] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_100174A6C;
      return v9(v2, v4);
    }
  }

  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v0[3], &protocol witness table for MainActor);
  return swift_task_switch(sub_100186BF0, v7, v8);
}

uint64_t sub_100174A6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56LL);
  *(void *)(*(void *)v1 + 64LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100174AC8, 0LL, 0LL);
}

uint64_t sub_100174AC8()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);

  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100174B2C, v3, v4);
}

uint64_t sub_100174B2C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release(*(void *)(v0 + 32));
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 64);
    uint64_t v3 = objc_opt_self(&OBJC_CLASS___MPModelAlbum);
    uint64_t v4 = swift_dynamicCastObjCClass(v2, v3);
    if (v4) {
      [(id)objc_opt_self(TVMusicLibraryUtilities) showPageForAlbum:v4];
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100174BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v4[2] = a4;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  void v4[3] = v5;
  v4[4] = static MainActor.shared.getter(v5);
  return swift_task_switch(sub_100174BF8, 0LL, 0LL);
}

uint64_t sub_100174BF8()
{
  id v1 = [(id)objc_opt_self(MPModelGenericObject) genericObjectWithModelObject:v0[2]];
  v0[5] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_100181DB0((uint64_t)[v1 type]);
    v0[6] = v3;
    if (v3)
    {
      id v4 = v3;
      unsigned int v9 = (uint64_t (*)(void *, id))((char *)&dword_1002BCAF0 + dword_1002BCAF0);
      uint64_t v5 = (void *)swift_task_alloc(unk_1002BCAF4);
      v0[7] = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_100174CEC;
      return v9(v2, v4);
    }
  }

  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v0[3], &protocol witness table for MainActor);
  return swift_task_switch(sub_100174E28, v7, v8);
}

uint64_t sub_100174CEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 56LL);
  *(void *)(*(void *)v1 + 64LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100174D48, 0LL, 0LL);
}

uint64_t sub_100174D48()
{
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);

  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100174DAC, v3, v4);
}

uint64_t sub_100174DAC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release(*(void *)(v0 + 32));
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 64);
    uint64_t v3 = objc_opt_self(&OBJC_CLASS___MPModelPlaylist);
    uint64_t v4 = swift_dynamicCastObjCClass(v2, v3);
    if (v4) {
      [(id)objc_opt_self(TVMusicLibraryUtilities) showPageForPlaylist:v4];
    }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100174E28()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100174E58(void *a1, char a2, void *a3)
{
  id v6 = [objc_allocWithZone((Class)TVMPlaylistNameEntryViewController) init];
  uint64_t v7 = swift_allocObject(&unk_1002760A0, 33LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = a3;
  *(void *)(v7 + 24) = a1;
  *(_BYTE *)(v7 + 3sub_1000E053C(v0 + 2) = a2;
  void v13[4] = sub_100184EA4;
  uint64_t v14 = v7;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256LL;
  v13[2] = sub_10017688C;
  v13[3] = &unk_1002760B8;
  uint64_t v8 = _Block_copy(v13);
  uint64_t v9 = v14;
  id v10 = a3;
  sub_1000F4C00(a1, a2);
  objc_msgSend(v6, "setCompletionBlock:", v8, swift_release(v9).n128_f64[0]);
  _Block_release(v8);
  id v11 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
  [v11 presentViewController:v6];

  return swift_unknownObjectRelease(v11);
}

double sub_100174F88(uint64_t a1, unint64_t a2, void *a3, void *a4, char a5)
{
  uint64_t v10 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if (a2)
  {
    uint64_t v15 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000LL) == 0) {
      uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (v15)
    {
      uint64_t v16 = type metadata accessor for TaskPriority(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v14, 1LL, 1LL, v16);
      uint64_t v17 = swift_allocObject(&unk_1002760F0, 65LL, 7LL);
      *(void *)(v17 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
      *(void *)(v17 + 24) = 0LL;
      *(void *)(v17 + 3sub_1000E053C(v0 + 2) = a1;
      *(void *)(v17 + 40) = a2;
      *(void *)(v17 + 48) = a3;
      *(void *)(v17 + 56) = a4;
      *(_BYTE *)(v17 + 64) = a5;
      id v18 = a3;
      swift_bridgeObjectRetain(a2);
      sub_1000F4C00(a4, a5);
      uint64_t v19 = sub_100125950((uint64_t)v14, (uint64_t)&unk_1002BCBC0, v17);
      *(void *)&double result = swift_release(v19).n128_u64[0];
    }
  }

  return result;
}

uint64_t sub_10017509C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(_BYTE *)(v8 + 408) = a8;
  *(void *)(v8 + 336) = a6;
  *(void *)(v8 + 344) = a7;
  *(void *)(v8 + 320) = a4;
  *(void *)(v8 + 328) = a5;
  return swift_task_switch(sub_1001750BC, 0LL, 0LL);
}

uint64_t sub_1001750BC()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
  v0[44] = v2;
  NSString v3 = String._bridgeToObjectiveC()();
  v0[45] = v3;
  v0[15] = v0 + 39;
  v0[10] = v0;
  v0[11] = sub_1001751A0;
  v0[38] = swift_continuation_init(v0 + 10, 1LL);
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000LL;
  v0[36] = sub_1000E8A44;
  v0[37] = &unk_100276108;
  [v2 createPlaylistWithName:v3 parentPlaylist:v1 completion:v0 + 34];
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_1001751A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112LL);
  *(void *)(*(void *)v0 + 368LL) = v1;
  if (v1) {
    uint64_t v2 = sub_1001755B0;
  }
  else {
    uint64_t v2 = sub_100175200;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100175200()
{
  uint64_t v1 = *(void **)(v0 + 360);
  int v2 = *(unsigned __int8 *)(v0 + 408);
  NSString v3 = *(void **)(v0 + 312);
  *(void *)(v0 + 376) = v3;

  if (v2 <= 1)
  {
    if (v2)
    {
      uint64_t v4 = v0 + 144;
      uint64_t v10 = *(void **)(v0 + 344);
      uint64_t v9 = *(void **)(v0 + 352);
      *(void *)(v0 + 144) = v0;
      *(void *)(v0 + 15sub_1000E053C(v0 + 2) = sub_100175430;
      *(void *)(v0 + 304) = swift_continuation_init(v0 + 144, 1LL);
      *(void *)(v0 + 27sub_1000E053C(v0 + 2) = _NSConcreteStackBlock;
      *(void *)(v0 + 280) = 0x40000000LL;
      *(void *)(v0 + 288) = sub_10016F200;
      *(void *)(v0 + 296) = &unk_100276138;
      [v9 addPlaylist:v10 toPlaylist:v3 songsToAdd:0 completionHandler:v0 + 272];
    }

    else
    {
      uint64_t v4 = v0 + 208;
      id v6 = *(void **)(v0 + 344);
      uint64_t v5 = *(void **)(v0 + 352);
      *(void *)(v0 + 208) = v0;
      *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = sub_1001753D0;
      *(void *)(v0 + 304) = swift_continuation_init(v0 + 208, 1LL);
      *(void *)(v0 + 27sub_1000E053C(v0 + 2) = _NSConcreteStackBlock;
      *(void *)(v0 + 280) = 0x40000000LL;
      *(void *)(v0 + 288) = sub_10016F200;
      *(void *)(v0 + 296) = &unk_100276150;
      [v5 addSong:v6 toPlaylist:v3 completionHandler:v0 + 272];
    }

    return swift_continuation_await(v4);
  }

  if (v2 == 2)
  {
    uint64_t v4 = v0 + 16;
    uint64_t v8 = *(void **)(v0 + 344);
    uint64_t v7 = *(void **)(v0 + 352);
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100175490;
    *(void *)(v0 + 304) = swift_continuation_init(v0 + 16, 1LL);
    *(void *)(v0 + 27sub_1000E053C(v0 + 2) = _NSConcreteStackBlock;
    *(void *)(v0 + 280) = 0x40000000LL;
    *(void *)(v0 + 288) = sub_10016F200;
    *(void *)(v0 + 296) = &unk_100276120;
    [v7 addAlbum:v8 toPlaylist:v3 songsToAdd:0 completionHandler:v0 + 272];
    return swift_continuation_await(v4);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001753D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240LL);
  *(void *)(*(void *)v0 + 384LL) = v1;
  if (v1) {
    int v2 = sub_100175C00;
  }
  else {
    int v2 = sub_1001754F0;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100175430()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  *(void *)(*(void *)v0 + 392LL) = v1;
  if (v1) {
    int v2 = sub_10017602C;
  }
  else {
    int v2 = sub_100175530;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100175490()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 400LL) = v1;
  if (v1) {
    int v2 = sub_10017645C;
  }
  else {
    int v2 = sub_100175570;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_1001754F0()
{
  uint64_t v1 = *(void **)(v0 + 344);

  sub_1000F4C14(v1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100175530()
{
  uint64_t v1 = *(void **)(v0 + 344);

  sub_1000F4C14(v1, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100175570()
{
  uint64_t v1 = *(void **)(v0 + 344);

  sub_1000F4C14(v1, 2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001755B0(uint64_t a1)
{
  int v2 = *(void **)(v1 + 360);
  int v3 = *(unsigned __int8 *)(v1 + 408);
  swift_willThrow(a1);

  if (v3 == 255)
  {
    if (qword_1002B71F8 != -1) {
      swift_once(&qword_1002B71F8, sub_10016F274);
    }
    uint64_t v26 = *(void *)(v1 + 368);
    uint64_t v27 = *(void *)(v1 + 328);
    uint64_t v28 = type metadata accessor for Logger(0LL, v4);
    sub_1000E96CC(v28, (uint64_t)qword_1002BC910);
    swift_bridgeObjectRetain(v27);
    swift_errorRetain(v26);
    swift_bridgeObjectRetain(v27);
    uint64_t v29 = swift_errorRetain(v26);
    uint64_t v30 = (os_log_s *)Logger.logObject.getter(v29);
    os_log_type_t v31 = static os_log_type_t.default.getter();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v6 = *(void *)(v1 + 368);
    unint64_t v33 = *(void *)(v1 + 328);
    if (v32)
    {
      uint64_t v34 = *(void *)(v1 + 320);
      uint64_t v35 = swift_slowAlloc(22LL, -1LL);
      uint64_t v36 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
      logCGFloat a = (os_log_t)swift_slowAlloc(32LL, -1LL);
      v54[0] = (uint64_t)loga;
      *(_DWORD *)uint64_t v35 = 136315394;
      swift_bridgeObjectRetain(v33);
      *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v34, v33, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 272, v1 + 280, v35 + 4);
      swift_bridgeObjectRelease_n(v33, 3LL);
      *(_WORD *)(v35 + 1sub_1000E053C(v0 + 2) = 2112;
      swift_errorRetain(v6);
      uint64_t v37 = _swift_stdlib_bridgeErrorToNSError(v6);
      *(void *)(v1 + 27sub_1000E053C(v0 + 2) = v37;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 272, v1 + 280, v35 + 14);
      *uint64_t v36 = v37;
      swift_errorRelease(v6);
      swift_errorRelease(v6);
      _os_log_impl( (void *)&_mh_execute_header,  v30,  v31,  "Can't create playlist [%s], error: %@",  (uint8_t *)v35,  0x16u);
      uint64_t v38 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
      swift_arrayDestroy(v36, 1LL, v38);
      swift_slowDealloc(v36, -1LL, -1LL);
      swift_arrayDestroy(loga, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(loga, -1LL, -1LL);
      swift_slowDealloc(v35, -1LL, -1LL);

LABEL_20:
      swift_errorRelease(v6);
      return (*(uint64_t (**)(void))(v1 + 8))();
    }

    swift_errorRelease(*(void *)(v1 + 368));
    swift_bridgeObjectRelease_n(v33, 2LL);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
  }

  else
  {
    uint64_t v5 = *(void **)(v1 + 344);
    uint64_t v6 = *(void *)(v1 + 368);
    uint64_t v7 = qword_1002B71F8;
    id v9 = v5;
    if (v7 != -1)
    {
      swift_once(&qword_1002B71F8, sub_10016F274);
      uint64_t v5 = *(void **)(v1 + 344);
    }

    uint64_t v10 = *(void *)(v1 + 328);
    char v11 = *(_BYTE *)(v1 + 408);
    uint64_t v12 = type metadata accessor for Logger(0LL, v8);
    sub_1000E96CC(v12, (uint64_t)qword_1002BC910);
    sub_1000F4C00(v5, v11);
    swift_bridgeObjectRetain(v10);
    swift_errorRetain(v6);
    sub_1000F4C00(v5, v11);
    swift_bridgeObjectRetain(v10);
    uint64_t v13 = swift_errorRetain(v6);
    uint64_t v14 = (os_log_s *)Logger.logObject.getter(v13);
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    int v17 = *(unsigned __int8 *)(v1 + 408);
    if (v16)
    {
      uint64_t v18 = swift_slowAlloc(32LL, -1LL);
      uint64_t v19 = swift_slowAlloc(8LL, -1LL);
      uint64_t v20 = swift_slowAlloc(64LL, -1LL);
      *(_DWORD *)uint64_t v18 = 136315650;
      log = v14;
      v54[0] = v20;
      uint64_t v51 = v20;
      os_log_type_t v50 = v15;
      uint64_t v49 = (void *)v19;
      if (v17)
      {
        if (v17 == 1)
        {
          id v21 = [v9 name];
          if (!v21)
          {
            uint64_t v22 = v1 + 272;
            uint64_t v23 = 0LL;
            unint64_t v24 = 0xE000000000000000LL;
            char v25 = 1;
LABEL_19:
            uint64_t v42 = *(void **)(v1 + 344);
            unint64_t v43 = *(void *)(v1 + 328);
            uint64_t v48 = *(void *)(v1 + 320);
            char v44 = *(_BYTE *)(v1 + 408);
            sub_1000F4C14(v42, v25);
            *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v23, v24, v54);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v1 + 280, v18 + 4);
            swift_bridgeObjectRelease(v24);
            sub_1000F4C14(v42, v44);
            sub_1000F4C14(v42, v44);
            *(_WORD *)(v18 + 1sub_1000E053C(v0 + 2) = 2080;
            swift_bridgeObjectRetain(v43);
            *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v48, v43, v54);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v1 + 280, v18 + 14);
            swift_bridgeObjectRelease_n(v43, 3LL);
            *(_WORD *)(v18 + 2sub_1000E053C(v0 + 2) = 2112;
            swift_errorRetain(v6);
            uint64_t v45 = _swift_stdlib_bridgeErrorToNSError(v6);
            *(void *)(v1 + 27sub_1000E053C(v0 + 2) = v45;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v22, v1 + 280, v18 + 24);
            *uint64_t v49 = v45;
            swift_errorRelease(v6);
            swift_errorRelease(v6);
            _os_log_impl( (void *)&_mh_execute_header,  log,  v50,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v18,  0x20u);
            uint64_t v46 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
            swift_arrayDestroy(v49, 1LL, v46);
            swift_slowDealloc(v49, -1LL, -1LL);
            swift_arrayDestroy(v51, 2LL, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v51, -1LL, -1LL);
            swift_slowDealloc(v18, -1LL, -1LL);

            sub_1000F4C14(v42, v44);
            goto LABEL_20;
          }
        }

        else
        {
          id v21 = [v9 title];
          if (!v21)
          {
            uint64_t v22 = v1 + 272;
            uint64_t v23 = 0LL;
            unint64_t v24 = 0xE000000000000000LL;
            char v25 = 2;
            goto LABEL_19;
          }
        }
      }

      else
      {
        id v21 = [v9 title];
        if (!v21)
        {
          uint64_t v22 = v1 + 272;
          char v25 = 0;
          uint64_t v23 = 0LL;
          unint64_t v24 = 0xE000000000000000LL;
          goto LABEL_19;
        }
      }

      uint64_t v22 = v1 + 272;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      unint64_t v24 = v41;

      char v25 = *(_BYTE *)(v1 + 408);
      goto LABEL_19;
    }

    uint64_t v39 = *(void **)(v1 + 344);
    uint64_t v40 = *(void *)(v1 + 328);
    swift_errorRelease(v6);
    sub_1000F4C14(v39, v17);
    sub_1000F4C14(v39, v17);

    swift_bridgeObjectRelease_n(v40, 2LL);
    swift_errorRelease(v6);
    swift_errorRelease(v6);
  }

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100175C00(uint64_t a1)
{
  int v2 = *(void **)(v1 + 376);
  int v3 = *(void **)(v1 + 344);
  swift_willThrow(a1);

  sub_1000F4C14(v3, 0);
  uint64_t v4 = *(void *)(v1 + 384);
  uint64_t v5 = *(void **)(v1 + 344);
  uint64_t v6 = qword_1002B71F8;
  id v8 = v5;
  if (v6 != -1)
  {
    swift_once(&qword_1002B71F8, sub_10016F274);
    uint64_t v5 = *(void **)(v1 + 344);
  }

  uint64_t v9 = *(void *)(v1 + 328);
  char v10 = *(_BYTE *)(v1 + 408);
  uint64_t v11 = type metadata accessor for Logger(0LL, v7);
  sub_1000E96CC(v11, (uint64_t)qword_1002BC910);
  sub_1000F4C00(v5, v10);
  swift_bridgeObjectRetain(v9);
  swift_errorRetain(v4);
  sub_1000F4C00(v5, v10);
  swift_bridgeObjectRetain(v9);
  uint64_t v12 = swift_errorRetain(v4);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  int v16 = *(unsigned __int8 *)(v1 + 408);
  if (v15)
  {
    uint64_t v34 = v1 + 272;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v19 = swift_slowAlloc(64LL, -1LL);
    *(_DWORD *)uint64_t v17 = 136315650;
    log = v13;
    v38[0] = v19;
    uint64_t v36 = v19;
    os_log_type_t v35 = v14;
    if (v16)
    {
      if (v16 == 1)
      {
        id v20 = [v8 name];
        if (!v20)
        {
          uint64_t v21 = 0LL;
          unint64_t v22 = 0xE000000000000000LL;
          char v23 = 1;
LABEL_13:
          uint64_t v27 = *(void **)(v1 + 344);
          unint64_t v28 = *(void *)(v1 + 328);
          uint64_t v33 = *(void *)(v1 + 320);
          char v29 = *(_BYTE *)(v1 + 408);
          sub_1000F4C14(v27, v23);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v21, v22, v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 4);
          swift_bridgeObjectRelease(v22);
          sub_1000F4C14(v27, v29);
          sub_1000F4C14(v27, v29);
          *(_WORD *)(v17 + 1sub_1000E053C(v0 + 2) = 2080;
          swift_bridgeObjectRetain(v28);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v33, v28, v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 14);
          swift_bridgeObjectRelease_n(v28, 3LL);
          *(_WORD *)(v17 + 2sub_1000E053C(v0 + 2) = 2112;
          swift_errorRetain(v4);
          uint64_t v30 = _swift_stdlib_bridgeErrorToNSError(v4);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 24);
          *uint64_t v18 = v30;
          swift_errorRelease(v4);
          swift_errorRelease(v4);
          _os_log_impl( (void *)&_mh_execute_header,  log,  v35,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v17,  0x20u);
          uint64_t v31 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
          swift_arrayDestroy(v18, 1LL, v31);
          swift_slowDealloc(v18, -1LL, -1LL);
          swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v36, -1LL, -1LL);
          swift_slowDealloc(v17, -1LL, -1LL);

          sub_1000F4C14(v27, v29);
          swift_errorRelease(v4);
          return (*(uint64_t (**)(void))(v1 + 8))();
        }
      }

      else
      {
        id v20 = [v8 title];
        if (!v20)
        {
          uint64_t v21 = 0LL;
          unint64_t v22 = 0xE000000000000000LL;
          char v23 = 2;
          goto LABEL_13;
        }
      }
    }

    else
    {
      id v20 = [v8 title];
      if (!v20)
      {
        char v23 = 0;
        uint64_t v21 = 0LL;
        unint64_t v22 = 0xE000000000000000LL;
        goto LABEL_13;
      }
    }

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    unint64_t v22 = v26;

    char v23 = *(_BYTE *)(v1 + 408);
    goto LABEL_13;
  }

  unint64_t v24 = *(void **)(v1 + 344);
  uint64_t v25 = *(void *)(v1 + 328);
  swift_errorRelease(v4);
  sub_1000F4C14(v24, v16);
  sub_1000F4C14(v24, v16);

  swift_bridgeObjectRelease_n(v25, 2LL);
  swift_errorRelease(v4);
  swift_errorRelease(v4);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10017602C(uint64_t a1)
{
  int v2 = *(void **)(v1 + 376);
  int v3 = *(void **)(v1 + 344);
  swift_willThrow(a1);

  sub_1000F4C14(v3, 1);
  uint64_t v4 = *(void *)(v1 + 392);
  uint64_t v5 = *(void **)(v1 + 344);
  uint64_t v6 = qword_1002B71F8;
  id v8 = v5;
  if (v6 != -1)
  {
    swift_once(&qword_1002B71F8, sub_10016F274);
    uint64_t v5 = *(void **)(v1 + 344);
  }

  uint64_t v9 = *(void *)(v1 + 328);
  char v10 = *(_BYTE *)(v1 + 408);
  uint64_t v11 = type metadata accessor for Logger(0LL, v7);
  sub_1000E96CC(v11, (uint64_t)qword_1002BC910);
  sub_1000F4C00(v5, v10);
  swift_bridgeObjectRetain(v9);
  swift_errorRetain(v4);
  sub_1000F4C00(v5, v10);
  swift_bridgeObjectRetain(v9);
  uint64_t v12 = swift_errorRetain(v4);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  int v16 = *(unsigned __int8 *)(v1 + 408);
  if (v15)
  {
    uint64_t v34 = v1 + 272;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v19 = swift_slowAlloc(64LL, -1LL);
    *(_DWORD *)uint64_t v17 = 136315650;
    log = v13;
    v38[0] = v19;
    uint64_t v36 = v19;
    os_log_type_t v35 = v14;
    if (v16)
    {
      if (v16 == 1)
      {
        id v20 = [v8 name];
        if (!v20)
        {
          uint64_t v21 = 0LL;
          unint64_t v22 = 0xE000000000000000LL;
          char v23 = 1;
LABEL_13:
          uint64_t v27 = *(void **)(v1 + 344);
          unint64_t v28 = *(void *)(v1 + 328);
          uint64_t v33 = *(void *)(v1 + 320);
          char v29 = *(_BYTE *)(v1 + 408);
          sub_1000F4C14(v27, v23);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v21, v22, v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 4);
          swift_bridgeObjectRelease(v22);
          sub_1000F4C14(v27, v29);
          sub_1000F4C14(v27, v29);
          *(_WORD *)(v17 + 1sub_1000E053C(v0 + 2) = 2080;
          swift_bridgeObjectRetain(v28);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v33, v28, v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 14);
          swift_bridgeObjectRelease_n(v28, 3LL);
          *(_WORD *)(v17 + 2sub_1000E053C(v0 + 2) = 2112;
          swift_errorRetain(v4);
          uint64_t v30 = _swift_stdlib_bridgeErrorToNSError(v4);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 24);
          *uint64_t v18 = v30;
          swift_errorRelease(v4);
          swift_errorRelease(v4);
          _os_log_impl( (void *)&_mh_execute_header,  log,  v35,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v17,  0x20u);
          uint64_t v31 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
          swift_arrayDestroy(v18, 1LL, v31);
          swift_slowDealloc(v18, -1LL, -1LL);
          swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v36, -1LL, -1LL);
          swift_slowDealloc(v17, -1LL, -1LL);

          sub_1000F4C14(v27, v29);
          swift_errorRelease(v4);
          return (*(uint64_t (**)(void))(v1 + 8))();
        }
      }

      else
      {
        id v20 = [v8 title];
        if (!v20)
        {
          uint64_t v21 = 0LL;
          unint64_t v22 = 0xE000000000000000LL;
          char v23 = 2;
          goto LABEL_13;
        }
      }
    }

    else
    {
      id v20 = [v8 title];
      if (!v20)
      {
        char v23 = 0;
        uint64_t v21 = 0LL;
        unint64_t v22 = 0xE000000000000000LL;
        goto LABEL_13;
      }
    }

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    unint64_t v22 = v26;

    char v23 = *(_BYTE *)(v1 + 408);
    goto LABEL_13;
  }

  unint64_t v24 = *(void **)(v1 + 344);
  uint64_t v25 = *(void *)(v1 + 328);
  swift_errorRelease(v4);
  sub_1000F4C14(v24, v16);
  sub_1000F4C14(v24, v16);

  swift_bridgeObjectRelease_n(v25, 2LL);
  swift_errorRelease(v4);
  swift_errorRelease(v4);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10017645C(uint64_t a1)
{
  int v2 = *(void **)(v1 + 376);
  int v3 = *(void **)(v1 + 344);
  swift_willThrow(a1);

  sub_1000F4C14(v3, 2);
  uint64_t v4 = *(void *)(v1 + 400);
  uint64_t v5 = *(void **)(v1 + 344);
  uint64_t v6 = qword_1002B71F8;
  id v8 = v5;
  if (v6 != -1)
  {
    swift_once(&qword_1002B71F8, sub_10016F274);
    uint64_t v5 = *(void **)(v1 + 344);
  }

  uint64_t v9 = *(void *)(v1 + 328);
  char v10 = *(_BYTE *)(v1 + 408);
  uint64_t v11 = type metadata accessor for Logger(0LL, v7);
  sub_1000E96CC(v11, (uint64_t)qword_1002BC910);
  sub_1000F4C00(v5, v10);
  swift_bridgeObjectRetain(v9);
  swift_errorRetain(v4);
  sub_1000F4C00(v5, v10);
  swift_bridgeObjectRetain(v9);
  uint64_t v12 = swift_errorRetain(v4);
  uint64_t v13 = (os_log_s *)Logger.logObject.getter(v12);
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  int v16 = *(unsigned __int8 *)(v1 + 408);
  if (v15)
  {
    uint64_t v34 = v1 + 272;
    uint64_t v17 = swift_slowAlloc(32LL, -1LL);
    uint64_t v18 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v19 = swift_slowAlloc(64LL, -1LL);
    *(_DWORD *)uint64_t v17 = 136315650;
    log = v13;
    v38[0] = v19;
    uint64_t v36 = v19;
    os_log_type_t v35 = v14;
    if (v16)
    {
      if (v16 == 1)
      {
        id v20 = [v8 name];
        if (!v20)
        {
          uint64_t v21 = 0LL;
          unint64_t v22 = 0xE000000000000000LL;
          char v23 = 1;
LABEL_13:
          uint64_t v27 = *(void **)(v1 + 344);
          unint64_t v28 = *(void *)(v1 + 328);
          uint64_t v33 = *(void *)(v1 + 320);
          char v29 = *(_BYTE *)(v1 + 408);
          sub_1000F4C14(v27, v23);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v21, v22, v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 4);
          swift_bridgeObjectRelease(v22);
          sub_1000F4C14(v27, v29);
          sub_1000F4C14(v27, v29);
          *(_WORD *)(v17 + 1sub_1000E053C(v0 + 2) = 2080;
          swift_bridgeObjectRetain(v28);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = sub_1001B2690(v33, v28, v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 14);
          swift_bridgeObjectRelease_n(v28, 3LL);
          *(_WORD *)(v17 + 2sub_1000E053C(v0 + 2) = 2112;
          swift_errorRetain(v4);
          uint64_t v30 = _swift_stdlib_bridgeErrorToNSError(v4);
          *(void *)(v1 + 27sub_1000E053C(v0 + 2) = v30;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v34, v1 + 280, v17 + 24);
          *uint64_t v18 = v30;
          swift_errorRelease(v4);
          swift_errorRelease(v4);
          _os_log_impl( (void *)&_mh_execute_header,  log,  v35,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v17,  0x20u);
          uint64_t v31 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
          swift_arrayDestroy(v18, 1LL, v31);
          swift_slowDealloc(v18, -1LL, -1LL);
          swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v36, -1LL, -1LL);
          swift_slowDealloc(v17, -1LL, -1LL);

          sub_1000F4C14(v27, v29);
          swift_errorRelease(v4);
          return (*(uint64_t (**)(void))(v1 + 8))();
        }
      }

      else
      {
        id v20 = [v8 title];
        if (!v20)
        {
          uint64_t v21 = 0LL;
          unint64_t v22 = 0xE000000000000000LL;
          char v23 = 2;
          goto LABEL_13;
        }
      }
    }

    else
    {
      id v20 = [v8 title];
      if (!v20)
      {
        char v23 = 0;
        uint64_t v21 = 0LL;
        unint64_t v22 = 0xE000000000000000LL;
        goto LABEL_13;
      }
    }

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    unint64_t v22 = v26;

    char v23 = *(_BYTE *)(v1 + 408);
    goto LABEL_13;
  }

  unint64_t v24 = *(void **)(v1 + 344);
  uint64_t v25 = *(void *)(v1 + 328);
  swift_errorRelease(v4);
  sub_1000F4C14(v24, v16);
  sub_1000F4C14(v24, v16);

  swift_bridgeObjectRelease_n(v25, 2LL);
  swift_errorRelease(v4);
  swift_errorRelease(v4);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10017688C(uint64_t a1, uint64_t a2)
{
  int v3 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  if (a2)
  {
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
    uint64_t v6 = v5;
  }

  else
  {
    uint64_t v4 = 0LL;
    uint64_t v6 = 0LL;
  }

  swift_retain(v2);
  v3(v4, v6);
  swift_release(v2);
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_1001768F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v2 = type metadata accessor for TaskPriority(0LL);
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v74 = sub_1000DFE10(&qword_1002BCD30);
  uint64_t v6 = *(void *)(v74 - 8);
  __chkstk_darwin(v74, v7);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = (int *)sub_1000DFE10(&qword_1002BCD38);
  uint64_t v11 = __chkstk_darwin(v73, v10);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v14);
  int v16 = (char *)&v63 - v15;
  uint64_t v78 = v1;
  uint64_t v17 = sub_1000DFE10(&qword_1002BCC78);
  unint64_t v18 = sub_10018562C();
  Section<>.init(content:)(sub_100185D18, v77, v17, v18);
  uint64_t v19 = *v1;
  int v64 = *((unsigned __int8 *)v1 + 8);
  __int128 v84 = *((_OWORD *)v1 + 1);
  sub_1000E011C((uint64_t)&v84, (uint64_t)v86, &qword_1002BCD00);
  sub_1000E011C((uint64_t)&v84 + 8, (uint64_t)&v85, &qword_1002BCD48);
  __int128 v81 = *((_OWORD *)v1 + 2);
  sub_1000E011C((uint64_t)&v81, (uint64_t)&v83, &qword_1002BCD00);
  sub_1000E011C((uint64_t)&v81 + 8, (uint64_t)&v82, &qword_1002BCD48);
  id v20 = (_OWORD *)swift_allocObject(&unk_100276B48, 64LL, 7LL);
  __int128 v21 = *((_OWORD *)v1 + 1);
  v20[1] = *(_OWORD *)v1;
  v20[2] = v21;
  v20[3] = *((_OWORD *)v1 + 2);
  uint64_t v63 = v19;
  unint64_t v22 = v19;
  sub_100185D70(v86);
  sub_100112B50(&v85);
  sub_100185D70(&v83);
  char v23 = sub_100112B50(&v82);
  static TaskPriority.userInitiated.getter(v23);
  unint64_t v24 = &v13[v73[9]];
  uint64_t v25 = type metadata accessor for _TaskModifier(0LL);
  uint64_t v27 = v75;
  uint64_t v26 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(&v24[*(int *)(v25 + 20)], v5, v76);
  *(void *)unint64_t v24 = &unk_1002BCD50;
  *((void *)v24 + 1) = v20;
  uint64_t v28 = v74;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v13, v9, v74);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v26);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v28);
  uint64_t v72 = v13;
  uint64_t v71 = v16;
  sub_1000E011C((uint64_t)v13, (uint64_t)v16, &qword_1002BCD38);
  __int128 v79 = v81;
  sub_1000DFE10(&qword_1002BCD58);
  State.wrappedValue.getter(&v80);
  if (v80)
  {
    if (*(void *)(v80 + 16))
    {
      uint64_t v76 = v80;
      uint64_t v69 = LocalizedStringKey.init(stringLiteral:)(0x53544E45434552LL, 0xE700000000000000LL);
      uint64_t v68 = v29;
      uint64_t v67 = v30;
      uint64_t v75 = v31 & 1;
      BOOL v32 = v22;
      uint64_t v33 = v22;
      uint64_t v73 = v63;
      LODWORD(v74) = v64;
      goto LABEL_7;
    }

    BOOL v32 = v22;
    swift_bridgeObjectRelease(v80);
  }

  else
  {
    BOOL v32 = v22;
  }

  uint64_t v69 = 0LL;
  uint64_t v68 = 0LL;
  uint64_t v75 = 0LL;
  uint64_t v67 = 0LL;
  uint64_t v76 = 0LL;
  uint64_t v73 = 0LL;
  LODWORD(v74) = 0;
LABEL_7:
  __int128 v79 = v84;
  State.wrappedValue.getter(&v80);
  if (!v80)
  {
LABEL_12:
    uint64_t v66 = 0LL;
    uint64_t v39 = 0LL;
    uint64_t v42 = 0LL;
    uint64_t v36 = 0LL;
    uint64_t v65 = 0LL;
    os_log_type_t v35 = 0LL;
    char v43 = 0;
    goto LABEL_15;
  }

  if (!*(void *)(v80 + 16))
  {
    swift_bridgeObjectRelease(v80);
    goto LABEL_12;
  }

  uint64_t v34 = v80;
  os_log_type_t v35 = v63;
  __int128 v79 = v81;
  State.wrappedValue.getter(&v80);
  uint64_t v36 = v80;
  swift_bridgeObjectRelease(v80);
  if (v36)
  {
    uint64_t v37 = LocalizedStringKey.init(stringLiteral:)(0x59414C50204C4C41LL, 0xED0000535453494CLL);
    uint64_t v39 = v38;
    uint64_t v36 = v40;
    uint64_t v42 = v41 & 1;
  }

  else
  {
    uint64_t v37 = 0LL;
    uint64_t v39 = 0LL;
    uint64_t v42 = 0LL;
  }

  uint64_t v66 = v37;
  char v44 = v32;
  char v43 = v64;
  uint64_t v65 = v34;
LABEL_15:
  uint64_t v45 = (uint64_t)v72;
  sub_1000E04D4((uint64_t)v71, (uint64_t)v72, &qword_1002BCD38);
  uint64_t v46 = v45;
  uint64_t v47 = v70;
  sub_1000E04D4(v46, v70, &qword_1002BCD38);
  uint64_t v48 = sub_1000DFE10(&qword_1002BCD60);
  uint64_t v49 = v47 + *(int *)(v48 + 48);
  uint64_t v50 = v69;
  uint64_t v51 = v68;
  *(void *)uint64_t v49 = v69;
  *(void *)(v49 + 8) = v51;
  uint64_t v52 = v75;
  *(void *)(v49 + swift_unknownObjectWeakDestroy(v0 + 16) = v75;
  uint64_t v53 = v52;
  uint64_t v75 = v52;
  uint64_t v54 = v67;
  uint64_t v55 = v76;
  *(void *)(v49 + 24) = v67;
  *(void *)(v49 + 3sub_1000E053C(v0 + 2) = v55;
  uint64_t v56 = v55;
  uint64_t v76 = v55;
  uint64_t v57 = v73;
  *(void *)(v49 + 40) = v73;
  uint64_t v58 = v57;
  uint64_t v73 = v57;
  LODWORD(v57) = v74;
  *(_BYTE *)(v49 + 48) = v74;
  LODWORD(v74) = (_DWORD)v57;
  uint64_t v59 = v47 + *(int *)(v48 + 64);
  uint64_t v60 = v66;
  *(void *)uint64_t v59 = v66;
  *(void *)(v59 + 8) = v39;
  *(void *)(v59 + swift_unknownObjectWeakDestroy(v0 + 16) = v42;
  *(void *)(v59 + 24) = v36;
  uint64_t v61 = v65;
  *(void *)(v59 + 3sub_1000E053C(v0 + 2) = v65;
  *(void *)(v59 + 40) = v35;
  *(_BYTE *)(v59 + 48) = v43;
  sub_100185D98(v50, v51, v53, v54, v56, v58);
  sub_100185D98(v60, v39, v42, v36, v61, v35);
  sub_1000E03B4((uint64_t)v71, &qword_1002BCD38);
  sub_100185DFC(v60, v39, v42, v36, v61, v35);
  sub_100185DFC(v50, v51, v75, v54, v76, v73);
  return sub_1000E03B4((uint64_t)v72, &qword_1002BCD38);
}

uint64_t sub_100176EB8(uint64_t a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BCC70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_100185E6C((uint64_t *)a1, (uint64_t)v19);
  __int128 v16 = *(_OWORD *)(a1 + 16);
  sub_1000E011C((uint64_t)&v16, (uint64_t)&v18, &qword_1002BCD00);
  sub_1000E011C((uint64_t)&v16 + 8, (uint64_t)&v17, &qword_1002BCD48);
  __int128 v13 = *(_OWORD *)(a1 + 32);
  sub_1000E011C((uint64_t)&v13, (uint64_t)&v15, &qword_1002BCD00);
  sub_1000E011C((uint64_t)&v13 + 8, (uint64_t)&v14, &qword_1002BCD48);
  uint64_t v7 = (_OWORD *)swift_allocObject(&unk_100276BA0, 64LL, 7LL);
  __int128 v8 = *(_OWORD *)(a1 + 16);
  v7[1] = *(_OWORD *)a1;
  v7[2] = v8;
  v7[3] = *(_OWORD *)(a1 + 32);
  sub_10011B590(v19);
  sub_100185D70(&v18);
  sub_100112B50(&v17);
  sub_100185D70(&v15);
  sub_100112B50(&v14);
  uint64_t v9 = sub_1000DFE10(&qword_1002BCCA8);
  uint64_t v10 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(action:label:)(sub_100184D68, v7, sub_1001770AC, 0LL, v9, v10);
  uint64_t v11 = sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.accessibilityIdentifier(_:)(0xD000000000000025LL, 0x8000000100228F50LL, v2, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1001770AC()
{
  return sub_100178640();
}

uint64_t sub_1001770E8(uint64_t a1)
{
  v1[28] = a1;
  uint64_t v2 = type metadata accessor for MainActor(0LL);
  v1[29] = static MainActor.shared.getter(v2);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[30] = v3;
  v1[31] = v4;
  return swift_task_switch(sub_100177154, v3, v4);
}

uint64_t sub_100177154()
{
  uint64_t v1 = v0 + 216;
  uint64_t v2 = *(void *)(v0 + 224);
  *(_OWORD *)(v0 + 200) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v2 + 32);
  *(void *)(v0 + 256) = sub_1000DFE10(&qword_1002BCD58);
  State.wrappedValue.getter((void *)(v0 + 216));
  uint64_t v3 = *(void *)(v0 + 216);
  swift_bridgeObjectRelease(v3);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 224);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v0 + 144) = *(_OWORD *)(v4 + 16);
    State.wrappedValue.getter((void *)(v0 + 216));
    uint64_t v5 = *(void *)(v0 + 216);
    swift_bridgeObjectRelease(v5);
    if (v5)
    {
      __n128 v6 = swift_release(*(void *)(v0 + 232));
      return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
    }

    uint64_t v8 = v0 + 16;
    uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    *(void *)(v0 + 56) = v1;
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100177624;
    *(void *)(v0 + 176) = swift_continuation_init(v0 + 16, 1LL);
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 0x40000000LL;
    *(void *)(v0 + 160) = sub_100177D14;
    *(void *)(v0 + 168) = &unk_100276B60;
    [v10 allPlaylistsInFolder:0 completion:v0 + 144];
  }

  else
  {
    uint64_t v8 = v0 + 80;
    uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    *(void *)(v0 + 120) = v1;
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 88) = sub_100177308;
    *(void *)(v0 + 176) = swift_continuation_init(v0 + 80, 1LL);
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 0x40000000LL;
    *(void *)(v0 + 160) = sub_100177D14;
    *(void *)(v0 + 168) = &unk_100276B78;
    [v9 recentlyEditedPlaylistsWithMaxCount:3 completion:v0 + 144];
  }

  return swift_continuation_await(v8);
}

uint64_t sub_100177308()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 264) = v2;
  if (v2) {
    uint64_t v3 = sub_100177874;
  }
  else {
    uint64_t v3 = sub_100177364;
  }
  return swift_task_switch(v3, *(void *)(v1 + 240), *(void *)(v1 + 248));
}

uint64_t sub_100177364()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0) {
      uint64_t v17 = *(void *)(v0 + 216);
    }
    else {
      uint64_t v17 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v0 + 216));
    uint64_t result = _CocoaArrayWrapper.endIndex.getter(v17);
    uint64_t v2 = result;
    unint64_t v24 = (void *)(v0 + 216);
    uint64_t v25 = v0;
    if (result) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v5 = _swiftEmptyArrayStorage;
    goto LABEL_21;
  }

  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  uint64_t result = swift_bridgeObjectRetain(*(void *)(v0 + 216));
  unint64_t v24 = (void *)(v0 + 216);
  uint64_t v25 = v0;
  if (!v2) {
    goto LABEL_20;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }

  uint64_t v4 = 0LL;
  uint64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    if ((v1 & 0xC000000000000001LL) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
    }
    else {
      id v6 = *(id *)(v1 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, "name", v24, v25);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      uint64_t v12 = v11;

      id v13 = [v7 identifiers];
      if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0) {
        uint64_t v5 = sub_10015B0D8(0LL, v5[2] + 1LL, 1, v5);
      }
      unint64_t v15 = v5[2];
      unint64_t v14 = v5[3];
      if (v15 >= v14 >> 1) {
        uint64_t v5 = sub_10015B0D8((void *)(v14 > 1), v15 + 1, 1, v5);
      }
      v5[2] = v15 + 1;
      __int128 v16 = &v5[4 * v15];
      v16[4] = v7;
      v16[5] = v10;
      v16[6] = v12;
      v16[7] = v13;
    }

    else
    {
    }

    ++v4;
  }

  while (v2 != v4);
LABEL_21:
  uint64_t v18 = v24 - 9;
  uint64_t v19 = *(void *)(v25 + 256);
  swift_bridgeObjectRelease_n(v1, 2LL);
  *uint64_t v18 = *((_OWORD *)v24 - 1);
  *(void *)(v25 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v5;
  State.wrappedValue.setter(v24, v19);
  uint64_t v20 = *(void *)(v25 + 224);
  *((_OWORD *)v24 - sub_1000E053C(v0 + 2) = *(_OWORD *)(v20 + 16);
  *uint64_t v18 = *(_OWORD *)(v20 + 16);
  State.wrappedValue.getter(v24);
  uint64_t v21 = *(void *)(v25 + 216);
  swift_bridgeObjectRelease(v21);
  if (v21)
  {
    __n128 v22 = swift_release(*(void *)(v25 + 232));
    return (*(uint64_t (**)(__n128))(v25 + 8))(v22);
  }

  else
  {
    char v23 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    *(void *)(v25 + 56) = v24;
    *(void *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = v25;
    *(void *)(v25 + 24) = sub_100177624;
    *(void *)(v25 + 176) = swift_continuation_init(v25 + 16, 1LL);
    *(void *)(v25 + 144) = _NSConcreteStackBlock;
    *(void *)(v25 + 15sub_1000E053C(v0 + 2) = 0x40000000LL;
    *(void *)(v25 + 160) = sub_100177D14;
    *(void *)(v25 + 168) = &unk_100276B60;
    [v23 allPlaylistsInFolder:0 completion:v18];
    return swift_continuation_await(v25 + 16);
  }

uint64_t sub_100177624()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 27sub_1000E053C(v0 + 2) = v2;
  if (v2) {
    uint64_t v3 = sub_100177B38;
  }
  else {
    uint64_t v3 = sub_100177680;
  }
  return swift_task_switch(v3, *(void *)(v1 + 240), *(void *)(v1 + 248));
}

uint64_t sub_100177680()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if (!((unint64_t)v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(*(void *)(v0 + 216));
    uint64_t v20 = v0 + 216;
    uint64_t v21 = v0;
    if (v2) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_21:
    uint64_t v19 = *(void *)(v21 + 256);
    swift_bridgeObjectRelease_n(v1, 2LL);
    *(_OWORD *)(v21 + 144) = *(_OWORD *)(v21 + 184);
    *(void *)(v21 + 2swift_unknownObjectWeakDestroy(v0 + 16) = v5;
    State.wrappedValue.setter(v20, v19);
    return (*(uint64_t (**)(void))(v21 + 8))();
  }

  if (v1 < 0) {
    uint64_t v18 = *(void *)(v0 + 216);
  }
  else {
    uint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*(void *)(v0 + 216));
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v18);
  uint64_t v2 = result;
  uint64_t v20 = v0 + 216;
  uint64_t v21 = v0;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0LL;
    unint64_t v22 = v1 & 0xC000000000000001LL;
    uint64_t v5 = _swiftEmptyArrayStorage;
    do
    {
      if (v22) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      id v8 = objc_msgSend(v6, "name", v20);
      if (v8)
      {
        uint64_t v9 = v8;
        uint64_t v10 = v1;
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
        uint64_t v13 = v12;

        id v14 = [v7 identifiers];
        if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0) {
          uint64_t v5 = sub_10015B0D8(0LL, v5[2] + 1LL, 1, v5);
        }
        unint64_t v16 = v5[2];
        unint64_t v15 = v5[3];
        if (v16 >= v15 >> 1) {
          uint64_t v5 = sub_10015B0D8((void *)(v15 > 1), v16 + 1, 1, v5);
        }
        v5[2] = v16 + 1;
        uint64_t v17 = &v5[4 * v16];
        v17[4] = v7;
        void v17[5] = v11;
        v17[6] = v13;
        v17[7] = v14;
        uint64_t v1 = v10;
      }

      else
      {
      }

      ++v4;
    }

    while (v2 != v4);
    goto LABEL_21;
  }

  __break(1u);
  return result;
}

uint64_t sub_100177874(uint64_t a1)
{
  uint64_t v2 = (void *)(v1 + 216);
  swift_willThrow(a1);
  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v4 = (_OWORD *)(v1 + 184);
  uint64_t v5 = *(void *)(v1 + 264);
  uint64_t v6 = type metadata accessor for Logger(0LL, v3);
  sub_1000E96CC(v6, (uint64_t)qword_1002BC910);
  swift_errorRetain(v5);
  uint64_t v7 = swift_errorRetain(v5);
  id v8 = (os_log_s *)Logger.logObject.getter(v7);
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = *(void *)(v1 + 264);
  if (v10)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v13 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v12 = 138412290;
    swift_errorRetain(v11);
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError(v11);
    *(void *)(v1 + 144) = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 144, v1 + 152, v12 + 4);
    *uint64_t v13 = v14;
    uint64_t v2 = (void *)(v1 + 216);
    swift_errorRelease(v11);
    swift_errorRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Can't get recent playlists: %@", v12, 0xCu);
    uint64_t v15 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v13, 1LL, v15);
    swift_slowDealloc(v13, -1LL, -1LL);
    unint64_t v16 = v12;
    uint64_t v4 = (_OWORD *)(v1 + 184);
    swift_slowDealloc(v16, -1LL, -1LL);

    swift_errorRelease(v11);
  }

  else
  {
    swift_errorRelease(*(void *)(v1 + 264));
    swift_errorRelease(v11);
    swift_errorRelease(v11);
  }

  uint64_t v17 = *(void *)(v1 + 224);
  *uint64_t v4 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)(v17 + 16);
  State.wrappedValue.getter(v2);
  uint64_t v18 = *(void *)(v1 + 216);
  swift_bridgeObjectRelease(v18);
  if (v18)
  {
    __n128 v19 = swift_release(*(void *)(v1 + 232));
    return (*(uint64_t (**)(__n128))(v1 + 8))(v19);
  }

  else
  {
    uint64_t v21 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    *(void *)(v1 + 56) = v2;
    *(void *)(v1 + swift_unknownObjectWeakDestroy(v0 + 16) = v1;
    *(void *)(v1 + 24) = sub_100177624;
    *(void *)(v1 + 176) = swift_continuation_init(v1 + 16, 1LL);
    *(void *)(v1 + 144) = _NSConcreteStackBlock;
    *(void *)(v1 + 15sub_1000E053C(v0 + 2) = 0x40000000LL;
    *(void *)(v1 + 160) = sub_100177D14;
    *(void *)(v1 + 168) = &unk_100276B60;
    [v21 allPlaylistsInFolder:0 completion:v1 + 144];
    return swift_continuation_await(v1 + 16);
  }

uint64_t sub_100177B38()
{
  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v3 = *(void *)(v0 + 272);
  uint64_t v4 = type metadata accessor for Logger(0LL, v2);
  sub_1000E96CC(v4, (uint64_t)qword_1002BC910);
  swift_errorRetain(v3);
  uint64_t v5 = swift_errorRetain(v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 272);
  if (v8)
  {
    BOOL v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)BOOL v10 = 138412290;
    swift_errorRetain(v9);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(void *)(v0 + 144) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v10 + 4);
    *uint64_t v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Can't get all playlists: %@", v10, 0xCu);
    uint64_t v13 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v11, 1LL, v13);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);

    swift_errorRelease(v9);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 272));
    swift_errorRelease(v9);
    swift_errorRelease(v9);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100177D14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_1000DFE10((uint64_t *)&unk_1002B7EE0);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *os_log_type_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    uint64_t v11 = sub_1000E0418(0LL, &qword_1002BCBC8, &OBJC_CLASS___MPModelPlaylist_ptr);
    **(void **)(*(void *)(v3 + 64) + 40LL) = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v11);
    return swift_continuation_throwingResume(v3);
  }

uint64_t sub_100177DBC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001768F0(a1);
}

id sub_100177DF4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 24);
  *a1 = v2;
  return v2;
}

uint64_t sub_100177E00@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BCD88);
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v6, v8);
  BOOL v10 = (char *)&v35 - v9;
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v35 = *(void *)(a1 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v13);
    uint64_t v14 = Text.init(_:tableName:bundle:comment:)(v11);
    uint64_t v36 = v15;
    uint64_t v37 = v14;
    uint64_t v17 = v16;
    uint64_t v19 = v18 & 1;
  }

  else
  {
    uint64_t v36 = 0LL;
    uint64_t v37 = 0LL;
    uint64_t v19 = 0LL;
    uint64_t v17 = 0LL;
  }

  uint64_t v42 = *(void *)(a1 + 32);
  uint64_t v40 = v42;
  sub_100185E6C((uint64_t *)(a1 + 40), (uint64_t)v41);
  uint64_t v20 = swift_allocObject(&unk_100276CE0, 65LL, 7LL);
  __int128 v21 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v20 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 3sub_1000E053C(v0 + 2) = v21;
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(a1 + 32);
  *(_BYTE *)(v20 + 64) = *(_BYTE *)(a1 + 48);
  sub_100185D70(&v42);
  sub_100185D70(&v42);
  sub_100185DCC(v11, v12, v35, v13);
  sub_10011B590(v41);
  uint64_t v22 = sub_1000DFE10(&qword_1002BCD90);
  uint64_t v23 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BA680, &OBJC_CLASS___MPIdentifierSet_ptr);
  uint64_t v24 = sub_1000E0374(&qword_1002BCD98, &qword_1002BCD90, (uint64_t)&protocol conformance descriptor for [A]);
  unint64_t v25 = sub_100186324();
  unint64_t v26 = sub_100186368();
  ForEach<>.init(_:content:)(&v40, sub_10018631C, v20, v22, v23, &type metadata for AddToPlaylistButton, v24, v25, v26);
  uint64_t v28 = v38;
  uint64_t v27 = v39;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  v29(v38, v10, v4);
  uint64_t v31 = v36;
  uint64_t v30 = v37;
  *a2 = v37;
  a2[1] = v31;
  a2[2] = v19;
  a2[3] = v17;
  uint64_t v32 = sub_1000DFE10(&qword_1002BCDB0);
  v29((char *)a2 + *(int *)(v32 + 48), v28, v4);
  sub_1000EBFD4(v30, v31, v19, v17);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v27 + 8);
  v33(v10, v4);
  v33(v28, v4);
  return sub_1000EC014(v30, v31, v19, v17);
}

uint64_t sub_1001780AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void **)(a2 + 40);
  char v7 = *(_BYTE *)(a2 + 48);
  *(void *)a3 = v6;
  *(_BYTE *)(a3 + 8) = v7;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  *(void *)(a3 + 24) = v3;
  *(void *)(a3 + 3sub_1000E053C(v0 + 2) = v5;
  id v8 = v6;
  id v9 = v4;
  return swift_bridgeObjectRetain(v5);
}

uint64_t sub_1001780F0()
{
  __int128 v1 = *(_OWORD *)(v0 + 16);
  v6[0] = *(_OWORD *)v0;
  v6[1] = v1;
  v6[2] = *(_OWORD *)(v0 + 32);
  char v7 = *(_BYTE *)(v0 + 48);
  v5[2] = v6;
  uint64_t v2 = sub_1000DFE10(&qword_1002BCD78);
  uint64_t v3 = sub_1000E0374(&qword_1002BCD80, &qword_1002BCD78, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  return Section<>.init(content:)(sub_1001862D4, v5, v2, v3);
}

uint64_t sub_100178184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v58 = a1;
  uint64_t v3 = sub_1000DFE10(&qword_1002BCE20);
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v59 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5, v7);
  uint64_t v57 = (char *)&v52 - v8;
  uint64_t v9 = type metadata accessor for TaskPriority(0LL);
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v56 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000DFE10(&qword_1002BCC70);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = sub_1000DFE10(&qword_1002BCE28);
  uint64_t v19 = __chkstk_darwin(v53, v18);
  __int128 v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19, v22);
  uint64_t v54 = (char *)&v52 - v23;
  sub_100185E6C((uint64_t *)v1, (uint64_t)v65);
  uint64_t v24 = *(void **)(v1 + 16);
  __int128 v62 = *(_OWORD *)(v1 + 24);
  sub_1000E011C((uint64_t)&v62, (uint64_t)&v64, &qword_1002BCE08);
  sub_1000E011C((uint64_t)&v62 + 8, (uint64_t)&v63, &qword_1002BCE30);
  uint64_t v25 = swift_allocObject(&unk_100276E40, 56LL, 7LL);
  __int128 v26 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v25 + 3sub_1000E053C(v0 + 2) = v26;
  *(void *)(v25 + 48) = *(void *)(v1 + 32);
  id v27 = v24;
  sub_10011B590(v65);
  sub_100185D70(&v64);
  sub_100112B50(&v63);
  uint64_t v28 = sub_1000DFE10(&qword_1002BCCA8);
  uint64_t v29 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  Button.init(action:label:)(sub_100186A34, v25, sub_1001770AC, 0LL, v28, v29);
  uint64_t v30 = swift_allocObject(&unk_100276E68, 56LL, 7LL);
  __int128 v31 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v30 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v30 + 3sub_1000E053C(v0 + 2) = v31;
  *(void *)(v30 + 48) = *(void *)(v2 + 32);
  id v32 = v27;
  sub_10011B590(v65);
  sub_100185D70(&v64);
  uint64_t v33 = sub_100112B50(&v63);
  static TaskPriority.userInitiated.getter(v33);
  uint64_t v34 = &v21[*(int *)(v53 + 36)];
  uint64_t v35 = type metadata accessor for _TaskModifier(0LL);
  uint64_t v37 = v55;
  uint64_t v36 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(&v34[*(int *)(v35 + 20)], v12, v56);
  *(void *)uint64_t v34 = &unk_1002BCE40;
  *((void *)v34 + 1) = v30;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v21, v17, v13);
  uint64_t v38 = v12;
  uint64_t v39 = (uint64_t)v54;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_1000E011C((uint64_t)v21, v39, &qword_1002BCE28);
  __int128 v60 = v62;
  sub_1000DFE10(&qword_1002BCE48);
  uint64_t v40 = State.wrappedValue.getter(&v61);
  uint64_t v42 = v61;
  if (v61)
  {
    __chkstk_darwin(v40, v41);
    *(&v52 - sub_1000E053C(v0 + 2) = v42;
    *(&v52 - 1) = v2;
    uint64_t v43 = sub_1000DFE10(&qword_1002BCE60);
    uint64_t v44 = sub_100186A9C( &qword_1002BCE68,  &qword_1002BCE60,  (void (*)(void))sub_100186B00,  (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
    uint64_t v45 = (uint64_t)v57;
    Section<>.init(content:)(sub_100186A94, &v52 - 4, v43, v44);
    swift_bridgeObjectRelease(v42);
    uint64_t v46 = sub_1000DFE10(&qword_1002BCE50);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56LL))(v45, 0LL, 1LL, v46);
  }

  else
  {
    uint64_t v47 = sub_1000DFE10(&qword_1002BCE50);
    uint64_t v45 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56LL))(v57, 1LL, 1LL, v47);
  }

  sub_1000E04D4(v39, (uint64_t)v21, &qword_1002BCE28);
  uint64_t v48 = v59;
  sub_1000E04D4(v45, v59, &qword_1002BCE20);
  uint64_t v49 = v58;
  sub_1000E04D4((uint64_t)v21, v58, &qword_1002BCE28);
  uint64_t v50 = sub_1000DFE10(&qword_1002BCE58);
  sub_1000E04D4(v48, v49 + *(int *)(v50 + 48), &qword_1002BCE20);
  sub_1000E03B4(v45, &qword_1002BCE20);
  sub_1000E03B4(v39, &qword_1002BCE28);
  sub_1000E03B4(v48, &qword_1002BCE20);
  return sub_1000E03B4((uint64_t)v21, &qword_1002BCE28);
}

uint64_t sub_100178640()
{
  uint64_t v0 = LocalizedStringKey.init(stringLiteral:)();
  return Label<>.init(_:systemImage:)(v0);
}

uint64_t sub_100178680(uint64_t a1)
{
  v1[17] = a1;
  uint64_t v2 = type metadata accessor for MainActor(0LL);
  v1[18] = static MainActor.shared.getter(v2);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[19] = v3;
  v1[20] = v4;
  return swift_task_switch(sub_1001786EC, v3, v4);
}

uint64_t sub_1001786EC()
{
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(*(void *)(v0 + 136) + 24LL);
  *(void *)(v0 + 168) = sub_1000DFE10(&qword_1002BCE48);
  State.wrappedValue.getter((void *)(v0 + 120));
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease(v1);
  if (v1)
  {
    __n128 v2 = swift_release(*(void *)(v0 + 144));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
  }

  else
  {
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    uint64_t v6 = *(void *)(v4 + 16);
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100178804;
    *(void *)(v0 + 11sub_1000E053C(v0 + 2) = swift_continuation_init(v0 + 16, 1LL);
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000LL;
    *(void *)(v0 + 96) = sub_100177D14;
    *(void *)(v0 + 104) = &unk_100276EA8;
    [v5 allPlaylistsInFolder:v6 completion:v0 + 80];
    return swift_continuation_await(v0 + 16);
  }

uint64_t sub_100178804()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 176) = v2;
  if (v2) {
    uint64_t v3 = sub_1001788BC;
  }
  else {
    uint64_t v3 = sub_100178860;
  }
  return swift_task_switch(v3, *(void *)(v1 + 152), *(void *)(v1 + 160));
}

uint64_t sub_100178860()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 136);
  swift_release(*(void *)(v0 + 144));
  uint64_t v3 = *(void *)(v0 + 120);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v2 + 24);
  *(void *)(v0 + 128) = v3;
  State.wrappedValue.setter(v0 + 128, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001788BC()
{
  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = type metadata accessor for Logger(0LL, v2);
  sub_1000E96CC(v4, (uint64_t)qword_1002BC910);
  swift_errorRetain(v3);
  uint64_t v5 = swift_errorRetain(v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 176);
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v11 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v10 = 138412290;
    swift_errorRetain(v9);
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError(v9);
    *(void *)(v0 + 80) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v10 + 4);
    *uint64_t v11 = v12;
    swift_errorRelease(v9);
    swift_errorRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Can't get playlists: %@", v10, 0xCu);
    uint64_t v13 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v11, 1LL, v13);
    swift_slowDealloc(v11, -1LL, -1LL);
    swift_slowDealloc(v10, -1LL, -1LL);

    swift_errorRelease(v9);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 176));
    swift_errorRelease(v9);
    swift_errorRelease(v9);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100178A98(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE3D8);
  sub_100185E6C((uint64_t *)a2, (uint64_t)v19);
  uint64_t v5 = *(void **)(a2 + 16);
  __int128 v16 = *(_OWORD *)(a2 + 24);
  sub_1000E011C((uint64_t)&v16, (uint64_t)&v18, &qword_1002BCE08);
  sub_1000E011C((uint64_t)&v16 + 8, (uint64_t)&v17, &qword_1002BCE30);
  uint64_t v6 = swift_allocObject(&unk_100276E90, 56LL, 7LL);
  __int128 v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v6 + 3sub_1000E053C(v0 + 2) = v7;
  *(void *)(v6 + 48) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain(a1);
  sub_10011B590(v19);
  id v8 = v5;
  sub_100185D70(&v18);
  sub_100112B50(&v17);
  uint64_t v9 = sub_1000DFE10(&qword_1002BCE80);
  uint64_t v10 = sub_1000DFE10(&qword_1002BCE78);
  uint64_t v11 = sub_1000E0374(&qword_1002BCE88, &qword_1002BCE80, (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v12 = sub_100185CC8( &qword_1002BCD28,  (unint64_t *)&qword_1002BA680,  &OBJC_CLASS___MPIdentifierSet_ptr,  (uint64_t)&protocol conformance descriptor for NSObject);
  uint64_t v13 = sub_100186B00();
  return ((uint64_t (*)(uint64_t *, uint64_t, id (*)@<X0>(id *@<X0>, void *@<X8>), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))ForEach<>.init(_:id:content:))( &v15,  KeyPath,  sub_100186BA8,  v6,  v9,  v10,  v11,  v12,  v13);
}

id sub_100178C1C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = *a1;
  id result = [*a1 name];
  __int128 v7 = result;
  if (result)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    uint64_t v10 = v9;

    __int128 v7 = *(void **)a2;
    uint64_t v11 = *(unsigned __int8 *)(a2 + 8);
    id v12 = v7;
    id result = v5;
  }

  else
  {
    uint64_t v11 = 0LL;
    id v5 = 0LL;
    uint64_t v8 = 0LL;
    uint64_t v10 = 0LL;
  }

  *a3 = v7;
  a3[1] = v11;
  a3[2] = v5;
  a3[3] = v8;
  a3[4] = v10;
  return result;
}

uint64_t sub_100178CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100178184(a1);
}

uint64_t sub_100178CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(_BYTE *)(v6 + 288) = a5;
  *(void *)(v6 + 248) = a4;
  *(void *)(v6 + 256) = a6;
  return swift_task_switch(sub_100178D08, 0LL, 0LL);
}

uint64_t sub_100178D08()
{
  if (*(_BYTE *)(v0 + 288))
  {
    if (*(_BYTE *)(v0 + 288) == 1)
    {
      uint64_t v1 = v0 + 144;
      uint64_t v3 = *(void **)(v0 + 248);
      uint64_t v2 = *(void *)(v0 + 256);
      uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
      *(void *)(v0 + 144) = v0;
      *(void *)(v0 + 15sub_1000E053C(v0 + 2) = sub_100178F30;
      *(void *)(v0 + 240) = swift_continuation_init(v0 + 144, 1LL);
      *(void *)(v0 + 208) = _NSConcreteStackBlock;
      *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0x40000000LL;
      *(void *)(v0 + 224) = sub_10016F200;
      *(void *)(v0 + 23sub_1000E053C(v0 + 2) = &unk_100276060;
      [v4 addPlaylist:v3 toPlaylist:v2 songsToAdd:0 completionHandler:v0 + 208];
    }

    else
    {
      uint64_t v1 = v0 + 16;
      uint64_t v9 = *(void **)(v0 + 248);
      uint64_t v8 = *(void *)(v0 + 256);
      uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
      *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_100178F90;
      *(void *)(v0 + 240) = swift_continuation_init(v0 + 16, 1LL);
      *(void *)(v0 + 208) = _NSConcreteStackBlock;
      *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0x40000000LL;
      *(void *)(v0 + 224) = sub_10016F200;
      *(void *)(v0 + 23sub_1000E053C(v0 + 2) = &unk_100276048;
      [v10 addAlbum:v9 toPlaylist:v8 songsToAdd:0 completionHandler:v0 + 208];
    }
  }

  else
  {
    uint64_t v1 = v0 + 80;
    uint64_t v6 = *(void **)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 256);
    __int128 v7 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 88) = sub_100178ED0;
    *(void *)(v0 + 240) = swift_continuation_init(v0 + 80, 1LL);
    *(void *)(v0 + 208) = _NSConcreteStackBlock;
    *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = 0x40000000LL;
    *(void *)(v0 + 224) = sub_10016F200;
    *(void *)(v0 + 23sub_1000E053C(v0 + 2) = &unk_100276078;
    [v7 addSong:v6 toPlaylist:v5 completionHandler:v0 + 208];
  }

  return swift_continuation_await(v1);
}

uint64_t sub_100178ED0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112LL);
  *(void *)(*(void *)v0 + 264LL) = v1;
  if (v1) {
    uint64_t v2 = sub_100179020;
  }
  else {
    uint64_t v2 = sub_100178FF0;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100178F30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176LL);
  *(void *)(*(void *)v0 + 272LL) = v1;
  if (v1) {
    uint64_t v2 = sub_1001793E8;
  }
  else {
    uint64_t v2 = sub_100186D20;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100178F90()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 280LL) = v1;
  if (v1) {
    uint64_t v2 = sub_1001797B0;
  }
  else {
    uint64_t v2 = sub_100186D20;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_100178FF0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100179020(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 264);

  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v4 = *(void **)(v1 + 248);
  uint64_t v5 = *(void **)(v1 + 256);
  uint64_t v6 = type metadata accessor for Logger(0LL, v3);
  sub_1000E96CC(v6, (uint64_t)qword_1002BC910);
  id v7 = v4;
  id v8 = v5;
  swift_errorRetain(v2);
  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = swift_errorRetain(v2);
  id v12 = (void *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v12, v13))
  {
    uint64_t v18 = *(void **)(v1 + 256);
    swift_errorRelease(v2);

    swift_errorRelease(v2);
    swift_errorRelease(v2);

    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v37 = v1 + 208;
  int v14 = *(unsigned __int8 *)(v1 + 288);
  uint64_t v15 = swift_slowAlloc(32LL, -1LL);
  uint64_t v35 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
  uint64_t v36 = swift_slowAlloc(64LL, -1LL);
  v38[0] = v36;
  *(_DWORD *)uint64_t v15 = 136315650;
  if (!v14)
  {
    id v16 = v9;
    id v17 = [v16 title];
    if (v17) {
      goto LABEL_10;
    }
LABEL_12:

    uint64_t v20 = 0LL;
    unint64_t v22 = 0xE000000000000000LL;
    goto LABEL_13;
  }

  if (v14 != 1)
  {
    id v16 = v9;
    id v17 = [v16 title];
    if (v17) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }

  id v16 = v9;
  id v17 = [v16 name];
  if (!v17) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v19 = v17;
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  unint64_t v22 = v21;

LABEL_13:
  log = (os_log_s *)v12;
  uint64_t v23 = *(void **)(v1 + 256);
  *(void *)(v1 + 208) = sub_1001B2690(v20, v22, v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 4);
  swift_bridgeObjectRelease(v22);

  *(_WORD *)(v15 + 1sub_1000E053C(v0 + 2) = 2080;
  id v24 = [v23 name];
  if (v24)
  {
    uint64_t v25 = v24;
    os_log_type_t v26 = v13;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    unint64_t v29 = v28;
  }

  else
  {
    os_log_type_t v26 = v13;
    uint64_t v27 = 0LL;
    unint64_t v29 = 0xE000000000000000LL;
  }

  uint64_t v30 = *(void **)(v1 + 256);
  *(void *)(v1 + 208) = sub_1001B2690(v27, v29, v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 14);
  swift_bridgeObjectRelease(v29);

  *(_WORD *)(v15 + 2sub_1000E053C(v0 + 2) = 2112;
  swift_errorRetain(v2);
  uint64_t v31 = _swift_stdlib_bridgeErrorToNSError(v2);
  *(void *)(v1 + 208) = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 24);
  *uint64_t v35 = v31;
  swift_errorRelease(v2);
  swift_errorRelease(v2);
  _os_log_impl( (void *)&_mh_execute_header,  log,  v26,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v15,  0x20u);
  uint64_t v32 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
  swift_arrayDestroy(v35, 1LL, v32);
  swift_slowDealloc(v35, -1LL, -1LL);
  swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v36, -1LL, -1LL);
  swift_slowDealloc(v15, -1LL, -1LL);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001793E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 272);

  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v4 = *(void **)(v1 + 248);
  uint64_t v5 = *(void **)(v1 + 256);
  uint64_t v6 = type metadata accessor for Logger(0LL, v3);
  sub_1000E96CC(v6, (uint64_t)qword_1002BC910);
  id v7 = v4;
  id v8 = v5;
  swift_errorRetain(v2);
  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = swift_errorRetain(v2);
  id v12 = (void *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v12, v13))
  {
    uint64_t v18 = *(void **)(v1 + 256);
    swift_errorRelease(v2);

    swift_errorRelease(v2);
    swift_errorRelease(v2);

    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v37 = v1 + 208;
  int v14 = *(unsigned __int8 *)(v1 + 288);
  uint64_t v15 = swift_slowAlloc(32LL, -1LL);
  uint64_t v35 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
  uint64_t v36 = swift_slowAlloc(64LL, -1LL);
  v38[0] = v36;
  *(_DWORD *)uint64_t v15 = 136315650;
  if (!v14)
  {
    id v16 = v9;
    id v17 = [v16 title];
    if (v17) {
      goto LABEL_10;
    }
LABEL_12:

    uint64_t v20 = 0LL;
    unint64_t v22 = 0xE000000000000000LL;
    goto LABEL_13;
  }

  if (v14 != 1)
  {
    id v16 = v9;
    id v17 = [v16 title];
    if (v17) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }

  id v16 = v9;
  id v17 = [v16 name];
  if (!v17) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v19 = v17;
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  unint64_t v22 = v21;

LABEL_13:
  log = (os_log_s *)v12;
  uint64_t v23 = *(void **)(v1 + 256);
  *(void *)(v1 + 208) = sub_1001B2690(v20, v22, v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 4);
  swift_bridgeObjectRelease(v22);

  *(_WORD *)(v15 + 1sub_1000E053C(v0 + 2) = 2080;
  id v24 = [v23 name];
  if (v24)
  {
    uint64_t v25 = v24;
    os_log_type_t v26 = v13;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    unint64_t v29 = v28;
  }

  else
  {
    os_log_type_t v26 = v13;
    uint64_t v27 = 0LL;
    unint64_t v29 = 0xE000000000000000LL;
  }

  uint64_t v30 = *(void **)(v1 + 256);
  *(void *)(v1 + 208) = sub_1001B2690(v27, v29, v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 14);
  swift_bridgeObjectRelease(v29);

  *(_WORD *)(v15 + 2sub_1000E053C(v0 + 2) = 2112;
  swift_errorRetain(v2);
  uint64_t v31 = _swift_stdlib_bridgeErrorToNSError(v2);
  *(void *)(v1 + 208) = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 24);
  *uint64_t v35 = v31;
  swift_errorRelease(v2);
  swift_errorRelease(v2);
  _os_log_impl( (void *)&_mh_execute_header,  log,  v26,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v15,  0x20u);
  uint64_t v32 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
  swift_arrayDestroy(v35, 1LL, v32);
  swift_slowDealloc(v35, -1LL, -1LL);
  swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v36, -1LL, -1LL);
  swift_slowDealloc(v15, -1LL, -1LL);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001797B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 280);

  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v4 = *(void **)(v1 + 248);
  uint64_t v5 = *(void **)(v1 + 256);
  uint64_t v6 = type metadata accessor for Logger(0LL, v3);
  sub_1000E96CC(v6, (uint64_t)qword_1002BC910);
  id v7 = v4;
  id v8 = v5;
  swift_errorRetain(v2);
  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = swift_errorRetain(v2);
  id v12 = (void *)Logger.logObject.getter(v11);
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled((os_log_t)v12, v13))
  {
    uint64_t v18 = *(void **)(v1 + 256);
    swift_errorRelease(v2);

    swift_errorRelease(v2);
    swift_errorRelease(v2);

    return (*(uint64_t (**)(void))(v1 + 8))();
  }

  uint64_t v37 = v1 + 208;
  int v14 = *(unsigned __int8 *)(v1 + 288);
  uint64_t v15 = swift_slowAlloc(32LL, -1LL);
  uint64_t v35 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
  uint64_t v36 = swift_slowAlloc(64LL, -1LL);
  v38[0] = v36;
  *(_DWORD *)uint64_t v15 = 136315650;
  if (!v14)
  {
    id v16 = v9;
    id v17 = [v16 title];
    if (v17) {
      goto LABEL_10;
    }
LABEL_12:

    uint64_t v20 = 0LL;
    unint64_t v22 = 0xE000000000000000LL;
    goto LABEL_13;
  }

  if (v14 != 1)
  {
    id v16 = v9;
    id v17 = [v16 title];
    if (v17) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }

  id v16 = v9;
  id v17 = [v16 name];
  if (!v17) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v19 = v17;
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  unint64_t v22 = v21;

LABEL_13:
  log = (os_log_s *)v12;
  uint64_t v23 = *(void **)(v1 + 256);
  *(void *)(v1 + 208) = sub_1001B2690(v20, v22, v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 4);
  swift_bridgeObjectRelease(v22);

  *(_WORD *)(v15 + 1sub_1000E053C(v0 + 2) = 2080;
  id v24 = [v23 name];
  if (v24)
  {
    uint64_t v25 = v24;
    os_log_type_t v26 = v13;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
    unint64_t v29 = v28;
  }

  else
  {
    os_log_type_t v26 = v13;
    uint64_t v27 = 0LL;
    unint64_t v29 = 0xE000000000000000LL;
  }

  uint64_t v30 = *(void **)(v1 + 256);
  *(void *)(v1 + 208) = sub_1001B2690(v27, v29, v38);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 14);
  swift_bridgeObjectRelease(v29);

  *(_WORD *)(v15 + 2sub_1000E053C(v0 + 2) = 2112;
  swift_errorRetain(v2);
  uint64_t v31 = _swift_stdlib_bridgeErrorToNSError(v2);
  *(void *)(v1 + 208) = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(v37, v1 + 216, v15 + 24);
  *uint64_t v35 = v31;
  swift_errorRelease(v2);
  swift_errorRelease(v2);
  _os_log_impl( (void *)&_mh_execute_header,  log,  v26,  "Can't add item [%s] to playlist [%s], error: %@",  (uint8_t *)v15,  0x20u);
  uint64_t v32 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
  swift_arrayDestroy(v35, 1LL, v32);
  swift_slowDealloc(v35, -1LL, -1LL);
  swift_arrayDestroy(v36, 2LL, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v36, -1LL, -1LL);
  swift_slowDealloc(v15, -1LL, -1LL);

  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_100179B78(void *a1, char a2, void *a3)
{
  uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  id v7 = (NSBundle *)[v6 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000014LL;
  v60._object = (void *)0xE000000000000000LL;
  v8._object = (void *)0x8000000100228B00LL;
  v9._uint64_t countAndFlagsBits = 0LL;
  v9._object = (void *)0xE000000000000000LL;
  v60._uint64_t countAndFlagsBits = 0LL;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, v7, v9, v60);

  uint64_t v11 = sub_1000DFE10(&qword_1002BB5B0);
  uint64_t v12 = swift_allocObject(v11, 112LL, 7LL);
  *(_OWORD *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001EBC10;
  os_log_type_t v13 = &selRef_lastSelectedIndexPath;
  char v57 = a2;
  uint64_t v56 = v6;
  if (a2)
  {
    if (a2 == 1)
    {
      uint64_t countAndFlagsBits = v10._countAndFlagsBits;
      id v15 = a1;
      id v16 = [v15 name];
      if (v16)
      {
        id v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        unint64_t v20 = v19;

        os_log_type_t v13 = &selRef_lastSelectedIndexPath;
        goto LABEL_13;
      }

      goto LABEL_12;
    }

    id v15 = a1;
    id v23 = [v15 title];
    if (v23)
    {
      unint64_t v22 = v23;
      uint64_t countAndFlagsBits = v10._countAndFlagsBits;
      goto LABEL_9;
    }

    uint64_t countAndFlagsBits = v10._countAndFlagsBits;
  }

  else
  {
    uint64_t countAndFlagsBits = v10._countAndFlagsBits;
    id v15 = a1;
    id v21 = [v15 title];
    if (v21)
    {
      unint64_t v22 = v21;
LABEL_9:
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      unint64_t v20 = v24;

      os_log_type_t v13 = &selRef_lastSelectedIndexPath;
      goto LABEL_13;
    }
  }

double sub_10017A084(uint64_t a1, void *a2, char a3, void *a4)
{
  uint64_t v7 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v7, v8);
  Swift::String v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  uint64_t v12 = swift_allocObject(&unk_100276030, 56LL, 7LL);
  *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
  *(void *)(v12 + 24) = 0LL;
  *(void *)(v12 + 3sub_1000E053C(v0 + 2) = a2;
  *(_BYTE *)(v12 + 40) = a3;
  *(void *)(v12 + 48) = a4;
  id v13 = a2;
  id v14 = a4;
  uint64_t v15 = sub_100125950((uint64_t)v10, (uint64_t)&unk_1002BCBB0, v12);
  *(void *)&double result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_10017A160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = sub_1000DFE10(&qword_1002BC100);
  uint64_t v64 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v68 = sub_1000DFE10(&qword_1002BCDC8);
  uint64_t v8 = __chkstk_darwin(v68, v7);
  Swift::String v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v11);
  id v13 = (char *)&v62 - v12;
  uint64_t v66 = sub_1000DFE10(&qword_1002BCDD0);
  __chkstk_darwin(v66, v14);
  uint64_t v67 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002BCDD8);
  uint64_t v63 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  unint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v65 = sub_1000DFE10(&qword_1002BCDE0);
  uint64_t v21 = __chkstk_darwin(v65, v20);
  id v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v21, v24);
  id v26 = (char *)&v62 - v25;
  uint64_t v27 = *(void **)(v1 + 16);
  if ([v27 type] == (id)3)
  {
    uint64_t v29 = __chkstk_darwin(3LL, v28);
    *(&v62 - sub_1000E053C(v0 + 2) = v2;
    __chkstk_darwin(v29, v30);
    *(&v62 - sub_1000E053C(v0 + 2) = v2;
    uint64_t v31 = sub_1000DFE10(&qword_1002BCCA8);
    uint64_t v32 = sub_1000E0374(&qword_1002BCCB0, &qword_1002BCCA8, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    unint64_t v33 = sub_100186744();
    Menu.init(content:label:)( sub_100186734,  &v62 - 4,  sub_10018673C,  &v62 - 4,  v31,  &type metadata for AddToPlaylistFolderView,  v32,  v33);
    unint64_t v70 = 0LL;
    unint64_t v71 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(50LL);
    swift_bridgeObjectRelease(v71);
    unint64_t v70 = 0xD00000000000002FLL;
    unint64_t v71 = 0x8000000100228FB0LL;
    uint64_t v34 = *(void *)(v2 + 24);
    NSString v35 = *(void **)(v2 + 32);
    swift_bridgeObjectRetain(v35);
    v36._uint64_t countAndFlagsBits = v34;
    v36._object = v35;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(v35);
    v37._uint64_t countAndFlagsBits = 93LL;
    v37._object = (void *)0xE100000000000000LL;
    String.append(_:)(v37);
    unint64_t v38 = v70;
    unint64_t v39 = v71;
    uint64_t v40 = sub_1000E0374(&qword_1002BCDF0, &qword_1002BCDD8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    View.accessibilityIdentifier(_:)(v38, v39, v16, v40);
    __n128 v41 = swift_bridgeObjectRelease(v39);
    (*(void (**)(char *, uint64_t, __n128))(v63 + 8))(v19, v16, v41);
    sub_1000E011C((uint64_t)v23, (uint64_t)v26, &qword_1002BCDE0);
    uint64_t v42 = v67;
    sub_1000E04D4((uint64_t)v26, v67, &qword_1002BCDE0);
    swift_storeEnumTagMultiPayload(v42, v66, 0LL);
    unint64_t v43 = sub_1001865FC();
    unint64_t v44 = sub_100186698();
    _ConditionalContent<>.init(storage:)(v42, v65, v68, v43, v44);
    uint64_t v45 = (uint64_t)v26;
    uint64_t v46 = &qword_1002BCDE0;
  }

  else
  {
    sub_100185E6C((uint64_t *)v2, (uint64_t)v72);
    id v47 = *(void **)(v2 + 32);
    uint64_t v63 = *(void *)(v2 + 24);
    uint64_t v48 = swift_allocObject(&unk_100276D90, 56LL, 7LL);
    __int128 v49 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v48 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v48 + 3sub_1000E053C(v0 + 2) = v49;
    *(void *)(v48 + 48) = *(void *)(v2 + 32);
    __chkstk_darwin(v48, v50);
    *(&v62 - sub_1000E053C(v0 + 2) = v2;
    sub_10011B590(v72);
    id v51 = v27;
    swift_bridgeObjectRetain(v47);
    Button.init(action:label:)( sub_100184DA4,  v48,  sub_1001865F4,  &v62 - 4,  &type metadata for Text,  &protocol witness table for Text);
    unint64_t v70 = 0LL;
    unint64_t v71 = 0xE000000000000000LL;
    _StringGuts.grow(_:)(49LL);
    swift_bridgeObjectRelease(v71);
    unint64_t v70 = 0xD00000000000002ELL;
    unint64_t v71 = 0x8000000100228F80LL;
    swift_bridgeObjectRetain(v47);
    v52._uint64_t countAndFlagsBits = v63;
    v52._object = v47;
    String.append(_:)(v52);
    swift_bridgeObjectRelease(v47);
    v53._uint64_t countAndFlagsBits = 93LL;
    v53._object = (void *)0xE100000000000000LL;
    String.append(_:)(v53);
    unint64_t v54 = v70;
    unint64_t v55 = v71;
    uint64_t v56 = sub_1000E0374(&qword_1002B8E00, &qword_1002BC100, (uint64_t)&protocol conformance descriptor for Button<A>);
    View.accessibilityIdentifier(_:)(v54, v55, v3, v56);
    __n128 v57 = swift_bridgeObjectRelease(v55);
    (*(void (**)(char *, uint64_t, __n128))(v64 + 8))(v6, v3, v57);
    sub_1000E011C((uint64_t)v10, (uint64_t)v13, &qword_1002BCDC8);
    uint64_t v58 = v67;
    sub_1000E04D4((uint64_t)v13, v67, &qword_1002BCDC8);
    swift_storeEnumTagMultiPayload(v58, v66, 1LL);
    unint64_t v59 = sub_1001865FC();
    unint64_t v60 = sub_100186698();
    _ConditionalContent<>.init(storage:)(v58, v65, v68, v59, v60);
    uint64_t v45 = (uint64_t)v13;
    uint64_t v46 = &qword_1002BCDC8;
  }

  return sub_1000E03B4(v45, v46);
}

__n128 sub_10017A6E0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void **)a1;
  char v4 = *(_BYTE *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v10 = 0LL;
  id v6 = v3;
  id v7 = v5;
  uint64_t v8 = sub_1000DFE10(&qword_1002BCE08);
  State.init(wrappedValue:)(&v11, &v10, v8);
  __n128 result = v11;
  *(void *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4;
  *(void *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *(__n128 *)(a2 + 24) = result;
  return result;
}

uint64_t sub_10017A758(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v4[0] = *(void *)(a1 + 24);
  v4[1] = v1;
  unint64_t v2 = sub_1000E95D4();
  swift_bridgeObjectRetain(v1);
  return Label<>.init<A>(_:systemImage:)(v4, 0x7265646C6F66LL, 0xE600000000000000LL, &type metadata for String, v2);
}

uint64_t sub_10017A7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  v9[0] = *(void *)(a1 + 24);
  v9[1] = v3;
  unint64_t v4 = sub_1000E95D4();
  swift_bridgeObjectRetain(v3);
  uint64_t result = Text.init<A>(_:)(v9, &type metadata for String, v4);
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7 & 1;
  *(void *)(a2 + 24) = v8;
  return result;
}

uint64_t sub_10017A82C@<X0>(uint64_t a1@<X8>)
{
  return sub_10017A160(a1);
}

void *sub_10017A864(void *a1)
{
  switch((unint64_t)[a1 type])
  {
    case 1uLL:
      id v3 = [a1 song];
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
      unint64_t v4 = v3;
      else {
        uint64_t v5 = 2LL;
      }
      id v6 = v4;
      id v7 = [v6 title];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
        uint64_t v11 = v10;
      }

      else
      {
        uint64_t v9 = 0LL;
        uint64_t v11 = 0LL;
      }

      unint64_t v52 = sub_10017CBAC(v4, 0, v9, v11, v5);

      swift_bridgeObjectRelease(v11);
      return (void *)v52;
    case 2uLL:
      id v12 = [a1 album];
      if (!v12) {
        return _swiftEmptyArrayStorage;
      }
      id v13 = v12;
      id v14 = v12;
      id v15 = [v14 title];
      if (v15)
      {
        uint64_t v16 = v15;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
        uint64_t v19 = v18;
      }

      else
      {
        uint64_t v17 = 0LL;
        uint64_t v19 = 0LL;
      }

      unint64_t v54 = v13;
      char v55 = 2;
      uint64_t v56 = v17;
      uint64_t v57 = v19;
      uint64_t v58 = 1LL;
      goto LABEL_39;
    case 3uLL:
      id v20 = [a1 artist];
      if (!v20) {
        return _swiftEmptyArrayStorage;
      }
      uint64_t v21 = v20;
      unint64_t v22 = sub_100183BA0(v20);
      goto LABEL_22;
    case 4uLL:
      id v23 = [a1 playlist];
      if (!v23) {
        return _swiftEmptyArrayStorage;
      }
      id v24 = v23;
      id v14 = v23;
      id v25 = [v14 name];
      if (v25)
      {
        id v26 = v25;
        uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        uint64_t v19 = v28;
      }

      else
      {
        uint64_t v27 = 0LL;
        uint64_t v19 = 0LL;
      }

      unint64_t v54 = v24;
      char v55 = 1;
      uint64_t v56 = v27;
      uint64_t v57 = v19;
      uint64_t v58 = 3LL;
LABEL_39:
      unint64_t v38 = (void *)sub_10017CBAC(v54, v55, v56, v57, v58);

      swift_bridgeObjectRelease(v19);
      return v38;
    case 6uLL:
      id v37 = [a1 tvEpisode];
      if (!v37) {
        return _swiftEmptyArrayStorage;
      }
      uint64_t v21 = v37;
      unint64_t v22 = (unint64_t)sub_100183EB0(v37);
LABEL_22:
      unint64_t v38 = (void *)v22;

      return v38;
    case 7uLL:
      id v39 = [a1 season];
      unint64_t v38 = _swiftEmptyArrayStorage;
      if (!v39) {
        return v38;
      }
      uint64_t v40 = v39;
      unint64_t v83 = (unint64_t)_swiftEmptyArrayStorage;
      id v41 = objc_msgSend(v39, "tvm_seasonTitle");
      if (v41)
      {
        uint64_t v42 = v41;
        uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        uint64_t v45 = v44;
      }

      else
      {
        uint64_t v43 = 0LL;
        uint64_t v45 = 0LL;
      }

      uint64_t v59 = objc_opt_self(&OBJC_CLASS___MPModelPlaylist);
      unint64_t v60 = (void *)swift_dynamicCastObjCClass(v40, v59);
      if (v60 && [v60 type] == (id)9) {
        goto LABEL_47;
      }
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      Swift::String v61 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
      v85._object = (void *)0xE000000000000000LL;
      v62._object = (void *)0x8000000100228AC0LL;
      v62._uint64_t countAndFlagsBits = 0xD000000000000013LL;
      v63._uint64_t countAndFlagsBits = 0LL;
      v63._object = (void *)0xE000000000000000LL;
      v85._uint64_t countAndFlagsBits = 0LL;
      Swift::String v64 = NSLocalizedString(_:tableName:bundle:value:comment:)(v62, (Swift::String_optional)0, v61, v63, v85);

      NSString v65 = String._bridgeToObjectiveC()();
      id v66 = [(id)objc_opt_self(UIImage) systemImageNamed:v65];

      uint64_t v67 = (void *)swift_allocObject(&unk_100276470, 40LL, 7LL);
      v67[2] = v43;
      v67[3] = v45;
      v67[4] = v40;
      id v68 = v40;
      uint64_t v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v64._countAndFlagsBits,  v64._object,  0LL,  0LL,  v66,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C04,  v67);
      goto LABEL_51;
    case 8uLL:
      id v46 = [a1 show];
      if (v46) {

      }
      return _swiftEmptyArrayStorage;
    case 9uLL:
      id v47 = [a1 movie];
      unint64_t v38 = _swiftEmptyArrayStorage;
      if (!v47) {
        return v38;
      }
      uint64_t v40 = v47;
      unint64_t v83 = (unint64_t)_swiftEmptyArrayStorage;
      id v48 = [v47 title];
      if (v48)
      {
        __int128 v49 = v48;
        uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        uint64_t v45 = v51;
      }

      else
      {
        uint64_t v50 = 0LL;
        uint64_t v45 = 0LL;
      }

      uint64_t v70 = objc_opt_self(&OBJC_CLASS___MPModelPlaylist);
      unint64_t v71 = (void *)swift_dynamicCastObjCClass(v40, v70);
      if (v71 && [v71 type] == (id)9)
      {
LABEL_47:

        swift_bridgeObjectRelease(v45);
        return _swiftEmptyArrayStorage;
      }

      else
      {
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        uint64_t v72 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
        v86._object = (void *)0xE000000000000000LL;
        v73._object = (void *)0x8000000100228AC0LL;
        v73._uint64_t countAndFlagsBits = 0xD000000000000013LL;
        v74._uint64_t countAndFlagsBits = 0LL;
        v74._object = (void *)0xE000000000000000LL;
        v86._uint64_t countAndFlagsBits = 0LL;
        Swift::String v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, v72, v74, v86);

        NSString v76 = String._bridgeToObjectiveC()();
        id v77 = [(id)objc_opt_self(UIImage) systemImageNamed:v76];

        uint64_t v78 = (void *)swift_allocObject(&unk_100276498, 40LL, 7LL);
        id v78[2] = v50;
        v78[3] = v45;
        v78[4] = v40;
        id v68 = v40;
        uint64_t v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v75._countAndFlagsBits,  v75._object,  0LL,  0LL,  v77,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C04,  v78);
LABEL_51:
        id v79 = v69;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v79);
        unint64_t v81 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v80 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v81 >= v80 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v80 > 1, v81 + 1, 1LL);
        }
        v82.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v81, v79);
        specialized Array._endMutation()(v82);

        unint64_t v38 = (void *)v83;
      }

      return v38;
    default:
      if (qword_1002B71F8 != -1) {
        swift_once(&qword_1002B71F8, sub_10016F274);
      }
      uint64_t v29 = type metadata accessor for Logger(0LL, v2);
      sub_1000E96CC(v29, (uint64_t)qword_1002BC910);
      uint64_t v30 = a1;
      uint64_t v31 = (os_log_s *)Logger.logObject.getter(v30);
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
        uint64_t v34 = (void *)swift_slowAlloc(8LL, -1LL);
        *(_DWORD *)unint64_t v33 = 138412290;
        unint64_t v83 = (unint64_t)v30;
        NSString v35 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v33 + 4);
        *uint64_t v34 = v30;

        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unknown object type for contextual menu: %@", v33, 0xCu);
        uint64_t v36 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
        swift_arrayDestroy(v34, 1LL, v36);
        swift_slowDealloc(v34, -1LL, -1LL);
        swift_slowDealloc(v33, -1LL, -1LL);
      }

      else
      {
      }

      return _swiftEmptyArrayStorage;
  }

uint64_t sub_10017B0A4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_1000DFE10(&qword_1002B8A00);
  uint64_t v6 = swift_allocObject(v5, 40LL, 7LL);
  *(_OWORD *)(v6 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  uint64_t v7 = swift_allocObject(&unk_1002763F8, 32LL, 7LL);
  *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  aBlock[4] = sub_100185154;
  uint64_t v15 = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_10017B60C;
  aBlock[3] = &unk_100276410;
  uint64_t v8 = _Block_copy(aBlock);
  uint64_t v9 = (void *)objc_opt_self(&OBJC_CLASS___UIDeferredMenuElement);
  id v10 = a2;
  id v11 = [v9 elementWithProvider:v8];
  _Block_release(v8);
  __n128 v12 = swift_release(v15);
  *(void *)(v6 + 3sub_1000E053C(v0 + 2) = v11;
  aBlock[0] = v6;
  specialized Array._endMutation()(v12);
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  0LL,  -1LL,  aBlock[0]);
}

double sub_10017B200(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v8, v9);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v11, 1LL, 1LL, v12);
  type metadata accessor for MainActor(0LL);
  id v13 = a3;
  uint64_t v14 = swift_retain(a2);
  uint64_t v15 = static MainActor.shared.getter(v14);
  uint64_t v16 = (void *)swift_allocObject(&unk_100276448, 64LL, 7LL);
  v16[2] = v15;
  v16[3] = &protocol witness table for MainActor;
  v16[4] = v13;
  v16[5] = a4;
  v16[6] = a1;
  v16[7] = a2;
  uint64_t v17 = sub_100125950((uint64_t)v11, (uint64_t)&unk_1002BCBE8, (uint64_t)v16);
  *(void *)&double result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_10017B308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  void v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  uint64_t v8 = type metadata accessor for MainActor(0LL);
  v7[6] = v8;
  v7[7] = static MainActor.shared.getter(v8);
  return swift_task_switch(sub_10017B35C, 0LL, 0LL);
}

uint64_t sub_10017B35C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___MPModelGenericObject);
  v0[8] = v2;
  id v3 = [v2 genericObjectWithModelObject:v1];
  v0[9] = v3;
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = sub_100181DB0((uint64_t)[v3 type]);
    v0[10] = v5;
    if (v5)
    {
      id v6 = v5;
      id v11 = (uint64_t (*)(void *, id))((char *)&dword_1002BCAF0 + dword_1002BCAF0);
      uint64_t v7 = (void *)swift_task_alloc(unk_1002BCAF4);
      v0[11] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_10017B454;
      return v11(v4, v6);
    }
  }

  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter(v0[6], &protocol witness table for MainActor);
  return swift_task_switch(sub_10017B5C0, v9, v10);
}

uint64_t sub_10017B454(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88LL);
  *(void *)(*(void *)v1 + 96LL) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10017B4B0, 0LL, 0LL);
}

uint64_t sub_10017B4B0()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 48);

  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10017B514, v3, v4);
}

uint64_t sub_10017B514()
{
  uint64_t v1 = *(void *)(v0 + 96);
  __n128 v2 = swift_release(*(void *)(v0 + 56));
  if (v1)
  {
    uint64_t v3 = *(void **)(v0 + 96);
    id v4 = objc_msgSend(*(id *)(v0 + 64), "genericObjectWithModelObject:", v3, v2.n128_f64[0]);
    if (v4)
    {
      id v5 = v4;
      id v6 = sub_10017A864(v4);

      uint64_t v3 = v5;
    }

    else
    {
      id v6 = _swiftEmptyArrayStorage;
    }
  }

  else
  {
    id v6 = _swiftEmptyArrayStorage;
  }

  (*(void (**)(void *, __n128))(v0 + 32))(v6, v2);
  __n128 v7 = swift_bridgeObjectRelease(v6);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

uint64_t sub_10017B5C0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10017B60C(uint64_t a1, void *aBlock)
{
  uint64_t v3 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  id v4 = _Block_copy(aBlock);
  uint64_t v5 = swift_allocObject(&unk_100275D68, 24LL, 7LL);
  *(void *)(v5 + swift_unknownObjectWeakDestroy(v0 + 16) = v4;
  swift_retain(v2);
  v3(sub_100184B54, v5);
  swift_release(v2);
  *(void *)&double result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_10017B67C(uint64_t a1, uint64_t a2)
{
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);
}

uint64_t sub_10017B7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4 = a4(a3);
  sub_1000E0418(0LL, &qword_1002BCB70, &OBJC_CLASS___UIMenu_ptr);
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  0LL,  -1LL,  v4);
}

void sub_10017B860(void *a1)
{
  id v2 = v1;
  unint64_t v133 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___MPModelSong);
  uint64_t v5 = swift_dynamicCastObjCClass(a1, v4);
  if (!v5) {
    return;
  }
  id v6 = (void *)v5;
  __n128 v7 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
  id v8 = a1;
  if (([v7 isPendingAddForMPObject:v6] & 1) != 0
    || [v6 isLibraryAdded])
  {
    id v9 = [v6 title];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      uint64_t v13 = v12;
    }

    else
    {
      uint64_t v11 = 0LL;
      uint64_t v13 = 0LL;
    }

    uint64_t v14 = objc_opt_self(&OBJC_CLASS___MPModelPlaylist);
    uint64_t v15 = (void *)swift_dynamicCastObjCClass(v6, v14);
    if (!v15 || [v15 type] != (id)9)
    {
      id v129 = v2;
      uint64_t v21 = v7;
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      unint64_t v22 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
      v23._uint64_t countAndFlagsBits = 0xD000000000000013LL;
      v134._object = (void *)0xE000000000000000LL;
      v23._object = (void *)0x8000000100228AC0LL;
      v24._uint64_t countAndFlagsBits = 0LL;
      v24._object = (void *)0xE000000000000000LL;
      v134._uint64_t countAndFlagsBits = 0LL;
      Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, v22, v24, v134);

      NSString v26 = String._bridgeToObjectiveC()();
      id v27 = [(id)objc_opt_self(UIImage) systemImageNamed:v26];

      uint64_t v28 = (void *)swift_allocObject(&unk_100275D00, 40LL, 7LL);
      v28[2] = v11;
      v28[3] = v13;
      v28[4] = v6;
      id v29 = v6;
      id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v25._countAndFlagsBits,  v25._object,  0LL,  0LL,  v27,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184A94,  v28);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      unint64_t v31 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v30 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v31 >= v30 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1LL);
      }
      v20.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v17);
      __n128 v7 = v21;
      id v2 = v129;
      goto LABEL_17;
    }

    swift_bridgeObjectRelease(v13);
  }

  uint64_t v16 = (void *)sub_10018411C(v6);
  if (!v16) {
    goto LABEL_18;
  }
  id v17 = v16;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  unint64_t v19 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v18 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v19 >= v18 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1LL);
  }
  v20.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
LABEL_17:
  specialized Array._endMutation()(v20);

LABEL_18:
  os_log_type_t v32 = (void *)objc_opt_self(&OBJC_CLASS___TVMSubscriptionManager);
  id v33 = v8;
  id v34 = [v32 sharedInstance];
  unsigned __int8 v35 = [v34 hasCloudLibrary];

  id v130 = v32;
  if ((v35 & 1) != 0)
  {
    uint64_t v36 = swift_allocObject(&unk_100275CB0, 33LL, 7LL);
    *(void *)(v36 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
    *(void *)(v36 + 24) = v6;
    *(_BYTE *)(v36 + 3sub_1000E053C(v0 + 2) = 0;
    aBlock[4] = sub_100184A84;
    uint64_t v132 = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_10017B60C;
    aBlock[3] = &unk_100275CC8;
    id v37 = _Block_copy(aBlock);
    unint64_t v38 = (void *)objc_opt_self(&OBJC_CLASS___UIDeferredMenuElement);
    id v39 = v33;
    id v40 = [v38 elementWithProvider:v37];
    _Block_release(v37);
    swift_release(v132);

    id v41 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
    unint64_t v43 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v42 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v43 >= v42 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1LL);
    }
    v44.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v41);
    specialized Array._endMutation()(v44);
  }

  else
  {
  }

  if ((sub_10017DA00() & 1) != 0)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    uint64_t v45 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v135._object = (void *)0xE000000000000000LL;
    v46._object = (void *)0x8000000100228A80LL;
    v46._uint64_t countAndFlagsBits = 0xD000000000000011LL;
    v47._uint64_t countAndFlagsBits = 0LL;
    v47._object = (void *)0xE000000000000000LL;
    v135._uint64_t countAndFlagsBits = 0LL;
    Swift::String v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, v45, v47, v135);

    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [(id)objc_opt_self(UIImage) systemImageNamed:v49];

    uint64_t v51 = swift_allocObject(&unk_100275C88, 24LL, 7LL);
    *(void *)(v51 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
    id v52 = v33;
    uint64_t v53 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v48._countAndFlagsBits,  v48._object,  0LL,  0LL,  v50,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184A78,  v51);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
    unint64_t v55 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v54 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v55 >= v54 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1LL);
    }
    v56.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
    specialized Array._endMutation()(v56);
  }

  id v57 = [(id)objc_opt_self(TVMusicPlayerManager) defaultPlayer];
  id v58 = [v57 playQueue];

  if (!v58)
  {
    __break(1u);
    return;
  }

  id v59 = [v6 identifiers];
  id v60 = [v58 sectionForItemWithIdentifiers:v59];

  if (v60)
  {
    if ([v60 type] == (id)4)
    {
      id v61 = [v60 playlist];
      if (v61)
      {
        Swift::String v62 = v61;
        uint64_t v128 = v7;
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        Swift::String v63 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
        v136._object = (void *)0xE000000000000000LL;
        v64._uint64_t countAndFlagsBits = 0x6C50206F74206F47LL;
        v64._object = (void *)0xEE007473696C7961LL;
        v65._uint64_t countAndFlagsBits = 0LL;
        v65._object = (void *)0xE000000000000000LL;
        v136._uint64_t countAndFlagsBits = 0LL;
        Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, v63, v65, v136);

        NSString v67 = String._bridgeToObjectiveC()();
        id v68 = [(id)objc_opt_self(UIImage) systemImageNamed:v67];

        uint64_t v69 = swift_allocObject(&unk_100275C60, 24LL, 7LL);
        *(void *)(v69 + swift_unknownObjectWeakDestroy(v0 + 16) = v62;
        id v70 = v62;
        uint64_t v71 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v66._countAndFlagsBits,  v66._object,  0LL,  0LL,  v68,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184A70,  v69);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v71);
        unint64_t v73 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v72 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v73 >= v72 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v72 > 1, v73 + 1, 1LL);
        }
        v74.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v73, v71);
        specialized Array._endMutation()(v74);

        __n128 v7 = v128;
      }
    }
  }

  if ((sub_100174380(v6, 2) & 1) != 0)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    Swift::String v75 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v137._object = (void *)0xE000000000000000LL;
    v76._uint64_t countAndFlagsBits = 0x6C41206F74206F47LL;
    v76._object = (void *)0xEB000000006D7562LL;
    v77._uint64_t countAndFlagsBits = 0LL;
    v77._object = (void *)0xE000000000000000LL;
    v137._uint64_t countAndFlagsBits = 0LL;
    Swift::String v78 = NSLocalizedString(_:tableName:bundle:value:comment:)(v76, (Swift::String_optional)0, v75, v77, v137);

    NSString v79 = String._bridgeToObjectiveC()();
    id v80 = [(id)objc_opt_self(UIImage) _systemImageNamed:v79];

    uint64_t v81 = swift_allocObject(&unk_100275C38, 25LL, 7LL);
    *(void *)(v81 + swift_unknownObjectWeakDestroy(v0 + 16) = v6;
    *(_BYTE *)(v81 + 24) = 0;
    id v82 = v33;
    id v83 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v78._countAndFlagsBits,  v78._object,  0LL,  0LL,  v80,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184A64,  v81);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v83);
    unint64_t v85 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v84 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v85 >= v84 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v84 > 1, v85 + 1, 1LL);
    }
    v86.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v85, v83);
    specialized Array._endMutation()(v86);
  }

  id v87 = [v6 artist];
  if (v87)
  {
    id v88 = v87;
    id v89 = [v87 identifiers];
    id v90 = [v89 universalStore];

    if (v90)
    {
      if ([v90 adamID])
      {
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        uint64_t v91 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
        v138._object = (void *)0xE000000000000000LL;
        v92._uint64_t countAndFlagsBits = 0x7241206F74206F47LL;
        v92._object = (void *)0xEC00000074736974LL;
        v93._uint64_t countAndFlagsBits = 0LL;
        v93._object = (void *)0xE000000000000000LL;
        v138._uint64_t countAndFlagsBits = 0LL;
        Swift::String v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v92, (Swift::String_optional)0, v91, v93, v138);

        NSString v95 = String._bridgeToObjectiveC()();
        id v96 = [(id)objc_opt_self(UIImage) systemImageNamed:v95];

        uint64_t v97 = swift_allocObject(&unk_100275C10, 32LL, 7LL);
        *(_BYTE *)(v97 + swift_unknownObjectWeakDestroy(v0 + 16) = 0;
        *(void *)(v97 + 24) = v88;
        id v98 = v88;
        uint64_t v99 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v94._countAndFlagsBits,  v94._object,  0LL,  0LL,  v96,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184A58,  v97);
        swift_unknownObjectRelease(v90);
        id v88 = v99;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v88);
        unint64_t v101 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v100 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v101 >= v100 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v100 > 1, v101 + 1, 1LL);
        }
        v102.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v101, v88);
        specialized Array._endMutation()(v102);
      }

      else
      {
        swift_unknownObjectRelease(v90);
      }
    }
  }

  uint64_t v103 = objc_opt_self(&OBJC_CLASS___MPModelArtist);
  uint64_t v104 = swift_dynamicCastObjCClass(v6, v103);
  if (v104)
  {
    id v105 = (id)v104;
    uint64_t v106 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicRadioUtilities);
    id v107 = v6;
    if ([v106 canPlayFromMPArtist:v105])
    {
      uint64_t v108 = sub_100184A4C;
      uint64_t v109 = &unk_100275BE8;
LABEL_53:
      uint64_t v112 = swift_allocObject(v109, 24LL, 7LL);
      *(void *)(v112 + swift_unknownObjectWeakDestroy(v0 + 16) = v105;
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      unint64_t v113 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
      swift_retain(v112);
      uint64_t v114 = (NSBundle *)[v113 mainBundle];
      v115._uint64_t countAndFlagsBits = 0xD000000000000018LL;
      v139._object = (void *)0xE000000000000000LL;
      v115._object = (void *)0x8000000100228A40LL;
      v116._uint64_t countAndFlagsBits = 0LL;
      v116._object = (void *)0xE000000000000000LL;
      v139._uint64_t countAndFlagsBits = 0LL;
      Swift::String v117 = NSLocalizedString(_:tableName:bundle:value:comment:)(v115, (Swift::String_optional)0, v114, v116, v139);

      NSString v118 = String._bridgeToObjectiveC()();
      id v119 = [(id)objc_opt_self(UIImage) systemImageNamed:v118];

      uint64_t v120 = swift_allocObject(&unk_100275BC0, 32LL, 7LL);
      *(void *)(v120 + swift_unknownObjectWeakDestroy(v0 + 16) = v108;
      *(void *)(v120 + 24) = v112;
      swift_retain(v112);
      uint64_t v121 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v117._countAndFlagsBits,  v117._object,  0LL,  0LL,  v119,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1000FF1AC,  v120);
      sub_1000E03F0((uint64_t)v108, v112);
      swift_release(v112);
      id v111 = v121;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v111);
      unint64_t v123 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v122 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v123 >= v122 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v122 > 1, v123 + 1, 1LL);
      }
      v124.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v123, v111);
      specialized Array._endMutation()(v124);
      goto LABEL_56;
    }
  }

  uint64_t v110 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicRadioUtilities);
  id v105 = v6;
  id v111 = v33;
  if ([v110 canPlayFromMPSong:v105])
  {
    uint64_t v108 = sub_100184A40;
    uint64_t v109 = &unk_100275B98;
    goto LABEL_53;
  }

id sub_10017C760(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  ObjCClassMetadatCGFloat a = swift_getObjCClassMetadata(a1);
  uint64_t v11 = swift_allocObject(a4, 32LL, 7LL);
  *(void *)(v11 + swift_unknownObjectWeakDestroy(v0 + 16) = ObjCClassMetadata;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = (void *)objc_opt_self(&OBJC_CLASS___UIContextMenuConfiguration);
  v18[4] = a5;
  uint64_t v19 = v11;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256LL;
  v18[2] = sub_100181D38;
  v18[3] = a6;
  uint64_t v13 = _Block_copy(v18);
  uint64_t v14 = v19;
  id v15 = a3;
  swift_retain(v11);
  id v16 =  objc_msgSend( v12,  "configurationWithIdentifier:previewProvider:actionProvider:",  0,  0,  v13,  swift_release(v14).n128_f64[0]);
  swift_release(v11);
  _Block_release(v13);

  return v16;
}

uint64_t sub_10017C864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a5;
  uint64_t v8 = type metadata accessor for MainActor(0LL);
  void v7[5] = static MainActor.shared.getter(v8);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v7[6] = v9;
  v7[7] = v10;
  return swift_task_switch(sub_10017C8D4, v9, v10);
}

uint64_t sub_10017C8D4()
{
  id v1 = sub_100181DB0((uint64_t)[*(id *)(v0 + 16) type]);
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    id v2 = v1;
    __n128 v7 = (char *)&dword_1002BCAF0 + dword_1002BCAF0;
    uint64_t v3 = (void *)swift_task_alloc(unk_1002BCAF4);
    *(void *)(v0 + 7sub_1000E053C(v0 + 2) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10017C988;
    return ((uint64_t (*)(void, id))v7)(*(void *)(v0 + 16), v2);
  }

  else
  {
    uint64_t v5 = *(void (**)(void, __n128))(v0 + 24);
    __n128 v6 = swift_release(*(void *)(v0 + 40));
    v5(0LL, v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_10017C988(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 72);
  *(void *)(*v1 + 80) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10017C9E0, *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_10017C9E0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release(*(void *)(v0 + 40));
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 80);
    uint64_t v3 = *(void **)(v0 + 64);
    uint64_t v4 = *(void (**)(void *))(v0 + 24);
    id v5 = v2;
    v4(v2);
  }

  else
  {
    uint64_t v3 = *(void **)(v0 + 64);
    (*(void (**)(void))(v0 + 24))(0LL);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10017CBAC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v133 = (unint64_t)_swiftEmptyArrayStorage;
  if (a2)
  {
    if (a2 == 1)
    {
      id v7 = a1;
LABEL_13:
      Swift::String v25 = 0LL;
      goto LABEL_19;
    }

    id v7 = a1;
    id v24 = [v7 artist];
    if (!v24) {
      goto LABEL_13;
    }
    goto LABEL_15;
  }

  id v8 = a1;
  if ((sub_100174380(v8, 2) & 1) != 0)
  {
    uint64_t v9 = a4;
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    uint64_t v10 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v134._object = (void *)0xE000000000000000LL;
    v11._uint64_t countAndFlagsBits = 0x6C41206F74206F47LL;
    v11._object = (void *)0xEB000000006D7562LL;
    v12._uint64_t countAndFlagsBits = 0LL;
    v12._object = (void *)0xE000000000000000LL;
    v134._uint64_t countAndFlagsBits = 0LL;
    Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, v10, v12, v134);

    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [(id)objc_opt_self(UIImage) _systemImageNamed:v14];

    uint64_t v16 = swift_allocObject(&unk_100276628, 25LL, 7LL);
    *(void *)(v16 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
    *(_BYTE *)(v16 + 24) = 1;
    id v17 = v8;
    id v18 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v13._countAndFlagsBits,  v13._object,  0LL,  0LL,  v15,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186BF8,  v16);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v18);
    unint64_t v20 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v19 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v20 >= v19 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1LL);
    }
    v21.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v20, v18);
    specialized Array._endMutation()(v21);

    a4 = v9;
  }

  id v7 = v8;
  id v22 = [v7 album];
  if (!v22
    || (Swift::String v23 = v22, v24 = [v22 artist], v23, !v24))
  {
    id v24 = [v7 artist];

    if (!v24) {
      goto LABEL_13;
    }
LABEL_15:
    uint64_t v125 = a4;
    goto LABEL_16;
  }

  uint64_t v125 = a4;

LABEL_16:
  id v26 = v24;
  id v27 = [v26 identifiers];
  id v28 = [v27 universalStore];

  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  id v29 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v135._object = (void *)0xE000000000000000LL;
  v30._uint64_t countAndFlagsBits = 0x7241206F74206F47LL;
  v30._object = (void *)0xEC00000074736974LL;
  v31._uint64_t countAndFlagsBits = 0LL;
  v31._object = (void *)0xE000000000000000LL;
  v135._uint64_t countAndFlagsBits = 0LL;
  Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, v29, v31, v135);

  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [(id)objc_opt_self(UIImage) systemImageNamed:v33];

  uint64_t v35 = swift_allocObject(&unk_100276600, 32LL, 7LL);
  *(_BYTE *)(v35 + swift_unknownObjectWeakDestroy(v0 + 16) = 1;
  *(void *)(v35 + 24) = v26;
  id v36 = v26;
  id v37 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v32._countAndFlagsBits,  v32._object,  0LL,  0LL,  v34,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186D24,  v35);
  swift_unknownObjectRelease(v28);
  id v38 = v37;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  unint64_t v40 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v39 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v40 >= v39 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1LL);
  }
  v41.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
  specialized Array._endMutation()(v41);

  Swift::String v25 = v36;
  a4 = v125;
LABEL_19:
  uint64_t v42 = objc_opt_self(&OBJC_CLASS___MPModelPlaylist);
  unint64_t v43 = (void *)swift_dynamicCastObjCClass(v7, v42);
  if (!v43 || [v43 type] != (id)9)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    __n128 v44 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v45._uint64_t countAndFlagsBits = 0xD000000000000013LL;
    v136._object = (void *)0xE000000000000000LL;
    v45._object = (void *)0x8000000100228AC0LL;
    v46._uint64_t countAndFlagsBits = 0LL;
    v46._object = (void *)0xE000000000000000LL;
    v136._uint64_t countAndFlagsBits = 0LL;
    Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, v44, v46, v136);

    NSString v48 = String._bridgeToObjectiveC()();
    id v49 = [(id)objc_opt_self(UIImage) systemImageNamed:v48];

    id v50 = (void *)swift_allocObject(&unk_1002764C0, 40LL, 7LL);
    _OWORD v50[2] = a3;
    v50[3] = a4;
    v50[4] = v7;
    swift_bridgeObjectRetain(a4);
    id v51 = v7;
    id v52 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v47._countAndFlagsBits,  v47._object,  0LL,  0LL,  v49,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C04,  v50);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    unint64_t v54 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v53 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v54 >= v53 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1LL);
    }
    v55.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55);
  }

  if (a2 == 1)
  {
    id v56 = a1;
    if (([v56 userEditableComponents] & 2) != 0)
    {
      id v57 = [v56 type];
      if (v57 == (id)3) {
        uint64_t v58 = 0xD00000000000001FLL;
      }
      else {
        uint64_t v58 = 0xD000000000000019LL;
      }
      if (v57 == (id)3) {
        id v59 = (void *)0x8000000100228C30LL;
      }
      else {
        id v59 = (void *)0x8000000100228C10LL;
      }
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      id v60 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
      v137._object = (void *)0xE000000000000000LL;
      v61._uint64_t countAndFlagsBits = v58;
      v61._object = v59;
      v62._uint64_t countAndFlagsBits = 0LL;
      v62._object = (void *)0xE000000000000000LL;
      v137._uint64_t countAndFlagsBits = 0LL;
      Swift::String v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, v60, v62, v137);
      swift_bridgeObjectRelease(v59);

      NSString v64 = String._bridgeToObjectiveC()();
      id v65 = [(id)objc_opt_self(UIImage) systemImageNamed:v64];

      uint64_t v66 = swift_allocObject(&unk_1002765D8, 32LL, 7LL);
      *(void *)(v66 + swift_unknownObjectWeakDestroy(v0 + 16) = v128;
      *(void *)(v66 + 24) = v56;
      id v67 = v56;
      uint64_t v68 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v63._countAndFlagsBits,  v63._object,  0LL,  0LL,  v65,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100185294,  v66);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
      unint64_t v70 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v69 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v70 >= v69 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1LL);
      }
      v71.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
      specialized Array._endMutation()(v71);
    }
  }

  unint64_t v72 = (void *)objc_opt_self(&OBJC_CLASS___TVMSubscriptionManager);
  id v73 = a1;
  id v74 = [v72 sharedInstance];
  unsigned int v75 = [v74 hasCloudLibrary];

  if (v75)
  {
    uint64_t v76 = swift_allocObject(&unk_100276588, 33LL, 7LL);
    *(void *)(v76 + swift_unknownObjectWeakDestroy(v0 + 16) = v128;
    *(void *)(v76 + 24) = a1;
    *(_BYTE *)(v76 + 3sub_1000E053C(v0 + 2) = a2;
    aBlock[4] = sub_100186CFC;
    uint64_t v132 = v76;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_10017B60C;
    aBlock[3] = &unk_1002765A0;
    Swift::String v77 = _Block_copy(aBlock);
    Swift::String v78 = (void *)objc_opt_self(&OBJC_CLASS___UIDeferredMenuElement);
    id v79 = v73;
    id v80 = [v78 elementWithProvider:v77];
    _Block_release(v77);
    swift_release(v132);
    id v81 = v80;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
    unint64_t v83 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v82 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v83 >= v82 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1LL);
    }
    v84.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v81);
    specialized Array._endMutation()(v84);
  }

  unint64_t v85 = sub_100182644(v7, a5);
  sub_10018836C((uint64_t)v85);
  uint64_t v86 = objc_opt_self(&OBJC_CLASS___MPModelArtist);
  uint64_t v87 = swift_dynamicCastObjCClass(v7, v86);
  if (v87)
  {
    uint64_t v88 = v87;
    id v89 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicRadioUtilities);
    id v90 = v7;
    if ([v89 canPlayFromMPArtist:v88])
    {
      uint64_t v127 = v25;
      uint64_t v91 = sub_100184A4C;
      Swift::String v92 = &unk_100276560;
LABEL_47:
      uint64_t v97 = swift_allocObject(v92, 24LL, 7LL);
      *(void *)(v97 + swift_unknownObjectWeakDestroy(v0 + 16) = v88;
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      id v98 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
      swift_retain(v97);
      uint64_t v99 = (NSBundle *)[v98 mainBundle];
      v100._uint64_t countAndFlagsBits = 0xD000000000000018LL;
      v138._object = (void *)0xE000000000000000LL;
      v100._object = (void *)0x8000000100228A40LL;
      v101._uint64_t countAndFlagsBits = 0LL;
      v101._object = (void *)0xE000000000000000LL;
      v138._uint64_t countAndFlagsBits = 0LL;
      Swift::String v102 = NSLocalizedString(_:tableName:bundle:value:comment:)(v100, (Swift::String_optional)0, v99, v101, v138);

      NSString v103 = String._bridgeToObjectiveC()();
      id v104 = [(id)objc_opt_self(UIImage) systemImageNamed:v103];

      uint64_t v105 = swift_allocObject(&unk_100276538, 32LL, 7LL);
      *(void *)(v105 + swift_unknownObjectWeakDestroy(v0 + 16) = v91;
      *(void *)(v105 + 24) = v97;
      swift_retain(v97);
      uint64_t v106 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v102._countAndFlagsBits,  v102._object,  0LL,  0LL,  v104,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10011383C,  v105);
      sub_1000E03F0((uint64_t)v91, v97);
      swift_release(v97);
      id v96 = v106;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
      unint64_t v108 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v107 = *(void *)((v133 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v108 >= v107 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v107 > 1, v108 + 1, 1LL);
      }
      v109.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v108, v96);
      specialized Array._endMutation()(v109);
      Swift::String v25 = v127;
      goto LABEL_50;
    }
  }

  uint64_t v93 = objc_opt_self(&OBJC_CLASS___MPModelSong);
  uint64_t v94 = swift_dynamicCastObjCClass(v7, v93);
  if (!v94) {
    goto LABEL_51;
  }
  uint64_t v88 = v94;
  NSString v95 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicRadioUtilities);
  id v96 = v7;
  if ([v95 canPlayFromMPSong:v88])
  {
    uint64_t v127 = v25;
    uint64_t v91 = sub_100184A40;
    Swift::String v92 = &unk_100276510;
    goto LABEL_47;
  }

uint64_t sub_10017DA00()
{
  id v1 = [(id)objc_opt_self(TVMusicLyricsRequest) sharedInstance];
  unsigned int v2 = [v1 storeFrontSupportsLyrics];

  if (v2 && (id v3 = [v0 lyrics]) != 0)
  {
    uint64_t v4 = v3;
    unsigned __int8 v5 = [v3 hasStoreLyrics];

    char v6 = v5 ^ 1;
  }

  else
  {
    char v6 = 1;
  }

  id v7 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
  unsigned int v8 = [v7 allowsLyricsFromCatalog];

  if ((v6 & 1) == 0 && v8) {
    return 1LL;
  }
  id v10 = [v0 lyrics];
  if (!v10) {
    return 0LL;
  }
  Swift::String v11 = v10;
  id v9 = [v10 hasLibraryLyrics];

  return (uint64_t)v9;
}

double sub_10017DB28(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5, uint64_t a6)
{
  uint64_t v12 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v12, v13);
  id v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v15, 1LL, 1LL, v16);
  type metadata accessor for MainActor(0LL);
  id v17 = a3;
  id v18 = a5;
  uint64_t v19 = swift_retain(a2);
  uint64_t v20 = static MainActor.shared.getter(v19);
  uint64_t v21 = swift_allocObject(&unk_100275F00, 80LL, 7LL);
  *(void *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = v20;
  *(void *)(v21 + 24) = &protocol witness table for MainActor;
  *(void *)(v21 + 3sub_1000E053C(v0 + 2) = a3;
  *(_BYTE *)(v21 + 40) = a4;
  *(void *)(v21 + 48) = v18;
  *(void *)(v21 + 56) = a6;
  *(void *)(v21 + 64) = a1;
  *(void *)(v21 + 7sub_1000E053C(v0 + 2) = a2;
  uint64_t v22 = sub_100125950((uint64_t)v15, (uint64_t)&unk_1002BCBA0, v21);
  *(void *)&double result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_10017DC4C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 176) = a8;
  *(void *)(v8 + 184) = v13;
  *(void *)(v8 + 160) = a6;
  *(void *)(v8 + 168) = a7;
  *(_BYTE *)(v8 + 264) = a5;
  *(void *)(v8 + 15sub_1000E053C(v0 + 2) = a4;
  uint64_t v9 = type metadata accessor for MainActor(0LL);
  *(void *)(v8 + 19sub_1000E053C(v0 + 2) = static MainActor.shared.getter(v9);
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(void *)(v8 + 200) = v10;
  *(void *)(v8 + 208) = v11;
  return swift_task_switch(sub_10017DCCC, v10, v11);
}

uint64_t sub_10017DCCC()
{
  *(void *)(v0 + 144) = _swiftEmptyArrayStorage;
  char v1 = *(_BYTE *)(v0 + 264);
  unsigned int v2 = *(void **)(v0 + 152);
  *(void *)(v0 + 2swift_unknownObjectWeakDestroy(v0 + 16) = sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  id v3 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v27._object = (void *)0xE000000000000000LL;
  v4._uint64_t countAndFlagsBits = 0x79616C502077654ELL;
  v4._object = (void *)0xEC0000007473696CLL;
  v5._uint64_t countAndFlagsBits = 0LL;
  v5._object = (void *)0xE000000000000000LL;
  v27._uint64_t countAndFlagsBits = 0LL;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, v3, v5, v27);

  NSString v7 = String._bridgeToObjectiveC()();
  uint64_t v8 = (void *)objc_opt_self(&OBJC_CLASS___UIImage);
  *(void *)(v0 + 224) = v8;
  id v9 = [v8 systemImageNamed:v7];

  uint64_t v10 = swift_allocObject(&unk_100275F28, 25LL, 7LL);
  *(void *)(v10 + swift_unknownObjectWeakDestroy(v0 + 16) = v2;
  *(_BYTE *)(v10 + 24) = v1;
  id v11 = v2;
  uint64_t v12 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v6._countAndFlagsBits,  v6._object,  0LL,  0LL,  v9,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184D68,  v10);
  *(void *)(v0 + 23sub_1000E053C(v0 + 2) = v12;
  *(void *)(v0 + 240) = sub_1000E0418(0LL, &qword_1002BCB70, &OBJC_CLASS___UIMenu_ptr);
  uint64_t v13 = sub_1000DFE10(&qword_1002B8A00);
  *(void *)(v0 + 248) = v13;
  uint64_t v14 = swift_allocObject(v13, 40LL, 7LL);
  *(_OWORD *)(v14 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  *(void *)(v14 + 3sub_1000E053C(v0 + 2) = v12;
  uint64_t v26 = v14;
  specialized Array._endMutation()((__n128)xmmword_1001E9180);
  id v15 = v12;
  uint64_t v16 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v26);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  unint64_t v18 = *(void *)((*(void *)(v0 + 144) & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v17 = *(void *)((*(void *)(v0 + 144) & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v18 >= v17 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1LL);
  }
  uint64_t v19 = v0 + 16;
  uint64_t v20 = *(void *)(v0 + 160);
  v21.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v21);
  *(void *)(v0 + 136) = _swiftEmptyArrayStorage;
  uint64_t v22 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
  *(void *)(v0 + 56) = v0 + 128;
  *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_10017DFD4;
  uint64_t v23 = swift_continuation_init(v0 + 16, 1LL);
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  uint64_t v24 = (void *)(v0 + 80);
  v24[1] = 0x40000000LL;
  v24[2] = sub_100177D14;
  v24[3] = &unk_100275F40;
  void v24[4] = v23;
  [v22 allPlaylistsInFolder:v20 completion:v24];
  return swift_continuation_await(v19);
}

uint64_t sub_10017DFD4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 256) = v2;
  if (v2) {
    id v3 = sub_10017E538;
  }
  else {
    id v3 = sub_10017E030;
  }
  return swift_task_switch(v3, *(void *)(v1 + 200), *(void *)(v1 + 208));
}

uint64_t sub_10017E030()
{
  uint64_t v1 = *(void *)(v0 + 128);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0) {
      uint64_t v35 = *(void *)(v0 + 128);
    }
    else {
      uint64_t v35 = v1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*(void *)(v0 + 128));
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v1);
    Swift::String v4 = (uint64_t *)(v0 + 136);
    if (!v3) {
      goto LABEL_23;
    }
  }

  else
  {
    unint64_t v2 = v1 & 0xFFFFFFFFFFFFF8LL;
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    Swift::String v4 = (uint64_t *)(v0 + 136);
    if (!v3) {
      goto LABEL_23;
    }
  }

  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }

  uint64_t v5 = 0LL;
  unint64_t v56 = v1 & 0xC000000000000001LL;
  uint64_t v54 = v3;
  uint64_t v55 = v1;
  do
  {
    if (v56) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1);
    }
    else {
      id v19 = *(id *)(v1 + 8 * v5 + 32);
    }
    uint64_t v20 = v19;
    if ([v19 type] == (id)3)
    {
      uint64_t v6 = *(void *)(v0 + 168);
      char v7 = *(_BYTE *)(v0 + 264);
      uint64_t v8 = *(void **)(v0 + 152);
      uint64_t v9 = swift_allocObject(&unk_100275F90, 48LL, 7LL);
      *(void *)(v9 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
      *(_BYTE *)(v9 + 24) = v7;
      *(void *)(v9 + 3sub_1000E053C(v0 + 2) = v20;
      *(void *)(v9 + 40) = v6;
      *(void *)(v0 + 11sub_1000E053C(v0 + 2) = sub_100186CAC;
      *(void *)(v0 + 120) = v9;
      *(void *)(v0 + 80) = _NSConcreteStackBlock;
      *(void *)(v0 + 88) = 1107296256LL;
      *(void *)(v0 + 96) = sub_10017B60C;
      *(void *)(v0 + 104) = &unk_100275FA8;
      uint64_t v10 = _Block_copy((const void *)(v0 + 80));
      id v11 = (void *)objc_opt_self(&OBJC_CLASS___UIDeferredMenuElement);
      id v12 = v8;
      id v13 = v20;
      id v14 = [v11 elementWithProvider:v10];
      _Block_release(v10);
      swift_release(*(void *)(v0 + 120));
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      unint64_t v17 = *(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v16 = *(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v17 >= v16 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
      }
      v18.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
      specialized Array._endMutation()(v18);
    }

    else
    {
      id v21 = [v20 name];
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        unint64_t v25 = v24;
      }

      else
      {
        uint64_t v23 = 0LL;
        unint64_t v25 = 0xE000000000000000LL;
      }

      char v26 = *(_BYTE *)(v0 + 264);
      Swift::String v27 = *(void **)(v0 + 152);
      uint64_t v28 = swift_allocObject(&unk_100275F68, 40LL, 7LL);
      *(void *)(v28 + swift_unknownObjectWeakDestroy(v0 + 16) = v27;
      *(_BYTE *)(v28 + 24) = v26;
      *(void *)(v28 + 3sub_1000E053C(v0 + 2) = v20;
      id v29 = v27;
      id v30 = v20;
      id v31 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v23,  v25,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184C24,  v28);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
      unint64_t v33 = *(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v32 = *(void *)((*(void *)(v0 + 136) & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v33 >= v32 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1LL);
      }
      v34.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v31);
      specialized Array._endMutation()(v34);

      uint64_t v3 = v54;
      uint64_t v1 = v55;
    }

    ++v5;
  }

  while (v3 != v5);
LABEL_23:
  swift_bridgeObjectRelease(v1);
  uint64_t v36 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
    if (v36 < 0) {
      uint64_t v38 = *v4;
    }
    else {
      uint64_t v38 = v36 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(*v4);
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v36);
    if (v39 >= 1)
    {
LABEL_25:
      uint64_t v3 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v36);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
      Swift::String v4 = *(uint64_t **)((*(void *)(v0 + 144) & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v2 = *(void *)((*(void *)(v0 + 144) & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if ((unint64_t)v4 < v2 >> 1)
      {
LABEL_26:
        v37.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v3);
        specialized Array._endMutation()(v37);
        goto LABEL_32;
      }

uint64_t sub_10017E538()
{
  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v3 = (uint64_t *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 256);
  uint64_t v5 = type metadata accessor for Logger(0LL, v2);
  sub_1000E96CC(v5, (uint64_t)qword_1002BC910);
  swift_errorRetain(v4);
  uint64_t v6 = swift_errorRetain(v4);
  char v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 256);
  if (v9)
  {
    id v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v12 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v11 = 138412290;
    swift_errorRetain(v10);
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError(v10);
    *(void *)(v0 + 80) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v11 + 4);
    *id v12 = v13;
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Can't get playlists: %@", v11, 0xCu);
    uint64_t v14 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v12, 1LL, v14);
    swift_slowDealloc(v12, -1LL, -1LL);
    uint64_t v15 = v11;
    uint64_t v3 = (uint64_t *)(v0 + 136);
    swift_slowDealloc(v15, -1LL, -1LL);

    swift_errorRelease(v10);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 256));
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }

  uint64_t v16 = *v3;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0) {
      uint64_t v21 = v16;
    }
    else {
      uint64_t v21 = v16 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v16);
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v16);
    if (v22 >= 1) {
      goto LABEL_8;
    }
LABEL_15:
    swift_bridgeObjectRelease(v16);
    goto LABEL_16;
  }

id sub_10017E934()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContextMenus();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for ContextMenus()
{
  return objc_opt_self(&OBJC_CLASS___TVMContextMenus);
}

void sub_10017E984(void *a1)
{
}

uint64_t sub_10017E990(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc(dword_1002BCAD4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_100174928(a1, v4, v5, v6);
}

void sub_10017E9FC(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v5, v6);
  os_log_type_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URL(0LL);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)&v28 - v16;
  if ((a2 & 1) != 0)
  {
    [(id)objc_opt_self(TVMusicLibraryUtilities) showPageForArtist:a3];
    return;
  }

  if ([(id)objc_opt_self(TVMusicApplication) usingMusicUI])
  {
    if (qword_1002B7218 != -1) {
      swift_once(&qword_1002B7218, sub_100188700);
    }
    sub_100187A84(a3);
  }

  else
  {
    id v18 = [a3 identifiers];
    id v19 = [v18 universalStore];

    if (!v19) {
      return;
    }
    id v20 = [v19 adamID];
    swift_unknownObjectRelease(v19);
    id v21 = [objc_allocWithZone(NSNumber) initWithLongLong:v20];
    id v22 = sub_100092E80(v21);

    if (v22)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v22);

      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v23(v8, v14, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0LL, 1LL, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1LL, v9) != 1)
      {
        v23(v17, v8, v9);
        id v24 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
        URL._bridgeToObjectiveC()(v25);
        uint64_t v27 = v26;
        [v24 openJavascriptAppWithURL:v26];
        swift_unknownObjectRelease(v24);

        (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
        return;
      }
    }

    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1LL, 1LL, v9);
    }

    sub_1000E03B4((uint64_t)v8, &qword_1002B7890);
  }

double sub_10017ECD4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56LL))(v10, 1LL, 1LL, v11);
  type metadata accessor for MainActor(0LL);
  swift_bridgeObjectRetain(a3);
  id v12 = a4;
  uint64_t v13 = static MainActor.shared.getter(v12);
  uint64_t v14 = (void *)swift_allocObject(&unk_100275D28, 56LL, 7LL);
  void v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  v14[4] = a2;
  void v14[5] = a3;
  v14[6] = v12;
  uint64_t v15 = sub_100125950((uint64_t)v10, (uint64_t)&unk_1002BCB80, (uint64_t)v14);
  *(void *)&double result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_10017EDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[15] = a4;
  uint64_t v7 = type metadata accessor for MainActor(0LL);
  v6[18] = static MainActor.shared.getter(v7);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[19] = v8;
  v6[20] = v9;
  return swift_task_switch(sub_10017EE40, v8, v9);
}

uint64_t sub_10017EE40()
{
  if (v0[16]) {
    NSString v1 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v1 = 0LL;
  }
  uint64_t v2 = v0 + 2;
  v0[21] = v1;
  uint64_t v3 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicAlerts);
  v0[7] = v0 + 22;
  v0[2] = v0;
  v0[3] = sub_10017EF0C;
  uint64_t v4 = swift_continuation_init(v0 + 2, 0LL);
  v0[10] = _NSConcreteStackBlock;
  uint64_t v5 = v0 + 10;
  v5[1] = 0x40000000LL;
  v5[2] = sub_100170804;
  void v5[3] = &unk_100275D40;
  void v5[4] = v4;
  [v3 showAlertForLibraryDeleteConfirmationWithItemName:v1 completion:v5];
  return swift_continuation_await(v2);
}

uint64_t sub_10017EF0C()
{
  return swift_task_switch(sub_10017EF50, *(void *)(*(void *)v0 + 152LL), *(void *)(*(void *)v0 + 160LL));
}

uint64_t sub_10017EF50()
{
  NSString v1 = *(void **)(v0 + 168);
  swift_release(*(void *)(v0 + 144));
  int v2 = *(unsigned __int8 *)(v0 + 176);

  if (v2 == 1) {
    [(id)objc_opt_self(TVMusicLibraryUtilities) removeMPObjectFromLibrary:*(void *)(v0 + 136)];
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10017EFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlaybackHelper);
  id v8 = [objc_allocWithZone(NSNumber) initWithLongLong:a3];
  [v7 playItemType:a2 withPersistentID:v8 playbackAction:a4];
}

uint64_t sub_10017F038()
{
  uint64_t v0 = sub_1000DFE10(&qword_1002BCC00);
  uint64_t inited = swift_initStackObject(v0, &v12);
  *(_OWORD *)(inited + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001EACB0;
  *(void *)(inited + 3sub_1000E053C(v0 + 2) = 2LL;
  uint64_t v2 = inited + 32;
  unint64_t v3 = sub_100194000(&off_10026FB88);
  uint64_t v4 = sub_1000DFE10(&qword_1002BCC08);
  swift_arrayDestroy(&unk_10026FBA8, 4LL, v4);
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = 6LL;
  unint64_t v5 = sub_100194000(&off_10026FC08);
  swift_arrayDestroy(&unk_10026FC28, 4LL, v4);
  *(void *)(inited + 56) = v5;
  *(void *)(inited + 64) = 3LL;
  unint64_t v6 = sub_100194000(&off_10026FC88);
  swift_arrayDestroy(&unk_10026FCA8, 4LL, v4);
  *(void *)(inited + 7sub_1000E053C(v0 + 2) = v6;
  *(void *)(inited + 80) = 1LL;
  unint64_t v7 = sub_100194000(&off_10026FD08);
  swift_arrayDestroy(&unk_10026FD28, 4LL, v4);
  *(void *)(inited + 88) = v7;
  unint64_t v8 = sub_10019410C((void *)inited);
  swift_setDeallocating(inited);
  uint64_t v9 = *(void *)(inited + 16);
  uint64_t v10 = sub_1000DFE10(&qword_1002BCC10);
  uint64_t result = swift_arrayDestroy(v2, v9, v10);
  qword_1002C5EB8 = v8;
  return result;
}

double sub_10017F190(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v10 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56LL))(v13, 1LL, 1LL, v14);
  type metadata accessor for MainActor(0LL);
  id v15 = a4;
  uint64_t v16 = swift_retain(a2);
  uint64_t v17 = static MainActor.shared.getter(v16);
  uint64_t v18 = swift_allocObject(&unk_100275D90, 72LL, 7LL);
  *(void *)(v18 + swift_unknownObjectWeakDestroy(v0 + 16) = v17;
  *(void *)(v18 + 24) = &protocol witness table for MainActor;
  *(void *)(v18 + 3sub_1000E053C(v0 + 2) = a3;
  *(void *)(v18 + 40) = a4;
  *(_BYTE *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = a1;
  *(void *)(v18 + 64) = a2;
  uint64_t v19 = sub_100125950((uint64_t)v13, (uint64_t)&unk_1002BCB90, v18);
  *(void *)&double result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_10017F298( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 2swift_unknownObjectWeakDestroy(v0 + 16) = a7;
  *(void *)(v8 + 224) = a8;
  *(_BYTE *)(v8 + 288) = a6;
  *(void *)(v8 + 200) = a4;
  *(void *)(v8 + 208) = a5;
  uint64_t v9 = type metadata accessor for MainActor(0LL);
  *(void *)(v8 + 23sub_1000E053C(v0 + 2) = static MainActor.shared.getter(v9);
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(void *)(v8 + 240) = v10;
  *(void *)(v8 + 248) = v11;
  return swift_task_switch(sub_10017F30C, v10, v11);
}

uint64_t sub_10017F30C()
{
  NSString v1 = v0 + 10;
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
  v0[32] = v2;
  v0[15] = v0 + 24;
  v0[10] = v0;
  v0[11] = sub_10017F3BC;
  uint64_t v3 = swift_continuation_init(v0 + 10, 1LL);
  v0[18] = _NSConcreteStackBlock;
  uint64_t v4 = v0 + 18;
  v4[1] = 0x40000000LL;
  void v4[2] = sub_100177D14;
  void v4[3] = &unk_100275DA8;
  v4[4] = v3;
  [v2 recentlyEditedPlaylistsWithMaxCount:3 completion:v4];
  return swift_continuation_await(v1);
}

uint64_t sub_10017F3BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 264) = v2;
  if (v2) {
    uint64_t v3 = sub_10018021C;
  }
  else {
    uint64_t v3 = sub_10017F418;
  }
  return swift_task_switch(v3, *(void *)(v1 + 240), *(void *)(v1 + 248));
}

uint64_t sub_10017F418()
{
  uint64_t v1 = v0 + 192;
  uint64_t v2 = *(void *)(v0 + 192);
  Swift::String aBlock = (void *)(v0 + 144);
  if (!((unint64_t)v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t result = swift_bridgeObjectRetain(v2);
    if (v3) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease(v2);
LABEL_23:
    *(void *)(v0 + 27sub_1000E053C(v0 + 2) = _swiftEmptyArrayStorage;
    __n128 v36 = *(void **)(v0 + 256);
    swift_bridgeObjectRelease(v2);
    *(void *)(v0 + 56) = v1;
    *(void *)(v0 + swift_unknownObjectWeakDestroy(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_10017F80C;
    *(void *)(v0 + 176) = swift_continuation_init(v0 + 16, 1LL);
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 0x40000000LL;
    *(void *)(v0 + 160) = sub_100177D14;
    *(void *)(v0 + 168) = &unk_100275DE8;
    [v36 allPlaylistsInFolder:0 completion:aBlock];
    return swift_continuation_await(v0 + 16);
  }

  if (v2 < 0) {
    uint64_t v35 = *(void *)(v0 + 192);
  }
  else {
    uint64_t v35 = v2 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(v2);
  uint64_t result = _CocoaArrayWrapper.endIndex.getter(v35);
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0LL;
    uint64_t v39 = *(void **)(v0 + 208);
    unint64_t v40 = v2 & 0xC000000000000001LL;
    uint64_t v37 = v2;
    do
    {
      if (v40) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else {
        id v14 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v15 = v14;
      id v16 = [v14 name];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
        uint64_t v20 = v19;

        id v21 = [v15 type];
        char v22 = *(_BYTE *)(v0 + 288);
        uint64_t v23 = *(void *)(v0 + 208);
        if (v21 == (id)3)
        {
          uint64_t v24 = *(void *)(v0 + 200);
          swift_bridgeObjectRelease(v20);
          uint64_t v25 = swift_allocObject(&unk_100275EB0, 48LL, 7LL);
          *(void *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = v23;
          *(_BYTE *)(v25 + 24) = v22;
          *(void *)(v25 + 3sub_1000E053C(v0 + 2) = v15;
          *(void *)(v25 + 40) = v24;
          *(void *)(v0 + 176) = sub_100186CAC;
          *(void *)(v0 + 184) = v25;
          *(void *)(v0 + 144) = _NSConcreteStackBlock;
          *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 1107296256LL;
          *(void *)(v0 + 160) = sub_10017B60C;
          *(void *)(v0 + 168) = &unk_100275EC8;
          char v26 = _Block_copy(aBlock);
          uint64_t v27 = (void *)objc_opt_self(&OBJC_CLASS___UIDeferredMenuElement);
          id v28 = v39;
          id v29 = v15;
          id v30 = [v27 elementWithProvider:v26];
          _Block_release(v26);
          swift_release(*(void *)(v0 + 184));
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
          unint64_t v33 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v32 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v33 >= v32 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1LL);
          }
          v34.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v30);
          specialized Array._endMutation()(v34);
        }

        else
        {
          uint64_t v6 = v3;
          sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
          uint64_t v7 = swift_allocObject(&unk_100275E88, 40LL, 7LL);
          *(void *)(v7 + swift_unknownObjectWeakDestroy(v0 + 16) = v23;
          *(_BYTE *)(v7 + 24) = v22;
          *(void *)(v7 + 3sub_1000E053C(v0 + 2) = v15;
          id v8 = v39;
          id v9 = v15;
          id v10 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v18,  v20,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184C24,  v7);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          unint64_t v12 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
          unint64_t v11 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
          if (v12 >= v11 >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1LL);
          }
          v13.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10);
          specialized Array._endMutation()(v13);

          uint64_t v3 = v6;
          uint64_t v2 = v37;
        }
      }

      ++v5;
    }

    while (v3 != v5);
    swift_bridgeObjectRelease(v2);
    uint64_t v1 = v0 + 192;
    goto LABEL_23;
  }

  __break(1u);
  return result;
}

uint64_t sub_10017F80C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 280) = v2;
  if (v2) {
    uint64_t v3 = sub_100180A30;
  }
  else {
    uint64_t v3 = sub_10017F868;
  }
  return swift_task_switch(v3, *(void *)(v1 + 240), *(void *)(v1 + 248));
}

uint64_t sub_10017F868()
{
  Swift::String aBlock = (void *)(v0 + 144);
  swift_release(*(void *)(v0 + 232));
  uint64_t v5 = *(void *)(v0 + 192);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0) {
      uint64_t v40 = *(void *)(v0 + 192);
    }
    else {
      uint64_t v40 = v5 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v5);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v40);
    if (!v7) {
      goto LABEL_22;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (!v7) {
      goto LABEL_22;
    }
  }

  if (v7 < 1)
  {
    __break(1u);
    goto LABEL_49;
  }

  uint64_t v9 = 0LL;
  id v96 = *(void **)(v0 + 208);
  id v98 = (id)(v5 & 0xC000000000000001LL);
  uint64_t v93 = v0;
  do
  {
    if (v98) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v5);
    }
    else {
      id v19 = *(id *)(v5 + 8 * v9 + 32);
    }
    uint64_t v20 = v19;
    id v21 = [v19 name];
    if (v21)
    {
      char v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      uint64_t v25 = v24;

      id v26 = [v20 type];
      char v27 = *(_BYTE *)(v0 + 288);
      uint64_t v28 = *(void *)(v0 + 208);
      if (v26 == (id)3)
      {
        uint64_t v29 = *(void *)(v0 + 200);
        swift_bridgeObjectRelease(v25);
        uint64_t v30 = swift_allocObject(&unk_100275E38, 48LL, 7LL);
        *(void *)(v30 + swift_unknownObjectWeakDestroy(v0 + 16) = v28;
        *(_BYTE *)(v30 + 24) = v27;
        *(void *)(v30 + 3sub_1000E053C(v0 + 2) = v20;
        *(void *)(v30 + 40) = v29;
        *(void *)(v0 + 176) = sub_100184C28;
        *(void *)(v0 + 184) = v30;
        *(void *)(v0 + 144) = _NSConcreteStackBlock;
        *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 1107296256LL;
        *(void *)(v0 + 160) = sub_10017B60C;
        *(void *)(v0 + 168) = &unk_100275E50;
        uint64_t v31 = _Block_copy(aBlock);
        unint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___UIDeferredMenuElement);
        id v33 = v96;
        id v34 = v20;
        id v35 = [v32 elementWithProvider:v31];
        _Block_release(v31);
        swift_release(*(void *)(v0 + 184));
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
        unint64_t v38 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v37 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v38 >= v37 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1LL);
        }
        v39.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v35);
        specialized Array._endMutation()(v39);
      }

      else
      {
        uint64_t v10 = v5;
        uint64_t v11 = v7;
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        uint64_t v12 = swift_allocObject(&unk_100275E10, 40LL, 7LL);
        *(void *)(v12 + swift_unknownObjectWeakDestroy(v0 + 16) = v28;
        *(_BYTE *)(v12 + 24) = v27;
        *(void *)(v12 + 3sub_1000E053C(v0 + 2) = v20;
        id v13 = v96;
        id v14 = v20;
        id v15 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v23,  v25,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100184C24,  v12);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        unint64_t v17 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v16 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v17 >= v16 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
        }
        v18.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v18);

        uint64_t v7 = v11;
        uint64_t v5 = v10;
        uint64_t v0 = v93;
      }
    }

    ++v9;
  }

  while (v7 != v9);
LABEL_22:
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v5);
  uint64_t v4 = *(void *)(v0 + 272);
  char v41 = *(_BYTE *)(v0 + 288);
  id v42 = *(void **)(v0 + 208);
  unint64_t v99 = (unint64_t)_swiftEmptyArrayStorage;
  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  unint64_t v43 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  uint64_t v44 = (NSBundle *)[v43 mainBundle];
  v101._object = (void *)0xE000000000000000LL;
  v45._uint64_t countAndFlagsBits = 0x79616C502077654ELL;
  v45._object = (void *)0xEC0000007473696CLL;
  v46._uint64_t countAndFlagsBits = 0LL;
  v46._object = (void *)0xE000000000000000LL;
  v101._uint64_t countAndFlagsBits = 0LL;
  Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, v44, v46, v101);

  NSString v48 = String._bridgeToObjectiveC()();
  id v97 = (id)objc_opt_self(&OBJC_CLASS___UIImage);
  id v49 = [v97 systemImageNamed:v48];

  uint64_t v50 = swift_allocObject(&unk_100275DD0, 25LL, 7LL);
  *(void *)(v50 + swift_unknownObjectWeakDestroy(v0 + 16) = v42;
  *(_BYTE *)(v50 + 24) = v41;
  id v51 = v42;
  __n128 v52 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v47._countAndFlagsBits,  v47._object,  0LL,  0LL,  v49,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186BF4,  v50);
  sub_1000E0418(0LL, &qword_1002BCB70, &OBJC_CLASS___UIMenu_ptr);
  uint64_t v7 = sub_1000DFE10(&qword_1002B8A00);
  uint64_t v53 = swift_allocObject(v7, 40LL, 7LL);
  __int128 v92 = xmmword_1001E9180;
  *(_OWORD *)(v53 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  *(void *)(v53 + 3sub_1000E053C(v0 + 2) = v52;
  uint64_t v100 = v53;
  specialized Array._endMutation()((__n128)xmmword_1001E9180);
  id v95 = v52;
  uint64_t v54 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v100);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v54);
  unint64_t v56 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v55 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v56 >= v55 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v55 > 1, v56 + 1, 1LL);
  }
  v57.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v56, v54);
  specialized Array._endMutation()(v57);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v90 = v4;
    }
    else {
      uint64_t v90 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v6 = (void *)_CocoaArrayWrapper.endIndex.getter(v90);
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    uint64_t v6 = *(void **)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v5 = (uint64_t)v43;
  uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v58 = (NSBundle *)[(id)v5 mainBundle];
    v102._object = (void *)0xE000000000000000LL;
    v59._uint64_t countAndFlagsBits = 0x53544E45434552LL;
    v59._object = (void *)0xE700000000000000LL;
    v60._uint64_t countAndFlagsBits = 0LL;
    v60._object = (void *)0xE000000000000000LL;
    v102._uint64_t countAndFlagsBits = 0LL;
    Swift::String v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, v58, v60, v102);

    *(Swift::String *)(v0 + 144) = v61;
    uint64_t v62 = String.init<A>(_:)( aBlock,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    uint64_t v64 = v63;
    swift_bridgeObjectRetain(v4);
    uint64_t v3 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v62,  v64,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v4);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
    unint64_t v1 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v8 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v1 < v8 >> 1)
    {
LABEL_28:
      v65.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v1, v3);
      specialized Array._endMutation()(v65);
      goto LABEL_29;
    }

uint64_t sub_10018021C()
{
  uint64_t v69 = v0 + 144;
  swift_release(*(void *)(v0 + 232));
  swift_willThrow(v1);
  uint64_t v3 = *(void *)(v0 + 264);
  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL, v2);
  sub_1000E96CC(v4, (uint64_t)qword_1002BC910);
  swift_errorRetain(v3);
  uint64_t v5 = swift_errorRetain(v3);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v9 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)unint64_t v8 = 138412290;
    swift_errorRetain(v3);
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(void *)(v0 + 144) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v69, v0 + 152, v8 + 4);
    *uint64_t v9 = v10;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Can't get playlists: %@", v8, 0xCu);
    uint64_t v11 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v9, 1LL, v11);
    swift_slowDealloc(v9, -1LL, -1LL);
    swift_slowDealloc(v8, -1LL, -1LL);

    swift_errorRelease(v3);
  }

  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }

  char v12 = *(_BYTE *)(v0 + 288);
  id v13 = *(void **)(v0 + 208);
  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  id v14 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
  id v15 = (NSBundle *)[v14 mainBundle];
  v71._object = (void *)0xE000000000000000LL;
  v16._uint64_t countAndFlagsBits = 0x79616C502077654ELL;
  v16._object = (void *)0xEC0000007473696CLL;
  v17._uint64_t countAndFlagsBits = 0LL;
  v17._object = (void *)0xE000000000000000LL;
  v71._uint64_t countAndFlagsBits = 0LL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, v15, v17, v71);

  NSString v19 = String._bridgeToObjectiveC()();
  id v68 = (id)objc_opt_self(&OBJC_CLASS___UIImage);
  id v20 = [v68 systemImageNamed:v19];

  uint64_t v21 = swift_allocObject(&unk_100275DD0, 25LL, 7LL);
  *(void *)(v21 + swift_unknownObjectWeakDestroy(v0 + 16) = v13;
  *(_BYTE *)(v21 + 24) = v12;
  id v22 = v13;
  uint64_t v23 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v18._countAndFlagsBits,  v18._object,  0LL,  0LL,  v20,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186BF4,  v21);
  sub_1000E0418(0LL, &qword_1002BCB70, &OBJC_CLASS___UIMenu_ptr);
  uint64_t v24 = sub_1000DFE10(&qword_1002B8A00);
  uint64_t v25 = swift_allocObject(v24, 40LL, 7LL);
  *(_OWORD *)(v25 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  *(void *)(v25 + 3sub_1000E053C(v0 + 2) = v23;
  uint64_t v70 = v25;
  specialized Array._endMutation()((__n128)xmmword_1001E9180);
  id v67 = v23;
  uint64_t v26 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v70);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v26);
  unint64_t v28 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v27 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v28 >= v27 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1LL);
  }
  v29.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v26);
  specialized Array._endMutation()(v29);
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    else {
      __n128 v65 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter(v65);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    if (!v30) {
      goto LABEL_13;
    }
  }

  else
  {
    uint64_t v30 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v30) {
      goto LABEL_13;
    }
  }

  uint64_t v31 = (NSBundle *)[v14 mainBundle];
  v72._object = (void *)0xE000000000000000LL;
  v32._uint64_t countAndFlagsBits = 0x53544E45434552LL;
  v32._object = (void *)0xE700000000000000LL;
  v33._uint64_t countAndFlagsBits = 0LL;
  v33._object = (void *)0xE000000000000000LL;
  v72._uint64_t countAndFlagsBits = 0LL;
  Swift::String v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, v31, v33, v72);

  *(Swift::String *)(v0 + 144) = v34;
  uint64_t v35 = String.init<A>(_:)( v69,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
  uint64_t v37 = v36;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  uint64_t v38 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v35,  v37,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  _swiftEmptyArrayStorage);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v38);
  unint64_t v40 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v39 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v40 >= v39 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v39 > 1, v40 + 1, 1LL);
  }
  v41.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v38);
  specialized Array._endMutation()(v41);
LABEL_13:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    else {
      uint64_t v66 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v42 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  *(void *)&double v43 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
  if (v42)
  {
    unint64_t v44 = 0xE000000000000000LL;
    if (v30)
    {
      Swift::String v45 = (NSBundle *)objc_msgSend(v14, "mainBundle", v43);
      v73._object = (void *)0xE000000000000000LL;
      v46._uint64_t countAndFlagsBits = 0x59414C50204C4C41LL;
      v46._object = (void *)0xED0000535453494CLL;
      v47._uint64_t countAndFlagsBits = 0LL;
      v47._object = (void *)0xE000000000000000LL;
      v73._uint64_t countAndFlagsBits = 0LL;
      Swift::String v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, (Swift::String_optional)0, v45, v47, v73);

      *(Swift::String *)(v0 + 144) = v48;
      uint64_t v49 = String.init<A>(_:)( v69,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v44 = v50;
    }

    else
    {
      uint64_t v49 = 0LL;
    }

    uint64_t v51 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v49,  v44,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  _swiftEmptyArrayStorage);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
    unint64_t v53 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v52 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v53 >= v52 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1LL);
    }
    v54.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
    specialized Array._endMutation()(v54);
  }

  else
  {
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }

  unint64_t v55 = *(void (**)(uint64_t))(v0 + 216);
  uint64_t v56 = swift_allocObject(v24, 40LL, 7LL);
  *(_OWORD *)(v56 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  __n128 v57 = (NSBundle *)[v14 mainBundle];
  v74._object = (void *)0xE000000000000000LL;
  v58._object = (void *)0x8000000100228AE0LL;
  v58._uint64_t countAndFlagsBits = 0xD000000000000011LL;
  v59._uint64_t countAndFlagsBits = 0LL;
  v59._object = (void *)0xE000000000000000LL;
  v74._uint64_t countAndFlagsBits = 0LL;
  Swift::String v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, v57, v59, v74);

  NSString v61 = String._bridgeToObjectiveC()();
  id v62 = [v68 systemImageNamed:v61];

  *(void *)(v56 + 3sub_1000E053C(v0 + 2) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v60._countAndFlagsBits,  v60._object,  0LL,  0LL,  v62,  0LL,  0LL,  -1LL,  _swiftEmptyArrayStorage);
  specialized Array._endMutation()(v63);
  v55(v56);
  swift_bridgeObjectRelease(v56);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100180A30()
{
  uint64_t v70 = v0 + 144;
  swift_release(*(void *)(v0 + 232));
  swift_willThrow(v1);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v5 = type metadata accessor for Logger(0LL, v2);
  sub_1000E96CC(v5, (uint64_t)qword_1002BC910);
  swift_errorRetain(v3);
  uint64_t v6 = swift_errorRetain(v3);
  os_log_type_t v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain(v3);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v3);
    *(void *)(v0 + 144) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v70, v0 + 152, v9 + 4);
    *uint64_t v10 = v11;
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Can't get playlists: %@", v9, 0xCu);
    uint64_t v12 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v10, 1LL, v12);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);

    swift_errorRelease(v3);
  }

  else
  {
    swift_errorRelease(v3);
    swift_errorRelease(v3);
    swift_errorRelease(v3);
  }

  char v13 = *(_BYTE *)(v0 + 288);
  id v14 = *(void **)(v0 + 208);
  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  id v69 = (id)objc_opt_self(&OBJC_CLASS___NSBundle);
  id v15 = (NSBundle *)[v69 mainBundle];
  v72._object = (void *)0xE000000000000000LL;
  v16._uint64_t countAndFlagsBits = 0x79616C502077654ELL;
  v16._object = (void *)0xEC0000007473696CLL;
  v17._uint64_t countAndFlagsBits = 0LL;
  v17._object = (void *)0xE000000000000000LL;
  v72._uint64_t countAndFlagsBits = 0LL;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, v15, v17, v72);

  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = (void *)objc_opt_self(&OBJC_CLASS___UIImage);
  id v21 = [v20 systemImageNamed:v19];

  uint64_t v22 = swift_allocObject(&unk_100275DD0, 25LL, 7LL);
  *(void *)(v22 + swift_unknownObjectWeakDestroy(v0 + 16) = v14;
  *(_BYTE *)(v22 + 24) = v13;
  id v23 = v14;
  uint64_t v24 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v18._countAndFlagsBits,  v18._object,  0LL,  0LL,  v21,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186BF4,  v22);
  sub_1000E0418(0LL, &qword_1002BCB70, &OBJC_CLASS___UIMenu_ptr);
  uint64_t v25 = sub_1000DFE10(&qword_1002B8A00);
  uint64_t v26 = swift_allocObject(v25, 40LL, 7LL);
  *(_OWORD *)(v26 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  *(void *)(v26 + 3sub_1000E053C(v0 + 2) = v24;
  uint64_t v71 = v26;
  specialized Array._endMutation()((__n128)xmmword_1001E9180);
  id v68 = v24;
  uint64_t v27 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( 0LL,  0xE000000000000000LL,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v71);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
  unint64_t v29 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v28 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v29 >= v28 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
  }
  v30.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
  specialized Array._endMutation()(v30);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0) {
      uint64_t v66 = v4;
    }
    else {
      uint64_t v66 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v4);
  }

  else
  {
    uint64_t v31 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  if (v31)
  {
    Swift::String v32 = (NSBundle *)[v69 mainBundle];
    v73._object = (void *)0xE000000000000000LL;
    v33._uint64_t countAndFlagsBits = 0x53544E45434552LL;
    v33._object = (void *)0xE700000000000000LL;
    v34._uint64_t countAndFlagsBits = 0LL;
    v34._object = (void *)0xE000000000000000LL;
    v73._uint64_t countAndFlagsBits = 0LL;
    Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, v32, v34, v73);

    *(Swift::String *)(v0 + 144) = v35;
    uint64_t v36 = String.init<A>(_:)( v70,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
    uint64_t v38 = v37;
    swift_bridgeObjectRetain(v4);
    uint64_t v39 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v36,  v38,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  v4);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
    unint64_t v41 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v40 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v41 >= v40 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1LL);
    }
    v42.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
    specialized Array._endMutation()(v42);
  }

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    else {
      id v67 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter(v67);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v43 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  *(void *)&double v44 = swift_bridgeObjectRelease(v4).n128_u64[0];
  if (v43)
  {
    unint64_t v45 = 0xE000000000000000LL;
    if (v31)
    {
      Swift::String v46 = (NSBundle *)objc_msgSend(v69, "mainBundle", v44);
      v74._object = (void *)0xE000000000000000LL;
      v47._uint64_t countAndFlagsBits = 0x59414C50204C4C41LL;
      v47._object = (void *)0xED0000535453494CLL;
      v48._uint64_t countAndFlagsBits = 0LL;
      v48._object = (void *)0xE000000000000000LL;
      v74._uint64_t countAndFlagsBits = 0LL;
      Swift::String v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, v46, v48, v74);

      *(Swift::String *)(v0 + 144) = v49;
      uint64_t v50 = String.init<A>(_:)( v70,  &type metadata for String,  &protocol witness table for String,  &protocol witness table for String);
      unint64_t v45 = v51;
    }

    else
    {
      uint64_t v50 = 0LL;
    }

    uint64_t v52 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v50,  v45,  0LL,  0LL,  0LL,  0LL,  1LL,  -1LL,  _swiftEmptyArrayStorage);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    unint64_t v54 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v53 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v54 >= v53 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v53 > 1, v54 + 1, 1LL);
    }
    v55.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v54, v52);
    specialized Array._endMutation()(v55);
  }

  else
  {
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }

  uint64_t v56 = *(void (**)(uint64_t))(v0 + 216);
  uint64_t v57 = swift_allocObject(v25, 40LL, 7LL);
  *(_OWORD *)(v57 + swift_unknownObjectWeakDestroy(v0 + 16) = xmmword_1001E9180;
  Swift::String v58 = (NSBundle *)[v69 mainBundle];
  v75._object = (void *)0xE000000000000000LL;
  v59._object = (void *)0x8000000100228AE0LL;
  v59._uint64_t countAndFlagsBits = 0xD000000000000011LL;
  v60._uint64_t countAndFlagsBits = 0LL;
  v60._object = (void *)0xE000000000000000LL;
  v75._uint64_t countAndFlagsBits = 0LL;
  Swift::String v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, v58, v60, v75);

  NSString v62 = String._bridgeToObjectiveC()();
  id v63 = [v20 systemImageNamed:v62];

  *(void *)(v57 + 3sub_1000E053C(v0 + 2) = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)( v61._countAndFlagsBits,  v61._object,  0LL,  0LL,  v63,  0LL,  0LL,  -1LL,  _swiftEmptyArrayStorage);
  specialized Array._endMutation()(v64);
  v56(v57);
  swift_bridgeObjectRelease(v57);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100181250(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v4, v5);
  os_log_type_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56LL))(v7, 1LL, 1LL, v8);
  type metadata accessor for MainActor(0LL);
  id v9 = a3;
  uint64_t v10 = static MainActor.shared.getter(v9);
  uint64_t v11 = (void *)swift_allocObject(&unk_100276650, 40LL, 7LL);
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  void v11[4] = v9;
  uint64_t v12 = sub_100125950((uint64_t)v7, (uint64_t)&unk_1002BCBF8, (uint64_t)v11);
  *(void *)&double result = swift_release(v12).n128_u64[0];
  return result;
}

void sub_10018132C(uint64_t a1, uint64_t a2)
{
  id v3 = [(id)objc_opt_self(MPContentTasteController) sharedController];
  if (v3)
  {
    uint64_t v4 = v3;
    v6[4] = nullsub_46;
    v6[5] = 0LL;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256LL;
    v6[2] = sub_1000F56A4;
    _OWORD v6[3] = &unk_100276348;
    uint64_t v5 = _Block_copy(v6);
    [v4 setTasteType:1 forModel:a2 withCompletionHandler:v5];
    _Block_release(v5);
  }

  else
  {
    __break(1u);
  }

void sub_1001813F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [(id)objc_opt_self(MPContentTasteController) sharedController];
  if (v7)
  {
    uint64_t v8 = v7;
    v10[4] = a3;
    v10[5] = 0LL;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256LL;
    v10[2] = sub_1000F56A4;
    v10[3] = a4;
    id v9 = _Block_copy(v10);
    [v8 setTasteType:0 forModel:a2 withCompletionHandler:v9];
    _Block_release(v9);
  }

  else
  {
    __break(1u);
  }

void sub_1001814AC(uint64_t a1, uint64_t a2)
{
  id v3 = [(id)objc_opt_self(MPContentTasteController) sharedController];
  if (v3)
  {
    uint64_t v4 = v3;
    v6[4] = nullsub_46;
    v6[5] = 0LL;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256LL;
    v6[2] = sub_1000F56A4;
    _OWORD v6[3] = &unk_100276320;
    uint64_t v5 = _Block_copy(v6);
    [v4 setTasteType:2 forModel:a2 withCompletionHandler:v5];
    _Block_release(v5);
  }

  else
  {
    __break(1u);
  }

uint64_t sub_100181570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[25] = a4;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  v4[26] = static MainActor.shared.getter(v5);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[27] = v6;
  v4[28] = v7;
  return swift_task_switch(sub_1001815DC, v6, v7);
}

uint64_t sub_1001815DC()
{
  uint64_t v1 = v0 + 2;
  uint64_t v2 = (void *)v0[25];
  id v3 = [v2 type];
  if (v3 == (id)3) {
    uint64_t v4 = 0xD000000000000021LL;
  }
  else {
    uint64_t v4 = 0xD00000000000001BLL;
  }
  if (v3 == (id)3) {
    uint64_t v5 = (void *)0x8000000100228CA0LL;
  }
  else {
    uint64_t v5 = (void *)0x8000000100228C50LL;
  }
  id v6 = [(id)objc_opt_self(TVMusicKeyboardController) sharedInstance];
  v0[29] = v6;
  uint64_t v7 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v16._object = (void *)0xE000000000000000LL;
  v8._uint64_t countAndFlagsBits = v4;
  v8._object = v5;
  v9._uint64_t countAndFlagsBits = 0LL;
  v9._object = (void *)0xE000000000000000LL;
  v16._uint64_t countAndFlagsBits = 0LL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, v7, v9, v16)._object;
  swift_bridgeObjectRelease(v5);

  NSString v11 = String._bridgeToObjectiveC()();
  v0[30] = v11;
  id v12 = objc_msgSend(v2, "name", swift_bridgeObjectRelease(object).n128_f64[0]);
  v0[31] = v12;
  v0[7] = v0 + 23;
  v0[2] = v0;
  v0[3] = sub_1001817A8;
  uint64_t v13 = swift_continuation_init(v0 + 2, 0LL);
  v0[18] = _NSConcreteStackBlock;
  uint64_t v14 = v0 + 18;
  v14[1] = 0x40000000LL;
  void v14[2] = sub_100181BA4;
  v14[3] = &unk_100276668;
  v14[4] = v13;
  [v6 presentKeyboardWithHeaderText:v11 initialText:v12 completion:v14];
  return swift_continuation_await(v1);
}

uint64_t sub_1001817A8()
{
  return swift_task_switch(sub_1001817EC, *(void *)(*(void *)v0 + 216LL), *(void *)(*(void *)v0 + 224LL));
}

uint64_t sub_1001817EC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  if (v1)
  {
    uint64_t v2 = v0 + 80;
    uint64_t v4 = *(void **)(v0 + 240);
    id v3 = *(void **)(v0 + 248);
    uint64_t v5 = *(void *)(v0 + 200);

    id v6 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
    NSString v7 = String._bridgeToObjectiveC()();
    *(void *)(v0 + 256) = v7;
    swift_bridgeObjectRelease(v1);
    *(void *)(v0 + 120) = v0 + 184;
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 88) = sub_100181928;
    uint64_t v8 = swift_continuation_init(v0 + 80, 1LL);
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    Swift::String v9 = (void *)(v0 + 144);
    v9[1] = 0x40000000LL;
    void v9[2] = sub_100181C00;
    void v9[3] = &unk_100276680;
    v9[4] = v8;
    [v6 renamePlaylist:v5 newName:v7 completion:v9];
    return swift_continuation_await(v2);
  }

  else
  {
    NSString v11 = *(void **)(v0 + 240);
    id v12 = *(void **)(v0 + 248);
    uint64_t v13 = *(void **)(v0 + 232);
    swift_release(*(void *)(v0 + 208));

    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_100181928()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 264) = v2;
  if (v2) {
    id v3 = sub_1001819C4;
  }
  else {
    id v3 = sub_100181984;
  }
  return swift_task_switch(v3, *(void *)(v1 + 216), *(void *)(v1 + 224));
}

uint64_t sub_100181984()
{
  uint64_t v1 = *(void **)(v0 + 256);
  swift_release(*(void *)(v0 + 208));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001819C4()
{
  uint64_t v1 = *(void **)(v0 + 256);
  swift_release(*(void *)(v0 + 208));
  swift_willThrow(v2);

  if (qword_1002B71F8 != -1) {
    swift_once(&qword_1002B71F8, sub_10016F274);
  }
  uint64_t v4 = *(void *)(v0 + 264);
  uint64_t v5 = type metadata accessor for Logger(0LL, v3);
  sub_1000E96CC(v5, (uint64_t)qword_1002BC910);
  swift_errorRetain(v4);
  uint64_t v6 = swift_errorRetain(v4);
  NSString v7 = (os_log_s *)Logger.logObject.getter(v6);
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 264);
  if (v9)
  {
    NSString v11 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    id v12 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)NSString v11 = 138412290;
    swift_errorRetain(v10);
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError(v10);
    *(void *)(v0 + 144) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v11 + 4);
    *id v12 = v13;
    swift_errorRelease(v10);
    swift_errorRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Rename Playlist Error: %@", v11, 0xCu);
    uint64_t v14 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v12, 1LL, v14);
    swift_slowDealloc(v12, -1LL, -1LL);
    swift_slowDealloc(v11, -1LL, -1LL);

    swift_errorRelease(v10);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 264));
    swift_errorRelease(v10);
    swift_errorRelease(v10);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100181BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2) {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  }
  else {
    uint64_t v3 = 0LL;
  }
  v5[0] = v3;
  v5[1] = a2;
  sub_1000E011C((uint64_t)v5, *(void *)(*(void *)(v2 + 64) + 40LL), &qword_1002BAB30);
  return swift_continuation_resume(v2);
}

uint64_t sub_100181C00(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a2)
  {
    uint64_t v5 = sub_1000DFE10((uint64_t *)&unk_1002B7EE0);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *NSString v7 = a2;
    id v8 = a2;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else if (a3)
  {
    **(void **)(*(void *)(v3 + 64) + 40LL) = a3;
    id v9 = a3;
    return swift_continuation_throwingResume(v3);
  }

  else
  {
    __break(1u);
  }

  return result;
}

uint64_t sub_100181C8C()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100181CC0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc(dword_1002BCAE4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_100174690(a1, v4, v5, v7, v6);
}

id sub_100181D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v5);
  swift_retain(v3);
  uint64_t v7 = (void *)v4(v6);
  swift_release(v3);
  swift_bridgeObjectRelease(v6);
  return v7;
}

id sub_100181DB0(uint64_t a1)
{
  id v1 = 0LL;
  switch(a1)
  {
    case 1LL:
      id v2 = [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) propertySetForSongsInContextMenu];
      goto LABEL_14;
    case 2LL:
      id v2 = [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) propertySetForAlbumDetails];
      goto LABEL_14;
    case 3LL:
      id v3 = [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) artistsLibraryRequest];
      if (v3) {
        goto LABEL_12;
      }
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    case 4LL:
      id v3 =  [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) playlistsLibraryRequestWithParentPlaylistFolder:0];
      if (v3) {
        goto LABEL_12;
      }
      goto LABEL_19;
    case 6LL:
      id v2 = [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) propertySetForTVEpisode];
      goto LABEL_14;
    case 7LL:
      id v3 =  [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) TVSeasonsLibraryRequestForShow:0];
      if (v3) {
        goto LABEL_12;
      }
      goto LABEL_17;
    case 8LL:
      id v3 = [(id)objc_opt_self(TVMusicMPLibraryRequestFactory) TVShowsLibraryRequest];
      if (!v3)
      {
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x100181F8CLL);
      }

uint64_t sub_100181FB0(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  uint64_t v3 = type metadata accessor for MainActor(0LL);
  v2[18] = static MainActor.shared.getter(v3);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[19] = v4;
  v2[20] = v5;
  return swift_task_switch(sub_10018201C, v4, v5);
}

uint64_t sub_10018201C()
{
  id v1 = v0 + 2;
  uint64_t v3 = (void *)v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
  id v5 = [v3 identifiers];
  v0[21] = v5;
  id v6 = sub_10015F868((uint64_t)[v3 type]);
  v0[22] = v6;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100182118;
  uint64_t v7 = swift_continuation_init(v0 + 2, 0LL);
  v0[10] = _NSConcreteStackBlock;
  id v8 = v0 + 10;
  v8[1] = 0x40000000LL;
  int v8[2] = sub_10016F1B0;
  void v8[3] = &unk_100275AA8;
  v8[4] = v7;
  [v4 findMPObjectWithIdentifiers:v5 itemKind:v6 itemProperties:v2 completionHandler:v8];
  return swift_continuation_await(v1);
}

uint64_t sub_100182118()
{
  return swift_task_switch(sub_10018215C, *(void *)(*(void *)v0 + 152LL), *(void *)(*(void *)v0 + 160LL));
}

uint64_t sub_10018215C()
{
  uint64_t v2 = *(void **)(v0 + 168);
  id v1 = *(void **)(v0 + 176);
  swift_release(*(void *)(v0 + 144));
  id v3 = *(id *)(v0 + 120);

  if (!v3)
  {
    if ([*(id *)(v0 + 128) type] != (id)4) {
      goto LABEL_8;
    }
    id v4 = [*(id *)(v0 + 128) playlist];
    id v3 = v4;
    if (v4)
    {
      id v5 = [v4 type];

      if (v5 != (id)3) {
        goto LABEL_8;
      }
      id v6 = [*(id *)(v0 + 128) playlist];
      id v3 = v6;
      if (v6)
      {
        unsigned int v7 = [v6 isLibraryAdded];

        if (v7)
        {
          id v3 = [*(id *)(v0 + 128) playlist];
          return (*(uint64_t (**)(id))(v0 + 8))(v3);
        }

uint64_t sub_100182258()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_10018227C(uint64_t a1)
{
  return sub_100171840(a1, v1);
}

void sub_10018228C(uint64_t a1)
{
}

void sub_10018229C()
{
  *(_BYTE *)(*(void *)(v0 + 16) + 40LL) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1001822BC()
{
  return sub_10016F4E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1001822D4(uint64_t a1, uint64_t a2)
{
  if (qword_1002B7200 != -1) {
    swift_once(&qword_1002B7200, sub_10017F038);
  }
  uint64_t v4 = qword_1002C5EB8;
  if (*(void *)(qword_1002C5EB8 + 16)
    && (uint64_t v5 = sub_10013CED4(a1), (a2 & 1) != 0)
    && (uint64_t v6 = *(void *)(*(void *)(v4 + 56) + 8 * v5), *(void *)(v6 + 16))
    && (uint64_t v7 = sub_10013CED4(a2), (a2 & 1) != 0))
  {
    id v8 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v7);
    uint64_t v10 = *v8;
    id v9 = (void *)v8[1];
    if (a2 != 4)
    {
      swift_bridgeObjectRetain(v8[1]);
LABEL_17:
      unint64_t v29 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
      v35._object = (void *)0xE000000000000000LL;
      v30._uint64_t countAndFlagsBits = v10;
      v30._object = v9;
      v31._uint64_t countAndFlagsBits = 0LL;
      v31._object = (void *)0xE000000000000000LL;
      v35._uint64_t countAndFlagsBits = 0LL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, v29, v31, v35);
      swift_bridgeObjectRelease(v9);

      return;
    }

    NSString v11 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlayerManager);
    swift_bridgeObjectRetain(v9);
    id v12 = [v11 defaultPlayer];
    id v13 = [v12 playQueue];

    if (v13)
    {
      id v14 = [v13 lastSectionName];

      if (v14)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
        Swift::String v17 = v16;

        Swift::String v18 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
        v34._object = (void *)0xE000000000000000LL;
        v19._uint64_t countAndFlagsBits = v10;
        v19._object = v9;
        v20._uint64_t countAndFlagsBits = 0LL;
        v20._object = (void *)0xE000000000000000LL;
        v34._uint64_t countAndFlagsBits = 0LL;
        Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, v18, v20, v34);

        swift_bridgeObjectRelease(v9);
        uint64_t countAndFlagsBits = v21._countAndFlagsBits;
        swift_bridgeObjectRetain(v21._object);
        v22._uint64_t countAndFlagsBits = 10LL;
        v22._object = (void *)0xE100000000000000LL;
        String.append(_:)(v22);
        swift_bridgeObjectRelease(v21._object);
        swift_bridgeObjectRetain(v21._object);
        v23._uint64_t countAndFlagsBits = v15;
        v23._object = v17;
        String.append(_:)(v23);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v21._object);
        return;
      }

      goto LABEL_17;
    }

    __break(1u);
  }

  else
  {
    if (qword_1002B71F8 != -1) {
      swift_once(&qword_1002B71F8, sub_10016F274);
    }
    uint64_t v24 = type metadata accessor for Logger(0LL, a2);
    uint64_t v25 = sub_1000E96CC(v24, (uint64_t)qword_1002BC910);
    uint64_t v26 = (os_log_s *)Logger.logObject.getter(v25);
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc(22LL, -1LL);
      *(_DWORD *)uint64_t v28 = 134218240;
      uint64_t countAndFlagsBits = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&countAndFlagsBits, &v33, v28 + 4);
      *(_WORD *)(v28 + 1sub_1000E053C(v0 + 2) = 2048;
      uint64_t countAndFlagsBits = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&countAndFlagsBits, &v33, v28 + 14);
      _os_log_impl( (void *)&_mh_execute_header,  v26,  v27,  "Can't get title for Play menu for object of type: %lu with play action %lu",  (uint8_t *)v28,  0x16u);
      swift_slowDealloc(v28, -1LL, -1LL);
    }
  }

void *sub_100182644(void *a1, uint64_t a2)
{
  uint64_t v63 = (uint64_t)_swiftEmptyArrayStorage;
  id v3 = [a1 identifiers];
  id v4 = [v3 library];

  if (v4 && (id v5 = [v4 persistentID], swift_unknownObjectRelease(v4), v5))
  {
    uint64_t v6 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicPlaybackHelper);
    if ([v6 canPlayItemType:a2 playbackAction:1])
    {
      sub_1001822D4(a2, 1LL);
      if (v8)
      {
        uint64_t v9 = v7;
        uint64_t v10 = v8;
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        NSString v11 = String._bridgeToObjectiveC()();
        id v12 = [(id)objc_opt_self(UIImage) systemImageNamed:v11];

        id v13 = (void *)swift_allocObject(&unk_100276720, 40LL, 7LL);
        v13[2] = a2;
        v13[3] = v5;
        void v13[4] = 1LL;
        id v14 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v9,  v10,  0LL,  0LL,  v12,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C08,  v13);
        swift_beginAccess(&v63, v62, 33LL, 0LL);
        id v15 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        unint64_t v17 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v16 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v17 >= v16 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
        }
        v18.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
        specialized Array._endMutation()(v18);
        swift_endAccess(v62);
      }
    }

    if ([v6 canPlayItemType:a2 playbackAction:2])
    {
      sub_1001822D4(a2, 2LL);
      if (v20)
      {
        uint64_t v21 = v19;
        uint64_t v22 = v20;
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        NSString v23 = String._bridgeToObjectiveC()();
        id v24 = [(id)objc_opt_self(UIImage) systemImageNamed:v23];

        uint64_t v25 = (void *)swift_allocObject(&unk_1002766F8, 40LL, 7LL);
        v25[2] = a2;
        v25[3] = v5;
        v25[4] = 2LL;
        uint64_t v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v21,  v22,  0LL,  0LL,  v24,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C08,  v25);
        swift_beginAccess(&v63, v62, 33LL, 0LL);
        id v27 = v26;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v27);
        unint64_t v29 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v28 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v29 >= v28 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v28 > 1, v29 + 1, 1LL);
        }
        v30.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v27);
        specialized Array._endMutation()(v30);
        swift_endAccess(v62);
      }
    }

    if ([v6 canPlayItemType:a2 playbackAction:3])
    {
      sub_1001822D4(a2, 3LL);
      if (v32)
      {
        uint64_t v33 = v31;
        uint64_t v34 = v32;
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        NSString v35 = String._bridgeToObjectiveC()();
        id v36 = [(id)objc_opt_self(UIImage) systemImageNamed:v35];

        uint64_t v37 = (void *)swift_allocObject(&unk_1002766D0, 40LL, 7LL);
        _OWORD v37[2] = a2;
        v37[3] = v5;
        v37[4] = 3LL;
        uint64_t v38 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v33,  v34,  0LL,  0LL,  v36,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C08,  v37);
        swift_beginAccess(&v63, v62, 33LL, 0LL);
        id v39 = v38;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
        unint64_t v41 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v40 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v41 >= v40 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1LL);
        }
        v42.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
        specialized Array._endMutation()(v42);
        swift_endAccess(v62);
      }
    }

    if ([v6 canPlayItemType:a2 playbackAction:4])
    {
      sub_1001822D4(a2, 4LL);
      if (v44)
      {
        uint64_t v45 = v43;
        uint64_t v46 = v44;
        sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
        NSString v47 = String._bridgeToObjectiveC()();
        id v48 = [(id)objc_opt_self(UIImage) systemImageNamed:v47];

        Swift::String v49 = (void *)swift_allocObject(&unk_1002766A8, 40LL, 7LL);
        v49[2] = a2;
        v49[3] = v5;
        v49[4] = 4LL;
        uint64_t v50 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v45,  v46,  0LL,  0LL,  v48,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100185340,  v49);
        swift_beginAccess(&v63, v62, 33LL, 0LL);
        id v51 = v50;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v51);
        unint64_t v53 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
        unint64_t v52 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
        if (v53 >= v52 >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1LL);
        }
        v54.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
        specialized Array._endMutation()(v54);
        swift_endAccess(v62);
      }
    }

    swift_beginAccess(&v63, v62, 0LL, 0LL);
    __n128 v55 = (void *)v63;
    if ((unint64_t)v63 >> 62)
    {
      if (v63 < 0) {
        uint64_t v60 = v63;
      }
      else {
        uint64_t v60 = v63 & 0xFFFFFFFFFFFFFF8LL;
      }
      uint64_t v61 = sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
      swift_bridgeObjectRetain(v55);
      uint64_t v57 = (void *)_bridgeCocoaArray<A>(_:)(v60, v61);
    }

    else
    {
      uint64_t v56 = swift_bridgeObjectRetain_n(v63, 2LL);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v56);
      sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
      uint64_t v57 = v55;
    }

    swift_bridgeObjectRelease(v55);
    Swift::String v58 = (void *)v63;
  }

  else
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
    Swift::String v58 = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(v58);
  return v57;
}

void *sub_100182D78(void *a1)
{
  uint64_t v2 = (void *)objc_opt_self(&OBJC_CLASS___MPContentTasteController);
  double result = [v2 sharedController];
  if (!result)
  {
    __break(1u);
    goto LABEL_24;
  }

  id v4 = result;
  id v5 = [result tasteTypeForModel:a1];

  double result = [v2 sharedController];
  if (!result)
  {
LABEL_24:
    __break(1u);
    return result;
  }

  uint64_t v6 = result;
  id v7 = [result tasteTypeForModel:a1];

  if (v5 == (id)1)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    uint64_t v8 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v60._object = (void *)0xE000000000000000LL;
    v9._object = (void *)0x8000000100228BF0LL;
    v9._uint64_t countAndFlagsBits = 0xD000000000000011LL;
    v10._uint64_t countAndFlagsBits = 0LL;
    v10._object = (void *)0xE000000000000000LL;
    v60._uint64_t countAndFlagsBits = 0LL;
    Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, v8, v10, v60);

    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [(id)objc_opt_self(UIImage) systemImageNamed:v12];

    uint64_t v14 = swift_allocObject(&unk_1002762B8, 24LL, 7LL);
    *(void *)(v14 + swift_weakDestroy(v0 + 16) = a1;
    id v15 = a1;
    uint64_t v16 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v11._countAndFlagsBits,  v11._object,  0LL,  0LL,  v13,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1001850CC,  v14);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    unint64_t v18 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v17 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v18 >= v17 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1LL);
    }
    v19.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
    specialized Array._endMutation()(v19);
    if (v7 != (id)2) {
      goto LABEL_16;
    }
  }

  else if (v7 != (id)2)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    unint64_t v29 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
    __n128 v30 = (NSBundle *)[v29 mainBundle];
    v62._object = (void *)0xE000000000000000LL;
    v31._uint64_t countAndFlagsBits = 0x4D747865746E6F43LL;
    v31._object = (void *)0xEF65766F4C756E65LL;
    v32._uint64_t countAndFlagsBits = 0LL;
    v32._object = (void *)0xE000000000000000LL;
    v62._uint64_t countAndFlagsBits = 0LL;
    Swift::String v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, v30, v32, v62);

    NSString v34 = String._bridgeToObjectiveC()();
    NSString v35 = (void *)objc_opt_self(&OBJC_CLASS___UIImage);
    id v36 = [v35 systemImageNamed:v34];

    uint64_t v37 = swift_allocObject(&unk_100276240, 24LL, 7LL);
    *(void *)(v37 + swift_weakDestroy(v0 + 16) = a1;
    id v38 = a1;
    uint64_t v39 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v33._countAndFlagsBits,  v33._object,  0LL,  0LL,  v36,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100185094,  v37);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
    unint64_t v40 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v41 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v40 >= v41 >> 1)
    {
      unint64_t v59 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v40 + 1, 1LL);
      unint64_t v40 = v59;
    }

    v42.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v39);
    specialized Array._endMutation()(v42);
    uint64_t v43 = (NSBundle *)[v29 mainBundle];
    v63._object = (void *)0xE000000000000000LL;
    v44._uint64_t countAndFlagsBits = 0x4D747865746E6F43LL;
    v44._object = (void *)0xEF65746148756E65LL;
    v45._uint64_t countAndFlagsBits = 0LL;
    v45._object = (void *)0xE000000000000000LL;
    v63._uint64_t countAndFlagsBits = 0LL;
    Swift::String v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, v43, v45, v63);

    NSString v47 = String._bridgeToObjectiveC()();
    id v48 = [v35 systemImageNamed:v47];

    uint64_t v49 = swift_allocObject(&unk_100276268, 24LL, 7LL);
    *(void *)(v49 + swift_weakDestroy(v0 + 16) = v38;
    id v50 = v38;
    uint64_t v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v46._countAndFlagsBits,  v46._object,  0LL,  0LL,  v48,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10018509C,  v49);
    goto LABEL_13;
  }

  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  uint64_t v20 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v61._object = (void *)0xE000000000000000LL;
  v21._object = (void *)0x8000000100228BD0LL;
  v21._uint64_t countAndFlagsBits = 0xD000000000000011LL;
  v22._uint64_t countAndFlagsBits = 0LL;
  v22._object = (void *)0xE000000000000000LL;
  v61._uint64_t countAndFlagsBits = 0LL;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, v20, v22, v61);

  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [(id)objc_opt_self(UIImage) systemImageNamed:v24];

  uint64_t v26 = swift_allocObject(&unk_100276290, 24LL, 7LL);
  *(void *)(v26 + swift_weakDestroy(v0 + 16) = a1;
  id v27 = a1;
  uint64_t v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v23._countAndFlagsBits,  v23._object,  0LL,  0LL,  v25,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1001850A4,  v26);
LABEL_13:
  uint64_t v51 = v28;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  unint64_t v53 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v52 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v53 >= v52 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v52 > 1, v53 + 1, 1LL);
  }
  v54.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
  specialized Array._endMutation()(v54);
LABEL_16:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    else {
      uint64_t v57 = (void *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL);
    }
    uint64_t v58 = sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    uint64_t v56 = (void *)_bridgeCocoaArray<A>(_:)(v57, v58);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v55 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v55);
    sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
    uint64_t v56 = _swiftEmptyArrayStorage;
  }

  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return v56;
}

void *sub_1001834A0(void *a1)
{
  v58[3] = &type metadata for Feature.MediaPlayer;
  void v58[4] = sub_1000F5800();
  char v2 = isFeatureEnabled(_:)(v58);
  sub_1000E053C(v58);
  if ((v2 & 1) == 0) {
    return sub_100182D78(a1);
  }
  v58[0] = _swiftEmptyArrayStorage;
  id v3 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicLibraryUtilities);
  unsigned int v4 = [v3 isItemFavorited:a1];
  unsigned int v5 = [v3 isItemDisliked:a1];
  unsigned int v6 = v5;
  if (v4)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    id v7 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v59._object = (void *)0xE000000000000000LL;
    v8._uint64_t countAndFlagsBits = 0x766146206F646E55LL;
    v8._object = (void *)0xED0000657469726FLL;
    v9._uint64_t countAndFlagsBits = 0LL;
    v9._object = (void *)0xE000000000000000LL;
    v59._uint64_t countAndFlagsBits = 0LL;
    Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, v7, v9, v59);

    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [(id)objc_opt_self(UIImage) systemImageNamed:v11];

    uint64_t v13 = swift_allocObject(&unk_100276218, 24LL, 7LL);
    *(void *)(v13 + swift_weakDestroy(v0 + 16) = a1;
    id v14 = a1;
    uint64_t v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v10._countAndFlagsBits,  v10._object,  0LL,  0LL,  v12,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10018503C,  v13);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
    unint64_t v17 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v16 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v17 >= v16 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1LL);
    }
    v18.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v15);
    specialized Array._endMutation()(v18);
    if (!v6) {
      goto LABEL_16;
    }
  }

  else if ((v5 & 1) == 0)
  {
    sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
    unint64_t v29 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v61._object = (void *)0xE000000000000000LL;
    v30._uint64_t countAndFlagsBits = 0x657469726F766146LL;
    v30._object = (void *)0xE800000000000000LL;
    v31._uint64_t countAndFlagsBits = 0LL;
    v31._object = (void *)0xE000000000000000LL;
    v61._uint64_t countAndFlagsBits = 0LL;
    Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, v29, v31, v61);

    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = [(id)objc_opt_self(UIImage) systemImageNamed:v33];

    uint64_t v35 = swift_allocObject(&unk_1002761A0, 24LL, 7LL);
    *(void *)(v35 + swift_weakDestroy(v0 + 16) = a1;
    id v36 = a1;
    uint64_t v37 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v32._countAndFlagsBits,  v32._object,  0LL,  0LL,  v34,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10018500C,  v35);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
    unint64_t v39 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8LL) + 0x10);
    unint64_t v38 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8LL) + 0x18);
    if (v39 >= v38 >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1LL);
    }
    v40.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v37);
    specialized Array._endMutation()(v40);
    unint64_t v41 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
    v62._object = (void *)0xE000000000000000LL;
    v42._uint64_t countAndFlagsBits = 0x2074736567677553LL;
    v42._object = (void *)0xEC0000007373654CLL;
    v43._uint64_t countAndFlagsBits = 0LL;
    v43._object = (void *)0xE000000000000000LL;
    v62._uint64_t countAndFlagsBits = 0LL;
    Swift::String v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, v41, v43, v62);

    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = [(id)objc_opt_self(UIImage) systemImageNamed:v45];

    uint64_t v47 = swift_allocObject(&unk_1002761C8, 24LL, 7LL);
    *(void *)(v47 + swift_weakDestroy(v0 + 16) = v36;
    id v48 = v36;
    uint64_t v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v44._countAndFlagsBits,  v44._object,  0LL,  0LL,  v46,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10018501C,  v47);
    goto LABEL_13;
  }

  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  uint64_t v20 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v60._object = (void *)0xE000000000000000LL;
  v21._object = (void *)0x8000000100228BB0LL;
  v21._uint64_t countAndFlagsBits = 0xD000000000000011LL;
  v22._uint64_t countAndFlagsBits = 0LL;
  v22._object = (void *)0xE000000000000000LL;
  v60._uint64_t countAndFlagsBits = 0LL;
  Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, v20, v22, v60);

  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = [(id)objc_opt_self(UIImage) systemImageNamed:v24];

  uint64_t v26 = swift_allocObject(&unk_1002761F0, 24LL, 7LL);
  *(void *)(v26 + swift_weakDestroy(v0 + 16) = a1;
  id v27 = a1;
  uint64_t v28 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v23._countAndFlagsBits,  v23._object,  0LL,  0LL,  v25,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10018502C,  v26);
LABEL_13:
  uint64_t v49 = v28;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  unint64_t v51 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  unint64_t v50 = *(void *)((v58[0] & 0xFFFFFFFFFFFFFF8LL) + 0x18);
  if (v51 >= v50 >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1LL);
  }
  v52.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
  specialized Array._endMutation()(v52);
LABEL_16:
  uint64_t v53 = v58[0];
  if (v58[0] >> 62)
  {
    if (v58[0] < 0LL) {
      uint64_t v56 = v58[0];
    }
    else {
      uint64_t v56 = v58[0] & 0xFFFFFFFFFFFFFF8LL;
    }
    uint64_t v57 = sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
    swift_bridgeObjectRetain(v53);
    uint64_t v19 = _bridgeCocoaArray<A>(_:)(v56, v57);
    swift_bridgeObjectRelease(v53);
  }

  else
  {
    uint64_t v54 = swift_bridgeObjectRetain(v58[0]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v54);
    sub_1000E0418(0LL, &qword_1002BCB68, &OBJC_CLASS___UIMenuElement_ptr);
    uint64_t v19 = v53;
  }

  swift_bridgeObjectRelease(v53);
  return (void *)v19;
}

unint64_t sub_100183BA0(void *a1)
{
  unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v2 = objc_opt_self(&OBJC_CLASS___MPModelArtist);
  uint64_t v3 = swift_dynamicCastObjCClass(a1, v2);
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned int v5 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicRadioUtilities);
    id v6 = a1;
    if ([v5 canPlayFromMPArtist:v4])
    {
      id v7 = sub_100184A4C;
      Swift::String v8 = &unk_100276798;
LABEL_8:
      uint64_t v13 = swift_allocObject(v8, 24LL, 7LL);
      *(void *)(v13 + swift_weakDestroy(v0 + 16) = v4;
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      id v14 = (void *)objc_opt_self(&OBJC_CLASS___NSBundle);
      swift_retain(v13);
      uint64_t v15 = (NSBundle *)[v14 mainBundle];
      v31._object = (void *)0xE000000000000000LL;
      v16._object = (void *)0x8000000100228A40LL;
      v16._uint64_t countAndFlagsBits = 0xD000000000000018LL;
      v17._uint64_t countAndFlagsBits = 0LL;
      v17._object = (void *)0xE000000000000000LL;
      v31._uint64_t countAndFlagsBits = 0LL;
      Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, v15, v17, v31);

      NSString v19 = String._bridgeToObjectiveC()();
      id v20 = [(id)objc_opt_self(UIImage) systemImageNamed:v19];

      uint64_t v21 = swift_allocObject(&unk_100276770, 32LL, 7LL);
      *(void *)(v21 + swift_weakDestroy(v0 + 16) = v7;
      *(void *)(v21 + 24) = v13;
      swift_retain(v13);
      Swift::String v22 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v18._countAndFlagsBits,  v18._object,  0LL,  0LL,  v20,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_10011383C,  v21);
      sub_1000E03F0((uint64_t)v7, v13);
      swift_release(v13);
      id v12 = v22;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
      unint64_t v24 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v23 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v24 >= v23 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1LL);
      }
      v25.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v12);
      specialized Array._endMutation()(v25);
      goto LABEL_11;
    }
  }

  uint64_t v9 = objc_opt_self(&OBJC_CLASS___MPModelSong);
  uint64_t v10 = swift_dynamicCastObjCClass(a1, v9);
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v4 = v10;
  NSString v11 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicRadioUtilities);
  id v12 = a1;
  if ([v11 canPlayFromMPSong:v4])
  {
    id v7 = sub_100184A40;
    Swift::String v8 = &unk_100276748;
    goto LABEL_8;
  }

void *sub_100183EB0(void *a1)
{
  if ([a1 isLibraryAdded])
  {
    id v2 = [a1 title];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
      uint64_t v6 = v5;
    }

    else
    {
      uint64_t v4 = 0LL;
      uint64_t v6 = 0LL;
    }

    uint64_t v7 = objc_opt_self(&OBJC_CLASS___MPModelPlaylist);
    Swift::String v8 = (void *)swift_dynamicCastObjCClass(a1, v7);
    if (v8 && [v8 type] == (id)9)
    {
      swift_bridgeObjectRelease(v6);
    }

    else
    {
      sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
      uint64_t v9 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
      v22._object = (void *)0xE000000000000000LL;
      v10._object = (void *)0x8000000100228AC0LL;
      v10._uint64_t countAndFlagsBits = 0xD000000000000013LL;
      v11._uint64_t countAndFlagsBits = 0LL;
      v11._object = (void *)0xE000000000000000LL;
      v22._uint64_t countAndFlagsBits = 0LL;
      Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, v9, v11, v22);

      NSString v13 = String._bridgeToObjectiveC()();
      id v14 = [(id)objc_opt_self(UIImage) systemImageNamed:v13];

      uint64_t v15 = (void *)swift_allocObject(&unk_1002767C0, 40LL, 7LL);
      v15[2] = v4;
      void v15[3] = v6;
      v15[4] = a1;
      id v16 = a1;
      id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v12._countAndFlagsBits,  v12._object,  0LL,  0LL,  v14,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_100186C04,  v15);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
      unint64_t v19 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x10);
      unint64_t v18 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8LL) + 0x18);
      if (v19 >= v18 >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1LL);
      }
      v20.n128_f64[0] = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v17);
      specialized Array._endMutation()(v20);
    }
  }

  return _swiftEmptyArrayStorage;
}

uint64_t sub_10018411C(void *a1)
{
  id v2 = [a1 identifiers];
  id v3 = [v2 universalStore];

  if (!v3) {
    return 0LL;
  }
  uint64_t v4 = (void *)objc_opt_self(&OBJC_CLASS___TVMSubscriptionManager);
  id v5 = [v4 sharedInstance];
  unsigned int v6 = [v5 allowsFullCatalogPlayback];

  if (!v6) {
    goto LABEL_9;
  }
  id v7 = [v4 sharedInstance];
  unsigned int v8 = [v7 hasCloudLibrary];

  if (!v8) {
    goto LABEL_9;
  }
  id v9 = [v3 adamID];
  Swift::String v10 = &selRef_subscriptionAdamID;
  if (v9) {
    Swift::String v10 = &selRef_adamID;
  }
  if (![v3 *v10])
  {
LABEL_9:
    swift_unknownObjectRelease(v3);
    return 0LL;
  }

  sub_1000E0418(0LL, &qword_1002B7E70, &OBJC_CLASS___UIAction_ptr);
  Swift::String v11 = (NSBundle *)[(id)objc_opt_self(NSBundle) mainBundle];
  v21._object = (void *)0xE000000000000000LL;
  v12._uint64_t countAndFlagsBits = 0x4C206F7420646441LL;
  v12._object = (void *)0xEE00797261726269LL;
  v13._uint64_t countAndFlagsBits = 0LL;
  v13._object = (void *)0xE000000000000000LL;
  v21._uint64_t countAndFlagsBits = 0LL;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, v11, v13, v21);

  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [(id)objc_opt_self(UIImage) systemImageNamed:v15];

  uint64_t v17 = swift_allocObject(&unk_100276380, 24LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = a1;
  id v18 = a1;
  uint64_t v19 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)( v14._countAndFlagsBits,  v14._object,  0LL,  0LL,  v16,  0LL,  0LL,  0LL,  0LL,  0LL,  0LL,  sub_1001850F4,  v17);
  swift_unknownObjectRelease(v3);
  return v19;
}

id sub_100184394(void *a1)
{
  uint64_t v2 = type metadata accessor for MusicLibrary.AddAction(0LL);
  uint64_t v61 = *(void *)(v2 - 8);
  uint64_t v62 = v2;
  __chkstk_darwin(v2, v3);
  Swift::String v59 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002BCB48);
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5, v6);
  Swift::String v60 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7, v9);
  __n128 v64 = (char *)&v55 - v10;
  uint64_t v11 = sub_1000DFE10((uint64_t *)&unk_1002BB690);
  __chkstk_darwin(v11, v12);
  Swift::String v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for IndexPath(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  __n128 v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v18, v21);
  __n128 v65 = (char *)&v55 - v22;
  uint64_t v23 = sub_1000DFE10(&qword_1002BCB50);
  __chkstk_darwin(v23, v24);
  char v26 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = type metadata accessor for Song(0LL);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  uint64_t v66 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v31 = [a1 playingItem];
  id v32 = v31;
  if (v31)
  {
    uint64_t v58 = v5;
    id v33 = [v31 metadataObject];

    if (!v33) {
      return 0LL;
    }
    id v32 = [v33 song];

    if (v32)
    {
      id v57 = v32;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)(v57, v27, &protocol witness table for Song);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1LL, v27) == 1)
      {
        sub_1000E03B4((uint64_t)v26, &qword_1002BCB50);
        return v32;
      }

      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v66, v26, v27);
      id v34 = [a1 playingItemIndexPath];
      if (v34)
      {
        uint64_t v35 = v34;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        id v36 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v36(v14, v20, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0LL, 1LL, v15);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1LL, v15) != 1)
        {
          uint64_t v37 = v65;
          v36(v65, v14, v15);
          id v38 = [a1 items];
          id v39 = [v38 sectionAtIndex:IndexPath.section.getter()];

          id v40 = [v39 metadataObject];
          if (v40)
          {
            if ([v40 type] == (id)13)
            {
              id v41 = [v40 radioStation];
              if (v41)
              {
                Swift::String v42 = v41;
                if ([v41 type] == (id)4)
                {
                  type metadata accessor for MusicLibrary(0LL);
                  uint64_t v43 = static MusicLibrary.shared.getter();
                  Swift::String v44 = v59;
                  static MusicLibraryAction<>.add.getter();
                  uint64_t v56 = v42;
                  uint64_t v45 = v62;
                  MusicLibrary.supportedStatus<A, B>(for:action:)( v66,  v44,  v27,  v62,  &protocol witness table for Song,  &protocol witness table for MusicLibrary.AddAction);
                  __n128 v46 = swift_release(v43);
                  (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v44, v45, v46);
                  uint64_t v48 = v63;
                  uint64_t v47 = v64;
                  uint64_t v49 = v60;
                  uint64_t v50 = v58;
                  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v64, v58);
                  LODWORD(v6sub_1000E053C(v0 + 2) = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v49, v50);
                  LODWORD(v61) = enum case for MusicLibrary.SupportedStatus.supported<A>(_:);
                  unint64_t v51 = *(void (**)(char *, uint64_t))(v48 + 8);
                  __n128 v52 = v49;
                  uint64_t v53 = v56;
                  v51(v52, v50);

                  v51(v47, v50);
                  (*(void (**)(char *, uint64_t))(v16 + 8))(v65, v15);
                  (*(void (**)(char *, uint64_t))(v28 + 8))(v66, v27);
                  if ((_DWORD)v62 == (_DWORD)v61)
                  {
                  }

                  else
                  {

                    return v53;
                  }

                  return v32;
                }
              }
            }
          }

          (*(void (**)(char *, uint64_t))(v16 + 8))(v37, v15);
          (*(void (**)(char *, uint64_t))(v28 + 8))(v66, v27);
          return v32;
        }
      }

      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1LL, 1LL, v15);
      }

      (*(void (**)(char *, uint64_t))(v28 + 8))(v66, v27);
      sub_1000E03B4((uint64_t)v14, (uint64_t *)&unk_1002BB690);
    }
  }

  return v32;
}

uint64_t sub_100184914()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100184938()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16LL))();
}

uint64_t sub_100184948()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_10018497C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc(dword_1002BCB5C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000E0B64;
  return sub_10017C864(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100184A08(uint64_t a1)
{
  return sub_10017B7EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(uint64_t))sub_10017B860);
}

uint64_t sub_100184A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_100184A38(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

id sub_100184A40()
{
  return sub_10018537C((SEL *)&selRef_playFromMPSong_);
}

id sub_100184A4C()
{
  return sub_10018537C((SEL *)&selRef_playFromMPArtist_);
}

void sub_100184A58(uint64_t a1)
{
}

void sub_100184A64()
{
}

void sub_100184A70()
{
}

id sub_100184A78()
{
  return sub_100170818(*(void **)(v0 + 16), 0LL);
}

double sub_100184A84(uint64_t a1, uint64_t a2)
{
  return sub_10017F190(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(_BYTE *)(v2 + 32));
}

double sub_100184A94(uint64_t a1)
{
  return sub_10017ECD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100184AA0()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100184AD4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc(dword_1002BCB7C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000E0B64;
  return sub_10017EDD0(a1, v4, v5, v6, v7, v8);
}

void sub_100184B54(uint64_t a1)
{
}

uint64_t sub_100184B5C()
{
  swift_release(*(void *)(v0 + 64));
  return swift_deallocObject(v0, 72LL, 7LL);
}

uint64_t sub_100184B90(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  char v10 = *(_BYTE *)(v1 + 48);
  uint64_t v11 = (void *)swift_task_alloc(dword_1002BCB8C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000E0B64;
  return sub_10017F298(a1, v4, v5, v6, v7, v10, v8, v9);
}

double sub_100184C28(uint64_t a1, uint64_t a2)
{
  return sub_10017DB28(a1, a2, *(void **)(v2 + 16), *(_BYTE *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_100184C38()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100184C64()
{
  swift_release(*(void *)(v0 + 72));
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_100184CA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  char v10 = *(_BYTE *)(v1 + 40);
  uint64_t v11 = (void *)swift_task_alloc(dword_1002BCB9C);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_1000E01FC;
  return sub_10017DC4C(a1, v4, v5, v6, v10, v7, v8, v9);
}

uint64_t sub_100184D44()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

uint64_t sub_100184D68()
{
  return sub_100174E58(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), 0LL);
}

uint64_t sub_100184D78()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_100184DA4()
{
  return sub_100179B78(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

double sub_100184DB4(uint64_t a1)
{
  return sub_10017A084(a1, *(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100184DC4()
{
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_100184DF8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(_BYTE *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = swift_task_alloc(dword_1002BCBAC);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1000E0B64;
  *(_BYTE *)(v5 + 288) = v3;
  *(void *)(v5 + 248) = v2;
  *(void *)(v5 + 256) = v4;
  return swift_task_switch(sub_100178D08, 0LL, 0LL);
}

uint64_t sub_100184E6C()
{
  return swift_deallocObject(v0, 33LL, 7LL);
}

double sub_100184EA4(uint64_t a1, unint64_t a2)
{
  return sub_100174F88(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_BYTE *)(v2 + 32));
}

uint64_t sub_100184EB0()
{
  return swift_deallocObject(v0, 65LL, 7LL);
}

uint64_t sub_100184EF8()
{
  __int128 v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  char v4 = *(_BYTE *)(v0 + 64);
  uint64_t v5 = swift_task_alloc(dword_1002BCBBC);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)uint64_t v5 = v1;
  *(void *)(v5 + 8) = sub_1000E0B64;
  *(_BYTE *)(v5 + 408) = v4;
  *(void *)(v5 + 336) = v2;
  *(void *)(v5 + 344) = v3;
  *(_OWORD *)(v5 + 320) = v7;
  return swift_task_switch(sub_1001750BC, 0LL, 0LL);
}

uint64_t sub_100184F7C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  __int128 v7 = (void *)swift_task_alloc(dword_1002BCBD4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *__int128 v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_100174BA8(a1, v4, v5, v6);
}

uint64_t sub_100184FE8()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

id sub_10018500C(uint64_t a1)
{
  return sub_10018504C(a1, (SEL *)&selRef_setFavoriteFlag_forItem_completion_, 1);
}

id sub_10018501C(uint64_t a1)
{
  return sub_10018504C(a1, (SEL *)&selRef_setSuggestLessFlag_forItem_completion_, 1);
}

id sub_10018502C(uint64_t a1)
{
  return sub_10018504C(a1, (SEL *)&selRef_setSuggestLessFlag_forItem_completion_, 0);
}

id sub_10018503C(uint64_t a1)
{
  return sub_10018504C(a1, (SEL *)&selRef_setFavoriteFlag_forItem_completion_, 0);
}

id sub_10018504C(uint64_t a1, SEL *a2, char a3)
{
  return objc_msgSend((id)objc_opt_self(TVMusicLibraryUtilities), *a2, a3 & 1, *(void *)(v3 + 16), 0);
}

void sub_100185094(uint64_t a1)
{
}

void sub_10018509C(uint64_t a1)
{
}

void sub_1001850A4(uint64_t a1)
{
}

void sub_1001850CC(uint64_t a1)
{
}

id sub_1001850F4()
{
  return [(id)objc_opt_self(TVMusicLibraryUtilities) addItemToLibraryWithMPObject:*(void *)(v0 + 16)];
}

uint64_t sub_100185128()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10018514C(uint64_t a1)
{
  return sub_10017B0A4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

double sub_100185154(uint64_t a1, uint64_t a2)
{
  return sub_10017B200(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10018515C()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

uint64_t sub_100185190(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  char v10 = (void *)swift_task_alloc(dword_1002BCBE4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  *char v10 = v2;
  v10[1] = sub_1000E0B64;
  return sub_10017B308(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100185228()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_10018524C()
{
  return swift_deallocObject(v0, 33LL, 7LL);
}

uint64_t sub_100185270()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

double sub_100185294(uint64_t a1)
{
  return sub_100181250(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10018529C()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

uint64_t sub_1001852C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1002BCBF4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_100181570(a1, v4, v5, v6);
}

uint64_t sub_100185330()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_100185340(uint64_t a1)
{
}

uint64_t sub_10018534C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10018535C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_10018536C()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

id sub_10018537C(SEL *a1)
{
  return objc_msgSend((id)objc_opt_self(TVMusicRadioUtilities), *a1, *(void *)(v1 + 16));
}

uint64_t sub_1001853B4()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1001853E0(uint64_t a1)
{
  return sub_10017B7EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(uint64_t))sub_10017A864);
}

uint64_t initializeBufferWithCopyOfBuffer for NowPlayingMenu(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((_BYTE *)a2 + 8);
  *(void *)a1 = *a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain(v3);
  return a1;
}

uint64_t destroy for NowPlayingMenu(void *a1)
{
  return swift_release(*a1);
}

uint64_t *assignWithCopy for NowPlayingMenu(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((_BYTE *)a2 + 8);
  uint64_t v5 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v4;
  swift_retain(v3);
  swift_release(v5);
  return a1;
}

uint64_t *assignWithTake for NowPlayingMenu(uint64_t *a1, uint64_t *a2)
{
  char v3 = *((_BYTE *)a2 + 8);
  uint64_t v4 = *a1;
  *a1 = *a2;
  *((_BYTE *)a1 + 8) = v3;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingMenu()
{
  return &type metadata for NowPlayingMenu;
}

ValueMetadata *type metadata accessor for NowPlayingMenu.SuggestLessButton()
{
  return &type metadata for NowPlayingMenu.SuggestLessButton;
}

uint64_t sub_1001854D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E12C, 1LL);
}

uint64_t sub_1001854E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E104, 1LL);
}

unint64_t sub_1001854FC()
{
  unint64_t result = qword_1002BCCA0;
  if (!qword_1002BCCA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE0C8, &type metadata for NowPlayingMenu.SuggestLessButton);
    atomic_store(result, (unint64_t *)&qword_1002BCCA0);
  }

  return result;
}

uint64_t sub_100185540()
{
  return swift_deallocObject(v0, 25LL, 7LL);
}

double sub_100185564()
{
  return sub_100173D48(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

double sub_100185570()
{
  return sub_100173C1C(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24), (void (*)(__n128))sub_10017138C);
}

double sub_100185594()
{
  return sub_100173A80(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1001855A0()
{
}

double sub_1001855AC()
{
  return sub_1001737B0(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

double sub_1001855B8@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1001736E4((void *)*(void *)(v1 + 16), *(_BYTE *)(v1 + 24), a1).n128_u64[0];
  return result;
}

unint64_t sub_1001855C4()
{
  unint64_t result = qword_1002BCCD8;
  if (!qword_1002BCCD8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE22C, &type metadata for AddToPlaylistView);
    atomic_store(result, (unint64_t *)&qword_1002BCCD8);
  }

  return result;
}

double sub_100185608()
{
  return sub_100173C1C(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24), (void (*)(__n128))sub_10017023C);
}

unint64_t sub_10018562C()
{
  unint64_t result = qword_1002BCCE8;
  if (!qword_1002BCCE8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BCC78);
    sub_1000E0374(&qword_1002BCCB8, &qword_1002BCC70, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, &qword_1002BCCE8);
  }

  return result;
}

double sub_1001856C8()
{
  return sub_100173C1C(*(void *)(v0 + 16), *(_BYTE *)(v0 + 24), (void (*)(__n128))sub_1001703AC);
}

uint64_t sub_1001856EC()
{
  swift_release(*(void *)(v0 + 40));
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100185720(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BCCF4);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_1001704F0(a1, v4, v5, v7, v6);
}

id sub_1001857A0()
{
  return sub_1001857B0(1);
}

id sub_1001857A8()
{
  return sub_1001857B0(0);
}

id sub_1001857B0(char a1)
{
  return [(id)objc_opt_self(TVMusicLibraryUtilities) setSuggestLessFlag:a1 & 1 forItem:*(void *)(v1 + 16) completion:0];
}

void destroy for PlaylistMenuItem(uint64_t a1)
{
}

void *initializeWithCopy for PlaylistMenuItem(void *a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  swift_bridgeObjectRetain(v5);
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for PlaylistMenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  uint64_t v9 = *(void **)(a2 + 24);
  char v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  return a1;
}

uint64_t assignWithTake for PlaylistMenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease(*(void *)(a1 + 16));
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for PlaylistMenuItem()
{
  return &type metadata for PlaylistMenuItem;
}

uint64_t destroy for AddToPlaylistView(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t initializeWithCopy for AddToPlaylistView(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v7;
  *(void *)(a1 + 40) = v8;
  id v9 = v3;
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  return a1;
}

uint64_t assignWithCopy for AddToPlaylistView(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  char v5 = *(_BYTE *)(a2 + 8);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  id v7 = v4;

  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a2 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v11;
  swift_retain(v11);
  swift_release(v10);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a2 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v12);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v15;
  swift_retain(v15);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for AddToPlaylistView(uint64_t a1, uint64_t a2)
{
  char v4 = *(_BYTE *)(a2 + 8);
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  swift_bridgeObjectRelease(*(void *)(a1 + 16));
  uint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  swift_release(v6);
  swift_bridgeObjectRelease(*(void *)(a1 + 32));
  uint64_t v7 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 3sub_1000E053C(v0 + 2) = *(_OWORD *)(a2 + 32);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AddToPlaylistView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AddToPlaylistView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + swift_weakDestroy(v0 + 16) = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AddToPlaylistView()
{
  return &type metadata for AddToPlaylistView;
}

uint64_t sub_100185BD0()
{
  return sub_1000E0374(&qword_1002BCD08, &qword_1002BCD10, (uint64_t)&protocol conformance descriptor for VStack<A>);
}

uint64_t sub_100185BFC()
{
  return sub_100186A9C( &qword_1002BCD18,  &qword_1002BCC80,  (void (*)(void))sub_100185C30,  (uint64_t)&protocol conformance descriptor for <A> A?);
}

unint64_t sub_100185C30()
{
  unint64_t result = qword_1002BCD20;
  if (!qword_1002BCD20)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BCC88);
    sub_10018562C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BCD20);
  }

  return result;
}

uint64_t sub_100185C94()
{
  return sub_100185CC8( &qword_1002BCD28,  (unint64_t *)&qword_1002BA680,  &OBJC_CLASS___MPIdentifierSet_ptr,  (uint64_t)&protocol conformance descriptor for NSObject);
}

uint64_t sub_100185CC8(unint64_t *a1, unint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v7 = sub_1000E0418(255LL, a2, a3);
    uint64_t result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100185D08(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E170, 1LL);
}

uint64_t sub_100185D18()
{
  return sub_100176EB8(*(void *)(v0 + 16));
}

uint64_t sub_100185D24()
{
  uint64_t v2 = (void *)swift_task_alloc(dword_1002BCD44);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_1000E0B64;
  return sub_1001770E8(v0 + 16);
}

void *sub_100185D70(void *a1)
{
  return a1;
}

uint64_t sub_100185D98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a5)
  {
    sub_100185DCC(result, a2, a3, a4);
    id v8 = a6;
    return swift_bridgeObjectRetain(a5);
  }

  return result;
}

uint64_t sub_100185DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    return swift_bridgeObjectRetain(a4);
  }

  return result;
}

void sub_100185DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a5)
  {
    sub_100185E3C(a1, a2, a3, a4);
    swift_bridgeObjectRelease(a5);
  }

uint64_t sub_100185E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    return swift_bridgeObjectRelease(a4);
  }

  return result;
}

uint64_t sub_100185E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t sub_100185E88()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 32));
  swift_release(*(void *)(v0 + 40));
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

void destroy for PlaylistsSection(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(*(void *)(a1 + 24));
  }

  swift_bridgeObjectRelease(*(void *)(a1 + 32));
}

uint64_t initializeWithCopy for PlaylistsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRetain(v5);
  }

  else
  {
    __int128 v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  }

  uint64_t v7 = *(void *)(a2 + 32);
  id v8 = *(void **)(a2 + 40);
  char v9 = *(_BYTE *)(a2 + 48);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v7;
  *(void *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  swift_bridgeObjectRetain(v7);
  id v10 = v8;
  return a1;
}

uint64_t assignWithCopy for PlaylistsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v4)
  {
    if (v5)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRelease(v4);
      *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 24);
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v8);
    }

    else
    {
      sub_100186084(a1);
      __int128 v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v11;
    }
  }

  else if (v5)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v9 = *(void *)(a2 + 8);
    *(void *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    *(void *)(a1 + 24) = v10;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
  }

  else
  {
    __int128 v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v12;
  }

  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v14);
  uint64_t v15 = *(void **)(a2 + 40);
  char v16 = *(_BYTE *)(a2 + 48);
  uint64_t v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = v16;
  id v18 = v15;

  return a1;
}

uint64_t sub_100186084(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for PlaylistsSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v5)
  {
    sub_100186084(a1);
LABEL_5:
    __int128 v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v7;
    goto LABEL_6;
  }

  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
LABEL_6:
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  char v9 = *(_BYTE *)(a2 + 48);
  uint64_t v10 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v9;

  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistsSection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistsSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 49) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 3sub_1000E053C(v0 + 2) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for PlaylistsSection()
{
  return &type metadata for PlaylistsSection;
}

uint64_t getEnumTagSinglePayload for PlaylistAddableObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaylistAddableObject( uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 9) = 1;
    }
  }

  else
  {
    if (a3 >= 0xFE) {
      *(_BYTE *)(result + 9) = 0;
    }
    if (a2) {
      *(_BYTE *)(result + 8) = -(char)a2;
    }
  }

  return result;
}

uint64_t sub_100186280(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistAddableObject()
{
  return &type metadata for PlaylistAddableObject;
}

uint64_t sub_100186298()
{
  return sub_1000E0374(&qword_1002BCD68, &qword_1002BCD70, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

uint64_t sub_1001862C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E1B4, 1LL);
}

uint64_t sub_1001862D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100177E00(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001862DC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(*(void *)(v0 + 40));
  }

  swift_bridgeObjectRelease(*(void *)(v0 + 48));

  return swift_deallocObject(v0, 65LL, 7LL);
}

uint64_t sub_10018631C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001780AC(a1, v2 + 16, a2);
}

unint64_t sub_100186324()
{
  unint64_t result = qword_1002BCDA0;
  if (!qword_1002BCDA0)
  {
    unint64_t result = swift_getWitnessTable("Ջ\b", &type metadata for AddToPlaylistButton);
    atomic_store(result, (unint64_t *)&qword_1002BCDA0);
  }

  return result;
}

unint64_t sub_100186368()
{
  unint64_t result = qword_1002BCDA8;
  if (!qword_1002BCDA8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE1F4, &type metadata for PlaylistMenuItem);
    atomic_store(result, (unint64_t *)&qword_1002BCDA8);
  }

  return result;
}

uint64_t destroy for AddToPlaylistButton(uint64_t a1)
{
  return swift_bridgeObjectRelease(*(void *)(a1 + 32));
}

uint64_t initializeWithCopy for AddToPlaylistButton(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v7;
  id v8 = v3;
  id v9 = v6;
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for AddToPlaylistButton(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  char v5 = *(_BYTE *)(a2 + 8);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  id v7 = v4;

  id v8 = *(void **)(a2 + 16);
  id v9 = *(void **)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v8;
  id v10 = v8;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a1 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  return a1;
}

uint64_t assignWithTake for AddToPlaylistButton(uint64_t a1, uint64_t a2)
{
  char v4 = *(_BYTE *)(a2 + 8);
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  uint64_t v6 = *(void **)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);

  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v7;
  swift_bridgeObjectRelease(v8);
  return a1;
}

ValueMetadata *type metadata accessor for AddToPlaylistButton()
{
  return &type metadata for AddToPlaylistButton;
}

unint64_t sub_100186528()
{
  unint64_t result = qword_1002BCDB8;
  if (!qword_1002BCDB8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BCDC0);
    sub_1000E0374(&qword_1002BCD80, &qword_1002BCD78, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> Section<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BCDB8);
  }

  return result;
}

uint64_t sub_1001865B0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E1F8, 1LL);
}

uint64_t sub_1001865C0()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1001865F4@<X0>(uint64_t a1@<X8>)
{
  return sub_10017A7C4(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001865FC()
{
  unint64_t result = qword_1002BCDE8;
  if (!qword_1002BCDE8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BCDE0);
    sub_1000E0374(&qword_1002BCDF0, &qword_1002BCDD8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BCDE8);
  }

  return result;
}

unint64_t sub_100186698()
{
  unint64_t result = qword_1002BCDF8;
  if (!qword_1002BCDF8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BCDC8);
    sub_1000E0374(&qword_1002B8E00, &qword_1002BC100, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BCDF8);
  }

  return result;
}

double sub_100186734@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10017A6E0(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_10018673C()
{
  return sub_10017A758(*(void *)(v0 + 16));
}

unint64_t sub_100186744()
{
  unint64_t result = qword_1002BCE00;
  if (!qword_1002BCE00)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE378, &type metadata for AddToPlaylistFolderView);
    atomic_store(result, (unint64_t *)&qword_1002BCE00);
  }

  return result;
}

uint64_t destroy for AddToPlaylistFolderView(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 32));
}

uint64_t initializeWithCopy for AddToPlaylistFolderView(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  char v4 = *(_BYTE *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v7;
  id v8 = v3;
  id v9 = v6;
  swift_bridgeObjectRetain(v5);
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for AddToPlaylistFolderView(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  char v5 = *(_BYTE *)(a2 + 8);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v5;
  id v7 = v4;

  id v8 = *(void **)(a2 + 16);
  id v9 = *(void **)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v8;
  id v10 = v8;

  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v11);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a2 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v14;
  swift_retain(v14);
  swift_release(v13);
  return a1;
}

uint64_t assignWithTake for AddToPlaylistFolderView(uint64_t a1, uint64_t a2)
{
  char v4 = *(_BYTE *)(a2 + 8);
  char v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(_BYTE *)(a1 + 8) = v4;

  uint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v6);
  uint64_t v7 = *(void *)(a1 + 32);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  swift_release(v7);
  return a1;
}

uint64_t _s7TVMusic19AddToPlaylistButtonVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100186958(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 40) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + swift_weakDestroy(v0 + 16) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for AddToPlaylistFolderView()
{
  return &type metadata for AddToPlaylistFolderView;
}

unint64_t sub_1001869B4()
{
  unint64_t result = qword_1002BCE10;
  if (!qword_1002BCE10)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BCE18);
    sub_1001865FC();
    sub_100186698();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BCE10);
  }

  return result;
}

uint64_t sub_100186A20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E220, 1LL);
}

uint64_t sub_100186A34()
{
  return sub_100174E58(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100186A48()
{
  unint64_t v2 = (void *)swift_task_alloc(dword_1002BCE3C);
  *(void *)(v1 + swift_weakDestroy(v0 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_1000E0B64;
  return sub_100178680(v0 + 16);
}

uint64_t sub_100186A94()
{
  return sub_100178A98(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100186A9C(unint64_t *a1, uint64_t *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = sub_1000DEA98(a2);
    a3();
    uint64_t result = swift_getWitnessTable(a4, v8);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_100186B00()
{
  return sub_100186A9C( &qword_1002BCE70,  &qword_1002BCE78,  (void (*)(void))sub_100186324,  (uint64_t)&protocol conformance descriptor for <A> A?);
}

const char *sub_100186B24()
{
  return "identifiers";
}

id sub_100186B30@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 identifiers];
  *a2 = result;
  return result;
}

uint64_t sub_100186B6C()
{
  swift_bridgeObjectRelease(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

id sub_100186BA8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_100178C1C(a1, v2 + 16, a2);
}

uint64_t sub_100186BB0()
{
  return sub_1000E0374(&qword_1002BCE90, &qword_1002BCE98, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

void sub_100186CE8()
{
}

void sub_100186D28()
{
  uint64_t v0 = (const __CTFontDescriptor *)CTFontDescriptorCreateWithTextStyle( kCTUIFontTextStyleCaption3,  kCTFontContentSizeCategoryL,  0LL);
  CTFontRef v1 = CTFontCreateWithFontDescriptor(v0, 0.0, 0LL);
  uint64_t v2 = Font.init(_:)(v1);

  qword_1002C5EC0 = v2;
}

unint64_t sub_100186D84(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    char v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BB2F8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  char v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000E04D4(v6, (uint64_t)v15, &qword_1002BD210);
    unint64_t result = sub_10013CCD8((uint64_t)v15);
    if ((v8 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v9 = v4[6] + 40 * result;
    __int128 v10 = v15[0];
    __int128 v11 = v15[1];
    *(void *)(v9 + 3sub_1000E053C(v0 + 2) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + swift_weakDestroy(v0 + 16) = v11;
    *(_OWORD *)(v4[7] + 16 * result) = v17;
    uint64_t v12 = v4[2];
    BOOL v13 = __OFADD__(v12, 1LL);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    void v4[2] = v14;
    v6 += 56LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100186EB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    char v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BD0A0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  char v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000E04D4(v7, (uint64_t)&v16, &qword_1002BD0A8);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    unint64_t result = sub_10013CD08(v16, v17);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v12 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v9;
    unint64_t result = (unint64_t)sub_1000F2010(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v4[2] = v15;
    v7 += 48LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100186FE4(uint64_t a1)
{
  return sub_100187268(a1, &qword_1002BD220);
}

unint64_t sub_100186FF0(uint64_t a1)
{
  return sub_100187268(a1, &qword_1002BD218);
}

unint64_t sub_100186FFC(uint64_t a1)
{
  return sub_100187774(a1, &qword_1002BD1B8, sub_10013CD6C);
}

unint64_t sub_100187010(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    char v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BD1F8);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  char v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000E04D4(v7, (uint64_t)&v14, (uint64_t *)&unk_1002BD200);
    uint64_t v8 = v14;
    unint64_t result = sub_10013CDE0(v14);
    if ((v10 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    *(void *)(v4[6] + 8 * result) = v8;
    unint64_t result = (unint64_t)sub_1000F2010(&v15, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    void v4[2] = v13;
    v7 += 40LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10018713C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    char v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BD1E0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  char v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v10 = *(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    unint64_t result = sub_10013CD08(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *uint64_t v13 = v7;
    v13[1] = v8;
    uint64_t v14 = (void *)(v4[7] + 16 * result);
    *uint64_t v14 = v10;
    v14[1] = v9;
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, 1LL);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v6 += 4;
    void v4[2] = v17;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10018725C(uint64_t a1)
{
  return sub_100187268(a1, &qword_1002BB2C8);
}

unint64_t sub_100187268(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(a2);
  uint64_t v4 = static _DictionaryStorage.allocate(capacity:)(v3);
  uint64_t v5 = (void *)v4;
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v5;
  }

  swift_retain(v4);
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    unint64_t result = sub_10013CD08(v8, v9);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v13 = (uint64_t *)(v5[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    *(void *)(v5[7] + 8 * result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    void v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release(v5);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10018737C(uint64_t a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BD1C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
    uint64_t v9 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    uint64_t v27 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v27);
    return (unint64_t)v9;
  }

  sub_1000DFE10((uint64_t *)&unk_1002BD1D0);
  uint64_t v8 = static _DictionaryStorage.allocate(capacity:)(v7);
  uint64_t v9 = (void *)v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_9;
  }
  uint64_t v11 = (char *)v6 + *(int *)(v2 + 48);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v29 = a1;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v3 + 72);
  swift_retain(v8);
  while (1)
  {
    sub_1000E04D4(v14, (uint64_t)v6, &qword_1002BD1C8);
    uint64_t v16 = *v6;
    uint64_t v17 = v6[1];
    unint64_t result = sub_10013CE60(*v6, v17);
    if ((v19 & 1) != 0) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v21 = (uint64_t *)(v9[6] + 16 * result);
    *uint64_t v21 = v16;
    v21[1] = v17;
    uint64_t v22 = v9[7];
    uint64_t v23 = type metadata accessor for SocialProfile(0LL);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32LL))( v22 + *(void *)(*(void *)(v23 - 8) + 72LL) * v20,  v11,  v23);
    uint64_t v24 = v9[2];
    BOOL v25 = __OFADD__(v24, 1LL);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_12;
    }
    void v9[2] = v26;
    v14 += v15;
    if (!--v10)
    {
      swift_release(v9);
      uint64_t v27 = v29;
      goto LABEL_10;
    }
  }

  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10018751C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BD1C0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v7 = (uint64_t)*(v6 - 2);
    uint64_t v8 = (uint64_t)*(v6 - 1);
    uint64_t v9 = *v6;
    swift_bridgeObjectRetain(v8);
    id v10 = v9;
    unint64_t result = sub_10013CD08(v7, v8);
    if ((v12 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    unint64_t v13 = (uint64_t *)(v4[6] + 16 * result);
    *unint64_t v13 = v7;
    v13[1] = v8;
    *(void *)(v4[7] + 8 * result) = v10;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    void v4[2] = v16;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100187634(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BB0D0);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  uint64_t v6 = v3 + 64;
  uint64_t v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_1000E04D4(v7, (uint64_t)v16, &qword_1002BD1B0);
    unint64_t result = sub_10013CCD8((uint64_t)v16);
    if ((v9 & 1) != 0) {
      break;
    }
    *(void *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL)) |= 1LL << result;
    uint64_t v10 = v4[6] + 40 * result;
    __int128 v11 = v16[0];
    __int128 v12 = v16[1];
    *(void *)(v10 + 3sub_1000E053C(v0 + 2) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + swift_weakDestroy(v0 + 16) = v12;
    unint64_t result = (unint64_t)sub_1000F2010(&v18, (_OWORD *)(v4[7] + 32 * result));
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    void v4[2] = v15;
    v7 += 72LL;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100187774(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(a2);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)(v4);
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v7;
  }

  swift_retain(v6);
  char v9 = (void *)(a1 + 40);
  while (1)
  {
    uint64_t v10 = *((unsigned __int8 *)v9 - 8);
    uint64_t v11 = *v9;
    swift_bridgeObjectRetain(*v9);
    unint64_t result = a3(v10);
    if ((v13 & 1) != 0) {
      break;
    }
    *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(_BYTE *)(v7[6] + result) = v10;
    *(void *)(v7[7] + 8 * result) = v11;
    uint64_t v14 = v7[2];
    BOOL v15 = __OFADD__(v14, 1LL);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v7[2] = v16;
    v9 += 2;
    if (!--v8)
    {
      swift_release(v7);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10018787C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10((uint64_t *)&unk_1002BB300);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (char *)(a1 + 33);
  while (1)
  {
    unsigned __int8 v7 = *(v6 - 1);
    char v8 = *v6;
    unint64_t result = sub_10013CF3C(v7);
    if ((v10 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(_BYTE *)(v4[6] + result) = v7;
    *(_BYTE *)(v4[7] + result) = v8;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    void v4[2] = v13;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100187974(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }

  sub_1000DFE10(&qword_1002BD030);
  uint64_t v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  uint64_t v4 = (void *)v3;
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }

  swift_retain(v3);
  uint64_t v6 = (_BYTE *)(a1 + 48);
  while (1)
  {
    uint64_t v7 = *((void *)v6 - 2);
    uint64_t v8 = *((void *)v6 - 1);
    char v9 = *v6;
    swift_bridgeObjectRetain(v8);
    unint64_t result = sub_10013CD08(v7, v8);
    if ((v11 & 1) != 0) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    BOOL v12 = (uint64_t *)(v4[6] + 16 * result);
    *BOOL v12 = v7;
    v12[1] = v8;
    *(_BYTE *)(v4[7] + result) = v9;
    uint64_t v13 = v4[2];
    BOOL v14 = __OFADD__(v13, 1LL);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v6 += 24;
    void v4[2] = v15;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }

  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100187A84(void *a1)
{
  uint64_t v3 = (os_log_s *)type metadata accessor for PushDestination(0LL);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10((uint64_t *)&unk_1002BD0F0);
  __chkstk_darwin(v7, v8);
  char v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for Artist(0LL);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v16 = [a1 identifiers];
  id v17 = [v16 universalStore];

  if (v17)
  {
    Swift::String v42 = v3;
    if ([v17 adamID])
    {
      id v40 = v6;
      uint64_t v41 = v1;
      char v19 = (void *)objc_opt_self(&OBJC_CLASS___MPIdentifierSet);
      uint64_t v20 = sub_1000E0418(0LL, (unint64_t *)&qword_1002B8B08, &OBJC_CLASS___MPModelArtistKind_ptr);
      id v21 = [(id)swift_getObjCClassFromMetadata(v20) identityKind];
      id v22 =  objc_msgSend( v19,  "tvm_identifierSetForModelKind:withStoreID:subscriptionID:",  v21,  objc_msgSend(v17, "adamID"),  0);

      __chkstk_darwin(v23, v24);
      *(&v39 - sub_1000E053C(v0 + 2) = (uint64_t)a1;
      BOOL v25 = v22;
      id v26 = objc_allocWithZone(&OBJC_CLASS___MPModelArtist);
      uint64_t v27 = swift_allocObject(&unk_100277320, 32LL, 7LL);
      *(void *)(v27 + swift_weakDestroy(v0 + 16) = sub_100194FE8;
      *(void *)(v27 + 24) = &v39 - 4;
      v44[3] = sub_1000FF1AC;
      uint64_t v45 = v27;
      Swift::String aBlock = _NSConcreteStackBlock;
      v44[0] = 1107296256LL;
      v44[1] = sub_1000E8E54;
      v44[2] = &unk_100277338;
      uint64_t v28 = _Block_copy(&aBlock);
      swift_retain(v27);
      id v29 = [v26 initWithIdentifiers:v25 block:v28];
      _Block_release(v28);
      swift_release(v45);
      LOBYTE(v28) = swift_isEscapingClosureAtFileLocation(v27, "", 0LL, 0LL, 0LL, 1LL);
      swift_release(v27);
      if ((v28 & 1) != 0)
      {
        __break(1u);
      }

      else
      {
        id v30 = v29;
        dispatch thunk of LegacyModelObjectConvertible.init(_:)(v30, v11, &protocol witness table for Artist);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1LL, v11) == 1)
        {

          swift_unknownObjectRelease(v17);
          sub_1000E03B4((uint64_t)v10, (uint64_t *)&unk_1002BD0F0);
        }

        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
          uint64_t v38 = (uint64_t)v40;
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v40, v15, v11);
          swift_storeEnumTagMultiPayload(v38, v42, 0LL);
          sub_100189C60(v38);
          swift_unknownObjectRelease(v17);

          sub_100192F88(v38);
          (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
        }
      }

      return;
    }

    swift_unknownObjectRelease(v17);
  }

  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v31 = type metadata accessor for Logger(0LL, v18);
  sub_1000E96CC(v31, (uint64_t)qword_1002C5EC8);
  id v32 = a1;
  Swift::String v42 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v33))
  {
    id v34 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v35 = (void ***)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)id v34 = 138412290;
    Swift::String aBlock = v32;
    id v36 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v44, v34 + 4);
    *uint64_t v35 = v32;

    _os_log_impl((void *)&_mh_execute_header, v42, v33, "No store ID for artist: %@", v34, 0xCu);
    uint64_t v37 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v35, 1LL, v37);
    swift_slowDealloc(v35, -1LL, -1LL);
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  else
  {
  }
}

uint64_t sub_100187F9C(void *a1)
{
  return sub_100187FDC( a1,  (uint64_t *)&unk_1002BD010,  (uint64_t (*)(void))&type metadata accessor for Album,  (uint64_t)&protocol witness table for Album,  3LL);
}

uint64_t sub_100187FBC(void *a1)
{
  return sub_100187FDC( a1,  &qword_1002BCB50,  (uint64_t (*)(void))&type metadata accessor for Song,  (uint64_t)&protocol witness table for Song,  4LL);
}

uint64_t sub_100187FDC(void *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for PushDestination(0LL);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(a2);
  __chkstk_darwin(v14, v15);
  id v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = a3(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  id v22 = (char *)&v24 - v21;
  dispatch thunk of LegacyModelObjectConvertible.init(_:)(a1, v18, a4);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v13, v22, v18);
  swift_storeEnumTagMultiPayload(v13, v10, a5);
  sub_100189C60((uint64_t)v13);
  sub_100192F88((uint64_t)v13);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
}

uint64_t sub_100188174(void *a1)
{
  return sub_100187FDC( a1,  (uint64_t *)&unk_1002BD010,  (uint64_t (*)(void))&type metadata accessor for Album,  (uint64_t)&protocol witness table for Album,  5LL);
}

uint64_t sub_100188194(void *a1)
{
  return sub_100187FDC( a1,  (uint64_t *)&unk_1002BD100,  (uint64_t (*)(void))&type metadata accessor for Playlist,  (uint64_t)&protocol witness table for Playlist,  6LL);
}

uint64_t sub_1001881B4(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v4 < 0) {
    uint64_t v17 = *v1;
  }
  else {
    uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v1);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *uint64_t v1 = v4;
  uint64_t v5 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000LL) == 0 && (v4 & 0x4000000000000000LL) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1LL;
  }

  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1LL, v4);
    swift_bridgeObjectRelease(*v1);
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
LABEL_15:
    uint64_t result = sub_100193764(v8 + 8LL * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0) {
      uint64_t v18 = v4;
    }
    else {
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }

  if (v11 < 1) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  BOOL v13 = __OFADD__(v12, v11);
  uint64_t v14 = v12 + v11;
  if (!v13)
  {
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v14;
LABEL_19:
    __n128 v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }

  __break(1u);
  return result;
}

uint64_t sub_10018836C(uint64_t a1)
{
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0) {
      uint64_t v16 = a1;
    }
    else {
      uint64_t v16 = a1 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a1);
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }

  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  }

  uint64_t v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }

  if (v4 < 0) {
    uint64_t v17 = *v1;
  }
  else {
    uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8LL;
  }
  swift_bridgeObjectRetain(*v1);
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_29;
  }
LABEL_5:
  uint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *uint64_t v1 = v4;
  uint64_t v5 = 0LL;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000LL) == 0 && (v4 & 0x4000000000000000LL) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8LL) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1LL;
  }

  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFF8LL) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1LL, v4);
    swift_bridgeObjectRelease(*v1);
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8LL;
LABEL_15:
    uint64_t result = sub_100193974(v8 + 8LL * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0) {
      uint64_t v18 = v4;
    }
    else {
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v4);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }

  if (v11 < 1) {
    goto LABEL_19;
  }
  uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10);
  BOOL v13 = __OFADD__(v12, v11);
  uint64_t v14 = v12 + v11;
  if (!v13)
  {
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8LL) + 0x10) = v14;
LABEL_19:
    __n128 v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }

  __break(1u);
  return result;
}

void sub_100188524(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }

  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }

  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_10015AA54(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }

uint64_t sub_10018868C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Logger(0LL, a2);
  sub_1001059D4(v2, qword_1002C5EC8);
  sub_1000E96CC(v2, (uint64_t)qword_1002C5EC8);
  return Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100224590LL,  0x776569566E69614DLL,  0xE800000000000000LL);
}

id sub_100188700(uint64_t a1)
{
  return sub_1001913F8(a1, 0LL, type metadata accessor for TVMusicUIMainViewController, &qword_1002C5EE0);
}

char *sub_100188734(uint64_t a1, uint64_t a2, void *a3)
{
  int64_t v4 = v3;
  v47[1] = a1;
  uint64_t v48 = a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType(v3);
  uint64_t v7 = type metadata accessor for MusicDataRequest.ExecutionMethod(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider] = 0LL;
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_privacyAcknowledgementObserver] = 0LL;
  v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewType] = 2;
  v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didUpdateMainView] = 0;
  v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didAcknowledgePrivacyDisclaimer] = 0;
  unint64_t v12 = &v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pendingDeepLinkURL];
  uint64_t v13 = type metadata accessor for URL(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56LL))(v12, 1LL, 1LL, v13);
  v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pageProviderStarted] = 0;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewController], 0LL);
  *(void *)&v4[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_isMusicVideoBlockedObserver] = 0LL;
  uint64_t v14 = _s18DefaultBagAccessorCMa();
  uint64_t v15 = swift_allocObject(v14, 16LL, 7LL);
  uint64_t v16 = sub_1000DFE10((uint64_t *)&unk_1002BD120);
  uint64_t v17 = swift_allocObject(v16, 112LL, 7LL);
  *(_OWORD *)(v17 + swift_weakDestroy(v0 + 16) = xmmword_1001EBC10;
  uint64_t v18 = _s56DisableVideoFromConfigurationsMusicTabAvailabilityFilterCMa();
  uint64_t v19 = swift_allocObject(v18, 16LL, 7LL);
  *(void *)(v17 + 56) = v18;
  *(void *)(v17 + 64) = &off_100272568;
  *(void *)(v17 + 3sub_1000E053C(v0 + 2) = v19;
  uint64_t v20 = _s53UndecidedSubscriptionStateMusicTabsAvailabilityFilterCMa();
  uint64_t v21 = swift_allocObject(v20, 24LL, 7LL);
  *(void *)(v21 + swift_weakDestroy(v0 + 16) = 0LL;
  *(void *)(v17 + 96) = v20;
  *(void *)(v17 + 104) = &off_100271200;
  *(void *)(v17 + 7sub_1000E053C(v0 + 2) = v21;
  uint64_t v22 = _s22DefaultSortingProviderCMa();
  uint64_t v23 = swift_allocObject(v22, 16LL, 7LL);
  char v24 = v4;
  uint64_t v25 = sub_100194480(v15, v17, v23, (uint64_t)sub_100188B40, 0LL);
  uint64_t v26 = type metadata accessor for MusicTabs.DefaultProvider(0LL);
  v50[3] = v26;
  v50[4] = &off_100274590;
  v50[0] = v25;
  uint64_t v27 = type metadata accessor for Tabs(0LL);
  uint64_t v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  uint64_t v29 = sub_100195034((uint64_t)v50, v26);
  __chkstk_darwin(v29, v29);
  uint64_t v31 = (void *)((char *)v47 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  uint64_t v33 = *v31;
  swift_retain(v25);
  uint64_t v34 = sub_100193B90(0, v33, v28);
  sub_1000E053C(v50);
  *(void *)&v24[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs] = v34;

  if (a2)
  {
    NSString v36 = String._bridgeToObjectiveC()();
    *(void *)&double v35 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }

  else
  {
    NSString v36 = 0LL;
  }

  v49.receiver = v24;
  v49.super_class = ObjectType;
  uint64_t v37 = v48;
  id v38 = objc_msgSendSuper2(&v49, "initWithNibName:bundle:", v36, v48, v35);

  (*(void (**)(char *, void, uint64_t))(v8 + 104))( v11,  enum case for MusicDataRequest.ExecutionMethod.firstParty(_:),  v7);
  uint64_t v39 = (char *)v38;
  static MusicDataRequest.preferredExecutionMethod.setter(v11);
  uint64_t v40 = sub_100188B94();
  uint64_t v41 = *(void *)&v39[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider];
  *(void *)&v39[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider] = v40;
  swift_release(v41);
  Swift::String v42 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v43 = [v42 defaultCenter];
  [v43 addObserver:v39 selector:"accountChanged:" name:@"TVMusicAccountChangedNotification" object:0];

  id v44 = [v42 defaultCenter];
  uint64_t v45 = v39;
  [v44 addObserver:v45 selector:"appDidBecomeActive:" name:UIApplicationDidBecomeActiveNotification object:0];
  swift_release(v25);

  return v45;
}

id sub_100188B40()
{
  id v0 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
  id v1 = [v0 hasMusicSubscription];

  return v1;
}

uint64_t sub_100188B94()
{
  uint64_t v1 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v1, v2);
  int64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for MusicConfiguration(0LL);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v11);
  uint64_t v13 = (char *)&v25 - v12;
  MusicConfiguration.init(bagProfileName:bagProfileVersion:mediaAPIClientIdentifier:)( 0x636973754D5654LL,  0xE700000000000000LL,  49LL,  0xE100000000000000LL,  0xD000000000000011LL,  0x8000000100224590LL);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs);
  uint64_t v15 = *sub_1000E0518((void *)(v14 + 16), *(void *)(v14 + 40));
  uint64_t v16 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56LL))(v4, 1LL, 1LL, v16);
  type metadata accessor for MainActor(0LL);
  uint64_t v17 = swift_retain(v15);
  uint64_t v18 = static MainActor.shared.getter(v17);
  uint64_t v19 = (void *)swift_allocObject(&unk_100277240, 40LL, 7LL);
  id v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  void v19[4] = v15;
  uint64_t v20 = sub_100125950((uint64_t)v4, (uint64_t)&unk_1002BD080, (uint64_t)v19);
  __n128 v21 = swift_release(v20);
  (*(void (**)(char *, char *, uint64_t, __n128))(v6 + 16))(v10, v13, v5, v21);
  uint64_t v22 = sub_1000DFE10(&qword_1002B8B58);
  swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  swift_retain(v14);
  uint64_t v23 = MusicPageProvider.init(configuration:appTabs:appDestinationPageProvider:)(v10, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
  return v23;
}

double sub_100188E18()
{
  uint64_t v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v8, "viewDidLoad");
  if ((v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didUpdateMainView] & 1) == 0) {
    sub_100188EE0(2, v2);
  }
  uint64_t v3 = swift_allocObject(&unk_100277370, 24LL, 7LL);
  swift_unknownObjectWeakInit(v3 + 16, v1);
  uint64_t v4 = type metadata accessor for PrivacyAcknowledgementObserver();
  swift_allocObject(v4, 56LL, 7LL);
  uint64_t v5 = PrivacyAcknowledgementObserver.init(dispatchOnMainThread:handler:)(1, (uint64_t)sub_10019502C, v3);
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_privacyAcknowledgementObserver];
  *(void *)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_privacyAcknowledgementObserver] = v5;
  *(void *)&double result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_100188EE0(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (!a1)
  {
    if (qword_1002B7210 != -1) {
      swift_once(&qword_1002B7210, sub_10018868C);
    }
    uint64_t v21 = type metadata accessor for Logger(0LL, a2);
    uint64_t v22 = sub_1000E96CC(v21, (uint64_t)qword_1002C5EC8);
    uint64_t v23 = (os_log_s *)Logger.logObject.getter(v22);
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Showing sign-in page", v25, 2u);
      swift_slowDealloc(v25, -1LL, -1LL);
    }

    uint64_t v26 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider];
    *(void *)&v3[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider] = 0LL;
    swift_release(v26);
    char v49 = 0;
    State.init(wrappedValue:)(&aBlock, &v49, &type metadata for Bool);
    char v27 = (char)aBlock;
    uint64_t v28 = (void *)v43;
    Swift::String aBlock = (void **)sub_10018D178;
    uint64_t v43 = 0LL;
    LOBYTE(v44) = v27;
    uint64_t v45 = v28;
    uint64_t v29 = (uint64_t *)&unk_1002BD070;
    goto LABEL_21;
  }

  if (a1 == 1)
  {
    if (qword_1002B7210 != -1) {
      swift_once(&qword_1002B7210, sub_10018868C);
    }
    uint64_t v4 = type metadata accessor for Logger(0LL, a2);
    uint64_t v5 = sub_1000E96CC(v4, (uint64_t)qword_1002C5EC8);
    uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      objc_super v8 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)objc_super v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Showing privacy disclaimer", v8, 2u);
      swift_slowDealloc(v8, -1LL, -1LL);
    }

    uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider];
    *(void *)&v3[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider] = 0LL;
    swift_release(v9);
    uint64_t v10 = swift_allocObject(&unk_1002771C8, 24LL, 7LL);
    *(void *)(v10 + swift_weakDestroy(v0 + 16) = v3;
    uint64_t v11 = type metadata accessor for PrivacyDisclaimer();
    uint64_t inited = swift_initStackObject(v11, v48);
    *(void *)(inited + swift_weakDestroy(v0 + 16) = 0LL;
    uint64_t v13 = v3;
    id v14 = PrivacyDisclaimer.viewController.getter();
    uint64_t v15 = objc_opt_self(&OBJC_CLASS___AMSUIOnboardingViewController);
    uint64_t v16 = swift_dynamicCastObjCClass(v14, v15);
    if (v16)
    {
      uint64_t v17 = (void *)v16;
      uint64_t v18 = swift_allocObject(&unk_1002771F0, 32LL, 7LL);
      *(void *)(v18 + swift_weakDestroy(v0 + 16) = sub_100194EB8;
      *(void *)(v18 + 24) = v10;
      __n128 v46 = sub_100194EE4;
      uint64_t v47 = v18;
      Swift::String aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256LL;
      id v44 = sub_100166124;
      uint64_t v45 = &unk_100277208;
      uint64_t v19 = _Block_copy(&aBlock);
      uint64_t v20 = v47;
      swift_retain(v10);
      objc_msgSend(v17, "setPrimaryButtonCallback:", v19, swift_release(v20).n128_f64[0]);
      swift_release(v10);
      _Block_release(v19);
    }

    else
    {
      swift_release(v10);
    }

    id v41 = PrivacyDisclaimer.viewController.getter();
    swift_setDeallocating(inited);

    goto LABEL_24;
  }

  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v30 = type metadata accessor for Logger(0LL, a2);
  uint64_t v31 = sub_1000E96CC(v30, (uint64_t)qword_1002C5EC8);
  uint64_t v32 = (os_log_s *)Logger.logObject.getter(v31);
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Starting MusicUI", v34, 2u);
    swift_slowDealloc(v34, -1LL, -1LL);
  }

  uint64_t v35 = OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider;
  uint64_t v36 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider];
  if (v36
    || (uint64_t v37 = sub_100188B94(),
        uint64_t v38 = *(void *)&v3[v35],
        *(void *)&v3[v35] = v37,
        swift_release(v38),
        sub_10018CC08(),
        (uint64_t v36 = *(void *)&v3[v35]) != 0))
  {
    uint64_t v39 = *(void *)&v3[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs];
    swift_retain(v39);
    swift_retain(v36);
    sub_1001946E4(v39, v36, (uint64_t)&aBlock);
    uint64_t v29 = (uint64_t *)&unk_1002BD078;
LABEL_21:
    id v40 = objc_allocWithZone((Class)sub_1000DFE10(v29));
    id v41 = (id)UIHostingController.init(rootView:)(&aBlock);
LABEL_24:
    sub_10018D3C0(v41);

    return;
  }

  __break(1u);
}

void sub_100189354(char a1, uint64_t a2)
{
  uint64_t v3 = a2 + 16;
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v4 = type metadata accessor for Logger(0LL, a2);
  uint64_t v5 = sub_1000E96CC(v4, (uint64_t)qword_1002C5EC8);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    objc_super v8 = (uint8_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)objc_super v8 = 67109120;
    int v11 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v8 + 4);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Privacy acknowledgement status changed: %{BOOL}d", v8, 8u);
    swift_slowDealloc(v8, -1LL, -1LL);
  }

  swift_beginAccess(v3, &v11, 0LL, 0LL);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didAcknowledgePrivacyDisclaimer) = (a1 & 1) == 0;
    sub_1001894A4();
  }

void sub_1001894A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didAcknowledgePrivacyDisclaimer) & 1) != 0
    || (id v6 = [(id)objc_opt_self(ICPrivacyInfo) sharedPrivacyInfo],
        unsigned __int8 v7 = [v6 privacyAcknowledgementRequiredForMusic],
        v6,
        (v7 & 1) == 0))
  {
    id v9 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
    id v10 = [v9 activeAccountIdentifier];
    swift_unknownObjectRelease(v9);
    if (v10)
    {

      int v8 = 2;
    }

    else
    {
      int v8 = 0;
    }
  }

  else
  {
    int v8 = 1;
  }

  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewType) != v8)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewType) = v8;
    sub_100188EE0();
  }

  uint64_t v11 = *sub_1000E0518( (void *)(*(void *)(v1 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs) + 16LL),  *(void *)(*(void *)(v1 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs) + 40LL));
  uint64_t v12 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56LL))(v5, 1LL, 1LL, v12);
  type metadata accessor for MainActor(0LL);
  uint64_t v13 = swift_retain(v11);
  uint64_t v14 = static MainActor.shared.getter(v13);
  uint64_t v15 = (void *)swift_allocObject(&unk_100277128, 40LL, 7LL);
  _OWORD v15[2] = v14;
  void v15[3] = &protocol witness table for MainActor;
  v15[4] = v11;
  uint64_t v16 = sub_100125950((uint64_t)v5, (uint64_t)&unk_1002BB810, (uint64_t)v15);
  swift_release(v16);
  uint64_t v17 = OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didUpdateMainView;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didUpdateMainView) & 1) == 0)
  {
    sub_10018CC08();
    *(_BYTE *)(v1 + v17) = 1;
  }

void sub_100189718()
{
  id v1 = [v0 childViewControllers];
  uint64_t v2 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BD110, &OBJC_CLASS___UIViewController_ptr);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
  {
    if (v3 < 0) {
      uint64_t v8 = v3;
    }
    else {
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(v3);
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(v3);
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease(v3);
    return;
  }

  if (!*(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10)) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001LL) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0LL, v3);
    goto LABEL_6;
  }

  if (*(void *)((v3 & 0xFFFFFFFFFFFFF8LL) + 0x10))
  {
    id v4 = *(id *)(v3 + 32);
LABEL_6:
    id v5 = v4;
    swift_bridgeObjectRelease(v3);
    uint64_t v6 = sub_1000DFE10(&qword_1002B8A00);
    uint64_t v7 = swift_allocObject(v6, 40LL, 7LL);
    *(_OWORD *)(v7 + swift_weakDestroy(v0 + 16) = xmmword_1001E9180;
    *(void *)(v7 + 3sub_1000E053C(v0 + 2) = v5;
    specialized Array._endMutation()((__n128)xmmword_1001E9180);
    return;
  }

  __break(1u);
}

uint64_t sub_1001898FC(char *a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002BD0B8);
  __chkstk_darwin(v2, v3);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for NavigationPath.CollectionProxy(0LL);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = __chkstk_darwin(v9, v12);
  uint64_t v15 = (char *)&v30 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v30 = a1;
  v17((char *)&v30 - v18, (uint64_t)a1, v6);
  uint64_t v31 = sub_1000DF308( &qword_1002BD0C8,  (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy,  (uint64_t)&protocol conformance descriptor for NavigationPath.CollectionProxy);
  uint64_t v32 = v15;
  dispatch thunk of RangeReplaceableCollection.init()(v6);
  uint64_t v19 = sub_1000DF308( &qword_1002BD0D0,  (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy,  (uint64_t)&protocol conformance descriptor for NavigationPath.CollectionProxy);
  dispatch thunk of Sequence.makeIterator()(v6, v19);
  uint64_t v20 = &v5[*(int *)(v2 + 36)];
  uint64_t v21 = sub_1000DF308( &qword_1002BD0C0,  (uint64_t (*)(uint64_t))&type metadata accessor for NavigationPath.CollectionProxy,  (uint64_t)&protocol conformance descriptor for NavigationPath.CollectionProxy);
  uint64_t v22 = *(void *)v20;
  dispatch thunk of Collection.endIndex.getter(&v34, v6, v21);
  if (v22 == (void)v34)
  {
    uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  }

  else
  {
    do
    {
      char v27 = (void (*)(__int128 *, void))dispatch thunk of Collection.subscript.read(&v34, v20, v6, v21);
      sub_1000FF28C(v28, (uint64_t)v36);
      v27(&v34, 0LL);
      v17(v11, (uint64_t)v5, v6);
      dispatch thunk of Collection.formIndex(after:)(v20, v6, v21);
      uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v11, v6);
      sub_100110D4C(v36, (uint64_t)&v34);
      uint64_t v29 = v35;
      sub_1000E0518(&v34, v35);
      if ((sub_1000ED628(v29) & 1) != 0)
      {
        sub_1000E053C(&v34);
      }

      else
      {
        sub_100110D4C(&v34, (uint64_t)v33);
        dispatch thunk of RangeReplaceableCollection.append(_:)(v33, v6, v31);
      }

      uint64_t v26 = *(void *)v20;
      dispatch thunk of Collection.endIndex.getter(&v34, v6, v21);
    }

    while (v26 != (void)v34);
  }

  os_log_type_t v24 = v30;
  v23(v30, v6);
  sub_1000E03B4((uint64_t)v5, &qword_1002BD0B8);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v24, v32, v6);
}

double sub_100189C60(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PushDestination(0LL);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3, v6);
  id v7 = [(id)objc_opt_self(UIApplication) sharedApplication];
  id v8 = [v7 applicationState];

  if (v8)
  {
    id v9 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
    sub_1001930B0(a1, (uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
    uint64_t v10 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = (v10 + 24) & ~v10;
    uint64_t v12 = swift_allocObject(&unk_100277088, v11 + v5, v10 | 7);
    *(void *)(v12 + swift_weakDestroy(v0 + 16) = v1;
    sub_100193224((uint64_t)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL), v12 + v11);
    aBlock[4] = sub_100193268;
    uint64_t v20 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1001164CC;
    aBlock[3] = &unk_1002770A0;
    uint64_t v13 = _Block_copy(aBlock);
    uint64_t v14 = v20;
    uint64_t v15 = v1;
    objc_msgSend(v9, "launchAppWithCompletionHandler:", v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);
    swift_unknownObjectRelease(v9);
  }

  else
  {
    uint64_t v17 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs]
                    + OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority);
    uint64_t v18 = sub_1000DF308( (unint64_t *)&unk_1002BD020,  type metadata accessor for PushDestination,  (uint64_t)&unk_1001E9894);
    swift_retain(v17);
    MusicStackAuthority.push<A>(_:)(a1, v3, v18);
    *(void *)&double result = swift_release(v17).n128_u64[0];
  }

  return result;
}

void sub_10018A040(void *a1, void *a2)
{
  uint64_t v4 = objc_opt_self(&OBJC_CLASS___MPModelArtist);
  uint64_t v5 = swift_dynamicCastObjCClass(a1, v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = a1;
    id v8 = [a2 name];
    [v6 setName:v8];
  }

void sub_10018A1F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs]
                 + OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority);
  _OWORD v6[3] = a1;
  swift_retain(v3);
  uint64_t v4 = (void (*)(_BYTE *, void))MusicStackAuthority.path.modify(v7);
  NavigationPath.mutateWithCollectionProxy(transform:)(sub_100194F3C, v6);
  v4(v7, 0LL);
  id v5 = objc_msgSend(v1, "presentedViewController", swift_release(v3).n128_f64[0]);

  if (v5) {
    [v2 dismissViewControllerAnimated:0 completion:0];
  }
}

double sub_10018A2B8(char *a1, void *a2, uint64_t a3)
{
  id v60 = a2;
  uint64_t v5 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v5, v6);
  id v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v59 = sub_1000DFE10(&qword_1002BD0B8);
  __chkstk_darwin(v59, v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = type metadata accessor for NavigationPath.CollectionProxy(0LL);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12, &type metadata accessor for NavigationPath.CollectionProxy);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  uint64_t v62 = (char *)&v55 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)&v55 - v21;
  uint64_t v24 = sub_1000DF308( &qword_1002BD0C0,  v23,  (uint64_t)&protocol conformance descriptor for NavigationPath.CollectionProxy);
  dispatch thunk of Collection.startIndex.getter(&v66, v12, v24);
  uint64_t v25 = dispatch thunk of Collection.endIndex.getter(&v64, v12, v24);
  if ((void)v66 != (void)v64)
  {
    uint64_t v26 = NavigationPath.CollectionProxy.endIndex.getter(v25);
    BOOL v27 = __OFSUB__(v26, 1LL);
    uint64_t v28 = v26 - 1;
    if (v27)
    {
      __break(1u);
      goto LABEL_16;
    }

    NavigationPath.CollectionProxy.subscript.getter(&v66, v28);
    uint64_t v61 = (uint64_t)v22;
    uint64_t v29 = v67;
    sub_1000E0518(&v66, v67);
    uint64_t v22 = (char *)v61;
    LOBYTE(v29) = sub_1000ED628(v29);
    sub_1000E053C(&v66);
    if ((v29 & 1) != 0)
    {
      if (qword_1002B7210 == -1)
      {
LABEL_5:
        uint64_t v31 = type metadata accessor for Logger(0LL, v30);
        uint64_t v32 = sub_1000E96CC(v31, (uint64_t)qword_1002C5EC8);
        os_log_type_t v33 = (os_log_s *)Logger.logObject.getter(v32);
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
          uint64_t v36 = swift_slowAlloc(32LL, -1LL);
          *(void *)&__int128 v66 = v36;
          *(_DWORD *)uint64_t v35 = 136315138;
          *(void *)&__int128 v64 = sub_1001B2690(0xD00000000000001DLL, 0x80000001002293E0LL, (uint64_t *)&v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, (char *)&v64 + 8, v35 + 4);
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s: Now playing is already visible", v35, 0xCu);
          swift_arrayDestroy(v36, 1LL, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v36, -1LL, -1LL);
          swift_slowDealloc(v35, -1LL, -1LL);
        }

        return result;
      }

uint64_t sub_10018A850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  void v5[3] = a5;
  uint64_t v6 = type metadata accessor for PushDestination(0LL);
  void v5[4] = v6;
  void v5[5] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for MainActor(0LL);
  void v5[6] = static MainActor.shared.getter(v7);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_10018A8E0, v8, v9);
}

uint64_t sub_10018A8E0()
{
  id v1 = *(void **)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  swift_release(*(void *)(v0 + 48));
  uint64_t v4 = (char *)v1 + *(int *)(sub_1000DFE10(&qword_1002B8108) + 48);
  *id v1 = v3;
  uint64_t v5 = type metadata accessor for NowPlayingOptions(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56LL))(v4, 1LL, 1LL, v5);
  swift_storeEnumTagMultiPayload(v1, v2, 8LL);
  sub_100189C60((uint64_t)v1);
  sub_100192F88((uint64_t)v1);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_10018A9CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v72 = a1;
  uint64_t v3 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = type metadata accessor for URL(0LL);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v71 + 64);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v19 = (char *)&v65 - v18;
  __chkstk_darwin(v17, v20);
  uint64_t v23 = (char *)&v65 - v22;
  uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider];
  if (v24 && v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pageProviderStarted] == 1)
  {
    uint64_t v70 = v1;
    uint64_t v25 = qword_1002B7210;
    swift_retain(v24);
    if (v25 != -1) {
      swift_once(&qword_1002B7210, sub_10018868C);
    }
    uint64_t v27 = type metadata accessor for Logger(0LL, v26);
    sub_1000E96CC(v27, (uint64_t)qword_1002C5EC8);
    id v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16);
    uint64_t v28 = v69(v23, v72, v11);
    uint64_t v29 = (os_log_s *)Logger.logObject.getter(v28);
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v68 = swift_slowAlloc(32LL, -1LL);
      v74[0] = v68;
      uint64_t v67 = v31;
      *(_DWORD *)uint64_t v31 = 136315138;
      __int128 v66 = v31 + 4;
      uint64_t v32 = sub_1000DF308( &qword_1002BD048,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter(v11, v32);
      unint64_t v35 = v34;
      uint64_t v73 = sub_1001B2690(v33, v34, v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v66);
      __n128 v36 = swift_bridgeObjectRelease(v35);
      (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v23, v11, v36);
      uint64_t v37 = v67;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Opening deep link: %s", v67, 0xCu);
      uint64_t v38 = v68;
      swift_arrayDestroy(v68, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v38, -1LL, -1LL);
      swift_slowDealloc(v37, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v71 + 8))(v23, v11);
    }

    uint64_t v56 = v70;
    uint64_t v57 = type metadata accessor for TaskPriority(0LL);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56LL))(v10, 1LL, 1LL, v57);
    v69(v19, v72, v11);
    type metadata accessor for MainActor(0LL);
    swift_retain(v24);
    id v58 = v56;
    uint64_t v59 = static MainActor.shared.getter(v58);
    uint64_t v60 = v71;
    uint64_t v61 = *(unsigned __int8 *)(v71 + 80);
    uint64_t v62 = (v61 + 48) & ~v61;
    uint64_t v63 = (char *)swift_allocObject(&unk_1002771A0, v62 + v12, v61 | 7);
    *((void *)v63 + sub_1000E053C(v0 + 2) = v59;
    *((void *)v63 + 3) = &protocol witness table for MainActor;
    *((void *)v63 + 4) = v58;
    *((void *)v63 + 5) = v24;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(&v63[v62], v19, v11);
    uint64_t v64 = sub_100125950((uint64_t)v10, (uint64_t)&unk_1002BD058, (uint64_t)v63);
    swift_release(v24);
    *(void *)&double result = swift_release(v64).n128_u64[0];
  }

  else
  {
    if (qword_1002B7210 != -1) {
      swift_once(&qword_1002B7210, sub_10018868C);
    }
    uint64_t v39 = type metadata accessor for Logger(0LL, v21);
    sub_1000E96CC(v39, (uint64_t)qword_1002C5EC8);
    uint64_t v40 = v71;
    uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16);
    uint64_t v42 = v41(v15, v72, v11);
    uint64_t v43 = (os_log_s *)Logger.logObject.getter(v42);
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc(12LL, -1LL);
      id v69 = v41;
      id v46 = (uint8_t *)v45;
      uint64_t v47 = swift_slowAlloc(32LL, -1LL);
      v74[0] = v47;
      uint64_t v70 = v1;
      *(_DWORD *)id v46 = 136315138;
      uint64_t v48 = sub_1000DF308( &qword_1002BD048,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter(v11, v48);
      unint64_t v51 = v50;
      uint64_t v73 = sub_1001B2690(v49, v50, v74);
      uint64_t v2 = v70;
      uint64_t v40 = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, v74, v46 + 4);
      __n128 v52 = swift_bridgeObjectRelease(v51);
      (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v15, v11, v52);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Pending deep link: %s", v46, 0xCu);
      swift_arrayDestroy(v47, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1LL, -1LL);
      uint64_t v53 = v46;
      uint64_t v41 = v69;
      swift_slowDealloc(v53, -1LL, -1LL);
    }

    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v11);
    }

    v41(v6, v72, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v6, 0LL, 1LL, v11);
    uint64_t v54 = (uint64_t)v2 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pendingDeepLinkURL;
    swift_beginAccess(v54, v74, 33LL, 0LL);
    sub_100194D54((uint64_t)v6, v54);
    swift_endAccess(v74);
  }

  return result;
}

uint64_t sub_10018AFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void v6[4] = a5;
  v6[5] = a6;
  _OWORD v6[3] = a4;
  uint64_t v7 = sub_1000DFE10((uint64_t *)&unk_1002BD060);
  void v6[6] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  void v6[7] = v8;
  v6[8] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for MainActor(0LL);
  void v6[9] = v9;
  v6[10] = static MainActor.shared.getter(v9);
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v6[11] = v10;
  v6[12] = v11;
  return swift_task_switch(sub_10018B048, v10, v11);
}

uint64_t sub_10018B048(uint64_t a1)
{
  uint64_t v2 = v1[9];
  v1[13] = *(void *)(v1[3] + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs);
  v1[14] = static MainActor.shared.getter(a1);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[15] = v3;
  v1[16] = v4;
  return swift_task_switch(sub_10018B0BC, v3, v4);
}

uint64_t sub_10018B0BC()
{
  *(void *)(v0 + 136) = *sub_1000E0518( (void *)(*(void *)(v0 + 104) + 16LL),  *(void *)(*(void *)(v0 + 104) + 40LL));
  return swift_task_switch(sub_10018B108, 0LL, 0LL);
}

uint64_t sub_10018B108()
{
  uint64_t v1 = *(void *)(v0[17] + 16LL);
  v0[18] = v1;
  if (!v1) {
    return swift_task_switch(sub_10018B204, v0[15], v0[16]);
  }
  uint64_t v2 = async function pointer to Task<>.value.getter[1];
  swift_retain(v1);
  uint64_t v3 = (void *)swift_task_alloc(v2);
  v0[19] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10018B198;
  return Task<>.value.getter();
}

uint64_t sub_10018B198()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144LL);
  swift_task_dealloc(*(void *)(*(void *)v0 + 152LL));
  swift_release(v1);
  return swift_task_switch(sub_10018B1F4, 0LL, 0LL);
}

uint64_t sub_10018B1F4()
{
  return swift_task_switch(sub_10018B204, *(void *)(v0 + 120), *(void *)(v0 + 128));
}

uint64_t sub_10018B204()
{
  uint64_t v1 = (void *)swift_task_alloc(*((unsigned int *)&async function pointer to MusicPageProvider.openURL(_:) + 1));
  v0[20] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10018B260;
  return MusicPageProvider.openURL(_:)(v0[8], v0[5]);
}

uint64_t sub_10018B260()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 160LL);
  *(void *)(*(void *)v1 + 168LL) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[12];
    uint64_t v6 = sub_10018B30C;
  }

  else
  {
    (*(void (**)(void, void))(v2[7] + 8LL))(v2[8], v2[6]);
    uint64_t v4 = v2[11];
    uint64_t v5 = v2[12];
    uint64_t v6 = sub_10018B2D4;
  }

  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_10018B2D4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018B30C()
{
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = type metadata accessor for Logger(0LL, v1);
  sub_1000E96CC(v3, (uint64_t)qword_1002C5EC8);
  swift_errorRetain(v2);
  uint64_t v4 = swift_errorRetain(v2);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 168);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain(v8);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4);
    *uint64_t v10 = v11;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error opening URL: %@", v9, 0xCu);
    uint64_t v12 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v10, 1LL, v12);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);

    swift_errorRelease(v8);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 168));
    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }

  swift_task_dealloc(*(void *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018B584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[27] = a6;
  v7[28] = a7;
  v7[25] = a4;
  v7[26] = a5;
  uint64_t v8 = sub_1000DFE10(&qword_1002B7890);
  v7[29] = swift_task_alloc((*(void *)(*(void *)(v8 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for URLQueryItem(0LL);
  v7[30] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[31] = v10;
  unint64_t v11 = (*(void *)(v10 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  _BYTE v7[32] = swift_task_alloc(v11);
  v7[33] = swift_task_alloc(v11);
  uint64_t v12 = type metadata accessor for URL(0LL);
  v7[34] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v7[35] = v13;
  unint64_t v14 = (*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  v7[36] = swift_task_alloc(v14);
  v7[37] = swift_task_alloc(v14);
  v7[38] = swift_task_alloc(v14);
  v7[39] = swift_task_alloc(v14);
  v7[40] = swift_task_alloc(v14);
  uint64_t v15 = type metadata accessor for MainActor(0LL);
  v7[41] = static MainActor.shared.getter(v15);
  uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  v7[42] = v16;
  v7[43] = v17;
  return swift_task_switch(sub_10018B6AC, v16, v17);
}

uint64_t sub_10018B6AC()
{
  uint64_t v1 = v0 + 2;
  NSString v2 = String._bridgeToObjectiveC()();
  v0[44] = v2;
  id v3 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
  id v4 = [v3 appBag];
  swift_unknownObjectRelease(v3);
  id v5 = [v4 URLForKey:v2];
  v0[45] = v5;

  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_10018B7DC;
  uint64_t v6 = swift_continuation_init(v0 + 2, 1LL);
  v0[10] = _NSConcreteStackBlock;
  BOOL v7 = v0 + 10;
  v7[1] = 0x40000000LL;
  v7[2] = sub_10011DC18;
  v7[3] = &unk_1002772D0;
  v7[4] = v6;
  [v5 valueWithCompletion:v7];
  return swift_continuation_await(v1);
}

uint64_t sub_10018B7DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 368) = v2;
  if (v2) {
    id v3 = sub_10018C2B4;
  }
  else {
    id v3 = sub_10018B838;
  }
  return swift_task_switch(v3, *(void *)(v1 + 336), *(void *)(v1 + 344));
}

uint64_t sub_10018B838()
{
  uint64_t v1 = *(void **)(v0 + 120);
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v1);

  id v2 = objc_allocWithZone(&OBJC_CLASS___NSURLComponents);
  URL._bridgeToObjectiveC()(v3);
  id v5 = v4;
  id v6 = [v2 initWithURL:v4 resolvingAgainstBaseURL:0];

  if (!v6)
  {
    if (qword_1002B7210 != -1) {
      swift_once(&qword_1002B7210, sub_10018868C);
    }
    unint64_t v11 = *(void **)(v0 + 352);
    uint64_t v12 = *(void *)(v0 + 312);
    uint64_t v13 = *(void *)(v0 + 320);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = type metadata accessor for Logger(0LL, v7);
    sub_1000E96CC(v16, (uint64_t)qword_1002C5EC8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v12, v13, v14);
    uint64_t v17 = (os_log_s *)Logger.logObject.getter(v11);
    os_log_type_t v18 = static os_log_type_t.default.getter();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v21 = *(void **)(v0 + 352);
    uint64_t v20 = *(void **)(v0 + 360);
    uint64_t v22 = *(void *)(v0 + 312);
    uint64_t v23 = *(void *)(v0 + 320);
    uint64_t v24 = *(void *)(v0 + 272);
    uint64_t v25 = *(void *)(v0 + 280);
    if (v19)
    {
      __n128 v124 = *(void **)(v0 + 360);
      os_log_type_t type = v18;
      uint64_t v26 = swift_slowAlloc(22LL, -1LL);
      uint64_t v121 = swift_slowAlloc(64LL, -1LL);
      uint64_t v128 = v121;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      unint64_t v29 = v28;
      *(void *)(v0 + 15sub_1000E053C(v0 + 2) = sub_1001B2690(v27, v28, &v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v0 + 160, v26 + 4);

      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v26 + 1sub_1000E053C(v0 + 2) = 2080;
      uint64_t v30 = sub_1000DF308( &qword_1002BD048,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter(v24, v30);
      unint64_t v33 = v32;
      *(void *)(v0 + 160) = sub_1001B2690(v31, v32, &v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v26 + 14);
      __n128 v34 = swift_bridgeObjectRelease(v33);
      unint64_t v35 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
      v35(v22, v24, v34);
      _os_log_impl((void *)&_mh_execute_header, v17, type, "Invalid URL from bag key %s: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy(v121, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v121, -1LL, -1LL);
      swift_slowDealloc(v26, -1LL, -1LL);
    }

    else
    {

      unint64_t v35 = *(void (**)(uint64_t, uint64_t, __n128))(v25 + 8);
      ((void (*)(uint64_t, uint64_t))v35)(v22, v24);
    }

    uint64_t v36 = v23;
    uint64_t v101 = v24;
    goto LABEL_31;
  }

  id v8 = [v6 queryItems];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = (char *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, *(void *)(v0 + 240));
  }

  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }

  URLQueryItem.init(name:value:)(0x5465636976726573LL, 0xEB00000000657079LL, 0x636973756DLL, 0xE500000000000000LL);
  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0) {
    uint64_t v10 = (char *)sub_10015AA54(0, *((void *)v10 + 2) + 1LL, 1, (unint64_t)v10);
  }
  unint64_t v38 = *((void *)v10 + 2);
  unint64_t v37 = *((void *)v10 + 3);
  unsigned int v126 = (uint64_t *)(v0 + 168);
  id v127 = v6;
  if (v38 >= v37 >> 1) {
    uint64_t v10 = (char *)sub_10015AA54(v37 > 1, v38 + 1, 1, (unint64_t)v10);
  }
  uint64_t v39 = (uint64_t *)(v0 + 200);
  uint64_t v40 = *(void *)(v0 + 200);
  uint64_t v41 = *(void *)(v0 + 264);
  uint64_t v42 = *(void *)(v0 + 240);
  uint64_t v43 = *(void *)(v0 + 248);
  uint64_t v44 = *(void *)(v0 + 208);
  *((void *)v10 + sub_1000E053C(v0 + 2) = v38 + 1;
  unint64_t v45 = (*(unsigned __int8 *)(v43 + 80) + 32LL) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v46 = *(void *)(v43 + 72);
  uint64_t v47 = &v10[v45 + v46 * v38];
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
  v48(v47, v41, v42);
  URLQueryItem.init(name:value:)(0x6E656D6563616C70LL, 0xE900000000000074LL, v40, v44);
  unint64_t v50 = *((void *)v10 + 2);
  unint64_t v49 = *((void *)v10 + 3);
  if (v50 >= v49 >> 1) {
    uint64_t v10 = (char *)sub_10015AA54(v49 > 1, v50 + 1, 1, (unint64_t)v10);
  }
  uint64_t v125 = (uint64_t *)(v0 + 184);
  uint64_t v51 = *(void *)(v0 + 256);
  uint64_t v52 = *(void *)(v0 + 240);
  uint64_t v53 = *(void *)(v0 + 216);
  *((void *)v10 + sub_1000E053C(v0 + 2) = v50 + 1;
  v48(&v10[v45 + v50 * v46], v51, v52);
  uint64_t v54 = swift_bridgeObjectRetain(v53);
  sub_100188524(v54);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v127, "setQueryItems:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  id v56 = [v127 URL];
  if (v56)
  {
    uint64_t v57 = v56;
    uint64_t v58 = *(void *)(v0 + 296);
    uint64_t v60 = *(void *)(v0 + 272);
    uint64_t v59 = *(void *)(v0 + 280);
    uint64_t v61 = *(void *)(v0 + 232);
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v56);

    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32);
    v62(v61, v58, v60);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v61, 0LL, 1LL, v60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v61, 1LL, v60) != 1)
    {
      v62(*(void *)(v0 + 304), *(void *)(v0 + 232), *(void *)(v0 + 272));
      if (qword_1002B7210 != -1) {
        swift_once(&qword_1002B7210, sub_10018868C);
      }
      uint64_t v64 = *(void *)(v0 + 304);
      uint64_t v65 = *(void *)(v0 + 280);
      uint64_t v66 = *(void *)(v0 + 288);
      uint64_t v67 = *(void *)(v0 + 272);
      uint64_t v68 = *(void *)(v0 + 208);
      uint64_t v69 = type metadata accessor for Logger(0LL, v63);
      sub_1000E96CC(v69, (uint64_t)qword_1002C5EC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v66, v64, v67);
      uint64_t v70 = swift_bridgeObjectRetain_n(v68, 2LL);
      uint64_t v71 = (os_log_s *)Logger.logObject.getter(v70);
      os_log_type_t v72 = static os_log_type_t.default.getter();
      BOOL v73 = os_log_type_enabled(v71, v72);
      uint64_t v74 = *(void *)(v0 + 280);
      uint64_t v75 = *(void *)(v0 + 288);
      uint64_t v76 = *(void *)(v0 + 272);
      unint64_t v77 = *(void *)(v0 + 208);
      if (v73)
      {
        typeCGFloat a = *v39;
        uint64_t v78 = swift_slowAlloc(22LL, -1LL);
        uint64_t v122 = swift_slowAlloc(64LL, -1LL);
        uint64_t v128 = v122;
        *(_DWORD *)uint64_t v78 = 136315394;
        swift_bridgeObjectRetain(v77);
        uint64_t *v125 = sub_1001B2690(typea, v77, &v128);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v125, v0 + 192, v78 + 4);
        swift_bridgeObjectRelease_n(v77, 3LL);
        *(_WORD *)(v78 + 1sub_1000E053C(v0 + 2) = 2080;
        uint64_t v79 = sub_1000DF308( &qword_1002BD048,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
        uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter(v76, v79);
        unint64_t v82 = v81;
        *(void *)(v0 + 19sub_1000E053C(v0 + 2) = sub_1001B2690(v80, v81, &v128);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 192, v0 + 200, v78 + 14);
        __n128 v83 = swift_bridgeObjectRelease(v82);
        unint64_t v35 = *(void (**)(uint64_t, uint64_t, __n128))(v74 + 8);
        v35(v75, v76, v83);
        _os_log_impl( (void *)&_mh_execute_header,  v71,  v72,  "Loading marketing page for placement '%s' with URL %s",  (uint8_t *)v78,  0x16u);
        swift_arrayDestroy(v122, 2LL, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v122, -1LL, -1LL);
        swift_slowDealloc(v78, -1LL, -1LL);
      }

      else
      {
        swift_bridgeObjectRelease_n(*(void *)(v0 + 208), 2LL);
        unint64_t v35 = *(void (**)(uint64_t, uint64_t, __n128))(v74 + 8);
        ((void (*)(uint64_t, uint64_t))v35)(v75, v76);
      }

      Swift::String v103 = *(void **)(v0 + 352);
      Swift::String v102 = *(void **)(v0 + 360);
      uint64_t v104 = *(void *)(v0 + 320);
      uint64_t v105 = *(void *)(v0 + 304);
      uint64_t v106 = *(void *)(v0 + 272);
      sub_10018A9CC(v105);

      ((void (*)(uint64_t, uint64_t))v35)(v105, v106);
      uint64_t v36 = v104;
      uint64_t v101 = v106;
LABEL_31:
      ((void (*)(uint64_t, uint64_t))v35)(v36, v101);
      goto LABEL_32;
    }
  }

  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 280) + 56LL))( *(void *)(v0 + 232),  1LL,  1LL,  *(void *)(v0 + 272));
  }

  sub_1000E03B4(*(void *)(v0 + 232), &qword_1002B7890);
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v85 = *(void *)(v0 + 208);
  uint64_t v86 = type metadata accessor for Logger(0LL, v84);
  sub_1000E96CC(v86, (uint64_t)qword_1002C5EC8);
  swift_bridgeObjectRetain_n(v85, 2LL);
  id v87 = v127;
  __n128 v88 = (os_log_s *)Logger.logObject.getter(v87);
  os_log_type_t v89 = static os_log_type_t.default.getter();
  BOOL v90 = os_log_type_enabled(v88, v89);
  uint64_t v91 = *(void **)(v0 + 360);
  uint64_t v92 = *(void *)(v0 + 320);
  uint64_t v93 = *(void *)(v0 + 272);
  uint64_t v94 = *(void *)(v0 + 280);
  unint64_t v95 = *(void *)(v0 + 208);
  if (v90)
  {
    uint64_t v123 = *(void *)(v0 + 280);
    uint64_t v115 = *v39;
    uint64_t v117 = *(void **)(v0 + 352);
    uint64_t v96 = swift_slowAlloc(22LL, -1LL);
    *(void *)typeb = v93;
    id v97 = (void *)swift_slowAlloc(8LL, -1LL);
    id v116 = v91;
    uint64_t v98 = swift_slowAlloc(32LL, -1LL);
    uint64_t v128 = v98;
    *(_DWORD *)uint64_t v96 = 136315394;
    swift_bridgeObjectRetain(v95);
    *unsigned int v126 = sub_1001B2690(v115, v95, &v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v126, v0 + 176, v96 + 4);
    swift_bridgeObjectRelease_n(v95, 3LL);
    *(_WORD *)(v96 + 1sub_1000E053C(v0 + 2) = 2112;
    *(void *)(v0 + 176) = v87;
    id v99 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 176, v125, v96 + 14);
    *id v97 = v127;

    _os_log_impl((void *)&_mh_execute_header, v88, v89, "Invalid marketing URL for '%s': %@", (uint8_t *)v96, 0x16u);
    uint64_t v100 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v97, 1LL, v100);
    swift_slowDealloc(v97, -1LL, -1LL);
    swift_arrayDestroy(v98, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v98, -1LL, -1LL);
    swift_slowDealloc(v96, -1LL, -1LL);

    (*(void (**)(uint64_t, os_log_type_t *))(v123 + 8))(v92, *(os_log_type_t **)typeb);
  }

  else
  {

    swift_bridgeObjectRelease_n(v95, 2LL);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v92, v93);
  }

uint64_t sub_10018C2B4()
{
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v3 = *(void *)(v0 + 368);
  id v4 = *(void **)(v0 + 352);
  uint64_t v5 = type metadata accessor for Logger(0LL, v2);
  sub_1000E96CC(v5, (uint64_t)qword_1002C5EC8);
  id v6 = v4;
  swift_errorRetain(v3);
  id v7 = v6;
  uint64_t v8 = swift_errorRetain(v3);
  uint64_t v9 = (os_log_s *)Logger.logObject.getter(v8);
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = *(void **)(v0 + 360);
  uint64_t v12 = *(void *)(v0 + 368);
  uint64_t v14 = *(void **)(v0 + 352);
  if (v11)
  {
    uint64_t v31 = *(void **)(v0 + 360);
    uint64_t v15 = swift_slowAlloc(22LL, -1LL);
    uint64_t v16 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    uint64_t v30 = swift_slowAlloc(32LL, -1LL);
    uint64_t v32 = v30;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    unint64_t v19 = v18;
    *(void *)(v0 + 136) = sub_1001B2690(v17, v18, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 136, v0 + 144, v15 + 4);
    swift_bridgeObjectRelease(v19);

    *(_WORD *)(v15 + 1sub_1000E053C(v0 + 2) = 2112;
    swift_errorRetain(v12);
    uint64_t v20 = _swift_stdlib_bridgeErrorToNSError(v12);
    *(void *)(v0 + 144) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v15 + 14);
    *uint64_t v16 = v20;
    swift_errorRelease(v12);
    swift_errorRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Can't get value from bag key %s: %@", (uint8_t *)v15, 0x16u);
    uint64_t v21 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v16, 1LL, v21);
    swift_slowDealloc(v16, -1LL, -1LL);
    swift_arrayDestroy(v30, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v30, -1LL, -1LL);
    swift_slowDealloc(v15, -1LL, -1LL);

    swift_errorRelease(v12);
  }

  else
  {

    swift_errorRelease(v12);
    swift_errorRelease(v12);
    swift_errorRelease(v12);
  }

  uint64_t v22 = *(void *)(v0 + 312);
  uint64_t v24 = *(void *)(v0 + 296);
  uint64_t v23 = *(void *)(v0 + 304);
  uint64_t v25 = *(void *)(v0 + 288);
  uint64_t v27 = *(void *)(v0 + 256);
  uint64_t v26 = *(void *)(v0 + 264);
  uint64_t v28 = *(void *)(v0 + 232);
  swift_task_dealloc(*(void *)(v0 + 320));
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10018C6E8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000DFE10(&qword_1002B7890);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = type metadata accessor for URL(0LL);
  uint64_t v51 = *(void *)(v10 - 8);
  uint64_t v52 = v10;
  __chkstk_darwin(v10, v11);
  unint64_t v50 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = type metadata accessor for URLQueryItem(0LL);
  uint64_t v13 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v14);
  uint64_t v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000DFE10((uint64_t *)&unk_1002B7EF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = type metadata accessor for URLComponents(0LL);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000LL) == 0) {
    uint64_t v26 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v26)
  {
    v49[1] = v3;
    URLComponents.init(string:)(0xD00000000000001ELL, 0x8000000100229420LL);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1LL, v21) == 1)
    {
      uint64_t v27 = (uint64_t *)&unk_1002B7EF0;
      uint64_t v28 = (uint64_t)v20;
      return sub_1000E03B4(v28, v27);
    }

    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v20, v21);
    URLQueryItem.init(name:value:)(1836213620LL, 0xE400000000000000LL, a1, a2);
    uint64_t v39 = sub_1000DFE10(&qword_1002B7F08);
    uint64_t v40 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v41 = (v40 + 32) & ~v40;
    uint64_t v42 = swift_allocObject(v39, v41 + *(void *)(v13 + 72), v40 | 7);
    *(_OWORD *)(v42 + swift_weakDestroy(v0 + 16) = xmmword_1001E84B0;
    uint64_t v43 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v42 + v41, v16, v53);
    uint64_t v44 = URLComponents.queryItems.setter(v42);
    URLComponents.url.getter(v44);
    uint64_t v46 = v51;
    uint64_t v45 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v9, 1LL, v52) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v43);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v21);
      uint64_t v27 = &qword_1002B7890;
      uint64_t v28 = (uint64_t)v9;
      return sub_1000E03B4(v28, v27);
    }

    uint64_t v47 = (uint64_t)v50;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v50, v9, v45);
    double v48 = sub_10018A9CC(v47);
    (*(void (**)(uint64_t, uint64_t, double))(v46 + 8))(v47, v45, v48);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  }

  else
  {
    uint64_t v29 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EE7E0);
    uint64_t v31 = swift_getKeyPath(&unk_1001EE808);
    BYTE1(v54[0]) = 5;
    swift_retain(v29);
    static Published.subscript.setter((char *)v54 + 1, v29, KeyPath, v31);
    uint64_t v32 = v29 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
    uint64_t result = swift_beginAccess(v29 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged, (char *)v54 + 1, 0LL, 0LL);
    __n128 v34 = *(void (**)(void, __n128))v32;
    if (*(void *)v32)
    {
      uint64_t v35 = *(void *)(v32 + 8);
      uint64_t v36 = swift_getKeyPath(&unk_1001EE7E0);
      uint64_t v37 = swift_getKeyPath(&unk_1001EE808);
      swift_retain(v35);
      static Published.subscript.getter(v54, v29, v36, v37);
      swift_release(v36);
      __n128 v38 = swift_release(v37);
      v34(LOBYTE(v54[0]), v38);
      return sub_1000E03F0((uint64_t)v34, v35);
    }
  }

  return result;
}

double sub_10018CAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_tabs)
                 + OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority);
  uint64_t v5 = type metadata accessor for PushDestination(0LL);
  uint64_t v6 = sub_1000DF308( (unint64_t *)&unk_1002BD020,  type metadata accessor for PushDestination,  (uint64_t)&unk_1001E9894);
  swift_retain(v4);
  MusicStackAuthority.push<A>(_:)(a3, v5, v6);
  *(void *)&double result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_10018CC08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002B7890);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)&v41 - v16;
  uint64_t v18 = type metadata accessor for URL(0LL);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider];
  if (v24)
  {
    uint64_t v41 = v3;
    uint64_t v42 = v2;
    uint64_t v25 = swift_retain(v24);
    uint64_t v26 = MusicPageProvider.start()(v25);
    swift_release(v26);
    v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pageProviderStarted] = 1;
    uint64_t v27 = (uint64_t)&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pendingDeepLinkURL];
    swift_beginAccess(&v1[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pendingDeepLinkURL], v48, 0LL, 0LL);
    sub_1000E04D4(v27, (uint64_t)v17, &qword_1002B7890);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1LL, v18) == 1)
    {
      sub_1000E03B4((uint64_t)v17, &qword_1002B7890);
    }

    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v23, v17, v18);
      double v28 = sub_10018A9CC((uint64_t)v23);
      (*(void (**)(char *, uint64_t, double))(v19 + 8))(v23, v18, v28);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, 1LL, 1LL, v18);
      swift_beginAccess(v27, aBlock, 33LL, 0LL);
      sub_100194D54((uint64_t)v14, v27);
      swift_endAccess(aBlock);
    }

    sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
    uint64_t v29 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v30 = swift_allocObject(&unk_100277150, 24LL, 7LL);
    *(void *)(v30 + swift_weakDestroy(v0 + 16) = v1;
    aBlock[4] = sub_100194D4C;
    uint64_t v47 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256LL;
    aBlock[2] = sub_1000FA280;
    aBlock[3] = &unk_100277168;
    uint64_t v31 = _Block_copy(aBlock);
    uint64_t v32 = v47;
    unint64_t v33 = v1;
    swift_release(v32);
    static DispatchQoS.unspecified.getter(v34);
    aBlock[0] = _swiftEmptyArrayStorage;
    uint64_t v35 = sub_1000DF308( (unint64_t *)&qword_1002B9390,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    uint64_t v36 = sub_1000DFE10(&qword_1002B86F8);
    uint64_t v37 = sub_1000E0374( (unint64_t *)&qword_1002B93A0,  &qword_1002B86F8,  (uint64_t)&protocol conformance descriptor for [A]);
    __n128 v38 = v45;
    uint64_t v39 = v42;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v36, v37, v42, v35);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v9, v38, v31);
    _Block_release(v31);

    __n128 v40 = swift_release(v24);
    (*(void (**)(char *, uint64_t, __n128))(v41 + 8))(v38, v39, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v9, v44);
  }

  return result;
}

void sub_10018CFC0(uint64_t a1)
{
  id v2 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v3 = v2;
  if (qword_1002B7248 != -1)
  {
    swift_once(&qword_1002B7248, sub_100191ABC);
    id v2 = v3;
  }

  [v2 postNotificationName:static NSNotificationName.mainViewControllerDidAppear object:a1];
}

uint64_t *NSNotificationName.mainViewControllerDidAppear.unsafeMutableAddressor()
{
  if (qword_1002B7248 != -1) {
    swift_once(&qword_1002B7248, sub_100191ABC);
  }
  return &static NSNotificationName.mainViewControllerDidAppear;
}

void sub_10018D090(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didAcknowledgePrivacyDisclaimer) = 1;
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL, a2);
  uint64_t v3 = sub_1000E96CC(v2, (uint64_t)qword_1002C5EC8);
  uint64_t v4 = (os_log_s *)Logger.logObject.getter(v3);
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Starting MusicUI after privacy acknowlegement", v6, 2u);
    swift_slowDealloc(v6, -1LL, -1LL);
  }

  sub_1001894A4();
}

id sub_10018D178()
{
  uint64_t v0 = sub_1000DFE10(&qword_1002B7890);
  uint64_t v2 = __chkstk_darwin(v0, v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v2, v5);
  uint64_t v8 = (char *)&v23 - v7;
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v9 = type metadata accessor for Logger(0LL, v6);
  uint64_t v10 = sub_1000E96CC(v9, (uint64_t)qword_1002C5EC8);
  uint64_t v11 = (os_log_s *)Logger.logObject.getter(v10);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Initiating user sign-in", v13, 2u);
    swift_slowDealloc(v13, -1LL, -1LL);
  }

  URL.init(string:)(0xD000000000000021LL, 0x8000000100229370LL);
  id result = [(id)objc_opt_self(LSApplicationWorkspace) defaultWorkspace];
  if (result)
  {
    uint64_t v15 = result;
    sub_1000E04D4((uint64_t)v8, (uint64_t)v4, &qword_1002B7890);
    uint64_t v16 = type metadata accessor for URL(0LL);
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v19 = 0LL;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v4, 1LL, v16) != 1)
    {
      URL._bridgeToObjectiveC()(v18);
      uint64_t v19 = v20;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v16);
    }

    unint64_t v21 = sub_100186EB0((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v15, "openSensitiveURL:withOptions:", v19, isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

    return (id)sub_1000E03B4((uint64_t)v8, &qword_1002B7890);
  }

  else
  {
    __break(1u);
  }

  return result;
}

id sub_10018D3C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v39 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v8 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v9);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  os_log_type_t v12 = &v2[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewController];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewController]);
  if (!Strong)
  {
LABEL_4:
    [v2 addChildViewController:a1];
    id result = [a1 view];
    if (result)
    {
      uint64_t v17 = result;
      id result = [v2 view];
      if (result)
      {
        uint64_t v18 = result;
        [result bounds];
        double v20 = v19;
        double v22 = v21;
        double v24 = v23;
        double v26 = v25;

        objc_msgSend(v17, "setFrame:", v20, v22, v24, v26);
        id result = [a1 view];
        if (result)
        {
          uint64_t v27 = result;
          [result setAutoresizingMask:18];

          id result = [v2 view];
          if (result)
          {
            double v28 = result;
            id result = [a1 view];
            if (result)
            {
              uint64_t v29 = result;
              [v28 addSubview:result];

              [a1 didMoveToParentViewController:v2];
              swift_unknownObjectWeakAssign(v12, a1);
              sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
              uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
              uint64_t v31 = swift_allocObject(&unk_100277268, 24LL, 7LL);
              *(void *)(v31 + swift_weakDestroy(v0 + 16) = v2;
              aBlock[4] = sub_100194EF0;
              uint64_t v42 = v31;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256LL;
              aBlock[2] = sub_1000FA280;
              aBlock[3] = &unk_100277280;
              uint64_t v32 = _Block_copy(aBlock);
              uint64_t v33 = v42;
              uint64_t v34 = v2;
              swift_release(v33);
              static DispatchQoS.unspecified.getter(v35);
              aBlock[0] = _swiftEmptyArrayStorage;
              uint64_t v36 = sub_1000DF308( (unint64_t *)&qword_1002B9390,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
              uint64_t v37 = sub_1000DFE10(&qword_1002B86F8);
              uint64_t v38 = sub_1000E0374( (unint64_t *)&qword_1002B93A0,  &qword_1002B86F8,  (uint64_t)&protocol conformance descriptor for [A]);
              dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v37, v38, v4, v36);
              OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v11, v7, v32);
              _Block_release(v32);

              (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v4);
              return (id)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v39);
            }

            goto LABEL_14;
          }

void sub_10018D82C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v52 = a2;
  uint64_t v33 = type metadata accessor for TabBarContentFocusBehavior(0LL);
  v32[1] = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v2);
  uint64_t v41 = sub_1000DFE10(&qword_1002BD560);
  uint64_t v35 = *(void *)(v41 - 8);
  uint64_t v4 = __chkstk_darwin(v41, v3);
  v32[0] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4, v6);
  uint64_t v34 = (char *)v32 - v7;
  uint64_t v37 = sub_1000DFE10(&qword_1002BD568);
  __chkstk_darwin(v37, v8);
  uint64_t v39 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002BD570);
  __chkstk_darwin(v10, v11);
  uint64_t v38 = sub_1000DFE10(&qword_1002BD4E0);
  __chkstk_darwin(v38, v12);
  uint64_t v36 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = sub_1000DFE10(&qword_1002BD4D0);
  __chkstk_darwin(v51, v14);
  uint64_t v40 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v48 = sub_1000DFE10(&qword_1002BD578);
  __chkstk_darwin(v48, v16);
  unint64_t v50 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v42 = sub_1000DFE10((uint64_t *)&unk_1002BD580);
  __chkstk_darwin(v42, v18);
  uint64_t v45 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_1000DFE10(&qword_1002B8D70);
  __chkstk_darwin(v20, v21);
  uint64_t v43 = sub_1000DFE10(&qword_1002BD4C0);
  __chkstk_darwin(v43, v22);
  uint64_t v44 = (char *)v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v49 = sub_1000DFE10((uint64_t *)&unk_1002BD4B0);
  __chkstk_darwin(v49, v24);
  uint64_t v46 = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v26 = sub_1000DFE10((uint64_t *)&unk_1002BD590);
  __chkstk_darwin(v26, v27);
  uint64_t v28 = sub_1000DFE10(&qword_1002B8DA0);
  uint64_t v30 = __chkstk_darwin(v28, v29);
  __chkstk_darwin(v30, v31);
  __asm { BR              X10 }

uint64_t sub_10018DC0C()
{
  uint64_t v11 = enum case for MusicPageProvider.Destination.listenNow<A, B>(_:);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104);
  uint64_t v13 = v0;
  *(void *)(v10 - 256) = v0;
  *(void *)(v10 - 168) = v3;
  uint64_t v14 = v1;
  uint64_t v15 = v2;
  v12(v9, v11, v5);
  swift_retain(v13);
  ((void (*)(uint64_t, uint64_t))MusicPageProvider.page(for:stackAuthority:))(v9, v13);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v5);
  uint64_t v16 = *(void *)(v10 - 168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v16, v6, v14);
  uint64_t v17 = v15;
  uint64_t v18 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v4, v16, v14);
  swift_storeEnumTagMultiPayload(v4, v8, 0LL);
  uint64_t v19 = type metadata accessor for Tabs(255LL);
  uint64_t v20 = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
  unint64_t v21 = sub_100105348();
  *(void *)(v10 - 120) = v19;
  *(void *)(v10 - 11sub_1000E053C(v0 + 2) = &type metadata for DestinationPageProvider;
  *(void *)(v10 - 104) = v20;
  *(void *)(v10 - 96) = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v10 - 120,  &opaque type descriptor for <<opaque return type of MusicPageProvider.page(for:stackAuthority:)>>,  1LL);
  uint64_t v23 = *(void *)(v10 - 192);
  _ConditionalContent<>.init(storage:)(v4, v18, v18, OpaqueTypeConformance2, OpaqueTypeConformance2);
  uint64_t v24 = *(void *)(v10 - 184);
  sub_1000E04D4(v23, v24, &qword_1002BD4C0);
  swift_storeEnumTagMultiPayload(v24, *(void *)(v10 - 208), 0LL);
  unint64_t v25 = sub_100105660();
  uint64_t v26 = *(void *)(v10 - 176);
  _ConditionalContent<>.init(storage:)(v24, *(void *)(v10 - 200), *(void *)(v10 - 200), v25, v25);
  sub_1000E03B4(v23, &qword_1002BD4C0);
  uint64_t v27 = *(void *)(v10 - 144);
  sub_1000E04D4(v26, v27, (uint64_t *)&unk_1002BD4B0);
  swift_storeEnumTagMultiPayload(v27, *(void *)(v10 - 160), 0LL);
  unint64_t v28 = sub_1001055FC();
  unint64_t v29 = sub_100195C68();
  _ConditionalContent<>.init(storage:)(v27, *(void *)(v10 - 152), *(void *)(v10 - 136), v28, v29);
  swift_release(*(void *)(v10 - 256));
  sub_1000E03B4(v26, (uint64_t *)&unk_1002BD4B0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
}

uint64_t sub_10018E668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v248 = a1;
  uint64_t v243 = sub_1000DFE10((uint64_t *)&unk_1002BD270);
  uint64_t v245 = *(void *)(v243 - 8);
  __chkstk_darwin(v243, v3);
  unint64_t v236 = (char *)&v204 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002B7808);
  __chkstk_darwin(v5, v6);
  int v232 = (char *)&v204 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000DFE10(&qword_1002BD280);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v240 = v8;
  uint64_t v241 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v237 = (char *)&v204 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v242 = sub_1000DFE10(&qword_1002BD288);
  uint64_t v244 = *(void *)(v242 - 8);
  __chkstk_darwin(v242, v12);
  uint64_t v238 = (char *)&v204 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10((uint64_t *)&unk_1002BD290);
  uint64_t v246 = *(void *)(v14 - 8);
  uint64_t v247 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v239 = (char *)&v204 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v228 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v227 = *(void *)(v228 - 8);
  __chkstk_darwin(v228, v17);
  unsigned __int8 v224 = (char *)&v204 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_1000DFE10(&qword_1002B8DD0);
  __chkstk_darwin(v19, v20);
  uint64_t v213 = (char *)&v204 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v209 = sub_1000DFE10(&qword_1002BD2A0);
  uint64_t v207 = *(void *)(v209 - 8);
  __chkstk_darwin(v209, v22);
  uint64_t v24 = (char *)&v204 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v206 = sub_1000DFE10(&qword_1002BD2A8);
  __chkstk_darwin(v206, v25);
  uint64_t v205 = (char *)&v204 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v210 = sub_1000DFE10(&qword_1002BD2B0);
  __chkstk_darwin(v210, v27);
  uint64_t v208 = (uint64_t)&v204 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v212 = sub_1000DFE10(&qword_1002BD2B8);
  __chkstk_darwin(v212, v29);
  uint64_t v211 = (char *)&v204 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v214 = sub_1000DFE10(&qword_1002BD2C0);
  uint64_t v215 = *(void *)(v214 - 8);
  __chkstk_darwin(v214, v31);
  uint64_t v249 = (char *)&v204 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v216 = sub_1000DFE10(&qword_1002BD2C8);
  uint64_t v217 = *(void *)(v216 - 8);
  __chkstk_darwin(v216, v33);
  v251 = (char *)&v204 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v221 = sub_1000DFE10(&qword_1002BD2D0);
  uint64_t v220 = *(void *)(v221 - 8);
  __chkstk_darwin(v221, v35);
  uint64_t v250 = (char *)&v204 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v219 = sub_1000DFE10(&qword_1002BD2D8);
  __chkstk_darwin(v219, v37);
  uint64_t v218 = (char *)&v204 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v223 = sub_1000DFE10(&qword_1002BD2E0);
  __chkstk_darwin(v223, v39);
  uint64_t v222 = (uint64_t)&v204 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v226 = sub_1000DFE10(&qword_1002BD2E8);
  __chkstk_darwin(v226, v41);
  uint64_t v225 = (uint64_t)&v204 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v231 = sub_1000DFE10(&qword_1002BD2F0);
  __chkstk_darwin(v231, v43);
  uint64_t v230 = (uint64_t)&v204 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v235 = sub_1000DFE10(&qword_1002BD2F8);
  uint64_t v234 = *(void *)(v235 - 8);
  __chkstk_darwin(v235, v45);
  uint64_t v233 = (char *)&v204 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v47 = *(void *)(v1 + 80);
  uint64_t v229 = *(void *)(v1 + 56);
  uint64_t v48 = *(void *)(v229 + OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority);
  uint64_t v49 = swift_allocObject(&unk_100277480, 120LL, 7LL);
  __int128 v50 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v49 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v49 + 96) = v50;
  *(void *)(v49 + 11sub_1000E053C(v0 + 2) = *(void *)(v1 + 96);
  __int128 v51 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v49 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v49 + 3sub_1000E053C(v0 + 2) = v51;
  __int128 v52 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v49 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v49 + 64) = v52;
  swift_retain(v47);
  swift_retain(v48);
  sub_100195480((void *)v1);
  uint64_t v53 = type metadata accessor for MusicStackAuthority(0LL);
  uint64_t v54 = sub_1000DF308( &qword_1002BD300,  (uint64_t (*)(uint64_t))&type metadata accessor for MusicStackAuthority,  (uint64_t)&protocol conformance descriptor for MusicStackAuthority);
  uint64_t v55 = ObservedObject.init(wrappedValue:)(v48, v53, v54);
  uint64_t v57 = v56;
  uint64_t v253 = v47;
  unint64_t v254 = v55;
  uint64_t v255 = v56;
  uint64_t v256 = sub_100195478;
  uint64_t v257 = v49;
  uint64_t v58 = sub_1000DFE10(&qword_1002BD308);
  uint64_t v59 = sub_1000E0374((unint64_t *)&unk_1002BD310, &qword_1002BD308, (uint64_t)&unk_1001EDBC8);
  View.musicPresentationSource<A, B>(using:)(v47, v58, v59);
  swift_release(v49);
  swift_release(v57);
  __n128 v60 = swift_release(v47);
  uint64_t v61 = static ObservableObject.environmentStore.getter(v53, v54, v60);
  uint64_t v62 = v207;
  uint64_t v63 = (uint64_t)v205;
  uint64_t v64 = v209;
  (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v205, v24, v209);
  uint64_t v65 = (uint64_t *)(v63 + *(int *)(v206 + 36));
  *uint64_t v65 = v61;
  v65[1] = v48;
  uint64_t v66 = *(void (**)(char *, uint64_t))(v62 + 8);
  swift_retain(v48);
  v66(v24, v64);
  uint64_t v67 = sub_1000DFE10(&qword_1002B8B58);
  uint64_t v68 = sub_1000E0374( &qword_1002B8B60,  &qword_1002B8B58,  (uint64_t)&protocol conformance descriptor for MusicPageProvider<A, B>);
  uint64_t v70 = static ObservableObject.environmentStore.getter(v67, v68, v69);
  uint64_t v71 = v208;
  sub_1000E04D4(v63, v208, &qword_1002BD2A8);
  os_log_type_t v72 = (uint64_t *)(v71 + *(int *)(v210 + 36));
  *os_log_type_t v72 = v70;
  v72[1] = v47;
  swift_retain(v47);
  sub_1000E03B4(v63, &qword_1002BD2A8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE890);
  uint64_t v74 = (uint64_t)v213;
  MusicPageProvider.presentationAuthority.getter();
  uint64_t v75 = sub_1000DFE10(&qword_1002BD320);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v74, 0LL, 1LL, v75);
  uint64_t v76 = v212;
  uint64_t v77 = (uint64_t)v211;
  uint64_t v78 = (uint64_t *)&v211[*(int *)(v212 + 36)];
  uint64_t v79 = sub_1000DFE10(&qword_1002BD328);
  sub_1000E04D4(v74, (uint64_t)v78 + *(int *)(v79 + 28), &qword_1002B8DD0);
  *uint64_t v78 = KeyPath;
  sub_1000E04D4(v71, v77, &qword_1002BD2B0);
  sub_1000E03B4(v74, &qword_1002B8DD0);
  sub_1000E03B4(v71, &qword_1002BD2B0);
  uint64_t v80 = swift_allocObject(&unk_1002774A8, 120LL, 7LL);
  __int128 v81 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v80 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v80 + 96) = v81;
  *(void *)(v80 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v82 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v80 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v80 + 3sub_1000E053C(v0 + 2) = v82;
  __int128 v83 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v80 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v80 + 64) = v83;
  sub_100195480((void *)v2);
  unint64_t v84 = sub_10019554C();
  uint64_t v85 = v76;
  View.onOpenURL(perform:)(sub_100195544, v80, v76, v84);
  swift_release(v80);
  sub_1000E03B4(v77, &qword_1002BD2B8);
  __int128 v252 = *(_OWORD *)(v2 + 16);
  uint64_t v86 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  State.projectedValue.getter(&v253, v86);
  uint64_t v87 = v253;
  unint64_t v88 = v254;
  uint64_t v89 = v255;
  uint64_t v90 = swift_allocObject(&unk_1002774D0, 120LL, 7LL);
  __int128 v91 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v90 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v90 + 96) = v91;
  *(void *)(v90 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v92 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v90 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v90 + 3sub_1000E053C(v0 + 2) = v92;
  __int128 v93 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v90 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v90 + 64) = v93;
  uint64_t v94 = swift_allocObject(&unk_1002774F8, 120LL, 7LL);
  __int128 v95 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v94 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v94 + 96) = v95;
  *(void *)(v94 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v96 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v94 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v94 + 3sub_1000E053C(v0 + 2) = v96;
  __int128 v97 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v94 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v94 + 64) = v97;
  sub_100195480((void *)v2);
  sub_100195480((void *)v2);
  uint64_t v98 = sub_1000DFE10(&qword_1002BD388);
  uint64_t v253 = v85;
  unint64_t v254 = v84;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v253,  &opaque type descriptor for <<opaque return type of View.onOpenURL(perform:)>>,  1LL);
  unint64_t v100 = sub_100195788();
  uint64_t v101 = v89;
  uint64_t v102 = v214;
  Swift::String v103 = v249;
  View.fullScreenCover<A>(isPresented:onDismiss:content:)( v87,  v88,  v101,  sub_100195774,  v90,  sub_100195780,  v94,  v214,  v98,  OpaqueTypeConformance2,  v100);
  swift_release(v88);
  swift_release(v90);
  swift_release(v94);
  __n128 v104 = swift_release(v87);
  (*(void (**)(char *, uint64_t, __n128))(v215 + 8))(v103, v102, v104);
  uint64_t v105 = *(void *)(v2 + 8);
  uint64_t v106 = swift_getKeyPath(&unk_1001EE798);
  uint64_t v107 = swift_getKeyPath(&unk_1001EE7C0);
  static Published.subscript.getter(&v253, v105, v106, v107);
  swift_release(v106);
  swift_release(v107);
  *(void *)&__int128 v252 = v253;
  uint64_t v108 = swift_allocObject(&unk_100277520, 120LL, 7LL);
  __int128 v109 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v108 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v108 + 96) = v109;
  *(void *)(v108 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v110 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v108 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v108 + 3sub_1000E053C(v0 + 2) = v110;
  __int128 v111 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v108 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v108 + 64) = v111;
  sub_100195480((void *)v2);
  uint64_t v112 = sub_1000DFE10(&qword_1002BB008);
  uint64_t v253 = v102;
  unint64_t v254 = v98;
  uint64_t v255 = OpaqueTypeConformance2;
  uint64_t v256 = (uint64_t (*)@<X0>(uint64_t@<X8>))v100;
  uint64_t v113 = swift_getOpaqueTypeConformance2( &v253,  &opaque type descriptor for <<opaque return type of View.fullScreenCover<A>(isPresented:onDismiss:content:)>>,  1LL);
  unint64_t v114 = sub_100195810();
  uint64_t v115 = v250;
  uint64_t v116 = v216;
  uint64_t v117 = v112;
  id v118 = v251;
  View.onChange<A>(of:initial:_:)(&v252, 0LL, sub_100195808, v108, v216, v117, v113, v114);
  swift_release(v108);

  (*(void (**)(char *, uint64_t))(v217 + 8))(v118, v116);
  uint64_t v119 = (void *)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v120 = [v119 defaultCenter];
  uint64_t v121 = v224;
  NSNotificationCenter.publisher(for:object:)(@"TVMusicSetTabNotification", 0LL);

  uint64_t v122 = swift_allocObject(&unk_100277548, 120LL, 7LL);
  __int128 v123 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v122 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v122 + 96) = v123;
  *(void *)(v122 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v124 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v122 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v122 + 3sub_1000E053C(v0 + 2) = v124;
  __int128 v125 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v122 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v122 + 64) = v125;
  uint64_t v126 = v220;
  uint64_t v127 = (uint64_t)v218;
  uint64_t v128 = v221;
  (*(void (**)(char *, char *, uint64_t))(v220 + 16))(v218, v115, v221);
  uint64_t v129 = v219;
  uint64_t v130 = v127 + *(int *)(v219 + 52);
  uint64_t v131 = v227;
  v251 = *(char **)(v227 + 16);
  uint64_t v132 = v228;
  ((void (*)(uint64_t, char *, uint64_t))v251)(v130, v121, v228);
  unint64_t v133 = (unint64_t (**)(uint64_t))(v127 + *(int *)(v129 + 56));
  *unint64_t v133 = sub_100195898;
  v133[1] = (unint64_t (*)(uint64_t))v122;
  sub_100195480((void *)v2);
  uint64_t v249 = *(char **)(v131 + 8);
  ((void (*)(char *, uint64_t))v249)(v121, v132);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v250, v128);
  Swift::String v134 = v119;
  id v135 = [v119 defaultCenter];
  Swift::String v136 = (void *)static NSNotificationName.musicPageWillLoad.getter();
  NSNotificationCenter.publisher(for:object:)(v136, 0LL);

  uint64_t v137 = swift_allocObject(&unk_100277570, 120LL, 7LL);
  __int128 v138 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v137 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v137 + 96) = v138;
  *(void *)(v137 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v139 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v137 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v137 + 3sub_1000E053C(v0 + 2) = v139;
  __int128 v140 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v137 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v137 + 64) = v140;
  uint64_t v141 = v222;
  sub_1000E04D4(v127, v222, &qword_1002BD2D8);
  uint64_t v142 = v223;
  uint64_t v143 = v132;
  ((void (*)(uint64_t, char *, uint64_t))v251)(v141 + *(int *)(v223 + 52), v121, v132);
  uint64_t v144 = (void (**)(uint64_t))(v141 + *(int *)(v142 + 56));
  *uint64_t v144 = sub_1001958A4;
  v144[1] = (void (*)(uint64_t))v137;
  sub_100195480((void *)v2);
  uint64_t v145 = (void (*)(char *, uint64_t))v249;
  ((void (*)(char *, uint64_t))v249)(v121, v132);
  sub_1000E03B4(v127, &qword_1002BD2D8);
  id v146 = [v134 defaultCenter];
  uint64_t v147 = (void *)static NSNotificationName.musicPageDidLoad.getter();
  NSNotificationCenter.publisher(for:object:)(v147, 0LL);

  uint64_t v148 = swift_allocObject(&unk_100277598, 120LL, 7LL);
  __int128 v149 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v148 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v148 + 96) = v149;
  *(void *)(v148 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v150 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v148 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v148 + 3sub_1000E053C(v0 + 2) = v150;
  __int128 v151 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v148 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v148 + 64) = v151;
  uint64_t v152 = v225;
  sub_1000E04D4(v141, v225, &qword_1002BD2E0);
  uint64_t v153 = v226;
  ((void (*)(uint64_t, char *, uint64_t))v251)(v152 + *(int *)(v226 + 52), v121, v143);
  uint64_t v154 = (void (**)(uint64_t))(v152 + *(int *)(v153 + 56));
  *uint64_t v154 = sub_1001958B0;
  v154[1] = (void (*)(uint64_t))v148;
  sub_100195480((void *)v2);
  v145(v121, v143);
  sub_1000E03B4(v141, &qword_1002BD2E0);
  sub_1000E0418(0LL, &qword_1002BD3B8, &OBJC_CLASS___NSTimer_ptr);
  id v155 = [(id)objc_opt_self(NSRunLoop) mainRunLoop];
  uint64_t v156 = type metadata accessor for NSRunLoop.SchedulerOptions(0LL);
  uint64_t v157 = (uint64_t)v232;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 56LL))(v232, 1LL, 1LL, v156);
  uint64_t v158 = static NSTimer.publish(every:tolerance:on:in:options:)(0LL, 1LL, v155, NSDefaultRunLoopMode, v157, 5.0);

  sub_1000E03B4(v157, &qword_1002B7808);
  uint64_t v253 = v158;
  uint64_t v159 = type metadata accessor for NSTimer.TimerPublisher(0LL);
  uint64_t v160 = sub_1000DF308( &qword_1002BD3C0,  (uint64_t (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher,  (uint64_t)&protocol conformance descriptor for NSTimer.TimerPublisher);
  uint64_t v161 = ConnectablePublisher.autoconnect()(v159, v160);
  swift_release(v158);
  uint64_t v253 = v161;
  uint64_t v162 = v229;
  *(void *)&__int128 v252 = v229;
  uint64_t v163 = type metadata accessor for Tabs(0LL);
  swift_retain(v162);
  __n128 v164 = v236;
  Just.init(_:)(&v252, v163);
  uint64_t v165 = sub_1000DFE10(&qword_1002BD3C8);
  uint64_t v166 = sub_1000E0374( &qword_1002BD3D0,  &qword_1002BD3C8,  (uint64_t)&protocol conformance descriptor for Publishers.Autoconnect<A>);
  uint64_t v167 = sub_1000E0374( &qword_1002BD3D8,  (uint64_t *)&unk_1002BD270,  (uint64_t)&protocol conformance descriptor for Just<A>);
  uint64_t v168 = v237;
  uint64_t v169 = v165;
  uint64_t v170 = v243;
  Publisher.combineLatest<A>(_:)(v164, v169, v243, v166, v167);
  (*(void (**)(char *, uint64_t))(v245 + 8))(v164, v170);
  swift_release(v253);
  uint64_t v171 = sub_1000E0374( &qword_1002BD3E0,  &qword_1002BD280,  (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  uint64_t v172 = v238;
  uint64_t v173 = v240;
  Publisher.first()(v240, v171);
  (*(void (**)(char *, uint64_t))(v241 + 8))(v168, v173);
  uint64_t v174 = sub_1000E0374( &qword_1002BD3E8,  &qword_1002BD288,  (uint64_t)&protocol conformance descriptor for Publishers.First<A>);
  uint64_t v175 = v239;
  uint64_t v176 = v242;
  Publisher.filter(_:)(sub_100190FA0, 0LL, v242, v174);
  (*(void (**)(char *, uint64_t))(v244 + 8))(v172, v176);
  uint64_t v177 = swift_allocObject(&unk_1002775C0, 120LL, 7LL);
  __int128 v178 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v177 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v177 + 96) = v178;
  *(void *)(v177 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v179 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v177 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v177 + 3sub_1000E053C(v0 + 2) = v179;
  __int128 v180 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v177 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v177 + 64) = v180;
  uint64_t v181 = v230;
  sub_1000E04D4(v152, v230, &qword_1002BD2E8);
  uint64_t v182 = v231;
  uint64_t v184 = v246;
  uint64_t v183 = v247;
  (*(void (**)(uint64_t, char *, uint64_t))(v246 + 16))(v181 + *(int *)(v231 + 52), v175, v247);
  uint64_t v185 = (uint64_t (**)(uint64_t))(v181 + *(int *)(v182 + 56));
  *uint64_t v185 = sub_1001958BC;
  v185[1] = (uint64_t (*)(uint64_t))v177;
  sub_100195480((void *)v2);
  (*(void (**)(char *, uint64_t))(v184 + 8))(v175, v183);
  sub_1000E03B4(v152, &qword_1002BD2E8);
  uint64_t v186 = swift_getKeyPath(&unk_1001EE8B8);
  uint64_t v187 = swift_getKeyPath(&unk_1001EE8E0);
  static Published.subscript.getter(&v253, v162, v186, v187);
  swift_release(v186);
  swift_release(v187);
  uint64_t v188 = *(void *)(v253 + 16);
  swift_bridgeObjectRelease(v253);
  LOBYTE(v253) = v188 == 0;
  uint64_t v189 = swift_allocObject(&unk_1002775E8, 120LL, 7LL);
  __int128 v190 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v189 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v189 + 96) = v190;
  *(void *)(v189 + 11sub_1000E053C(v0 + 2) = *(void *)(v2 + 96);
  __int128 v191 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v189 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v189 + 3sub_1000E053C(v0 + 2) = v191;
  __int128 v192 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v189 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v189 + 64) = v192;
  sub_100195480((void *)v2);
  uint64_t v193 = sub_1000E0374( &qword_1002BD3F0,  &qword_1002BD2F0,  (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
  char v194 = v233;
  View.onChange<A>(of:initial:_:)( &v253,  0LL,  sub_1001958D0,  v189,  v182,  &type metadata for Bool,  v193,  &protocol witness table for Bool);
  swift_release(v189);
  uint64_t v195 = sub_1000E03B4(v181, &qword_1002BD2F0);
  uint64_t v196 = static Alignment.center.getter(v195);
  uint64_t v198 = v197;
  uint64_t v199 = sub_1000DFE10(&qword_1002BD3F8);
  uint64_t v200 = v248;
  uint64_t v201 = v248 + *(int *)(v199 + 36);
  sub_10019118C(v2, v201);
  uint64_t v202 = (uint64_t *)(v201 + *(int *)(sub_1000DFE10((uint64_t *)&unk_1002BD400) + 36));
  uint64_t *v202 = v196;
  v202[1] = v198;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v234 + 32))(v200, v194, v235);
}

uint64_t sub_10018F968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v35 = sub_1000DFE10(&qword_1002BD448);
  uint64_t v7 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BD450);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = type metadata accessor for Tabs(0LL);
  uint64_t v18 = sub_1000DF308(&qword_1002BD098, type metadata accessor for Tabs, (uint64_t)&unk_1001EBFE8);
  uint64_t v19 = ObservedObject.projectedValue.getter(v15, v16, v17, v18);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE7E0);
  ObservedObject.Wrapper.subscript.getter(KeyPath, v19, v18);
  swift_release(KeyPath);
  swift_release(v19);
  __int128 v41 = v43;
  char v42 = v44;
  uint64_t v40 = a1;
  uint64_t v21 = sub_1000DFE10(&qword_1002BD458);
  unint64_t v22 = sub_10011E35C();
  unint64_t v23 = sub_100195A44();
  TabView.init(selection:content:)(&v41, sub_100195A3C, v39, &type metadata for TVMusicTabID, v21, v22, v23);
  id v24 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  NSNotificationCenter.publisher(for:object:)(TVMusicSubscriptionStatusChangedNotification, 0LL);

  uint64_t v25 = swift_allocObject(&unk_100277638, 120LL, 7LL);
  __int128 v26 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v25 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v25 + 96) = v26;
  *(void *)(v25 + 11sub_1000E053C(v0 + 2) = *(void *)(a1 + 96);
  __int128 v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v25 + swift_weakDestroy(v0 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 3sub_1000E053C(v0 + 2) = v27;
  __int128 v28 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v25 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v25 + 64) = v28;
  uint64_t v29 = v35;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v14, v10, v35);
  uint64_t v31 = v36;
  uint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(&v14[*(int *)(v11 + 52)], v6, v37);
  uint64_t v32 = (uint64_t (**)(uint64_t))&v14[*(int *)(v11 + 56)];
  *uint64_t v32 = sub_100195F78;
  v32[1] = (uint64_t (*)(uint64_t))v25;
  sub_100195480((void *)a1);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v30);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v29);
  __int128 v43 = *(_OWORD *)(a1 + 88);
  sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  State.wrappedValue.getter(&v41);
  LOBYTE(v25) = v41;
  uint64_t v33 = v38;
  sub_1000E04D4((uint64_t)v14, v38, &qword_1002BD450);
  *(_BYTE *)(v33 + *(int *)(sub_1000DFE10(&qword_1002BD540) + 52)) = v25;
  return sub_1000E03B4((uint64_t)v14, &qword_1002BD450);
}

uint64_t sub_10018FC7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE8B8);
  uint64_t v4 = swift_getKeyPath(&unk_1001EE8E0);
  static Published.subscript.getter(&v15, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  uint64_t v5 = swift_getKeyPath(&unk_1001EE930);
  uint64_t v6 = swift_allocObject(&unk_100277660, 120LL, 7LL);
  __int128 v7 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v6 + 96) = v7;
  *(void *)(v6 + 11sub_1000E053C(v0 + 2) = *(void *)(a1 + 96);
  __int128 v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v6 + swift_weakDestroy(v0 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 3sub_1000E053C(v0 + 2) = v8;
  __int128 v9 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v6 + 64) = v9;
  sub_100195480((void *)a1);
  uint64_t v10 = sub_1000DFE10((uint64_t *)&unk_1002BD140);
  uint64_t v11 = sub_1000DFE10(&qword_1002BD478);
  uint64_t v12 = sub_1000E0374(&qword_1002BD550, (uint64_t *)&unk_1002BD140, (uint64_t)&protocol conformance descriptor for [A]);
  unint64_t v13 = sub_100195AA8();
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t (*)@<X0>(unsigned __int8 *@<X0>, uint64_t@<X8>), uint64_t, uint64_t, uint64_t, uint64_t, void *, unint64_t))ForEach<>.init(_:id:content:))( &v15,  v5,  sub_1001960A8,  v6,  v10,  v11,  v12,  &protocol witness table for String,  v13);
}

uint64_t sub_10018FDCC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v23 = sub_1000DFE10(&qword_1002BD488);
  __chkstk_darwin(v23, v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = sub_1000DFE10(&qword_1002BD490);
  __chkstk_darwin(v6, v7);
  __int128 v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002BD558);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = *a1;
  sub_10018D82C(v15, (uint64_t)v9);
  uint64_t v16 = swift_allocObject(&unk_100277688, 17LL, 7LL);
  *(_BYTE *)(v16 + swift_weakDestroy(v0 + 16) = v15;
  uint64_t v17 = sub_1000DFE10(&qword_1002BD498);
  unint64_t v18 = sub_100195BFC();
  unint64_t v19 = sub_100195EEC();
  View.tabItem<A>(_:)(sub_1001960C0, v16, v6, v17, v18, v19);
  sub_1000E03B4((uint64_t)v9, &qword_1002BD490);
  __n128 v20 = swift_release(v16);
  (*(void (**)(char *, char *, uint64_t, __n128))(v11 + 16))(v5, v14, v10, v20);
  uint64_t v21 = v24;
  v5[*(int *)(v23 + 36)] = v15;
  sub_1000E04D4((uint64_t)v5, v21, &qword_1002BD488);
  *(_BYTE *)(v21 + *(int *)(sub_1000DFE10(&qword_1002BD478) + 36)) = v15;
  sub_1000E03B4((uint64_t)v5, &qword_1002BD488);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
}

uint64_t sub_10018FFBC(uint64_t a1, uint64_t a2)
{
  __int128 v7 = *(_OWORD *)(a2 + 88);
  sub_1000E011C((uint64_t)&v7 + 8, (uint64_t)&v8, &qword_1002BD548);
  sub_100112B50(&v8);
  uint64_t v2 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  State.wrappedValue.getter(&v6);
  __int128 v5 = v7;
  BOOL v4 = (v6 & 1) == 0;
  State.wrappedValue.setter(&v4, v2);
  return sub_10011B518((uint64_t)&v7);
}

uint64_t sub_100190058(uint64_t a1)
{
  uint64_t v2 = sub_1000DFE10(&qword_1002B8DD0);
  uint64_t v4 = __chkstk_darwin(v2, v3);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v4, v7);
  __int128 v9 = (char *)&v12 - v8;
  sub_1000E04D4(a1, (uint64_t)&v12 - v8, &qword_1002B8DD0);
  sub_1000E04D4((uint64_t)v9, (uint64_t)v6, &qword_1002B8DD0);
  unint64_t v10 = sub_100105304();
  EnvironmentValues.subscript.setter(v6, &_s24PresentationAuthorityKeyVN, &_s24PresentationAuthorityKeyVN, v10);
  return sub_1000E03B4((uint64_t)v9, &qword_1002B8DD0);
}

double sub_10019012C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for URL(0LL);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v49 = v12;
  __int128 v50 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v45 - v15;
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v17 = type metadata accessor for Logger(0LL, v14);
  sub_1000E96CC(v17, (uint64_t)qword_1002C5EC8);
  unint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v19 = v18(v16, a1, v8);
  __n128 v20 = (os_log_s *)Logger.logObject.getter(v19);
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc(12LL, -1LL);
    uint64_t v46 = v18;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc(32LL, -1LL);
    uint64_t v47 = a1;
    uint64_t v25 = v24;
    uint64_t v52 = v24;
    uint64_t v48 = v7;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v45 = v23 + 4;
    uint64_t v26 = sub_1000DF308( &qword_1002BD048,  (uint64_t (*)(uint64_t))&type metadata accessor for URL,  (uint64_t)&protocol conformance descriptor for URL);
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter(v8, v26);
    unint64_t v29 = v28;
    uint64_t v51 = sub_1001B2690(v27, v28, &v52);
    uint64_t v7 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52, v45);
    __n128 v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v16, v8, v30);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Opening URL: %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
    uint64_t v31 = v25;
    a1 = v47;
    swift_slowDealloc(v31, -1LL, -1LL);
    uint64_t v32 = v23;
    unint64_t v18 = v46;
    swift_slowDealloc(v32, -1LL, -1LL);
  }

  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
  }

  uint64_t v33 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56LL))(v7, 1LL, 1LL, v33);
  uint64_t v34 = v50;
  v18(v50, a1, v8);
  type metadata accessor for MainActor(0LL);
  uint64_t v35 = sub_100195480((void *)a2);
  uint64_t v36 = static MainActor.shared.getter(v35);
  uint64_t v37 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v38 = (v37 + 136) & ~v37;
  uint64_t v39 = swift_allocObject(&unk_100277610, v38 + v49, v37 | 7);
  *(void *)(v39 + swift_weakDestroy(v0 + 16) = v36;
  *(void *)(v39 + 24) = &protocol witness table for MainActor;
  __int128 v40 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v39 + 96) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v39 + 11sub_1000E053C(v0 + 2) = v40;
  *(void *)(v39 + 128) = *(void *)(a2 + 96);
  __int128 v41 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v39 + 3sub_1000E053C(v0 + 2) = *(_OWORD *)a2;
  *(_OWORD *)(v39 + 48) = v41;
  __int128 v42 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v39 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v39 + 80) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v39 + v38, v34, v8);
  uint64_t v43 = sub_100125950((uint64_t)v7, (uint64_t)&unk_1002BD438, v39);
  *(void *)&double result = swift_release(v43).n128_u64[0];
  return result;
}

uint64_t sub_100190484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1000DFE10((uint64_t *)&unk_1002BD060);
  void v5[3] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  void v5[4] = v8;
  uint64_t v9 = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  void v5[5] = v9;
  uint64_t v10 = type metadata accessor for MainActor(0LL);
  void v5[6] = v10;
  v5[7] = static MainActor.shared.getter(v10);
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to MusicPageProvider.openURL(_:)[1]);
  v5[8] = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_100190534;
  return MusicPageProvider.openURL(_:)(v9, a5);
}

uint64_t sub_100190534()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 64LL);
  *(void *)(*(void *)v1 + 72LL) = v0;
  swift_task_dealloc(v3);
  uint64_t v4 = v2[6];
  if (v0)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter(v2[6], &protocol witness table for MainActor);
    uint64_t v7 = v6;
    uint64_t v8 = sub_100190620;
  }

  else
  {
    (*(void (**)(void, void))(v2[4] + 8LL))(v2[5], v2[3]);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    uint64_t v7 = v9;
    uint64_t v8 = sub_1001905E8;
  }

  return swift_task_switch(v8, v5, v7);
}

uint64_t sub_1001905E8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100190620()
{
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = type metadata accessor for Logger(0LL, v1);
  sub_1000E96CC(v3, (uint64_t)qword_1002C5EC8);
  swift_errorRetain(v2);
  uint64_t v4 = swift_errorRetain(v2);
  uint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.default.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 72);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = (uint64_t *)swift_slowAlloc(8LL, -1LL);
    *(_DWORD *)uint64_t v9 = 138412290;
    swift_errorRetain(v8);
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v9 + 4);
    *uint64_t v10 = v11;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error opening URL: %@", v9, 0xCu);
    uint64_t v12 = sub_1000DFE10((uint64_t *)&unk_1002BB590);
    swift_arrayDestroy(v10, 1LL, v12);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);

    swift_errorRelease(v8);
  }

  else
  {
    swift_errorRelease(*(void *)(v0 + 72));
    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }

  swift_task_dealloc(*(void *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001907FC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE798);
  uint64_t v3 = swift_getKeyPath(&unk_1001EE7C0);
  uint64_t v5 = 0LL;
  return static Published.subscript.setter(&v5, v1, KeyPath, v3);
}

uint64_t sub_100190864@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE798);
  uint64_t v5 = swift_getKeyPath(&unk_1001EE7C0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001908E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE798);
  uint64_t v4 = swift_getKeyPath(&unk_1001EE7C0);
  static Published.subscript.getter(&v9, v2, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  uint64_t v5 = v9;
  if ((void)v9) {

  }
  __int128 v9 = *(_OWORD *)(a1 + 16);
  BOOL v8 = v5 != 0;
  uint64_t v6 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  return State.wrappedValue.setter(&v8, v6);
}

unint64_t sub_100190990(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    __int128 v21 = 0u;
    __int128 v22 = 0u;
    return sub_1000E03B4((uint64_t)&v21, &qword_1002B7850);
  }

  uint64_t v4 = v3;
  v19[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(@"tabName");
  v19[1] = v5;
  AnyHashable.init<A>(_:)(v19, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v4 + 16) && (unint64_t v6 = sub_10013CCD8((uint64_t)v20), (v7 & 1) != 0))
  {
    sub_1000E0094(*(void *)(v4 + 56) + 32 * v6, (uint64_t)&v21);
  }

  else
  {
    __int128 v21 = 0u;
    __int128 v22 = 0u;
  }

  swift_bridgeObjectRelease(v4);
  sub_1000E0060((uint64_t)v20);
  if (!*((void *)&v22 + 1)) {
    return sub_1000E03B4((uint64_t)&v21, &qword_1002B7850);
  }
  unint64_t result = swift_dynamicCast(v20, &v21, (char *)&type metadata for Any + 8, &type metadata for String, 6LL);
  if ((result & 1) != 0)
  {
    unint64_t result = sub_100133DDC(v20[0]);
    if (result != 7)
    {
      char v9 = result;
      uint64_t v10 = *(void *)(a2 + 56);
      uint64_t KeyPath = swift_getKeyPath(&unk_1001EE7E0);
      uint64_t v12 = swift_getKeyPath(&unk_1001EE808);
      LOBYTE(v20[0]._countAndFlagsBits) = v9;
      swift_retain(v10);
      static Published.subscript.setter(v20, v10, KeyPath, v12);
      uint64_t v13 = v10 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged;
      unint64_t result = swift_beginAccess(v10 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged, v20, 0LL, 0LL);
      uint64_t v14 = *(void (**)(void, __n128))v13;
      if (*(void *)v13)
      {
        uint64_t v15 = *(void *)(v13 + 8);
        uint64_t v16 = swift_getKeyPath(&unk_1001EE7E0);
        uint64_t v17 = swift_getKeyPath(&unk_1001EE808);
        swift_retain(v15);
        static Published.subscript.getter(&v21, v10, v16, v17);
        swift_release(v16);
        __n128 v18 = swift_release(v17);
        v14(v21, v18);
        return sub_1000E03F0((uint64_t)v14, v15);
      }
    }
  }

  return result;
}

void sub_100190B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    __int128 v22 = 0u;
    __int128 v23 = 0u;
LABEL_12:
    sub_1000E03B4((uint64_t)&v22, &qword_1002B7850);
    return;
  }

  uint64_t v4 = v3;
  strcpy(v20, "pageIntentKind");
  v20[15] = -18;
  AnyHashable.init<A>(_:)(v20, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10013CCD8((uint64_t)v21), (v6 & 1) != 0))
  {
    sub_1000E0094(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v22);
  }

  else
  {
    __int128 v22 = 0u;
    __int128 v23 = 0u;
  }

  swift_bridgeObjectRelease(v4);
  sub_1000E0060((uint64_t)v21);
  if (!*((void *)&v23 + 1)) {
    goto LABEL_12;
  }
  if ((swift_dynamicCast(v21, &v22, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
  {
    uint64_t v8 = v21[0];
    uint64_t v7 = v21[1];
    if (qword_1002B7228 != -1) {
      swift_once(&qword_1002B7228, sub_100191690);
    }
    uint64_t v9 = qword_1002C5EF0;
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EE7E0);
    uint64_t v12 = swift_getKeyPath(&unk_1001EE808);
    static Published.subscript.getter(v21, v10, KeyPath, v12);
    swift_release(KeyPath);
    swift_release(v12);
    uint64_t v13 = LOBYTE(v21[0]);
    uint64_t v14 = (void *)(v9 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_intentToTabMap);
    swift_beginAccess(v9 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_intentToTabMap, v21, 33LL, 0LL);
    swift_bridgeObjectRetain(v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v14);
    *(void *)&__int128 v22 = *v14;
    *uint64_t v14 = 0x8000000000000000LL;
    sub_100138050(v13, v8, v7, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = *v14;
    *uint64_t v14 = v22;
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v16);
    swift_endAccess(v21);
    uint64_t v17 = (void *)(v9 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageStates);
    swift_beginAccess(v9 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageStates, v21, 33LL, 0LL);
    char v18 = swift_isUniquelyReferenced_nonNull_native(*v17);
    *(void *)&__int128 v22 = *v17;
    *uint64_t v17 = 0x8000000000000000LL;
    sub_100137F4C(0, v13, v18);
    uint64_t v19 = *v17;
    *uint64_t v17 = v22;
    swift_bridgeObjectRelease(v19);
    swift_endAccess(v21);
    swift_bridgeObjectRelease(v7);
  }

Swift::String *musicPageLoadIntentUserInfoKey.unsafeMutableAddressor()
{
  return &musicPageLoadIntentUserInfoKey;
}

void sub_100190E04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    __int128 v13 = 0u;
    __int128 v14 = 0u;
LABEL_12:
    sub_1000E03B4((uint64_t)&v13, &qword_1002B7850);
    return;
  }

  uint64_t v4 = v3;
  strcpy(v11, "pageIntentKind");
  v11[15] = -18;
  AnyHashable.init<A>(_:)(v11, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10013CCD8((uint64_t)v12), (v6 & 1) != 0))
  {
    sub_1000E0094(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v13);
  }

  else
  {
    __int128 v13 = 0u;
    __int128 v14 = 0u;
  }

  swift_bridgeObjectRelease(v4);
  sub_1000E0060((uint64_t)v12);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_12;
  }
  if ((swift_dynamicCast(v12, &v13, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
  {
    uint64_t v7 = v12[1];
    if (qword_1002B7228 != -1) {
      swift_once(&qword_1002B7228, sub_100191690);
    }
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EE7E0);
    uint64_t v10 = swift_getKeyPath(&unk_1001EE808);
    static Published.subscript.getter(v12, v8, KeyPath, v10);
    swift_release(KeyPath);
    swift_release(v10);
    sub_100194884(LOBYTE(v12[0]));
    swift_bridgeObjectRelease(v7);
  }

BOOL sub_100190FA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(sub_1000DFE10((uint64_t *)&unk_1002BD420) + 48));
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE8B8);
  uint64_t v3 = swift_getKeyPath(&unk_1001EE8E0);
  static Published.subscript.getter(&v6, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  uint64_t v4 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease(v6);
  return v4 == 0;
}

uint64_t sub_100191038(uint64_t a1, uint64_t a2)
{
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL, a2);
  uint64_t v4 = sub_1000E96CC(v3, (uint64_t)qword_1002C5EC8);
  unint64_t v5 = (os_log_s *)Logger.logObject.getter(v4);
  os_log_type_t v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Tabs took more than 5 seconds to load, showing loading.", v7, 2u);
    swift_slowDealloc(v7, -1LL, -1LL);
  }

  __int128 v11 = *(_OWORD *)(a2 + 64);
  char v10 = 1;
  uint64_t v8 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  return State.wrappedValue.setter(&v10, v8);
}

void sub_10019113C(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  if ((*a2 & 1) == 0)
  {
    __int128 v5 = *(_OWORD *)(a3 + 64);
    char v4 = 0;
    uint64_t v3 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
    State.wrappedValue.setter(&v4, v3);
  }

uint64_t sub_10019118C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ControlSize(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002B7F60);
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&KeyPath - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v13 = sub_1000DFE10(&qword_1002BD410);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&KeyPath - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v28 = *(_OWORD *)(a1 + 64);
  sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  char v18 = State.wrappedValue.getter(&v29);
  if (v29 == 1)
  {
    ProgressView<>.init<>()(v18);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for ControlSize.large(_:), v4);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EE900);
    uint64_t v19 = v14;
    uint64_t v20 = a2;
    __int128 v21 = (uint64_t *)&v17[*(int *)(v13 + 36)];
    uint64_t v22 = sub_1000DFE10(&qword_1002BD418);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v21 + *(int *)(v22 + 28), v8, v4);
    *__int128 v21 = KeyPath;
    a2 = v20;
    uint64_t v14 = v19;
    uint64_t v23 = v27;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v17, v12, v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v9);
    sub_1000E011C((uint64_t)v17, a2, &qword_1002BD410);
    uint64_t v24 = 0LL;
  }

  else
  {
    uint64_t v24 = 1LL;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v24, 1LL, v13);
}

uint64_t sub_100191398@<X0>(uint64_t a1@<X8>)
{
  return sub_10018E668(a1);
}

id sub_1001913E0(uint64_t a1)
{
  return sub_1001913F8(a1, 0LL, type metadata accessor for ModalPresenter, &qword_1002C5EE8);
}

id sub_1001913F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void *a4)
{
  id result = [objc_allocWithZone((Class)a3(a2)) init];
  *a4 = result;
  return result;
}

uint64_t sub_10019144C()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE798);
  uint64_t v2 = swift_getKeyPath(&unk_1001EE7C0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

id sub_100191604()
{
  return sub_100113734(0LL, (uint64_t (*)(void))type metadata accessor for ModalPresenter);
}

uint64_t sub_100191654@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ModalPresenter(0LL);
  uint64_t result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

id sub_100191690(uint64_t a1, uint64_t a2)
{
  return sub_1001913F8( a1,  a2,  (uint64_t (*)(uint64_t))type metadata accessor for PageStateNotifier,  &qword_1002C5EF0);
}

id sub_1001917E4(uint64_t a1)
{
  return sub_100113734(a1, type metadata accessor for PageStateNotifier);
}

uint64_t sub_100191838()
{
  uint64_t result = static NSNotificationName.musicPageWillLoad.getter();
  static NSNotification.musicPageWillLoad = result;
  return result;
}

uint64_t *NSNotification.musicPageWillLoad.unsafeMutableAddressor()
{
  if (qword_1002B7230 != -1) {
    swift_once(&qword_1002B7230, sub_100191838);
  }
  return &static NSNotification.musicPageWillLoad;
}

id static NSNotification.musicPageWillLoad.getter()
{
  return sub_100191A68(&qword_1002B7230, (id *)&static NSNotification.musicPageWillLoad, (uint64_t)sub_100191838);
}

uint64_t sub_1001918CC()
{
  uint64_t result = static NSNotificationName.musicPageDidLoad.getter();
  static NSNotification.musicPageDidLoad = result;
  return result;
}

uint64_t *NSNotification.musicPageDidLoad.unsafeMutableAddressor()
{
  if (qword_1002B7238 != -1) {
    swift_once(&qword_1002B7238, sub_1001918CC);
  }
  return &static NSNotification.musicPageDidLoad;
}

id static NSNotification.musicPageDidLoad.getter()
{
  return sub_100191A68(&qword_1002B7238, (id *)&static NSNotification.musicPageDidLoad, (uint64_t)sub_1001918CC);
}

const char *NSNotification.musicPageIntentUserInfoKey.unsafeMutableAddressor()
{
  return "pageIntentKind";
}

uint64_t static NSNotification.musicPageIntentUserInfoKey.getter()
{
  return 0x65746E4965676170LL;
}

id sub_1001919C4()
{
  if (qword_1002B7248 != -1) {
    swift_once(&qword_1002B7248, sub_100191ABC);
  }
  static NSNotification.mainViewControllerDidAppear = static NSNotificationName.mainViewControllerDidAppear;
  return (id)static NSNotificationName.mainViewControllerDidAppear;
}

uint64_t *NSNotification.mainViewControllerDidAppear.unsafeMutableAddressor()
{
  if (qword_1002B7240 != -1) {
    swift_once(&qword_1002B7240, sub_1001919C4);
  }
  return &static NSNotification.mainViewControllerDidAppear;
}

id static NSNotification.mainViewControllerDidAppear.getter()
{
  return sub_100191A68( &qword_1002B7240,  (id *)&static NSNotification.mainViewControllerDidAppear,  (uint64_t)sub_1001919C4);
}

id sub_100191A68(void *a1, id *a2, uint64_t a3)
{
  if (*a1 != -1LL) {
    swift_once(a1, a3);
  }
  return *a2;
}

NSString sub_100191ABC()
{
  NSString result = String._bridgeToObjectiveC()();
  static NSNotificationName.mainViewControllerDidAppear = (uint64_t)result;
  return result;
}

id static NSNotificationName.mainViewControllerDidAppear.getter()
{
  if (qword_1002B7248 != -1) {
    swift_once(&qword_1002B7248, sub_100191ABC);
  }
  return (id)static NSNotificationName.mainViewControllerDidAppear;
}

unint64_t sub_100191B34()
{
  unint64_t result = qword_1002BCEA0;
  if (!qword_1002BCEA0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE4B0, &type metadata for TVMusicShowSearchResults);
    atomic_store(result, (unint64_t *)&qword_1002BCEA0);
  }

  return result;
}

uint64_t sub_100191B78()
{
  return sub_1000DF308( &qword_1002BCEA8,  (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria,  (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
}

id sub_100191BA4()
{
  return [objc_allocWithZone((Class)TVMusicCloudViewController) init];
}

uint64_t sub_100191BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001961D4();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100191C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1001961D4();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100191C6C(uint64_t a1)
{
  unint64_t v2 = sub_1001961D4();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

void sub_100191C90()
{
  id v0 = [(id)objc_opt_self(TVMusicPlayerManager) defaultPlayer];
  id v1 = [objc_allocWithZone((Class)TVMusicPlaybackHostController) initWithPlayer:v0];

  if (!v1) {
    __break(1u);
  }
}

uint64_t sub_100191CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100196218();
  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100191D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100196218();
  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100191D9C(uint64_t a1)
{
  unint64_t v2 = sub_100196218();
  UIViewControllerRepresentable.body.getter(a1, v2);
  __break(1u);
}

uint64_t sub_100191DC0()
{
  uint64_t v0 = sub_1000DFE10(&qword_1002BD268);
  uint64_t v1 = type metadata accessor for StringSearchScope(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = swift_allocObject(v0, v4 + *(void *)(v2 + 72), v3 | 7);
  *(_OWORD *)(v5 + swift_weakDestroy(v0 + 16) = xmmword_1001E84B0;
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t))(v2 + 104))( v5 + v4,  enum case for StringSearchScope.general(_:),  v1);
  qword_1002C5F18 = v5;
  return result;
}

uint64_t sub_100191E54()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource(0LL);
  sub_1001059D4(v0, qword_1002C5F20);
  sub_1000E96CC(v0, (uint64_t)qword_1002C5F20);
  return LocalizedStringResource.init(stringLiteral:)(0xD000000000000018LL, 0x80000001001EE650LL);
}

uint64_t sub_100191EB4(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  void v2[4] = a2;
  uint64_t v3 = type metadata accessor for ContinuousClock(0LL);
  v2[5] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  void v2[6] = v4;
  v2[7] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = type metadata accessor for StringSearchCriteria(0LL);
  v2[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  void v2[9] = v6;
  v2[10] = swift_task_alloc((*(void *)(v6 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_100191F3C, 0LL, 0LL);
}

uint64_t sub_100191F3C(uint64_t a1, uint64_t a2)
{
  if (qword_1002B7210 != -1) {
    swift_once(&qword_1002B7210, sub_10018868C);
  }
  uint64_t v3 = v2[4];
  uint64_t v4 = type metadata accessor for Logger(0LL, a2);
  sub_1000E96CC(v4, (uint64_t)qword_1002C5EC8);
  uint64_t v5 = swift_retain_n(v3, 2LL);
  uint64_t v6 = (os_log_s *)Logger.logObject.getter(v5);
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v2[10];
    uint64_t v22 = v2[8];
    uint64_t v20 = v2[4];
    uint64_t v21 = v2[9];
    uint64_t v9 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    uint64_t v10 = swift_slowAlloc(32LL, -1LL);
    uint64_t v24 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v11 = IntentParameter.wrappedValue.getter();
    uint64_t v12 = StringSearchCriteria.term.getter(v11);
    unint64_t v14 = v13;
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v8, v22);
    void v2[2] = sub_1001B2690(v12, v14, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 2, v2 + 3, v9 + 4);
    swift_bridgeObjectRelease(v14);
    swift_release_n(v20, 2LL);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Search term is: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1LL, -1LL);
    swift_slowDealloc(v9, -1LL, -1LL);
  }

  else
  {
    swift_release_n(v2[4], 2LL);
  }

  uint64_t v15 = static Duration.seconds(_:)(1.4);
  uint64_t v17 = v16;
  ContinuousClock.init()();
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1002BD248 + dword_1002BD248);
  char v18 = (void *)swift_task_alloc(unk_1002BD24C);
  v2[11] = v18;
  *char v18 = v2;
  v18[1] = sub_10019218C;
  return v23(v15, v17, 0LL, 0LL, 1);
}

uint64_t sub_10019218C()
{
  uint64_t v2 = *(void **)v1;
  swift_task_dealloc(*(void *)(*(void *)v1 + 88LL));
  uint64_t v4 = v2[6];
  uint64_t v3 = v2[7];
  uint64_t v5 = v2[5];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100196288;
  }

  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100192224;
  }

  return swift_task_switch(v6, 0LL, 0LL);
}

uint64_t sub_100192224()
{
  uint64_t v1 = type metadata accessor for MainActor(0LL);
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = static MainActor.shared.getter(v1);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100192290, v2, v3);
}

uint64_t sub_100192290()
{
  if (qword_1002B7218 != -1) {
    swift_once(&qword_1002B7218, sub_100188700);
  }
  return swift_task_switch(sub_1001922F4, 0LL, 0LL);
}

uint64_t sub_1001922F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 96);
  *(void *)(v1 + 11sub_1000E053C(v0 + 2) = static MainActor.shared.getter(a1);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100192354, v3, v4);
}

uint64_t sub_100192354()
{
  *(void *)(v0 + 120) = qword_1002C5EE0;
  return swift_task_switch(sub_10019239C, 0LL, 0LL);
}

uint64_t sub_10019239C()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = IntentParameter.wrappedValue.getter();
  v0[16] = StringSearchCriteria.term.getter(v5);
  v0[17] = v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v0[18] = static MainActor.shared.getter(v7);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10019243C, v8, v9);
}

uint64_t sub_10019243C()
{
  unint64_t v1 = v0[17];
  uint64_t v2 = v0[16];
  swift_release(v0[18]);
  sub_10018C6E8(v2, v1);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100192498, 0LL, 0LL);
}

uint64_t sub_100192498()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  static IntentResult.result<>()();
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001924E4@<X0>(void *a1@<X8>)
{
  if (qword_1002B7250 != -1) {
    swift_once(&qword_1002B7250, sub_100191DC0);
  }
  uint64_t v2 = qword_1002C5F18;
  *a1 = qword_1002C5F18;
  return swift_bridgeObjectRetain(v2);
}

uint64_t sub_100192534()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100192554(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  IntentParameter.wrappedValue.setter(v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1001925EC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100192634;
}

void sub_100192634(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32LL))(*a1, 0LL);
  free(v1);
}

unint64_t sub_100192668()
{
  unint64_t result = qword_1002BCEB0;
  if (!qword_1002BCEB0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE4D8, &type metadata for TVMusicShowSearchResults);
    atomic_store(result, (unint64_t *)&qword_1002BCEB0);
  }

  return result;
}

unint64_t sub_1001926B0()
{
  unint64_t result = qword_1002BCEB8;
  if (!qword_1002BCEB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE568, &type metadata for TVMusicShowSearchResults);
    atomic_store(result, (unint64_t *)&qword_1002BCEB8);
  }

  return result;
}

unint64_t sub_1001926F8()
{
  unint64_t result = qword_1002BCEC0;
  if (!qword_1002BCEC0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE590, &type metadata for TVMusicShowSearchResults);
    atomic_store(result, (unint64_t *)&qword_1002BCEC0);
  }

  return result;
}

uint64_t sub_10019273C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E3E0, 1LL);
}

uint64_t sub_10019274C(uint64_t a1, uint64_t a2)
{
  v3[0] = a2;
  v3[1] = sub_100192668();
  return swift_getOpaqueTypeConformance2( v3,  &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>,  1LL);
}

uint64_t sub_10019278C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1002B7258 != -1) {
    swift_once(&qword_1002B7258, sub_100191E54);
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource(0LL);
  uint64_t v3 = sub_1000E96CC(v2, (uint64_t)qword_1002C5F20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16LL))(a1, v3, v2);
}

uint64_t sub_1001927FC(uint64_t a1)
{
  unint64_t v2 = sub_10019508C();
  return static ShowInAppSearchResultsIntent.openAppWhenRun.getter(a1, v2);
}

uint64_t sub_100192834(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc(dword_1002BD244);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000E01FC;
  return sub_100191EB4(a1, v4);
}

uint64_t sub_10019288C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for InputConnectionBehavior(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = sub_1000DFE10(&qword_1002BD228);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BD230);
  __chkstk_darwin(v11, v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for LocalizedStringResource(0LL);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  sub_1000DFE10(&qword_1002BD238);
  LocalizedStringResource.init(stringLiteral:)(0x6169726574697243LL, 0xE800000000000000LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1LL, 1LL, v15);
  uint64_t v20 = type metadata accessor for IntentDialog(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56LL))(v10, 1LL, 1LL, v20);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))( v6,  enum case for InputConnectionBehavior.default(_:),  v2);
  uint64_t result = IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)(v19, v14, v10, v6);
  *a1 = result;
  return result;
}

uint64_t sub_100192A4C(uint64_t a1)
{
  unint64_t v2 = sub_100192668();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100192A74()
{
  return type metadata accessor for TVMusicUIMainViewController(0LL);
}

uint64_t type metadata accessor for TVMusicUIMainViewController(uint64_t a1)
{
  return sub_1000EE114(a1, (uint64_t *)&unk_1002BCF48, (uint64_t)&nominal type descriptor for TVMusicUIMainViewController);
}

void sub_100192A90(uint64_t a1)
{
  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = "\b";
  void v4[2] = "\b";
  void v4[3] = &unk_1001EE5E8;
  v4[4] = &unk_1001EE600;
  void v4[5] = &unk_1001EE600;
  sub_100192B40(319LL);
  if (v3 <= 0x3F)
  {
    v4[6] = *(void *)(v2 - 8) + 64LL;
    void v4[7] = &unk_1001EE600;
    void v4[8] = &unk_1001EE618;
    void v4[9] = "\b";
    swift_updateClassMetadata2(a1, 256LL, 10LL, v4, a1 + 80);
  }

void sub_100192B40(uint64_t a1)
{
  if (!qword_1002BCF58)
  {
    type metadata accessor for URL(255LL);
    unint64_t v2 = type metadata accessor for Optional(a1);
    if (!v3) {
      atomic_store(v2, (unint64_t *)&qword_1002BCF58);
    }
  }

uint64_t sub_100192B94()
{
  return type metadata accessor for ModalPresenter(0LL);
}

uint64_t type metadata accessor for ModalPresenter(uint64_t a1)
{
  return sub_1000EE114(a1, (uint64_t *)&unk_1002BCF90, (uint64_t)&nominal type descriptor for ModalPresenter);
}

void sub_100192BB0(uint64_t a1)
{
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v2 - 8) + 64LL;
    swift_updateClassMetadata2(a1, 256LL, 1LL, &v4, a1 + 80);
  }

void sub_100192C1C(uint64_t a1)
{
  if (!qword_1002BCFA0)
  {
    uint64_t v2 = sub_1000DEA98(&qword_1002BB008);
    unint64_t v3 = type metadata accessor for Published(a1, v2);
    if (!v4) {
      atomic_store(v3, (unint64_t *)&qword_1002BCFA0);
    }
  }

uint64_t type metadata accessor for PageStateNotifier()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic17PageStateNotifier);
}

uint64_t storeEnumTagSinglePayload for PageStateNotifier.PageState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFE) {
    return ((uint64_t (*)(void))((char *)&loc_100192CE0 + 4 * byte_1001EE413[v4]))();
  }
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100192D14 + 4 * byte_1001EE40E[v4]))();
}

uint64_t sub_100192D14(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192D1C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100192D24LL);
  }
  return result;
}

uint64_t sub_100192D30(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100192D38LL);
  }
  *(_BYTE *)uint64_t result = a2 + 1;
  return result;
}

uint64_t sub_100192D3C(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192D44(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageStateNotifier.PageState()
{
  return &type metadata for PageStateNotifier.PageState;
}

uint64_t getEnumTagSinglePayload for TVMusicUIMainViewController.MainViewType( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }

    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }

uint64_t storeEnumTagSinglePayload for TVMusicUIMainViewController.MainViewType( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFD) {
    return ((uint64_t (*)(void))((char *)&loc_100192E3C + 4 * byte_1001EE41D[v4]))();
  }
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100192E70 + 4 * byte_1001EE418[v4]))();
}

uint64_t sub_100192E70(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x100192E80LL);
  }
  return result;
}

uint64_t sub_100192E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x100192E94LL);
  }
  *(_BYTE *)uint64_t result = a2 + 2;
  return result;
}

uint64_t sub_100192E98(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100192EA0(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TVMusicUIMainViewController.MainViewType()
{
  return &type metadata for TVMusicUIMainViewController.MainViewType;
}

ValueMetadata *type metadata accessor for TVMusicShowSearchResults()
{
  return &type metadata for TVMusicShowSearchResults;
}

uint64_t sub_100192ECC()
{
  return sub_1000E0374( &qword_1002BCFF0,  &qword_1002BCFF8,  (uint64_t)&protocol conformance descriptor for IntentResultContainer<A, B, C, D>);
}

unint64_t sub_100192EFC()
{
  unint64_t result = qword_1002BD000;
  if (!qword_1002BD000)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE6CC, &type metadata for TVMusicUIMainViewController.MainViewType);
    atomic_store(result, (unint64_t *)&qword_1002BD000);
  }

  return result;
}

unint64_t sub_100192F44()
{
  unint64_t result = qword_1002BD008;
  if (!qword_1002BD008)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE734, &type metadata for PageStateNotifier.PageState);
    atomic_store(result, (unint64_t *)&qword_1002BD008);
  }

  return result;
}

uint64_t sub_100192F88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PushDestination(0LL);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8LL))(a1, v2);
  return a1;
}

uint64_t sub_100192FC4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE798);
  uint64_t v5 = swift_getKeyPath(&unk_1001EE7C0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100193040(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EE798);
  uint64_t v5 = swift_getKeyPath(&unk_1001EE7C0);
  int v8 = v2;
  id v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_1001930B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001930F4()
{
  uint64_t v1 = type metadata accessor for PushDestination(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);

  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
    case 1u:
      uint64_t v6 = type metadata accessor for Artist(0LL);
      goto LABEL_7;
    case 2u:
      uint64_t v6 = type metadata accessor for Composer(0LL);
      goto LABEL_7;
    case 3u:
    case 5u:
      uint64_t v6 = type metadata accessor for Album(0LL);
      goto LABEL_7;
    case 4u:
      uint64_t v6 = type metadata accessor for Song(0LL);
      goto LABEL_7;
    case 6u:
    case 7u:
      uint64_t v6 = type metadata accessor for Playlist(0LL);
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v0 + v4, v6);
      break;
    case 8u:
      uint64_t v8 = v0 + v4 + *(int *)(sub_1000DFE10(&qword_1002B8108) + 48);
      uint64_t v9 = type metadata accessor for NowPlayingOptions(0LL);
      uint64_t v10 = *(void *)(v9 - 8);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }

  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100193224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushDestination(0LL);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32LL))(a2, a1, v4);
  return a2;
}

double sub_100193268(uint64_t a1)
{
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for PushDestination(0LL) - 8) + 80LL);
  return sub_10018CAD4(a1, *(void *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1001932A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001932B8(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001932C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant(0LL);
  *(void *)(v6 + 64) = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v6 + 7sub_1000E053C(v0 + 2) = v13;
  unint64_t v14 = (*(void *)(v13 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;
  *(void *)(v6 + 80) = swift_task_alloc(v14);
  *(void *)(v6 + 88) = swift_task_alloc(v14);
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 3sub_1000E053C(v0 + 2) = a5 & 1;
  return swift_task_switch(sub_100193364, 0LL, 0LL);
}

uint64_t sub_100193364()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = type metadata accessor for ContinuousClock(0LL);
  uint64_t v5 = sub_1000DF308( &qword_1002BD250,  (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock,  (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v4, v5);
  uint64_t v6 = sub_1000DF308( &qword_1002BD258,  (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant,  (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v2, v6);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v7;
  v7(v1, v2);
  uint64_t v8 = (void *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[13] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10019347C;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v4, v5);
}

uint64_t sub_10019347C()
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v2 = *(void *)(*v1 + 104);
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(*v1 + 64);
  uint64_t v6 = *v1;
  *(void *)(v6 + 11sub_1000E053C(v0 + 2) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0) {
    return swift_task_switch(sub_100193528, 0LL, 0LL);
  }
  uint64_t v8 = *(void *)(v6 + 80);
  swift_task_dealloc(*(void *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_100193528()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_task_dealloc(*(void *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100193564(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlSize(0LL);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a1);
  return EnvironmentValues.controlSize.setter(v5);
}

void (*sub_1001935E0(uint64_t **a1, unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  void v6[4] = (uint64_t)sub_10019368C(v6, a2, a3);
  return sub_100193634;
}

void (*sub_100193638(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1001936F8(v6, a2, a3);
  return sub_100193634;
}

uint64_t *sub_10019368C(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain(*(void *)(a3 + 8 * a2 + 32));
LABEL_5:
    *uint64_t v3 = v4;
    return (uint64_t *)destroy for Backdrop.Contents;
  }

  __break(1u);
  return result;
}

void (*sub_1001936F8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001LL) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }

  if ((a2 & 0x8000000000000000LL) != 0)
  {
    __break(1u);
  }

  else if (*(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for TVMLShapeView.ShapeContentType;
  }

  __break(1u);
  return result;
}

uint64_t sub_100193764(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return a3;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return a3;
    }
  }

  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8LL;
  if (v6)
  {
    if (a3 < 0) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E0374(&qword_1002BD1F0, &qword_1002BD1E8, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (unint64_t i = 0LL; i != v7; ++i)
        {
          sub_1000DFE10(&qword_1002BD1E8);
          uint64_t v13 = sub_1001935E0(v18, i, a3);
          uint64_t v15 = *v14;
          swift_unknownObjectRetain(*v14);
          ((void (*)(uint64_t **, void))v13)(v18, 0LL);
          *(void *)(a1 + 8 * i) = v15;
        }

        swift_bridgeObjectRelease(a3);
        return a3;
      }

      goto LABEL_24;
    }

uint64_t sub_100193974(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0) {
      uint64_t v16 = a3;
    }
    else {
      uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7) {
      return a3;
    }
  }

  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFF8LL) + 0x10);
    if (!v7) {
      return a3;
    }
  }

  if (!a1) {
    goto LABEL_25;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8LL;
  if (v6)
  {
    if (a3 < 0) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8LL;
    }
    swift_bridgeObjectRetain(a3);
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1000E0374(&qword_1002BD190, (uint64_t *)&unk_1002BD180, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (unint64_t i = 0LL; i != v7; ++i)
        {
          sub_1000DFE10((uint64_t *)&unk_1002BD180);
          uint64_t v13 = sub_100193638(v18, i, a3);
          id v15 = *v14;
          ((void (*)(void (**)(id *), void))v13)(v18, 0LL);
          *(void *)(a1 + 8 * i) = v15;
        }

        swift_bridgeObjectRelease(a3);
        return a3;
      }

      goto LABEL_24;
    }

uint64_t sub_100193B90(int a1, uint64_t a2, uint64_t a3)
{
  int v41 = a1;
  uint64_t v5 = sub_1000DFE10(&qword_1002BBD68);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v9 = sub_1000DFE10(&qword_1002BD130);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v14 = sub_1000DFE10(&qword_1002BD138);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = &v40[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v47 = type metadata accessor for MusicTabs.DefaultProvider(0LL);
  uint64_t v48 = &off_100274590;
  v46[0] = a2;
  uint64_t v42 = v15;
  uint64_t v43 = v14;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000LL) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1000F9030((uint64_t)_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v19 = &_swiftEmptySetSingleton;
  }

  *(void *)(a3 + 56) = v19;
  uint64_t v20 = (void *)(a3 + OBJC_IVAR____TtC7TVMusic4Tabs_onTabsChanged);
  *uint64_t v20 = 0LL;
  v20[1] = 0LL;
  uint64_t v21 = (void *)(a3 + OBJC_IVAR____TtC7TVMusic4Tabs_onSelectedTabChanged);
  *uint64_t v21 = 0LL;
  v21[1] = 0LL;
  uint64_t v22 = OBJC_IVAR____TtC7TVMusic4Tabs_sharedStackAuthority;
  uint64_t v23 = type metadata accessor for MusicStackAuthority(0LL);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(void *)(a3 + v2sub_1000E053C(v0 + 2) = MusicStackAuthority.init()();
  swift_beginAccess(a3 + OBJC_IVAR____TtC7TVMusic4Tabs__tabs, v45, 33LL, 0LL);
  char v44 = _swiftEmptyArrayStorage;
  uint64_t v24 = sub_1000DFE10((uint64_t *)&unk_1002BD140);
  Published.init(initialValue:)(&v44, v24);
  swift_endAccess(v45);
  swift_beginAccess(a3 + OBJC_IVAR____TtC7TVMusic4Tabs__selectedTab, v45, 33LL, 0LL);
  LOBYTE(v44) = v41;
  Published.init(initialValue:)(&v44, &type metadata for TVMusicTabID);
  swift_endAccess(v45);
  sub_1000FF28C((uint64_t)v46, a3 + 16);
  uint64_t v25 = sub_1000E0518(v46, v47);
  swift_beginAccess(*v25 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider__musicTabs, v45, 33LL, 0LL);
  uint64_t v26 = sub_1000DFE10(&qword_1002BAE80);
  Published.projectedValue.getter(v26);
  swift_endAccess(v45);
  uint64_t v27 = sub_1000E0374( &qword_1002BD150,  &qword_1002BD130,  (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  uint64_t v28 = Publisher.eraseToAnyPublisher()(v9, v27);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
  v45[0] = v28;
  uint64_t v29 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
  char v44 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v30 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0LL);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56LL))(v8, 1LL, 1LL, v30);
  uint64_t v31 = sub_1000DFE10(&qword_1002BD158);
  uint64_t v32 = sub_1000E0374( (unint64_t *)&unk_1002BD160,  &qword_1002BD158,  (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  uint64_t v33 = sub_100185CC8( (unint64_t *)&qword_1002BBD90,  (unint64_t *)&qword_1002BBD80,  &OBJC_CLASS___OS_dispatch_queue_ptr,  (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v44, v8, v31, v29, v32, v33);
  sub_1000E03B4((uint64_t)v8, &qword_1002BBD68);

  swift_release(v45[0]);
  uint64_t v34 = swift_allocObject(&unk_100277398, 24LL, 7LL);
  swift_weakInit(v34 + 16, a3);
  uint64_t v35 = sub_1000E0374( &qword_1002BD170,  &qword_1002BD138,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  uint64_t v36 = v43;
  uint64_t v37 = Publisher<>.sink(receiveValue:)(sub_100195080, v34, v43, v35);
  __n128 v38 = swift_release(v34);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v42 + 8))(v18, v36, v38);
  swift_beginAccess(a3 + 56, v45, 33LL, 0LL);
  AnyCancellable.store(in:)(a3 + 56);
  swift_endAccess(v45);
  swift_release(v37);
  sub_1000E053C(v46);
  return a3;
}

unint64_t sub_100194000(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000DFE10((uint64_t *)&unk_1002BD1A0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v1);
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_10013CED4(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v6);
    return (unint64_t)v3;
  }

  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1LL);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    void v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain(v6);
    unint64_t result = sub_10013CED4(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if ((v16 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

unint64_t sub_10019410C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000DFE10(&qword_1002BD198);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v1);
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_10013CED4(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain(v4);
    return (unint64_t)v3;
  }

  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8LL) + 64) |= 1LL << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1LL);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    void v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain(v4);
    unint64_t result = sub_10013CED4(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if ((v15 & 1) != 0) {
      goto LABEL_7;
    }
  }

  __break(1u);
  return result;
}

uint64_t sub_100194208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v12, v13);
  char v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002BAE80);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v34[3] = _s18DefaultBagAccessorCMa();
  v34[4] = &off_100272BB0;
  v34[0] = a1;
  v33[3] = _s22DefaultSortingProviderCMa();
  v33[4] = &off_100275638;
  v33[0] = a3;
  *(void *)(a6 + swift_weakDestroy(v0 + 16) = 0LL;
  uint64_t v21 = a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider__musicTabs;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v22 = sub_1000DFE10((uint64_t *)&unk_1002BD140);
  Published.init(initialValue:)(&v32, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v21, v20, v16);
  *(_BYTE *)(a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isRunningUpdate) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000LL) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1000F9030((uint64_t)_swiftEmptyArrayStorage);
  }

  else
  {
    uint64_t v23 = &_swiftEmptySetSingleton;
  }

  *(void *)(a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_subscriptions) = v23;
  sub_1000FF28C((uint64_t)v34, a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_musicTabAccessor);
  *(void *)(a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_musicTabFilters) = a2;
  sub_1000FF28C((uint64_t)v33, a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_sortingProvider);
  uint64_t v24 = (void *)(a6 + OBJC_IVAR____TtCO7TVMusic9MusicTabs15DefaultProvider_isCustomerSubscribed);
  *uint64_t v24 = a4;
  v24[1] = a5;
  uint64_t v25 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56LL))(v15, 1LL, 1LL, v25);
  type metadata accessor for MainActor(0LL);
  swift_retain(a5);
  uint64_t v26 = swift_retain(a6);
  uint64_t v27 = static MainActor.shared.getter(v26);
  uint64_t v28 = (void *)swift_allocObject(&unk_1002773C0, 40LL, 7LL);
  v28[2] = v27;
  v28[3] = &protocol witness table for MainActor;
  v28[4] = a6;
  uint64_t v29 = sub_100125950((uint64_t)v15, (uint64_t)&unk_1002BD178, (uint64_t)v28);
  swift_release(v29);
  sub_1001497E4();
  sub_1000E053C(v33);
  sub_1000E053C(v34);
  return a6;
}

uint64_t sub_100194480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = _s18DefaultBagAccessorCMa();
  uint64_t v27 = &off_100272BB0;
  v25[0] = a1;
  uint64_t v23 = _s22DefaultSortingProviderCMa();
  uint64_t v24 = &off_100275638;
  v22[0] = a3;
  uint64_t v10 = type metadata accessor for MusicTabs.DefaultProvider(0LL);
  uint64_t v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  uint64_t v12 = sub_100195034((uint64_t)v25, v26);
  __chkstk_darwin(v12, v12);
  uint64_t v14 = (void *)((char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  uint64_t v16 = sub_100195034((uint64_t)v22, v23);
  __chkstk_darwin(v16, v16);
  uint64_t v18 = (void *)((char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = sub_100194208(*v14, a2, *v18, a4, a5, v11);
  sub_1000E053C(v22);
  sub_1000E053C(v25);
  return v20;
}

void sub_1001945E8()
{
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_musicPageProvider] = 0LL;
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_privacyAcknowledgementObserver] = 0LL;
  v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewType] = 2;
  v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didUpdateMainView] = 0;
  v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_didAcknowledgePrivacyDisclaimer] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pendingDeepLinkURL];
  uint64_t v2 = type metadata accessor for URL(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56LL))(v1, 1LL, 1LL, v2);
  v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_pageProviderStarted] = 0;
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_currentViewController], 0LL);
  *(void *)&v0[OBJC_IVAR____TtC7TVMusic27TVMusicUIMainViewController_isMusicVideoBlockedObserver] = 0LL;

  _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  0xD000000000000025LL,  0x8000000100223C30LL,  "TVMusic/MainView.swift",  22LL,  2LL,  84LL,  0);
  __break(1u);
}

uint64_t sub_1001946E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_1002B7220 != -1) {
    swift_once(&qword_1002B7220, sub_1001913E0);
  }
  uint64_t v4 = (void *)qword_1002C5EE8;
  uint64_t v5 = type metadata accessor for ModalPresenter(0LL);
  uint64_t v6 = sub_1000DF308(&qword_1002BD090, type metadata accessor for ModalPresenter, (uint64_t)&unk_1001EE75C);
  uint64_t v7 = ObservedObject.init(wrappedValue:)(v4, v5, v6);
  uint64_t v20 = v8;
  uint64_t v21 = v7;
  char v24 = 0;
  State.init(wrappedValue:)(&v25, &v24, &type metadata for Bool);
  char v9 = v25;
  uint64_t v10 = v26;
  char v24 = 1;
  State.init(wrappedValue:)(&v25, &v24, &type metadata for Bool);
  char v11 = v25;
  uint64_t v12 = v26;
  char v24 = 0;
  State.init(wrappedValue:)(&v25, &v24, &type metadata for Bool);
  char v13 = v25;
  uint64_t v14 = v26;
  char v24 = 0;
  State.init(wrappedValue:)(&v25, &v24, &type metadata for Bool);
  LOBYTE(v5) = v25;
  uint64_t v15 = v26;
  uint64_t v16 = type metadata accessor for Tabs(0LL);
  uint64_t v17 = sub_1000DF308(&qword_1002BD098, type metadata accessor for Tabs, (uint64_t)&unk_1001EBFE8);
  uint64_t result = ObservedObject.init(wrappedValue:)(a1, v16, v17);
  *(void *)a3 = v21;
  *(void *)(a3 + 8) = v20;
  *(_BYTE *)(a3 + swift_weakDestroy(v0 + 16) = v9;
  *(void *)(a3 + 24) = v10;
  *(_BYTE *)(a3 + 3sub_1000E053C(v0 + 2) = v11;
  *(void *)(a3 + 40) = v12;
  *(void *)(a3 + 48) = result;
  *(void *)(a3 + 56) = v19;
  *(_BYTE *)(a3 + 64) = v13;
  *(void *)(a3 + 7sub_1000E053C(v0 + 2) = v14;
  *(void *)(a3 + 80) = a2;
  *(_BYTE *)(a3 + 88) = v5;
  *(void *)(a3 + 96) = v15;
  return result;
}

double sub_100194884(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageStates);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageStates, v20, 33LL, 0LL);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v19[0] = *v3;
  *uint64_t v3 = 0x8000000000000000LL;
  sub_100137F4C(1, a1, isUniquelyReferenced_nonNull_native);
  uint64_t v5 = *v3;
  *uint64_t v3 = v19[0];
  swift_bridgeObjectRelease(v5);
  swift_endAccess(v20);
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageLoadHandlers);
  swift_beginAccess(v1 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageLoadHandlers, v20, 0LL, 0LL);
  uint64_t v8 = *v6;
  if (*(void *)(*v6 + 16))
  {
    swift_bridgeObjectRetain(*v6);
    uint64_t v9 = sub_10013CF3C(a1);
    if ((v10 & 1) != 0)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRetain(v11);
      swift_bridgeObjectRelease(v8);
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        char v13 = (void *)(v11 + 40);
        do
        {
          uint64_t v15 = (void (*)(uint64_t))*(v13 - 1);
          uint64_t v14 = *v13;
          uint64_t v16 = swift_retain(*v13);
          v15(v16);
          swift_release(v14);
          v13 += 2;
          --v12;
        }

        while (v12);
      }

      swift_bridgeObjectRelease(v11);
      swift_beginAccess(v6, v19, 33LL, 0LL);
      uint64_t v17 = sub_10010C444(a1);
      swift_endAccess(v19);
      uint64_t v18 = v17;
    }

    else
    {
      uint64_t v18 = v8;
    }

    *(void *)&double result = swift_bridgeObjectRelease(v18).n128_u64[0];
  }

  return result;
}

void sub_1001949F4(uint64_t a1, void *a2, uint64_t a3, void (**a4)(void, __n128))
{
  uint64_t v8 = swift_allocObject(&unk_1002770D8, 24LL, 7LL);
  *(void *)(v8 + swift_weakDestroy(v0 + 16) = a4;
  _Block_copy(a4);
  swift_bridgeObjectRetain(a2);
  v38._uint64_t countAndFlagsBits = a1;
  v38._object = a2;
  unint64_t v9 = sub_100133DDC(v38);
  if (v9 == 7)
  {
    swift_release(v8);
    return;
  }

  uint64_t v10 = v9;
  uint64_t v11 = (uint64_t *)(a3 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageStates);
  swift_beginAccess(a3 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageStates, v37, 0LL, 0LL);
  uint64_t v12 = *v11;
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain(v12);
    uint64_t v13 = sub_10013CF3C(v10);
    if ((v14 & 1) != 0)
    {
      char v15 = *(_BYTE *)(*(void *)(v12 + 56) + v13);
      __n128 v16 = swift_bridgeObjectRelease(v12);
      if ((v15 & 1) != 0)
      {
        a4[2](a4, v16);
LABEL_20:
        swift_release(v8);
        return;
      }
    }

    else
    {
      swift_bridgeObjectRelease(v12);
    }
  }

  uint64_t v17 = swift_allocObject(&unk_100277100, 32LL, 7LL);
  *(void *)(v17 + swift_weakDestroy(v0 + 16) = sub_100150910;
  *(void *)(v17 + 24) = v8;
  uint64_t v18 = (char **)(a3 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageLoadHandlers);
  swift_beginAccess(a3 + OBJC_IVAR____TtC7TVMusic17PageStateNotifier_pageLoadHandlers, v36, 33LL, 0LL);
  swift_retain(v8);
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v18);
  uint64_t v20 = *v18;
  uint64_t v35 = *v18;
  *uint64_t v18 = (char *)0x8000000000000000LL;
  unint64_t v22 = sub_10013CF3C(v10);
  uint64_t v23 = *((void *)v20 + 2);
  BOOL v24 = (v21 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
LABEL_22:
    uint64_t v20 = sub_10015B1E4(0LL, *((void *)v20 + 2) + 1LL, 1, v20);
    a4[v22] = (void (*)(void, __n128))v20;
LABEL_17:
    unint64_t v33 = *((void *)v20 + 2);
    unint64_t v32 = *((void *)v20 + 3);
    if (v33 >= v32 >> 1)
    {
      uint64_t v20 = sub_10015B1E4((char *)(v32 > 1), v33 + 1, 1, v20);
      a4[v22] = (void (*)(void, __n128))v20;
    }

    *((void *)v20 + sub_1000E053C(v0 + 2) = v33 + 1;
    uint64_t v34 = &v20[16 * v33];
    *((void *)v34 + 4) = sub_100194D14;
    *((void *)v34 + 5) = v17;
    swift_endAccess(v36);
    goto LABEL_20;
  }

  char v26 = v21;
  if (*((void *)v20 + 3) >= v25)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100140944();
      uint64_t v20 = v35;
    }

uint64_t sub_100194CF0()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_100194D14()
{
  return sub_100113924(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100194D28()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_100194D4C()
{
}

uint64_t sub_100194D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002B7890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40LL))(a2, a1, v4);
  return a2;
}

uint64_t sub_100194D9C()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease(*(void *)(v0 + 16));

  swift_release(*(void *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100194E20(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for URL(0LL) - 8) + 80LL);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  uint64_t v10 = (void *)swift_task_alloc(dword_1002BD054);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000E0B64;
  return sub_10018AFA8(a1, v5, v6, v7, v8, v9);
}

void sub_100194EB8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100194EC0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100194EE4(uint64_t a1)
{
  return sub_10016E85C(a1, *(uint64_t (**)(void))(v1 + 16));
}

id sub_100194EF0()
{
  return [*(id *)(v0 + 16) setNeedsFocusUpdate];
}

uint64_t sub_100194F00()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

double sub_100194F3C(char *a1)
{
  return sub_10018A2B8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100194F44()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_100194F70(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BD0DC);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E01FC;
  return sub_10018A850(a1, v4, v5, v7, v6);
}

void sub_100194FE8(void *a1)
{
}

uint64_t sub_100194FF0()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

uint64_t sub_100195008()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_10019502C(char a1)
{
}

uint64_t sub_100195034(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80LL) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }

  return result;
}

uint64_t sub_10019505C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

double sub_100195080(uint64_t *a1)
{
  return sub_100131800(a1, v1);
}

unint64_t sub_10019508C()
{
  unint64_t result = qword_1002BD260;
  if (!qword_1002BD260)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE458, &type metadata for TVMusicShowSearchResults);
    atomic_store(result, (unint64_t *)&qword_1002BD260);
  }

  return result;
}

uint64_t destroy for MainView(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 96));
}

uint64_t initializeWithCopy for MainView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 7sub_1000E053C(v0 + 2) = v8;
  *(void *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v10;
  id v11 = v3;
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  return a1;
}

uint64_t assignWithCopy for MainView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v7);
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v9);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v12);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a1 + 7sub_1000E053C(v0 + 2) = v14;
  swift_retain(v14);
  swift_release(v13);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v16 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = v15;
  swift_retain(v15);
  swift_release(v16);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v18;
  swift_retain(v18);
  swift_release(v17);
  return a1;
}

__n128 initializeWithTake for MainView(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[2];
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = a2[1];
  *(_OWORD *)(a1 + 3sub_1000E053C(v0 + 2) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  __int128 v5 = a2[4];
  __int128 v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for MainView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  __int128 v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release(v6);
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release(v7);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_release(v9);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_release(*(void *)(a1 + 72));
  uint64_t v10 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 7sub_1000E053C(v0 + 2) = *(_OWORD *)(a2 + 72);
  swift_release(v10);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release(v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MainView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 7sub_1000E053C(v0 + 2) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 104) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for MainView()
{
  return &type metadata for MainView;
}

uint64_t sub_100195464(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E46C, 1LL);
}

uint64_t sub_100195478@<X0>(uint64_t a1@<X8>)
{
  return sub_10018F968(v1 + 16, a1);
}

void *sub_100195480(void *a1)
{
  unint64_t v2 = (void *)a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[9];
  uint64_t v7 = a1[10];
  swift_retain(a1[12]);
  id v8 = v2;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_100195500()
{
  unint64_t v0 = sub_100105304();
  return EnvironmentValues.subscript.getter(&_s24PresentationAuthorityKeyVN, &_s24PresentationAuthorityKeyVN, v0);
}

double sub_100195544(uint64_t a1)
{
  return sub_10019012C(a1, v1 + 16);
}

unint64_t sub_10019554C()
{
  unint64_t result = qword_1002BD330;
  if (!qword_1002BD330)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD2B8);
    sub_1001955D0();
    sub_1000E0374( (unint64_t *)&unk_1002BD378,  &qword_1002BD328,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD330);
  }

  return result;
}

unint64_t sub_1001955D0()
{
  unint64_t result = qword_1002BD338;
  if (!qword_1002BD338)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD2B0);
    sub_100195654();
    sub_1000E0374( &qword_1002BD368,  &qword_1002BD370,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD338);
  }

  return result;
}

unint64_t sub_100195654()
{
  unint64_t result = qword_1002BD340;
  if (!qword_1002BD340)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD2A8);
    v2[0] = sub_1000DEA98(&qword_1002BD308);
    v2[1] = type metadata accessor for Tabs(255LL);
    void v2[2] = &type metadata for DestinationPageProvider;
    v2[3] = sub_1000E0374((unint64_t *)&unk_1002BD310, &qword_1002BD308, (uint64_t)&unk_1001EDBC8);
    void v2[4] = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
    v2[5] = sub_100105348();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.musicPresentationSource<A, B>(using:)>>,  1LL);
    sub_1000E0374( &qword_1002B8D68,  &qword_1002BD360,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD340);
  }

  return result;
}

uint64_t sub_100195774()
{
  return sub_1001907FC(v0 + 16);
}

uint64_t sub_100195780@<X0>(void *a1@<X8>)
{
  return sub_100190864(v1 + 16, a1);
}

unint64_t sub_100195788()
{
  unint64_t result = qword_1002BD390;
  if (!qword_1002BD390)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD388);
    sub_1000E0374(&qword_1002BD398, &qword_1002BD3A0, (uint64_t)&unk_1001EDB78);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD390);
  }

  return result;
}

uint64_t sub_100195808()
{
  return sub_1001908E0(v0 + 16);
}

unint64_t sub_100195810()
{
  unint64_t result = qword_1002BD3A8;
  if (!qword_1002BD3A8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BB008);
    sub_100185CC8( &qword_1002BD3B0,  (unint64_t *)&qword_1002BD110,  &OBJC_CLASS___UIViewController_ptr,  (uint64_t)&protocol conformance descriptor for NSObject);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD3A8);
  }

  return result;
}

unint64_t sub_100195898(uint64_t a1)
{
  return sub_100190990(a1, v1 + 16);
}

void sub_1001958A4(uint64_t a1)
{
}

void sub_1001958B0(uint64_t a1)
{
}

uint64_t sub_1001958BC(uint64_t a1)
{
  return sub_100191038(a1, v1 + 16);
}

void sub_1001958D0(uint64_t a1, _BYTE *a2)
{
}

uint64_t sub_1001958D8()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1001958FC()
{
  uint64_t v1 = type metadata accessor for URL(0LL);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 136) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease(*(void *)(v0 + 16));

  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 72));
  swift_release(*(void *)(v0 + 88));
  swift_release(*(void *)(v0 + 104));
  swift_release(*(void *)(v0 + 112));
  swift_release(*(void *)(v0 + 128));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001959A8(uint64_t a1)
{
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(type metadata accessor for URL(0LL) - 8) + 80LL);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + 32;
  uint64_t v8 = v1 + ((v4 + 136) & ~v4);
  uint64_t v9 = (void *)swift_task_alloc(dword_1002BD434);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000E0B64;
  return sub_100190484(a1, v5, v6, v7, v8);
}

uint64_t sub_100195A3C()
{
  return sub_10018FC7C(*(void *)(v0 + 16));
}

unint64_t sub_100195A44()
{
  unint64_t result = qword_1002BD468;
  if (!qword_1002BD468)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD458);
    sub_100195AA8();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD468);
  }

  return result;
}

unint64_t sub_100195AA8()
{
  unint64_t result = qword_1002BD470;
  if (!qword_1002BD470)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD478);
    sub_100195B2C();
    sub_1000E0374( &qword_1002BD530,  &qword_1002BD538,  (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD470);
  }

  return result;
}

unint64_t sub_100195B2C()
{
  unint64_t result = qword_1002BD480;
  if (!qword_1002BD480)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD488);
    v2[0] = sub_1000DEA98(&qword_1002BD490);
    v2[1] = sub_1000DEA98(&qword_1002BD498);
    void v2[2] = sub_100195BFC();
    v2[3] = sub_100195EEC();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.tabItem<A>(_:)>>, 1LL);
    sub_1000E0374( &qword_1002BD520,  &qword_1002BD528,  (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD480);
  }

  return result;
}

unint64_t sub_100195BFC()
{
  unint64_t result = qword_1002BD4A0;
  if (!qword_1002BD4A0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD490);
    sub_1001055FC();
    sub_100195C68();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD4A0);
  }

  return result;
}

unint64_t sub_100195C68()
{
  unint64_t result = qword_1002BD4C8;
  if (!qword_1002BD4C8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD4D0);
    sub_100195D1C();
    v2[0] = sub_1000DEA98(&qword_1002BD500);
    v2[1] = sub_100195E3C(&qword_1002BD508, &qword_1002BD500, (void (*)(void))sub_100195EA8);
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.tabBarContentFocusBehavior(_:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD4C8);
  }

  return result;
}

unint64_t sub_100195D1C()
{
  unint64_t result = qword_1002BD4D8;
  if (!qword_1002BD4D8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD4E0);
    sub_100195E3C(&qword_1002BD4E8, &qword_1002BD4F0, (void (*)(void))sub_100195DF8);
    v2[0] = type metadata accessor for Tabs(255LL);
    v2[1] = &type metadata for DestinationPageProvider;
    void v2[2] = sub_1000DF308(&qword_1002B8CF8, type metadata accessor for Tabs, (uint64_t)&unk_1001EC020);
    v2[3] = sub_100105348();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of MusicPageProvider.page(for:stackAuthority:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD4D8);
  }

  return result;
}

unint64_t sub_100195DF8()
{
  unint64_t result = qword_1002BD4F8;
  if (!qword_1002BD4F8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEAD4, &type metadata for CloudLibraryTabView);
    atomic_store(result, (unint64_t *)&qword_1002BD4F8);
  }

  return result;
}

uint64_t sub_100195E3C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v6 = sub_1000DEA98(a2);
    a3();
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
    atomic_store(result, a1);
  }

  return result;
}

unint64_t sub_100195EA8()
{
  unint64_t result = qword_1002BD510;
  if (!qword_1002BD510)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEA84, &type metadata for NowPlayingTabView);
    atomic_store(result, (unint64_t *)&qword_1002BD510);
  }

  return result;
}

unint64_t sub_100195EEC()
{
  unint64_t result = qword_1002BD518;
  if (!qword_1002BD518)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD498);
    v2[0] = &type metadata for AnyView;
    v2[1] = &protocol witness table for AnyView;
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD518);
  }

  return result;
}

uint64_t sub_100195F78(uint64_t a1)
{
  return sub_10018FFBC(a1, v1 + 16);
}

uint64_t sub_100195F80(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_100195FB4 + 4 * byte_1001EE42B[*a1]))();
}

void sub_100195FB4(void *a1@<X8>)
{
  *a1 = 0x6573776F7262LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100195FCC(void *a1@<X8>)
{
  *a1 = 0x6F69646172LL;
  a1[1] = 0xE500000000000000LL;
}

void sub_100195FE4(void *a1@<X8>)
{
  *a1 = 0x736F65646976LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100195FFC(void *a1@<X8>)
{
  *a1 = 0x7972617262696CLL;
  a1[1] = 0xE700000000000000LL;
}

void sub_100196018(void *a1@<X8>)
{
  *a1 = 0x686372616573LL;
  a1[1] = 0xE600000000000000LL;
}

void sub_100196030(void *a1@<X8>)
{
  *a1 = 0x6979616C50776F6ELL;
  a1[1] = 0xEA0000000000676ELL;
}

uint64_t sub_100196054()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 72));
  swift_release(*(void *)(v0 + 88));
  swift_release(*(void *)(v0 + 96));
  swift_release(*(void *)(v0 + 112));
  return swift_deallocObject(v0, 120LL, 7LL);
}

uint64_t sub_1001960A8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10018FDCC(a1, a2);
}

uint64_t sub_1001960B0()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

void sub_1001960C0(uint64_t a1@<X8>)
{
}

ValueMetadata *type metadata accessor for NowPlayingTabView()
{
  return &type metadata for NowPlayingTabView;
}

ValueMetadata *type metadata accessor for CloudLibraryTabView()
{
  return &type metadata for CloudLibraryTabView;
}

unint64_t sub_1001960EC()
{
  unint64_t result = qword_1002BD5A0;
  if (!qword_1002BD5A0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD3F8);
    v2[0] = sub_1000DEA98(&qword_1002BD2F0);
    v2[1] = &type metadata for Bool;
    void v2[2] = sub_1000E0374( &qword_1002BD3F0,  &qword_1002BD2F0,  (uint64_t)&protocol conformance descriptor for SubscriptionView<A, B>);
    v2[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
    sub_1000E0374( &qword_1002BD5A8,  (uint64_t *)&unk_1002BD400,  (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD5A0);
  }

  return result;
}

unint64_t sub_1001961D4()
{
  unint64_t result = qword_1002BD5B0;
  if (!qword_1002BD5B0)
  {
    unint64_t result = swift_getWitnessTable("ݎ\b", &type metadata for CloudLibraryTabView);
    atomic_store(result, (unint64_t *)&qword_1002BD5B0);
  }

  return result;
}

unint64_t sub_100196218()
{
  unint64_t result = qword_1002BD5B8;
  if (!qword_1002BD5B8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEA0C, &type metadata for NowPlayingTabView);
    atomic_store(result, (unint64_t *)&qword_1002BD5B8);
  }

  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for NowPlayingInfoButton(uint64_t a1, __int128 *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  __int128 v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v3;
  id v5 = (id)v4;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for NowPlayingInfoButton(uint64_t a1, uint64_t a2)
{
  __int128 v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v7;
  swift_retain(v7);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for NowPlayingInfoButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = v4;
  swift_release(v5);
  return a1;
}

ValueMetadata *type metadata accessor for NowPlayingInfoButton()
{
  return &type metadata for NowPlayingInfoButton;
}

uint64_t sub_100196378(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E4B0, 1LL);
}

uint64_t sub_100196388(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002BD5C0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_retain(a3);
  uint64_t v11 = sub_1000DFE10(&qword_1002BD5C8);
  unint64_t v12 = sub_100196798();
  Button.init(action:label:)(a2, a3, sub_100196554, 0LL, v11, v12);
  double v13 = MusicCardButtonStyle.Shadow.init(opacity:radius:verticalOffset:)(0.3, 35.0, 50.0);
  __int16 v20 = 1;
  MusicCardButtonStyle.init(width:height:translation:cornerRadius:focusedSizeIncrease:focusedShadow:unfocusedShadow:maskOnSelect:backgroundEffect:)( v23,  0LL,  1LL,  0LL,  1LL,  *(void *)&v13,  v14,  v15,  0LL,  5.0,  5.0,  12.0,  0.1,  0LL,  0LL,  0LL,  v20,  a1);
  v21[8] = v23[8];
  v21[9] = v23[9];
  uint64_t v22 = v24;
  v21[4] = v23[4];
  void v21[5] = v23[5];
  v21[6] = v23[6];
  v21[7] = v23[7];
  v21[0] = v23[0];
  v21[1] = v23[1];
  void v21[2] = v23[2];
  v21[3] = v23[3];
  unint64_t v16 = sub_100196804();
  unint64_t v17 = sub_100106E78();
  id v18 = a1;
  View.buttonStyle<A>(_:)(v21, v6, &type metadata for MusicCardButtonStyle, v16, v17);
  sub_100106EBC((uint64_t)v23);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

double sub_100196554@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = LocalizedStringKey.init(stringLiteral:)(0x6979616C50776F4ELL, 0xEE006F666E49676ELL);
  uint64_t v3 = Text.init(_:tableName:bundle:comment:)(v2);
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8 & 1;
  uint64_t v10 = static Font.body.getter(v3, v4);
  uint64_t v11 = Text.font(_:)(v10, v3, v5, v9, v7);
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release(v10);
  sub_1000EC044(v3, v5, v9);
  __n128 v18 = swift_bridgeObjectRelease(v7);
  uint64_t v19 = Text.bold()(v11, v13, v15 & 1, v17, v18);
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  sub_1000EC044(v11, v13, v15 & 1);
  __n128 v26 = swift_bridgeObjectRelease(v17);
  uint64_t v27 = static Edge.Set.leading.getter(v26);
  unsigned int v28 = v27;
  unsigned int v30 = static Edge.Set.trailing.getter(v27, v29);
  uint64_t v31 = Edge.Set.init(rawValue:)(0LL);
  int v32 = Edge.Set.init(rawValue:)(v31);
  int v33 = Edge.Set.init(rawValue:)(v31);
  double v34 = EdgeInsets.init(_all:)(30.0);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = static Alignment.center.getter(v41);
  _FrameLayout.init(width:height:alignment:)(&v49, 0LL, 1LL, 0x4050800000000000LL, 0LL, v42, v43);
  uint64_t v44 = v49;
  char v45 = v50;
  uint64_t v46 = v51;
  char v47 = v52;
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + swift_weakDestroy(v0 + 16) = v23 & 1;
  *(void *)(a1 + 24) = v25;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = v31;
  *(double *)(a1 + 40) = v34;
  *(void *)(a1 + 48) = v36;
  *(void *)(a1 + 56) = v38;
  *(void *)(a1 + 64) = v40;
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = 0;
  *(void *)(a1 + 80) = v44;
  *(_BYTE *)(a1 + 88) = v45;
  *(void *)(a1 + 96) = v46;
  *(_BYTE *)(a1 + 104) = v47;
  double result = *(double *)&v53;
  *(_OWORD *)(a1 + 11sub_1000E053C(v0 + 2) = v53;
  return result;
}

uint64_t sub_10019678C()
{
  return sub_100196388(*(void **)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
}

unint64_t sub_100196798()
{
  unint64_t result = qword_1002BD5D0;
  if (!qword_1002BD5D0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD5C8);
    sub_10011B39C();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD5D0);
  }

  return result;
}

unint64_t sub_100196804()
{
  unint64_t result = qword_1002BD5D8;
  if (!qword_1002BD5D8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BD5C0);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for Button<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BD5D8);
  }

  return result;
}

uint64_t sub_100196850()
{
  v1[0] = sub_1000DEA98(&qword_1002BD5C0);
  v1[1] = &type metadata for MusicCardButtonStyle;
  void v1[2] = sub_100196804();
  v1[3] = sub_100106E78();
  return swift_getOpaqueTypeConformance2( v1,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
}

BOOL sub_1001968B4(void *a1)
{
  id v2 = [a1 identifiers];
  id v3 = [v2 universalStore];

  if (!v3) {
    return 0LL;
  }
  if (![a1 isLibraryAddEligible])
  {
    swift_unknownObjectRelease(v3);
    return 0LL;
  }

  if ([v3 adamID])
  {
    swift_unknownObjectRelease(v3);
    return 1LL;
  }

  id v5 = [v3 subscriptionAdamID];
  swift_unknownObjectRelease(v3);
  return v5 != 0;
}

double sub_10019697C@<D0>( double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100196A2C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  &qword_1002B7F40,  &qword_1002B7FC0).n128_u64[0];
  return result;
}

double sub_1001969D4@<D0>( double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100196A2C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  (uint64_t *)&unk_1002BE1A0,  &qword_1002BAB60).n128_u64[0];
  return result;
}

__n128 sub_100196A2C@<Q0>( double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v18 = v17;
  uint64_t v19 = a9;
  uint64_t v20 = a17;
  uint64_t v22 = a14;
  uint64_t v21 = a15;
  double v23 = a12;
  double v24 = a10;
  uint64_t v25 = a2 & 1;
  double v26 = a1;
  if ((_DWORD)v25) {
    double v26 = -INFINITY;
  }
  uint64_t v27 = a4 & 1;
  double v28 = a3;
  if ((_DWORD)v27) {
    double v28 = v26;
  }
  uint64_t v29 = a6 & 1;
  uint64_t v30 = a8 & 1;
  double v31 = a5;
  if ((a6 & 1) != 0) {
    double v31 = v28;
  }
  if (v26 > v28 || v28 > v31) {
    goto LABEL_22;
  }
  double v33 = a7;
  if ((a8 & 1) != 0) {
    double v33 = -INFINITY;
  }
  double v34 = a10;
  if ((a11 & 1) != 0) {
    double v34 = v33;
  }
  double v35 = a12;
  if ((a13 & 1) != 0) {
    double v35 = v34;
  }
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    double v49 = a5;
    double v50 = a7;
    double v47 = a3;
    double v48 = a1;
    unsigned int v46 = v25;
    unsigned int v45 = v27;
    uint64_t v38 = static os_log_type_t.fault.getter();
    uint64_t v39 = (void *)static Log.runtimeIssuesLog.getter();
    uint64_t v40 = v38;
    uint64_t v19 = a9;
    os_log(_:dso:log:_:_:)( v40,  &_mh_execute_header,  v39,  "Contradictory frame constraints specified.",  42LL,  2LL,  &_swiftEmptyArrayStorage);

    uint64_t v27 = v45;
    uint64_t v22 = a14;
    uint64_t v21 = a15;
    uint64_t v25 = v46;
    double v24 = a10;
    double v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    uint64_t v20 = a17;
  }

  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)( v51,  *(void *)&a1,  v25,  *(void *)&a3,  v27,  *(void *)&a5,  v29,  *(void *)&a7,  v30,  *(void *)&v24,  a11 & 1,  *(void *)&v23,  a13 & 1,  v22,  v21);
  sub_1000E04D4(v18, v19, a16);
  uint64_t v41 = v19 + *(int *)(sub_1000DFE10(v20) + 36);
  __int128 v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  __int128 v43 = v51[1];
  *(_OWORD *)uint64_t v41 = v51[0];
  *(_OWORD *)(v41 + swift_weakDestroy(v0 + 16) = v43;
  __n128 result = (__n128)v51[3];
  *(_OWORD *)(v41 + 3sub_1000E053C(v0 + 2) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_100196BF8@<D0>( double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100196A2C( a1,  a2,  a3,  a4,  a5,  a6,  a7,  a8,  a9,  a10,  a11,  a12,  a13,  a14,  a15,  (uint64_t *)&unk_1002BE1B0,  &qword_1002BAB40).n128_u64[0];
  return result;
}

__n128 sub_100196C50@<Q0>( double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16 = v15;
  uint64_t v18 = a15;
  double v19 = a12;
  double v20 = a10;
  uint64_t v21 = a2 & 1;
  double v22 = a1;
  if ((_DWORD)v21) {
    double v22 = -INFINITY;
  }
  uint64_t v23 = a4 & 1;
  double v24 = a3;
  if ((a4 & 1) != 0) {
    double v24 = v22;
  }
  uint64_t v25 = a6 & 1;
  uint64_t v26 = a8 & 1;
  double v27 = a5;
  if ((a6 & 1) != 0) {
    double v27 = v24;
  }
  if (v22 > v24 || v24 > v27) {
    goto LABEL_22;
  }
  double v29 = a7;
  if ((a8 & 1) != 0) {
    double v29 = -INFINITY;
  }
  double v30 = a10;
  if ((a11 & 1) != 0) {
    double v30 = v29;
  }
  double v31 = a12;
  if ((a13 & 1) != 0) {
    double v31 = v30;
  }
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    double v43 = a5;
    double v44 = a7;
    double v42 = a3;
    double v41 = a1;
    unsigned int v40 = v21;
    uint64_t v33 = static os_log_type_t.fault.getter();
    double v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)( v33,  &_mh_execute_header,  v34,  "Contradictory frame constraints specified.",  42LL,  2LL,  &_swiftEmptyArrayStorage);

    uint64_t v18 = a15;
    uint64_t v21 = v40;
    a1 = v41;
    double v20 = a10;
    a3 = v42;
    double v19 = a12;
    a5 = v43;
    a7 = v44;
  }

  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)( v45,  *(void *)&a1,  v21,  *(void *)&a3,  v23,  *(void *)&a5,  v25,  *(void *)&a7,  v26,  *(void *)&v20,  a11 & 1,  *(void *)&v19,  a13 & 1,  a14,  v18);
  uint64_t v35 = sub_1000DFE10(qword_1002BE1C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16LL))(a9, v16, v35);
  uint64_t v36 = a9 + *(int *)(sub_1000DFE10(&qword_1002BACC8) + 36);
  __int128 v37 = v45[5];
  *(_OWORD *)(v36 + 64) = v45[4];
  *(_OWORD *)(v36 + 80) = v37;
  *(_OWORD *)(v36 + 96) = v45[6];
  __int128 v38 = v45[1];
  *(_OWORD *)uint64_t v36 = v45[0];
  *(_OWORD *)(v36 + swift_weakDestroy(v0 + 16) = v38;
  __n128 result = (__n128)v45[3];
  *(_OWORD *)(v36 + 3sub_1000E053C(v0 + 2) = v45[2];
  *(__n128 *)(v36 + 48) = result;
  return result;
}

id sub_100196E1C@<X0>( double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18)
{
  double v18 = a1;
  uint64_t v20 = a15;
  double v21 = a12;
  double v22 = a10;
  uint64_t v23 = a2 & 1;
  double v24 = a1;
  if ((_DWORD)v23) {
    double v24 = -INFINITY;
  }
  uint64_t v25 = a4 & 1;
  double v26 = a3;
  if ((_DWORD)v25) {
    double v26 = v24;
  }
  uint64_t v27 = a6 & 1;
  uint64_t v28 = a8 & 1;
  double v29 = a5;
  if ((a6 & 1) != 0) {
    double v29 = v26;
  }
  if (v24 > v26 || v26 > v29) {
    goto LABEL_22;
  }
  double v31 = a7;
  if ((a8 & 1) != 0) {
    double v31 = -INFINITY;
  }
  double v32 = a10;
  if ((a11 & 1) != 0) {
    double v32 = v31;
  }
  double v33 = a12;
  if ((a13 & 1) != 0) {
    double v33 = v32;
  }
  if (v31 > v32 || v32 > v33)
  {
LABEL_22:
    double v46 = a7;
    double v47 = a5;
    double v44 = a3;
    unsigned int v42 = v25;
    unsigned int v43 = v23;
    uint64_t v35 = static os_log_type_t.fault.getter();
    uint64_t v36 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)( v35,  &_mh_execute_header,  v36,  "Contradictory frame constraints specified.",  42LL,  2LL,  &_swiftEmptyArrayStorage);

    uint64_t v25 = v42;
    uint64_t v23 = v43;
    uint64_t v20 = a15;
    double v21 = a12;
    double v22 = a10;
    a3 = v44;
    double v18 = a1;
    a7 = v46;
    a5 = v47;
  }

  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)( v48,  *(void *)&v18,  v23,  *(void *)&a3,  v25,  *(void *)&a5,  v27,  *(void *)&a7,  v28,  *(void *)&v22,  a11 & 1,  *(void *)&v21,  a13 & 1,  a14,  v20);
  __int128 v37 = v48[2];
  *(_OWORD *)(a9 + 7sub_1000E053C(v0 + 2) = v48[3];
  __int128 v38 = v48[5];
  *(_OWORD *)(a9 + 88) = v48[4];
  *(_OWORD *)(a9 + 104) = v38;
  *(_OWORD *)(a9 + 120) = v48[6];
  __int128 v39 = v48[1];
  *(_OWORD *)(a9 + 24) = v48[0];
  *(_OWORD *)(a9 + 40) = v39;
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = a17;
  *(void *)(a9 + swift_weakDestroy(v0 + 16) = a18;
  *(_OWORD *)(a9 + 56) = v37;
  swift_retain(a18);
  id v40 = a16;
  return a17;
}

id sub_100196FE4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 lastPlayerResponse];
  *a2 = result;
  return result;
}

uint64_t sub_10019701C()
{
  return sub_100197474((uint64_t)&unk_1001EF8A0, (uint64_t)&unk_1001EF8C8);
}

void sub_100197030(void *a1)
{
  id v2 = [a1 identifiers];
  id v3 = [v2 universalStore];

  if (v3)
  {
    id v5 = [v3 adamID];
    swift_unknownObjectRelease(v3);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EF8E8);
    uint64_t v7 = swift_getKeyPath(&unk_1001EF910);
    char v11 = 1;
    swift_retain(v1);
    static Published.subscript.setter(&v11, v1, KeyPath, v7);
    [(id)objc_opt_self(TVMusicLibraryUtilities) addItemToLibraryWithAdamID:v5 completionHandler:0];
  }

  else
  {
    oslog = (os_log_s *)Logger.logObject.getter(v4);
    uint64_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, (os_log_type_t)v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc(2LL, -1LL);
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl( (void *)&_mh_execute_header,  oslog,  (os_log_type_t)v8,  "Adding to library with missing adamID",  v9,  2u);
      swift_slowDealloc(v9, -1LL, -1LL);
    }
  }

uint64_t sub_10019719C()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF8E8);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF910);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

void sub_10019720C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1001AD3F8(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

uint64_t sub_100197248()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF660);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF688);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1001972B8()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF810, (uint64_t)&unk_1001EF838);
}

uint64_t sub_1001972CC()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF858, (uint64_t)&unk_1001EF880);
}

uint64_t sub_1001972E0()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF6F0, (uint64_t)&unk_1001EF718);
}

uint64_t sub_1001972F4()
{
  return sub_100197474((uint64_t)&unk_1001EF780, (uint64_t)&unk_1001EF7A8);
}

uint64_t sub_100197308()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF738, (uint64_t)&unk_1001EF760);
}

void sub_10019731C()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF7C8);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF7F0);
  static Published.subscript.getter(&v7, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  if (v7 >= 4) {
    uint64_t v3 = 1LL;
  }
  else {
    uint64_t v3 = v7;
  }
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v4)
  {
    id v5 = [v4 playQueue];
    if (v5)
    {
      uint64_t v6 = v5;
      [v5 setQueueEndAction:v3];
    }

    else
    {
      __break(1u);
    }
  }

uint64_t sub_1001973D8()
{
  return sub_100197474((uint64_t)&unk_1001EF7C8, (uint64_t)&unk_1001EF7F0);
}

void sub_1001973EC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF7C8);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF7F0);
  uint64_t v6 = v2;
  swift_retain(v3);
  static Published.subscript.setter(&v6, v3, KeyPath, v5);
  sub_10019731C();
}

uint64_t sub_100197460()
{
  return sub_100197474((uint64_t)&unk_1001EF6A8, (uint64_t)&unk_1001EF6D0);
}

uint64_t sub_100197474(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_1001974DC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF8E8);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF910);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_100197558(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF8E8);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF910);
  char v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1001975C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001AC268(a1, (uint64_t)&unk_1001EF8A0, (uint64_t)&unk_1001EF8C8, a2);
}

uint64_t sub_1001975DC(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AC2E0(a1, a2, a3, a4, (uint64_t)&unk_1001EF8A0, (uint64_t)&unk_1001EF8C8);
}

double sub_1001975F0@<D0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF4C0);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF4E8);
  static Published.subscript.getter(v12, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  __int16 v5 = v13;
  double result = *(double *)v12;
  __int128 v7 = v12[1];
  __int128 v8 = v12[2];
  __int128 v9 = v12[3];
  __int128 v10 = v12[4];
  __int128 v11 = v12[5];
  *(_OWORD *)a1 = v12[0];
  *(_OWORD *)(a1 + swift_weakDestroy(v0 + 16) = v7;
  *(_OWORD *)(a1 + 3sub_1000E053C(v0 + 2) = v8;
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = v11;
  *(_WORD *)(a1 + 96) = v5;
  return result;
}

uint64_t sub_100197680()
{
  return sub_10019B1D0((uint64_t)&unk_1001EF508, (uint64_t)&unk_1001EF530);
}

uint64_t sub_100197694()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF1C0, (uint64_t)&unk_1001EF1E8);
}

uint64_t sub_1001976A8()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF178, (uint64_t)&unk_1001EF1A0);
}

void sub_1001976BC(char a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF178);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF1A0);
  BYTE2(v1sub_1000E053C(v0 + 2) = a1;
  swift_retain(v1);
  static Published.subscript.setter((char *)&v12 + 2, v1, KeyPath, v4);
  __int16 v5 = *(void **)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v5)
  {
    id v6 = [v5 playQueue];
    if (v6)
    {
      __int128 v7 = v6;
      uint64_t v8 = swift_getKeyPath(&unk_1001EF178);
      uint64_t v9 = swift_getKeyPath(&unk_1001EF1A0);
      static Published.subscript.getter((uint64_t *)((char *)&v12 + 1), v1, v8, v9);
      swift_release(v8);
      swift_release(v9);
      LODWORD(v8) = BYTE1(v12);
      if ((_DWORD)v8 != [v7 vocalAttenuationEnabled])
      {
        uint64_t v10 = swift_getKeyPath(&unk_1001EF178);
        uint64_t v11 = swift_getKeyPath(&unk_1001EF1A0);
        static Published.subscript.getter(&v12, v1, v10, v11);
        swift_release(v10);
        swift_release(v11);
        [v7 setVocalAttenuationEnabled:v12];
      }
    }
  }

float sub_100197810()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF130);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF158);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return *(float *)&v4;
}

float sub_100197880@<S0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF130);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF158);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  float result = *(float *)&v7;
  *a2 = v7;
  return result;
}

void sub_1001978FC(float a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF130);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF158);
  float v16 = a1;
  swift_retain(v1);
  static Published.subscript.setter(&v16, v1, KeyPath, v4);
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v5)
  {
    id v6 = [v5 playQueue];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = swift_getKeyPath(&unk_1001EF130);
      uint64_t v9 = swift_getKeyPath(&unk_1001EF158);
      static Published.subscript.getter((uint64_t *)((char *)&v15 + 4), v1, v8, v9);
      swift_release(v8);
      swift_release(v9);
      float v10 = *((float *)&v15 + 1);
      [v7 vocalAttenuationLevel];
      if (v10 != v11)
      {
        uint64_t v12 = swift_getKeyPath(&unk_1001EF130);
        uint64_t v13 = swift_getKeyPath(&unk_1001EF158);
        static Published.subscript.getter(&v15, v1, v12, v13);
        swift_release(v12);
        swift_release(v13);
        LODWORD(v14) = v15;
        [v7 setVocalAttenuationLevel:v14];
      }
    }
  }

uint64_t sub_100197A58(uint64_t a1)
{
  uint64_t v85 = a1;
  uint64_t v2 = sub_1000DFE10(&qword_1002BDA58);
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  __chkstk_darwin(v2, v3);
  __int128 v82 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002BDE80);
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v79 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = sub_1000DFE10(&qword_1002BDE88);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v8);
  uint64_t v76 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = sub_1000DFE10(&qword_1002BDE90);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75, v10);
  BOOL v73 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = sub_1000DFE10(&qword_1002BDE98);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v12);
  uint64_t v70 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v69 = sub_1000DFE10(&qword_1002BDEA0);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v14);
  uint64_t v67 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v66 = sub_1000DFE10(&qword_1002BDEA8);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v16);
  double v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v64 = sub_1000DFE10(&qword_1002BDEB0);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v19);
  double v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1000DFE10(&qword_1002BA170);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  double v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_1000DFE10(&qword_1002BDEB8);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  double v31 = (char *)&v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  Logger.init(subsystem:category:)( 0xD00000000000001CLL,  0x8000000100223AF0LL,  0xD000000000000018LL,  0x80000001001EEBF0LL);
  uint64_t v32 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__supportedControls;
  *(void *)&v86[0] = 0LL;
  Published.init(initialValue:)(v86, &type metadata for SupportedControls);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v32, v31, v27);
  uint64_t v33 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isLive;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  double v34 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v34(v33, v26, v22);
  uint64_t v35 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isStreamingRadio;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  v34(v35, v26, v22);
  uint64_t v36 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isPlaying;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  v34(v36, v26, v22);
  uint64_t v37 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__repeatType;
  *(void *)&v86[0] = 0LL;
  type metadata accessor for MPRepeatType(0LL);
  Published.init(initialValue:)(v86, v38);
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v37, v21, v64);
  uint64_t v39 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isShuffled;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  v34(v39, v26, v22);
  uint64_t v40 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__queueEndAction;
  *(void *)&v86[0] = 1LL;
  type metadata accessor for MPCQueueEndAction(0LL);
  Published.init(initialValue:)(v86, v41);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v40, v18, v66);
  uint64_t v42 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__route;
  *(void *)&v86[0] = 0LL;
  uint64_t v43 = sub_1000DFE10(&qword_1002BD720);
  double v44 = v67;
  Published.init(initialValue:)(v86, v43);
  (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v42, v44, v69);
  uint64_t v45 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__libraryState;
  LOBYTE(v86[0]) = 2;
  double v46 = v70;
  Published.init(initialValue:)(v86, &type metadata for NowPlayingPlayerObserver.LibraryState);
  (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v45, v46, v72);
  uint64_t v47 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingSong;
  *(void *)&v86[0] = 0LL;
  uint64_t v48 = sub_1000DFE10(&qword_1002BAA60);
  double v49 = v73;
  Published.init(initialValue:)(v86, v48);
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v47, v49, v75);
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingSongContainer) = 0LL;
  uint64_t v50 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingMetadata;
  v86[0] = xmmword_1001EEBA0;
  memset(&v86[1], 0, 80);
  __int16 v87 = 0;
  uint64_t v51 = sub_1000DFE10(&qword_1002BAD08);
  char v52 = v76;
  Published.init(initialValue:)(v86, v51);
  (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v50, v52, v78);
  uint64_t v53 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingActions;
  v86[0] = 0uLL;
  uint64_t v54 = sub_1000DFE10(&qword_1002BD758);
  uint64_t v55 = v79;
  Published.init(initialValue:)(v86, v54);
  (*(void (**)(uint64_t, char *, uint64_t))(v80 + 32))(v53, v55, v81);
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingActionsTask) = 0LL;
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playerResponseObserver) = 0LL;
  uint64_t v56 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__hasTimedLyrics;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  v34(v56, v26, v22);
  uint64_t v57 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__canEnableVocalAttenuation;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  v34(v57, v26, v22);
  uint64_t v58 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__vocalAttenuationEnabled;
  LOBYTE(v86[0]) = 0;
  Published.init(initialValue:)(v86, &type metadata for Bool);
  v34(v58, v26, v22);
  uint64_t v59 = v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__vocalAttenuationLevel;
  LODWORD(v86[0]) = 1112014848;
  __n128 v60 = v82;
  Published.init(initialValue:)(v86, &type metadata for Float);
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 32))(v59, v60, v84);
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationCanEnableObserver) = 0LL;
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationEnabledObserver) = 0LL;
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationLevelObserver) = 0LL;
  *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player) = v85;
  return v1;
}

double sub_10019820C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000DFE10(&qword_1002BDBD8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  __int128 v82 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v81 = sub_1000DFE10(&qword_1002BDBE0);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v6);
  uint64_t v80 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = sub_1000DFE10(&qword_1002BB7F0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000DFE10((uint64_t *)&unk_1002BB070);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000DFE10(&qword_1002BDBE8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v23)
  {
    id v78 = [v23 playQueue];
    if (v78)
    {
      uint64_t v76 = v3;
      uint64_t v77 = v2;
      uint64_t v75 = OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playerResponseObserver;
      uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playerResponseObserver);
      if (v24)
      {
        swift_retain(*(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playerResponseObserver));
        AnyCancellable.cancel()();
        swift_release(v24);
      }

      uint64_t KeyPath = swift_getKeyPath(&unk_1001EF568);
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(KeyPath, 5LL);
      swift_release(KeyPath);
      id v84 = [(id)objc_opt_self(NSOperationQueue) mainQueue];
      uint64_t v26 = type metadata accessor for NSOperationQueue.SchedulerOptions(0LL);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v11, 1LL, 1LL, v26);
      uint64_t v27 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BDBF0, &OBJC_CLASS___NSOperationQueue_ptr);
      uint64_t v28 = sub_1000E0374( (unint64_t *)&qword_1002BA678,  (uint64_t *)&unk_1002BB070,  (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
      unint64_t v29 = sub_1001AD03C();
      Publisher.receive<A>(on:options:)(&v84, v11, v12, v27, v28, v29);
      sub_1000E03B4((uint64_t)v11, &qword_1002BB7F0);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      uint64_t v30 = swift_allocObject(&unk_100277CD8, 24LL, 7LL);
      swift_weakInit(v30 + 16, v1);
      uint64_t v31 = sub_1000E0374( &qword_1002BDC08,  &qword_1002BDBE8,  (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
      uint64_t v32 = Publisher<>.sink(receiveValue:)(sub_1001AD0B8, v30, v17, v31);
      __n128 v33 = swift_release(v30);
      (*(void (**)(char *, uint64_t, __n128))(v18 + 8))(v22, v17, v33);
      uint64_t v34 = *(void *)(v1 + v75);
      *(void *)(v1 + v75) = v32;
      unint64_t v35 = swift_release(v34).n128_u64[0];
      uint64_t v36 = OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationCanEnableObserver;
      uint64_t v37 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationCanEnableObserver);
      if (v37)
      {
        swift_retain(*(void *)(v1
                               + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationCanEnableObserver));
        AnyCancellable.cancel()();
        unint64_t v35 = swift_release(v37).n128_u64[0];
      }

      uint64_t v74 = OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationEnabledObserver;
      uint64_t v38 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationEnabledObserver);
      if (v38)
      {
        swift_retain(*(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationEnabledObserver));
        AnyCancellable.cancel()();
        unint64_t v35 = swift_release(v38).n128_u64[0];
      }

      uint64_t v75 = OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationLevelObserver;
      uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationLevelObserver);
      if (v39)
      {
        swift_retain(*(void *)(v1 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationLevelObserver));
        AnyCancellable.cancel()();
        unint64_t v35 = swift_release(v39).n128_u64[0];
      }

      id v40 = v78;
      unsigned __int8 v41 = objc_msgSend(v78, "canEnableVocalAttenuation", *(double *)&v35);
      uint64_t v42 = swift_getKeyPath(&unk_1001EF1C0);
      uint64_t v43 = swift_getKeyPath(&unk_1001EF1E8);
      unsigned __int8 v83 = v41;
      swift_retain(v1);
      static Published.subscript.setter(&v83, v1, v42, v43);
      sub_1001976BC((char)[v40 vocalAttenuationEnabled]);
      [v40 vocalAttenuationLevel];
      sub_1001978FC(v44);
      uint64_t v45 = swift_getKeyPath(&unk_1001EF5B0);
      double v46 = v80;
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v45, 5LL);
      swift_release(v45);
      uint64_t v47 = swift_allocObject(&unk_100277CD8, 24LL, 7LL);
      swift_weakInit(v47 + 16, v1);
      uint64_t v48 = swift_allocObject(&unk_100277D00, 32LL, 7LL);
      *(void *)(v48 + swift_weakDestroy(v0 + 16) = v47;
      *(void *)(v48 + 24) = v40;
      uint64_t v49 = sub_1000E0374( &qword_1002BDC10,  &qword_1002BDBE0,  (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
      id v50 = v40;
      uint64_t v51 = v81;
      uint64_t v52 = Publisher<>.sink(receiveValue:)(sub_1001AD100, v48, v81, v49);
      __n128 v53 = swift_release(v48);
      uint64_t v54 = *(void (**)(char *, uint64_t, __n128))(v79 + 8);
      v54(v46, v51, v53);
      uint64_t v55 = *(void *)(v1 + v36);
      *(void *)(v1 + v36) = v52;
      swift_release(v55);
      uint64_t v56 = swift_getKeyPath(&unk_1001EF5F8);
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v56, 5LL);
      swift_release(v56);
      uint64_t v57 = swift_allocObject(&unk_100277CD8, 24LL, 7LL);
      swift_weakInit(v57 + 16, v1);
      uint64_t v58 = swift_allocObject(&unk_100277D28, 32LL, 7LL);
      *(void *)(v58 + swift_weakDestroy(v0 + 16) = v57;
      *(void *)(v58 + 24) = v50;
      id v59 = v50;
      uint64_t v60 = Publisher<>.sink(receiveValue:)(sub_1001AD15C, v58, v51, v49);
      __n128 v61 = swift_release(v58);
      v54(v46, v51, v61);
      uint64_t v62 = *(void *)(v1 + v74);
      *(void *)(v1 + v74) = v60;
      swift_release(v62);
      uint64_t v63 = swift_getKeyPath(&unk_1001EF638);
      uint64_t v64 = v82;
      _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v63, 5LL);
      swift_release(v63);
      uint64_t v65 = swift_allocObject(&unk_100277CD8, 24LL, 7LL);
      swift_weakInit(v65 + 16, v1);
      uint64_t v66 = swift_allocObject(&unk_100277D50, 32LL, 7LL);
      *(void *)(v66 + swift_weakDestroy(v0 + 16) = v65;
      *(void *)(v66 + 24) = v59;
      uint64_t v67 = sub_1000E0374( &qword_1002BDC18,  &qword_1002BDBD8,  (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
      id v68 = v59;
      uint64_t v69 = v77;
      uint64_t v70 = Publisher<>.sink(receiveValue:)(sub_1001AD1E4, v66, v77, v67);

      __n128 v71 = swift_release(v66);
      (*(void (**)(char *, uint64_t, __n128))(v76 + 8))(v64, v69, v71);
      uint64_t v72 = *(void *)(v1 + v75);
      *(void *)(v1 + v75) = v70;
      *(void *)&double result = swift_release(v72).n128_u64[0];
    }
  }

  return result;
}

void sub_1001988D0(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = a2 + 16;
    swift_beginAccess(a2 + 16, v7, 0LL, 0LL);
    uint64_t Strong = swift_weakLoadStrong(v3);
    if (Strong)
    {
      uint64_t v5 = Strong;
      id v6 = v2;
      sub_100198940(v6);
      swift_release(v5);
    }
  }

void sub_100198940(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v159 = v4;
  uint64_t v160 = v5;
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v156 = (char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v7, v9);
  uint64_t v158 = (char *)&v152 - v10;
  uint64_t v11 = sub_1000DFE10((uint64_t *)&unk_1002BB690);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v157 = (char *)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v152 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v161 = (char *)&v152 - v20;
  id v21 = [a1 tracklist];
  id v22 = [v21 playingItem];
  id v23 = [v21 shuffleCommand];
  swift_unknownObjectRelease(v23);
  BOOL v24 = v23 != 0LL;
  id v25 = [v21 repeatCommand];
  swift_unknownObjectRelease(v25);
  if (v25) {
    uint64_t v26 = v24 | 4;
  }
  else {
    uint64_t v26 = v24;
  }
  id v27 = [v21 actionAtQueueEndCommand];
  if (v27)
  {
    id v28 = v27;
    id v29 = [v27 supportedActions];
    uint64_t v30 = sub_1000E0418(0LL, (unint64_t *)&qword_1002BDC20, &OBJC_CLASS___NSNumber_ptr);
    uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);

    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    char v33 = sub_100131EF0((uint64_t)isa, v31);
    swift_unknownObjectRelease(v28);
    swift_bridgeObjectRelease(v31);

    if ((v33 & 1) != 0) {
      v26 |= 2uLL;
    }
  }

  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF660);
  uint64_t v35 = swift_getKeyPath(&unk_1001EF688);
  *(void *)&__int128 v162 = v26;
  swift_retain(v2);
  static Published.subscript.setter(&v162, v2, KeyPath, v35);
  uint64_t v36 = *(void **)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (!v36) {
    goto LABEL_12;
  }
  id v37 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                              + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player), "playQueue"));
  if (v37)
  {
    uint64_t v38 = v37;
    id v39 = [v37 audioRoute];

    if (v39)
    {
      uint64_t v40 = objc_opt_self(&OBJC_CLASS___MPAVEndpointRoute);
      uint64_t v41 = swift_dynamicCastObjCClass(v39, v40);
      if (!v41) {

      }
LABEL_13:
      uint64_t v42 = swift_getKeyPath(&unk_1001EF6A8);
      uint64_t v43 = swift_getKeyPath(&unk_1001EF6D0);
      *(void *)&__int128 v162 = v41;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v42, v43);
      LOBYTE(v43) = [a1 state] == (id)2;
      uint64_t v44 = swift_getKeyPath(&unk_1001EF6F0);
      uint64_t v45 = swift_getKeyPath(&unk_1001EF718);
      LOBYTE(v16sub_1000E053C(v0 + 2) = v43;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v44, v45);
      LOBYTE(v43) = [v21 shuffleType] != 0;
      uint64_t v46 = swift_getKeyPath(&unk_1001EF738);
      uint64_t v47 = swift_getKeyPath(&unk_1001EF760);
      LOBYTE(v16sub_1000E053C(v0 + 2) = v43;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v46, v47);
      id v48 = [v21 repeatType];
      uint64_t v49 = swift_getKeyPath(&unk_1001EF780);
      uint64_t v50 = swift_getKeyPath(&unk_1001EF7A8);
      *(void *)&__int128 v162 = v48;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v49, v50);
      id v51 = [v21 actionAtQueueEnd];
      uint64_t v52 = swift_getKeyPath(&unk_1001EF7C8);
      uint64_t v53 = swift_getKeyPath(&unk_1001EF7F0);
      *(void *)&__int128 v162 = v51;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v52, v53);
      sub_10019731C();
      if (v22)
      {
        [v22 duration];
        char v54 = v165;
      }

      else
      {
        char v54 = 0;
      }

      uint64_t v55 = (uint64_t)v161;
      uint64_t v56 = swift_getKeyPath(&unk_1001EF810);
      uint64_t v57 = swift_getKeyPath(&unk_1001EF838);
      LOBYTE(v16sub_1000E053C(v0 + 2) = v54;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v56, v57);
      if (v36 && (id v58 = [v36 playQueue]) != 0)
      {
        id v59 = v58;
        unsigned __int8 v60 = [v58 isRadioStationStreaming];
      }

      else
      {
        unsigned __int8 v60 = 0;
      }

      uint64_t v61 = swift_getKeyPath(&unk_1001EF858);
      uint64_t v62 = swift_getKeyPath(&unk_1001EF880);
      LOBYTE(v16sub_1000E053C(v0 + 2) = v60;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v61, v62);
      if (v22)
      {
        id v63 = [v22 metadataObject];
        if (v63)
        {
          uint64_t v64 = v63;
          if ([v63 type] == (id)1)
          {
            id v65 = [v64 song];
            if (v65)
            {
              uint64_t v66 = v65;
              id v67 = [v21 playingItemIndexPath];
              if (v67)
              {
                id v68 = v67;
                static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v69 = v160;
                uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56);
                uint64_t v71 = v55;
                uint64_t v72 = 0LL;
              }

              else
              {
                uint64_t v69 = v160;
                uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56);
                uint64_t v71 = v55;
                uint64_t v72 = 1LL;
              }

              uint64_t v79 = v159;
              uint64_t v154 = v70;
              v70(v71, v72, 1LL, v159);
              sub_1000E04D4(v55, (uint64_t)v18, (uint64_t *)&unk_1002BB690);
              uint64_t v153 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48);
              int v80 = v153(v18, 1LL, v79);
              id v155 = v64;
              if (v80 == 1)
              {
                id v81 = 0LL;
              }

              else
              {
                __int128 v82 = v158;
                (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v158, v18, v79);
                unsigned __int8 v83 = v66;
                uint64_t v84 = v69;
                id v85 = v21;
                id v86 = [v85 items];
                id v81 = [v86 sectionAtIndex:IndexPath.section.getter()];

                __int16 v87 = *(void (**)(char *, uint64_t))(v84 + 8);
                uint64_t v66 = v83;
                unint64_t v88 = v82;
                uint64_t v55 = (uint64_t)v161;
                v87(v88, v79);
              }

              sub_1000E03B4(v55, (uint64_t *)&unk_1002BB690);
              id v89 = [v81 metadataObject];

              uint64_t v90 = swift_getKeyPath(&unk_1001EF8A0);
              uint64_t v91 = swift_getKeyPath(&unk_1001EF8C8);
              static Published.subscript.getter(&v162, v2, v90, v91);
              swift_release(v90);
              *(void *)&double v92 = swift_release(v91).n128_u64[0];
              __int128 v93 = (void *)v162;
              if ((void)v162)
              {
                id v94 = objc_msgSend((id)v162, "identifiers", v92);
              }

              else
              {
                id v94 = 0LL;
              }

              id v95 = [v66 identifiers];
              __int128 v96 = v95;
              if (v94)
              {
                if (v95)
                {
                  sub_1000E0418(0LL, (unint64_t *)&qword_1002BA680, &OBJC_CLASS___MPIdentifierSet_ptr);
                  id v97 = v94;
                  char v98 = static NSObject.== infix(_:_:)(v97, v96);

                  uint64_t v79 = v159;
                  if ((v98 & 1) != 0) {
                    goto LABEL_45;
                  }
LABEL_44:
                  char v99 = sub_1001AD430(v66);
                  uint64_t v100 = swift_getKeyPath(&unk_1001EF8E8);
                  uint64_t v101 = swift_getKeyPath(&unk_1001EF910);
                  LOBYTE(v16sub_1000E053C(v0 + 2) = v99;
                  swift_retain(v2);
                  static Published.subscript.setter(&v162, v2, v100, v101);
                  uint64_t v102 = swift_getKeyPath(&unk_1001EF8A0);
                  uint64_t v103 = swift_getKeyPath(&unk_1001EF8C8);
                  *(void *)&__int128 v162 = v66;
                  swift_retain(v2);
                  id v104 = v66;
                  static Published.subscript.setter(&v162, v2, v102, v103);
                  goto LABEL_45;
                }

                __int128 v96 = v94;
              }

              else if (!v95)
              {
LABEL_45:
                id v105 = [v21 playingItemIndexPath];
                if (v105)
                {
                  uint64_t v106 = v105;
                  uint64_t v107 = v158;
                  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

                  uint64_t v108 = v160;
                  __int128 v109 = *(void (**)(char *, char *, uint64_t))(v160 + 32);
                  uint64_t v110 = (uint64_t)v157;
                  v109(v157, v107, v79);
                  v154(v110, 0LL, 1LL, v79);
                  if (v153((char *)v110, 1LL, v79) != 1)
                  {
                    __int128 v111 = v156;
                    v109(v156, (char *)v110, v79);
                    uint64_t v112 = v108;
                    id v113 = [v21 items];
                    id v114 = [v113 sectionAtIndex:IndexPath.section.getter()];

                    id v115 = [v114 metadataObject];
                    (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v79);
                    uint64_t v116 = *(void **)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingSongContainer);
                    *(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingSongContainer) = v115;
LABEL_50:

                    uint64_t v117 = swift_getKeyPath(&unk_1001EF810);
                    uint64_t v118 = swift_getKeyPath(&unk_1001EF838);
                    static Published.subscript.getter(&v162, v2, v117, v118);
                    swift_release(v117);
                    *(void *)&double v119 = swift_release(v118).n128_u64[0];
                    if ((v162 & 1) != 0)
                    {
                      BOOL v120 = 1;
                    }

                    else if (v89 {
                           && objc_msgSend(v89, "type", v119) == (id)13
                    }
                           && (id v121 = [v89 radioStation]) != 0)
                    {
                      uint64_t v122 = v121;
                      id v123 = [v121 type];

                      BOOL v120 = v123 == (id)4;
                    }

                    else
                    {
                      BOOL v120 = 0;
                    }

                    uint64_t v124 = swift_getKeyPath(&unk_1001EF810);
                    uint64_t v125 = swift_getKeyPath(&unk_1001EF838);
                    LOBYTE(v16sub_1000E053C(v0 + 2) = v120;
                    swift_retain(v2);
                    static Published.subscript.setter(&v162, v2, v124, v125);
                    id v126 = [v66 title];
                    if (v126)
                    {
                      uint64_t v127 = v126;
                      uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)(v126);
                      uint64_t v130 = v129;
                    }

                    else
                    {
                      uint64_t v128 = 0LL;
                      uint64_t v130 = 0LL;
                    }

                    id v131 = [v66 artist];
                    if (v131
                      && (uint64_t v132 = v131,
                          id v133 = [v131 name],
                          v132,
                          v133))
                    {
                      uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)(v133);
                      uint64_t v156 = v135;
                      uint64_t v157 = (char *)v134;
                    }

                    else
                    {
                      uint64_t v156 = 0LL;
                      uint64_t v157 = 0LL;
                    }

                    id v136 = [v66 album];
                    uint64_t v160 = v130;
                    uint64_t v161 = (char *)v128;
                    if (v136
                      && (uint64_t v137 = v136,
                          id v138 = [v136 title],
                          v137,
                          v138))
                    {
                      uint64_t v154 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))static String._unconditionallyBridgeFromObjectiveC(_:)(v138);
                      uint64_t v153 = v139;
                    }

                    else
                    {
                      uint64_t v154 = 0LL;
                      uint64_t v153 = 0LL;
                    }

                    id v140 = v66;
                    uint64_t v141 = sub_1001AD5BC(v66, v89);
                    uint64_t v158 = v142;
                    uint64_t v159 = v141;

                    [v140 duration];
                    unint64_t v144 = v143;
                    id v145 = [v140 artworkCatalog];
                    id v146 = [v22 musicAudio];
                    unsigned __int16 v147 = (unsigned __int16)[v140 hasVideo];
                    else {
                      __int16 v148 = 0;
                    }
                    __int16 v149 = v148 | v147;
                    uint64_t v150 = swift_getKeyPath(&unk_1001EF4C0);
                    uint64_t v151 = swift_getKeyPath(&unk_1001EF4E8);
                    *(void *)&__int128 v162 = v161;
                    *((void *)&v162 + 1) = v160;
                    *(void *)&__int128 v163 = v157;
                    *((void *)&v163 + 1) = v156;
                    *(void *)&__int128 v164 = v154;
                    *((void *)&v164 + 1) = v153;
                    *(void *)&__int128 v165 = v159;
                    *((void *)&v165 + 1) = v158;
                    __int128 v166 = v144;
                    *(void *)&__int128 v167 = v145;
                    *((void *)&v167 + 1) = v146;
                    __int16 v168 = v149;
                    swift_retain(v2);
                    static Published.subscript.setter(&v162, v2, v150, v151);
                    sub_10019990C(v140, v89);

                    goto LABEL_28;
                  }
                }

                else
                {
                  uint64_t v110 = (uint64_t)v157;
                  v154((uint64_t)v157, 1LL, 1LL, v79);
                }

                sub_1000E03B4(v110, (uint64_t *)&unk_1002BB690);
                uint64_t v116 = *(void **)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingSongContainer);
                *(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingSongContainer) = 0LL;
                goto LABEL_50;
              }

              goto LABEL_44;
            }
          }
        }
      }

      uint64_t v73 = swift_getKeyPath(&unk_1001EF8A0);
      uint64_t v74 = swift_getKeyPath(&unk_1001EF8C8);
      *(void *)&__int128 v162 = 0LL;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v73, v74);
      uint64_t v75 = swift_getKeyPath(&unk_1001EF4C0);
      uint64_t v76 = swift_getKeyPath(&unk_1001EF4E8);
      __int128 v162 = xmmword_1001EEBA0;
      __int128 v163 = 0u;
      __int128 v164 = 0u;
      __int128 v165 = 0u;
      __int128 v166 = 0u;
      __int128 v167 = 0u;
      __int16 v168 = 0;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v75, v76);
      uint64_t v77 = swift_getKeyPath(&unk_1001EF508);
      uint64_t v78 = swift_getKeyPath(&unk_1001EF530);
      __int128 v162 = 0uLL;
      swift_retain(v2);
      static Published.subscript.setter(&v162, v2, v77, v78);
LABEL_28:

      return;
    }

uint64_t sub_1001997A0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v11, 0LL, 0LL);
  uint64_t result = swift_weakLoadStrong(v4);
  if (result)
  {
    uint64_t v6 = result;
    unsigned __int8 v7 = [a3 canEnableVocalAttenuation];
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EF1C0);
    uint64_t v9 = swift_getKeyPath(&unk_1001EF1E8);
    unsigned __int8 v10 = v7;
    return static Published.subscript.setter(&v10, v6, KeyPath, v9);
  }

  return result;
}

double sub_10019983C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    uint64_t v7 = Strong;
    sub_1001976BC((char)[a3 vocalAttenuationEnabled]);
    *(void *)&double result = swift_release(v7).n128_u64[0];
  }

  return result;
}

double sub_1001998A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0LL, 0LL);
  uint64_t Strong = swift_weakLoadStrong(v4);
  if (Strong)
  {
    uint64_t v7 = Strong;
    [a3 vocalAttenuationLevel];
    sub_1001978FC(v8);
    *(void *)&double result = swift_release(v7).n128_u64[0];
  }

  return result;
}

double sub_10019990C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000DFE10(&qword_1002BB500);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF508);
  uint64_t v11 = swift_getKeyPath(&unk_1001EF530);
  static Published.subscript.getter(&v34, v3, KeyPath, v11);
  swift_release(KeyPath);
  *(void *)&double v12 = swift_release(v11).n128_u64[0];
  id v13 = v34;
  if (v34)
  {
    uint64_t v14 = v35;
    id v15 = v34;
    sub_1001ACF80(v13, v14);
    id v13 = [v15 identifiers];
  }

  id v16 = objc_msgSend(a1, "identifiers", v12);
  uint64_t v18 = v16;
  if (v13)
  {
    if (v16)
    {
      sub_1000E0418(0LL, (unint64_t *)&qword_1002BA680, &OBJC_CLASS___MPIdentifierSet_ptr);
      id v19 = v13;
      char v20 = static NSObject.== infix(_:_:)(v19, v18);

      if ((v20 & 1) != 0) {
        return result;
      }
      goto LABEL_11;
    }

    uint64_t v18 = v13;
  }

  else if (!v16)
  {
    return result;
  }

LABEL_11:
  uint64_t v21 = OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingActionsTask;
  uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingActionsTask);
  if (v22)
  {
    swift_retain(*(void *)(v3 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingActionsTask));
    Task.cancel()();
    swift_release(v22);
  }

  uint64_t v23 = swift_getKeyPath(&unk_1001EF508);
  uint64_t v24 = swift_getKeyPath(&unk_1001EF530);
  id v34 = a1;
  uint64_t v35 = 0LL;
  id v25 = a1;
  swift_retain(v3);
  static Published.subscript.setter(&v34, v3, v23, v24);
  uint64_t v26 = type metadata accessor for TaskPriority(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56LL))(v9, 1LL, 1LL, v26);
  type metadata accessor for MainActor(0LL);
  id v27 = a2;
  id v28 = v25;
  uint64_t v29 = swift_retain(v3);
  uint64_t v30 = static MainActor.shared.getter(v29);
  uint64_t v31 = (void *)swift_allocObject(&unk_100277D78, 56LL, 7LL);
  v31[2] = v30;
  v31[3] = &protocol witness table for MainActor;
  v31[4] = v28;
  v31[5] = a2;
  v31[6] = v3;
  uint64_t v32 = sub_100125950((uint64_t)v9, (uint64_t)&unk_1002BDC38, (uint64_t)v31);
  uint64_t v33 = *(void *)(v3 + v21);
  *(void *)(v3 + v21) = v32;
  *(void *)&double result = swift_release(v33).n128_u64[0];
  return result;
}

uint64_t sub_100199BA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  void v6[4] = a4;
  v6[5] = a6;
  uint64_t v9 = type metadata accessor for MainActor(0LL);
  void v6[6] = v9;
  void v6[7] = static MainActor.shared.getter(v9);
  uint64_t v10 = unk_1002B99D4;
  id v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1002B99D0 + dword_1002B99D0);
  id v11 = a4;
  id v12 = a5;
  id v13 = (void *)swift_task_alloc(v10);
  v6[8] = v13;
  *id v13 = v6;
  v13[1] = sub_100199C40;
  return v15((uint64_t)v11, (uint64_t)a5);
}

uint64_t sub_100199C40(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64LL);
  uint64_t v3 = *(void *)(*(void *)v1 + 48LL);
  *(void *)(*(void *)v1 + 72LL) = a1;
  swift_task_dealloc(v2);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100199CB8, v4, v5);
}

uint64_t sub_100199CB8()
{
  uint64_t v1 = swift_release(*(void *)(v0 + 56));
  if ((static Task<>.isCancelled.getter(v1) & 1) != 0)
  {
    swift_bridgeObjectRelease(*(void *)(v0 + 72));
  }

  else
  {
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v4 = *(void **)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EF508);
    uint64_t v6 = swift_getKeyPath(&unk_1001EF530);
    *(void *)(v0 + swift_weakDestroy(v0 + 16) = v4;
    *(void *)(v0 + 24) = v2;
    id v7 = v4;
    swift_retain(v3);
    static Published.subscript.setter(v0 + 16, v3, KeyPath, v6);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100199D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_logger;
  uint64_t v4 = type metadata accessor for Logger(0LL, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8LL))(v3, v4);
  uint64_t v5 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__supportedControls;
  uint64_t v6 = sub_1000DFE10(&qword_1002BDEB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8LL))(v5, v6);
  uint64_t v7 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isLive;
  uint64_t v8 = sub_1000DFE10(&qword_1002BA170);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8LL);
  v9(v7, v8);
  v9(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isStreamingRadio, v8);
  v9(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isPlaying, v8);
  uint64_t v10 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__repeatType;
  uint64_t v11 = sub_1000DFE10(&qword_1002BDEB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8LL))(v10, v11);
  v9(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__isShuffled, v8);
  uint64_t v12 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__queueEndAction;
  uint64_t v13 = sub_1000DFE10(&qword_1002BDEA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8LL))(v12, v13);
  uint64_t v14 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__route;
  uint64_t v15 = sub_1000DFE10(&qword_1002BDEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8LL))(v14, v15);
  uint64_t v16 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__libraryState;
  uint64_t v17 = sub_1000DFE10(&qword_1002BDE98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8LL))(v16, v17);
  uint64_t v18 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingSong;
  uint64_t v19 = sub_1000DFE10(&qword_1002BDE90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8LL))(v18, v19);

  uint64_t v20 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingMetadata;
  uint64_t v21 = sub_1000DFE10(&qword_1002BDE88);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8LL))(v20, v21);
  uint64_t v22 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__playingActions;
  uint64_t v23 = sub_1000DFE10(&qword_1002BDE80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8LL))(v22, v23);
  swift_release(*(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playingActionsTask));

  __n128 v24 = swift_release(*(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_playerResponseObserver));
  ((void (*)(uint64_t, uint64_t, __n128))v9)( v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__hasTimedLyrics,  v8,  v24);
  v9(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__canEnableVocalAttenuation, v8);
  v9(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__vocalAttenuationEnabled, v8);
  uint64_t v25 = v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__vocalAttenuationLevel;
  uint64_t v26 = sub_1000DFE10(&qword_1002BDA58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8LL))(v25, v26);
  swift_release(*(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationCanEnableObserver));
  swift_release(*(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationEnabledObserver));
  swift_release(*(void *)(v2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_vocalAttenuationLevelObserver));
  return v2;
}

uint64_t sub_10019A04C(uint64_t a1, uint64_t a2)
{
  return swift_deallocClassInstance( v2,  *(unsigned int *)(*(void *)v2 + 48LL),  *(unsigned __int16 *)(*(void *)v2 + 52LL));
}

uint64_t sub_10019A070()
{
  return type metadata accessor for NowPlayingPlayerObserver(0LL);
}

uint64_t type metadata accessor for NowPlayingPlayerObserver(uint64_t a1)
{
  return sub_1000EE114(a1, (uint64_t *)&unk_1002BD6E8, (uint64_t)&nominal type descriptor for NowPlayingPlayerObserver);
}

void sub_10019A08C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger(319LL, a2);
  if (v4 <= 0x3F)
  {
    v26[0] = *(void *)(v3 - 8) + 64LL;
    sub_10019C53C(319LL, (unint64_t *)&unk_1002BD6F8, (uint64_t)&type metadata for SupportedControls);
    if (v6 <= 0x3F)
    {
      v26[1] = *(void *)(v5 - 8) + 64LL;
      sub_10019C53C(319LL, (unint64_t *)&qword_1002B9C50, (uint64_t)&type metadata for Bool);
      if (v8 <= 0x3F)
      {
        uint64_t v9 = *(void *)(v7 - 8) + 64LL;
        _OWORD v26[2] = v9;
        v26[3] = v9;
        v26[4] = v9;
        sub_10019A2D0(319LL, &qword_1002BD708, (uint64_t (*)(uint64_t))type metadata accessor for MPRepeatType);
        if (v11 <= 0x3F)
        {
          v26[5] = *(void *)(v10 - 8) + 64LL;
          v26[6] = v9;
          sub_10019A2D0( 319LL,  &qword_1002BD710,  (uint64_t (*)(uint64_t))type metadata accessor for MPCQueueEndAction);
          if (v13 <= 0x3F)
          {
            v26[7] = *(void *)(v12 - 8) + 64LL;
            sub_10019C4F0(319LL, &qword_1002BD718, &qword_1002BD720);
            if (v15 <= 0x3F)
            {
              v26[8] = *(void *)(v14 - 8) + 64LL;
              sub_10019C53C(319LL, &qword_1002BD728, (uint64_t)&type metadata for NowPlayingPlayerObserver.LibraryState);
              if (v17 <= 0x3F)
              {
                void v26[9] = *(void *)(v16 - 8) + 64LL;
                sub_10019C4F0(319LL, (unint64_t *)&unk_1002BD730, &qword_1002BAA60);
                if (v19 <= 0x3F)
                {
                  v26[10] = *(void *)(v18 - 8) + 64LL;
                  v26[11] = "\b";
                  sub_10019C4F0(319LL, (unint64_t *)&unk_1002BD740, &qword_1002BAD08);
                  if (v21 <= 0x3F)
                  {
                    v26[12] = *(void *)(v20 - 8) + 64LL;
                    sub_10019C4F0(319LL, &qword_1002BD750, &qword_1002BD758);
                    if (v23 <= 0x3F)
                    {
                      v26[13] = *(void *)(v22 - 8) + 64LL;
                      v26[14] = "\b";
                      v26[15] = "\b";
                      v26[16] = "\b";
                      v26[17] = v9;
                      v26[18] = v9;
                      v26[19] = v9;
                      sub_10019C53C(319LL, (unint64_t *)&unk_1002BD760, (uint64_t)&type metadata for Float);
                      if (v25 <= 0x3F)
                      {
                        v26[20] = *(void *)(v24 - 8) + 64LL;
                        v26[21] = "\b";
                        v26[22] = "\b";
                        v26[23] = "\b";
                        swift_updateClassMetadata2(a1, 256LL, 24LL, v26, a1 + 80);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }

void sub_10019A2D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*a2)
  {
    uint64_t v5 = a3(255LL);
    unint64_t v6 = type metadata accessor for Published(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

uint64_t sub_10019A31C(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BA158,  &OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__canEnableVocalAttenuation,  &qword_1002BA170,  &qword_1002BA178);
}

uint64_t sub_10019A340(uint64_t a1, uint64_t a2)
{
  return sub_10019C980(a1, a2, (uint64_t)&unk_1001EF1C0, (uint64_t)&unk_1001EF1E8);
}

uint64_t sub_10019A354(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BA158,  &OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__vocalAttenuationEnabled,  &qword_1002BA170,  &qword_1002BA178);
}

uint64_t sub_10019A378(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = sub_1000DFE10(a3);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  unint64_t v15 = &v21[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL) - 8];
  swift_beginAccess(v6 + *a4, v21, 33LL, 0LL);
  uint64_t v16 = sub_1000DFE10(a5);
  Published.projectedValue.getter(v16);
  swift_endAccess(v21);
  uint64_t v17 = sub_1000E0374(a6, a3, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  uint64_t v18 = Publisher.eraseToAnyPublisher()(v11, v17);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v15, v11);
  return v18;
}

uint64_t sub_10019A468(uint64_t a1, uint64_t a2)
{
  return sub_10019C980(a1, a2, (uint64_t)&unk_1001EF178, (uint64_t)&unk_1001EF1A0);
}

void (*sub_10019A480(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = (void *)(a1 + 9);
  *(void *)a1 = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF178);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF1A0);
  static Published.subscript.getter(v3, v1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_10019A50C;
}

void sub_10019A50C(uint64_t a1)
{
}

uint64_t sub_10019A530(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BDA50,  &OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver__vocalAttenuationLevel,  &qword_1002BDA58,  (unint64_t *)&unk_1002BDA60);
}

void (*sub_10019A558(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = (void *)(a1 + 12);
  *(void *)a1 = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF130);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF158);
  static Published.subscript.getter(v3, v1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a1 + 12);
  return sub_10019A5E4;
}

void sub_10019A5E4(uint64_t a1)
{
}

unint64_t sub_10019A608(uint64_t a1, uint64_t a2)
{
  return sub_10019A620(a1, a2, (SEL *)&selRef_vocalAttenuationMinLevel);
}

unint64_t sub_10019A614(uint64_t a1, uint64_t a2)
{
  return sub_10019A620(a1, a2, (SEL *)&selRef_vocalAttenuationMaxLevel);
}

unint64_t sub_10019A620(uint64_t a1, uint64_t a2, SEL *a3)
{
  unint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v4 && (id v6 = [v4 playQueue]) != 0)
  {
    uint64_t v7 = v6;
    [v6 *a3];
    unsigned int v9 = v8;

    unsigned __int8 v10 = 0;
    uint64_t v11 = v9;
  }

  else
  {
    uint64_t v11 = 0LL;
    unsigned __int8 v10 = 1;
  }

  return v11 | ((unint64_t)v10 << 32);
}

uint64_t sub_10019A6A8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (!v1) {
    return 2LL;
  }
  id v2 = [v1 playQueue];
  if (!v2) {
    return 2LL;
  }
  uint64_t v3 = v2;
  id v4 = [v2 vocalAttenuationLevelIsContinuous];

  return (uint64_t)v4;
}

__CFString *sub_10019A70C()
{
  return @"TVMusicPlayQueueVocalLevelChanging";
}

__CFString *sub_10019A71C()
{
  return @"TVMusicPlayQueueVocalLevelChanged";
}

uint64_t sub_10019A7DC()
{
  return sub_100197474((uint64_t)&unk_1001EF9C0, (uint64_t)&unk_1001EF9E8);
}

uint64_t sub_10019A86C()
{
  id v1 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v3 = swift_getKeyPath(&unk_1001EF9E8);
  static Published.subscript.getter(&v16, v0, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  uint64_t v4 = v16;
  NSString v5 = String._bridgeToObjectiveC()();
  [v1 setInteger:v4 forKey:v5];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___TVMusicNowPlayingViewPresentation_delegate]);
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = swift_getKeyPath(&unk_1001EF9C0);
    uint64_t v9 = swift_getKeyPath(&unk_1001EF9E8);
    static Published.subscript.getter(&v16, v0, v8, v9);
    swift_release(v8);
    swift_release(v9);
    [v7 presentation:v0 didChangeStyle:v16];
    swift_unknownObjectRelease(v7);
  }

  uint64_t v10 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v11 = swift_getKeyPath(&unk_1001EF9E8);
  static Published.subscript.getter(&v16, v0, v10, v11);
  swift_release(v10);
  swift_release(v11);
  BOOL v12 = v16 == 1;
  uint64_t v13 = swift_getKeyPath(&unk_1001EF298);
  uint64_t v14 = swift_getKeyPath(&unk_1001EF2C0);
  LOBYTE(vswift_weakDestroy(v0 + 16) = v12;
  return static Published.subscript.setter(&v16, v0, v13, v14);
}

uint64_t sub_10019AA48(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF9E8);
  uint64_t v7 = v2;
  static Published.subscript.setter(&v7, v3, KeyPath, v5);
  return sub_10019A86C();
}

uint64_t sub_10019AAD4()
{
  return sub_10019B3E4((uint64_t)&unk_1001EFA08, (uint64_t)&unk_1001EFA30);
}

uint64_t sub_10019AB10()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF298, (uint64_t)&unk_1001EF2C0);
}

uint64_t sub_10019AB4C()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF208, (uint64_t)&unk_1001EF230);
}

uint64_t sub_10019ABA0(char a1)
{
  return sub_10019AF64( a1,  (uint64_t)&unk_1001EF208,  (uint64_t)&unk_1001EF230,  (SEL *)&selRef_presentation_didChangeShowCamera_);
}

uint64_t sub_10019ABD0()
{
  return sub_10019B3E4((uint64_t)&unk_1001EFA58, (uint64_t)&unk_1001EFA80);
}

uint64_t sub_10019ACB4(char a1)
{
  int v2 = a1 & 1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v4 = swift_getKeyPath(&unk_1001EFA80);
  static Published.subscript.getter((uint64_t *)((char *)&v14 + 1), v1, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t result = swift_release(v4);
  if (BYTE1(v14) != v2)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___TVMusicNowPlayingViewPresentation_delegate);
    if (result)
    {
      id v6 = (void *)result;
      uint64_t v7 = swift_getKeyPath(&unk_1001EFA58);
      uint64_t v8 = swift_getKeyPath(&unk_1001EFA80);
      static Published.subscript.getter(&v14, v1, v7, v8);
      swift_release(v7);
      swift_release(v8);
      uint64_t v9 = (double *)(v1 + OBJC_IVAR___TVMusicNowPlayingViewPresentation_cameraButtonFrame);
      double v10 = 0.0;
      double v11 = 0.0;
      double v12 = 0.0;
      double v13 = 0.0;
      if ((*(_BYTE *)(v1 + OBJC_IVAR___TVMusicNowPlayingViewPresentation_cameraButtonFrame + 32) & 1) == 0)
      {
        double v10 = v9[2];
        double v11 = v9[3];
        double v12 = *v9;
        double v13 = v9[1];
      }

      objc_msgSend(v6, "presentation:didChangeShowEffects:buttonFrame:", v1, v14, v12, v13, v10, v11);
      return swift_unknownObjectRelease(v6);
    }
  }

  return result;
}

uint64_t sub_10019ADD8(char *a1, void **a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v5 = swift_getKeyPath(&unk_1001EFA80);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  LOBYTE(KeyPath) = v10;
  uint64_t v6 = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v7 = swift_getKeyPath(&unk_1001EFA80);
  char v9 = v2;
  static Published.subscript.setter(&v9, v3, v6, v7);
  return sub_10019ACB4(KeyPath);
}

uint64_t sub_10019AEB8()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF370, (uint64_t)&unk_1001EF398);
}

uint64_t sub_10019AEF4()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF448, (uint64_t)&unk_1001EF470);
}

uint64_t sub_10019AF48(char a1)
{
  return sub_10019AF64( a1,  (uint64_t)&unk_1001EF448,  (uint64_t)&unk_1001EF470,  (SEL *)&selRef_presentation_didChangeShowInfo_);
}

uint64_t sub_10019AF64(char a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v10 = swift_getKeyPath(a3);
  static Published.subscript.getter((uint64_t *)((char *)&v21 + 3), v4, KeyPath, v10);
  swift_release(KeyPath);
  swift_release(v10);
  int v11 = BYTE3(v21);
  uint64_t v12 = swift_getKeyPath(a2);
  uint64_t v13 = swift_getKeyPath(a3);
  BYTE2(v21) = a1;
  uint64_t v14 = v4;
  static Published.subscript.setter((char *)&v21 + 2, v14, v12, v13);
  uint64_t v15 = swift_getKeyPath(a2);
  uint64_t v16 = swift_getKeyPath(a3);
  static Published.subscript.getter((uint64_t *)((char *)&v21 + 1), v14, v15, v16);
  swift_release(v15);
  uint64_t result = swift_release(v16);
  if (v11 != BYTE1(v21))
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong(&v14[OBJC_IVAR___TVMusicNowPlayingViewPresentation_delegate]);
    if (result)
    {
      uint64_t v18 = (void *)result;
      uint64_t v19 = swift_getKeyPath(a2);
      uint64_t v20 = swift_getKeyPath(a3);
      static Published.subscript.getter(&v21, v14, v19, v20);
      swift_release(v19);
      swift_release(v20);
      objc_msgSend(v18, *a4, v14, v21);
      return swift_unknownObjectRelease(v18);
    }
  }

  return result;
}

uint64_t sub_10019B0F0()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF978, (uint64_t)&unk_1001EF9A0);
}

uint64_t sub_10019B1BC()
{
  return sub_10019B1D0((uint64_t)&unk_1001EF930, (uint64_t)&unk_1001EF958);
}

uint64_t sub_10019B1D0(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_10019B2C8(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF930);
  uint64_t v6 = swift_getKeyPath(&unk_1001EF958);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_10019B358(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  uint64_t v7 = swift_getKeyPath(a4);
  id v8 = a1;
  static Published.subscript.getter(&v10, v8, KeyPath, v7);

  swift_release(KeyPath);
  swift_release(v7);
  return v10;
}

uint64_t sub_10019B3D0()
{
  return sub_10019B3E4((uint64_t)&unk_1001EF2E0, (uint64_t)&unk_1001EF308);
}

uint64_t sub_10019B3E4(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath(a1);
  uint64_t v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  return v7;
}

uint64_t sub_10019B460(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t KeyPath = swift_getKeyPath(a4);
  uint64_t v9 = swift_getKeyPath(a5);
  char v11 = a3;
  return static Published.subscript.setter(&v11, a1, KeyPath, v9);
}

uint64_t sub_10019B4C8(char *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v7 = *a1;
  id v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath(a5);
  uint64_t v10 = swift_getKeyPath(a6);
  char v12 = v7;
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

double sub_10019B5AC()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF250);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF278);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

double sub_10019B690@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF250);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF278);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  double result = v7;
  *a2 = v7;
  return result;
}

uint64_t sub_10019B70C(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF250);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF278);
  uint64_t v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10019B780(char a1)
{
  BOOL v2 = a1 == 0;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter((uint64_t *)((char *)&v9 + 1), v1, KeyPath, v4);
  swift_release(KeyPath);
  uint64_t result = swift_release(v4);
  if (((v2 ^ (BYTE1(v9) != 0)) & 1) == 0)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___TVMusicNowPlayingViewPresentation_delegate);
    if (result)
    {
      uint64_t v6 = (void *)result;
      uint64_t v7 = swift_getKeyPath(&unk_1001EF328);
      uint64_t v8 = swift_getKeyPath(&unk_1001EF350);
      static Published.subscript.getter(&v9, v1, v7, v8);
      swift_release(v7);
      swift_release(v8);
      [v6 presentation:v1 didChangeVocalControl:(_BYTE)v9 != 0];
      return swift_unknownObjectRelease(v6);
    }
  }

  return result;
}

uint64_t sub_10019B88C()
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t (*sub_10019B8FC(uint64_t a1))(uint64_t a1)
{
  uint64_t v3 = (void *)(a1 + 9);
  *(void *)a1 = v1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter(v3, v1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_10019B988;
}

uint64_t sub_10019B988(uint64_t a1)
{
  uint64_t v2 = (void *)(a1 + 9);
  char v3 = *(_BYTE *)(a1 + 8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF350);
  uint64_t v6 = *(void **)a1;
  static Published.subscript.getter(v2, *(void *)a1, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  LOBYTE(KeyPath) = *(_BYTE *)(a1 + 9);
  uint64_t v7 = swift_getKeyPath(&unk_1001EF328);
  uint64_t v8 = swift_getKeyPath(&unk_1001EF350);
  *(_BYTE *)(a1 + 9) = v3;
  static Published.subscript.setter(v2, v6, v7, v8);
  return sub_10019B780(KeyPath);
}

id sub_10019BA5C()
{
  uint64_t v1 = sub_1000DFE10(&qword_1002BDA90);
  uint64_t v49 = *(void *)(v1 - 8);
  uint64_t v50 = v1;
  __chkstk_darwin(v1, v2);
  id v48 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v4 = sub_1000DFE10(&qword_1002BDA78);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = sub_1000DFE10(&qword_1002BDEE0);
  uint64_t v8 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v9);
  char v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v12 = sub_1000DFE10(&qword_1002BA170);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___TVMusicNowPlayingViewPresentation_delegate], 0LL);
  uint64_t v17 = &v0[OBJC_IVAR___TVMusicNowPlayingViewPresentation__isShowingLyrics];
  LOBYTE(v53[0]) = 0;
  uint64_t v18 = v0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  uint64_t v51 = v13;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v19(v17, v16, v12);
  uint64_t v20 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__shouldShowLyrics];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v20, v16, v12);
  uint64_t v21 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation_cameraButtonFrame];
  *(_OWORD *)uint64_t v21 = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  v21[32] = 1;
  uint64_t v22 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__shouldShowCamera];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v22, v16, v12);
  unint64_t v23 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__shouldShowEffects];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v23, v16, v12);
  uint64_t v24 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__isRestMode];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v24, v16, v12);
  unint64_t v25 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__isShowingInfo];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v25, v16, v12);
  uint64_t v26 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__alwaysHideContainerText];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v26, v16, v12);
  id v27 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__containerText];
  v53[0] = 0LL;
  v53[1] = 0LL;
  uint64_t v28 = sub_1000DFE10(&qword_1002BAB30);
  Published.init(initialValue:)(v53, v28);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v27, v11, v45);
  uint64_t v29 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__isShowingVocalBufferingText];
  LOBYTE(v53[0]) = 0;
  Published.init(initialValue:)(v53, &type metadata for Bool);
  v19(v29, v16, v12);
  uint64_t v30 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__vaButtonOffset];
  v53[0] = 0LL;
  Published.init(initialValue:)(v53, &type metadata for Double);
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v30, v7, v47);
  uint64_t v31 = &v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__vocalControlState];
  LOBYTE(v53[0]) = 0;
  uint64_t v32 = v48;
  Published.init(initialValue:)(v53, &type metadata for VocalControlState);
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v31, v32, v50);
  id v33 = [(id)objc_opt_self(NSUserDefaults) standardUserDefaults];
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v33 valueForKey:v34];

  if (v35)
  {
    _bridgeAnyObjectToAny(_:)(v57);
    swift_unknownObjectRelease(v35);
  }

  else
  {
    memset(v57, 0, 32);
  }

  sub_1000E011C((uint64_t)v57, (uint64_t)v53, &qword_1002B7850);
  if (!v54)
  {
    sub_1000E03B4((uint64_t)v53, &qword_1002B7850);
    goto LABEL_10;
  }

  if ((swift_dynamicCast(&v52, v53, (char *)&type metadata for Any + 8, &type metadata for Int, 6LL) & 1) == 0)
  {
LABEL_10:
    uint64_t v36 = 0LL;
    goto LABEL_11;
  }

  if (v52 == 2) {
    uint64_t v36 = 2LL;
  }
  else {
    uint64_t v36 = v52 == 1;
  }
LABEL_11:
  swift_beginAccess(&v18[OBJC_IVAR___TVMusicNowPlayingViewPresentation__style], v53, 33LL, 0LL);
  *(void *)&v57[0] = v36;
  Published.init(initialValue:)(v57, &type metadata for NowPlayingViewPresentation.Style);
  swift_endAccess(v53);
  swift_beginAccess(v20, v53, 33LL, 0LL);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v12);
  LOBYTE(v57[0]) = v36 == 1;
  Published.init(initialValue:)(v57, &type metadata for Bool);
  swift_endAccess(v53);

  id v37 = (objc_class *)type metadata accessor for NowPlayingViewPresentation(0LL);
  v56.receiver = v18;
  v56.super_class = v37;
  id v38 = objc_msgSendSuper2(&v56, "init");
  char v54 = &type metadata for Feature.Laguna;
  unint64_t v55 = sub_1001AE704();
  id v39 = v38;
  char v40 = isFeatureEnabled(_:)(v53);
  sub_1000E053C(v53);
  if ((v40 & 1) != 0)
  {
    char v54 = &type metadata for Feature.TVMusic;
    unint64_t v55 = sub_1000FF104();
    LOBYTE(v53[0]) = 1;
    char v41 = isFeatureEnabled(_:)(v53);
    sub_1000E053C(v53);
    if ((v41 & 1) != 0)
    {
      if (qword_1002B71D8 != -1) {
        swift_once(&qword_1002B71D8, sub_10015F74C);
      }
      if (byte_1002C5EA0 == 1)
      {
        id v42 = [(id)objc_opt_self(PSCameraController) sharedInstance];
        [v42 addObserver:v39];
      }
    }
  }

  return v39;
}

id sub_10019C0C0()
{
  uint64_t v7 = &type metadata for Feature.Laguna;
  unint64_t v8 = sub_1001AE704();
  char v1 = isFeatureEnabled(_:)(v6);
  sub_1000E053C(v6);
  if ((v1 & 1) != 0)
  {
    uint64_t v7 = &type metadata for Feature.TVMusic;
    unint64_t v8 = sub_1000FF104();
    LOBYTE(v6[0]) = 1;
    char v2 = isFeatureEnabled(_:)(v6);
    sub_1000E053C(v6);
    if ((v2 & 1) != 0)
    {
      if (qword_1002B71D8 != -1) {
        swift_once(&qword_1002B71D8, sub_10015F74C);
      }
      if (byte_1002C5EA0 == 1)
      {
        id v3 = [(id)objc_opt_self(PSCameraController) sharedInstance];
        [v3 removeObserver:v0];
      }
    }
  }

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for NowPlayingViewPresentation(0LL);
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_10019C38C()
{
  return type metadata accessor for NowPlayingViewPresentation(0LL);
}

uint64_t type metadata accessor for NowPlayingViewPresentation(uint64_t a1)
{
  return sub_1000EE114(a1, (uint64_t *)&unk_1002BD928, (uint64_t)&nominal type descriptor for NowPlayingViewPresentation);
}

void sub_10019C3A8(uint64_t a1)
{
  v13[0] = "\b";
  sub_10019C53C(319LL, &qword_1002BD938, (uint64_t)&type metadata for NowPlayingViewPresentation.Style);
  if (v3 <= 0x3F)
  {
    v13[1] = *(void *)(v2 - 8) + 64LL;
    sub_10019C53C(319LL, (unint64_t *)&qword_1002B9C50, (uint64_t)&type metadata for Bool);
    if (v5 <= 0x3F)
    {
      uint64_t v6 = *(void *)(v4 - 8) + 64LL;
      v13[2] = v6;
      v13[3] = v6;
      void v13[4] = &unk_1001EED68;
      void v13[5] = v6;
      v13[6] = v6;
      v13[7] = v6;
      v13[8] = v6;
      v13[9] = v6;
      sub_10019C4F0(319LL, (unint64_t *)&unk_1002BD940, &qword_1002BAB30);
      if (v8 <= 0x3F)
      {
        v13[10] = *(void *)(v7 - 8) + 64LL;
        v13[11] = v6;
        sub_10019C53C(319LL, &qword_1002BD950, (uint64_t)&type metadata for Double);
        if (v10 <= 0x3F)
        {
          v13[12] = *(void *)(v9 - 8) + 64LL;
          sub_10019C53C(319LL, &qword_1002BD958, (uint64_t)&type metadata for VocalControlState);
          if (v12 <= 0x3F)
          {
            v13[13] = *(void *)(v11 - 8) + 64LL;
            swift_updateClassMetadata2(a1, 256LL, 14LL, v13, a1 + 80);
          }
        }
      }
    }
  }

void sub_10019C4F0(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    uint64_t v5 = sub_1000DEA98(a3);
    unint64_t v6 = type metadata accessor for Published(a1, v5);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }

void sub_10019C53C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  if (!*a2)
  {
    unint64_t v4 = type metadata accessor for Published(0LL, a3);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }

uint64_t sub_10019C580@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for NowPlayingViewPresentation(0LL);
  uint64_t result = ObservableObject<>.objectWillChange.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_10019C5BC(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BDA88,  &OBJC_IVAR___TVMusicNowPlayingViewPresentation__vocalControlState,  &qword_1002BDA90,  &qword_1002BDA98);
}

uint64_t sub_10019C5E0(char a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter(&v9, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  LOBYTE(KeyPath) = v9;
  uint64_t v5 = swift_getKeyPath(&unk_1001EF328);
  uint64_t v6 = swift_getKeyPath(&unk_1001EF350);
  char v8 = a1;
  static Published.subscript.setter(&v8, v1, v5, v6);
  return sub_10019B780(KeyPath);
}

void (*sub_10019C6A4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = sub_10019B8FC((uint64_t)v2);
  return sub_1000FEA2C;
}

uint64_t sub_10019C6E8(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BA158,  &OBJC_IVAR___TVMusicNowPlayingViewPresentation__isShowingVocalBufferingText,  &qword_1002BA170,  &qword_1002BA178);
}

uint64_t sub_10019C70C(uint64_t a1, uint64_t a2)
{
  return sub_10019C980(a1, a2, (uint64_t)&unk_1001EF2E0, (uint64_t)&unk_1001EF308);
}

uint64_t sub_10019C720(char a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF2E0);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF308);
  char v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*sub_10019C788(void *a1))(void *)
{
  unint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF2E0);
  v3[4] = KeyPath;
  uint64_t v5 = swift_getKeyPath(&unk_1001EF308);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10019C800;
}

uint64_t sub_10019C804(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BA158,  &OBJC_IVAR___TVMusicNowPlayingViewPresentation__shouldShowLyrics,  &qword_1002BA170,  &qword_1002BA178);
}

uint64_t sub_10019C828(uint64_t a1, uint64_t a2)
{
  return sub_10019C980(a1, a2, (uint64_t)&unk_1001EF298, (uint64_t)&unk_1001EF2C0);
}

uint64_t sub_10019C83C(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BDA70,  &OBJC_IVAR___TVMusicNowPlayingViewPresentation__vaButtonOffset,  &qword_1002BDA78,  &qword_1002BDA80);
}

uint64_t sub_10019C860(double a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF250);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF278);
  double v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*sub_10019C8D0(void *a1))(void *)
{
  unint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF250);
  v3[4] = KeyPath;
  uint64_t v5 = swift_getKeyPath(&unk_1001EF278);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10019C800;
}

uint64_t sub_10019C948(uint64_t a1, uint64_t a2)
{
  return sub_10019A378( a1,  a2,  &qword_1002BA158,  &OBJC_IVAR___TVMusicNowPlayingViewPresentation__shouldShowCamera,  &qword_1002BA170,  &qword_1002BA178);
}

uint64_t sub_10019C96C(uint64_t a1, uint64_t a2)
{
  return sub_10019C980(a1, a2, (uint64_t)&unk_1001EF208, (uint64_t)&unk_1001EF230);
}

uint64_t sub_10019C980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath = swift_getKeyPath(a3);
  uint64_t v7 = swift_getKeyPath(a4);
  static Published.subscript.getter(&v9, v4, KeyPath, v7);
  swift_release(KeyPath);
  swift_release(v7);
  return v9;
}

uint64_t sub_10019C9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  void v5[3] = a5;
  uint64_t v6 = type metadata accessor for MainActor(0LL);
  void v5[4] = static MainActor.shared.getter(v6);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10019CA58, v7, v8);
}

uint64_t sub_10019CA58()
{
  else {
    sub_10019ABA0(0);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10019CBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + swift_weakDestroy(v0 + 16) = a4;
  uint64_t v5 = type metadata accessor for MainActor(0LL);
  *(void *)(v4 + 24) = static MainActor.shared.getter(v5);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10019CC40, v6, v7);
}

uint64_t sub_10019CC40()
{
  id v1 = [(id)objc_opt_self(PSCameraController) sharedInstance];
  unsigned int v2 = [v1 isConnected];
  if (v2) {
    LOBYTE(vsub_1000E053C(v0 + 2) = [v1 hasAnyInputsEnabled];
  }
  sub_10019ABA0(v2);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

NSString sub_10019CDC8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1002C5F38 = (uint64_t)result;
  return result;
}

char *sub_10019CE18(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  uint64_t v13 = sub_1000DFE10(&qword_1002BDA88);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v6[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_suppressFocusSounds] = 0;
  *(void *)&v6[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_vocalControlObserver] = 0LL;
  *(void *)&v6[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_vocalAttenuationAvailableObserver] = 0LL;
  uint64_t v18 = type metadata accessor for NowPlayingPlayerObserver(0LL);
  uint64_t v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  uint64_t v20 = v6;
  id v21 = a1;
  sub_100197A58((uint64_t)a1);
  *(void *)&v20[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_playerObserver] = v19;
  *(void *)&v20[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_viewPresentation] = a2;
  uint64_t v22 = a2;
  uint64_t v23 = swift_retain(v19);
  sub_1001ADFBC(v23, v22, 0, (uint64_t)v39);
  id v24 = objc_allocWithZone((Class)sub_1000DFE10(&qword_1002BDE78));
  *(void *)&v20[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_contentView] = _UIHostingView.init(rootView:)(v39);

  unint64_t v25 = (objc_class *)type metadata accessor for TVMusicNowPlayingPlayerControlsView();
  v38.receiver = v20;
  v38.super_class = v25;
  uint64_t v26 = (char *)objc_msgSendSuper2(&v38, "initWithFrame:", a3, a4, a5, a6);
  uint64_t v27 = OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_contentView;
  uint64_t v28 = *(void **)&v26[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_contentView];
  uint64_t v29 = v26;
  id v30 = v28;
  [v29 bounds];
  objc_msgSend(v30, "setFrame:");

  uint64_t v31 = *(void **)&v26[v27];
  [v31 setAutoresizingMask:18];
  [v29 addSubview:v31];
  swift_beginAccess(&v22[OBJC_IVAR___TVMusicNowPlayingViewPresentation__vocalControlState], v39, 33LL, 0LL);
  uint64_t v32 = sub_1000DFE10(&qword_1002BDA90);
  Published.projectedValue.getter(v32);
  swift_endAccess(v39);
  uint64_t v33 = swift_allocObject(&unk_100277DF0, 24LL, 7LL);
  swift_unknownObjectWeakInit(v33 + 16, v29);
  uint64_t v34 = sub_1000E0374( &qword_1002BDA98,  &qword_1002BDA88,  (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  uint64_t v35 = Publisher<>.sink(receiveValue:)(sub_1001AE590, v33, v13, v34);

  swift_release(v33);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v36 = *(void *)&v29[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_vocalControlObserver];
  *(void *)&v29[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_vocalControlObserver] = v35;
  swift_release(v36);
  return v29;
}

void sub_10019D0E8(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0LL, 0LL);
  uint64_t Strong = (_BYTE *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView_suppressFocusSounds] = v2 != 0;
  }

id sub_10019D374()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TVMusicNowPlayingPlayerControlsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for TVMusicNowPlayingPlayerControlsView()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusic35TVMusicNowPlayingPlayerControlsView);
}

uint64_t sub_10019D42C()
{
  uint64_t v0 = static HorizontalAlignment.trailing.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_10019D454()
{
  unint64_t v0 = sub_1001AE528();
  uint64_t result = HorizontalAlignment.init(_:)(&_s22StackedButtonAlignmentVN, v0);
  qword_1002C5F40 = result;
  return result;
}

unint64_t sub_10019D480@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result = sub_1001AE1F8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10019D4A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v189 = a1;
  uint64_t v182 = type metadata accessor for DefaultFocusEvaluationPriority(0LL);
  uint64_t v180 = *(void *)(v182 - 8);
  __chkstk_darwin(v182, v3);
  __int128 v179 = (char *)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002BDAA0);
  __chkstk_darwin(v5, v6);
  __int128 v164 = (char *)&v156 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = type metadata accessor for Image.Scale(0LL);
  uint64_t v162 = *(void *)(v8 - 8);
  uint64_t v163 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v161 = (char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DFE10(&qword_1002BDAA8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v157 = sub_1000DFE10(&qword_1002BDAB0);
  __chkstk_darwin(v157, v15);
  uint64_t v17 = (char *)&v156 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000DFE10(&qword_1002BDAB8);
  __chkstk_darwin(v18, v19);
  uint64_t v158 = (char *)&v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v160 = sub_1000DFE10(&qword_1002BDAC0);
  __chkstk_darwin(v160, v21);
  uint64_t v159 = (char *)&v156 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v191 = sub_1000DFE10(&qword_1002BDAC8);
  __chkstk_darwin(v191, v23);
  uint64_t v190 = (uint64_t)&v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v25 = sub_1000DFE10(&qword_1002BDAD0);
  uint64_t v167 = *(void *)(v25 - 8);
  uint64_t v168 = v25;
  __chkstk_darwin(v25, v26);
  __int128 v165 = (char *)&v156 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_1000DFE10(&qword_1002BDAD8);
  __chkstk_darwin(v28, v29);
  __int128 v166 = (char *)&v156 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = sub_1000DFE10(&qword_1002BDAE0);
  __chkstk_darwin(v31, v32);
  uint64_t v169 = (uint64_t)&v156 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v170 = sub_1000DFE10(&qword_1002BDAE8);
  __chkstk_darwin(v170, v34);
  uint64_t v172 = (uint64_t)&v156 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v36 = sub_1000DFE10(&qword_1002BDAF0);
  uint64_t v174 = *(void *)(v36 - 8);
  uint64_t v175 = v36;
  __chkstk_darwin(v36, v37);
  uint64_t v173 = (char *)&v156 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v178 = sub_1000DFE10(&qword_1002BDAF8);
  __chkstk_darwin(v178, v39);
  uint64_t v176 = (char *)&v156 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v41 = sub_1000DFE10(&qword_1002BDB00);
  uint64_t v183 = *(void *)(v41 - 8);
  uint64_t v184 = v41;
  __chkstk_darwin(v41, v42);
  uint64_t v181 = (char *)&v156 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = sub_1000DFE10(&qword_1002BDB08);
  uint64_t v187 = *(void *)(v44 - 8);
  uint64_t v188 = v44;
  __chkstk_darwin(v44, v45);
  __int128 v192 = (char *)&v156 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v185 = sub_1000DFE10(&qword_1002BDB10);
  uint64_t v48 = __chkstk_darwin(v185, v47);
  uint64_t v186 = (char *)&v156 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)uint64_t v14 = static HorizontalAlignment.center.getter(v48);
  *((void *)v14 + 1) = 0LL;
  v14[16] = 0;
  uint64_t v50 = sub_1000DFE10(&qword_1002BDB18);
  sub_10019E3CC((_OWORD *)v2, (uint64_t)&v14[*(int *)(v50 + 44)]);
  uint64_t v51 = *(void **)(v2 + 24);
  uint64_t v177 = *(void *)(v2 + 16);
  uint64_t v171 = v2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF370);
  uint64_t v53 = swift_getKeyPath(&unk_1001EF398);
  id v54 = v51;
  static Published.subscript.getter(v207, v54, KeyPath, v53);

  swift_release(KeyPath);
  swift_release(v53);
  char v55 = v207[0];
  uint64_t v56 = swift_getKeyPath(&unk_1001EF3B8);
  uint64_t v57 = swift_allocObject(&unk_100277C10, 17LL, 7LL);
  *(_BYTE *)(v57 + swift_weakDestroy(v0 + 16) = v55;
  sub_1000E04D4((uint64_t)v14, (uint64_t)v17, &qword_1002BDAA8);
  uint64_t v58 = v157;
  id v59 = (uint64_t *)&v17[*(int *)(v157 + 36)];
  *id v59 = v56;
  v59[1] = (uint64_t)sub_1001AC8B8;
  v59[2] = v57;
  sub_1000E03B4((uint64_t)v14, &qword_1002BDAA8);
  uint64_t v60 = swift_getKeyPath(&unk_1001EF370);
  uint64_t v61 = swift_getKeyPath(&unk_1001EF398);
  id v62 = v54;
  static Published.subscript.getter(v207, v62, v60, v61);

  swift_release(v60);
  swift_release(v61);
  uint64_t v63 = LOBYTE(v207[0]);
  unint64_t v64 = sub_1001AC8D0();
  uint64_t v65 = (uint64_t)v158;
  View.accessibility(hidden:)(v63, v58, v64);
  sub_1000E03B4((uint64_t)v17, &qword_1002BDAB0);
  id v67 = v161;
  uint64_t v66 = v162;
  uint64_t v68 = v163;
  (*(void (**)(char *, void, uint64_t))(v162 + 104))(v161, enum case for Image.Scale.medium(_:), v163);
  uint64_t v69 = swift_getKeyPath(&unk_1001EF3E8);
  uint64_t v70 = (uint64_t)v159;
  uint64_t v71 = (uint64_t *)&v159[*(int *)(v160 + 36)];
  uint64_t v72 = sub_1000DFE10(&qword_1002BDB40);
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))((char *)v71 + *(int *)(v72 + 28), v67, v68);
  *uint64_t v71 = v69;
  sub_1000E04D4(v65, v70, &qword_1002BDAB8);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v68);
  uint64_t v73 = sub_1000E03B4(v65, &qword_1002BDAB8);
  double v74 = static Font.Weight.semibold.getter(v73);
  uint64_t v75 = type metadata accessor for Font.Design(0LL);
  uint64_t v76 = (uint64_t)v164;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56LL))(v164, 1LL, 1LL, v75);
  uint64_t v77 = static Font.system(size:weight:design:)(*(void *)&v74, 0LL, v76, 28.0);
  sub_1000E03B4(v76, &qword_1002BDAA0);
  uint64_t v78 = swift_getKeyPath(&unk_1001EF418);
  uint64_t v79 = v190;
  sub_1000E04D4(v70, v190, &qword_1002BDAC0);
  int v80 = (uint64_t *)(v79 + *(int *)(v191 + 36));
  *int v80 = v78;
  v80[1] = v77;
  sub_1000E03B4(v70, &qword_1002BDAC0);
  if (qword_1002B7270 != -1) {
    swift_once(&qword_1002B7270, sub_1001A60B0);
  }
  uint64_t v162 = qword_1002BD5E8;
  uint64_t v163 = qword_1002BD5E0;
  uint64_t v161 = (char *)qword_1002BD5F0;
  if (qword_1002B7278 != -1) {
    swift_once(&qword_1002B7278, sub_1001A60E4);
  }
  __int128 v81 = xmmword_1002BD5F8;
  uint64_t v82 = qword_1002BD608;
  uint64_t v83 = swift_getKeyPath(&unk_1001EF208);
  uint64_t v84 = swift_getKeyPath(&unk_1001EF230);
  id v85 = (char *)v62;
  static Published.subscript.getter(v207, v85, v83, v84);
  __int128 v164 = v85;

  swift_release(v83);
  swift_release(v84);
  if (LOBYTE(v207[0]) == 1) {
    id v86 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:4017];
  }
  else {
    id v86 = 0LL;
  }
  MusicCardButtonStyle.init(width:height:translation:cornerRadius:focusedSizeIncrease:focusedShadow:unfocusedShadow:maskOnSelect:backgroundEffect:)( v207,  0x4050000000000000LL,  0LL,  0x4050000000000000LL,  0LL,  v163,  v162,  v161,  0LL,  5.0,  5.0,  32.0,  0.1,  v81,  *((void *)&v81 + 1),  v82,  0,  v86);
  __int128 v204 = v207[8];
  __int128 v205 = v207[9];
  uint64_t v206 = v208;
  __int128 v200 = v207[4];
  __int128 v201 = v207[5];
  __int128 v202 = v207[6];
  __int128 v203 = v207[7];
  __int128 v196 = v207[0];
  __int128 v197 = v207[1];
  __int128 v198 = v207[2];
  __int128 v199 = v207[3];
  unint64_t v87 = sub_1001ACAAC();
  unint64_t v88 = sub_100106E78();
  id v89 = v165;
  uint64_t v90 = v190;
  uint64_t v91 = v191;
  View.buttonStyle<A>(_:)(&v196, v191, &type metadata for MusicCardButtonStyle, v87, v88);
  sub_100106EBC((uint64_t)v207);
  uint64_t v92 = sub_1000E03B4(v90, &qword_1002BDAC8);
  uint64_t v93 = static Color.clear.getter(v92);
  *(void *)&__int128 v209 = v93;
  *(void *)&__int128 v196 = v91;
  *((void *)&v196 + 1) = &type metadata for MusicCardButtonStyle;
  *(void *)&__int128 v197 = v87;
  *((void *)&v197 + 1) = v88;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v196,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
  uint64_t v95 = (uint64_t)v166;
  uint64_t v96 = v168;
  View.cardSelectedBackgroundStyle<A>(_:)( &v209,  v168,  &type metadata for Color,  OpaqueTypeConformance2,  &protocol witness table for Color);
  __n128 v97 = swift_release(v93);
  uint64_t v98 = (*(uint64_t (**)(char *, uint64_t, __n128))(v167 + 8))(v89, v96, v97);
  uint64_t v99 = static Alignment.bottom.getter(v98);
  uint64_t v100 = v169;
  sub_100196A2C( 0.0,  1,  0.0,  1,  INFINITY,  0,  0.0,  1,  v169,  0.0,  1,  INFINITY,  0,  v99,  v101,  &qword_1002BDAD8,  &qword_1002BDAE0);
  uint64_t v102 = sub_1000E03B4(v95, &qword_1002BDAD8);
  LOBYTE(v90) = static Edge.Set.all.getter(v102);
  uint64_t v103 = v172;
  sub_1000E04D4(v100, v172, &qword_1002BDAE0);
  uint64_t v104 = v170;
  uint64_t v105 = v103 + *(int *)(v170 + 36);
  *(_BYTE *)uint64_t v105 = v90;
  *(_OWORD *)(v105 + 8) = xmmword_1001EEBB0;
  *(_OWORD *)(v105 + 24) = xmmword_1001EEBC0;
  *(_BYTE *)(v105 + 40) = 0;
  sub_1000E03B4(v100, &qword_1002BDAE0);
  uint64_t v106 = v171;
  __int128 v209 = *(_OWORD *)(v171 + 32);
  char v210 = *(_BYTE *)(v171 + 48);
  __int128 v194 = *(_OWORD *)(v171 + 32);
  char v195 = *(_BYTE *)(v171 + 48);
  uint64_t v107 = sub_1000DFE10(&qword_1002BDB78);
  FocusState.projectedValue.getter(&v196, v107);
  __int128 v194 = v209;
  char v195 = v210;
  uint64_t v108 = FocusState.wrappedValue.getter(&v193, v107);
  __int128 v109 = v179;
  static DefaultFocusEvaluationPriority.automatic.getter(v108);
  uint64_t v110 = sub_1000DFE10(&qword_1002BDB80);
  uint64_t v111 = sub_1000EACAC(&qword_1002BDB88, &qword_1002BDAE8, (void (*)(void))sub_1001ACC38);
  uint64_t v112 = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
  id v113 = v173;
  View.defaultFocus<A>(_:_:priority:)(&v196, &v193, v109, v104, v110, v111, v112);
  (*(void (**)(char *, uint64_t))(v180 + 8))(v109, v182);
  swift_release(v196);
  swift_release(*((void *)&v196 + 1));
  sub_1000E03B4(v103, &qword_1002BDAE8);
  id v114 = (uint64_t (*)())swift_allocObject(&unk_100277C38, 80LL, 7LL);
  __int128 v115 = *(_OWORD *)(v106 + 16);
  *((_OWORD *)v114 + 1) = *(_OWORD *)v106;
  *((_OWORD *)v114 + sub_1000E053C(v0 + 2) = v115;
  __int128 v116 = *(_OWORD *)(v106 + 48);
  *((_OWORD *)v114 + 3) = *(_OWORD *)(v106 + 32);
  *((_OWORD *)v114 + 4) = v116;
  uint64_t v118 = v174;
  uint64_t v117 = v175;
  uint64_t v119 = (uint64_t)v176;
  (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v176, v113, v175);
  uint64_t v120 = v178;
  id v121 = (uint64_t (**)())(v119 + *(int *)(v178 + 36));
  *id v121 = sub_1001ACD6C;
  v121[1] = v114;
  v121[2] = 0LL;
  v121[3] = 0LL;
  sub_1001ACD74((void *)v106);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v113, v117);
  uint64_t v122 = swift_getKeyPath(&unk_1001EF370);
  uint64_t v123 = swift_getKeyPath(&unk_1001EF398);
  uint64_t v124 = v164;
  static Published.subscript.getter(&v196, v124, v122, v123);

  swift_release(v122);
  swift_release(v123);
  uint64_t v125 = (_OWORD *)swift_allocObject(&unk_100277C60, 80LL, 7LL);
  __int128 v126 = *(_OWORD *)(v106 + 16);
  v125[1] = *(_OWORD *)v106;
  v125[2] = v126;
  __int128 v127 = *(_OWORD *)(v106 + 48);
  v125[3] = *(_OWORD *)(v106 + 32);
  v125[4] = v127;
  sub_1001ACD74((void *)v106);
  unint64_t v128 = sub_1001ACDD0();
  uint64_t v129 = v181;
  View.onChange<A>(of:initial:_:)( &v196,  0LL,  sub_1001ACDC8,  v125,  v120,  &type metadata for Bool,  v128,  &protocol witness table for Bool);
  swift_release(v125);
  sub_1000E03B4(v119, &qword_1002BDAF8);
  uint64_t v130 = swift_getKeyPath(&unk_1001EF448);
  uint64_t v131 = swift_getKeyPath(&unk_1001EF470);
  uint64_t v132 = v124;
  static Published.subscript.getter(&v196, v132, v130, v131);

  swift_release(v130);
  swift_release(v131);
  LOBYTE(v194) = v196;
  id v133 = (_OWORD *)swift_allocObject(&unk_100277C88, 80LL, 7LL);
  __int128 v134 = *(_OWORD *)(v106 + 16);
  v133[1] = *(_OWORD *)v106;
  v133[2] = v134;
  __int128 v135 = *(_OWORD *)(v106 + 48);
  v133[3] = *(_OWORD *)(v106 + 32);
  v133[4] = v135;
  sub_1001ACD74((void *)v106);
  *(void *)&__int128 v196 = v120;
  *((void *)&v196 + 1) = &type metadata for Bool;
  *(void *)&__int128 v197 = v128;
  *((void *)&v197 + 1) = &protocol witness table for Bool;
  uint64_t v136 = swift_getOpaqueTypeConformance2( &v196,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v137 = v184;
  View.onChange<A>(of:initial:_:)( &v194,  0LL,  sub_1001ACF1C,  v133,  v184,  &type metadata for Bool,  v136,  &protocol witness table for Bool);
  __n128 v138 = swift_release(v133);
  (*(void (**)(char *, uint64_t, __n128))(v183 + 8))(v129, v137, v138);
  uint64_t v139 = type metadata accessor for NowPlayingViewPresentation(0LL);
  uint64_t v140 = sub_1000DF308(&qword_1002BDA40, type metadata accessor for NowPlayingViewPresentation, (uint64_t)&unk_1001EF0A0);
  uint64_t v141 = (void *)ObservedObject.projectedValue.getter(v177, v132, v139, v140);
  uint64_t v142 = swift_getKeyPath(&unk_1001EF448);
  ObservedObject.Wrapper.subscript.getter(v142, v141, v140);
  swift_release(v142);

  __int128 v143 = v196;
  LOBYTE(v128) = v197;
  unint64_t v144 = (_OWORD *)swift_allocObject(&unk_100277CB0, 80LL, 7LL);
  __int128 v145 = *(_OWORD *)(v106 + 16);
  v144[1] = *(_OWORD *)v106;
  v144[2] = v145;
  __int128 v146 = *(_OWORD *)(v106 + 48);
  v144[3] = *(_OWORD *)(v106 + 32);
  v144[4] = v146;
  uint64_t v147 = swift_getKeyPath(&unk_1001EF490);
  uint64_t v148 = (uint64_t)v186;
  __int16 v149 = &v186[*(int *)(v185 + 36)];
  uint64_t v150 = (uint64_t *)&v149[*(int *)(sub_1000DFE10(&qword_1002BDBC8) + 64)];
  uint64_t *v150 = v147;
  uint64_t v151 = sub_1000DFE10(&qword_1002BDBD0);
  swift_storeEnumTagMultiPayload(v150, v151, 0LL);
  *(_OWORD *)__int16 v149 = v143;
  v149[16] = v128;
  *((void *)v149 + 3) = nullsub_46;
  *((void *)v149 + 4) = 0LL;
  *((void *)v149 + 5) = sub_1001ACF28;
  *((void *)v149 + 6) = v144;
  *((void *)v149 + 7) = 0LL;
  uint64_t v153 = v187;
  uint64_t v152 = v188;
  uint64_t v154 = v192;
  (*(void (**)(uint64_t, char *, uint64_t))(v187 + 16))(v148, v192, v188);
  sub_1001ACD74((void *)v106);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v152);
  return sub_1000E011C(v148, v189, &qword_1002BDB10);
}

uint64_t sub_10019E3CC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v173 = sub_1000DFE10(&qword_1002BDC40);
  __chkstk_darwin(v173, v4);
  uint64_t v172 = (uint64_t *)((char *)&v157 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v6 = sub_1000DFE10(&qword_1002BDC48);
  uint64_t v175 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v174 = (char *)&v157 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v171 = sub_1000DFE10(&qword_1002BDC50);
  __chkstk_darwin(v171, v9);
  uint64_t v178 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v177 = sub_1000DFE10(&qword_1002BDC58);
  __chkstk_darwin(v177, v11);
  uint64_t v182 = (uint64_t)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v180 = sub_1000DFE10(&qword_1002BDC60);
  __chkstk_darwin(v180, v13);
  uint64_t v184 = (uint64_t)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = sub_1000DFE10(&qword_1002BDC68);
  uint64_t v17 = __chkstk_darwin(v15, v16);
  uint64_t v19 = (char *)&v157 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v181 = (uint64_t)&v157 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v185 = (uint64_t)&v157 - v24;
  uint64_t v25 = sub_1000DFE10(&qword_1002BDC70);
  uint64_t v27 = __chkstk_darwin(v25, v26);
  uint64_t v166 = (uint64_t)&v157 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v157 - v30;
  uint64_t v32 = sub_1000DFE10(&qword_1002BDC78);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)&v157 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v168 = sub_1000DFE10(&qword_1002BDC80);
  __chkstk_darwin(v168, v36);
  uint64_t v167 = (uint64_t)&v157 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v188 = sub_1000DFE10(&qword_1002BDC88);
  uint64_t v190 = *(void *)(v188 - 8);
  uint64_t v39 = __chkstk_darwin(v188, v38);
  uint64_t v183 = (char *)&v157 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v39, v41);
  __int128 v179 = (char *)&v157 - v42;
  uint64_t v163 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v161 = *(void *)(v163 - 8);
  __chkstk_darwin(v163, v43);
  uint64_t v45 = (char *)&v157 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v165 = sub_1000DFE10(&qword_1002BDC90);
  double v164 = *(double *)(v165 - 8);
  uint64_t v47 = __chkstk_darwin(v165, v46);
  uint64_t v162 = (char *)&v157 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v47, v49);
  uint64_t v160 = (char *)&v157 - v50;
  uint64_t v51 = sub_1000DFE10(&qword_1002BDC98);
  uint64_t v53 = __chkstk_darwin(v51, v52);
  uint64_t v176 = (uint64_t)&v157 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v53, v55);
  uint64_t v189 = (uint64_t)&v157 - v56;
  uint64_t v170 = a1;
  __int128 v199 = a1[1];
  uint64_t v57 = (void *)*((void *)&v199 + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF930);
  uint64_t v59 = swift_getKeyPath(&unk_1001EF958);
  id v60 = v57;
  static Published.subscript.getter(&v192, v60, KeyPath, v59);
  swift_release(KeyPath);
  swift_release(v59);
  sub_1001ACFDC((uint64_t)&v199);
  uint64_t v61 = v193;
  uint64_t v187 = a2;
  uint64_t v186 = v19;
  id v169 = v60;
  if (v193)
  {
    uint64_t v159 = v6;
    uint64_t v158 = v192;
    uint64_t v62 = swift_getKeyPath(&unk_1001EF978);
    uint64_t v63 = swift_getKeyPath(&unk_1001EF9A0);
    id v64 = v60;
    static Published.subscript.getter(&v192, v64, v62, v63);
    swift_release(v62);
    swift_release(v63);
    uint64_t v65 = sub_1001ACFDC((uint64_t)&v199);
    if ((v192 & 1) != 0)
    {
      char v67 = 0;
    }

    else
    {
      uint64_t v72 = swift_getKeyPath(&unk_1001EF9C0);
      uint64_t v73 = swift_getKeyPath(&unk_1001EF9E8);
      id v74 = v64;
      static Published.subscript.getter(&v192, v74, v72, v73);
      swift_release(v72);
      swift_release(v73);
      uint64_t v65 = sub_1001ACFDC((uint64_t)&v199);
      if (v192 == 1)
      {
        uint64_t v75 = swift_getKeyPath(&unk_1001EFA08);
        uint64_t v76 = swift_getKeyPath(&unk_1001EFA30);
        static Published.subscript.getter(&v192, v74, v75, v76);
        swift_release(v75);
        swift_release(v76);
        uint64_t v65 = sub_1001ACFDC((uint64_t)&v199);
        char v67 = v192 ^ 1;
      }

      else
      {
        char v67 = 1;
      }
    }

    uint64_t v77 = v158;
    uint64_t v78 = static Font.caption.getter(v65, v66);
    uint64_t v79 = Text.font(_:)(v78, v77, v61, 0LL, _swiftEmptyArrayStorage);
    uint64_t v81 = v80;
    char v83 = v82;
    uint64_t v85 = v84;
    swift_bridgeObjectRelease(v61);
    swift_release(v78);
    int v86 = v67 & 1;
    if (v86) {
      double v87 = 1.0;
    }
    else {
      double v87 = 0.0;
    }
    uint64_t v88 = static Animation.default.getter();
    uint64_t v192 = v79;
    uint64_t v193 = v81;
    LOBYTE(v194) = v83 & 1;
    uint64_t v195 = v85;
    double v196 = v87;
    uint64_t v197 = v88;
    char v198 = v86;
    memset(v191, 0, sizeof(v191));
    static AutomationSemantics.nowPlaying(name:id:)(0x656E6961746E6F63LL, 0xED00007478655472LL, v191);
    sub_1000E03B4((uint64_t)v191, &qword_1002B7850);
    uint64_t v89 = sub_1000DFE10(&qword_1002BDCE8);
    unint64_t v90 = sub_1001AD9E8();
    uint64_t v91 = v162;
    View.automationSemantics(_:)(v45, v89, v90);
    (*(void (**)(char *, uint64_t))(v161 + 8))(v45, v163);
    sub_1000EC044(v192, v193, v194);
    swift_bridgeObjectRelease(v195);
    __n128 v92 = swift_release(v197);
    double v71 = v164;
    uint64_t v93 = *(void (**)(char *, char *, uint64_t, __n128))(*(void *)&v164 + 32LL);
    id v94 = v160;
    uint64_t v70 = v165;
    v93(v160, v91, v165, v92);
    uint64_t v69 = v189;
    ((void (*)(uint64_t, char *, uint64_t))v93)(v189, v94, v70);
    uint64_t v68 = 0LL;
    uint64_t v6 = v159;
  }

  else
  {
    uint64_t v68 = 1LL;
    uint64_t v69 = v189;
    uint64_t v70 = v165;
    double v71 = v164;
  }

  uint64_t v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)&v71 + 56LL))(v69, v68, 1LL, v70);
  *(void *)uint64_t v35 = static VerticalAlignment.center.getter(v95);
  *((void *)v35 + 1) = 0LL;
  v35[16] = 1;
  uint64_t v96 = *(int *)(sub_1000DFE10(&qword_1002BDCA0) + 44);
  if (qword_1002B7268 != -1) {
    swift_once(&qword_1002B7268, sub_10019D454);
  }
  __n128 v97 = &v35[v96];
  *(void *)uint64_t v31 = qword_1002C5F40;
  *((void *)v31 + 1) = 0LL;
  v31[16] = 0;
  uint64_t v98 = sub_1000DFE10(&qword_1002BDCA8);
  uint64_t v99 = v170;
  sub_10019F210(v170, (uint64_t)&v31[*(int *)(v98 + 44)]);
  uint64_t v100 = v166;
  sub_1000E04D4((uint64_t)v31, v166, &qword_1002BDC70);
  *(void *)__n128 v97 = 0LL;
  _OWORD v97[8] = 1;
  uint64_t v101 = sub_1000DFE10(&qword_1002BDCB0);
  sub_1000E04D4(v100, (uint64_t)&v35[v96 + *(int *)(v101 + 48)], &qword_1002BDC70);
  sub_1000E03B4((uint64_t)v31, &qword_1002BDC70);
  uint64_t v102 = sub_1000E03B4(v100, &qword_1002BDC70);
  uint64_t v103 = static Alignment.center.getter(v102);
  uint64_t v104 = v167;
  sub_100196A2C( 0.0,  1,  0.0,  1,  INFINITY,  0,  0.0,  1,  v167,  0.0,  1,  0.0,  1,  v103,  v105,  &qword_1002BDC78,  &qword_1002BDC80);
  sub_1000E03B4((uint64_t)v35, &qword_1002BDC78);
  unint64_t v106 = sub_1001AD8F4();
  uint64_t v107 = v183;
  View.focusSection()(v168, v106);
  sub_1000E03B4(v104, &qword_1002BDC80);
  uint64_t v108 = v179;
  uint64_t v109 = (*(uint64_t (**)(char *, char *, uint64_t))(v190 + 32))(v179, v107, v188);
  uint64_t v110 = static Alignment.center.getter(v109);
  uint64_t v112 = _FrameLayout.init(width:height:alignment:)(&v192, 0LL, 1LL, 0x4056000000000000LL, 0LL, v110, v111);
  uint64_t v168 = v192;
  LODWORD(v167) = v193;
  uint64_t v166 = v194;
  LODWORD(v165) = v195;
  double v164 = v196;
  uint64_t v163 = v197;
  uint64_t v113 = static VerticalAlignment.top.getter(v112);
  uint64_t v114 = (uint64_t)v172;
  *uint64_t v172 = v113;
  *(void *)(v114 + 8) = 0LL;
  *(_BYTE *)(v114 + swift_weakDestroy(v0 + 16) = 0;
  uint64_t v115 = sub_1000DFE10(&qword_1002BDCC8);
  sub_10019FC0C((uint64_t)v99, (char *)(v114 + *(int *)(v115 + 44)));
  uint64_t v116 = sub_1000E0374(&qword_1002BDCD0, &qword_1002BDC40, (uint64_t)&protocol conformance descriptor for HStack<A>);
  uint64_t v117 = v174;
  View.focusSection()(v173, v116);
  sub_1000E03B4(v114, &qword_1002BDC40);
  char v119 = static Edge.Set.leading.getter(v118);
  double v120 = EdgeInsets.init(_all:)(-16.0);
  uint64_t v122 = v121;
  uint64_t v124 = v123;
  uint64_t v126 = v125;
  uint64_t v127 = v175;
  uint64_t v128 = (uint64_t)v178;
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v178, v117, v6);
  uint64_t v129 = v128 + *(int *)(v171 + 36);
  *(_BYTE *)uint64_t v129 = v119;
  *(double *)(v129 + 8) = v120;
  *(void *)(v129 + swift_weakDestroy(v0 + 16) = v122;
  *(void *)(v129 + 24) = v124;
  *(void *)(v129 + 3sub_1000E053C(v0 + 2) = v126;
  *(_BYTE *)(v129 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v127 + 8))(v117, v6);
  uint64_t v130 = swift_getKeyPath(&unk_1001EF370);
  uint64_t v131 = swift_getKeyPath(&unk_1001EF398);
  id v132 = v169;
  static Published.subscript.getter(v191, v132, v130, v131);
  swift_release(v130);
  swift_release(v131);
  sub_1001ACFDC((uint64_t)&v199);
  if (LOBYTE(v191[0])) {
    double v133 = 0.0;
  }
  else {
    double v133 = 1.0;
  }
  uint64_t v134 = v182;
  sub_1000E04D4(v128, v182, &qword_1002BDC50);
  *(double *)(v134 + *(int *)(v177 + 36)) = v133;
  uint64_t v135 = sub_1000E03B4(v128, &qword_1002BDC50);
  uint64_t v136 = static Animation.easeInOut.getter(v135);
  uint64_t v137 = swift_getKeyPath(&unk_1001EF370);
  uint64_t v138 = swift_getKeyPath(&unk_1001EF398);
  static Published.subscript.getter(v191, v132, v137, v138);
  swift_release(v137);
  swift_release(v138);
  sub_1001ACFDC((uint64_t)&v199);
  LOBYTE(v138) = v191[0];
  uint64_t v139 = v184;
  sub_1000E04D4(v134, v184, &qword_1002BDC58);
  uint64_t v140 = v139 + *(int *)(v180 + 36);
  *(void *)uint64_t v140 = v136;
  *(_BYTE *)(v140 + 8) = v138;
  uint64_t v141 = sub_1000E03B4(v134, &qword_1002BDC58);
  uint64_t v142 = static Alignment.center.getter(v141);
  uint64_t v143 = v181;
  sub_100196A2C( 0.0,  1,  0.0,  1,  INFINITY,  0,  0.0,  1,  v181,  0.0,  1,  0.0,  1,  v142,  v144,  &qword_1002BDC60,  &qword_1002BDC68);
  sub_1000E03B4(v139, &qword_1002BDC60);
  uint64_t v145 = v185;
  sub_1000E011C(v143, v185, &qword_1002BDC68);
  uint64_t v146 = v176;
  sub_1000E04D4(v189, v176, &qword_1002BDC98);
  uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v190 + 16);
  uint64_t v148 = v188;
  v147(v107, v108, v188);
  uint64_t v149 = (uint64_t)v186;
  sub_1000E04D4(v145, (uint64_t)v186, &qword_1002BDC68);
  uint64_t v150 = v187;
  sub_1000E04D4(v146, v187, &qword_1002BDC98);
  uint64_t v151 = (int *)sub_1000DFE10((uint64_t *)&unk_1002BDCD8);
  uint64_t v152 = v150 + v151[12];
  *(void *)uint64_t v152 = 0LL;
  *(_BYTE *)(v152 + 8) = 1;
  v147((char *)(v150 + v151[16]), v107, v148);
  uint64_t v153 = v150 + v151[20];
  *(void *)uint64_t v153 = 0LL;
  *(_BYTE *)(v153 + 8) = 0;
  *(void *)(v153 + swift_weakDestroy(v0 + 16) = v168;
  *(_BYTE *)(v153 + 24) = v167;
  *(void *)(v153 + 3sub_1000E053C(v0 + 2) = v166;
  *(_BYTE *)(v153 + 40) = v165;
  uint64_t v154 = v163;
  *(double *)(v153 + 48) = v164;
  *(void *)(v153 + 56) = v154;
  sub_1000E04D4(v149, v150 + v151[24], &qword_1002BDC68);
  sub_1000E03B4(v145, &qword_1002BDC68);
  id v155 = *(void (**)(char *, uint64_t))(v190 + 8);
  v155(v108, v148);
  sub_1000E03B4(v189, &qword_1002BDC98);
  sub_1000E03B4(v149, &qword_1002BDC68);
  v155(v107, v148);
  return sub_1000E03B4(v146, &qword_1002BDC98);
}

uint64_t sub_10019F210@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v134 = a2;
  uint64_t v130 = sub_1000DFE10(&qword_1002BDD70);
  uint64_t v127 = *(void *)(v130 - 8);
  __chkstk_darwin(v130, v3);
  uint64_t v126 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v133 = sub_1000DFE10(&qword_1002BDD78);
  uint64_t v131 = *(void *)(v133 - 8);
  uint64_t v6 = __chkstk_darwin(v133, v5);
  id v132 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v125 = (char *)&v114 - v10;
  __chkstk_darwin(v9, v11);
  uint64_t v129 = (char *)&v114 - v12;
  uint64_t v13 = sub_1000DFE10(&qword_1002BDD80);
  uint64_t v15 = __chkstk_darwin(v13, v14);
  uint64_t v128 = (uint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v114 - v18;
  v153[0] = a1[1];
  uint64_t v20 = (void *)*((void *)&v153[0] + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v22 = swift_getKeyPath(&unk_1001EF350);
  id v23 = v20;
  static Published.subscript.getter(v151, v23, KeyPath, v22);
  swift_release(KeyPath);
  swift_release(v22);
  sub_1001ACFDC((uint64_t)v153);
  uint64_t v124 = v19;
  if (LOBYTE(v151[0]))
  {
    uint64_t v24 = swift_getKeyPath(&unk_1001EF250);
    uint64_t v25 = swift_getKeyPath(&unk_1001EF278);
    *(void *)&__int128 v123 = v23;
    id v26 = v23;
    static Published.subscript.getter(v151, v26, v24, v25);
    swift_release(v24);
    swift_release(v25);
    sub_1001ACFDC((uint64_t)v153);
    else {
      double v27 = 1.05;
    }
    uint64_t v28 = swift_getKeyPath(&unk_1001EF250);
    uint64_t v29 = swift_getKeyPath(&unk_1001EF278);
    id v30 = v26;
    static Published.subscript.getter(v151, v30, v28, v29);
    swift_release(v28);
    swift_release(v29);
    sub_1001ACFDC((uint64_t)v153);
    else {
      double v31 = 28.0;
    }
    __int128 v152 = *a1;
    uint64_t v32 = *((void *)&v152 + 1);
    sub_1001ADC50((uint64_t)v153);
    sub_100112B28((uint64_t)&v152);
    uint64_t v33 = type metadata accessor for NowPlayingPlayerObserver(0LL);
    uint64_t v34 = type metadata accessor for NowPlayingViewPresentation(0LL);
    uint64_t v35 = sub_1000DF308(&qword_1002BDD88, type metadata accessor for NowPlayingPlayerObserver, (uint64_t)&unk_1001EF0D8);
    uint64_t v36 = sub_1000DF308( &qword_1002BDD90,  type metadata accessor for NowPlayingViewPresentation,  (uint64_t)&unk_1001EF084);
    uint64_t v37 = VocalAttenuationView.init(playerObserver:viewPresentation:cornerRadius:)( &v140,  v32,  v30,  v33,  v34,  v35,  v36,  v31);
    uint64_t v38 = static UnitPoint.top.getter(v37);
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v43 = static Animation.easeInOut.getter(v38);
    uint64_t v44 = v43;
    uint64_t v45 = a1;
    if (qword_1002B7268 != -1) {
      uint64_t v43 = swift_once(&qword_1002B7268, sub_10019D454);
    }
    uint64_t v46 = qword_1002C5F40;
    char v47 = static Edge.Set.bottom.getter(v43);
    double v48 = EdgeInsets.init(_all:)(20.0);
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    v149[0] = 0;
    uint64_t v55 = static AnyTransition.growShrink.getter();
    v151[6] = v146;
    v151[7] = v147;
    v151[2] = v142;
    v151[3] = v143;
    v151[4] = v144;
    v151[5] = v145;
    v151[0] = v140;
    v151[1] = v141;
    *(void *)&v151[8] = v148;
    *((void *)&v151[8] + 1) = 0x3FF0000000000000LL;
    *(double *)&v151[9] = v27;
    *((void *)&v151[9] + 1) = v40;
    *(void *)&v151[10] = v42;
    *((void *)&v151[10] + 1) = v44;
    *(void *)&v151[11] = 0x3FC999999999999ALL;
    *((void *)&v151[11] + 1) = v46;
    *(void *)&v151[12] = sub_10019FBE8;
    *((void *)&v151[12] + 1) = 0LL;
    LOBYTE(v151[13]) = v47;
    *(_DWORD *)((char *)&v151[13] + 1) = v150[0];
    DWORD1(v151[13]) = *(_DWORD *)((char *)v150 + 3);
    *((double *)&v151[13] + 1) = v48;
    *(void *)&v151[14] = v50;
    *((void *)&v151[14] + 1) = v52;
    *(void *)&v151[15] = v54;
    BYTE8(v151[15]) = v149[0];
    *(void *)&v151[16] = v55;
    memcpy(v139, v151, sizeof(v139));
    __int128 v135 = v45[2];
    char v136 = *((_BYTE *)v45 + 48);
    uint64_t v56 = sub_1000DFE10(&qword_1002BDB78);
    FocusState.projectedValue.getter(&v137, v56);
    __int128 v57 = v137;
    LOBYTE(v135) = 0;
    uint64_t v58 = sub_1000DFE10(&qword_1002BDD98);
    uint64_t v59 = sub_1000DFE10(&qword_1002BDB80);
    unint64_t v60 = sub_1001ADCBC();
    uint64_t v61 = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
    View.focused<A>(_:equals:)(&v137, &v135, v58, v59, v60, v61);
    swift_release(*((void *)&v57 + 1));
    swift_release(v57);
    sub_1001ADF18(v151);
    uint64_t v62 = sub_1000DFE10(&qword_1002BDE20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56LL))(v19, 0LL, 1LL, v62);
    a1 = v45;
    id v23 = (id)v123;
  }

  else
  {
    uint64_t v63 = sub_1000DFE10(&qword_1002BDE20);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56LL))(v19, 1LL, 1LL, v63);
  }

  __int128 v135 = *a1;
  uint64_t v64 = *((void *)&v135 + 1);
  sub_1001ADC50((uint64_t)v153);
  sub_100112B28((uint64_t)&v135);
  double v65 = 0.0;
  uint64_t v66 = sub_1001AE208(v64, (uint64_t)v23, 0, 0, (uint64_t)&v140, 0.0);
  __int128 v123 = v140;
  uint64_t v67 = v141;
  uint64_t v68 = a1;
  uint64_t v69 = *((void *)&v141 + 1);
  int v122 = v142;
  uint64_t v121 = *((void *)&v142 + 1);
  int v119 = BYTE8(v143);
  int v120 = v143;
  uint64_t v70 = *((void *)&v144 + 1);
  uint64_t v117 = v145;
  uint64_t v118 = v144;
  int v116 = BYTE8(v145);
  uint64_t v115 = v146;
  char v72 = static Edge.Set.trailing.getter(v66, v71);
  double v73 = EdgeInsets.init(_all:)(-4.0);
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v80 = swift_getKeyPath(&unk_1001EF370);
  uint64_t v81 = swift_getKeyPath(&unk_1001EF398);
  id v82 = v23;
  static Published.subscript.getter(v151, v82, v80, v81);
  swift_release(v80);
  swift_release(v81);
  uint64_t v83 = sub_1001ACFDC((uint64_t)v153);
  if (!LOBYTE(v151[0])) {
    double v65 = 1.0;
  }
  LOBYTE(v150[0]) = 0;
  uint64_t v84 = static Animation.easeInOut.getter(v83);
  uint64_t v85 = swift_getKeyPath(&unk_1001EF370);
  uint64_t v86 = swift_getKeyPath(&unk_1001EF398);
  static Published.subscript.getter(v151, v82, v85, v86);
  swift_release(v85);
  swift_release(v86);
  sub_1001ACFDC((uint64_t)v153);
  char v87 = v151[0];
  v151[0] = v123;
  *(void *)&v151[1] = v67;
  *((void *)&v151[1] + 1) = v69;
  LOBYTE(v151[2]) = v122;
  *((void *)&v151[2] + 1) = v121;
  LOBYTE(v151[3]) = v120;
  BYTE8(v151[3]) = v119;
  *(void *)&v151[4] = v118;
  *((void *)&v151[4] + 1) = v70;
  *(void *)&v151[5] = v117;
  BYTE8(v151[5]) = v116;
  *(void *)&v151[6] = v115;
  BYTE8(v151[6]) = v72;
  *(double *)&v151[7] = v73;
  *((void *)&v151[7] + 1) = v75;
  *(void *)&v151[8] = v77;
  *((void *)&v151[8] + 1) = v79;
  LOBYTE(v151[9]) = 0;
  *((double *)&v151[9] + 1) = v65;
  *(void *)&v151[10] = v84;
  BYTE8(v151[10]) = v87;
  *(_OWORD *)&v139[128] = v151[8];
  *(_OWORD *)&v139[144] = v151[9];
  *(_OWORD *)&v139[153] = *(_OWORD *)((char *)&v151[9] + 9);
  *(_OWORD *)&v139[64] = v151[4];
  *(_OWORD *)&v139[80] = v151[5];
  *(_OWORD *)&v139[96] = v151[6];
  *(_OWORD *)&v139[112] = v151[7];
  *(_OWORD *)&v139[32] = v151[2];
  *(_OWORD *)&v139[48] = v151[3];
  *(_OWORD *)uint64_t v139 = v123;
  *(_OWORD *)&v139[16] = v151[1];
  uint64_t v88 = *((void *)v68 + 7);
  uint64_t v89 = sub_1000DFE10(&qword_1002BDE28);
  uint64_t v90 = type metadata accessor for DefaultNowPlayingMenuViewModel(0LL);
  unint64_t v91 = sub_1001AE394();
  uint64_t v92 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  uint64_t v93 = v126;
  View.environment<A>(_:)(v88, v89, v90, v91, v92);
  sub_1001AE4A0((uint64_t)v151);
  __int128 v137 = v68[2];
  char v138 = *((_BYTE *)v68 + 48);
  uint64_t v94 = sub_1000DFE10(&qword_1002BDB78);
  FocusState.projectedValue.getter(v139, v94);
  uint64_t v95 = *(void *)v139;
  uint64_t v96 = *(void *)&v139[8];
  __int128 v137 = *(_OWORD *)v139;
  char v138 = v139[16];
  v149[0] = 1;
  uint64_t v97 = sub_1000DFE10(&qword_1002BDB80);
  *(void *)uint64_t v139 = v89;
  *(void *)&v139[8] = v90;
  *(void *)&v139[16] = v91;
  *(void *)&v139[24] = v92;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v139,  &opaque type descriptor for <<opaque return type of View.environment<A>(_:)>>,  1LL);
  uint64_t v99 = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
  uint64_t v100 = v125;
  uint64_t v101 = v130;
  View.focused<A>(_:equals:)(&v137, v149, v130, v97, OpaqueTypeConformance2, v99);
  swift_release(v96);
  __n128 v102 = swift_release(v95);
  (*(void (**)(char *, uint64_t, __n128))(v127 + 8))(v93, v101, v102);
  uint64_t v103 = v131;
  uint64_t v104 = v129;
  uint64_t v105 = v133;
  (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v129, v100, v133);
  uint64_t v106 = (uint64_t)v124;
  uint64_t v107 = v128;
  sub_1000E04D4((uint64_t)v124, v128, &qword_1002BDD80);
  uint64_t v108 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v109 = v132;
  v108(v132, v104, v105);
  uint64_t v110 = v134;
  sub_1000E04D4(v107, v134, &qword_1002BDD80);
  uint64_t v111 = sub_1000DFE10(&qword_1002BDE68);
  v108((char *)(v110 + *(int *)(v111 + 48)), v109, v105);
  uint64_t v112 = *(void (**)(char *, uint64_t))(v103 + 8);
  v112(v104, v105);
  sub_1000E03B4(v106, &qword_1002BDD80);
  v112(v109, v105);
  return sub_1000E03B4(v107, &qword_1002BDD80);
}

uint64_t sub_10019FBE8()
{
  uint64_t v0 = static HorizontalAlignment.center.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_10019FC0C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v3 = sub_1000DFE10(&qword_1002BDD18);
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v86 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5, v7);
  uint64_t v84 = (uint64_t *)((char *)&v69 - v8);
  uint64_t v81 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v79 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v9);
  uint64_t v76 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v11);
  uint64_t v75 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v72 = sub_1000DFE10(&qword_1002BDD20);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72, v13);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v74 = sub_1000DFE10(&qword_1002BDD28);
  __chkstk_darwin(v74, v16);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v70 = sub_1000DFE10(&qword_1002BDD30);
  uint64_t v82 = *(void *)(v70 - 8);
  uint64_t v20 = __chkstk_darwin(v70, v19);
  uint64_t v83 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  double v73 = (char *)&v69 - v24;
  __chkstk_darwin(v23, v25);
  uint64_t v77 = (char *)&v69 - v26;
  v92[0] = *(_OWORD *)(a1 + 16);
  double v27 = (void *)*((void *)&v92[0] + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF208);
  uint64_t v29 = swift_getKeyPath(&unk_1001EF230);
  id v69 = v27;
  static Published.subscript.getter(&v87, v69, KeyPath, v29);
  swift_release(KeyPath);
  swift_release(v29);
  sub_1001ACFDC((uint64_t)v92);
  id v30 = 0LL;
  double v31 = (_OWORD *)swift_allocObject(&unk_100277DA0, 80LL, 7LL);
  __int128 v32 = *(_OWORD *)(a1 + 16);
  v31[1] = *(_OWORD *)a1;
  v31[2] = v32;
  __int128 v33 = *(_OWORD *)(a1 + 48);
  __int128 v34 = *(_OWORD *)(a1 + 32);
  v31[3] = v34;
  v31[4] = v33;
  *(void *)&__int128 v87 = v30;
  *((void *)&v87 + 1) = sub_1001ADB0C;
  *(void *)&__int128 v88 = v31;
  __int128 v89 = v34;
  char v90 = *(_BYTE *)(a1 + 48);
  sub_1001ACD74((void *)a1);
  uint64_t v35 = sub_1000DFE10(&qword_1002BDB78);
  FocusState.projectedValue.getter(v91, v35);
  uint64_t v37 = v91[0];
  uint64_t v36 = v91[1];
  LOBYTE(v89) = 2;
  uint64_t v38 = sub_1000DFE10(&qword_1002BDB80);
  unint64_t v39 = sub_1001ADB14();
  uint64_t v40 = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
  View.focused<A>(_:equals:)(v91, &v89, &type metadata for NowPlayingInfoButton, v38, v39, v40);
  swift_release(v31);
  swift_release(v36);
  swift_release(v37);

  uint64_t v41 = swift_getKeyPath(&unk_1001EF328);
  uint64_t v42 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter(&v87, v69, v41, v42);
  swift_release(v41);
  swift_release(v42);
  sub_1001ACFDC((uint64_t)v92);
  LOBYTE(v39) = (_BYTE)v87 != 0;
  uint64_t v43 = swift_getKeyPath(&unk_1001EF3B8);
  uint64_t v44 = swift_allocObject(&unk_100277DC8, 17LL, 7LL);
  *(_BYTE *)(v44 + swift_weakDestroy(v0 + 16) = v39;
  uint64_t v45 = v71;
  uint64_t v46 = v72;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v18, v15, v72);
  uint64_t v47 = v74;
  double v48 = (uint64_t *)&v18[*(int *)(v74 + 36)];
  *double v48 = v43;
  v48[1] = (uint64_t)sub_1001B165C;
  void v48[2] = v44;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v46);
  uint64_t v49 = v79;
  uint64_t v50 = v76;
  uint64_t v51 = v81;
  (*(void (**)(char *, void, uint64_t))(v79 + 104))( v76,  enum case for AutomationSemantics.NowPlayingElement.infoButton(_:),  v81);
  __int128 v87 = 0u;
  __int128 v88 = 0u;
  uint64_t v52 = v75;
  static AutomationSemantics.nowPlaying(_:id:)(v50, &v87);
  sub_1000E03B4((uint64_t)&v87, &qword_1002B7850);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
  unint64_t v53 = sub_1001ADB68();
  uint64_t v54 = v73;
  View.automationSemantics(_:)(v52, v47, v53);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v52, v80);
  sub_1000E03B4((uint64_t)v18, &qword_1002BDD28);
  uint64_t v55 = v82;
  uint64_t v56 = v77;
  uint64_t v57 = v70;
  uint64_t v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v82 + 32))(v77, v54, v70);
  uint64_t v59 = static VerticalAlignment.center.getter(v58);
  uint64_t v60 = (uint64_t)v84;
  *uint64_t v84 = v59;
  *(void *)(v60 + 8) = 0LL;
  *(_BYTE *)(v60 + swift_weakDestroy(v0 + 16) = 0;
  uint64_t v61 = sub_1000DFE10(&qword_1002BDD48);
  sub_1001A0310((__int128 *)a1, (void *)(v60 + *(int *)(v61 + 44)));
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v63 = v83;
  v62(v83, v56, v57);
  uint64_t v64 = v86;
  sub_1000E04D4(v60, v86, &qword_1002BDD18);
  double v65 = v85;
  v62(v85, v63, v57);
  uint64_t v66 = sub_1000DFE10(&qword_1002BDD50);
  sub_1000E04D4(v64, (uint64_t)&v65[*(int *)(v66 + 48)], &qword_1002BDD18);
  sub_1000E03B4(v60, &qword_1002BDD18);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v55 + 8);
  v67(v56, v57);
  sub_1000E03B4(v64, &qword_1002BDD18);
  return ((uint64_t (*)(char *, uint64_t))v67)(v63, v57);
}

uint64_t sub_1001A0278(uint64_t a1)
{
  __int128 v5 = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF448);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF470);
  static Published.subscript.getter(&v4, *((id *)&v5 + 1), KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  sub_10019AF48((v4 & 1) == 0);
  return sub_1001ACFDC((uint64_t)&v5);
}

uint64_t sub_1001A0310@<X0>(__int128 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v37 = a2;
  uint64_t v3 = sub_1000DFE10(&qword_1002BDD58);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3, v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v36 - v9;
  __int128 v11 = a1[1];
  __int128 v44 = *a1;
  __int128 v45 = v11;
  uint64_t v12 = *((void *)&v11 + 1);
  uint64_t v13 = *((void *)&v44 + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF810);
  uint64_t v15 = swift_getKeyPath(&unk_1001EF838);
  sub_1001ADC50((uint64_t)&v45);
  sub_100112B28((uint64_t)&v44);
  static Published.subscript.getter(v41, v13, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  sub_10011B518((uint64_t)&v44);
  char v16 = v41[0];
  uint64_t v17 = type metadata accessor for NowPlayingViewPresentation(0LL);
  uint64_t v18 = sub_1000DF308(&qword_1002BDA40, type metadata accessor for NowPlayingViewPresentation, (uint64_t)&unk_1001EF0A0);
  uint64_t v19 = ObservedObject.init(wrappedValue:)(v12, v17, v18);
  uint64_t v21 = v20;
  if (qword_1002B71C0 != -1) {
    swift_once(&qword_1002B71C0, sub_100143D6C);
  }
  v41[0] = v19;
  v41[1] = v21;
  char v42 = v16;
  uint64_t v43 = qword_1002C5E58;
  __int128 v38 = a1[2];
  char v39 = *((_BYTE *)a1 + 48);
  id v22 = (id)qword_1002C5E58;
  uint64_t v23 = sub_1000DFE10(&qword_1002BDB78);
  FocusState.projectedValue.getter(v40, v23);
  uint64_t v24 = v40[0];
  uint64_t v25 = v40[1];
  LOBYTE(v38) = 3;
  uint64_t v26 = sub_1000DFE10(&qword_1002BDB80);
  unint64_t v27 = sub_1001ADC78();
  uint64_t v28 = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
  View.focused<A>(_:equals:)(v40, &v38, &type metadata for ViewStyleControls, v26, v27, v28);

  swift_release(v25);
  __n128 v29 = swift_release(v24);
  uint64_t v30 = v36;
  double v31 = *(void (**)(char *, char *, uint64_t, __n128))(v36 + 16);
  v31(v7, v10, v3, v29);
  __int128 v32 = v37;
  *uint64_t v37 = 0LL;
  *((_BYTE *)v32 + 8) = 1;
  uint64_t v33 = sub_1000DFE10(&qword_1002BDD68);
  ((void (*)(char *, char *, uint64_t))v31)((char *)v32 + *(int *)(v33 + 48), v7, v3);
  __int128 v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v10, v3);
  return ((uint64_t (*)(char *, uint64_t))v34)(v7, v3);
}

uint64_t sub_1001A05C8(__int128 *a1)
{
  __int128 v2 = *a1;
  swift_retain(*((void *)&v2 + 1));
  sub_10019820C();
  return sub_10011B518((uint64_t)&v2);
}

uint64_t sub_1001A0608(uint64_t a1)
{
  __int128 v9 = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF448);
  uint64_t v2 = swift_getKeyPath(&unk_1001EF470);
  id v3 = *((id *)&v9 + 1);
  static Published.subscript.getter(&v8, v3, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  sub_1001ACFDC((uint64_t)&v9);
  if (v8 == 1)
  {
    uint64_t v4 = swift_getKeyPath(&unk_1001EF370);
    uint64_t v5 = swift_getKeyPath(&unk_1001EF398);
    static Published.subscript.getter(&v8, v3, v4, v5);
    swift_release(v4);
    swift_release(v5);
    sub_1001ACFDC((uint64_t)&v9);
    char v6 = v8 ^ 1;
  }

  else
  {
    char v6 = 0;
  }

  sub_10019AF48(v6 & 1);
  return sub_1001ACFDC((uint64_t)&v9);
}

uint64_t sub_1001A0708(uint64_t a1)
{
  __int128 v12 = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF448);
  uint64_t v3 = swift_getKeyPath(&unk_1001EF470);
  id v4 = *((id *)&v12 + 1);
  static Published.subscript.getter(&v10, v4, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  uint64_t result = sub_1001ACFDC((uint64_t)&v12);
  if ((v10 & 1) == 0)
  {
    uint64_t v6 = swift_getKeyPath(&unk_1001EF370);
    uint64_t v7 = swift_getKeyPath(&unk_1001EF398);
    static Published.subscript.getter(&v10, v4, v6, v7);
    swift_release(v6);
    swift_release(v7);
    uint64_t result = sub_1001ACFDC((uint64_t)&v12);
    if ((v10 & 1) == 0)
    {
      __int128 v10 = *(_OWORD *)(a1 + 32);
      char v11 = *(_BYTE *)(a1 + 48);
      char v9 = 2;
      uint64_t v8 = sub_1000DFE10(&qword_1002BDB78);
      return FocusState.wrappedValue.setter(&v9, v8);
    }
  }

  return result;
}

uint64_t sub_1001A0820@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  v60[0] = *a1;
  uint64_t v3 = *((void *)&v60[0] + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF4C0);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF4E8);
  uint64_t v6 = swift_retain(*((void *)&v60[0] + 1));
  static Published.subscript.getter(&v47, v6, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  sub_10011B518((uint64_t)v60);
  uint64_t v7 = v47;
  uint64_t v8 = v48;
  uint64_t v9 = v49;
  uint64_t v10 = v50;
  uint64_t v12 = v51;
  uint64_t v11 = v52;
  uint64_t v44 = v54;
  uint64_t v45 = v53;
  uint64_t v42 = v56;
  uint64_t v43 = v55;
  uint64_t v40 = v58;
  uint64_t v41 = v57;
  __int16 v39 = v59;
  uint64_t v13 = swift_getKeyPath(&unk_1001EF508);
  uint64_t v14 = swift_getKeyPath(&unk_1001EF530);
  uint64_t v15 = swift_retain(v3);
  static Published.subscript.getter(&v47, v15, v13, v14);
  swift_release(v13);
  swift_release(v14);
  sub_10011B518((uint64_t)v60);
  char v16 = v47;
  uint64_t v46 = v11;
  if (v47)
  {
    uint64_t v17 = v48;
    swift_bridgeObjectRetain(v48);
    sub_1001ACF80(v16, v17);
  }

  else
  {
    uint64_t v17 = 0LL;
  }

  uint64_t v18 = swift_getKeyPath(&unk_1001EF4C0);
  uint64_t v19 = swift_getKeyPath(&unk_1001EF4E8);
  uint64_t v20 = swift_retain(v3);
  static Published.subscript.getter(&v47, v20, v18, v19);
  swift_release(v18);
  swift_release(v19);
  uint64_t result = sub_10011B518((uint64_t)v60);
  uint64_t v22 = v48;
  if (v48 == 1)
  {
    char v23 = 5;
  }

  else
  {
    uint64_t v35 = v12;
    uint64_t v36 = v9;
    uint64_t v37 = v8;
    __int128 v38 = v7;
    uint64_t v33 = v49;
    uint64_t v34 = (uint64_t)v47;
    uint64_t v31 = v51;
    uint64_t v32 = v50;
    uint64_t v24 = v53;
    uint64_t v30 = v52;
    uint64_t v25 = v54;
    uint64_t v26 = v55;
    uint64_t v27 = v56;
    uint64_t v28 = v57;
    uint64_t v29 = v58;
    swift_unknownObjectRetain(v58);
    uint64_t result = sub_10013117C(v34, v22, v33, v32, v31, v30, v24, v25, v26, v27, v28, v29);
    if (v29)
    {
      swift_getObjectType(v29);
      char v23 = sub_1000EBCAC();
      uint64_t result = swift_unknownObjectRelease(v29);
    }

    else
    {
      char v23 = 5;
    }

    uint64_t v8 = v37;
    uint64_t v7 = v38;
    uint64_t v9 = v36;
    uint64_t v12 = v35;
  }

  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + swift_weakDestroy(v0 + 16) = v9;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 3sub_1000E053C(v0 + 2) = v12;
  *(void *)(a2 + 40) = v46;
  *(void *)(a2 + 48) = v45;
  *(void *)(a2 + 56) = v44;
  *(void *)(a2 + 64) = v43;
  *(void *)(a2 + 7sub_1000E053C(v0 + 2) = v42;
  *(void *)(a2 + 80) = v41;
  *(void *)(a2 + 88) = v40;
  *(_WORD *)(a2 + 96) = v39;
  *(void *)(a2 + 104) = v17;
  *(_BYTE *)(a2 + 11sub_1000E053C(v0 + 2) = v23;
  return result;
}

uint64_t sub_1001A0AB8@<X0>(uint64_t a1@<X8>)
{
  return sub_10019D4A8(a1);
}

uint64_t sub_1001A0AF0()
{
  uint64_t v1 = sub_1000DFE10(&qword_1002BE008);
  __chkstk_darwin(v1, v2);
  id v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002BE010);
  uint64_t v7 = __chkstk_darwin(v5, v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)id v4 = static VerticalAlignment.center.getter(v7);
  *((void *)v4 + 1) = 0x4039000000000000LL;
  v4[16] = 0;
  uint64_t v10 = sub_1000DFE10(&qword_1002BE018);
  uint64_t v11 = sub_1001A0D50((_OWORD *)v0, &v4[*(int *)(v10 + 44)]);
  uint64_t v12 = static Animation.easeInOut.getter(v11);
  __int128 v29 = *(_OWORD *)(v0 + 16);
  uint64_t v13 = (void *)*((void *)&v29 + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v15 = swift_getKeyPath(&unk_1001EF9E8);
  id v16 = v13;
  static Published.subscript.getter(&v28, v16, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  sub_1001ACFDC((uint64_t)&v29);
  uint64_t v17 = v28;
  sub_1000E04D4((uint64_t)v4, (uint64_t)v9, &qword_1002BE008);
  uint64_t v18 = (uint64_t *)&v9[*(int *)(v5 + 36)];
  *uint64_t v18 = v12;
  v18[1] = v17;
  sub_1000E03B4((uint64_t)v4, &qword_1002BE008);
  uint64_t v19 = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v20 = swift_getKeyPath(&unk_1001EFA80);
  static Published.subscript.getter(&v28, v16, v19, v20);
  swift_release(v19);
  swift_release(v20);
  sub_1001ACFDC((uint64_t)&v29);
  uint64_t v21 = swift_allocObject(&unk_1002780F8, 120LL, 7LL);
  __int128 v22 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v21 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v21 + 96) = v22;
  *(void *)(v21 + 11sub_1000E053C(v0 + 2) = *(void *)(v0 + 96);
  __int128 v23 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v21 + swift_weakDestroy(v0 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v21 + 3sub_1000E053C(v0 + 2) = v23;
  __int128 v24 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v21 + 64) = v24;
  sub_1001AF448((void *)v0);
  unint64_t v25 = sub_1001AF4B8();
  View.onChange<A>(of:initial:_:)( &v28,  0LL,  sub_1001AF440,  v21,  v5,  &type metadata for Bool,  v25,  &protocol witness table for Bool);
  swift_release(v21);
  return sub_1000E03B4((uint64_t)v9, &qword_1002BE010);
}

uint64_t sub_1001A0D50@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  v447 = a2;
  uint64_t v397 = sub_1000DFE10(&qword_1002BA2B0);
  uint64_t v395 = *(void *)(v397 - 8);
  __chkstk_darwin(v397, v3);
  v394 = (char *)&v382 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v393 = sub_1000DFE10(&qword_1002BE048);
  __chkstk_darwin(v393, v5);
  v398 = (char *)&v382 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v433 = sub_1000DFE10(&qword_1002BE050);
  uint64_t v8 = __chkstk_darwin(v433, v7);
  uint64_t v396 = (uint64_t)&v382 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v8, v10);
  uint64_t v399 = (uint64_t)&v382 - v11;
  uint64_t v431 = sub_1000DFE10(&qword_1002BE058);
  __chkstk_darwin(v431, v12);
  uint64_t v432 = (uint64_t)&v382 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(&qword_1002BE060);
  uint64_t v416 = *(void *)(v14 - 8);
  uint64_t v417 = v14;
  __chkstk_darwin(v14, v15);
  v415 = (char *)&v382 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v430 = sub_1000DFE10(&qword_1002BE068);
  uint64_t v18 = __chkstk_darwin(v430, v17);
  v419 = (char *)&v382 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  v418 = (char *)&v382 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v420 = (uint64_t)&v382 - v24;
  uint64_t v25 = sub_1000DFE10(&qword_1002BE070);
  uint64_t v444 = *(void *)(v25 - 8);
  uint64_t v445 = v25;
  __chkstk_darwin(v25, v26);
  v429 = (char *)&v382 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v28 = sub_1000DFE10(&qword_1002BE078);
  uint64_t v30 = __chkstk_darwin(v28, v29);
  uint64_t v446 = (uint64_t)&v382 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v30, v32);
  uint64_t v456 = (uint64_t)&v382 - v33;
  uint64_t v34 = sub_1000DFE10(&qword_1002BE080);
  uint64_t v386 = *(void *)(v34 - 8);
  uint64_t v387 = v34;
  __chkstk_darwin(v34, v35);
  v385 = (char *)&v382 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v411 = sub_1000DFE10(&qword_1002BE088);
  __chkstk_darwin(v411, v37);
  v388 = (char *)&v382 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v383 = sub_1000DFE10(&qword_1002BE090);
  uint64_t v389 = *(void *)(v383 - 8);
  __chkstk_darwin(v383, v39);
  v412 = (char *)&v382 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v442 = sub_1000DFE10(&qword_1002BE098);
  uint64_t v425 = *(void *)(v442 - 8);
  uint64_t v42 = __chkstk_darwin(v442, v41);
  v384 = (char *)&v382 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v45 = __chkstk_darwin(v42, v44);
  v392 = (char *)&v382 - v46;
  uint64_t v48 = __chkstk_darwin(v45, v47);
  v391 = (char *)&v382 - v49;
  __chkstk_darwin(v48, v50);
  uint64_t v390 = (uint64_t)&v382 - v51;
  uint64_t v52 = sub_1000DFE10(&qword_1002BE0A0);
  uint64_t v54 = __chkstk_darwin(v52, v53);
  uint64_t v426 = (uint64_t)&v382 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v54, v56);
  uint64_t v441 = (uint64_t)&v382 - v57;
  uint64_t v58 = type metadata accessor for LocalizedStringResource(0LL);
  __chkstk_darwin(v58, v59);
  v449 = (char *)&v382 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = type metadata accessor for AccessibilityTraits(0LL);
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v413 = v61;
  uint64_t v414 = v62;
  uint64_t v64 = __chkstk_darwin(v61, v63);
  v382 = (char *)&v382 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v64, v66);
  v409 = (char *)&v382 - v67;
  uint64_t v68 = sub_1000DFE10(&qword_1002BE0A8);
  uint64_t v401 = *(void *)(v68 - 8);
  uint64_t v402 = v68;
  __chkstk_darwin(v68, v69);
  v400 = (char *)&v382 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v421 = sub_1000DFE10(&qword_1002BE0B0);
  __chkstk_darwin(v421, v71);
  v403 = (char *)&v382 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v73 = sub_1000DFE10(&qword_1002BE0B8);
  uint64_t v404 = *(void *)(v73 - 8);
  uint64_t v405 = v73;
  __chkstk_darwin(v73, v74);
  v422 = (char *)&v382 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v427 = sub_1000DFE10(&qword_1002BE0C0);
  uint64_t v423 = *(void *)(v427 - 8);
  uint64_t v77 = __chkstk_darwin(v427, v76);
  v410 = (char *)&v382 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = __chkstk_darwin(v77, v79);
  v408 = (char *)&v382 - v81;
  uint64_t v83 = __chkstk_darwin(v80, v82);
  v407 = (char *)&v382 - v84;
  __chkstk_darwin(v83, v85);
  uint64_t v406 = (uint64_t)&v382 - v86;
  uint64_t v87 = sub_1000DFE10(&qword_1002BE0C8);
  uint64_t v89 = __chkstk_darwin(v87, v88);
  uint64_t v424 = (uint64_t)&v382 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v89, v91);
  v443 = (char *)&v382 - v92;
  uint64_t v93 = sub_1000DFE10(&qword_1002BE0D0);
  uint64_t v95 = __chkstk_darwin(v93, v94);
  uint64_t v451 = (uint64_t)&v382 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v95, v97);
  uint64_t v457 = (uint64_t)&v382 - v98;
  uint64_t v99 = sub_1000DFE10(&qword_1002BE0D8);
  uint64_t v101 = __chkstk_darwin(v99, v100);
  uint64_t v455 = (uint64_t)&v382 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v101, v103);
  uint64_t v459 = (uint64_t)&v382 - v104;
  uint64_t v105 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v106 = *(void *)(v105 - 8);
  __chkstk_darwin(v105, v107);
  uint64_t v109 = (char *)&v382 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v110 = type metadata accessor for AutomationSemantics(0LL);
  v452 = *(char **)(v110 - 8);
  __chkstk_darwin(v110, v111);
  uint64_t v113 = (char *)&v382 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v454 = sub_1000DFE10(&qword_1002BE0E0);
  v458 = *(void **)(v454 - 8);
  uint64_t v115 = __chkstk_darwin(v454, v114);
  uint64_t v117 = (char *)&v382 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v115, v118);
  int v120 = (char *)&v382 - v119;
  __int128 v121 = *a1;
  __int128 v122 = a1[1];
  v428 = a1;
  __int128 v474 = v122;
  v475[0] = v121;
  uint64_t v123 = *((void *)&v121 + 1);
  uint64_t v124 = (void *)*((void *)&v122 + 1);
  sub_100112B28((uint64_t)v475);
  sub_1001ADC50((uint64_t)&v474);
  uint64_t v450 = v123;
  id v448 = v124;
  sub_1001AF088(v123, (uint64_t)v124, (uint64_t)v472);
  sub_10011B518((uint64_t)v475);
  __int128 v468 = v472[4];
  __int128 v469 = v472[5];
  __int128 v470 = v472[6];
  uint64_t v471 = v473;
  __int128 v464 = v472[0];
  __int128 v465 = v472[1];
  __int128 v466 = v472[2];
  __int128 v467 = v472[3];
  v436 = *(void (**)(char *, void, uint64_t))(v106 + 104);
  v436(v109, enum case for AutomationSemantics.NowPlayingElement.vocalVolumeButton(_:), v105);
  __int128 v462 = 0u;
  __int128 v463 = 0u;
  static AutomationSemantics.nowPlaying(_:id:)(v109, &v462);
  sub_1000E03B4((uint64_t)&v462, &qword_1002B7850);
  uint64_t v125 = *(void (**)(char *, uint64_t))(v106 + 8);
  v437 = v109;
  uint64_t v439 = v105;
  v435 = v125;
  v125(v109, v105);
  uint64_t v126 = sub_1000DFE10(&qword_1002BE0E8);
  uint64_t v127 = sub_1000E0374(&qword_1002BE0F0, &qword_1002BE0E8, (uint64_t)&unk_1001EFE60);
  View.automationSemantics(_:)(v113, v126, v127);
  uint64_t v128 = (void (*)(char *, uint64_t))*((void *)v452 + 1);
  v438 = v113;
  uint64_t v440 = v110;
  v434 = v128;
  v128(v113, v110);
  uint64_t v129 = *((void *)&v464 + 1);
  uint64_t v130 = *((void *)&v466 + 1);
  uint64_t v131 = v468;
  uint64_t v132 = v469;
  uint64_t v133 = v470;
  uint64_t v134 = v471;

  swift_release(v129);
  swift_release(v130);
  swift_release(v131);
  swift_release(v132);
  swift_release(v133);
  __n128 v135 = swift_release(v134);
  char v136 = (void (*)(char *, char *, uint64_t, __n128))v458[4];
  v452 = v120;
  v453 = v117;
  v136(v120, v117, v454, v135);
  *((void *)&v465 + 1) = &type metadata for Feature.Laguna;
  *(void *)&__int128 v466 = sub_1001AE704();
  LOBYTE(v129) = isFeatureEnabled(_:)(&v464);
  sub_1000E053C(&v464);
  if ((v129 & 1) == 0) {
    goto LABEL_7;
  }
  *((void *)&v465 + 1) = &type metadata for Feature.TVMusic;
  *(void *)&__int128 v466 = sub_1000FF104();
  LOBYTE(v464) = 1;
  char v137 = isFeatureEnabled(_:)(&v464);
  sub_1000E053C(&v464);
  if ((v137 & 1) == 0) {
    goto LABEL_7;
  }
  id v138 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
  unsigned int v139 = [v138 hasMusicSubscription];

  if (!v139) {
    goto LABEL_7;
  }
  if (MSVDeviceSupportsVocalAttenuation()
    && (uint64_t KeyPath = swift_getKeyPath(&unk_1001EF298),
        uint64_t v141 = swift_getKeyPath(&unk_1001EF2C0),
        id v142 = v448,
        static Published.subscript.getter(&v464, v142, KeyPath, v141),
        swift_release(KeyPath),
        swift_release(v141),
        sub_1001ACFDC((uint64_t)&v474),
        v464 == 1)
    && ([(id)objc_opt_self(TVMusicSystemNowPlayingViewController) isVisible] & 1) == 0)
  {
    LOBYTE(v46sub_1000E053C(v0 + 2) = 0;
    sub_100112B28((uint64_t)v475);
    sub_1001ADC50((uint64_t)&v474);
    State.init(wrappedValue:)(&v464, &v462, &type metadata for Bool);
    char v363 = v464;
    uint64_t v364 = *((void *)&v464 + 1);
    uint64_t v365 = type metadata accessor for NowPlayingPlayerObserver(0LL);
    uint64_t v366 = sub_1000DF308(&qword_1002BDA48, type metadata accessor for NowPlayingPlayerObserver, (uint64_t)&unk_1001EF0F4);
    uint64_t v144 = v450;
    uint64_t v367 = swift_retain(v450);
    uint64_t v368 = ObservedObject.init(wrappedValue:)(v367, v365, v366);
    uint64_t v370 = v369;
    uint64_t v371 = type metadata accessor for NowPlayingViewPresentation(0LL);
    uint64_t v372 = sub_1000DF308( &qword_1002BDA40,  type metadata accessor for NowPlayingViewPresentation,  (uint64_t)&unk_1001EF0A0);
    uint64_t v373 = ObservedObject.init(wrappedValue:)(v142, v371, v372);
    v375 = v374;
    sub_10011B518((uint64_t)v475);
    *(void *)&__int128 v464 = v368;
    *((void *)&v464 + 1) = v370;
    *(void *)&__int128 v465 = v373;
    *((void *)&v465 + 1) = v375;
    LOBYTE(v466) = v363;
    *((void *)&v466 + 1) = v364;
    __int128 v460 = v428[2];
    char v461 = *((_BYTE *)v428 + 48);
    uint64_t v376 = sub_1000DFE10(&qword_1002BE040);
    FocusState.projectedValue.getter(&v462, v376);
    __int128 v377 = v462;
    uint64_t v378 = v463;
    unint64_t v379 = sub_1001AFB98();
    uint64_t v380 = v459;
    View.focused(_:)(v377, *((void *)&v377 + 1), v378, &type metadata for CameraEffectsButton, v379);

    swift_release(v370);
    swift_release(*((void *)&v377 + 1));
    swift_release(v377);
    swift_release(v364);
    uint64_t v381 = sub_1000DFE10(&qword_1002BE0F8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v381 - 8) + 56LL))(v380, 0LL, 1LL, v381);
  }

  else
  {
LABEL_7:
    uint64_t v143 = sub_1000DFE10(&qword_1002BE0F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56LL))(v459, 1LL, 1LL, v143);
    uint64_t v144 = v450;
  }

  uint64_t v145 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v146 = swift_getKeyPath(&unk_1001EF9E8);
  static Published.subscript.getter(&v464, v448, v145, v146);
  swift_release(v145);
  swift_release(v146);
  sub_1001ACFDC((uint64_t)&v474);
  if ((void)v464 == 2LL)
  {
    uint64_t v147 = swift_getKeyPath(&unk_1001EF660);
    uint64_t v148 = swift_getKeyPath(&unk_1001EF688);
    uint64_t v149 = swift_retain(v144);
    static Published.subscript.getter(&v464, v149, v147, v148);
    swift_release(v147);
    swift_release(v148);
    sub_10011B518((uint64_t)v475);
    if ((v464 & 1) != 0)
    {
      uint64_t v154 = swift_allocObject(&unk_100278198, 120LL, 7LL);
      id v155 = v428;
      *(void *)(v154 + 11sub_1000E053C(v0 + 2) = *((void *)v428 + 12);
      __int128 v156 = v155[5];
      *(_OWORD *)(v154 + 80) = v155[4];
      *(_OWORD *)(v154 + 96) = v156;
      __int128 v157 = v155[1];
      *(_OWORD *)(v154 + swift_weakDestroy(v0 + 16) = *v155;
      *(_OWORD *)(v154 + 3sub_1000E053C(v0 + 2) = v157;
      __int128 v158 = v155[3];
      *(_OWORD *)(v154 + 48) = v155[2];
      *(_OWORD *)(v154 + 64) = v158;
      uint64_t v160 = (char *)__chkstk_darwin(v155, v159);
      *(&v382 - sub_1000E053C(v0 + 2) = v160;
      sub_1001AF448(v160);
      uint64_t v161 = sub_1000DFE10(&qword_1002BE168);
      unint64_t v162 = sub_1001AF950();
      uint64_t v163 = v400;
      Button.init(action:label:)(sub_1001AFAEC, v154, sub_1001AFAF4, &v382 - 4, v161, v162);
      uint64_t v164 = swift_getKeyPath(&unk_1001EF738);
      uint64_t v165 = swift_getKeyPath(&unk_1001EF760);
      uint64_t v166 = swift_retain(v144);
      static Published.subscript.getter(&v464, v166, v164, v165);
      swift_release(v164);
      swift_release(v165);
      sub_10011B518((uint64_t)v475);
      uint64_t v167 = v464;
      uint64_t v168 = sub_1000E0374(&qword_1002BE188, &qword_1002BE0A8, (uint64_t)&protocol conformance descriptor for Button<A>);
      uint64_t v169 = v402;
      uint64_t v170 = (uint64_t)v403;
      View.isSelected(_:)(v167, v402, v168);
      (*(void (**)(char *, uint64_t))(v401 + 8))(v163, v169);
      uint64_t v171 = v437;
      uint64_t v172 = v439;
      v436(v437, enum case for AutomationSemantics.NowPlayingElement.shuffleButton(_:), v439);
      __int128 v464 = 0u;
      __int128 v465 = 0u;
      uint64_t v173 = v438;
      static AutomationSemantics.nowPlaying(_:id:)(v171, &v464);
      sub_1000E03B4((uint64_t)&v464, &qword_1002B7850);
      v435(v171, v172);
      unint64_t v174 = sub_1001AFAFC();
      View.automationSemantics(_:)(v173, v421, v174);
      v434(v173, v440);
      sub_1000E03B4(v170, &qword_1002BE0B0);
      uint64_t v175 = swift_getKeyPath(&unk_1001EF738);
      uint64_t v176 = swift_getKeyPath(&unk_1001EF760);
      uint64_t v177 = swift_retain(v144);
      static Published.subscript.getter(&v464, v177, v175, v176);
      swift_release(v175);
      swift_release(v176);
      uint64_t v178 = sub_10011B518((uint64_t)v475);
      if (v464 == 1)
      {
        __int128 v179 = v409;
        static AccessibilityTraits.isSelected.getter(v178);
        uint64_t v180 = v413;
      }

      else
      {
        *(void *)&__int128 v464 = _swiftEmptyArrayStorage;
        uint64_t v181 = sub_1000DF308( &qword_1002B83C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits,  (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
        uint64_t v182 = sub_1000DFE10((uint64_t *)&unk_1002BA140);
        uint64_t v183 = sub_1000E0374( &qword_1002B83C8,  (uint64_t *)&unk_1002BA140,  (uint64_t)&protocol conformance descriptor for [A]);
        __int128 v179 = v409;
        uint64_t v180 = v413;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v464, v182, v183, v413, v181);
      }

      uint64_t v184 = (uint64_t)v410;
      *(void *)&__int128 v464 = v421;
      *((void *)&v464 + 1) = v174;
      uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v464,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
      uint64_t v186 = v405;
      uint64_t v187 = v422;
      View.accessibilityAddTraits(_:)(v179, v405, OpaqueTypeConformance2);
      (*(void (**)(char *, uint64_t))(v414 + 8))(v179, v180);
      (*(void (**)(char *, uint64_t))(v404 + 8))(v187, v186);
      uint64_t v188 = swift_getKeyPath(&unk_1001EF738);
      uint64_t v189 = swift_getKeyPath(&unk_1001EF760);
      uint64_t v190 = swift_retain(v144);
      static Published.subscript.getter(&v464, v190, v188, v189);
      swift_release(v188);
      swift_release(v189);
      sub_10011B518((uint64_t)v475);
      if (v464 == 1)
      {
        unint64_t v191 = 0x8000000100229C40LL;
        unint64_t v192 = 0xD000000000000015LL;
      }

      else
      {
        unint64_t v192 = 0xD000000000000016LL;
        unint64_t v191 = 0x8000000100229C00LL;
      }

      LocalizedStringResource.init(stringLiteral:)(v192, v191);
      uint64_t v152 = v427;
      uint64_t v193 = v449;
      uint64_t v194 = String.init(localized:)(v449);
      uint64_t v196 = v195;
      *(void *)&__int128 v464 = v194;
      *((void *)&v464 + 1) = v195;
      unint64_t v197 = sub_1000E95D4();
      uint64_t v198 = (uint64_t)v408;
      ModifiedContent<>.accessibilityValue<A>(_:)(&v464, v152, &type metadata for String, v197);
      swift_bridgeObjectRelease(v196);
      sub_1000E03B4(v184, &qword_1002BE0C0);
      LocalizedStringResource.init(stringLiteral:)(0xD000000000000014LL, 0x8000000100226580LL);
      uint64_t v199 = String.init(localized:)(v193);
      uint64_t v201 = v200;
      *(void *)&__int128 v464 = v199;
      *((void *)&v464 + 1) = v200;
      uint64_t v202 = (uint64_t)v407;
      ModifiedContent<>.accessibilityLabel<A>(_:)(&v464, v152, &type metadata for String, v197);
      swift_bridgeObjectRelease(v201);
      sub_1000E03B4(v198, &qword_1002BE0C0);
      uint64_t v203 = v406;
      sub_1000E011C(v202, v406, &qword_1002BE0C0);
      uint64_t v204 = v203;
      uint64_t v151 = (uint64_t)v443;
      sub_1000E011C(v204, (uint64_t)v443, &qword_1002BE0C0);
      uint64_t v150 = 0LL;
    }

    else
    {
      uint64_t v150 = 1LL;
      uint64_t v151 = (uint64_t)v443;
      uint64_t v152 = v427;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v423 + 56))(v151, v150, 1LL, v152);
    uint64_t v205 = swift_getKeyPath(&unk_1001EF660);
    uint64_t v206 = swift_getKeyPath(&unk_1001EF688);
    uint64_t v207 = swift_retain(v144);
    static Published.subscript.getter(&v464, v207, v205, v206);
    swift_release(v205);
    swift_release(v206);
    sub_10011B518((uint64_t)v475);
    if ((v464 & 4) != 0)
    {
      uint64_t v209 = type metadata accessor for NowPlayingPlayerObserver(0LL);
      uint64_t v210 = sub_1000DF308( &qword_1002BDA48,  type metadata accessor for NowPlayingPlayerObserver,  (uint64_t)&unk_1001EF0F4);
      uint64_t v211 = swift_retain(v144);
      id v448 = (id)ObservedObject.init(wrappedValue:)(v211, v209, v210);
      uint64_t v208 = v212;
    }

    else
    {
      id v448 = 0LL;
      uint64_t v208 = 0LL;
    }

    id v213 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
    unsigned int v214 = [v213 hasMusicSubscription];

    if (v214
      && (uint64_t v215 = swift_getKeyPath(&unk_1001EF660),
          uint64_t v216 = swift_getKeyPath(&unk_1001EF688),
          uint64_t v217 = swift_retain(v144),
          static Published.subscript.getter(&v464, v217, v215, v216),
          swift_release(v215),
          swift_release(v216),
          sub_10011B518((uint64_t)v475),
          (v464 & 2) != 0))
    {
      uint64_t v220 = swift_allocObject(&unk_100278170, 120LL, 7LL);
      uint64_t v221 = v428;
      *(void *)(v220 + 11sub_1000E053C(v0 + 2) = *((void *)v428 + 12);
      __int128 v222 = v221[5];
      *(_OWORD *)(v220 + 80) = v221[4];
      *(_OWORD *)(v220 + 96) = v222;
      __int128 v223 = v221[1];
      *(_OWORD *)(v220 + swift_weakDestroy(v0 + 16) = *v221;
      *(_OWORD *)(v220 + 3sub_1000E053C(v0 + 2) = v223;
      __int128 v224 = v221[3];
      *(_OWORD *)(v220 + 48) = v221[2];
      *(_OWORD *)(v220 + 64) = v224;
      uint64_t v226 = (char *)__chkstk_darwin(v221, v225);
      *(&v382 - sub_1000E053C(v0 + 2) = v226;
      sub_1001AF448(v226);
      uint64_t v227 = sub_1000DFE10(&qword_1002BE150);
      unint64_t v228 = sub_1001AF8CC();
      uint64_t v229 = v385;
      Button.init(action:label:)(sub_1001AF8BC, v220, sub_1001AF8C4, &v382 - 4, v227, v228);
      uint64_t v230 = swift_getKeyPath(&unk_1001EF7C8);
      uint64_t v231 = swift_getKeyPath(&unk_1001EF7F0);
      uint64_t v232 = swift_retain(v144);
      static Published.subscript.getter(&v464, v232, v230, v231);
      swift_release(v230);
      swift_release(v231);
      sub_10011B518((uint64_t)v475);
      BOOL v233 = v464 == 3;
      uint64_t v234 = sub_1000E0374(&qword_1002BE178, &qword_1002BE080, (uint64_t)&protocol conformance descriptor for Button<A>);
      uint64_t v235 = v387;
      uint64_t v236 = (uint64_t)v388;
      View.isSelected(_:)(v233, v387, v234);
      (*(void (**)(char *, uint64_t))(v386 + 8))(v229, v235);
      uint64_t v237 = v437;
      uint64_t v238 = v439;
      v436(v437, enum case for AutomationSemantics.NowPlayingElement.autoPlayButton(_:), v439);
      __int128 v464 = 0u;
      __int128 v465 = 0u;
      uint64_t v239 = v438;
      static AutomationSemantics.nowPlaying(_:id:)(v237, &v464);
      sub_1000E03B4((uint64_t)&v464, &qword_1002B7850);
      v435(v237, v238);
      unint64_t v240 = sub_1001AFA00();
      View.automationSemantics(_:)(v239, v411, v240);
      v434(v239, v440);
      sub_1000E03B4(v236, &qword_1002BE088);
      uint64_t v241 = swift_getKeyPath(&unk_1001EF7C8);
      uint64_t v242 = swift_getKeyPath(&unk_1001EF7F0);
      uint64_t v243 = swift_retain(v144);
      static Published.subscript.getter(&v464, v243, v241, v242);
      swift_release(v241);
      swift_release(v242);
      uint64_t v244 = sub_10011B518((uint64_t)v475);
      if ((void)v464 == 3LL)
      {
        uint64_t v245 = v382;
        static AccessibilityTraits.isSelected.getter(v244);
        uint64_t v246 = v449;
        uint64_t v247 = v383;
        uint64_t v248 = (uint64_t)v384;
        uint64_t v249 = v413;
      }

      else
      {
        *(void *)&__int128 v464 = _swiftEmptyArrayStorage;
        uint64_t v250 = sub_1000DF308( &qword_1002B83C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits,  (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
        uint64_t v251 = sub_1000DFE10((uint64_t *)&unk_1002BA140);
        uint64_t v252 = sub_1000E0374( &qword_1002B83C8,  (uint64_t *)&unk_1002BA140,  (uint64_t)&protocol conformance descriptor for [A]);
        uint64_t v253 = v382;
        uint64_t v249 = v413;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v464, v251, v252, v413, v250);
        uint64_t v245 = v253;
        uint64_t v246 = v449;
        uint64_t v247 = v383;
        uint64_t v248 = (uint64_t)v384;
      }

      *(void *)&__int128 v464 = v411;
      *((void *)&v464 + 1) = v240;
      uint64_t v254 = swift_getOpaqueTypeConformance2( &v464,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
      uint64_t v255 = v245;
      uint64_t v256 = v245;
      uint64_t v257 = v412;
      View.accessibilityAddTraits(_:)(v255, v247, v254);
      (*(void (**)(char *, uint64_t))(v414 + 8))(v256, v249);
      (*(void (**)(char *, uint64_t))(v389 + 8))(v257, v247);
      uint64_t v258 = swift_getKeyPath(&unk_1001EF7C8);
      uint64_t v259 = swift_getKeyPath(&unk_1001EF7F0);
      uint64_t v260 = swift_retain(v144);
      static Published.subscript.getter(&v464, v260, v258, v259);
      swift_release(v258);
      swift_release(v259);
      sub_10011B518((uint64_t)v475);
      uint64_t v218 = v208;
      if ((void)v464 == 3LL)
      {
        unint64_t v261 = 0x8000000100229C40LL;
        unint64_t v262 = 0xD000000000000015LL;
      }

      else
      {
        unint64_t v262 = 0xD000000000000016LL;
        unint64_t v261 = 0x8000000100229C00LL;
      }

      LocalizedStringResource.init(stringLiteral:)(v262, v261);
      uint64_t v263 = String.init(localized:)(v246);
      uint64_t v265 = v264;
      *(void *)&__int128 v464 = v263;
      *((void *)&v464 + 1) = v264;
      unint64_t v266 = sub_1000E95D4();
      uint64_t v267 = (uint64_t)v392;
      uint64_t v268 = v442;
      ModifiedContent<>.accessibilityValue<A>(_:)(&v464, v442, &type metadata for String, v266);
      swift_bridgeObjectRelease(v265);
      sub_1000E03B4(v248, &qword_1002BE098);
      LocalizedStringResource.init(stringLiteral:)(0xD000000000000015LL, 0x8000000100229C20LL);
      uint64_t v269 = String.init(localized:)(v246);
      uint64_t v271 = v270;
      *(void *)&__int128 v464 = v269;
      *((void *)&v464 + 1) = v270;
      uint64_t v272 = (uint64_t)v391;
      ModifiedContent<>.accessibilityLabel<A>(_:)(&v464, v268, &type metadata for String, v266);
      swift_bridgeObjectRelease(v271);
      sub_1000E03B4(v267, &qword_1002BE098);
      uint64_t v273 = v390;
      sub_1000E011C(v272, v390, &qword_1002BE098);
      sub_1000E011C(v273, v441, &qword_1002BE098);
      uint64_t v219 = 0LL;
    }

    else
    {
      uint64_t v218 = v208;
      uint64_t v219 = 1LL;
    }

    uint64_t v274 = v441;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v425 + 56))(v441, v219, 1LL, v442);
    uint64_t v275 = (uint64_t)v443;
    uint64_t v276 = v424;
    sub_1000E04D4((uint64_t)v443, v424, &qword_1002BE0C8);
    uint64_t v277 = v426;
    sub_1000E04D4(v274, v426, &qword_1002BE0A0);
    uint64_t v278 = v451;
    sub_1000E04D4(v276, v451, &qword_1002BE0C8);
    uint64_t v279 = sub_1000DFE10(&qword_1002BE148);
    uint64_t v280 = (void *)(v278 + *(int *)(v279 + 48));
    *uint64_t v280 = v448;
    v280[1] = v218;
    sub_1000E04D4(v277, v278 + *(int *)(v279 + 64), &qword_1002BE0A0);
    swift_retain(v218);
    sub_1000E03B4(v274, &qword_1002BE0A0);
    sub_1000E03B4(v275, &qword_1002BE0C8);
    sub_1000E03B4(v277, &qword_1002BE0A0);
    swift_release(v218);
    sub_1000E03B4(v276, &qword_1002BE0C8);
    uint64_t v281 = sub_1000DFE10(&qword_1002BE100);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v281 - 8) + 56LL))(v278, 0LL, 1LL, v281);
    sub_1000E011C(v278, v457, &qword_1002BE0D0);
    uint64_t v144 = v450;
  }

  else
  {
    uint64_t v153 = sub_1000DFE10(&qword_1002BE100);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56LL))(v457, 1LL, 1LL, v153);
  }

  uint64_t v282 = swift_getKeyPath(&unk_1001EF8A0);
  uint64_t v283 = swift_getKeyPath(&unk_1001EF8C8);
  uint64_t v284 = swift_retain(v144);
  static Published.subscript.getter(&v464, v284, v282, v283);
  swift_release(v282);
  swift_release(v283);
  sub_10011B518((uint64_t)v475);
  uint64_t v285 = (void *)v464;
  if (!(void)v464)
  {
    id v448 = 0LL;
    uint64_t v441 = 0LL;
    v443 = 0LL;
    int v291 = 254;
    goto LABEL_43;
  }

  *((void *)&v465 + 1) = &type metadata for Feature.MediaPlayer;
  *(void *)&__int128 v466 = sub_1000F5800();
  char v286 = isFeatureEnabled(_:)(&v464);
  sub_1000E053C(&v464);
  if ((v286 & 1) != 0)
  {
    if (qword_1002B71A0 != -1) {
      swift_once(&qword_1002B71A0, sub_100120F90);
    }
    uint64_t v287 = (void *)qword_1002C5E28;
    *(void *)&__int128 v463 = 0LL;
    __int128 v462 = (unint64_t)qword_1002C5E28;
    BYTE8(v463) = 0;
    unint64_t v288 = sub_1001AF830();
    unint64_t v289 = sub_1001AF874();
    id v290 = v287;
    _ConditionalContent<>.init(storage:)( &v462,  &type metadata for NowPlayingFavoriteButton,  &type metadata for NowPlayingLibraryButton,  v288,  v289);
  }

  else
  {
    uint64_t v292 = swift_getKeyPath(&unk_1001EF8E8);
    uint64_t v293 = swift_getKeyPath(&unk_1001EF910);
    uint64_t v294 = swift_retain(v144);
    static Published.subscript.getter(&v464, v294, v292, v293);
    swift_release(v292);
    swift_release(v293);
    sub_10011B518((uint64_t)v475);
    if ((v464 & 0xFE) == 2)
    {

      id v448 = 0LL;
      uint64_t v441 = 0LL;
      v443 = 0LL;
      int v291 = 255;
      goto LABEL_43;
    }

    uint64_t v295 = v464 & 1;
    uint64_t v296 = swift_allocObject(&unk_100278148, 136LL, 7LL);
    *(_BYTE *)(v296 + swift_weakDestroy(v0 + 16) = v295;
    *(void *)(v296 + 24) = v285;
    v297 = v428;
    __int128 v298 = v428[5];
    *(_OWORD *)(v296 + 96) = v428[4];
    *(_OWORD *)(v296 + 11sub_1000E053C(v0 + 2) = v298;
    *(void *)(v296 + 128) = *((void *)v297 + 12);
    __int128 v299 = v297[1];
    *(_OWORD *)(v296 + 3sub_1000E053C(v0 + 2) = *v297;
    *(_OWORD *)(v296 + 48) = v299;
    __int128 v300 = v297[3];
    *(_OWORD *)(v296 + 64) = v297[2];
    *(_OWORD *)(v296 + 80) = v300;
    *(void *)&__int128 v462 = v295;
    *((void *)&v462 + 1) = sub_1001AF820;
    *(void *)&__int128 v463 = v296;
    BYTE8(v463) = 1;
    sub_1001AF448(v297);
    unint64_t v301 = sub_1001AF830();
    unint64_t v302 = sub_1001AF874();
    _ConditionalContent<>.init(storage:)( &v462,  &type metadata for NowPlayingFavoriteButton,  &type metadata for NowPlayingLibraryButton,  v301,  v302);
  }

  uint64_t v441 = *((void *)&v464 + 1);
  id v448 = (id)v464;
  v443 = (char *)v465;
  int v291 = BYTE8(v465);
LABEL_43:
  LODWORD(v44sub_1000E053C(v0 + 2) = v291;
  uint64_t v303 = swift_getKeyPath(&unk_1001EF8A0);
  uint64_t v304 = swift_getKeyPath(&unk_1001EF8C8);
  uint64_t v305 = swift_retain(v144);
  static Published.subscript.getter(&v464, v305, v303, v304);
  swift_release(v303);
  swift_release(v304);
  sub_10011B518((uint64_t)v475);
  v306 = (void *)v464;
  if ((void)v464)
  {
    if (([(id)v464 isLibraryAddEligible] & 1) != 0
      || (uint64_t v307 = swift_getKeyPath(&unk_1001EF858),
          uint64_t v308 = swift_getKeyPath(&unk_1001EF880),
          uint64_t v309 = swift_retain(v144),
          static Published.subscript.getter(&v464, v309, v307, v308),
          swift_release(v307),
          swift_release(v308),
          sub_10011B518((uint64_t)v475),
          (v464 & 1) == 0))
    {
      v330 = v437;
      uint64_t v331 = v439;
      v436(v437, enum case for AutomationSemantics.NowPlayingElement.moreButton(_:), v439);
      __int128 v464 = 0u;
      __int128 v465 = 0u;
      v332 = v438;
      static AutomationSemantics.nowPlaying(_:id:)(v330, &v464);
      sub_1000E03B4((uint64_t)&v464, &qword_1002B7850);
      v435(v330, v331);
      unint64_t v333 = sub_1001AF5CC();
      v334 = v415;
      View.automationSemantics(_:)(v332, &type metadata for ContextMenuButton, v333);
      v434(v332, v440);
      *(void *)&__int128 v464 = &type metadata for ContextMenuButton;
      *((void *)&v464 + 1) = v333;
      uint64_t v335 = swift_getOpaqueTypeConformance2( &v464,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
      uint64_t v336 = (uint64_t)v419;
      uint64_t v337 = v417;
      View.accessibilityIdentifier(_:)(0xD000000000000024LL, 0x8000000100229BB0LL, v417, v335);
      (*(void (**)(char *, uint64_t))(v416 + 8))(v334, v337);
      v338 = v449;
      LocalizedStringResource.init(stringLiteral:)(0xD000000000000018LL, 0x8000000100229BE0LL);
      uint64_t v339 = String.init(localized:)(v338);
      uint64_t v341 = v340;
      *(void *)&__int128 v464 = v339;
      *((void *)&v464 + 1) = v340;
      unint64_t v342 = sub_1000E95D4();
      uint64_t v343 = (uint64_t)v418;
      uint64_t v344 = v430;
      ModifiedContent<>.accessibilityLabel<A>(_:)(&v464, v430, &type metadata for String, v342);
      swift_bridgeObjectRelease(v341);
      v320 = &qword_1002BE068;
      sub_1000E03B4(v336, &qword_1002BE068);
      uint64_t v322 = v420;
      sub_1000E011C(v343, v420, &qword_1002BE068);
      uint64_t v345 = v432;
      sub_1000E04D4(v322, v432, &qword_1002BE068);
      swift_storeEnumTagMultiPayload(v345, v431, 0LL);
      unint64_t v324 = sub_1001AF610();
      unint64_t v325 = sub_1001AF6B4();
      uint64_t v327 = (uint64_t)v429;
      uint64_t v328 = v345;
      uint64_t v326 = v344;
      uint64_t v329 = v433;
    }

    else
    {
      v310 = v394;
      __n128 v311 = Button.init(action:label:)( nullsub_46,  0LL,  sub_1001B1640,  0LL,  &type metadata for Image,  &protocol witness table for Image);
      uint64_t v312 = v395;
      uint64_t v313 = v397;
      uint64_t v314 = (uint64_t)v398;
      (*(void (**)(char *, char *, uint64_t, __n128))(v395 + 16))(v398, v310, v397, v311);
      *(void *)(v314 + *(int *)(v393 + 36)) = 0x3FC999999999999ALL;
      (*(void (**)(char *, uint64_t))(v312 + 8))(v310, v313);
      uint64_t v315 = swift_getKeyPath(&unk_1001EF3B8);
      uint64_t v316 = swift_allocObject(&unk_100278120, 17LL, 7LL);
      *(_BYTE *)(v316 + swift_weakDestroy(v0 + 16) = 1;
      uint64_t v317 = v396;
      sub_1000E04D4(v314, v396, &qword_1002BE048);
      uint64_t v318 = v433;
      v319 = (uint64_t *)(v317 + *(int *)(v433 + 36));
      uint64_t *v319 = v315;
      v319[1] = (uint64_t)sub_1001B165C;
      v319[2] = v316;
      sub_1000E03B4(v314, &qword_1002BE048);
      v320 = &qword_1002BE050;
      uint64_t v321 = v317;
      uint64_t v322 = v399;
      sub_1000E011C(v321, v399, &qword_1002BE050);
      uint64_t v323 = v432;
      sub_1000E04D4(v322, v432, &qword_1002BE050);
      swift_storeEnumTagMultiPayload(v323, v431, 1LL);
      unint64_t v324 = sub_1001AF610();
      unint64_t v325 = sub_1001AF6B4();
      uint64_t v327 = (uint64_t)v429;
      uint64_t v326 = v430;
      uint64_t v328 = v323;
      uint64_t v329 = v318;
    }

    _ConditionalContent<>.init(storage:)(v328, v326, v329, v324, v325);

    sub_1000E03B4(v322, v320);
    uint64_t v346 = v456;
    sub_1000E011C(v327, v456, &qword_1002BE070);
    uint64_t v347 = 0LL;
  }

  else
  {
    uint64_t v347 = 1LL;
    uint64_t v346 = v456;
  }

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v444 + 56))(v346, v347, 1LL, v445);
  v348 = (void (*)(char *, char *, uint64_t))v458[2];
  v349 = v453;
  uint64_t v350 = v454;
  v348(v453, v452, v454);
  uint64_t v351 = v455;
  sub_1000E04D4(v459, v455, &qword_1002BE0D8);
  uint64_t v352 = v451;
  sub_1000E04D4(v457, v451, &qword_1002BE0D0);
  uint64_t v353 = v346;
  uint64_t v354 = v446;
  sub_1000E04D4(v353, v446, &qword_1002BE078);
  v355 = v447;
  v348(v447, v349, v350);
  v356 = (int *)sub_1000DFE10(&qword_1002BE108);
  sub_1000E04D4(v351, (uint64_t)&v355[v356[12]], &qword_1002BE0D8);
  sub_1000E04D4(v352, (uint64_t)&v355[v356[16]], &qword_1002BE0D0);
  v357 = &v355[v356[20]];
  id v358 = v448;
  uint64_t v359 = v441;
  *(void *)v357 = v448;
  *((void *)v357 + 1) = v359;
  v360 = v443;
  *((void *)v357 + sub_1000E053C(v0 + 2) = v443;
  LOBYTE(v349) = v442;
  v357[24] = v442;
  sub_1000E04D4(v354, (uint64_t)&v355[v356[24]], &qword_1002BE078);
  sub_1001AF554(v358, v359, v360, v349);
  sub_1000E03B4(v456, &qword_1002BE078);
  sub_1000E03B4(v457, &qword_1002BE0D0);
  sub_1000E03B4(v459, &qword_1002BE0D8);
  v361 = (void (*)(char *, uint64_t))v458[1];
  v361(v452, v350);
  sub_1000E03B4(v354, &qword_1002BE078);
  sub_1001AF590(v358, v359, v360, v349);
  sub_1000E03B4(v352, &qword_1002BE0D0);
  sub_1000E03B4(v455, &qword_1002BE0D8);
  return ((uint64_t (*)(char *, uint64_t))v361)(v453, v350);
}

void sub_1001A2FA4(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 8) + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v1)
  {
    id v2 = [v1 playQueue];
    if (v2)
    {
      id v3 = v2;
      objc_msgSend( v2,  "setShuffleEnabled:preserveCurrentItem:",  objc_msgSend(v2, "shuffleEnabled") ^ 1,  1);
    }
  }

uint64_t sub_1001A3020@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = Image.init(systemName:)(0x656C6666756873LL, 0xE700000000000000LL);
  __int128 v11 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF738);
  uint64_t v6 = swift_getKeyPath(&unk_1001EF760);
  uint64_t v7 = swift_retain(*((void *)&v11 + 1));
  static Published.subscript.getter(&v10, v7, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  uint64_t result = sub_10011B518((uint64_t)&v11);
  char v9 = v10;
  *(void *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v9;
  return result;
}

uint64_t sub_1001A30DC(__int128 *a1)
{
  __int128 v11 = *a1;
  uint64_t v1 = *((void *)&v11 + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF7C8);
  uint64_t v3 = swift_getKeyPath(&unk_1001EF7F0);
  uint64_t v4 = swift_retain(*((void *)&v11 + 1));
  static Published.subscript.getter(&v10, v4, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  sub_10011B518((uint64_t)&v11);
  uint64_t v5 = v10;
  uint64_t v6 = swift_getKeyPath(&unk_1001EF7C8);
  uint64_t v7 = swift_getKeyPath(&unk_1001EF7F0);
  if (v5 == 3) {
    uint64_t v8 = 2LL;
  }
  else {
    uint64_t v8 = 3LL;
  }
  uint64_t v10 = v8;
  swift_retain_n(v1, 2LL);
  static Published.subscript.setter(&v10, v1, v6, v7);
  sub_10019731C();
  return sub_10011B518((uint64_t)&v11);
}

uint64_t sub_1001A31D0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000DFE10(&qword_1002BDAA0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v8 = Image.init(systemName:)(0x7974696E69666E69LL, 0xE800000000000000LL);
  __int128 v20 = *a1;
  uint64_t v9 = *((void *)&v20 + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF7C8);
  uint64_t v11 = swift_getKeyPath(&unk_1001EF7F0);
  uint64_t v12 = swift_retain(v9);
  static Published.subscript.getter(&v19, v12, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  uint64_t v13 = sub_10011B518((uint64_t)&v20);
  LOBYTE(KeyPath) = v19 == 3;
  double v14 = static Font.Weight.semibold.getter(v13);
  uint64_t v15 = type metadata accessor for Font.Design(0LL);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56LL))(v7, 1LL, 1LL, v15);
  uint64_t v16 = static Font.system(size:weight:design:)(*(void *)&v14, 0LL, v7, 24.0);
  sub_1000E03B4((uint64_t)v7, &qword_1002BDAA0);
  uint64_t result = swift_getKeyPath(&unk_1001EF418);
  *(void *)a2 = v8;
  *(_BYTE *)(a2 + 8) = KeyPath;
  *(void *)(a2 + swift_weakDestroy(v0 + 16) = result;
  *(void *)(a2 + 24) = v16;
  return result;
}

uint64_t sub_1001A3338(char a1, id a2, __int128 *a3)
{
  if ((a1 & 1) != 0)
  {
    id v5 = [a2 title];
    if (v5)
    {
      uint64_t v6 = v5;
      static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      unint64_t v8 = v7;
    }

    else
    {
      unint64_t v8 = 0xE000000000000000LL;
    }

    uint64_t v10 = (void *)objc_opt_self(&OBJC_CLASS___TVMusicAlerts);
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v8);
    uint64_t v12 = swift_allocObject(&unk_1002781C0, 128LL, 7LL);
    __int128 v13 = a3[5];
    *(_OWORD *)(v12 + 80) = a3[4];
    *(_OWORD *)(v12 + 96) = v13;
    uint64_t v14 = *((void *)a3 + 12);
    __int128 v15 = a3[1];
    *(_OWORD *)(v12 + swift_weakDestroy(v0 + 16) = *a3;
    *(_OWORD *)(v12 + 3sub_1000E053C(v0 + 2) = v15;
    __int128 v16 = a3[3];
    *(_OWORD *)(v12 + 48) = a3[2];
    *(_OWORD *)(v12 + 64) = v16;
    *(void *)(v12 + 11sub_1000E053C(v0 + 2) = v14;
    *(void *)(v12 + 120) = a2;
    uint64_t v25 = sub_1001AFC30;
    uint64_t v26 = v12;
    *(void *)&__int128 v22 = _NSConcreteStackBlock;
    *((void *)&v22 + 1) = 1107296256LL;
    uint64_t v23 = sub_1001164CC;
    uint64_t v24 = &unk_1002781D8;
    uint64_t v17 = _Block_copy(&v22);
    uint64_t v18 = v26;
    sub_1001AF448(a3);
    id v19 = a2;
    id v20 =  objc_msgSend( v10,  "alertForLibraryDeleteConfirmationWithItemName:completion:",  v11,  v17,  swift_release(v18).n128_f64[0]);
    _Block_release(v17);

    id v21 = [(id)objc_opt_self(TVMusicAppDelegate) theApp];
    [v21 presentViewController:v20];

    return swift_unknownObjectRelease(v21);
  }

  else
  {
    __int128 v22 = *a3;
    swift_retain(*((void *)&v22 + 1));
    sub_100197030(a2);
    return sub_10011B518((uint64_t)&v22);
  }

uint64_t sub_1001A3500(uint64_t result, __int128 *a2, uint64_t a3)
{
  if ((result & 1) != 0)
  {
    __int128 v7 = *a2;
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EF8E8);
    uint64_t v5 = swift_getKeyPath(&unk_1001EF910);
    char v6 = 0;
    swift_retain_n(*((void *)&v7 + 1), 2LL);
    static Published.subscript.setter(&v6, *((void *)&v7 + 1), KeyPath, v5);
    [(id)objc_opt_self(TVMusicLibraryUtilities) removeMPObjectFromLibrary:a3];
    return sub_10011B518((uint64_t)&v7);
  }

  return result;
}

uint64_t sub_1001A35A4(uint64_t a1)
{
  __int128 v14 = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v3 = swift_getKeyPath(&unk_1001EFA80);
  id v4 = *((id *)&v14 + 1);
  static Published.subscript.getter(&v12, v4, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  sub_1001ACFDC((uint64_t)&v14);
  if ((v12 & 1) != 0
    || (uint64_t v5 = swift_getKeyPath(&unk_1001EF370),
        uint64_t v6 = swift_getKeyPath(&unk_1001EF398),
        static Published.subscript.getter(&v12, v4, v5, v6),
        swift_release(v5),
        swift_release(v6),
        sub_1001ACFDC((uint64_t)&v14),
        (v12 & 1) != 0))
  {
    uint64_t v7 = swift_getKeyPath(&unk_1001EFA58);
    uint64_t v8 = swift_getKeyPath(&unk_1001EFA80);
    static Published.subscript.getter(&v12, v4, v7, v8);
    swift_release(v7);
    swift_release(v8);
    uint64_t result = sub_1001ACFDC((uint64_t)&v14);
    __int128 v12 = *(_OWORD *)(a1 + 32);
    char v13 = *(_BYTE *)(a1 + 48);
    char v11 = 0;
  }

  else
  {
    __int128 v12 = *(_OWORD *)(a1 + 32);
    char v13 = *(_BYTE *)(a1 + 48);
    char v11 = 1;
  }

  uint64_t v10 = sub_1000DFE10(&qword_1002BE040);
  return FocusState.wrappedValue.setter(&v11, v10);
}

uint64_t sub_1001A372C()
{
  return sub_1001A0AF0();
}

uint64_t sub_1001A3774()
{
  uint64_t v0 = sub_1000DFE10(&qword_1002BA2B0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  id v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002BE2C0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002BE2C8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  char v13 = (char *)&v23[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  v23[3] = &type metadata for Feature.UIKit;
  v23[4] = sub_10011B5E0();
  char v14 = isFeatureEnabled(_:)(v23);
  sub_1000E053C(v23);
  if ((v14 & 1) != 0)
  {
    unint64_t v15 = sub_1001B08E0();
    Menu.init(onPresentationChanged:content:label:)( nullsub_46,  0LL,  sub_1001A3A34,  0LL,  sub_1001A3A94,  0LL,  &type metadata for Image,  &type metadata for NowPlayingMenu,  &protocol witness table for Image,  v15);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v13, v9);
    swift_storeEnumTagMultiPayload(v8, v5, 0LL);
    uint64_t v16 = sub_1000E0374(&qword_1002BE2D8, &qword_1002BE2C8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    uint64_t v17 = sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
    _ConditionalContent<>.init(storage:)(v8, v9, v0, v16, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }

  else
  {
    __n128 v19 = Button.init(action:label:)( sub_1001A3AD8,  0LL,  sub_1001B1640,  0LL,  &type metadata for Image,  &protocol witness table for Image);
    (*(void (**)(char *, char *, uint64_t, __n128))(v1 + 16))(v8, v4, v0, v19);
    swift_storeEnumTagMultiPayload(v8, v5, 1LL);
    uint64_t v20 = sub_1000E0374(&qword_1002BE2D8, &qword_1002BE2C8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    uint64_t v21 = sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
    _ConditionalContent<>.init(storage:)(v8, v9, v0, v20, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  }

uint64_t sub_1001A3A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DefaultNowPlayingMenuViewModel(0LL);
  uint64_t v3 = sub_1000DF308( &qword_1002BDE60,  type metadata accessor for DefaultNowPlayingMenuViewModel,  (uint64_t)&unk_1001EDFB4);
  uint64_t result = Environment.init<A>(_:)(v2, v2, v3);
  *(void *)a1 = result;
  *(_BYTE *)(a1 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1001A3A94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)(0x73697370696C6C65LL, 0xEF656C637269632ELL);
  *a1 = result;
  return result;
}

void sub_1001A3AD8()
{
  id v0 = [(id)objc_opt_self(NSNotificationCenter) defaultCenter];
  id v1 = v0;
  if (qword_1002B7260 != -1)
  {
    swift_once(&qword_1002B7260, sub_10019CDC8);
    id v0 = v1;
  }

  [v0 postNotificationName:qword_1002C5F38 object:0];
}

uint64_t sub_1001A3B60@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v9 = sub_1000DFE10(&qword_1002BDF18);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v44 = sub_1000DFE10(&qword_1002BDF20);
  __chkstk_darwin(v44, v13);
  unint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002BDF28);
  uint64_t v46 = *(void *)(v16 - 8);
  uint64_t v47 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v45 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v19 = sub_1000DFE10(&qword_1002BDF30);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v43 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)unint64_t v15 = static VerticalAlignment.center.getter(v21);
  *((void *)v15 + 1) = 0x4040800000000000LL;
  v15[16] = 0;
  uint64_t v23 = sub_1000DFE10(&qword_1002BDF38);
  sub_1001A3F8C(a1, a2, a3, a4, (uint64_t)&v15[*(int *)(v23 + 44)]);
  if (qword_1002B7270 != -1) {
    swift_once(&qword_1002B7270, sub_1001A60B0);
  }
  uint64_t v41 = qword_1002BD5E8;
  uint64_t v42 = qword_1002BD5E0;
  uint64_t v40 = qword_1002BD5F0;
  if (qword_1002B7278 != -1) {
    swift_once(&qword_1002B7278, sub_1001A60E4);
  }
  __int128 v24 = xmmword_1002BD5F8;
  uint64_t v25 = qword_1002BD608;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF208);
  uint64_t v27 = swift_getKeyPath(&unk_1001EF230);
  id v28 = a2;
  static Published.subscript.getter(v60, v28, KeyPath, v27);

  swift_release(KeyPath);
  swift_release(v27);
  if (LOBYTE(v60[0]) == 1) {
    id v29 = [(id)objc_opt_self(UIBlurEffect) effectWithStyle:4017];
  }
  else {
    id v29 = 0LL;
  }
  MusicCardButtonStyle.init(width:height:translation:cornerRadius:focusedSizeIncrease:focusedShadow:unfocusedShadow:maskOnSelect:backgroundEffect:)( v60,  0x404C000000000000LL,  0LL,  0x404C000000000000LL,  0LL,  v42,  v41,  v40,  0LL,  5.0,  5.0,  14.0,  0.1,  v24,  *((void *)&v24 + 1),  v25,  0,  v29);
  __int128 v57 = v60[8];
  __int128 v58 = v60[9];
  uint64_t v59 = v61;
  __int128 v53 = v60[4];
  __int128 v54 = v60[5];
  __int128 v55 = v60[6];
  __int128 v56 = v60[7];
  __int128 v49 = v60[0];
  __int128 v50 = v60[1];
  __int128 v51 = v60[2];
  __int128 v52 = v60[3];
  uint64_t v30 = sub_1000E0374( (unint64_t *)&unk_1002BDF40,  &qword_1002BDF20,  (uint64_t)&protocol conformance descriptor for HStack<A>);
  unint64_t v31 = sub_100106E78();
  uint64_t v33 = v44;
  uint64_t v32 = v45;
  View.buttonStyle<A>(_:)(&v49, v44, &type metadata for MusicCardButtonStyle, v30, v31);
  sub_100106EBC((uint64_t)v60);
  sub_1000E03B4((uint64_t)v15, &qword_1002BDF20);
  static Material.coreMaterial(bundle:provider:)(0LL, sub_1001A56AC, 0LL);
  uint64_t v34 = type metadata accessor for Material(0LL);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56LL))(v12, 0LL, 1LL, v34);
  *(void *)&__int128 v49 = v33;
  *((void *)&v49 + 1) = &type metadata for MusicCardButtonStyle;
  *(void *)&__int128 v50 = v30;
  *((void *)&v50 + 1) = v31;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v49,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
  uint64_t v36 = (uint64_t)v43;
  uint64_t v37 = v47;
  View.cardSelectedBackgroundStyle<A>(_:)(v12, v47, v34, OpaqueTypeConformance2, &protocol witness table for Material);
  sub_1000E03B4((uint64_t)v12, &qword_1002BDF18);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v37);
  return sub_1000E011C(v36, v48, &qword_1002BDF30);
}

uint64_t sub_1001A3F8C@<X0>(uint64_t a1@<X0>, id a2@<X1>, int a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  int v269 = a3;
  uint64_t v267 = a1;
  uint64_t v263 = a5;
  uint64_t v7 = type metadata accessor for LocalizedStringResource(0LL);
  __chkstk_darwin(v7, v8);
  uint64_t v279 = (char *)&v231 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v278 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v251 = *(void *)(v278 - 8);
  __chkstk_darwin(v278, v10);
  uint64_t v276 = (char *)&v231 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v277 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v252 = *(void *)(v277 - 8);
  __chkstk_darwin(v277, v12);
  uint64_t v275 = (char *)&v231 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v274 = type metadata accessor for AccessibilityTraits(0LL);
  uint64_t v250 = *(void *)(v274 - 8);
  uint64_t v15 = __chkstk_darwin(v274, v14);
  uint64_t v17 = (char *)&v231 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v15, v18);
  uint64_t v249 = (char *)&v231 - v19;
  uint64_t v268 = sub_1000DFE10(&qword_1002BA2B0);
  uint64_t v240 = *(void *)(v268 - 8);
  __chkstk_darwin(v268, v20);
  unint64_t v266 = (char *)&v231 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v22 = sub_1000DFE10(&qword_1002BDF50);
  uint64_t v24 = __chkstk_darwin(v22, v23);
  uint64_t v253 = (char *)&v231 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v24, v26);
  uint64_t v239 = (void (*)(char *, uint64_t))((char *)&v231 - v27);
  uint64_t v265 = sub_1000DFE10(&qword_1002BDF58);
  uint64_t v29 = __chkstk_darwin(v265, v28);
  unint64_t v31 = (char *)&v231 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29, v32);
  unint64_t v241 = (unint64_t)&v231 - v33;
  uint64_t v280 = sub_1000DFE10(&qword_1002BDF60);
  uint64_t v35 = __chkstk_darwin(v280, v34);
  uint64_t v270 = (uint64_t)&v231 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v35, v37);
  uint64_t v39 = (char *)&v231 - v38;
  uint64_t v271 = sub_1000DFE10(&qword_1002BDF68);
  uint64_t v41 = __chkstk_darwin(v271, v40);
  uint64_t v257 = (char *)&v231 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v41, v43);
  uint64_t v243 = (char *)&v231 - v44;
  uint64_t v273 = sub_1000DFE10(&qword_1002BDF70);
  uint64_t v247 = *(void *)(v273 - 8);
  uint64_t v46 = __chkstk_darwin(v273, v45);
  uint64_t v258 = (char *)&v231 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v46, v48);
  uint64_t v246 = (char *)&v231 - v49;
  uint64_t v248 = sub_1000DFE10(&qword_1002BDF78);
  uint64_t v51 = __chkstk_darwin(v248, v50);
  uint64_t v261 = (uint64_t)&v231 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v54 = __chkstk_darwin(v51, v53);
  uint64_t v260 = (uint64_t)&v231 - v55;
  uint64_t v57 = __chkstk_darwin(v54, v56);
  uint64_t v256 = (char *)&v231 - v58;
  uint64_t v60 = __chkstk_darwin(v57, v59);
  uint64_t v259 = (uint64_t)&v231 - v61;
  uint64_t v63 = __chkstk_darwin(v60, v62);
  uint64_t v245 = (char *)&v231 - v64;
  uint64_t v66 = __chkstk_darwin(v63, v65);
  uint64_t v244 = (char *)&v231 - v67;
  __chkstk_darwin(v66, v68);
  uint64_t v272 = (uint64_t)&v231 - v69;
  uint64_t v70 = sub_1000DFE10(&qword_1002BDF80);
  uint64_t v234 = *(void *)(v70 - 8);
  uint64_t v235 = v70;
  __chkstk_darwin(v70, v71);
  uint64_t v73 = (char *)&v231 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v74 = sub_1000DFE10(&qword_1002BDF88);
  uint64_t v237 = *(char **)(v74 - 8);
  uint64_t v238 = v74;
  uint64_t v76 = __chkstk_darwin(v74, v75);
  uint64_t v78 = (char *)&v231 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v76, v79);
  uint64_t v233 = (uint64_t)&v231 - v80;
  uint64_t v81 = sub_1000DFE10(&qword_1002BDF90);
  uint64_t v83 = __chkstk_darwin(v81, v82);
  uint64_t v255 = (uint64_t)&v231 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v83, v85);
  uint64_t v87 = (char *)&v231 - v86;
  *((void *)&v296 + 1) = &type metadata for Feature.MediaRemote;
  *(void *)&__int128 v297 = sub_1001AEDFC();
  char v88 = isFeatureEnabled(_:)(&v295);
  sub_1000E053C(&v295);
  unint64_t v262 = v17;
  uint64_t v264 = v87;
  uint64_t v254 = v31;
  uint64_t v242 = v39;
  if ((v88 & 1) != 0)
  {
    uint64_t KeyPath = swift_getKeyPath(&unk_1001EFC88);
    *(void *)&__int128 v295 = a4;
    uint64_t v90 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v295, KeyPath, v90);
    swift_release(KeyPath);
    uint64_t v91 = *(void **)&a4[OBJC_IVAR___TVMGroupSessionManager__currentSession];
    id v236 = v91;
    if (!v91)
    {
      __int16 v92 = sub_1001AF238((uint64_t)a4);
      BOOL v94 = v92 == 2 || (v92 & 0x101) != 1;
      id v236 = (id)v94;
    }

    uint64_t v232 = a4;
    uint64_t v95 = qword_1002B71C0;
    id v96 = v91;
    if (v95 != -1) {
      swift_once(&qword_1002B71C0, sub_100143D6C);
    }
    id v231 = a2;
    *(void *)&__int128 v281 = 1LL;
    id v97 = (id)qword_1002C5E58;
    uint64_t v98 = sub_1000DFE10(&qword_1002BDFF8);
    State.init(wrappedValue:)(&v295, &v281, v98);
    __int128 v99 = v295;
    id v292 = v97;
    __int128 v293 = v295;
    id v294 = v236;
    if (qword_1002B7270 != -1) {
      swift_once(&qword_1002B7270, sub_1001A60B0);
    }
    uint64_t v100 = qword_1002BD5E0;
    uint64_t v101 = qword_1002BD5E8;
    uint64_t v102 = qword_1002BD5F0;
    if (qword_1002B7278 != -1) {
      swift_once(&qword_1002B7278, sub_1001A60E4);
    }
    LOWORD(v228) = 0;
    MusicCardButtonStyle.init(width:height:translation:cornerRadius:focusedSizeIncrease:focusedShadow:unfocusedShadow:maskOnSelect:backgroundEffect:)( &v295,  0LL,  1LL,  0x404C000000000000LL,  0LL,  v100,  v101,  v102,  0LL,  5.0,  5.0,  14.0,  0.1,  xmmword_1002BD5F8,  *((void *)&xmmword_1002BD5F8 + 1),  qword_1002BD608,  (_DWORD)v228,  0LL);
    __int128 v289 = v303;
    __int128 v290 = v304;
    uint64_t v291 = v305;
    __int128 v285 = v299;
    __int128 v286 = v300;
    __int128 v287 = v301;
    __int128 v288 = v302;
    __int128 v281 = v295;
    __int128 v282 = v296;
    __int128 v283 = v297;
    __int128 v284 = v298;
    unint64_t v103 = sub_1001AF3E0();
    unint64_t v104 = sub_100106E78();
    View.buttonStyle<A>(_:)( &v281,  &type metadata for SharePlayManagementButton,  &type metadata for MusicCardButtonStyle,  v103,  v104);
    sub_100106EBC((uint64_t)&v295);

    sub_100162960((id)v99);
    swift_release(*((void *)&v99 + 1));
    sub_100162960(v236);
    uint64_t v105 = swift_getKeyPath(&unk_1001EF328);
    uint64_t v106 = swift_getKeyPath(&unk_1001EF350);
    a2 = v231;
    id v107 = v231;
    static Published.subscript.getter(&v281, v107, v105, v106);

    swift_release(v105);
    swift_release(v106);
    LOBYTE(v107) = (_BYTE)v281 != 0;
    uint64_t v108 = swift_getKeyPath(&unk_1001EF3B8);
    uint64_t v109 = swift_allocObject(&unk_1002780D0, 17LL, 7LL);
    *(_BYTE *)(v109 + swift_weakDestroy(v0 + 16) = (_BYTE)v107;
    uint64_t v111 = v234;
    uint64_t v110 = v235;
    (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v78, v73, v235);
    uint64_t v112 = v238;
    uint64_t v113 = (uint64_t *)&v78[*(int *)(v238 + 36)];
    *uint64_t v113 = v108;
    v113[1] = (uint64_t)sub_1001B165C;
    v113[2] = v109;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v110);
    uint64_t v114 = v233;
    sub_1000E011C((uint64_t)v78, v233, &qword_1002BDF88);
    uint64_t v87 = v264;
    sub_1000E011C(v114, (uint64_t)v264, &qword_1002BDF88);
    uint64_t v115 = 0LL;
    a4 = v232;
  }

  else
  {
    uint64_t v115 = 1LL;
    uint64_t v112 = v238;
  }

  BOOL v116 = 1;
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v237 + 7))(v87, v115, 1LL, v112);
  id v117 = [(id)objc_opt_self(TVMusicLyricsRequest) sharedInstance];
  unsigned int v118 = [v117 storeFrontSupportsLyrics];

  id v119 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
  unsigned int v120 = [v119 allowsLyricsFromCatalog];

  char v121 = v269;
  int v122 = v120 & (v269 ^ 1);
  uint64_t v123 = swift_allocObject(&unk_100278030, 48LL, 7LL);
  *(void *)(v123 + swift_weakDestroy(v0 + 16) = v267;
  *(void *)(v123 + 24) = a2;
  *(_BYTE *)(v123 + 3sub_1000E053C(v0 + 2) = v121 & 1;
  *(void *)(v123 + 40) = a4;
  __chkstk_darwin(v123, v124);
  uint64_t v227 = v125;
  id v228 = a2;
  LODWORD(v238) = v126;
  LOBYTE(v229) = v126;
  uint64_t v230 = a4;
  id v127 = a2;
  uint64_t v237 = a4;
  uint64_t v128 = v266;
  Button.init(action:label:)( sub_1001AEE6C,  v123,  sub_1001AEE7C,  &v226,  &type metadata for Image,  &protocol witness table for Image);
  uint64_t v129 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v130 = swift_getKeyPath(&unk_1001EF9E8);
  id v131 = v127;
  static Published.subscript.getter(&v281, v131, v129, v130);

  swift_release(v129);
  swift_release(v130);
  BOOL v132 = v281 == 1;
  uint64_t v133 = (void *)sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
  uint64_t v134 = (uint64_t)v239;
  uint64_t v135 = v268;
  id v236 = v133;
  View.isSelected(_:)(v132, v268, v133);
  uint64_t v240 = *(void *)(v240 + 8);
  ((void (*)(char *, uint64_t))v240)(v128, v135);
  int v136 = v118 & v122;
  double v137 = 0.2;
  if (v136) {
    double v138 = 1.0;
  }
  else {
    double v138 = 0.2;
  }
  uint64_t v139 = v241;
  sub_1000E04D4(v134, v241, &qword_1002BDF50);
  *(double *)(v139 + *(int *)(v265 + 36)) = v138;
  sub_1000E03B4(v134, &qword_1002BDF50);
  if (v136)
  {
    uint64_t v140 = swift_getKeyPath(&unk_1001EF328);
    uint64_t v141 = swift_getKeyPath(&unk_1001EF350);
    id v142 = v131;
    static Published.subscript.getter(&v281, v142, v140, v141);

    swift_release(v140);
    swift_release(v141);
    BOOL v116 = (_BYTE)v281 != 0;
  }

  uint64_t v143 = swift_getKeyPath(&unk_1001EF3B8);
  uint64_t v144 = swift_allocObject(&unk_100278058, 17LL, 7LL);
  *(_BYTE *)(v144 + swift_weakDestroy(v0 + 16) = v116;
  uint64_t v145 = v242;
  sub_1000E04D4(v139, (uint64_t)v242, &qword_1002BDF58);
  uint64_t v146 = (uint64_t *)&v145[*(int *)(v280 + 36)];
  uint64_t *v146 = v143;
  v146[1] = (uint64_t)sub_1001B165C;
  v146[2] = v144;
  sub_1000E03B4(v139, &qword_1002BDF58);
  uint64_t v147 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v148 = swift_getKeyPath(&unk_1001EF9E8);
  id v149 = v131;
  static Published.subscript.getter(&v281, v149, v147, v148);

  swift_release(v147);
  swift_release(v148);
  uint64_t v151 = v249;
  if ((void)v281 == 1LL)
  {
    static AccessibilityTraits.isSelected.getter(v150);
    uint64_t v152 = v274;
  }

  else
  {
    *(void *)&__int128 v281 = _swiftEmptyArrayStorage;
    uint64_t v153 = sub_1000DF308( &qword_1002B83C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits,  (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    uint64_t v154 = sub_1000DFE10((uint64_t *)&unk_1002BA140);
    uint64_t v155 = sub_1000E0374(&qword_1002B83C8, (uint64_t *)&unk_1002BA140, (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v156 = v154;
    uint64_t v152 = v274;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v281, v156, v155, v274, v153);
  }

  unint64_t v157 = sub_1001AEE9C();
  uint64_t v158 = (uint64_t)v243;
  unint64_t v241 = v157;
  View.accessibilityAddTraits(_:)(v151, v280, v157);
  uint64_t v250 = *(void *)(v250 + 8);
  ((void (*)(char *, uint64_t))v250)(v151, v152);
  sub_1000E03B4((uint64_t)v145, &qword_1002BDF60);
  uint64_t v159 = v251;
  uint64_t v160 = v276;
  uint64_t v161 = v278;
  uint64_t v249 = *(char **)(v251 + 104);
  ((void (*)(char *, void, uint64_t))v249)( v276,  enum case for AutomationSemantics.NowPlayingElement.lyricsButton(_:),  v278);
  __int128 v281 = 0u;
  __int128 v282 = 0u;
  unint64_t v162 = v275;
  static AutomationSemantics.nowPlaying(_:id:)(v160, &v281);
  sub_1000E03B4((uint64_t)&v281, &qword_1002B7850);
  uint64_t v242 = *(char **)(v159 + 8);
  ((void (*)(char *, uint64_t))v242)(v160, v161);
  unint64_t v163 = sub_1001AEFDC();
  uint64_t v164 = v246;
  uint64_t v165 = v271;
  View.automationSemantics(_:)(v162, v271, v163);
  uint64_t v239 = *(void (**)(char *, uint64_t))(v252 + 8);
  v239(v162, v277);
  sub_1000E03B4(v158, &qword_1002BDF68);
  *(void *)&__int128 v281 = v165;
  *((void *)&v281 + 1) = v163;
  BOOL v166 = 1;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v281,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  uint64_t v168 = (uint64_t)v245;
  uint64_t v169 = v273;
  uint64_t v252 = OpaqueTypeConformance2;
  View.accessibilityIdentifier(_:)(0xD00000000000001DLL, 0x8000000100229B30LL, v273, OpaqueTypeConformance2);
  uint64_t v251 = *(void *)(v247 + 8);
  ((void (*)(char *, uint64_t))v251)(v164, v169);
  uint64_t v170 = v279;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013LL, 0x8000000100229B50LL);
  uint64_t v171 = String.init(localized:)(v170);
  uint64_t v173 = v172;
  *(void *)&__int128 v281 = v171;
  *((void *)&v281 + 1) = v172;
  unint64_t v174 = sub_1000E95D4();
  uint64_t v175 = (uint64_t)v244;
  ModifiedContent<>.accessibilityLabel<A>(_:)(&v281, v248, &type metadata for String, v174);
  swift_bridgeObjectRelease(v173);
  sub_1000E03B4(v168, &qword_1002BDF78);
  sub_1000E011C(v175, v272, &qword_1002BDF78);
  uint64_t v176 = swift_allocObject(&unk_100278080, 48LL, 7LL);
  *(void *)(v176 + swift_weakDestroy(v0 + 16) = v267;
  *(void *)(v176 + 24) = v149;
  *(_BYTE *)(v176 + 3sub_1000E053C(v0 + 2) = v238;
  uint64_t v177 = v237;
  *(void *)(v176 + 40) = v237;
  id v178 = v149;
  __int128 v179 = v177;
  uint64_t v180 = v266;
  Button.init(action:label:)( sub_1001AF060,  v176,  sub_1001A566C,  0LL,  &type metadata for Image,  &protocol witness table for Image);
  uint64_t v181 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v182 = swift_getKeyPath(&unk_1001EF9E8);
  id v183 = v178;
  static Published.subscript.getter(&v281, v183, v181, v182);

  swift_release(v181);
  swift_release(v182);
  uint64_t v184 = (uint64_t)v253;
  uint64_t v185 = v268;
  View.isSelected(_:)(v281 == 2, v268, v236);
  ((void (*)(char *, uint64_t))v240)(v180, v185);
  int v186 = v269 & 1;
  if ((v269 & 1) == 0) {
    double v137 = 1.0;
  }
  uint64_t v187 = (uint64_t)v254;
  sub_1000E04D4(v184, (uint64_t)v254, &qword_1002BDF50);
  *(double *)(v187 + *(int *)(v265 + 36)) = v137;
  sub_1000E03B4(v184, &qword_1002BDF50);
  if (!v186)
  {
    uint64_t v188 = swift_getKeyPath(&unk_1001EF328);
    uint64_t v189 = swift_getKeyPath(&unk_1001EF350);
    id v190 = v183;
    static Published.subscript.getter(&v281, v190, v188, v189);

    swift_release(v188);
    swift_release(v189);
    BOOL v166 = (_BYTE)v281 != 0;
  }

  uint64_t v191 = swift_getKeyPath(&unk_1001EF3B8);
  uint64_t v192 = swift_allocObject(&unk_1002780A8, 17LL, 7LL);
  *(_BYTE *)(v192 + swift_weakDestroy(v0 + 16) = v166;
  uint64_t v193 = v270;
  sub_1000E04D4(v187, v270, &qword_1002BDF58);
  uint64_t v194 = (uint64_t *)(v193 + *(int *)(v280 + 36));
  uint64_t *v194 = v191;
  v194[1] = (uint64_t)sub_1001B165C;
  v194[2] = v192;
  sub_1000E03B4(v187, &qword_1002BDF58);
  uint64_t v195 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v196 = swift_getKeyPath(&unk_1001EF9E8);
  id v197 = v183;
  static Published.subscript.getter(&v281, v197, v195, v196);

  swift_release(v195);
  swift_release(v196);
  if ((void)v281 == 2LL)
  {
    uint64_t v199 = v262;
    static AccessibilityTraits.isSelected.getter(v198);
    uint64_t v200 = v274;
  }

  else
  {
    *(void *)&__int128 v281 = _swiftEmptyArrayStorage;
    uint64_t v201 = sub_1000DF308( &qword_1002B83C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits,  (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    uint64_t v202 = sub_1000DFE10((uint64_t *)&unk_1002BA140);
    uint64_t v203 = sub_1000E0374(&qword_1002B83C8, (uint64_t *)&unk_1002BA140, (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v199 = v262;
    uint64_t v200 = v274;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v281, v202, v203, v274, v201);
  }

  uint64_t v204 = (uint64_t)v257;
  uint64_t v205 = v270;
  View.accessibilityAddTraits(_:)(v199, v280, v241);
  ((void (*)(char *, uint64_t))v250)(v199, v200);
  sub_1000E03B4(v205, &qword_1002BDF60);
  uint64_t v206 = v276;
  uint64_t v207 = v278;
  ((void (*)(char *, void, uint64_t))v249)( v276,  enum case for AutomationSemantics.NowPlayingElement.upNextViewButton(_:),  v278);
  __int128 v281 = 0u;
  __int128 v282 = 0u;
  uint64_t v208 = v275;
  static AutomationSemantics.nowPlaying(_:id:)(v206, &v281);
  sub_1000E03B4((uint64_t)&v281, &qword_1002B7850);
  ((void (*)(char *, uint64_t))v242)(v206, v207);
  uint64_t v209 = v258;
  View.automationSemantics(_:)(v208, v271, v163);
  v239(v208, v277);
  sub_1000E03B4(v204, &qword_1002BDF68);
  uint64_t v210 = v279;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000016LL, 0x8000000100229B70LL);
  uint64_t v211 = String.init(localized:)(v210);
  uint64_t v213 = v212;
  *(void *)&__int128 v281 = v211;
  *((void *)&v281 + 1) = v212;
  uint64_t v214 = (uint64_t)v256;
  uint64_t v215 = v273;
  View.accessibilityLabel<A>(_:)(&v281, v273, &type metadata for String, v252, v174);
  __n128 v216 = swift_bridgeObjectRelease(v213);
  ((void (*)(char *, uint64_t, __n128))v251)(v209, v215, v216);
  uint64_t v217 = v259;
  sub_1000E011C(v214, v259, &qword_1002BDF78);
  uint64_t v218 = (uint64_t)v264;
  uint64_t v219 = v255;
  sub_1000E04D4((uint64_t)v264, v255, &qword_1002BDF90);
  uint64_t v220 = v272;
  uint64_t v221 = v260;
  sub_1000E04D4(v272, v260, &qword_1002BDF78);
  uint64_t v222 = v261;
  sub_1000E04D4(v217, v261, &qword_1002BDF78);
  uint64_t v223 = v263;
  sub_1000E04D4(v219, v263, &qword_1002BDF90);
  uint64_t v224 = sub_1000DFE10((uint64_t *)&unk_1002BDFE8);
  sub_1000E04D4(v221, v223 + *(int *)(v224 + 48), &qword_1002BDF78);
  sub_1000E04D4(v222, v223 + *(int *)(v224 + 64), &qword_1002BDF78);
  sub_1000E03B4(v217, &qword_1002BDF78);
  sub_1000E03B4(v220, &qword_1002BDF78);
  sub_1000E03B4(v218, &qword_1002BDF90);
  sub_1000E03B4(v222, &qword_1002BDF78);
  sub_1000E03B4(v221, &qword_1002BDF78);
  return sub_1000E03B4(v219, &qword_1002BDF90);
}

void sub_1001A53E8(uint64_t a1, void *a2)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF9E8);
  id v5 = a2;
  static Published.subscript.getter(&v10, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  BOOL v6 = !v10;
  uint64_t v7 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v8 = swift_getKeyPath(&unk_1001EF9E8);
  BOOL v10 = v6;
  id v9 = v5;
  static Published.subscript.setter(&v10, v9, v7, v8);
  sub_10019A86C();
}

uint64_t sub_1001A54C4@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF9E8);
  id v6 = a1;
  static Published.subscript.getter(&v10, v6, KeyPath, v5);

  swift_release(KeyPath);
  swift_release(v5);
  if (v10 == 1) {
    unint64_t v7 = 0xD000000000000011LL;
  }
  else {
    unint64_t v7 = 0x75622E65746F7571LL;
  }
  if (v10 == 1) {
    unint64_t v8 = 0x8000000100229B90LL;
  }
  else {
    unint64_t v8 = 0xEC000000656C6262LL;
  }
  uint64_t result = Image.init(systemName:)(v7, v8);
  *a2 = result;
  return result;
}

void sub_1001A558C(uint64_t a1, void *a2)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF9E8);
  id v5 = a2;
  static Published.subscript.getter(&v10, v5, KeyPath, v4);

  swift_release(KeyPath);
  swift_release(v4);
  uint64_t v6 = 2LL * (v10 != 2);
  uint64_t v7 = swift_getKeyPath(&unk_1001EF9C0);
  uint64_t v8 = swift_getKeyPath(&unk_1001EF9E8);
  uint64_t v10 = v6;
  id v9 = v5;
  static Published.subscript.setter(&v10, v9, v7, v8);
  sub_10019A86C();
}

uint64_t sub_1001A566C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)(0x6C75622E7473696CLL, 0xEB0000000074656CLL);
  *a1 = result;
  return result;
}

uint64_t sub_1001A56AC()
{
  return 0x6867694C6B636F64LL;
}

uint64_t sub_1001A56C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A3B60(*(void *)v1, *(void **)(v1 + 8), *(unsigned __int8 *)(v1 + 16), *(char **)(v1 + 24), a1);
}

uint64_t sub_1001A56D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a3;
  uint64_t v5 = type metadata accessor for LocalizedStringResource(0LL);
  __chkstk_darwin(v5, v6);
  uint64_t v90 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v87 = type metadata accessor for AccessibilityTraits(0LL);
  uint64_t v89 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v8);
  char v88 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v78 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v10);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v80 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80, v13);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v16 = sub_1000DFE10(&qword_1002BE0A8);
  uint64_t v76 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = sub_1000DFE10(&qword_1002BE0B0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v82 = sub_1000DFE10(&qword_1002BE0B8);
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v24);
  uint64_t v26 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v86 = sub_1000DFE10(&qword_1002BE0C0);
  uint64_t v28 = __chkstk_darwin(v86, v27);
  uint64_t v83 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v85 = (char *)&v75 - v32;
  __chkstk_darwin(v31, v33);
  uint64_t v84 = (char *)&v75 - v34;
  uint64_t v35 = swift_allocObject(&unk_1002786D8, 32LL, 7LL);
  *(void *)(v35 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v35 + 24) = a2;
  uint64_t v91 = a1;
  uint64_t v94 = a1;
  uint64_t v95 = a2;
  swift_retain(a2);
  uint64_t v36 = sub_1000DFE10(&qword_1002BE168);
  unint64_t v37 = sub_1001AF950();
  Button.init(action:label:)(sub_1001B0C58, v35, sub_1001B0C60, v93, v36, v37);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF780);
  uint64_t v39 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v40 = swift_retain(a2);
  static Published.subscript.getter(v96, v40, KeyPath, v39);
  swift_release(a2);
  swift_release(KeyPath);
  swift_release(v39);
  BOOL v41 = *(void *)&v96[0] != 0LL;
  uint64_t v42 = sub_1000E0374(&qword_1002BE188, &qword_1002BE0A8, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.isSelected(_:)(v41, v16, v42);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v19, v16);
  uint64_t v43 = v77;
  uint64_t v44 = v78;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))( v12,  enum case for AutomationSemantics.NowPlayingElement.repeatButton(_:),  v78);
  memset(v96, 0, 32);
  static AutomationSemantics.nowPlaying(_:id:)(v12, v96);
  sub_1000E03B4((uint64_t)v96, &qword_1002B7850);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v44);
  unint64_t v45 = sub_1001AFAFC();
  View.automationSemantics(_:)(v15, v20, v45);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v15, v80);
  sub_1000E03B4((uint64_t)v23, &qword_1002BE0B0);
  uint64_t v46 = swift_getKeyPath(&unk_1001EF780);
  uint64_t v47 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v48 = swift_retain(a2);
  static Published.subscript.getter(v96, v48, v46, v47);
  swift_release(a2);
  swift_release(v46);
  swift_release(v47);
  if (*(void *)&v96[0])
  {
    uint64_t v50 = v88;
    static AccessibilityTraits.isSelected.getter(v49);
    uint64_t v51 = v87;
  }

  else
  {
    *(void *)&v96[0] = _swiftEmptyArrayStorage;
    uint64_t v52 = sub_1000DF308( &qword_1002B83C0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityTraits,  (uint64_t)&protocol conformance descriptor for AccessibilityTraits);
    uint64_t v53 = sub_1000DFE10((uint64_t *)&unk_1002BA140);
    uint64_t v54 = sub_1000E0374(&qword_1002B83C8, (uint64_t *)&unk_1002BA140, (uint64_t)&protocol conformance descriptor for [A]);
    uint64_t v55 = v87;
    uint64_t v50 = v88;
    dispatch thunk of SetAlgebra.init<A>(_:)(v96, v53, v54, v87, v52);
    uint64_t v51 = v55;
  }

  *(void *)&v96[0] = v20;
  *((void *)&v96[0] + 1) = v45;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v96,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  uint64_t v57 = (uint64_t)v83;
  uint64_t v58 = v82;
  View.accessibilityAddTraits(_:)(v50, v82, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v50, v51);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v26, v58);
  uint64_t v59 = v90;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000013LL, 0x8000000100229CF0LL);
  uint64_t v60 = String.init(localized:)(v59);
  uint64_t v62 = v61;
  *(void *)&v96[0] = v60;
  *((void *)&v96[0] + 1) = v61;
  unint64_t v63 = sub_1000E95D4();
  uint64_t v64 = (uint64_t)v85;
  ModifiedContent<>.accessibilityLabel<A>(_:)(v96, v86, &type metadata for String, v63);
  swift_bridgeObjectRelease(v62);
  sub_1000E03B4(v57, &qword_1002BE0C0);
  *(void *)&v96[0] = sub_1001A5F7C(v91, a2);
  *((void *)&v96[0] + 1) = v65;
  uint64_t v66 = Text.init<A>(_:)(v96, &type metadata for String, v63);
  uint64_t v68 = v67;
  uint64_t v70 = v69;
  char v72 = v71 & 1;
  uint64_t v73 = (uint64_t)v84;
  ModifiedContent<>.accessibilityValue(_:)();
  sub_1000EC044(v66, v68, v72);
  swift_bridgeObjectRelease(v70);
  sub_1000E03B4(v64, &qword_1002BE0C0);
  return sub_1000E011C(v73, v92, &qword_1002BE0C0);
}

void sub_1001A5D74(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF780);
  uint64_t v4 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v5 = swift_retain(a2);
  static Published.subscript.getter(&v10, v5, KeyPath, v4);
  swift_release(a2);
  swift_release(KeyPath);
  swift_release(v4);
  if (v10 > 2) {
    uint64_t v6 = 0LL;
  }
  else {
    uint64_t v6 = qword_1001EFF50[v10];
  }
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC7TVMusic24NowPlayingPlayerObserver_player);
  if (v7)
  {
    id v8 = [v7 playQueue];
    if (v8)
    {
      uint64_t v9 = v8;
      [v8 setRepeatMode:v6];
    }

    else
    {
      __break(1u);
    }
  }

uint64_t sub_1001A5E54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF780);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v6 = swift_retain(a1);
  static Published.subscript.getter(&v15, v6, KeyPath, v5);
  swift_release(a1);
  swift_release(KeyPath);
  swift_release(v5);
  if (v15 == 1) {
    uint64_t v7 = 0x312E746165706572LL;
  }
  else {
    uint64_t v7 = 0x746165706572LL;
  }
  if (v15 == 1) {
    unint64_t v8 = 0xE800000000000000LL;
  }
  else {
    unint64_t v8 = 0xE600000000000000LL;
  }
  uint64_t v9 = Image.init(systemName:)(v7, v8);
  uint64_t v10 = swift_getKeyPath(&unk_1001EF780);
  uint64_t v11 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v12 = swift_retain(a1);
  static Published.subscript.getter(&v15, v12, v10, v11);
  swift_release(a1);
  swift_release(v10);
  uint64_t result = swift_release(v11);
  BOOL v14 = v15 != 0;
  *(void *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v14;
  return result;
}

uint64_t sub_1001A5F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource(0LL);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF780);
  uint64_t v8 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v9 = swift_retain(a2);
  static Published.subscript.getter(&v15, v9, KeyPath, v8);
  swift_release(a2);
  swift_release(KeyPath);
  swift_release(v8);
  if (v15 == 2)
  {
    uint64_t v10 = "AccessibilityRepeatAll";
  }

  else if (v15 == 1)
  {
    uint64_t v10 = "AccessibilityRepeatOne";
  }

  else
  {
    if (v15)
    {
      unint64_t v12 = 0xD00000000000001ALL;
      unint64_t v11 = 0x8000000100229D10LL;
      goto LABEL_9;
    }

    uint64_t v10 = "AccessibilityRepeatOff";
  }

  unint64_t v11 = (unint64_t)(v10 - 32) | 0x8000000000000000LL;
  unint64_t v12 = 0xD000000000000016LL;
LABEL_9:
  LocalizedStringResource.init(stringLiteral:)(v12, v11);
  return String.init(localized:)(v6);
}

uint64_t sub_1001A60A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A56D8(*v1, v1[1], a1);
}

void sub_1001A60B0()
{
  qword_1002BD5E0 = MusicCardButtonStyle.Shadow.init(opacity:radius:verticalOffset:)(0.5, 34.0, 22.0);
  qword_1002BD5E8 = v0;
  qword_1002BD5F0 = v1;
}

void sub_1001A60E4()
{
  *(void *)&xmmword_1002BD5F8 = MusicCardButtonStyle.Shadow.init(opacity:radius:verticalOffset:)(0.2, 30.0, 0.0);
  *((void *)&xmmword_1002BD5F8 + 1) = v0;
  qword_1002BD608 = v1;
}

uint64_t sub_1001A6118@<X0>( uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v73 = a5;
  uint64_t v8 = type metadata accessor for VocalAttenuationButtonModifier(255LL, a3, a4, a3);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EFEF8, v8);
  uint64_t v10 = type metadata accessor for _ViewModifier_Content(255LL, v8, WitnessTable);
  uint64_t v11 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v10);
  uint64_t v60 = v10;
  *(void *)&__int128 v92 = v10;
  *((void *)&v92 + 1) = &type metadata for MusicCardButtonStyle;
  unint64_t v62 = sub_100106E78();
  uint64_t v63 = v11;
  *(void *)&__int128 v93 = v11;
  *((void *)&v93 + 1) = v62;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 0LL,  &v92,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  0LL);
  uint64_t v66 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2, v13);
  uint64_t v64 = (char *)&v58 - v14;
  uint64_t v15 = sub_1000DEA98(&qword_1002B9FB0);
  uint64_t v67 = OpaqueTypeMetadata2;
  uint64_t v16 = type metadata accessor for ModifiedContent(0LL, OpaqueTypeMetadata2, v15);
  uint64_t v69 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v16);
  uint64_t v75 = (char *)&v58 - v17;
  uint64_t v71 = v18;
  uint64_t v61 = type metadata accessor for ModifiedContent(0LL, v18, v15);
  uint64_t v72 = *(void *)(v61 - 8);
  uint64_t v20 = __chkstk_darwin(v61, v19);
  uint64_t v68 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v20, v22);
  uint64_t v70 = (uint64_t)&v58 - v23;
  uint64_t v24 = *(unsigned __int8 (**)(uint64_t, uint64_t))(a4 + 24);
  swift_unknownObjectRetain(a2);
  LOBYTE(v15) = v24(a3, a4);
  swift_unknownObjectRelease(a2);
  if ((_BYTE)v15) {
    double v25 = 0.0;
  }
  else {
    double v25 = 0.1;
  }
  swift_unknownObjectRetain(a2);
  uint64_t v74 = a3;
  uint64_t v59 = v24;
  int v26 = v24(a3, a4);
  swift_unknownObjectRelease(a2);
  if (v26)
  {
    if (qword_1002B7278 != -1) {
      swift_once(&qword_1002B7278, sub_1001A60E4);
    }
    uint64_t v27 = qword_1002BD608;
    __int128 v58 = xmmword_1002BD5F8;
  }

  else
  {
    if (qword_1002B7270 != -1) {
      swift_once(&qword_1002B7270, sub_1001A60B0);
    }
    uint64_t v27 = qword_1002BD5F0;
    __int128 v58 = xmmword_1002BD5E0;
    if (qword_1002B7278 != -1) {
      swift_once(&qword_1002B7278, sub_1001A60E4);
    }
  }

  __int128 v28 = xmmword_1002BD5F8;
  uint64_t v29 = qword_1002BD608;
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 136);
  swift_unknownObjectRetain(a2);
  char v31 = v30(v74, a4);
  swift_unknownObjectRelease(a2);
  if ((v31 & 1) != 0)
  {
    uint64_t v32 = (void *)objc_opt_self(&OBJC_CLASS___UIBlurEffect);
    id v33 = objc_msgSend(v32, "effectWithStyle:", 4017, v58);
  }

  else
  {
    id v33 = 0LL;
  }

  MusicCardButtonStyle.init(width:height:translation:cornerRadius:focusedSizeIncrease:focusedShadow:unfocusedShadow:maskOnSelect:backgroundEffect:)( &v92,  0x4050000000000000LL,  0LL,  0x4050000000000000LL,  0LL,  v58,  *((void *)&v58 + 1),  v27,  0LL,  5.0,  5.0,  32.0,  v25,  v28,  *((void *)&v28 + 1),  v29,  0,  v33);
  __int128 v89 = v100;
  __int128 v90 = v101;
  uint64_t v91 = v102;
  __int128 v85 = v96;
  __int128 v86 = v97;
  __int128 v87 = v98;
  __int128 v88 = v99;
  __int128 v81 = v92;
  __int128 v82 = v93;
  __int128 v83 = v94;
  __int128 v84 = v95;
  uint64_t v34 = swift_checkMetadataState(0LL, v60);
  uint64_t v35 = v63;
  uint64_t v36 = v64;
  unint64_t v37 = v62;
  View.buttonStyle<A>(_:)(&v81, v34, &type metadata for MusicCardButtonStyle, v63, v62);
  uint64_t v38 = sub_100106EBC((uint64_t)&v92);
  uint64_t v39 = static Color.gray.getter(v38);
  uint64_t v40 = Color.opacity(_:)(0.4);
  swift_release(v39);
  uint64_t v80 = v40;
  *(void *)&__int128 v81 = v34;
  *((void *)&v81 + 1) = &type metadata for MusicCardButtonStyle;
  *(void *)&__int128 v82 = v35;
  *((void *)&v82 + 1) = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v81,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
  uint64_t v42 = v67;
  View.cardSelectedBackgroundStyle<A>(_:)( &v80,  v67,  &type metadata for Color,  OpaqueTypeConformance2,  &protocol witness table for Color);
  __n128 v43 = swift_release(v40);
  (*(void (**)(char *, uint64_t, __n128))(v66 + 8))(v36, v42, v43);
  swift_unknownObjectRetain(a2);
  LODWORD(v39) = v59(v74, a4);
  uint64_t v44 = swift_unknownObjectRelease(a2);
  if ((_DWORD)v39)
  {
    uint64_t v45 = static Color.gray.getter(v44);
    double v46 = 0.4;
  }

  else
  {
    uint64_t v45 = static Color.white.getter(v44);
    double v46 = 0.9;
  }

  uint64_t v47 = Color.opacity(_:)(v46);
  swift_release(v45);
  *(void *)&__int128 v81 = v47;
  uint64_t v48 = sub_1000E0374( (unint64_t *)&unk_1002BDBA0,  &qword_1002B9FB0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  uint64_t v78 = OpaqueTypeConformance2;
  uint64_t v79 = v48;
  uint64_t v49 = v71;
  uint64_t v50 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v71);
  uint64_t v51 = (uint64_t)v68;
  uint64_t v52 = v75;
  View.cardFocusedBackgroundStyle<A>(_:)(&v81, v49, &type metadata for Color, v50, &protocol witness table for Color);
  __n128 v53 = swift_release(v47);
  (*(void (**)(char *, uint64_t, __n128))(v69 + 8))(v52, v49, v53);
  uint64_t v76 = v50;
  uint64_t v77 = v48;
  uint64_t v54 = v61;
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v61);
  uint64_t v55 = v70;
  sub_1000E3E08(v51, v54, v70);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
  v56(v51, v54);
  sub_1000E3158(v55, v54, v73);
  return ((uint64_t (*)(uint64_t, uint64_t))v56)(v55, v54);
}

uint64_t sub_1001A6748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1001A6118(a1, *(void *)(v3 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1001A6758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v59 = sub_1000DEA98(&qword_1002BE258);
  uint64_t v58 = type metadata accessor for NSNotificationCenter.Publisher(255LL);
  uint64_t v3 = sub_1000DEA98(&qword_1002BE260);
  uint64_t v61 = a1;
  uint64_t v60 = *(void *)(a1 + 24);
  uint64_t v62 = *(void *)(a1 + 40);
  uint64_t v5 = type metadata accessor for VocalAttenuationButtonModifier(255LL, v60, v62, v4);
  uint64_t v6 = type metadata accessor for ModifiedContent(255LL, v3, v5);
  uint64_t v7 = type metadata accessor for ModifiedContent(255LL, v6, &type metadata for _AlignmentWritingModifier);
  uint64_t v8 = type metadata accessor for AccessibilityAttachmentModifier(255LL);
  uint64_t v9 = type metadata accessor for ModifiedContent(255LL, v7, v8);
  uint64_t v91 = sub_1000E0374(&qword_1002BE268, &qword_1002BE260, (uint64_t)&protocol conformance descriptor for Button<A>);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EFEF8, v5);
  uint64_t v89 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  unint64_t v90 = sub_1001ADED4();
  uint64_t v87 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  uint64_t v88 = sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  uint64_t v10 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  uint64_t v83 = v9;
  __int128 v84 = (void *)v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v83,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  0LL);
  uint64_t v83 = v9;
  __int128 v84 = (void *)v10;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v83,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  1LL);
  uint64_t v83 = OpaqueTypeMetadata2;
  __int128 v84 = &type metadata for Bool;
  uint64_t v85 = OpaqueTypeConformance2;
  __int128 v86 = &protocol witness table for Bool;
  uint64_t v13 = swift_getOpaqueTypeMetadata2( 255LL,  &v83,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v14 = sub_1000DEA98(&qword_1002BDFD0);
  uint64_t v15 = type metadata accessor for ModifiedContent(255LL, v13, v14);
  uint64_t v16 = sub_1000DEA98(&qword_1002B7BA0);
  uint64_t v17 = type metadata accessor for ModifiedContent(255LL, v15, v16);
  uint64_t v18 = type metadata accessor for ModifiedContent(255LL, v17, &type metadata for _OpacityEffect);
  uint64_t v19 = type metadata accessor for ModifiedContent(255LL, v18, &type metadata for _OffsetEffect);
  uint64_t v83 = OpaqueTypeMetadata2;
  __int128 v84 = &type metadata for Bool;
  uint64_t v85 = OpaqueTypeConformance2;
  __int128 v86 = &protocol witness table for Bool;
  uint64_t v81 = swift_getOpaqueTypeConformance2( &v83,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v82 = sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  uint64_t v79 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  uint64_t v80 = sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  uint64_t v77 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  uint64_t v78 = &protocol witness table for _OpacityEffect;
  uint64_t v75 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  uint64_t v76 = &protocol witness table for _OffsetEffect;
  uint64_t v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  uint64_t v83 = v19;
  __int128 v84 = &type metadata for Bool;
  uint64_t v85 = v20;
  __int128 v86 = &protocol witness table for Bool;
  uint64_t v21 = swift_getOpaqueTypeMetadata2( 255LL,  &v83,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v83 = v19;
  __int128 v84 = &type metadata for Bool;
  uint64_t v85 = v20;
  __int128 v86 = &protocol witness table for Bool;
  uint64_t v22 = swift_getOpaqueTypeConformance2( &v83,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v83 = v21;
  __int128 v84 = &type metadata for Bool;
  uint64_t v85 = v22;
  __int128 v86 = &protocol witness table for Bool;
  uint64_t v23 = swift_getOpaqueTypeMetadata2( 255LL,  &v83,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v24 = type metadata accessor for ModifiedContent(255LL, v23, &type metadata for _AppearanceActionModifier);
  uint64_t v25 = type metadata accessor for ModifiedContent(255LL, v24, &type metadata for _AppearanceActionModifier);
  uint64_t v83 = v21;
  __int128 v84 = &type metadata for Bool;
  uint64_t v85 = v22;
  __int128 v86 = &protocol witness table for Bool;
  uint64_t v73 = swift_getOpaqueTypeConformance2( &v83,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v74 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v71 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  uint64_t v72 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  uint64_t v83 = v25;
  __int128 v84 = (void *)v26;
  uint64_t v27 = swift_getOpaqueTypeMetadata2( 255LL,  &v83,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  0LL);
  uint64_t v28 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v83 = v25;
  __int128 v84 = (void *)v26;
  uint64_t v29 = swift_getOpaqueTypeConformance2( &v83,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
  uint64_t v83 = v58;
  __int128 v84 = (void *)v27;
  uint64_t v85 = v28;
  __int128 v86 = (void *)v29;
  uint64_t v30 = type metadata accessor for SubscriptionView(255LL, &v83);
  uint64_t v31 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v30);
  uint64_t v83 = v58;
  __int128 v84 = (void *)v30;
  uint64_t v85 = v28;
  __int128 v86 = (void *)v31;
  uint64_t v32 = type metadata accessor for SubscriptionView(255LL, &v83);
  uint64_t v33 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v32);
  uint64_t v83 = v58;
  __int128 v84 = (void *)v32;
  uint64_t v85 = v28;
  __int128 v86 = (void *)v33;
  uint64_t v34 = type metadata accessor for SubscriptionView(255LL, &v83);
  uint64_t v35 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v34);
  uint64_t v83 = v58;
  __int128 v84 = (void *)v34;
  uint64_t v85 = v28;
  __int128 v86 = (void *)v35;
  uint64_t v36 = type metadata accessor for SubscriptionView(255LL, &v83);
  uint64_t v37 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v36);
  uint64_t v83 = v58;
  __int128 v84 = (void *)v36;
  uint64_t v85 = v28;
  __int128 v86 = (void *)v37;
  uint64_t v38 = type metadata accessor for SubscriptionView(255LL, &v83);
  uint64_t v39 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v38);
  uint64_t v83 = v58;
  __int128 v84 = (void *)v38;
  uint64_t v85 = v28;
  __int128 v86 = (void *)v39;
  uint64_t v40 = type metadata accessor for SubscriptionView(255LL, &v83);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255LL, v59, v40, 0LL, 0LL);
  uint64_t v42 = type metadata accessor for TupleView(255LL, TupleTypeMetadata2);
  uint64_t v43 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v42);
  uint64_t v44 = type metadata accessor for HStack(0LL, v42, v43);
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v47 = __chkstk_darwin(v44, v46);
  uint64_t v49 = (char *)&v57 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = __chkstk_darwin(v47, v50);
  __n128 v53 = (char *)&v57 - v52;
  uint64_t v54 = static VerticalAlignment.center.getter(v51);
  uint64_t v66 = *(void *)(v61 + 16);
  uint64_t v67 = v60;
  uint64_t v68 = *(void *)(v61 + 32);
  uint64_t v69 = v62;
  uint64_t v70 = v63;
  HStack.init(alignment:spacing:content:)(v54, 0LL, 1LL, sub_1001B0488, v65, v42, v43);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v44);
  sub_1000E3E08((uint64_t)v49, v44, (uint64_t)v53);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v45 + 8);
  v55(v49, v44);
  sub_1000E3158((uint64_t)v53, v44, v64);
  return ((uint64_t (*)(char *, uint64_t))v55)(v53, v44);
}

uint64_t sub_1001A6E24@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v505 = (double (**)(void))a5;
  uint64_t v503 = a4;
  uint64_t v504 = a3;
  uint64_t v506 = a2;
  uint64_t v486 = a6;
  uint64_t v500 = type metadata accessor for NSNotificationCenter.Publisher(0LL);
  uint64_t v485 = *(void *)(v500 - 8);
  __chkstk_darwin(v500, v9);
  v498 = (char *)&v393 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v11 = sub_1000DEA98(&qword_1002BE260);
  v499 = (void *)v11;
  uint64_t v13 = type metadata accessor for VocalAttenuationButtonModifier(255LL, a3, a5, v12);
  uint64_t v14 = type metadata accessor for ModifiedContent(255LL, v11, v13);
  uint64_t v495 = v14;
  uint64_t v15 = (void *)type metadata accessor for ModifiedContent(255LL, v14, &type metadata for _AlignmentWritingModifier);
  uint64_t v16 = type metadata accessor for AccessibilityAttachmentModifier(255LL);
  id v501 = v15;
  uint64_t v17 = type metadata accessor for ModifiedContent(255LL, v15, v16);
  uint64_t v18 = sub_1000E0374(&qword_1002BE268, &qword_1002BE260, (uint64_t)&protocol conformance descriptor for Button<A>);
  uint64_t v433 = v13;
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EFEF8, v13);
  uint64_t v431 = v18;
  uint64_t v531 = v18;
  uint64_t v532 = WitnessTable;
  uint64_t v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v14);
  unint64_t v21 = sub_1001ADED4();
  uint64_t v432 = v20;
  uint64_t v529 = v20;
  unint64_t v530 = v21;
  uint64_t v22 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  uint64_t v23 = sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  uint64_t v434 = v22;
  uint64_t v527 = v22;
  uint64_t v528 = v23;
  uint64_t v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  *(void *)&__int128 v509 = v17;
  uint64_t v25 = v17;
  v494 = (char *)v17;
  *((void *)&v509 + 1) = v24;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v509,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  0LL);
  *(void *)&__int128 v509 = v25;
  uint64_t v435 = v24;
  *((void *)&v509 + 1) = v24;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v509,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  1LL);
  *(void *)&__int128 v509 = OpaqueTypeMetadata2;
  uint64_t v470 = OpaqueTypeMetadata2;
  *((void *)&v509 + 1) = &type metadata for Bool;
  uint64_t v510 = OpaqueTypeConformance2;
  v511 = &protocol witness table for Bool;
  uint64_t v28 = swift_getOpaqueTypeMetadata2( 255LL,  &v509,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  v490 = (char *)v28;
  uint64_t v29 = sub_1000DEA98(&qword_1002BDFD0);
  uint64_t v30 = type metadata accessor for ModifiedContent(255LL, v28, v29);
  uint64_t v31 = sub_1000DEA98(&qword_1002B7BA0);
  v488 = (char *)v30;
  uint64_t v32 = type metadata accessor for ModifiedContent(255LL, v30, v31);
  v487 = (char *)v32;
  uint64_t v33 = type metadata accessor for ModifiedContent(255LL, v32, &type metadata for _OpacityEffect);
  v489 = (char *)v33;
  uint64_t v34 = type metadata accessor for ModifiedContent(255LL, v33, &type metadata for _OffsetEffect);
  *(void *)&__int128 v509 = OpaqueTypeMetadata2;
  *((void *)&v509 + 1) = &type metadata for Bool;
  uint64_t v437 = OpaqueTypeConformance2;
  uint64_t v510 = OpaqueTypeConformance2;
  v511 = &protocol witness table for Bool;
  uint64_t v35 = swift_getOpaqueTypeConformance2( &v509,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v36 = sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  uint64_t v436 = v35;
  uint64_t v525 = v35;
  uint64_t v526 = v36;
  uint64_t v37 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  uint64_t v38 = sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  uint64_t v438 = v37;
  uint64_t v523 = v37;
  uint64_t v524 = v38;
  uint64_t v439 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v32);
  uint64_t v521 = v439;
  v522 = &protocol witness table for _OpacityEffect;
  uint64_t v440 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v33);
  uint64_t v519 = v440;
  v520 = &protocol witness table for _OffsetEffect;
  uint64_t v39 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  *(void *)&__int128 v509 = v34;
  uint64_t v465 = v34;
  *((void *)&v509 + 1) = &type metadata for Bool;
  uint64_t v510 = v39;
  v511 = &protocol witness table for Bool;
  uint64_t v40 = swift_getOpaqueTypeMetadata2( 0LL,  &v509,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v446 = *(void *)(v40 - 8);
  __chkstk_darwin(v40, v41);
  uint64_t v445 = (char *)&v393 - v42;
  *(void *)&__int128 v509 = v34;
  *((void *)&v509 + 1) = &type metadata for Bool;
  uint64_t v441 = v39;
  uint64_t v510 = v39;
  v511 = &protocol witness table for Bool;
  uint64_t v43 = swift_getOpaqueTypeConformance2( &v509,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  *(void *)&__int128 v509 = v40;
  *((void *)&v509 + 1) = &type metadata for Bool;
  uint64_t v510 = v43;
  v511 = &protocol witness table for Bool;
  uint64_t v44 = swift_getOpaqueTypeMetadata2( 0LL,  &v509,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v449 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v44);
  id v448 = (char *)&v393 - v45;
  uint64_t v450 = v46;
  uint64_t v47 = type metadata accessor for ModifiedContent(0LL, v46, &type metadata for _AppearanceActionModifier);
  uint64_t v452 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v48);
  uint64_t v451 = (char *)&v393 - v49;
  uint64_t v50 = type metadata accessor for ModifiedContent(0LL, v47, &type metadata for _AppearanceActionModifier);
  uint64_t v456 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v51);
  uint64_t v455 = (char *)&v393 - v52;
  uint64_t v447 = v40;
  *(void *)&__int128 v509 = v40;
  *((void *)&v509 + 1) = &type metadata for Bool;
  uint64_t v443 = v43;
  uint64_t v510 = v43;
  v511 = &protocol witness table for Bool;
  uint64_t v53 = v504;
  uint64_t v442 = swift_getOpaqueTypeConformance2( &v509,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v517 = v442;
  v518 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v453 = v47;
  uint64_t v444 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v47);
  uint64_t v515 = v444;
  v516 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v54 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v50);
  *(void *)&__int128 v509 = v50;
  *((void *)&v509 + 1) = v54;
  uint64_t v55 = swift_getOpaqueTypeMetadata2( 0LL,  &v509,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  0LL);
  uint64_t v459 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v56);
  v491 = (char *)&v393 - v57;
  uint64_t v58 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v457 = v50;
  *(void *)&__int128 v509 = v50;
  uint64_t v454 = v54;
  *((void *)&v509 + 1) = v54;
  uint64_t v59 = swift_getOpaqueTypeConformance2( &v509,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
  uint64_t v60 = v500;
  *(void *)&__int128 v509 = v500;
  uint64_t v460 = v55;
  *((void *)&v509 + 1) = v55;
  uint64_t v510 = v58;
  uint64_t v458 = v59;
  v511 = (void *)v59;
  uint64_t v61 = type metadata accessor for SubscriptionView(0LL, &v509);
  uint64_t v463 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v62);
  v492 = (char *)&v393 - v63;
  uint64_t v64 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v61);
  *(void *)&__int128 v509 = v60;
  uint64_t v464 = v61;
  *((void *)&v509 + 1) = v61;
  uint64_t v510 = v58;
  uint64_t v461 = v64;
  v511 = (void *)v64;
  uint64_t v65 = type metadata accessor for SubscriptionView(0LL, &v509);
  uint64_t v467 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v66);
  v493 = (char *)&v393 - v67;
  uint64_t v68 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v65);
  *(void *)&__int128 v509 = v60;
  uint64_t v468 = v65;
  *((void *)&v509 + 1) = v65;
  uint64_t v510 = v58;
  uint64_t v466 = v68;
  v511 = (void *)v68;
  uint64_t v69 = type metadata accessor for SubscriptionView(0LL, &v509);
  uint64_t v471 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v70);
  v496 = (char *)&v393 - v71;
  uint64_t v72 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v69);
  *(void *)&__int128 v509 = v60;
  uint64_t v472 = v69;
  *((void *)&v509 + 1) = v69;
  uint64_t v510 = v58;
  uint64_t v469 = v72;
  v511 = (void *)v72;
  uint64_t v73 = type metadata accessor for SubscriptionView(0LL, &v509);
  uint64_t v474 = *(void *)(v73 - 8);
  __chkstk_darwin(v73, v74);
  v497 = (char *)&v393 - v75;
  uint64_t v76 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v73);
  *(void *)&__int128 v509 = v60;
  uint64_t v475 = v73;
  *((void *)&v509 + 1) = v73;
  uint64_t v510 = v58;
  uint64_t v473 = v76;
  v511 = (void *)v76;
  uint64_t v77 = type metadata accessor for SubscriptionView(0LL, &v509);
  uint64_t v479 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v78);
  v478 = (char *)&v393 - v79;
  uint64_t v80 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v77);
  *(void *)&__int128 v509 = v60;
  uint64_t v480 = v77;
  *((void *)&v509 + 1) = v77;
  uint64_t v502 = v58;
  uint64_t v510 = v58;
  uint64_t v476 = v80;
  v511 = (void *)v80;
  uint64_t v484 = type metadata accessor for SubscriptionView(0LL, &v509);
  uint64_t v481 = *(void *)(v484 - 8);
  uint64_t v82 = __chkstk_darwin(v484, v81);
  v483 = (char *)&v393 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v85 = __chkstk_darwin(v82, v84);
  v477 = (char *)&v393 - v86;
  uint64_t v88 = __chkstk_darwin(v85, v87);
  uint64_t v482 = (uint64_t)&v393 - v89;
  uint64_t v408 = *(v499 - 1);
  __chkstk_darwin(v88, v90);
  v407 = (char *)&v393 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v92 = swift_checkMetadataState(0LL, v495);
  uint64_t v410 = *(void *)(v92 - 8);
  uint64_t v411 = v92;
  __chkstk_darwin(v92, v93);
  v409 = (char *)&v393 - v94;
  uint64_t v95 = swift_checkMetadataState(0LL, v501);
  uint64_t v413 = *(void *)(v95 - 8);
  uint64_t v414 = v95;
  __chkstk_darwin(v95, v96);
  v412 = (char *)&v393 - v97;
  uint64_t v98 = swift_checkMetadataState(0LL, v494);
  uint64_t v416 = *(void *)(v98 - 8);
  uint64_t v417 = v98;
  __chkstk_darwin(v98, v99);
  v415 = (char *)&v393 - v100;
  uint64_t v101 = swift_checkMetadataState(0LL, v470);
  uint64_t v419 = *(void *)(v101 - 8);
  uint64_t v420 = v101;
  __chkstk_darwin(v101, v102);
  v418 = (char *)&v393 - v103;
  uint64_t v104 = swift_checkMetadataState(0LL, v490);
  uint64_t v422 = *(void *)(v104 - 8);
  uint64_t v423 = v104;
  __chkstk_darwin(v104, v105);
  uint64_t v421 = (char *)&v393 - v106;
  uint64_t v107 = swift_checkMetadataState(0LL, v488);
  uint64_t v424 = *(void *)(v107 - 8);
  uint64_t v425 = v107;
  __chkstk_darwin(v107, v108);
  v490 = (char *)&v393 - v109;
  uint64_t v110 = swift_checkMetadataState(0LL, v487);
  uint64_t v426 = *(void *)(v110 - 8);
  uint64_t v427 = v110;
  __chkstk_darwin(v110, v111);
  v487 = (char *)&v393 - v112;
  uint64_t v113 = swift_checkMetadataState(0LL, v489);
  uint64_t v429 = *(void *)(v113 - 8);
  uint64_t v430 = v113;
  __chkstk_darwin(v113, v114);
  v428 = (char *)&v393 - v115;
  uint64_t v495 = swift_checkMetadataState(0LL, v465);
  uint64_t v470 = *(void *)(v495 - 8);
  __chkstk_darwin(v495, v116);
  v494 = (char *)&v393 - v117;
  uint64_t v118 = type metadata accessor for LocalizedStringResource(0LL);
  __chkstk_darwin(v118, v119);
  v488 = (char *)&v393 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v121 = type metadata accessor for _BlendModeEffect(0LL);
  __chkstk_darwin(v121, v122);
  uint64_t v402 = (char *)&v393 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v124 = type metadata accessor for BlendMode(0LL);
  uint64_t v400 = *(void *)(v124 - 8);
  uint64_t v401 = v124;
  __chkstk_darwin(v124, v125);
  uint64_t v399 = (char *)&v393 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v404 = sub_1000DFE10(&qword_1002BE278);
  __chkstk_darwin(v404, v127);
  v403 = (char *)&v393 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v129 = sub_1000DFE10(&qword_1002BE280);
  uint64_t v405 = *(void *)(v129 - 8);
  uint64_t v406 = v129;
  __chkstk_darwin(v129, v130);
  BOOL v132 = (char *)&v393 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v462 = sub_1000DFE10(&qword_1002BE258);
  uint64_t v134 = __chkstk_darwin(v462, v133);
  uint64_t v465 = (uint64_t)&v393 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v134, v136);
  double v138 = (char *)&v393 - v137;
  *(void *)&__int128 v509 = v506;
  *((void *)&v509 + 1) = v53;
  uint64_t v510 = v503;
  uint64_t v139 = v505;
  v511 = v505;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&v509);
  uint64_t v140 = *(void **)(a1 + 24);
  uint64_t v141 = v139[7];
  swift_unknownObjectRetain(v140);
  LOBYTE(v60) = ((uint64_t (*)(uint64_t, double (**)(void)))v141)(v53, v139);
  id v501 = v140;
  swift_unknownObjectRelease(v140);
  uint64_t v142 = 1LL;
  v489 = v138;
  if ((v60 & 1) != 0)
  {
    unint64_t v398 = 0x8000000100229C80LL;
    uint64_t v143 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000019LL, 0x8000000100229C80LL);
    __int16 v392 = 256;
    uint64_t v391 = 0LL;
    uint64_t v144 = Text.init(_:tableName:bundle:comment:)(v143);
    uint64_t v146 = v145;
    uint64_t v148 = v147;
    uint64_t v150 = v149 & 1;
    uint64_t v151 = static Font.caption2.getter(v144, v145);
    uint64_t v152 = Text.font(_:)(v151, v144, v146, v150, v148);
    uint64_t v397 = v132;
    uint64_t v153 = v152;
    uint64_t v155 = v154;
    char v157 = v156;
    uint64_t v395 = v158;
    swift_release(v151);
    LOBYTE(v151) = v157 & 1;
    sub_1000EC044(v144, v146, v150);
    swift_bridgeObjectRelease(v148);
    uint64_t v160 = static Color.white.getter(v159);
    uint64_t v161 = Color.opacity(_:)(0.3);
    swift_release(v160);
    uint64_t v162 = v395;
    uint64_t v163 = Text.foregroundColor(_:)(v161, v153, v155, v157 & 1, v395);
    uint64_t v396 = v164;
    char v166 = v165;
    uint64_t v168 = v167;
    swift_release(v161);
    LOBYTE(v161) = v166 & 1;
    sub_1000EC044(v153, v155, v151);
    __n128 v169 = swift_bridgeObjectRelease(v162);
    uint64_t v170 = v399;
    uint64_t v171 = v400;
    uint64_t v172 = v401;
    (*(void (**)(char *, void, uint64_t, __n128))(v400 + 104))( v399,  enum case for BlendMode.plusLighter(_:),  v401,  v169);
    uint64_t v173 = (uint64_t)v402;
    (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v402, v170, v172);
    uint64_t v174 = (uint64_t)v403;
    sub_1000EE02C( v173,  (uint64_t)&v403[*(int *)(v404 + 36)],  (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    uint64_t v175 = v163;
    uint64_t v394 = v163;
    *(void *)uint64_t v174 = v163;
    uint64_t v176 = v396;
    *(void *)(v174 + 8) = v396;
    *(_BYTE *)(v174 + swift_weakDestroy(v0 + 16) = v161;
    *(void *)(v174 + 24) = v168;
    sub_1000EC004(v175, v176, v161);
    swift_bridgeObjectRetain(v168);
    uint64_t v177 = v173;
    uint64_t v53 = v504;
    sub_1000EE18C(v177, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v170, v172);
    sub_1000EC044(v394, v176, v161);
    swift_bridgeObjectRelease(v168);
    id v178 = v488;
    LocalizedStringResource.init(stringLiteral:)(0xD000000000000019LL, v398);
    uint64_t v179 = String.init(localized:)(v178);
    uint64_t v181 = v180;
    *(void *)&__int128 v509 = v179;
    *((void *)&v509 + 1) = v180;
    uint64_t v182 = sub_1001B0714((unint64_t *)&unk_1002BE2A0, &qword_1002BE278);
    unint64_t v183 = sub_1000E95D4();
    uint64_t v184 = (uint64_t)v397;
    View.accessibilityLabel<A>(_:)(&v509, v404, &type metadata for String, v182, v183);
    swift_bridgeObjectRelease(v181);
    double v138 = v489;
    sub_1000E03B4(v174, &qword_1002BE278);
    sub_1000E011C(v184, (uint64_t)v138, &qword_1002BE280);
    uint64_t v142 = 0LL;
  }

  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v405 + 56))(v138, v142, 1LL, v406);
  uint64_t v185 = swift_allocObject(&unk_100278390, 168LL, 7LL);
  *(void *)(v185 + 160) = *(void *)(a1 + 112);
  *(void *)(v185 + swift_weakDestroy(v0 + 16) = v506;
  *(void *)(v185 + 24) = v53;
  int v186 = v505;
  *(void *)(v185 + 3sub_1000E053C(v0 + 2) = v503;
  *(void *)(v185 + 40) = v186;
  __int128 v187 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v185 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v185 + 128) = v187;
  *(_OWORD *)(v185 + 144) = *(_OWORD *)(a1 + 96);
  __int128 v188 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v185 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v185 + 64) = v188;
  __int128 v189 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v185 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v185 + 96) = v189;
  __chkstk_darwin(v185, v190);
  *(&v393 - 6) = v191;
  *(&v393 - 5) = v53;
  *(&v393 - 4) = v192;
  *(&v393 - 3) = (uint64_t)v186;
  uint64_t v391 = a1;
  sub_1001B04B8((void *)a1);
  unint64_t v193 = sub_1001B0540();
  uint64_t v194 = v407;
  Button.init(action:label:)(sub_1001B049C, v185, sub_1001B04A8, &v393 - 8, &type metadata for PackageView, v193);
  uint64_t v195 = v186[1];
  uint64_t v196 = swift_unknownObjectRetain(v501);
  uint64_t v197 = ObservedObject.init(wrappedValue:)(v196, v53, v195);
  uint64_t v199 = v198;
  *(void *)&__int128 v509 = v197;
  *((void *)&v509 + 1) = v198;
  uint64_t v200 = swift_checkMetadataState(0LL, v433);
  uint64_t v201 = v409;
  uint64_t v202 = v499;
  View.modifier<A>(_:)(&v509, v499, v200, v431);
  swift_unknownObjectRelease(v199);
  (*(void (**)(char *, void *))(v408 + 8))(v194, v202);
  uint64_t v203 = v53;
  if (qword_1002B7268 != -1) {
    swift_once(&qword_1002B7268, sub_10019D454);
  }
  uint64_t v204 = v411;
  uint64_t v205 = v412;
  View.alignmentGuide(_:computeValue:)(qword_1002C5F40, sub_1001B1660, 0LL, v411, v432);
  (*(void (**)(char *, uint64_t))(v410 + 8))(v201, v204);
  uint64_t v206 = v488;
  LocalizedStringResource.init(stringLiteral:)(0xD00000000000001ELL, 0x8000000100229C60LL);
  uint64_t v207 = String.init(localized:)(v206);
  uint64_t v209 = v208;
  *(void *)&__int128 v509 = v207;
  *((void *)&v509 + 1) = v208;
  unint64_t v210 = sub_1000E95D4();
  uint64_t v211 = v414;
  uint64_t v212 = v415;
  View.accessibilityLabel<A>(_:)(&v509, v414, &type metadata for String, v434, v210);
  __n128 v213 = swift_bridgeObjectRelease(v209);
  (*(void (**)(char *, uint64_t, __n128))(v413 + 8))(v205, v211, v213);
  __int128 v533 = *(_OWORD *)(a1 + 32);
  char v534 = *(_BYTE *)(a1 + 48);
  __int128 v513 = *(_OWORD *)(a1 + 32);
  char v514 = *(_BYTE *)(a1 + 48);
  uint64_t v214 = sub_1000DFE10(&qword_1002BE040);
  FocusState.projectedValue.getter(&v509, v214);
  __int128 v215 = v509;
  uint64_t v216 = v417;
  uint64_t v217 = v418;
  View.focused(_:)(v509, *((void *)&v509 + 1), v510, v417, v435);
  swift_release(*((void *)&v215 + 1));
  __n128 v218 = swift_release(v215);
  (*(void (**)(char *, uint64_t, __n128))(v416 + 8))(v212, v216, v218);
  __int128 v509 = v533;
  LOBYTE(v510) = v534;
  FocusState.wrappedValue.getter(&v513, v214);
  LOBYTE(v509) = v513;
  uint64_t v219 = swift_allocObject(&unk_1002783B8, 168LL, 7LL);
  *(void *)(v219 + swift_weakDestroy(v0 + 16) = v506;
  *(void *)(v219 + 24) = v203;
  uint64_t v220 = v505;
  *(void *)(v219 + 3sub_1000E053C(v0 + 2) = v503;
  *(void *)(v219 + 40) = v220;
  __int128 v221 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v219 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v219 + 128) = v221;
  *(_OWORD *)(v219 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v219 + 160) = *(void *)(a1 + 112);
  __int128 v222 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v219 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v219 + 64) = v222;
  __int128 v223 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v219 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v219 + 96) = v223;
  sub_1001B04B8((void *)a1);
  uint64_t v225 = v420;
  uint64_t v224 = v421;
  View.onChange<A>(of:initial:_:)( &v509,  0LL,  sub_1001B0588,  v219,  v420,  &type metadata for Bool,  v437,  &protocol witness table for Bool);
  __n128 v226 = swift_release(v219);
  (*(void (**)(char *, uint64_t, __n128))(v419 + 8))(v217, v225, v226);
  uint64_t v227 = v220[3];
  id v228 = v501;
  swift_unknownObjectRetain(v501);
  v499 = v227;
  LOBYTE(v206) = ((uint64_t (*)(uint64_t, double (**)(void)))v227)(v203, v220);
  swift_unknownObjectRelease(v228);
  uint64_t v229 = v423;
  View.isSelected(_:)(v206 != 0, v423, v436);
  (*(void (**)(char *, uint64_t))(v422 + 8))(v224, v229);
  v511 = &type metadata for Feature.Laguna;
  unint64_t v230 = sub_1001AE704();
  unint64_t v512 = v230;
  LOBYTE(v206) = isFeatureEnabled(_:)(&v509);
  sub_1000E053C(&v509);
  char v231 = 0;
  uint64_t v232 = v487;
  if ((v206 & 1) != 0)
  {
    v511 = &type metadata for Feature.TVMusic;
    unint64_t v512 = sub_1000FF104();
    LOBYTE(v509) = 1;
    char v233 = isFeatureEnabled(_:)(&v509);
    sub_1000E053C(&v509);
    if ((v233 & 1) != 0)
    {
      uint64_t v234 = *(void *)(a1 + 8);
      uint64_t v235 = v503;
      id v236 = *(uint64_t (**)(uint64_t, uint64_t))(v503 + 24);
      swift_unknownObjectRetain(v234);
      uint64_t v232 = v487;
      LOBYTE(v236) = v236(v506, v235);
      swift_unknownObjectRelease(v234);
      char v231 = v236 ^ 1;
    }

    else
    {
      char v231 = 0;
    }
  }

  uint64_t v237 = v425;
  uint64_t v238 = v490;
  View.disabled(_:)(v231 & 1, v425, v438);
  (*(void (**)(char *, uint64_t))(v424 + 8))(v238, v237);
  v511 = &type metadata for Feature.Laguna;
  unint64_t v512 = v230;
  LOBYTE(v238) = isFeatureEnabled(_:)(&v509);
  sub_1000E053C(&v509);
  v511 = &type metadata for Feature.TVMusic;
  unint64_t v512 = sub_1000FF104();
  LOBYTE(v509) = 1;
  char v239 = isFeatureEnabled(_:)(&v509);
  sub_1000E053C(&v509);
  if ((v239 & 1) == 0) {
    goto LABEL_12;
  }
  uint64_t v240 = *(void *)(a1 + 8);
  uint64_t v241 = v503;
  uint64_t v242 = *(uint64_t (**)(uint64_t, uint64_t))(v503 + 24);
  swift_unknownObjectRetain(v240);
  LOBYTE(v24sub_1000E053C(v0 + 2) = v242(v506, v241);
  swift_unknownObjectRelease(v240);
  else {
LABEL_12:
  }
    double v243 = 1.0;
  uint64_t v244 = v427;
  uint64_t v245 = v428;
  View.opacity(_:)(v427, v439, v243);
  (*(void (**)(char *, uint64_t))(v426 + 8))(v232, v244);
  uint64_t v246 = v505;
  uint64_t v247 = v505[13];
  id v248 = v501;
  swift_unknownObjectRetain(v501);
  uint64_t v249 = v504;
  uint64_t v250 = v246;
  double v251 = v247();
  swift_unknownObjectRelease(v248);
  uint64_t v252 = v430;
  View.offset(_:)(v430, v440, 0.0, v251);
  (*(void (**)(char *, uint64_t))(v429 + 8))(v245, v252);
  uint64_t v253 = *(char **)(a1 + 8);
  uint64_t v254 = v503;
  uint64_t v255 = *(uint64_t (**)(uint64_t, uint64_t))(v503 + 40);
  swift_unknownObjectRetain(v253);
  uint64_t v256 = v506;
  LOBYTE(v248) = v255(v506, v254);
  swift_unknownObjectRelease(v253);
  LOBYTE(v509) = v248 & 1;
  uint64_t v257 = swift_allocObject(&unk_1002783E0, 168LL, 7LL);
  *(void *)(v257 + swift_weakDestroy(v0 + 16) = v256;
  *(void *)(v257 + 24) = v249;
  *(void *)(v257 + 3sub_1000E053C(v0 + 2) = v254;
  *(void *)(v257 + 40) = v250;
  uint64_t v258 = v250;
  __int128 v259 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v257 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v257 + 128) = v259;
  *(_OWORD *)(v257 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v257 + 160) = *(void *)(a1 + 112);
  __int128 v260 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v257 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v257 + 64) = v260;
  __int128 v261 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v257 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v257 + 96) = v261;
  sub_1001B04B8((void *)a1);
  unint64_t v262 = v445;
  View.onChange<A>(of:initial:_:)( &v509,  0LL,  sub_1001B0598,  v257,  v495,  &type metadata for Bool,  v441,  &protocol witness table for Bool);
  swift_release(v257);
  uint64_t v263 = *(uint64_t (**)(uint64_t, uint64_t))(v254 + 24);
  swift_unknownObjectRetain(v253);
  LOBYTE(v248) = v263(v256, v254);
  v490 = v253;
  swift_unknownObjectRelease(v253);
  LOBYTE(v509) = v248 & 1;
  uint64_t v264 = swift_allocObject(&unk_100278408, 168LL, 7LL);
  uint64_t v265 = v504;
  *(void *)(v264 + swift_weakDestroy(v0 + 16) = v256;
  *(void *)(v264 + 24) = v265;
  *(void *)(v264 + 3sub_1000E053C(v0 + 2) = v254;
  *(void *)(v264 + 40) = v258;
  __int128 v266 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v264 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v264 + 128) = v266;
  *(_OWORD *)(v264 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v264 + 160) = *(void *)(a1 + 112);
  __int128 v267 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v264 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v264 + 64) = v267;
  __int128 v268 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v264 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v264 + 96) = v268;
  sub_1001B04B8((void *)a1);
  uint64_t v269 = v447;
  uint64_t v270 = v448;
  View.onChange<A>(of:initial:_:)( &v509,  0LL,  sub_1001B05A8,  v264,  v447,  &type metadata for Bool,  v443,  &protocol witness table for Bool);
  __n128 v271 = swift_release(v264);
  (*(void (**)(char *, uint64_t, __n128))(v446 + 8))(v262, v269, v271);
  uint64_t v272 = swift_allocObject(&unk_100278430, 168LL, 7LL);
  *(void *)(v272 + swift_weakDestroy(v0 + 16) = v256;
  *(void *)(v272 + 24) = v265;
  uint64_t v273 = v505;
  *(void *)(v272 + 3sub_1000E053C(v0 + 2) = v254;
  *(void *)(v272 + 40) = v273;
  __int128 v274 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v272 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v272 + 128) = v274;
  *(_OWORD *)(v272 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v272 + 160) = *(void *)(a1 + 112);
  __int128 v275 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v272 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v272 + 64) = v275;
  __int128 v276 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v272 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v272 + 96) = v276;
  sub_1001B04B8((void *)a1);
  uint64_t v277 = v450;
  uint64_t v278 = v451;
  View.onAppear(perform:)(sub_1001B05EC, v272, v450, v442);
  __n128 v279 = swift_release(v272);
  (*(void (**)(char *, uint64_t, __n128))(v449 + 8))(v270, v277, v279);
  uint64_t v280 = swift_allocObject(&unk_100278458, 168LL, 7LL);
  *(void *)(v280 + swift_weakDestroy(v0 + 16) = v256;
  uint64_t v281 = v504;
  *(void *)(v280 + 24) = v504;
  *(void *)(v280 + 3sub_1000E053C(v0 + 2) = v254;
  *(void *)(v280 + 40) = v273;
  __int128 v282 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v280 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v280 + 128) = v282;
  *(_OWORD *)(v280 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v280 + 160) = *(void *)(a1 + 112);
  __int128 v283 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v280 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v280 + 64) = v283;
  __int128 v284 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v280 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v280 + 96) = v284;
  sub_1001B04B8((void *)a1);
  __int128 v285 = v455;
  uint64_t v286 = v453;
  View.onDisappear(perform:)(sub_1001B05FC, v280, v453, v444);
  __n128 v287 = swift_release(v280);
  (*(void (**)(char *, uint64_t, __n128))(v452 + 8))(v278, v286, v287);
  id v288 = v501;
  swift_unknownObjectRetain(v501);
  LODWORD(v265) = ((unsigned __int8 (*)(uint64_t, double (**)(void)))v499)(v281, v273);
  swift_unknownObjectRelease(v288);
  if ((_DWORD)v265)
  {
    uint64_t v289 = swift_allocObject(&unk_100278480, 168LL, 7LL);
    uint64_t v290 = v506;
    *(void *)(v289 + swift_weakDestroy(v0 + 16) = v506;
    *(void *)(v289 + 24) = v281;
    uint64_t v291 = v505;
    *(void *)(v289 + 3sub_1000E053C(v0 + 2) = v503;
    *(void *)(v289 + 40) = v291;
    __int128 v292 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v289 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v289 + 128) = v292;
    *(_OWORD *)(v289 + 144) = *(_OWORD *)(a1 + 96);
    *(void *)(v289 + 160) = *(void *)(a1 + 112);
    __int128 v293 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v289 + 48) = *(_OWORD *)a1;
    *(_OWORD *)(v289 + 64) = v293;
    __int128 v294 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v289 + 80) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v289 + 96) = v294;
    sub_1001B04B8((void *)a1);
    __int128 v295 = sub_1001B060C;
    uint64_t v296 = v290;
  }

  else
  {
    __int128 v295 = 0LL;
    uint64_t v289 = 0LL;
    uint64_t v296 = v506;
  }

  uint64_t v297 = v457;
  View.onExitCommand(perform:)(v295, v289, v457, v454);
  sub_1000E03F0((uint64_t)v295, v289);
  (*(void (**)(char *, uint64_t))(v456 + 8))(v285, v297);
  id v501 = (id)objc_opt_self(&OBJC_CLASS___NSNotificationCenter);
  id v298 = [v501 defaultCenter];
  id v299 = *(id *)VocalAttenuationConstants.didBounceVolumeOffBottom.unsafeMutableAddressor();
  __int128 v300 = v498;
  NSNotificationCenter.publisher(for:object:)(v299, 0LL);

  uint64_t v301 = swift_allocObject(&unk_1002784A8, 168LL, 7LL);
  *(void *)(v301 + swift_weakDestroy(v0 + 16) = v296;
  *(void *)(v301 + 24) = v281;
  uint64_t v302 = v503;
  __int128 v303 = v505;
  *(void *)(v301 + 3sub_1000E053C(v0 + 2) = v503;
  *(void *)(v301 + 40) = v303;
  __int128 v304 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v301 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v301 + 128) = v304;
  *(_OWORD *)(v301 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v301 + 160) = *(void *)(a1 + 112);
  __int128 v305 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v301 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v301 + 64) = v305;
  __int128 v306 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v301 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v301 + 96) = v306;
  sub_1001B04B8((void *)a1);
  uint64_t v307 = v460;
  uint64_t v308 = v500;
  uint64_t v309 = v491;
  View.onReceive<A>(_:perform:)(v300, sub_1001B061C, v301, v460, v500, v458, v502);
  __n128 v310 = swift_release(v301);
  v499 = *(void **)(v485 + 8);
  ((void (*)(char *, uint64_t, __n128))v499)(v300, v308, v310);
  (*(void (**)(char *, uint64_t))(v459 + 8))(v309, v307);
  id v311 = [v501 defaultCenter];
  uint64_t v312 = *(uint64_t (**)(uint64_t, uint64_t))(v302 + 120);
  uint64_t v313 = v490;
  swift_unknownObjectRetain(v490);
  uint64_t v314 = v506;
  uint64_t v315 = (void *)v312(v506, v302);
  swift_unknownObjectRelease(v313);
  uint64_t v316 = v498;
  NSNotificationCenter.publisher(for:object:)(v315, 0LL);

  uint64_t v317 = swift_allocObject(&unk_1002784D0, 168LL, 7LL);
  uint64_t v318 = v504;
  *(void *)(v317 + swift_weakDestroy(v0 + 16) = v314;
  *(void *)(v317 + 24) = v318;
  *(void *)(v317 + 3sub_1000E053C(v0 + 2) = v302;
  *(void *)(v317 + 40) = v303;
  __int128 v319 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v317 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v317 + 128) = v319;
  *(_OWORD *)(v317 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v317 + 160) = *(void *)(a1 + 112);
  __int128 v320 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v317 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v317 + 64) = v320;
  __int128 v321 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v317 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v317 + 96) = v321;
  sub_1001B04B8((void *)a1);
  uint64_t v322 = v464;
  uint64_t v323 = v500;
  unint64_t v324 = v492;
  View.onReceive<A>(_:perform:)(v316, sub_1001B062C, v317, v464, v500, v461, v502);
  __n128 v325 = swift_release(v317);
  ((void (*)(char *, uint64_t, __n128))v499)(v316, v323, v325);
  (*(void (**)(char *, uint64_t))(v463 + 8))(v324, v322);
  id v326 = [v501 defaultCenter];
  uint64_t v327 = *(uint64_t (**)(uint64_t, uint64_t))(v302 + 128);
  swift_unknownObjectRetain(v313);
  uint64_t v328 = v506;
  uint64_t v329 = (void *)v327(v506, v302);
  swift_unknownObjectRelease(v313);
  v330 = v316;
  NSNotificationCenter.publisher(for:object:)(v329, 0LL);

  uint64_t v331 = swift_allocObject(&unk_1002784F8, 168LL, 7LL);
  uint64_t v332 = v504;
  *(void *)(v331 + swift_weakDestroy(v0 + 16) = v328;
  *(void *)(v331 + 24) = v332;
  unint64_t v333 = v505;
  *(void *)(v331 + 3sub_1000E053C(v0 + 2) = v302;
  *(void *)(v331 + 40) = v333;
  __int128 v334 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v331 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v331 + 128) = v334;
  *(_OWORD *)(v331 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v331 + 160) = *(void *)(a1 + 112);
  __int128 v335 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v331 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v331 + 64) = v335;
  __int128 v336 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v331 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v331 + 96) = v336;
  sub_1001B04B8((void *)a1);
  uint64_t v337 = v330;
  v338 = v330;
  uint64_t v339 = v468;
  uint64_t v340 = v500;
  uint64_t v341 = v493;
  View.onReceive<A>(_:perform:)(v338, sub_1001B063C, v331, v468, v500, v466, v502);
  __n128 v342 = swift_release(v331);
  uint64_t v343 = (void (*)(char *, uint64_t, __n128))v499;
  ((void (*)(char *, uint64_t, __n128))v499)(v337, v340, v342);
  (*(void (**)(char *, uint64_t))(v467 + 8))(v341, v339);
  id v344 = [v501 defaultCenter];
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidBecomeActiveNotification, 0LL);

  uint64_t v345 = swift_allocObject(&unk_100278520, 168LL, 7LL);
  *(void *)(v345 + swift_weakDestroy(v0 + 16) = v506;
  *(void *)(v345 + 24) = v332;
  uint64_t v346 = v503;
  *(void *)(v345 + 3sub_1000E053C(v0 + 2) = v503;
  *(void *)(v345 + 40) = v333;
  __int128 v347 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v345 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v345 + 128) = v347;
  *(_OWORD *)(v345 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v345 + 160) = *(void *)(a1 + 112);
  __int128 v348 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v345 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v345 + 64) = v348;
  __int128 v349 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v345 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v345 + 96) = v349;
  sub_1001B04B8((void *)a1);
  uint64_t v350 = v472;
  uint64_t v351 = v340;
  uint64_t v352 = v340;
  uint64_t v353 = v502;
  uint64_t v354 = v496;
  View.onReceive<A>(_:perform:)(v337, sub_1001B064C, v345, v472, v352, v469, v502);
  __n128 v355 = swift_release(v345);
  v343(v337, v351, v355);
  (*(void (**)(char *, uint64_t))(v471 + 8))(v354, v350);
  id v356 = [v501 defaultCenter];
  v357 = v337;
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidEnterBackgroundNotification, 0LL);

  uint64_t v358 = swift_allocObject(&unk_100278548, 168LL, 7LL);
  uint64_t v359 = v504;
  *(void *)(v358 + swift_weakDestroy(v0 + 16) = v506;
  *(void *)(v358 + 24) = v359;
  v360 = v505;
  *(void *)(v358 + 3sub_1000E053C(v0 + 2) = v346;
  *(void *)(v358 + 40) = v360;
  __int128 v361 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v358 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v358 + 128) = v361;
  *(_OWORD *)(v358 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v358 + 160) = *(void *)(a1 + 112);
  __int128 v362 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v358 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v358 + 64) = v362;
  __int128 v363 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v358 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v358 + 96) = v363;
  sub_1001B04B8((void *)a1);
  uint64_t v364 = v478;
  uint64_t v365 = v337;
  uint64_t v366 = v475;
  uint64_t v367 = v497;
  View.onReceive<A>(_:perform:)(v365, sub_1001B0654, v358, v475, v351, v473, v353);
  __n128 v368 = swift_release(v358);
  uint64_t v369 = (void (*)(char *, uint64_t, __n128))v499;
  ((void (*)(char *, uint64_t, __n128))v499)(v357, v351, v368);
  (*(void (**)(char *, uint64_t))(v474 + 8))(v367, v366);
  id v370 = [v501 defaultCenter];
  uint64_t v371 = v357;
  NSNotificationCenter.publisher(for:object:)(@"TVMusicSystemNowPlayingViewControllerDidAppear", 0LL);

  uint64_t v372 = swift_allocObject(&unk_100278570, 168LL, 7LL);
  uint64_t v373 = v504;
  *(void *)(v372 + swift_weakDestroy(v0 + 16) = v506;
  *(void *)(v372 + 24) = v373;
  v374 = v505;
  *(void *)(v372 + 3sub_1000E053C(v0 + 2) = v503;
  *(void *)(v372 + 40) = v374;
  __int128 v375 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v372 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v372 + 128) = v375;
  *(_OWORD *)(v372 + 144) = *(_OWORD *)(a1 + 96);
  *(void *)(v372 + 160) = *(void *)(a1 + 112);
  __int128 v376 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v372 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v372 + 64) = v376;
  __int128 v377 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v372 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v372 + 96) = v377;
  sub_1001B04B8((void *)a1);
  uint64_t v378 = (uint64_t)v477;
  uint64_t v379 = v480;
  View.onReceive<A>(_:perform:)(v371, sub_1001B064C, v372, v480, v351, v476, v502);
  __n128 v380 = swift_release(v372);
  v369(v371, v351, v380);
  (*(void (**)(char *, uint64_t))(v479 + 8))(v364, v379);
  uint64_t v381 = v484;
  uint64_t v382 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v484);
  uint64_t v383 = v482;
  sub_1000E3E08(v378, v381, v482);
  uint64_t v384 = v481;
  v385 = *(void (**)(uint64_t, uint64_t))(v481 + 8);
  v385(v378, v381);
  uint64_t v386 = (uint64_t)v489;
  uint64_t v387 = v465;
  sub_1000E04D4((uint64_t)v489, v465, &qword_1002BE258);
  *(void *)&__int128 v509 = v387;
  v388 = *(void (**)(char *, uint64_t, uint64_t))(v384 + 16);
  uint64_t v389 = v483;
  v388(v483, v383, v381);
  *((void *)&v509 + 1) = v389;
  *(void *)&__int128 v513 = v462;
  *((void *)&v513 + 1) = v381;
  uint64_t v507 = sub_100186A9C( &qword_1002BE290,  &qword_1002BE258,  (void (*)(void))sub_1001B0678,  (uint64_t)&protocol conformance descriptor for <A> A?);
  uint64_t v508 = v382;
  sub_1000E2EF4((uint64_t *)&v509, 2uLL, (uint64_t)&v513);
  v385(v383, v381);
  (*(void (**)(char *, uint64_t))(v470 + 8))(v494, v495);
  sub_1000E03B4(v386, &qword_1002BE258);
  v385((uint64_t)v389, v381);
  return sub_1000E03B4(v387, &qword_1002BE258);
}

double sub_1001A8F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v17[0] = a2;
  v17[1] = a3;
  void v17[2] = a4;
  v17[3] = a5;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v17);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(unsigned __int8 (**)(uint64_t, uint64_t))(a5 + 24);
  swift_unknownObjectRetain(v8);
  LODWORD(v9) = v9(a3, a5);
  uint64_t v10 = swift_unknownObjectRelease(v8);
  if ((_DWORD)v9)
  {
    uint64_t v11 = static Animation.easeInOut(duration:)(v10, 0.2);
    uint64_t v13 = __chkstk_darwin(v11, v12);
    uint64_t v14 = sub_1001B088C;
  }

  else
  {
    uint64_t v11 = static Animation.easeOut(duration:)(v10, 0.3);
    uint64_t v13 = __chkstk_darwin(v11, v15);
    uint64_t v14 = sub_1001B08C8;
  }

  withAnimation<A>(_:_:)(v13, v14);
  *(void *)&double result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1001A9048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v13[3] = a5;
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v13);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(a5 + 32);
  swift_unknownObjectRetain(v10);
  v11(a6, a3, a5);
  return swift_unknownObjectRelease(v10);
}

void *sub_1001A90CC@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)&__int128 v17 = a2;
  *((void *)&v17 + 1) = a3;
  uint64_t v18 = a4;
  uint64_t v19 = a5;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&v17);
  __int128 v17 = *(_OWORD *)(a1 + 72);
  sub_1000DFE10(&qword_1002BE2B0);
  State.wrappedValue.getter(&v20);
  char v10 = v20;
  __int128 v17 = *(_OWORD *)(a1 + 32);
  LOBYTE(v18) = *(_BYTE *)(a1 + 48);
  uint64_t v11 = sub_1000DFE10(&qword_1002BE040);
  double result = FocusState.wrappedValue.getter(&v20, v11);
  if (v20 == 1)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
    swift_unknownObjectRetain(v13);
    char v15 = v14(a3, a5);
    double result = (void *)swift_unknownObjectRelease(v13);
    BOOL v16 = v15 == 0;
  }

  else
  {
    BOOL v16 = 0;
  }

  *(void *)a6 = 0xD00000000000001ALL;
  *(void *)(a6 + 8) = 0x8000000100229CA0LL;
  *(_BYTE *)(a6 + swift_weakDestroy(v0 + 16) = v10;
  *(_BYTE *)(a6 + 17) = v16;
  return result;
}

void *sub_1001A91D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t a1), void *a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v15 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v63 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v62 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v61 = type metadata accessor for DispatchTime(0LL);
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v19 = __chkstk_darwin(v61, v18);
  uint64_t v58 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v19, v21);
  uint64_t v60 = (char *)&v54 - v22;
  __int128 aBlock = *(_OWORD *)(a1 + 32);
  LOBYTE(v65) = *(_BYTE *)(a1 + 48);
  uint64_t v23 = sub_1000DFE10(&qword_1002BE040);
  double result = FocusState.wrappedValue.getter(&v69, v23);
  if (v69 == 1)
  {
    *(void *)&__int128 aBlock = a2;
    *((void *)&aBlock + 1) = a3;
    uint64_t v65 = a4;
    uint64_t v66 = a5;
    type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&aBlock);
    uint64_t v25 = *(void *)(a1 + 24);
    uint64_t v57 = a4;
    uint64_t v26 = v15;
    uint64_t v27 = v14;
    uint64_t v28 = v11;
    uint64_t v29 = v10;
    uint64_t v30 = (unsigned __int8 (*)(uint64_t, void *))a5[3];
    swift_unknownObjectRetain(v25);
    LODWORD(v30) = v30(a3, a5);
    double result = (void *)swift_unknownObjectRelease(v25);
    uint64_t v31 = v26;
    uint64_t v32 = v57;
    if ((_DWORD)v30 == 1)
    {
      uint64_t v33 = v29;
      uint64_t v34 = v28;
      uint64_t v35 = v27;
      uint64_t v55 = v34;
      uint64_t v56 = v31;
      sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
      uint64_t v54 = static OS_dispatch_queue.main.getter();
      uint64_t v36 = v58;
      static DispatchTime.now()();
      uint64_t v37 = v60;
      + infix(_:_:)(v36, 0.1);
      uint64_t v38 = *(void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v39 = v36;
      uint64_t v40 = a2;
      uint64_t v41 = v61;
      v38(v39, v61);
      uint64_t v42 = swift_allocObject(&unk_1002785E8, 168LL, 7LL);
      *(void *)(v42 + swift_weakDestroy(v0 + 16) = v40;
      *(void *)(v42 + 24) = a3;
      *(void *)(v42 + 3sub_1000E053C(v0 + 2) = v32;
      *(void *)(v42 + 40) = a5;
      __int128 v43 = *(_OWORD *)(a1 + 80);
      *(_OWORD *)(v42 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)(v42 + 128) = v43;
      *(_OWORD *)(v42 + 144) = *(_OWORD *)(a1 + 96);
      *(void *)(v42 + 160) = *(void *)(a1 + 112);
      __int128 v44 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v42 + 48) = *(_OWORD *)a1;
      *(_OWORD *)(v42 + 64) = v44;
      __int128 v45 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v42 + 80) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v42 + 96) = v45;
      uint64_t v67 = sub_1001B083C;
      uint64_t v68 = v42;
      *(void *)&__int128 aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256LL;
      uint64_t v65 = sub_1000FA280;
      uint64_t v66 = &unk_100278600;
      uint64_t v46 = _Block_copy(&aBlock);
      uint64_t v47 = v68;
      sub_1001B04B8((void *)a1);
      swift_release(v47);
      uint64_t v48 = v62;
      static DispatchQoS.unspecified.getter(v49);
      *(void *)&__int128 aBlock = _swiftEmptyArrayStorage;
      uint64_t v50 = sub_1000DF308( (unint64_t *)&qword_1002B9390,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      uint64_t v51 = sub_1000DFE10(&qword_1002B86F8);
      uint64_t v52 = sub_1000E0374( (unint64_t *)&qword_1002B93A0,  &qword_1002B86F8,  (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v52, v33, v50);
      uint64_t v53 = (void *)v54;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v37, v48, v35, v46);
      _Block_release(v46);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v33);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v56);
      return (void *)((uint64_t (*)(char *, uint64_t))v38)(v37, v41);
    }
  }

  return result;
}

void *sub_1001A9580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a4;
  v18[0] = a2;
  v18[1] = a3;
  v18[2] = a4;
  v18[3] = a5;
  uint64_t v10 = type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v18);
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 40);
  swift_unknownObjectRetain(v11);
  LOBYTE(v6) = v12(a2, v6);
  swift_unknownObjectRelease(v11);
  if ((v6 & 1) == 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    uint64_t v14 = (unsigned __int8 (*)(uint64_t, void *))a5[3];
    swift_unknownObjectRetain(v13);
    LODWORD(v14) = v14(a3, a5);
    swift_unknownObjectRelease(v13);
    if ((_DWORD)v14)
    {
      uint64_t v15 = (void (*)(void, uint64_t, void *))a5[4];
      swift_unknownObjectRetain(v13);
      v15(0LL, a3, a5);
      swift_unknownObjectRelease(v13);
    }

    uint64_t v16 = (void (*)(void, uint64_t, void *))a5[8];
    swift_unknownObjectRetain(v13);
    v16(0LL, a3, a5);
    swift_unknownObjectRelease(v13);
  }

  return sub_1001A9690(v10);
}

void *sub_1001A9690(uint64_t a1)
{
  uint64_t v2 = v1;
  __int128 v13 = *(_OWORD *)(v1 + 56);
  sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  double result = State.wrappedValue.getter(&v12);
  if (v12 == 1)
  {
    uint64_t v5 = *(void *)(v1 + 8);
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 40);
    uint64_t v8 = *(void *)(a1 + 16);
    swift_unknownObjectRetain(*(void *)(v2 + 8));
    LOBYTE(v7) = v7(v8, v6);
    swift_unknownObjectRelease(v5);
    if ((v7 & 1) != 0
      && (uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24),
          swift_unknownObjectRetain(v5),
          char v10 = v9(v8, v6),
          swift_unknownObjectRelease(v5),
          (v10 & 1) != 0))
    {
      __int128 v13 = *(_OWORD *)(v2 + 72);
      char v12 = 2;
    }

    else
    {
      __int128 v13 = *(_OWORD *)(v2 + 72);
      char v12 = 0;
    }

    uint64_t v11 = sub_1000DFE10(&qword_1002BE2B0);
    return (void *)State.wrappedValue.setter(&v12, v11);
  }

  return result;
}

void *sub_1001A978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v13 = 1;
  uint64_t v9 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  State.wrappedValue.setter(&v13, v9);
  v12[0] = a2;
  v12[1] = a3;
  v12[2] = a4;
  void v12[3] = a5;
  uint64_t v10 = type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v12);
  return sub_1001A9690(v10);
}

uint64_t sub_1001A9818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v18 = 0;
  uint64_t v10 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  State.wrappedValue.setter(&v18, v10);
  *(void *)&__int128 v15 = a2;
  *((void *)&v15 + 1) = a3;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&v15);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(void (**)(void, uint64_t, uint64_t))(a5 + 32);
  swift_unknownObjectRetain(v11);
  v12(0LL, a3, a5);
  swift_unknownObjectRelease(v11);
  __int128 v15 = *(_OWORD *)(a1 + 72);
  char v18 = 0;
  uint64_t v13 = sub_1000DFE10(&qword_1002BE2B0);
  return State.wrappedValue.setter(&v18, v13);
}

uint64_t sub_1001A98E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v11[0] = a2;
  v11[1] = a3;
  v11[2] = a4;
  v11[3] = a5;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v11);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void (**)(void, uint64_t, uint64_t))(a5 + 32);
  swift_unknownObjectRetain(v8);
  v9(0LL, a3, a5);
  return swift_unknownObjectRelease(v8);
}

uint64_t sub_1001A9958( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t a1), void *a6)
{
  uint64_t v49 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v52 = *(void *)(v49 - 8);
  __chkstk_darwin(v49, v11);
  uint64_t v48 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v51 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v13);
  uint64_t v47 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v53 = type metadata accessor for DispatchTime(0LL);
  uint64_t v15 = *(void *)(v53 - 8);
  uint64_t v17 = __chkstk_darwin(v53, v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v17, v20);
  uint64_t v46 = (char *)&v46 - v21;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(void *)&__int128 aBlock = a3;
  *((void *)&aBlock + 1) = a4;
  uint64_t v23 = a4;
  uint64_t v60 = a5;
  uint64_t v61 = a6;
  uint64_t v24 = a6;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&aBlock);
  __int128 aBlock = *(_OWORD *)(a2 + 88);
  v64[0] = Current;
  uint64_t v25 = sub_1000DFE10(&qword_1002BE2B8);
  State.wrappedValue.setter(v64, v25);
  uint64_t v27 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v26, 2.0, 300.0, 50.0, 0.0);
  uint64_t v54 = a3;
  uint64_t v55 = v23;
  uint64_t v56 = a5;
  uint64_t v57 = v24;
  uint64_t v58 = a2;
  withAnimation<A>(_:_:)(v27, sub_1001B0770);
  swift_release(v27);
  sub_1000E0418(0LL, (unint64_t *)&qword_1002BBD80, &OBJC_CLASS___OS_dispatch_queue_ptr);
  uint64_t v28 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)(v19, 0.25);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v19, v53);
  uint64_t v30 = swift_allocObject(&unk_100278598, 168LL, 7LL);
  *(void *)(v30 + swift_weakDestroy(v0 + 16) = a3;
  *(void *)(v30 + 24) = v23;
  *(void *)(v30 + 3sub_1000E053C(v0 + 2) = a5;
  *(void *)(v30 + 40) = v24;
  __int128 v31 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v30 + 11sub_1000E053C(v0 + 2) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v30 + 128) = v31;
  *(_OWORD *)(v30 + 144) = *(_OWORD *)(a2 + 96);
  *(void *)(v30 + 160) = *(void *)(a2 + 112);
  __int128 v32 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v30 + 64) = v32;
  __int128 v33 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v30 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v30 + 96) = v33;
  uint64_t v62 = sub_1001B078C;
  uint64_t v63 = v30;
  *(void *)&__int128 aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256LL;
  uint64_t v60 = sub_1000FA280;
  uint64_t v61 = &unk_1002785B0;
  uint64_t v34 = _Block_copy(&aBlock);
  uint64_t v35 = v63;
  sub_1001B04B8((void *)a2);
  swift_release(v35);
  uint64_t v36 = v47;
  static DispatchQoS.unspecified.getter(v37);
  *(void *)&__int128 aBlock = _swiftEmptyArrayStorage;
  uint64_t v38 = sub_1000DF308( (unint64_t *)&qword_1002B9390,  (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags,  (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  uint64_t v39 = sub_1000DFE10(&qword_1002B86F8);
  uint64_t v40 = sub_1000E0374( (unint64_t *)&qword_1002B93A0,  &qword_1002B86F8,  (uint64_t)&protocol conformance descriptor for [A]);
  uint64_t v41 = v48;
  uint64_t v42 = v39;
  uint64_t v43 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v42, v40, v49, v38);
  __int128 v44 = v46;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v46, v36, v41, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v43);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
  return ((uint64_t (*)(char *, uint64_t))v29)(v44, v53);
}

void sub_1001A9D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double Current = CFAbsoluteTimeGetCurrent();
  *(void *)&__int128 v15 = a2;
  *((void *)&v15 + 1) = a3;
  uint64_t v16 = a4;
  uint64_t v17 = a5;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&v15);
  __int128 v15 = *(_OWORD *)(a1 + 88);
  sub_1000DFE10(&qword_1002BE2B8);
  uint64_t v11 = State.wrappedValue.getter(&v18);
  if (Current - v18 > 0.25)
  {
    uint64_t v12 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(v11, 2.0, 300.0, 50.0, 0.0);
    uint64_t v14 = __chkstk_darwin(v12, v13);
    withAnimation<A>(_:_:)(v14, sub_1001B07AC);
    swift_release(v12);
  }

uint64_t sub_1001A9E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  v13[0] = a2;
  v13[1] = a3;
  v13[2] = a4;
  v13[3] = a5;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v13);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, double))(a5 + 112);
  swift_unknownObjectRetain(v10);
  v11(a3, a5, a6);
  return swift_unknownObjectRelease(v10);
}

uint64_t sub_1001A9ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v18[0] = a3;
  v18[1] = a4;
  v18[2] = a5;
  v18[3] = a6;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v18);
  uint64_t v11 = *(void *)(a2 + 8);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 112);
  swift_unknownObjectRetain(v11);
  char v13 = v12(a3, a5);
  uint64_t result = swift_unknownObjectRelease(v11);
  if (v13 != 2 && (v13 & 1) == 0)
  {
    uint64_t v16 = *(void *)(a2 + 24);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(a6 + 64);
    swift_unknownObjectRetain(v16);
    v17(1LL, a4, a6);
    return swift_unknownObjectRelease(v16);
  }

  return result;
}

uint64_t sub_1001A9F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v12[0] = a3;
  v12[1] = a4;
  v12[2] = a5;
  void v12[3] = a6;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v12);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void (**)(void, uint64_t, uint64_t))(a6 + 64);
  swift_unknownObjectRetain(v9);
  v10(0LL, a4, a6);
  return swift_unknownObjectRelease(v9);
}

double sub_1001AA004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&__int128 v9 = a3;
  *((void *)&v9 + 1) = a4;
  uint64_t v10 = a5;
  uint64_t v11 = a6;
  type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)&v9);
  __int128 v9 = *(_OWORD *)(a2 + 72);
  char v12 = 0;
  uint64_t v7 = sub_1000DFE10(&qword_1002BE2B0);
  *(void *)&double result = State.wrappedValue.setter(&v12, v7).n128_u64[0];
  return result;
}

uint64_t sub_1001AA064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v95 = sub_1000DEA98(&qword_1002BE258);
  uint64_t v94 = type metadata accessor for NSNotificationCenter.Publisher(255LL);
  uint64_t v3 = sub_1000DEA98(&qword_1002BE260);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v92 = a1;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v91 = v4;
  uint64_t v90 = v5;
  uint64_t v7 = type metadata accessor for VocalAttenuationButtonModifier(255LL, v4, v5, v6);
  uint64_t v8 = type metadata accessor for ModifiedContent(255LL, v3, v7);
  uint64_t v9 = type metadata accessor for ModifiedContent(255LL, v8, &type metadata for _AlignmentWritingModifier);
  uint64_t v10 = type metadata accessor for AccessibilityAttachmentModifier(255LL);
  uint64_t v11 = type metadata accessor for ModifiedContent(255LL, v9, v10);
  uint64_t v119 = sub_1000E0374(&qword_1002BE268, &qword_1002BE260, (uint64_t)&protocol conformance descriptor for Button<A>);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EFEF8, v7);
  uint64_t v117 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  unint64_t v118 = sub_1001ADED4();
  uint64_t v115 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  uint64_t v116 = sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  uint64_t v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  uint64_t v97 = v11;
  uint64_t v98 = (void *)v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v97,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  0LL);
  uint64_t v97 = v11;
  uint64_t v98 = (void *)v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v97,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  1LL);
  uint64_t v97 = OpaqueTypeMetadata2;
  uint64_t v98 = &type metadata for Bool;
  uint64_t v99 = OpaqueTypeConformance2;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v15 = swift_getOpaqueTypeMetadata2( 255LL,  &v97,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v16 = sub_1000DEA98(&qword_1002BDFD0);
  uint64_t v17 = type metadata accessor for ModifiedContent(255LL, v15, v16);
  uint64_t v18 = sub_1000DEA98(&qword_1002B7BA0);
  uint64_t v19 = type metadata accessor for ModifiedContent(255LL, v17, v18);
  uint64_t v20 = type metadata accessor for ModifiedContent(255LL, v19, &type metadata for _OpacityEffect);
  uint64_t v21 = type metadata accessor for ModifiedContent(255LL, v20, &type metadata for _OffsetEffect);
  uint64_t v97 = OpaqueTypeMetadata2;
  uint64_t v98 = &type metadata for Bool;
  uint64_t v99 = OpaqueTypeConformance2;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v22 = swift_getOpaqueTypeConformance2( &v97,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v23 = sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  uint64_t v113 = v22;
  uint64_t v114 = v23;
  uint64_t v24 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  uint64_t v25 = sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  uint64_t v111 = v24;
  uint64_t v112 = v25;
  uint64_t v109 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  uint64_t v110 = &protocol witness table for _OpacityEffect;
  uint64_t v107 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  uint64_t v108 = &protocol witness table for _OffsetEffect;
  uint64_t v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v21);
  uint64_t v97 = v21;
  uint64_t v98 = &type metadata for Bool;
  uint64_t v99 = v26;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v27 = swift_getOpaqueTypeMetadata2( 255LL,  &v97,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v97 = v21;
  uint64_t v98 = &type metadata for Bool;
  uint64_t v99 = v26;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v28 = swift_getOpaqueTypeConformance2( &v97,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v97 = v27;
  uint64_t v98 = &type metadata for Bool;
  uint64_t v99 = v28;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v29 = swift_getOpaqueTypeMetadata2( 255LL,  &v97,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v30 = type metadata accessor for ModifiedContent(255LL, v29, &type metadata for _AppearanceActionModifier);
  uint64_t v31 = type metadata accessor for ModifiedContent(255LL, v30, &type metadata for _AppearanceActionModifier);
  uint64_t v97 = v27;
  uint64_t v98 = &type metadata for Bool;
  uint64_t v99 = v28;
  uint64_t v100 = &protocol witness table for Bool;
  uint64_t v105 = swift_getOpaqueTypeConformance2( &v97,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v106 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v103 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v30);
  uint64_t v104 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v32 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  uint64_t v97 = v31;
  uint64_t v98 = (void *)v32;
  uint64_t v33 = swift_getOpaqueTypeMetadata2( 255LL,  &v97,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  0LL);
  uint64_t v34 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v97 = v31;
  uint64_t v98 = (void *)v32;
  uint64_t v35 = swift_getOpaqueTypeConformance2( &v97,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
  uint64_t v97 = v94;
  uint64_t v98 = (void *)v33;
  uint64_t v99 = v34;
  uint64_t v100 = (void *)v35;
  uint64_t v36 = type metadata accessor for SubscriptionView(255LL, &v97);
  uint64_t v37 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v36);
  uint64_t v97 = v94;
  uint64_t v98 = (void *)v36;
  uint64_t v99 = v34;
  uint64_t v100 = (void *)v37;
  uint64_t v38 = type metadata accessor for SubscriptionView(255LL, &v97);
  uint64_t v39 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v38);
  uint64_t v97 = v94;
  uint64_t v98 = (void *)v38;
  uint64_t v99 = v34;
  uint64_t v100 = (void *)v39;
  uint64_t v40 = type metadata accessor for SubscriptionView(255LL, &v97);
  uint64_t v41 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v40);
  uint64_t v97 = v94;
  uint64_t v98 = (void *)v40;
  uint64_t v99 = v34;
  uint64_t v100 = (void *)v41;
  uint64_t v42 = type metadata accessor for SubscriptionView(255LL, &v97);
  uint64_t v43 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v42);
  uint64_t v97 = v94;
  uint64_t v98 = (void *)v42;
  uint64_t v99 = v34;
  uint64_t v100 = (void *)v43;
  uint64_t v44 = type metadata accessor for SubscriptionView(255LL, &v97);
  uint64_t v45 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v44);
  uint64_t v97 = v94;
  uint64_t v98 = (void *)v44;
  uint64_t v99 = v34;
  uint64_t v100 = (void *)v45;
  uint64_t v46 = type metadata accessor for SubscriptionView(255LL, &v97);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255LL, v95, v46, 0LL, 0LL);
  uint64_t v48 = type metadata accessor for TupleView(255LL, TupleTypeMetadata2);
  uint64_t v49 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v48);
  uint64_t v50 = type metadata accessor for HStack(0LL, v48, v49);
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v53 = __chkstk_darwin(v50, v52);
  uint64_t v95 = (uint64_t)&v90 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v53, v55);
  uint64_t v57 = (char *)&v90 - v56;
  uint64_t v58 = type metadata accessor for Optional(0LL);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v61 = __chkstk_darwin(v58, v60);
  uint64_t v63 = (char *)&v90 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v61, v64);
  uint64_t v66 = (char *)&v90 - v65;
  id v67 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance];
  LODWORD(v27) = [v67 hasMusicSubscription];

  if (!(_DWORD)v27) {
    goto LABEL_8;
  }
  uint64_t v68 = *(void *)(v93 + 8);
  uint64_t v69 = *(void *)(v92 + 32);
  uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 24);
  uint64_t v94 = v50;
  uint64_t v71 = v58;
  uint64_t v72 = v63;
  uint64_t v73 = v66;
  uint64_t v74 = v51;
  uint64_t v75 = v59;
  uint64_t v76 = v57;
  uint64_t v77 = *(void *)(v92 + 16);
  swift_unknownObjectRetain(v68);
  uint64_t v78 = v77;
  uint64_t v79 = (uint64_t)v76;
  uint64_t v59 = v75;
  uint64_t v51 = v74;
  uint64_t v66 = v73;
  uint64_t v63 = v72;
  uint64_t v58 = v71;
  uint64_t v50 = v94;
  LOBYTE(v69) = v70(v78, v69);
  swift_unknownObjectRelease(v68);
  if ((v69 & 1) == 0)
  {
    uint64_t v100 = &type metadata for Feature.Laguna;
    unint64_t v101 = sub_1001AE704();
    char v85 = isFeatureEnabled(_:)(&v97);
    sub_1000E053C(&v97);
    if ((v85 & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v100 = &type metadata for Feature.TVMusic;
    unint64_t v101 = sub_1000FF104();
    LOBYTE(v97) = 1;
    char v86 = isFeatureEnabled(_:)(&v97);
    uint64_t v87 = sub_1000E053C(&v97);
  }

  uint64_t v80 = *(void *)(v93 + 24);
  uint64_t v81 = v90;
  uint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t))(v90 + 88);
  swift_unknownObjectRetain(v80);
  LOBYTE(v81) = v82(v91, v81);
  swift_unknownObjectRelease(v80);
  if ((v81 & 1) != 0)
  {
    uint64_t v83 = v95;
    sub_1001A6758(v92, v95);
    swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v50);
    sub_1000E3E08(v83, v50, v79);
    uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v84(v83, v50);
    sub_1000E3158(v79, v50, (uint64_t)v63);
    v84(v79, v50);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v63, 0LL, 1LL, v50);
  }

  else
  {
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v63, 1LL, 1LL, v50);
    swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v50);
  }

  sub_1000E3170((uint64_t)v63, (uint64_t)v66);
  uint64_t v88 = *(void (**)(char *, uint64_t))(v59 + 8);
  v88(v63, v58);
  uint64_t v102 = swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v50);
  swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v58);
  sub_1000E3158((uint64_t)v66, v58, v96);
  return ((uint64_t (*)(char *, uint64_t))v88)(v66, v58);
}

uint64_t sub_1001AAA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001AA064(a1, a2);
}

uint64_t sub_1001AAAC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v110 = a1;
  uint64_t v3 = type metadata accessor for LocalizedStringResource(0LL);
  __chkstk_darwin(v3, v4);
  uint64_t v109 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v102 = type metadata accessor for AutomationSemantics.NowPlayingElement(0LL);
  uint64_t v100 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v6);
  uint64_t v98 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v103 = type metadata accessor for AutomationSemantics(0LL);
  uint64_t v101 = *(void *)(v103 - 8);
  __chkstk_darwin(v103, v8);
  uint64_t v99 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002BE2E8);
  __chkstk_darwin(v10, v11);
  char v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(&qword_1002BE2F0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v18 = sub_1000DFE10(&qword_1002BE2F8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v91 = sub_1000DFE10(&qword_1002BE300);
  __chkstk_darwin(v91, v22);
  uint64_t v92 = (char *)&v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v94 = sub_1000DFE10(&qword_1002BE308);
  __chkstk_darwin(v94, v24);
  uint64_t v93 = (uint64_t)&v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v97 = sub_1000DFE10(&qword_1002BE310);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v26);
  uint64_t v95 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v106 = sub_1000DFE10(&qword_1002BE318);
  __chkstk_darwin(v106, v28);
  uint64_t v108 = (char *)&v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v107 = sub_1000DFE10(&qword_1002BE320);
  uint64_t v105 = *(void *)(v107 - 8);
  __chkstk_darwin(v107, v30);
  uint64_t v104 = (char *)&v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __int128 v32 = *v2;
  __int128 v114 = v2[1];
  __int128 v115 = v32;
  uint64_t v33 = *((void *)&v32 + 1);
  uint64_t v34 = (void *)*((void *)&v114 + 1);
  __int128 v113 = v2[2];
  uint64_t v35 = (_OWORD *)swift_allocObject(&unk_100278638, 64LL, 7LL);
  __int128 v36 = v2[1];
  v35[1] = *v2;
  v35[2] = v36;
  v35[3] = v2[2];
  sub_100112B28((uint64_t)&v115);
  sub_1001ADC50((uint64_t)&v114);
  sub_100112B28((uint64_t)&v113);
  Button.init(action:label:)( sub_1001B0928,  v35,  sub_1001AB5F0,  0LL,  &type metadata for Image,  &protocol witness table for Image);
  uint64_t v38 = static Alignment.center.getter(v37);
  uint64_t v40 = v39;
  uint64_t v41 = (uint64_t)&v13[*(int *)(v10 + 36)];
  sub_1001AB638((uint64_t)v2, v41);
  uint64_t v42 = (uint64_t *)(v41 + *(int *)(sub_1000DFE10(&qword_1002BE328) + 36));
  *uint64_t v42 = v38;
  v42[1] = v40;
  uint64_t v43 = (uint64_t (*)@<X0>(double *@<X8>))swift_allocObject(&unk_100278660, 64LL, 7LL);
  __int128 v44 = v2[1];
  *((_OWORD *)v43 + 1) = *v2;
  *((_OWORD *)v43 + sub_1000E053C(v0 + 2) = v44;
  *((_OWORD *)v43 + 3) = v2[2];
  sub_1000E04D4((uint64_t)v13, (uint64_t)v17, &qword_1002BE2E8);
  uint64_t v45 = (uint64_t (**)@<X0>(double *@<X8>))&v17[*(int *)(v14 + 36)];
  *uint64_t v45 = sub_1001AB87C;
  v45[1] = 0LL;
  v45[2] = (uint64_t (*)@<X0>(double *@<X8>))sub_1001B0934;
  void v45[3] = v43;
  sub_100112B28((uint64_t)&v115);
  sub_1001ADC50((uint64_t)&v114);
  sub_100112B28((uint64_t)&v113);
  sub_1000E03B4((uint64_t)v13, &qword_1002BE2E8);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v47 = swift_getKeyPath(&unk_1001EFA80);
  id v48 = v34;
  static Published.subscript.getter(v112, v48, KeyPath, v47);
  swift_release(KeyPath);
  swift_release(v47);
  sub_1001ACFDC((uint64_t)&v114);
  uint64_t v49 = LOBYTE(v112[0]);
  unint64_t v50 = sub_1001B0954();
  View.isSelected(_:)(v49, v14, v50);
  sub_1000E03B4((uint64_t)v17, &qword_1002BE2F0);
  uint64_t v51 = swift_getKeyPath(&unk_1001EF1C0);
  uint64_t v52 = swift_getKeyPath(&unk_1001EF1E8);
  uint64_t v53 = swift_retain(v33);
  static Published.subscript.getter(v112, v53, v51, v52);
  swift_release(v51);
  swift_release(v52);
  sub_10011B518((uint64_t)&v115);
  if ((v112[0] & 1) != 0
    || (uint64_t v54 = swift_getKeyPath(&unk_1001EF208),
        uint64_t v55 = swift_getKeyPath(&unk_1001EF230),
        static Published.subscript.getter(v112, v48, v54, v55),
        swift_release(v54),
        swift_release(v55),
        sub_1001ACFDC((uint64_t)&v114),
        (v112[0] & 1) != 0))
  {
    char v56 = 0;
  }

  else
  {
    v112[0] = v113;
    sub_1000DFE10((uint64_t *)&unk_1002B7F50);
    State.wrappedValue.getter(v111);
    char v56 = LOBYTE(v111[0]) ^ 1;
  }

  uint64_t v57 = (uint64_t)v92;
  uint64_t v58 = swift_getKeyPath(&unk_1001EF3B8);
  uint64_t v59 = swift_allocObject(&unk_100278688, 17LL, 7LL);
  *(_BYTE *)(v59 + swift_weakDestroy(v0 + 16) = v56 & 1;
  sub_1000E04D4((uint64_t)v21, v57, &qword_1002BE2F8);
  uint64_t v60 = (uint64_t *)(v57 + *(int *)(v91 + 36));
  *uint64_t v60 = v58;
  v60[1] = (uint64_t)sub_1001B165C;
  _OWORD v60[2] = v59;
  sub_1000E03B4((uint64_t)v21, &qword_1002BE2F8);
  uint64_t v61 = swift_getKeyPath(&unk_1001EF1C0);
  uint64_t v62 = swift_getKeyPath(&unk_1001EF1E8);
  uint64_t v63 = swift_retain(v33);
  static Published.subscript.getter(v112, v63, v61, v62);
  swift_release(v61);
  swift_release(v62);
  sub_10011B518((uint64_t)&v115);
  double v64 = 1.0;
  if ((v112[0] & 1) == 0)
  {
    uint64_t v65 = swift_getKeyPath(&unk_1001EF208);
    uint64_t v66 = swift_getKeyPath(&unk_1001EF230);
    static Published.subscript.getter(v112, v48, v65, v66);
    swift_release(v65);
    swift_release(v66);
    sub_1001ACFDC((uint64_t)&v114);
    if ((v112[0] & 1) == 0)
    {
      v112[0] = v113;
      sub_1000DFE10((uint64_t *)&unk_1002B7F50);
      State.wrappedValue.getter(v111);
      if (LOBYTE(v111[0])) {
        double v64 = 1.0;
      }
      else {
        double v64 = 0.3;
      }
    }
  }

  uint64_t v67 = v93;
  sub_1000E04D4(v57, v93, &qword_1002BE300);
  uint64_t v68 = v94;
  *(double *)(v67 + *(int *)(v94 + 36)) = v64;
  sub_1000E03B4(v57, &qword_1002BE300);
  uint64_t v69 = v100;
  uint64_t v70 = v98;
  uint64_t v71 = v102;
  (*(void (**)(char *, void, uint64_t))(v100 + 104))( v98,  enum case for AutomationSemantics.NowPlayingElement.showCameraButton(_:),  v102);
  memset(v112, 0, sizeof(v112));
  uint64_t v72 = v99;
  static AutomationSemantics.nowPlaying(_:id:)(v70, v112);
  sub_1000E03B4((uint64_t)v112, &qword_1002B7850);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
  uint64_t v73 = sub_1001B0A84();
  uint64_t v74 = v95;
  View.automationSemantics(_:)(v72, v68, v73);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v72, v103);
  sub_1000E03B4(v67, &qword_1002BE308);
  uint64_t v75 = v109;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000020LL, 0x8000000100229CC0LL);
  uint64_t v76 = String.init(localized:)(v75);
  uint64_t v78 = v77;
  *(void *)&v112[0] = v76;
  *((void *)&v112[0] + 1) = v77;
  v111[0] = v68;
  v111[1] = v73;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( v111,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
  unint64_t v80 = sub_1000E95D4();
  uint64_t v81 = (uint64_t)v108;
  uint64_t v82 = v97;
  View.accessibilityLabel<A>(_:)(v112, v97, &type metadata for String, OpaqueTypeConformance2, v80);
  __n128 v83 = swift_bridgeObjectRelease(v78);
  (*(void (**)(char *, uint64_t, __n128))(v96 + 8))(v74, v82, v83);
  uint64_t v84 = swift_getKeyPath(&unk_1001EF208);
  uint64_t v85 = swift_getKeyPath(&unk_1001EF230);
  static Published.subscript.getter(v112, v48, v84, v85);
  swift_release(v84);
  swift_release(v85);
  sub_1001ACFDC((uint64_t)&v114);
  char v86 = (_OWORD *)swift_allocObject(&unk_1002786B0, 64LL, 7LL);
  __int128 v87 = v2[1];
  v86[1] = *v2;
  void v86[2] = v87;
  v86[3] = v2[2];
  sub_100112B28((uint64_t)&v115);
  sub_1001ADC50((uint64_t)&v114);
  sub_100112B28((uint64_t)&v113);
  uint64_t v88 = sub_1001B1404((unint64_t *)&unk_1002BE370, &qword_1002BE318, &qword_1002BE308, sub_1001B0A84);
  uint64_t v89 = v104;
  View.onChange<A>(of:initial:_:)( v112,  0LL,  sub_1001B0BE8,  v86,  v106,  &type metadata for Bool,  v88,  &protocol witness table for Bool);
  swift_release(v86);
  sub_1000E03B4(v81, &qword_1002BE318);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v105 + 32))(v110, v89, v107);
}

uint64_t sub_1001AB4D0(uint64_t a1)
{
  __int128 v11 = *(_OWORD *)(a1 + 16);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v2 = swift_getKeyPath(&unk_1001EFA80);
  id v3 = *((id *)&v11 + 1);
  static Published.subscript.getter(&v10, v3, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  BOOL v4 = v10;
  uint64_t v5 = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v6 = swift_getKeyPath(&unk_1001EFA80);
  static Published.subscript.getter(&v10, v3, v5, v6);
  swift_release(v5);
  swift_release(v6);
  LOBYTE(v5) = v10;
  uint64_t v7 = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v8 = swift_getKeyPath(&unk_1001EFA80);
  BOOL v10 = !v4;
  static Published.subscript.setter(&v10, v3, v7, v8);
  sub_10019ACB4(v5);
  return sub_1001ACFDC((uint64_t)&v11);
}

uint64_t sub_1001AB5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(_:bundle:)(0x70732E6F65646976LL, 0xEE0073656C6B7261LL, 0LL);
  *a1 = result;
  return result;
}

uint64_t sub_1001AB638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_1000DFE10((uint64_t *)&unk_1002BA020);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for RoundedRectangle(0LL);
  __chkstk_darwin(v7, v8);
  BOOL v10 = (int64x2_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v11 = sub_1000DFE10(qword_1002BE380);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v15 = (uint64_t *)((char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v16 = static Color.gray.getter(v13);
  __int128 v28 = *(_OWORD *)(a1 + 16);
  uint64_t v17 = (void *)*((void *)&v28 + 1);
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFA58);
  uint64_t v19 = swift_getKeyPath(&unk_1001EFA80);
  static Published.subscript.getter(&v27, v17, KeyPath, v19);
  swift_release(KeyPath);
  swift_release(v19);
  sub_1001ACFDC((uint64_t)&v28);
  double v20 = 0.4;
  if (!v27) {
    double v20 = 0.0;
  }
  uint64_t v21 = Color.opacity(_:)(v20);
  swift_release(v16);
  uint64_t v22 = &v10->i8[*(int *)(v7 + 20)];
  uint64_t v23 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v24 = type metadata accessor for RoundedCornerStyle(0LL);
  (*(void (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104LL))(v22, v23, v24);
  *BOOL v10 = vdupq_n_s64(0x4040000000000000uLL);
  sub_1000EE02C((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v6[*(int *)(v3 + 36)] = 256;
  sub_1000E04D4((uint64_t)v6, (uint64_t)v15 + *(int *)(v11 + 36), (uint64_t *)&unk_1002BA020);
  *uint64_t v15 = v21;
  swift_retain(v21);
  sub_1000E03B4((uint64_t)v6, (uint64_t *)&unk_1002BA020);
  sub_1000EE18C((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release(v21);
  return sub_1000E011C((uint64_t)v15, v26, qword_1002BE380);
}

uint64_t sub_1001AB87C@<X0>(double *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for GlobalCoordinateSpace(0LL);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  static CoordinateSpaceProtocol<>.global.getter(v5);
  double v8 = GeometryProxy.frame<A>(in:)(v7, v2, &protocol witness table for GlobalCoordinateSpace);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  *a1 = v8;
  *((void *)a1 + 1) = v10;
  *((void *)a1 + sub_1000E053C(v0 + 2) = v12;
  *((void *)a1 + 3) = v14;
  return result;
}

uint64_t sub_1001AB93C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001AAAC0(a1);
}

id sub_1001AB974()
{
  qword_1002C5F48 = *(void *)VocalAttenuationConstants.willOpenVocalAttenuationView.unsafeMutableAddressor();
  return (id)qword_1002C5F48;
}

id sub_1001AB9B0()
{
  qword_1002C5F50 = *(void *)VocalAttenuationConstants.willCloseVocalAttenuationView.unsafeMutableAddressor();
  return (id)qword_1002C5F50;
}

uint64_t destroy for NowPlayingControlsView(uint64_t a1)
{
  swift_release(*(void *)(a1 + 40));
  return swift_release(*(void *)(a1 + 56));
}

uint64_t initializeWithCopy for NowPlayingControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 56) = v6;
  swift_retain(v3);
  id v7 = v4;
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for NowPlayingControlsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  id v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  id v8 = v6;

  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for NowPlayingControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  id v7 = *(void **)(a1 + 24);
  *(void *)(a1 + swift_weakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;

  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for NowPlayingControlsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NowPlayingControlsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0LL;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 64) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for NowPlayingControlsView()
{
  return &type metadata for NowPlayingControlsView;
}

ValueMetadata *type metadata accessor for NowPlayingViewPresentation.Style()
{
  return &type metadata for NowPlayingViewPresentation.Style;
}

uint64_t getEnumTagSinglePayload for NowPlayingPlayerObserver.LibraryState( unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0xFD)
  {
    unsigned int v6 = *a1;
    if (v6 >= 2)
    {
      unsigned int v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      uint64_t result = v7 - 1;
      if (v7 > 1) {
        return result;
      }
    }

    return 0LL;
  }

  unsigned int v2 = a2 + 3;
  if (a2 + 3 >= 0xFFFF00) {
    unsigned int v3 = 4;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v2 >> 8 < 0xFF) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x100) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0LL;
  }
  return ((uint64_t (*)(void))((char *)&loc_1001ABCB8 + 4 * byte_1001EEBE0[v4]))();
}

uint64_t storeEnumTagSinglePayload for NowPlayingPlayerObserver.LibraryState( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    LODWORD(v5) = v4;
  }
  else {
    LODWORD(v5) = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v5;
  }
  else {
    uint64_t v5 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1001ABD64 + 4 * byte_1001EEBEA[v5]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001ABD98 + 4 * byte_1001EEBE5[v5]))();
}

uint64_t sub_1001ABD98(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001ABDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1001ABDA8LL);
  }
  return result;
}

uint64_t sub_1001ABDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1001ABDBCLL);
  }
  *(_BYTE *)uint64_t result = a2 + 3;
  return result;
}

uint64_t sub_1001ABDC0(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001ABDC8(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingPlayerObserver.LibraryState()
{
  return &type metadata for NowPlayingPlayerObserver.LibraryState;
}

ValueMetadata *type metadata accessor for SupportedControls()
{
  return &type metadata for SupportedControls;
}

unint64_t sub_1001ABDF8()
{
  unint64_t result = qword_1002BDA18;
  if (!qword_1002BDA18)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEE34, &type metadata for SupportedControls);
    atomic_store(result, (unint64_t *)&qword_1002BDA18);
  }

  return result;
}

unint64_t sub_1001ABE40()
{
  unint64_t result = qword_1002BDA20;
  if (!qword_1002BDA20)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEE04, &type metadata for SupportedControls);
    atomic_store(result, (unint64_t *)&qword_1002BDA20);
  }

  return result;
}

unint64_t sub_1001ABE88()
{
  unint64_t result = qword_1002BDA28;
  if (!qword_1002BDA28)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEE5C, &type metadata for SupportedControls);
    atomic_store(result, (unint64_t *)&qword_1002BDA28);
  }

  return result;
}

unint64_t sub_1001ABED0()
{
  unint64_t result = qword_1002BDA30;
  if (!qword_1002BDA30)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEE94, &type metadata for SupportedControls);
    atomic_store(result, (unint64_t *)&qword_1002BDA30);
  }

  return result;
}

unint64_t sub_1001ABF18()
{
  unint64_t result = qword_1002BDA38;
  if (!qword_1002BDA38)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EF00C, &type metadata for NowPlayingViewPresentation.Style);
    atomic_store(result, (unint64_t *)&qword_1002BDA38);
  }

  return result;
}

uint64_t sub_1001ABF5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023E968, 1LL);
}

uint64_t sub_1001ABF6C(uint64_t a1)
{
  uint64_t result = sub_1000DF308( &qword_1002BDA40,  type metadata accessor for NowPlayingViewPresentation,  (uint64_t)&unk_1001EF0A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001ABFA8(uint64_t a1)
{
  uint64_t result = sub_1000DF308(&qword_1002BDA48, type metadata accessor for NowPlayingPlayerObserver, (uint64_t)&unk_1001EF0F4);
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_1001ABFE8(float *a1)
{
}

uint64_t sub_1001AC00C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF178, (uint64_t)&unk_1001EF1A0, a2);
}

void sub_1001AC030(char *a1)
{
}

uint64_t sub_1001AC054@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF1C0, (uint64_t)&unk_1001EF1E8, a2);
}

uint64_t sub_1001AC078(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100116054(a1, a2, a3, a4, (uint64_t)&unk_1001EF1C0, (uint64_t)&unk_1001EF1E8);
}

uint64_t sub_1001AC09C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF208, (uint64_t)&unk_1001EF230, a2);
}

uint64_t sub_1001AC0C0(char *a1)
{
  return sub_10019ABA0(*a1);
}

uint64_t sub_1001AC0EC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF298, (uint64_t)&unk_1001EF2C0, a2);
}

uint64_t sub_1001AC110(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10019B4C8(a1, a2, a3, a4, (uint64_t)&unk_1001EF298, (uint64_t)&unk_1001EF2C0);
}

uint64_t sub_1001AC134@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF2E0, (uint64_t)&unk_1001EF308, a2);
}

uint64_t sub_1001AC158(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10019B4C8(a1, a2, a3, a4, (uint64_t)&unk_1001EF2E0, (uint64_t)&unk_1001EF308);
}

uint64_t sub_1001AC17C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF660);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF688);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001AC1F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF660);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF688);
  uint64_t v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1001AC268@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  uint64_t result = swift_release(v8);
  *a4 = v10;
  return result;
}

uint64_t sub_1001AC2E0(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *a1;
  uint64_t v8 = *a2;
  uint64_t KeyPath = swift_getKeyPath(a5);
  uint64_t v10 = swift_getKeyPath(a6);
  uint64_t v13 = v7;
  id v11 = v7;
  swift_retain(v8);
  return static Published.subscript.setter(&v13, v8, KeyPath, v10);
}

uint64_t sub_1001AC350(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF780);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF7A8);
  uint64_t v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1001AC3C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  uint64_t result = swift_release(v8);
  *a4 = v10;
  return result;
}

double sub_1001AC438@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF4C0);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF4E8);
  static Published.subscript.getter(v13, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  __int16 v6 = v14;
  double result = *(double *)v13;
  __int128 v8 = v13[1];
  __int128 v9 = v13[2];
  __int128 v10 = v13[3];
  __int128 v11 = v13[4];
  __int128 v12 = v13[5];
  *(_OWORD *)a2 = v13[0];
  *(_OWORD *)(a2 + swift_weakDestroy(v0 + 16) = v8;
  *(_OWORD *)(a2 + 3sub_1000E053C(v0 + 2) = v9;
  *(_OWORD *)(a2 + 48) = v10;
  *(_OWORD *)(a2 + 64) = v11;
  *(_OWORD *)(a2 + 80) = v12;
  *(_WORD *)(a2 + 96) = v6;
  return result;
}

uint64_t sub_1001AC4CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v14 = *(void *)(a1 + 8);
  uint64_t v15 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  __int128 v9 = *(void **)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  __int16 v11 = *(_WORD *)(a1 + 96);
  uint64_t v17 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF4C0);
  uint64_t v16 = swift_getKeyPath(&unk_1001EF4E8);
  v19[0] = v15;
  v19[1] = v14;
  void v19[2] = v13;
  void v19[3] = v2;
  void v19[4] = v3;
  v19[5] = v4;
  v19[6] = v5;
  v19[7] = v6;
  v19[8] = v8;
  uint64_t v19[9] = v7;
  v19[10] = v9;
  v19[11] = v10;
  __int16 v20 = v11;
  sub_100130E50(v15, v14, v13, v2, v3, v4, v5, v6, v8, v7, v9, v10);
  swift_retain(v17);
  return static Published.subscript.setter(v19, v17, KeyPath, v16);
}

double sub_1001AC5C4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t KeyPath = swift_getKeyPath(a2);
  uint64_t v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(KeyPath);
  swift_release(v8);
  double result = *(double *)&v10;
  *a4 = v10;
  return result;
}

uint64_t sub_1001AC63C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF508);
  uint64_t v6 = swift_getKeyPath(&unk_1001EF530);
  v8[0] = v2;
  v8[1] = v3;
  sub_1001ACFAC(v2, v3);
  swift_retain(v4);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1001AC6C0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  uint64_t result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1001AC740(char *a1, void **a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EF328);
  uint64_t v5 = swift_getKeyPath(&unk_1001EF350);
  static Published.subscript.getter(&v10, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  LOBYTE(KeyPath) = v10;
  uint64_t v6 = swift_getKeyPath(&unk_1001EF328);
  uint64_t v7 = swift_getKeyPath(&unk_1001EF350);
  char v9 = v2;
  static Published.subscript.setter(&v9, v3, v6, v7);
  return sub_10019B780(KeyPath);
}

uint64_t sub_1001AC810@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF370, (uint64_t)&unk_1001EF398, a2);
}

uint64_t sub_1001AC834(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10019B4C8(a1, a2, a3, a4, (uint64_t)&unk_1001EF370, (uint64_t)&unk_1001EF398);
}

uint64_t sub_1001AC858@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001AC884(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_1001AC8A8()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

_BYTE *sub_1001AC8B8(_BYTE *result)
{
  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_1001AC8D0()
{
  unint64_t result = qword_1002BDB20;
  if (!qword_1002BDB20)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDAB0);
    sub_1000E0374(&qword_1002BDB28, &qword_1002BDAA8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDB20);
  }

  return result;
}

uint64_t sub_1001AC96C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001AC994(void *a1)
{
  uint64_t v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1001AC9BC()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1001AC9DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Image.Scale(0LL);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a1);
  return EnvironmentValues.imageScale.setter(v5);
}

uint64_t sub_1001ACA5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001ACA84(void *a1)
{
  uint64_t v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

unint64_t sub_1001ACAAC()
{
  unint64_t result = qword_1002BDB48;
  if (!qword_1002BDB48)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDAC8);
    sub_1001ACB30();
    sub_1000E0374( &qword_1002BA0D0,  &qword_1002BA0D8,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDB48);
  }

  return result;
}

unint64_t sub_1001ACB30()
{
  unint64_t result = qword_1002BDB50;
  if (!qword_1002BDB50)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDAC0);
    sub_1001ACBB4();
    sub_1000E0374( (unint64_t *)&unk_1002BDB68,  &qword_1002BDB40,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDB50);
  }

  return result;
}

unint64_t sub_1001ACBB4()
{
  unint64_t result = qword_1002BDB58;
  if (!qword_1002BDB58)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDAB8);
    sub_1001AC8D0();
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDB58);
  }

  return result;
}

uint64_t sub_1001ACC38()
{
  return sub_1000EACAC(&qword_1002BDB90, &qword_1002BDAE0, (void (*)(void))sub_1001ACC5C);
}

unint64_t sub_1001ACC5C()
{
  unint64_t result = qword_1002BDB98;
  if (!qword_1002BDB98)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDAD8);
    v2[0] = sub_1000DEA98(&qword_1002BDAC8);
    v2[1] = &type metadata for MusicCardButtonStyle;
    void v2[2] = sub_1001ACAAC();
    v2[3] = sub_100106E78();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
    sub_1000E0374( (unint64_t *)&unk_1002BDBA0,  &qword_1002B9FB0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDB98);
  }

  return result;
}

unint64_t sub_1001ACD24()
{
  unint64_t result = qword_1002BDBB8;
  if (!qword_1002BDBB8)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFC44, &type metadata for NowPlayingControlsView.FocusableElement);
    atomic_store(result, (unint64_t *)&qword_1002BDBB8);
  }

  return result;
}

uint64_t sub_1001ACD6C()
{
  return sub_1001A05C8((__int128 *)(v0 + 16));
}

void *sub_1001ACD74(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)a1[3];
  uint64_t v4 = a1[7];
  swift_retain(a1[5]);
  swift_retain(v4);
  swift_retain(v2);
  id v5 = v3;
  return a1;
}

uint64_t sub_1001ACDC8()
{
  return sub_1001A0608(v0 + 16);
}

unint64_t sub_1001ACDD0()
{
  unint64_t result = qword_1002BDBC0;
  if (!qword_1002BDBC0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDAF8);
    v2[0] = sub_1000DEA98(&qword_1002BDAE8);
    v2[1] = sub_1000DEA98(&qword_1002BDB80);
    void v2[2] = sub_1000EACAC(&qword_1002BDB88, &qword_1002BDAE8, (void (*)(void))sub_1001ACC38);
    v2[3] = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.defaultFocus<A>(_:_:priority:)>>,  1LL);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDBC0);
  }

  return result;
}

uint64_t sub_1001ACED0@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF448, (uint64_t)&unk_1001EF470, a2);
}

uint64_t sub_1001ACEF4(char *a1)
{
  return sub_10019AF48(*a1);
}

uint64_t sub_1001ACF1C()
{
  return sub_1001A0708(v0 + 16);
}

uint64_t sub_1001ACF28@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A0820((_OWORD *)(v1 + 16), a1);
}

uint64_t sub_1001ACF30()
{
  return EnvironmentValues.resetFocus.getter();
}

double sub_1001ACF58@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001AC5C4(a1, (uint64_t)&unk_1001EF508, (uint64_t)&unk_1001EF530, a2);
}

void *sub_1001ACF80(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease(a2);
  }

  return result;
}

id sub_1001ACFAC(id result, uint64_t a2)
{
  if (result)
  {
    id v2 = result;
    swift_bridgeObjectRetain(a2);
    return v2;
  }

  return result;
}

uint64_t sub_1001ACFDC(uint64_t a1)
{
  return a1;
}

id sub_1001AD004@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 lastPlayerResponse];
  *a2 = result;
  return result;
}

unint64_t sub_1001AD03C()
{
  unint64_t result = qword_1002BDC00;
  if (!qword_1002BDC00)
  {
    uint64_t v1 = sub_1000E0418(255LL, (unint64_t *)&qword_1002BDBF0, &OBJC_CLASS___NSOperationQueue_ptr);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for NSOperationQueue, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDC00);
  }

  return result;
}

uint64_t sub_1001AD094()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001AD0B8(void **a1)
{
}

const char *sub_1001AD0C0()
{
  return "canEnableVocalAttenuation";
}

id sub_1001AD0CC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result = [*a1 canEnableVocalAttenuation];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1001AD100(uint64_t a1)
{
  return sub_1001997A0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

const char *sub_1001AD108()
{
  return "vocalAttenuationEnabled";
}

id sub_1001AD114@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result = [*a1 vocalAttenuationEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1001AD144(unsigned __int8 *a1, id *a2)
{
  return [*a2 setVocalAttenuationEnabled:*a1];
}

double sub_1001AD15C(uint64_t a1)
{
  return sub_10019983C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

const char *sub_1001AD164()
{
  return "vocalAttenuationLevel";
}

id sub_1001AD170@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = [*a1 vocalAttenuationLevel];
  *a2 = v4;
  return result;
}

id sub_1001AD1A0(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return [*a2 setVocalAttenuationLevel:a3];
}

uint64_t sub_1001AD1B8()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

double sub_1001AD1E4(uint64_t a1)
{
  return sub_1001998A4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001AD1F4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001AC268(a1, (uint64_t)&unk_1001EF6A8, (uint64_t)&unk_1001EF6D0, a2);
}

uint64_t sub_1001AD218(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AC2E0(a1, a2, a3, a4, (uint64_t)&unk_1001EF6A8, (uint64_t)&unk_1001EF6D0);
}

uint64_t sub_1001AD23C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF6F0, (uint64_t)&unk_1001EF718, a2);
}

uint64_t sub_1001AD260(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100116054(a1, a2, a3, a4, (uint64_t)&unk_1001EF6F0, (uint64_t)&unk_1001EF718);
}

uint64_t sub_1001AD284@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF738, (uint64_t)&unk_1001EF760, a2);
}

uint64_t sub_1001AD2A8(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100116054(a1, a2, a3, a4, (uint64_t)&unk_1001EF738, (uint64_t)&unk_1001EF760);
}

uint64_t sub_1001AD2CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001AC268(a1, (uint64_t)&unk_1001EF780, (uint64_t)&unk_1001EF7A8, a2);
}

uint64_t sub_1001AD2F4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001AC268(a1, (uint64_t)&unk_1001EF7C8, (uint64_t)&unk_1001EF7F0, a2);
}

uint64_t sub_1001AD31C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF810, (uint64_t)&unk_1001EF838, a2);
}

uint64_t sub_1001AD340(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100116054(a1, a2, a3, a4, (uint64_t)&unk_1001EF810, (uint64_t)&unk_1001EF838);
}

uint64_t sub_1001AD364@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF858, (uint64_t)&unk_1001EF880, a2);
}

uint64_t sub_1001AD388(char *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100116054(a1, a2, a3, a4, (uint64_t)&unk_1001EF858, (uint64_t)&unk_1001EF880);
}

uint64_t sub_1001AD3AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001AC268(a1, (uint64_t)&unk_1001EF8A0, (uint64_t)&unk_1001EF8C8, a2);
}

uint64_t sub_1001AD3D0(void **a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AC2E0(a1, a2, a3, a4, (uint64_t)&unk_1001EF8A0, (uint64_t)&unk_1001EF8C8);
}

uint64_t sub_1001AD3F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0LL;
  }
  uint64_t result = 0LL;
  int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0LL;
    }
    result |= v5;
    --v1;
  }

  while (v1);
  return result;
}

uint64_t sub_1001AD430(void *a1)
{
  id v2 = [(id)objc_opt_self(TVMusicPlayerManager) defaultPlayer];
  id v3 = [v2 playQueue];

  if (!v3) {
    return 3LL;
  }
  if (([v3 isMusicAppQueue] & 1) == 0
    && ![v3 isAirplayActive]
    || (id v4 = [(id)objc_opt_self(TVMSubscriptionManager) sharedInstance],
        unsigned int v5 = [v4 hasCloudLibrary],
        v4,
        !v5)
    || ![a1 isLibraryAddEligible])
  {

    return 3LL;
  }

  id v6 =  [(id)objc_opt_self(MPModelLibraryTransientStateController) sharedDeviceLibraryController];
  id v7 = [v6 transientAddStateForModelObject:a1];
  if (v7 == (id)2)
  {

    return 0LL;
  }

  else if (v7 == (id)1)
  {

    return 1LL;
  }

  else if (v7)
  {

    return 2LL;
  }

  else
  {
    id v8 = [a1 isLibraryAdded];
  }

  return (uint64_t)v8;
}

uint64_t sub_1001AD5BC(void *a1, id a2)
{
  unint64_t v2 = (unint64_t)a2;
  if (!a2) {
    goto LABEL_24;
  }
  id v4 = [a2 type];
  if (v4 == (id)13)
  {
    id v14 = [(id)v2 radioStation];
    unint64_t v2 = (unint64_t)v14;
    if (!v14) {
      goto LABEL_24;
    }
    goto LABEL_16;
  }

  if (v4 == (id)4)
  {
    id v14 = [(id)v2 playlist];
    unint64_t v2 = (unint64_t)v14;
    if (!v14) {
      goto LABEL_24;
    }
LABEL_16:
    id v15 = [v14 name];

    if (v15) {
      goto LABEL_21;
    }
LABEL_17:
    unint64_t v2 = 0LL;
    goto LABEL_24;
  }

  if (v4 != (id)2) {
    goto LABEL_17;
  }
  if (!a1) {
    return 0LL;
  }
  id v5 = [a1 album];
  if (!v5) {
    goto LABEL_18;
  }
  id v6 = v5;
  id v7 = [v5 title];

  if (!v7) {
    goto LABEL_18;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  unint64_t v10 = v9;

  swift_bridgeObjectRelease(v10);
  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000LL) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    id v12 = [a1 album];
    unint64_t v2 = (unint64_t)v12;
    if (!v12) {
      goto LABEL_25;
    }
    id v13 = [v12 title];
  }

  else
  {
LABEL_18:
    id v16 = [a1 artist];
    unint64_t v2 = (unint64_t)v16;
    if (!v16) {
      goto LABEL_25;
    }
    id v13 = [v16 name];
  }

  id v15 = v13;

  if (!v15)
  {
    unint64_t v2 = 0LL;
    goto LABEL_25;
  }

uint64_t sub_1001AD810()
{
  swift_release(*(void *)(v0 + 48));
  return swift_deallocObject(v0, 56LL, 7LL);
}

uint64_t sub_1001AD84C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (void *)v1[4];
  id v7 = (void *)v1[5];
  uint64_t v8 = v1[6];
  unint64_t v9 = (void *)swift_task_alloc(dword_1002BDC34);
  *(void *)(v2 + swift_weakDestroy(v0 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_1000E01FC;
  return sub_100199BA4(a1, v4, v5, v6, v7, v8);
}

double sub_1001AD8CC@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1001AC5C4(a1, (uint64_t)&unk_1001EF930, (uint64_t)&unk_1001EF958, a2);
}

unint64_t sub_1001AD8F4()
{
  unint64_t result = qword_1002BDCB8;
  if (!qword_1002BDCB8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDC80);
    sub_1000E0374(&qword_1002BDCC0, &qword_1002BDC78, (uint64_t)&protocol conformance descriptor for HStack<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDCB8);
  }

  return result;
}

uint64_t sub_1001AD978@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EF978, (uint64_t)&unk_1001EF9A0, a2);
}

uint64_t sub_1001AD99C(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10019B4C8(a1, a2, a3, a4, (uint64_t)&unk_1001EF978, (uint64_t)&unk_1001EF9A0);
}

uint64_t sub_1001AD9C0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1001AC268(a1, (uint64_t)&unk_1001EF9C0, (uint64_t)&unk_1001EF9E8, a2);
}

unint64_t sub_1001AD9E8()
{
  unint64_t result = qword_1002BDCF0;
  if (!qword_1002BDCF0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDCE8);
    sub_1001B0714(&qword_1002BDCF8, (uint64_t *)&unk_1002BDD00);
    sub_1000E0374( (unint64_t *)&unk_1002B7FE0,  &qword_1002BDD10,  (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDCF0);
  }

  return result;
}

uint64_t sub_1001ADA84@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EFA08, (uint64_t)&unk_1001EFA30, a2);
}

uint64_t sub_1001ADAA8(char *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_10019B4C8(a1, a2, a3, a4, (uint64_t)&unk_1001EFA08, (uint64_t)&unk_1001EFA30);
}

uint64_t sub_1001ADAD0()
{
  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 72));
  return swift_deallocObject(v0, 80LL, 7LL);
}

uint64_t sub_1001ADB0C()
{
  return sub_1001A0278(v0 + 16);
}

unint64_t sub_1001ADB14()
{
  unint64_t result = qword_1002BDD38;
  if (!qword_1002BDD38)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EEB48, &type metadata for NowPlayingInfoButton);
    atomic_store(result, (unint64_t *)&qword_1002BDD38);
  }

  return result;
}

uint64_t sub_1001ADB58()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

unint64_t sub_1001ADB68()
{
  unint64_t result = qword_1002BDD40;
  if (!qword_1002BDD40)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDD28);
    v2[0] = &type metadata for NowPlayingInfoButton;
    v2[1] = sub_1000DEA98(&qword_1002BDB80);
    void v2[2] = sub_1001ADB14();
    v2[3] = sub_100186A9C( &qword_1002BDBB0,  &qword_1002BDB80,  (void (*)(void))sub_1001ACD24,  (uint64_t)&protocol conformance descriptor for <A> A?);
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.focused<A>(_:equals:)>>,  1LL);
    sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDD40);
  }

  return result;
}

uint64_t sub_1001ADC50(uint64_t a1)
{
  id v2 = *(id *)(a1 + 8);
  return a1;
}

unint64_t sub_1001ADC78()
{
  unint64_t result = qword_1002BDD60;
  if (!qword_1002BDD60)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFBF4, &type metadata for ViewStyleControls);
    atomic_store(result, (unint64_t *)&qword_1002BDD60);
  }

  return result;
}

unint64_t sub_1001ADCBC()
{
  unint64_t result = qword_1002BDDA0;
  if (!qword_1002BDDA0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDD98);
    sub_1000EACAC(&qword_1002BDDA8, &qword_1002BDDB0, (void (*)(void))sub_1001ADD60);
    sub_1000E0374( (unint64_t *)&unk_1002BDE10,  &qword_1002B7BB8,  (uint64_t)&protocol conformance descriptor for _TraitWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDDA0);
  }

  return result;
}

unint64_t sub_1001ADD60()
{
  unint64_t result = qword_1002BDDB8;
  if (!qword_1002BDDB8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDDC0);
    sub_1001ADDCC();
    sub_1001ADED4();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDDB8);
  }

  return result;
}

unint64_t sub_1001ADDCC()
{
  unint64_t result = qword_1002BDDC8;
  if (!qword_1002BDDC8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDDD0);
    sub_1001ADE50();
    sub_1000E0374( &qword_1002BDDF8,  &qword_1002BDE00,  (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDDC8);
  }

  return result;
}

unint64_t sub_1001ADE50()
{
  unint64_t result = qword_1002BDDD8;
  if (!qword_1002BDDD8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDDE0);
    sub_1000E0374( &qword_1002BDDE8,  &qword_1002BDDF0,  (uint64_t)&protocol conformance descriptor for VocalAttenuationView<A, B>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDDD8);
  }

  return result;
}

unint64_t sub_1001ADED4()
{
  unint64_t result = qword_1002BDE08;
  if (!qword_1002BDE08)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for _AlignmentWritingModifier,  &type metadata for _AlignmentWritingModifier);
    atomic_store(result, (unint64_t *)&qword_1002BDE08);
  }

  return result;
}

void *sub_1001ADF18(void *a1)
{
  uint64_t v2 = a1[1];
  id v3 = (void *)a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[7];
  uint64_t v6 = a1[9];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[21];
  uint64_t v9 = a1[25];
  swift_release(a1[32]);
  swift_release(v9);

  swift_release(v2);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  swift_release(v8);
  return a1;
}

void sub_1001ADFBC(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t v7 = sub_1001ACD24();
  FocusState.init<A>()(v32, &type metadata for NowPlayingControlsView.FocusableElement, v7);
  uint64_t v8 = v32[1];
  char v30 = v33;
  char v31 = v32[0];
  uint64_t v9 = type metadata accessor for NowPlayingPlayerObserver(0LL);
  uint64_t v10 = sub_1000DF308(&qword_1002BDA48, type metadata accessor for NowPlayingPlayerObserver, (uint64_t)&unk_1001EF0F4);
  swift_retain(v8);
  uint64_t v11 = swift_retain(a1);
  uint64_t v28 = ObservedObject.init(wrappedValue:)(v11, v9, v10);
  uint64_t v13 = v12;
  uint64_t v14 = type metadata accessor for NowPlayingViewPresentation(0LL);
  uint64_t v15 = sub_1000DF308(&qword_1002BDA40, type metadata accessor for NowPlayingViewPresentation, (uint64_t)&unk_1001EF0A0);
  swift_retain(v13);
  id v16 = a2;
  uint64_t v17 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  uint64_t v19 = v18;
  uint64_t v20 = qword_1002B71A0;
  swift_retain(a1);
  id v21 = v19;
  if (v20 != -1) {
    swift_once(&qword_1002B71A0, sub_100120F90);
  }
  uint64_t v22 = (void *)qword_1002C5E28;
  uint64_t v23 = type metadata accessor for DefaultNowPlayingMenuViewModel(0LL);
  uint64_t v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  *(void *)(v24 + 3sub_1000E053C(v0 + 2) = &_swiftEmptySetSingleton;
  *(_BYTE *)(v24 + 40) = 1;
  id v25 = v22;
  ObservationRegistrar.init()(v25);
  *(void *)(v24 + swift_weakDestroy(v0 + 16) = a1;
  *(void *)(v24 + 24) = v25;
  swift_retain(a1);
  id v26 = v25;
  sub_10016F704(2);
  sub_10016F8BC();
  swift_release(a1);

  id v27 = v21;
  swift_retain(v24);
  sub_10019AF48(a3 & 1);
  swift_release(v13);
  swift_release(v8);
  swift_release(v24);
  swift_release(a1);

  *(void *)a4 = v28;
  *(void *)(a4 + 8) = v13;
  *(void *)(a4 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(a4 + 24) = v27;
  *(_BYTE *)(a4 + 3sub_1000E053C(v0 + 2) = v31;
  *(void *)(a4 + 40) = v8;
  *(_BYTE *)(a4 + 48) = v30;
  *(void *)(a4 + 56) = v24;
}

unint64_t sub_1001AE1F8(unint64_t result)
{
  if (result >= 4) {
    return 4LL;
  }
  return result;
}

void *sub_1001AE208@<X0>( uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v11 = type metadata accessor for NowPlayingPlayerObserver(0LL);
  uint64_t v12 = sub_1000DF308(&qword_1002BDA48, type metadata accessor for NowPlayingPlayerObserver, (uint64_t)&unk_1001EF0F4);
  uint64_t v32 = ObservedObject.init(wrappedValue:)(a1, v11, v12);
  uint64_t v14 = v13;
  uint64_t v15 = type metadata accessor for NowPlayingViewPresentation(0LL);
  uint64_t v16 = sub_1000DF308(&qword_1002BDA40, type metadata accessor for NowPlayingViewPresentation, (uint64_t)&unk_1001EF0A0);
  uint64_t v17 = ObservedObject.init(wrappedValue:)(a2, v15, v16);
  uint64_t v19 = v18;
  char v20 = FocusState.init<>()(v17);
  uint64_t v22 = v21;
  char v24 = v23;
  LOBYTE(v34) = a3;
  State.init(wrappedValue:)(&v35, &v34, &type metadata for PackageState);
  char v25 = v35;
  uint64_t v26 = v36;
  double v34 = a6;
  State.init(wrappedValue:)(&v35, &v34, &type metadata for Double);
  uint64_t v27 = v35;
  uint64_t v28 = v36;
  LOBYTE(v34) = a4;
  unint64_t result = State.init(wrappedValue:)(&v35, &v34, &type metadata for Bool);
  char v30 = v35;
  uint64_t v31 = v36;
  *(void *)a5 = v32;
  *(void *)(a5 + 8) = v14;
  *(void *)(a5 + swift_weakDestroy(v0 + 16) = v17;
  *(void *)(a5 + 24) = v19;
  *(_BYTE *)(a5 + 3sub_1000E053C(v0 + 2) = v20 & 1;
  *(void *)(a5 + 40) = v22;
  *(_BYTE *)(a5 + 48) = v24 & 1;
  *(_BYTE *)(a5 + 56) = v25;
  *(void *)(a5 + 64) = v26;
  *(void *)(a5 + 7sub_1000E053C(v0 + 2) = v27;
  *(void *)(a5 + 80) = v28;
  *(_BYTE *)(a5 + 88) = v30;
  *(void *)(a5 + 96) = v31;
  return result;
}

unint64_t sub_1001AE394()
{
  unint64_t result = qword_1002BDE30;
  if (!qword_1002BDE30)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDE28);
    sub_1000EACAC(&qword_1002BDE38, &qword_1002BDE40, (void (*)(void))sub_1001AE438);
    sub_1000E0374( (unint64_t *)&unk_1002B7FE0,  &qword_1002BDD10,  (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDE30);
  }

  return result;
}

uint64_t sub_1001AE438()
{
  return sub_1000EACAC(&qword_1002BDE48, &qword_1002BDE50, (void (*)(void))sub_1001AE45C);
}

unint64_t sub_1001AE45C()
{
  unint64_t result = qword_1002BDE58;
  if (!qword_1002BDE58)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFBA4, &type metadata for ContextControlsView);
    atomic_store(result, (unint64_t *)&qword_1002BDE58);
  }

  return result;
}

uint64_t sub_1001AE4A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void *)(a1 + 160);

  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  swift_release(v5);
  swift_release(v6);
  swift_release(v7);
  return a1;
}

unint64_t sub_1001AE528()
{
  unint64_t result = qword_1002BDE70;
  if (!qword_1002BDE70)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFB74, &_s22StackedButtonAlignmentVN);
    atomic_store(result, (unint64_t *)&qword_1002BDE70);
  }

  return result;
}

uint64_t sub_1001AE56C()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

void sub_1001AE590(unsigned __int8 *a1)
{
}

uint64_t sub_1001AE598()
{
  return swift_deallocObject(v0, 40LL, 7LL);
}

uint64_t sub_1001AE5C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc(dword_1002BDEC4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000E0B64;
  return sub_10019CBD4(a1, v4, v5, v6);
}

uint64_t sub_1001AE630()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

uint64_t sub_1001AE664(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc(dword_1002BDED4);
  *(void *)(v2 + swift_unknownObjectWeakDestroy(v0 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000E0B64;
  return sub_10019C9EC(a1, v4, v5, v7, v6);
}

uint64_t sub_1001AE6DC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1001AC3C0(a1, (uint64_t)&unk_1001EFA58, (uint64_t)&unk_1001EFA80, a2);
}

unint64_t sub_1001AE704()
{
  unint64_t result = qword_1002BDEE8;
  if (!qword_1002BDEE8)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for Feature.Laguna,  &type metadata for Feature.Laguna);
    atomic_store(result, (unint64_t *)&qword_1002BDEE8);
  }

  return result;
}

uint64_t sub_1001AE748(uint64_t a1)
{
  return a1;
}

ValueMetadata *_s22StackedButtonAlignmentVMa()
{
  return &_s22StackedButtonAlignmentVN;
}

void destroy for ViewStyleControls(uint64_t a1)
{
}

uint64_t initializeWithCopy for ViewStyleControls(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for ViewStyleControls(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ViewStyleControls(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(_BYTE *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(_BYTE *)(a2 + 16);
  id v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for ViewStyleControls(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewStyleControls(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + swift_unknownObjectWeakDestroy(v0 + 16) = 0LL;
    *(void *)(result + 24) = 0LL;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0LL;
    if (a3 < 0) {
      *(_BYTE *)(result + 3sub_1000E053C(v0 + 2) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 3sub_1000E053C(v0 + 2) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for ViewStyleControls()
{
  return &type metadata for ViewStyleControls;
}

uint64_t destroy for ContextControlsView(uint64_t a1)
{
  swift_release(*(void *)(a1 + 40));
  swift_release(*(void *)(a1 + 64));
  swift_release(*(void *)(a1 + 80));
  return swift_release(*(void *)(a1 + 96));
}

uint64_t initializeWithCopy for ContextControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 7sub_1000E053C(v0 + 2) = v6;
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v9;
  swift_retain(v3);
  id v10 = v4;
  swift_retain(v5);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  return a1;
}

uint64_t assignWithCopy for ContextControlsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  id v8 = v6;

  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 64) = v12;
  swift_retain(v12);
  swift_release(v11);
  *(void *)(a1 + 7sub_1000E053C(v0 + 2) = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a2 + 80);
  *(void *)(a1 + 80) = v14;
  swift_retain(v14);
  swift_release(v13);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v15 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v16;
  swift_retain(v16);
  swift_release(v15);
  return a1;
}

uint64_t assignWithTake for ContextControlsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a1 + 24);
  *(void *)(a1 + swift_unknownObjectWeakDestroy(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;

  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release(v9);
  *(void *)(a1 + 7sub_1000E053C(v0 + 2) = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release(v10);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release(v11);
  return a1;
}

ValueMetadata *type metadata accessor for ContextControlsView()
{
  return &type metadata for ContextControlsView;
}

uint64_t storeEnumTagSinglePayload for NowPlayingControlsView.FocusableElement( _BYTE *a1, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    LODWORD(v4) = 1;
  }
  else {
    LODWORD(v4) = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v4 = v4;
  }
  else {
    uint64_t v4 = 0LL;
  }
  if (a2 <= 0xFC) {
    return ((uint64_t (*)(void))((char *)&loc_1001AEC14 + 4 * byte_1001EEBF4[v4]))();
  }
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1001AEC48 + 4 * byte_1001EEBEF[v4]))();
}

uint64_t sub_1001AEC48(uint64_t result)
{
  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001AEC50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2) {
    JUMPOUT(0x1001AEC58LL);
  }
  return result;
}

uint64_t sub_1001AEC64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2) {
    JUMPOUT(0x1001AEC6CLL);
  }
  *(_BYTE *)unint64_t result = a2 + 3;
  return result;
}

uint64_t sub_1001AEC70(uint64_t result)
{
  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001AEC78(uint64_t result)
{
  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingControlsView.FocusableElement()
{
  return &type metadata for NowPlayingControlsView.FocusableElement;
}

unint64_t sub_1001AEC98()
{
  unint64_t result = qword_1002BDF00;
  if (!qword_1002BDF00)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDB10);
    uint64_t v2 = sub_1000DEA98(&qword_1002BDB00);
    uint64_t v4 = sub_1000DEA98(&qword_1002BDAF8);
    uint64_t v5 = &type metadata for Bool;
    unint64_t v6 = sub_1001ACDD0();
    uint64_t v7 = &protocol witness table for Bool;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v4,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
    uint64_t v4 = v2;
    uint64_t v5 = &type metadata for Bool;
    unint64_t v6 = OpaqueTypeConformance2;
    uint64_t v7 = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2( &v4,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
    sub_1000E0374(&qword_1002BDF08, &qword_1002BDBC8, (uint64_t)&unk_1001E8F48);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDF00);
  }

  return result;
}

uint64_t sub_1001AED94(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023EA90, 1LL);
}

uint64_t sub_1001AEDA4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023EA68, 1LL);
}

unint64_t sub_1001AEDB8()
{
  unint64_t result = qword_1002BDF10;
  if (!qword_1002BDF10)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFB4C, &type metadata for NowPlayingControlsView.FocusableElement);
    atomic_store(result, (unint64_t *)&qword_1002BDF10);
  }

  return result;
}

unint64_t sub_1001AEDFC()
{
  unint64_t result = qword_1002BDF98;
  if (!qword_1002BDF98)
  {
    unint64_t result = swift_getWitnessTable( &protocol conformance descriptor for Feature.MediaRemote,  &type metadata for Feature.MediaRemote);
    atomic_store(result, (unint64_t *)&qword_1002BDF98);
  }

  return result;
}

uint64_t sub_1001AEE40()
{
  return swift_deallocObject(v0, 48LL, 7LL);
}

void sub_1001AEE6C()
{
}

uint64_t sub_1001AEE7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001A54C4(*(void **)(v1 + 24), a1);
}

uint64_t sub_1001AEE8C()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

unint64_t sub_1001AEE9C()
{
  unint64_t result = qword_1002BDFB0;
  if (!qword_1002BDFB0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDF60);
    sub_1000EACAC(&qword_1002BDFB8, &qword_1002BDF58, (void (*)(void))sub_1001AEF40);
    sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDFB0);
  }

  return result;
}

unint64_t sub_1001AEF40()
{
  unint64_t result = qword_1002BDFC0;
  if (!qword_1002BDFC0)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDF50);
    sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDFC0);
  }

  return result;
}

unint64_t sub_1001AEFDC()
{
  unint64_t result = qword_1002BDFD8;
  if (!qword_1002BDFD8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDF68);
    sub_1001AEE9C();
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BDFD8);
  }

  return result;
}

void sub_1001AF060()
{
}

uint64_t sub_1001AF070()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1001AF088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v26 = FocusState.init<>()(a1);
  char v27 = v5;
  uint64_t v28 = v6;
  LOBYTE(v29) = 0;
  State.init(wrappedValue:)(&v30, &v29, &type metadata for Bool);
  char v24 = v30;
  uint64_t v7 = v31;
  LOBYTE(v29) = 0;
  State.init(wrappedValue:)(&v30, &v29, &type metadata for PackageState);
  char v8 = v30;
  uint64_t v9 = v31;
  uint64_t v29 = 0LL;
  State.init(wrappedValue:)(&v30, &v29, &type metadata for Double);
  uint64_t v10 = v30;
  uint64_t v11 = v31;
  LOBYTE(v29) = 0;
  State.init(wrappedValue:)(&v30, &v29, &type metadata for Bool);
  char v12 = v30;
  uint64_t v13 = v31;
  uint64_t v14 = type metadata accessor for NowPlayingPlayerObserver(0LL);
  uint64_t v15 = sub_1000DF308(&qword_1002BDA48, type metadata accessor for NowPlayingPlayerObserver, (uint64_t)&unk_1001EF0F4);
  uint64_t v16 = swift_retain(a1);
  uint64_t v17 = ObservedObject.init(wrappedValue:)(v16, v14, v15);
  uint64_t v19 = v18;
  uint64_t v20 = type metadata accessor for NowPlayingViewPresentation(0LL);
  uint64_t v21 = sub_1000DF308(&qword_1002BDA40, type metadata accessor for NowPlayingViewPresentation, (uint64_t)&unk_1001EF0A0);
  uint64_t result = ObservedObject.init(wrappedValue:)(a2, v20, v21);
  *(void *)a3 = v17;
  *(void *)(a3 + 8) = v19;
  *(void *)(a3 + swift_unknownObjectWeakDestroy(v0 + 16) = result;
  *(void *)(a3 + 24) = v23;
  *(_BYTE *)(a3 + 3sub_1000E053C(v0 + 2) = v26 & 1;
  *(void *)(a3 + 40) = v28;
  *(_BYTE *)(a3 + 48) = v27 & 1;
  *(_BYTE *)(a3 + 56) = v24;
  *(void *)(a3 + 64) = v7;
  *(_BYTE *)(a3 + 7sub_1000E053C(v0 + 2) = v8;
  *(void *)(a3 + 80) = v9;
  *(void *)(a3 + 88) = v10;
  *(void *)(a3 + 96) = v11;
  *(_BYTE *)(a3 + 104) = v12;
  *(void *)(a3 + 11sub_1000E053C(v0 + 2) = v13;
  return result;
}

uint64_t sub_1001AF238(uint64_t a1)
{
  uint64_t KeyPath = swift_getKeyPath(&unk_1001EFCB0);
  uint64_t v15 = a1;
  uint64_t v3 = sub_1000DF308( (unint64_t *)&qword_1002B7F80,  type metadata accessor for GroupSessionManager,  (uint64_t)&unk_1001EC83C);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v15, KeyPath, v3);
  swift_release(KeyPath);
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR___TVMGroupSessionManager__eligibilityStatus);
  if (!v4) {
    return 2LL;
  }
  id v5 = v4;
  id v6 = [v5 currentMediaUserState];
  if (v6)
  {
    uint64_t v7 = v6;
    if (([v5 routeIsValidForHosting] & 1) != 0
      && [v5 idsAccountIsValid])
    {
      unsigned int v8 = [v5 isManateeEnabled];
    }

    else
    {
      unsigned int v8 = 0;
    }

    unsigned int v10 = [v7 isMinor];
    unsigned int v11 = [v7 isFullSubscriber];
    unsigned int v12 = v11 & ~v10 & [v7 groupSessionsSupportedForAccountRegion] & v8;
    if ([v7 hasAcceptedPrivacyAcknowledgement])
    {
      unsigned int v13 = [v7 hasAcceptedDisplayNameAcknowledgement];

      if (v13) {
        int v14 = 256;
      }
      else {
        int v14 = 0;
      }
    }

    else
    {

      int v14 = 0;
    }

    return v14 | v12;
  }

  else
  {

    return 2LL;
  }

unint64_t sub_1001AF3E0()
{
  unint64_t result = qword_1002BE000;
  if (!qword_1002BE000)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001ED4D4, &type metadata for SharePlayManagementButton);
    atomic_store(result, (unint64_t *)&qword_1002BE000);
  }

  return result;
}

uint64_t sub_1001AF424()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1001AF440()
{
  return sub_1001A35A4(v0 + 16);
}

void *sub_1001AF448(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = (void *)a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[10];
  swift_retain(a1[12]);
  swift_retain(v2);
  id v7 = v3;
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

unint64_t sub_1001AF4B8()
{
  unint64_t result = qword_1002BE020;
  if (!qword_1002BE020)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE010);
    sub_1000E0374(&qword_1002BE028, &qword_1002BE008, (uint64_t)&protocol conformance descriptor for HStack<A>);
    sub_1000E0374( &qword_1002BE030,  &qword_1002BE038,  (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE020);
  }

  return result;
}

id sub_1001AF554(id result, int a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 254) {
    return sub_1001AF568(result, a2, a3, a4);
  }
  return result;
}

id sub_1001AF568(id result, int a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    return sub_1001AF580(result, a2, a3, a4 & 1);
  }
  return result;
}

id sub_1001AF580(void *a1, int a2, id a3, char a4)
{
  if ((a4 & 1) != 0) {
    return (id)swift_retain(a3);
  }
  else {
    return a1;
  }
}

void sub_1001AF590(void *a1, int a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 254) {
    sub_1001AF5A4(a1, a2, a3, a4);
  }
}

void sub_1001AF5A4(void *a1, int a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 255) {
    sub_1001AF5BC(a1, a2, a3, a4 & 1);
  }
}

void sub_1001AF5BC(void *a1, int a2, id a3, char a4)
{
  if ((a4 & 1) != 0) {
    swift_release(a3);
  }
  else {
}
  }

unint64_t sub_1001AF5CC()
{
  unint64_t result = qword_1002BE110;
  if (!qword_1002BE110)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFE10, &type metadata for ContextMenuButton);
    atomic_store(result, (unint64_t *)&qword_1002BE110);
  }

  return result;
}

unint64_t sub_1001AF610()
{
  unint64_t result = qword_1002BE118;
  if (!qword_1002BE118)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE068);
    v2[0] = &type metadata for ContextMenuButton;
    v2[1] = sub_1001AF5CC();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE118);
  }

  return result;
}

unint64_t sub_1001AF6B4()
{
  unint64_t result = qword_1002BE120;
  if (!qword_1002BE120)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE050);
    sub_1001AF738();
    sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE120);
  }

  return result;
}

unint64_t sub_1001AF738()
{
  unint64_t result = qword_1002BE128;
  if (!qword_1002BE128)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE048);
    sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE128);
  }

  return result;
}

uint64_t sub_1001AF7BC()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1001AF7CC()
{
  swift_release(*(void *)(v0 + 40));
  swift_release(*(void *)(v0 + 72));
  swift_release(*(void *)(v0 + 96));
  swift_release(*(void *)(v0 + 112));
  swift_release(*(void *)(v0 + 128));
  return swift_deallocObject(v0, 136LL, 7LL);
}

uint64_t sub_1001AF820()
{
  return sub_1001A3338(*(_BYTE *)(v0 + 16), *(id *)(v0 + 24), (__int128 *)(v0 + 32));
}

unint64_t sub_1001AF830()
{
  unint64_t result = qword_1002BE138;
  if (!qword_1002BE138)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001E99CC, &type metadata for NowPlayingFavoriteButton);
    atomic_store(result, (unint64_t *)&qword_1002BE138);
  }

  return result;
}

unint64_t sub_1001AF874()
{
  unint64_t result = qword_1002BE140;
  if (!qword_1002BE140)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EB2F8, &type metadata for NowPlayingLibraryButton);
    atomic_store(result, (unint64_t *)&qword_1002BE140);
  }

  return result;
}

uint64_t sub_1001AF8BC()
{
  return sub_1001A30DC((__int128 *)(v0 + 16));
}

uint64_t sub_1001AF8C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A31D0(*(__int128 **)(v1 + 16), a1);
}

unint64_t sub_1001AF8CC()
{
  unint64_t result = qword_1002BE158;
  if (!qword_1002BE158)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE150);
    sub_1001AF950();
    sub_1000E0374( &qword_1002BA0D0,  &qword_1002BA0D8,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE158);
  }

  return result;
}

unint64_t sub_1001AF950()
{
  unint64_t result = qword_1002BE160;
  if (!qword_1002BE160)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE168);
    sub_1001AF9BC();
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE160);
  }

  return result;
}

unint64_t sub_1001AF9BC()
{
  unint64_t result = qword_1002BE170;
  if (!qword_1002BE170)
  {
    unint64_t result = swift_getWitnessTable("\t|\b", &type metadata for SelectionIndicatorViewModifier);
    atomic_store(result, (unint64_t *)&qword_1002BE170);
  }

  return result;
}

unint64_t sub_1001AFA00()
{
  unint64_t result = qword_1002BE180;
  if (!qword_1002BE180)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE088);
    sub_1000E0374(&qword_1002BE178, &qword_1002BE080, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE180);
  }

  return result;
}

uint64_t sub_1001AFAA0()
{
  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 80));
  swift_release(*(void *)(v0 + 96));
  swift_release(*(void *)(v0 + 112));
  return swift_deallocObject(v0, 120LL, 7LL);
}

void sub_1001AFAEC()
{
}

uint64_t sub_1001AFAF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A3020(*(__int128 **)(v1 + 16), a1);
}

unint64_t sub_1001AFAFC()
{
  unint64_t result = qword_1002BE190;
  if (!qword_1002BE190)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE0B0);
    sub_1000E0374(&qword_1002BE188, &qword_1002BE0A8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE190);
  }

  return result;
}

unint64_t sub_1001AFB98()
{
  unint64_t result = qword_1002BE198;
  if (!qword_1002BE198)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFDC0, &type metadata for CameraEffectsButton);
    atomic_store(result, (unint64_t *)&qword_1002BE198);
  }

  return result;
}

uint64_t sub_1001AFBDC()
{
  swift_release(*(void *)(v0 + 56));
  swift_release(*(void *)(v0 + 80));
  swift_release(*(void *)(v0 + 96));
  swift_release(*(void *)(v0 + 112));

  return swift_deallocObject(v0, 128LL, 7LL);
}

uint64_t sub_1001AFC30(uint64_t a1)
{
  return sub_1001A3500(a1, (__int128 *)(v1 + 16), *(void *)(v1 + 120));
}

uint64_t sub_1001AFC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001AFC4C(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

ValueMetadata *type metadata accessor for ContextMenuButton()
{
  return &type metadata for ContextMenuButton;
}

void *assignWithCopy for RepeatButton(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  a1[1] = v3;
  swift_retain(v3);
  swift_release(v4);
  return a1;
}

void *assignWithTake for RepeatButton(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release(v4);
  return a1;
}

ValueMetadata *type metadata accessor for RepeatButton()
{
  return &type metadata for RepeatButton;
}

uint64_t destroy for CameraEffectsButton(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t initializeWithCopy for CameraEffectsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  swift_retain(v3);
  id v6 = v4;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for CameraEffectsButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  id v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  id v8 = v6;

  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

uint64_t assignWithTake for CameraEffectsButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  id v7 = *(void **)(a1 + 24);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;

  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CameraEffectsButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraEffectsButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0LL;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 48) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for CameraEffectsButton()
{
  return &type metadata for CameraEffectsButton;
}

uint64_t sub_1001AFEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 64LL);
}

uint64_t sub_1001AFF04(void *a1)
{
  return swift_release(a1[14]);
}

uint64_t sub_1001AFF54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v7;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 11sub_1000E053C(v0 + 2) = v10;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRetain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  return a1;
}

uint64_t sub_1001B0020(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRetain(v4);
  swift_unknownObjectRelease(v5);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v6;
  swift_unknownObjectRetain(v6);
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 64) = v11;
  swift_retain(v11);
  swift_release(v10);
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 80) = v13;
  swift_retain(v13);
  swift_release(v12);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a2 + 96);
  *(void *)(a1 + 96) = v15;
  swift_retain(v15);
  swift_release(v14);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a2 + 112);
  *(void *)(a1 + 11sub_1000E053C(v0 + 2) = v17;
  swift_retain(v17);
  swift_release(v16);
  return a1;
}

__n128 sub_1001B0134(uint64_t a1, __int128 *a2)
{
  __int128 v2 = *a2;
  __int128 v3 = a2[1];
  __int128 v4 = a2[3];
  *(_OWORD *)(a1 + 3sub_1000E053C(v0 + 2) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + sub_1001A2FA4(v0 + 16) = v3;
  __n128 result = (__n128)a2[4];
  __int128 v6 = a2[5];
  __int128 v7 = a2[6];
  *(void *)(a1 + 11sub_1000E053C(v0 + 2) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t sub_1001B0160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_unknownObjectRelease(v5);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_unknownObjectRelease(v7);
  *(_BYTE *)(a1 + 3sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release(v9);
  *(_BYTE *)(a1 + 7sub_1000E053C(v0 + 2) = *(_BYTE *)(a2 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release(v10);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release(v11);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  uint64_t v12 = *(void *)(a1 + 112);
  *(void *)(a1 + 11sub_1000E053C(v0 + 2) = *(void *)(a2 + 112);
  swift_release(v12);
  return a1;
}

uint64_t sub_1001B0224(uint64_t a1, int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 < 0 && *(_BYTE *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(vsub_1000E053C(v0 + 2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1001B026C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 7sub_1000E053C(v0 + 2) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(_BYTE *)(result + 120) = 1;
    }
  }

  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }

    *(_BYTE *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }

  return result;
}

uint64_t type metadata accessor for VocalAttenuationButton(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for VocalAttenuationButton);
}

unint64_t sub_1001B02D8()
{
  unint64_t result = qword_1002BE250;
  if (!qword_1002BE250)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BDF30);
    v2[0] = sub_1000DEA98(&qword_1002BDF20);
    v2[1] = &type metadata for MusicCardButtonStyle;
    void v2[2] = sub_1000E0374( (unint64_t *)&unk_1002BDF40,  &qword_1002BDF20,  (uint64_t)&protocol conformance descriptor for HStack<A>);
    v2[3] = sub_100106E78();
    swift_getOpaqueTypeConformance2( v2,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
    sub_1000E0374( (unint64_t *)&unk_1002BDBA0,  &qword_1002B9FB0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE250);
  }

  return result;
}

uint64_t sub_1001B03B8()
{
  v1[0] = sub_1000DEA98(&qword_1002BE010);
  v1[1] = &type metadata for Bool;
  void v1[2] = sub_1001AF4B8();
  v1[3] = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2( v1,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
}

uint64_t sub_1001B0418(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023EBA4, 1LL);
}

uint64_t sub_1001B0428(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023EB7C, 1LL);
}

uint64_t sub_1001B0438(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023EB54, 1LL);
}

uint64_t sub_1001B0448(uint64_t a1, uint64_t a2)
{
  __int128 v2 = *(_OWORD *)(a2 + 32);
  v4[0] = *(_OWORD *)(a2 + 16);
  v4[1] = v2;
  return swift_getOpaqueTypeConformance2(v4, &unk_10023EB14, 1LL);
}

uint64_t type metadata accessor for VocalAttenuationButtonModifier( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1000E055C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VocalAttenuationButtonModifier);
}

uint64_t sub_1001B0488@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A6E24(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1001B049C()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A8F10);
}

void *sub_1001B04A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A90CC(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

void *sub_1001B04B8(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[10];
  uint64_t v7 = a1[12];
  swift_retain(a1[14]);
  swift_unknownObjectRetain(v2);
  swift_unknownObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

unint64_t sub_1001B0540()
{
  unint64_t result = qword_1002BE288;
  if (!qword_1002BE288)
  {
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for PackageView, &type metadata for PackageView);
    atomic_store(result, (unint64_t *)&qword_1002BE288);
  }

  return result;
}

uint64_t sub_1001B0588()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A91D4);
}

uint64_t sub_1001B0598()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A9580);
}

void *sub_1001B05A8()
{
  __int128 v1 = *(_OWORD *)(v0 + 32);
  v4[0] = *(_OWORD *)(v0 + 16);
  v4[1] = v1;
  uint64_t v2 = type metadata accessor for VocalAttenuationButton(0LL, (uint64_t)v4);
  return sub_1001A9690(v2);
}

uint64_t sub_1001B05EC()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A978C);
}

uint64_t sub_1001B05FC()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A9818);
}

uint64_t sub_1001B060C()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A98E8);
}

uint64_t sub_1001B061C(uint64_t a1)
{
  return sub_1001B0660(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_1001A9958);
}

uint64_t sub_1001B062C(uint64_t a1)
{
  return sub_1001B0660(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_1001A9ED0);
}

uint64_t sub_1001B063C(uint64_t a1)
{
  return sub_1001B0660(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_1001A9F94);
}

uint64_t sub_1001B0654(uint64_t a1)
{
  return sub_1001B0660(a1, (uint64_t (*)(uint64_t, void *, void, void, void, void))sub_1001AA004);
}

uint64_t sub_1001B0660( uint64_t a1, uint64_t (*a2)(uint64_t, void *, void, void, void, void))
{
  return a2(a1, v2 + 6, v2[2], v2[3], v2[4], v2[5]);
}

unint64_t sub_1001B0678()
{
  unint64_t result = qword_1002BE298;
  if (!qword_1002BE298)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE280);
    sub_1001B0714((unint64_t *)&unk_1002BE2A0, &qword_1002BE278);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE298);
  }

  return result;
}

uint64_t sub_1001B0714(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v4 = sub_1000DEA98(a2);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1001B0770()
{
  return sub_1001B07C4(8.0);
}

uint64_t sub_1001B078C()
{
  return sub_1001B0798((uint64_t (*)(void *, void, void, void, void))sub_1001A9D30);
}

uint64_t sub_1001B0798(uint64_t (*a1)(void *, void, void, void, void))
{
  return a1(v1 + 6, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1001B07AC()
{
  return sub_1001B07C4(0.0);
}

uint64_t sub_1001B07C4(double a1)
{
  return sub_1001A9E4C(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1001B07E8()
{
  return swift_deallocObject(v0, 168LL, 7LL);
}

uint64_t sub_1001B083C()
{
  __int128 v4 = *(_OWORD *)(v0 + 80);
  char v5 = *(_BYTE *)(v0 + 96);
  char v3 = 0;
  uint64_t v1 = sub_1000DFE10(&qword_1002BE040);
  return FocusState.wrappedValue.setter(&v3, v1);
}

uint64_t sub_1001B088C()
{
  return sub_1001B08A4(0LL);
}

uint64_t sub_1001B08A4(uint64_t a1)
{
  return sub_1001A9048(v1[6], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1001B08C8()
{
  return sub_1001B08A4(3LL);
}

unint64_t sub_1001B08E0()
{
  unint64_t result = qword_1002BE2E0;
  if (!qword_1002BE2E0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EE118, &type metadata for NowPlayingMenu);
    atomic_store(result, (unint64_t *)&qword_1002BE2E0);
  }

  return result;
}

uint64_t sub_1001B0928()
{
  return sub_1001AB4D0(v0 + 16);
}

__n128 sub_1001B0934(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 40) + OBJC_IVAR___TVMusicNowPlayingViewPresentation_cameraButtonFrame;
  __n128 result = *(__n128 *)a1;
  __int128 v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)a1;
  *(_OWORD *)(v2 + sub_1001A2FA4(v0 + 16) = v4;
  *(_BYTE *)(v2 + 3sub_1000E053C(v0 + 2) = 0;
  return result;
}

unint64_t sub_1001B0954()
{
  unint64_t result = qword_1002BE330;
  if (!qword_1002BE330)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE2F0);
    sub_1001B09D8();
    sub_1000E0374( &qword_1002BE348,  &qword_1002BE350,  (uint64_t)&protocol conformance descriptor for _GeometryActionModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE330);
  }

  return result;
}

unint64_t sub_1001B09D8()
{
  unint64_t result = qword_1002BE338;
  if (!qword_1002BE338)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE2E8);
    sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1000E0374( &qword_1002BE340,  &qword_1002BE328,  (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE338);
  }

  return result;
}

uint64_t sub_1001B0A74()
{
  return swift_deallocObject(v0, 17LL, 7LL);
}

uint64_t sub_1001B0A84()
{
  return sub_1000EACAC(&qword_1002BE358, &qword_1002BE308, (void (*)(void))sub_1001B0AA8);
}

unint64_t sub_1001B0AA8()
{
  unint64_t result = qword_1002BE360;
  if (!qword_1002BE360)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE300);
    sub_1001B0B2C();
    sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE360);
  }

  return result;
}

unint64_t sub_1001B0B2C()
{
  unint64_t result = qword_1002BE368;
  if (!qword_1002BE368)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE2F8);
    sub_1001B0954();
    sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE368);
  }

  return result;
}

uint64_t sub_1001B0BB4()
{
  swift_release(*(void *)(v0 + 56));
  return swift_deallocObject(v0, 64LL, 7LL);
}

double sub_1001B0BE8()
{
  __int128 v4 = *(_OWORD *)(v0 + 48);
  char v3 = 1;
  uint64_t v1 = sub_1000DFE10((uint64_t *)&unk_1002B7F50);
  *(void *)&double result = State.wrappedValue.setter(&v3, v1).n128_u64[0];
  return result;
}

uint64_t sub_1001B0C34()
{
  return swift_deallocObject(v0, 32LL, 7LL);
}

void sub_1001B0C58()
{
}

uint64_t sub_1001B0C60@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A5E54(*(void *)(v1 + 24), a1);
}

void *sub_1001B0C68(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain(v3);
  return a1;
}

uint64_t sub_1001B0C94(uint64_t a1)
{
  return swift_unknownObjectRelease(*(void *)(a1 + 8));
}

void *sub_1001B0C9C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  a1[1] = v3;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRelease(v4);
  return a1;
}

void *sub_1001B0CDC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = a1[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRelease(v4);
  return a1;
}

uint64_t sub_1001B0D0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v48 = sub_1000DEA98(&qword_1002BE258);
  uint64_t v47 = type metadata accessor for NSNotificationCenter.Publisher(255LL);
  uint64_t v3 = sub_1000DEA98(&qword_1002BE260);
  uint64_t v5 = type metadata accessor for VocalAttenuationButtonModifier(255LL, v1, v2, v4);
  uint64_t v6 = type metadata accessor for ModifiedContent(255LL, v3, v5);
  uint64_t v7 = type metadata accessor for ModifiedContent(255LL, v6, &type metadata for _AlignmentWritingModifier);
  uint64_t v8 = type metadata accessor for AccessibilityAttachmentModifier(255LL);
  uint64_t v9 = type metadata accessor for ModifiedContent(255LL, v7, v8);
  uint64_t v57 = sub_1000E0374(&qword_1002BE268, &qword_1002BE260, (uint64_t)&protocol conformance descriptor for Button<A>);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EFEF8, v5);
  uint64_t v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  unint64_t v56 = sub_1001ADED4();
  uint64_t v53 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v7);
  uint64_t v54 = sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
  uint64_t v10 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v9);
  uint64_t v49 = v9;
  unint64_t v50 = (void *)v10;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v49,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  0LL);
  uint64_t v49 = v9;
  unint64_t v50 = (void *)v10;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2( &v49,  &opaque type descriptor for <<opaque return type of View.focused(_:)>>,  1LL);
  uint64_t v49 = OpaqueTypeMetadata2;
  unint64_t v50 = &type metadata for Bool;
  uint64_t v51 = OpaqueTypeConformance2;
  uint64_t v52 = &protocol witness table for Bool;
  uint64_t v13 = swift_getOpaqueTypeMetadata2( 255LL,  &v49,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v14 = sub_1000DEA98(&qword_1002BDFD0);
  uint64_t v15 = type metadata accessor for ModifiedContent(255LL, v13, v14);
  uint64_t v16 = sub_1000DEA98(&qword_1002B7BA0);
  uint64_t v17 = type metadata accessor for ModifiedContent(255LL, v15, v16);
  uint64_t v18 = type metadata accessor for ModifiedContent(255LL, v17, &type metadata for _OpacityEffect);
  uint64_t v19 = type metadata accessor for ModifiedContent(255LL, v18, &type metadata for _OffsetEffect);
  uint64_t v49 = OpaqueTypeMetadata2;
  unint64_t v50 = &type metadata for Bool;
  uint64_t v51 = OpaqueTypeConformance2;
  uint64_t v52 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2( &v49,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  sub_1000E0374( (unint64_t *)&unk_1002BA100,  &qword_1002BDFD0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  sub_1000E0374( (unint64_t *)&unk_1002BDB30,  &qword_1002B7BA0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v17);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  uint64_t v20 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v19);
  uint64_t v49 = v19;
  unint64_t v50 = &type metadata for Bool;
  uint64_t v51 = v20;
  uint64_t v52 = &protocol witness table for Bool;
  uint64_t v21 = swift_getOpaqueTypeMetadata2( 255LL,  &v49,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v49 = v19;
  unint64_t v50 = &type metadata for Bool;
  uint64_t v51 = v20;
  uint64_t v52 = &protocol witness table for Bool;
  uint64_t v22 = swift_getOpaqueTypeConformance2( &v49,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  uint64_t v49 = v21;
  unint64_t v50 = &type metadata for Bool;
  uint64_t v51 = v22;
  uint64_t v52 = &protocol witness table for Bool;
  uint64_t v23 = swift_getOpaqueTypeMetadata2( 255LL,  &v49,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  0LL);
  uint64_t v24 = type metadata accessor for ModifiedContent(255LL, v23, &type metadata for _AppearanceActionModifier);
  uint64_t v25 = type metadata accessor for ModifiedContent(255LL, v24, &type metadata for _AppearanceActionModifier);
  uint64_t v49 = v21;
  unint64_t v50 = &type metadata for Bool;
  uint64_t v51 = v22;
  uint64_t v52 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2( &v49,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v24);
  uint64_t v26 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  uint64_t v49 = v25;
  unint64_t v50 = (void *)v26;
  uint64_t v27 = swift_getOpaqueTypeMetadata2( 255LL,  &v49,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  0LL);
  uint64_t v28 = sub_1000DF308( &qword_1002BE270,  (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher,  (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  uint64_t v49 = v25;
  unint64_t v50 = (void *)v26;
  uint64_t v29 = swift_getOpaqueTypeConformance2( &v49,  &opaque type descriptor for <<opaque return type of View.onExitCommand(perform:)>>,  1LL);
  uint64_t v49 = v47;
  unint64_t v50 = (void *)v27;
  uint64_t v51 = v28;
  uint64_t v52 = (void *)v29;
  uint64_t v30 = type metadata accessor for SubscriptionView(255LL, &v49);
  uint64_t v31 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v30);
  uint64_t v49 = v47;
  unint64_t v50 = (void *)v30;
  uint64_t v51 = v28;
  uint64_t v52 = (void *)v31;
  uint64_t v32 = type metadata accessor for SubscriptionView(255LL, &v49);
  uint64_t v33 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v32);
  uint64_t v49 = v47;
  unint64_t v50 = (void *)v32;
  uint64_t v51 = v28;
  uint64_t v52 = (void *)v33;
  uint64_t v34 = type metadata accessor for SubscriptionView(255LL, &v49);
  uint64_t v35 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v34);
  uint64_t v49 = v47;
  unint64_t v50 = (void *)v34;
  uint64_t v51 = v28;
  uint64_t v52 = (void *)v35;
  uint64_t v36 = type metadata accessor for SubscriptionView(255LL, &v49);
  uint64_t v37 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v36);
  uint64_t v49 = v47;
  unint64_t v50 = (void *)v36;
  uint64_t v51 = v28;
  uint64_t v52 = (void *)v37;
  uint64_t v38 = type metadata accessor for SubscriptionView(255LL, &v49);
  uint64_t v39 = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v38);
  uint64_t v49 = v47;
  unint64_t v50 = (void *)v38;
  uint64_t v51 = v28;
  uint64_t v52 = (void *)v39;
  uint64_t v40 = type metadata accessor for SubscriptionView(255LL, &v49);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255LL, v48, v40, 0LL, 0LL);
  uint64_t v42 = type metadata accessor for TupleView(255LL, TupleTypeMetadata2);
  uint64_t v43 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v42);
  uint64_t v44 = type metadata accessor for HStack(255LL, v42, v43);
  uint64_t v45 = type metadata accessor for Optional(255LL);
  swift_getWitnessTable(&protocol conformance descriptor for HStack<A>, v44);
  return swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v45);
}

unint64_t sub_1001B12B4()
{
  unint64_t result = qword_1002BE408;
  if (!qword_1002BE408)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE410);
    sub_1000E0374(&qword_1002BE2D8, &qword_1002BE2C8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    sub_1000E0374( (unint64_t *)&unk_1002BDFA0,  &qword_1002BA2B0,  (uint64_t)&protocol conformance descriptor for Button<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE408);
  }

  return result;
}

uint64_t sub_1001B1350()
{
  v1[0] = sub_1000DEA98(&qword_1002BE318);
  v1[1] = &type metadata for Bool;
  void v1[2] = sub_1001B1404((unint64_t *)&unk_1002BE370, &qword_1002BE318, &qword_1002BE308, sub_1001B0A84);
  v1[3] = &protocol witness table for Bool;
  return swift_getOpaqueTypeConformance2( v1,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
}

uint64_t sub_1001B13D0()
{
  return sub_1001B1404(&qword_1002BE418, &qword_1002BE0C0, &qword_1002BE0B0, (uint64_t (*)(void))sub_1001AFAFC);
}

uint64_t sub_1001B1404(unint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    uint64_t v8 = sub_1000DEA98(a2);
    v9[0] = sub_1000DEA98(a3);
    v9[1] = a4();
    swift_getOpaqueTypeConformance2( v9,  &opaque type descriptor for <<opaque return type of View.automationSemantics(_:)>>,  1LL);
    sub_1000DF308( &qword_1002BA0F0,  (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier,  (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }

  return result;
}

uint64_t sub_1001B14B0(uint64_t a1, uint64_t a2)
{
  __int128 v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10023EBEC, 1LL);
}

uint64_t sub_1001B14E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = type metadata accessor for VocalAttenuationButtonModifier(255LL, *a1, a1[1], a4);
  uint64_t WitnessTable = swift_getWitnessTable(&unk_1001EFEF8, v4);
  uint64_t v6 = type metadata accessor for _ViewModifier_Content(255LL, v4, WitnessTable);
  uint64_t v7 = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v6);
  unint64_t v8 = sub_100106E78();
  uint64_t v14 = v6;
  uint64_t v15 = &type metadata for MusicCardButtonStyle;
  uint64_t v16 = v7;
  unint64_t v17 = v8;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2( 255LL,  &v14,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  0LL);
  uint64_t v10 = sub_1000DEA98(&qword_1002B9FB0);
  uint64_t v11 = type metadata accessor for ModifiedContent(255LL, OpaqueTypeMetadata2, v10);
  uint64_t v12 = type metadata accessor for ModifiedContent(255LL, v11, v10);
  uint64_t v14 = v6;
  uint64_t v15 = &type metadata for MusicCardButtonStyle;
  uint64_t v16 = v7;
  unint64_t v17 = v8;
  swift_getOpaqueTypeConformance2( &v14,  &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>,  1LL);
  sub_1000E0374( (unint64_t *)&unk_1002BDBA0,  &qword_1002B9FB0,  (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v11);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
}

uint64_t sub_1001B1664(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

uint64_t sub_1001B1678()
{
  return *(void *)v0;
}

uint64_t sub_1001B1684()
{
  return *(void *)(v0 + 24);
}

void sub_1001B17D0(void *a1)
{
  void v8[3] = &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
  v8[4] = sub_1001B20C4();
  uint64_t v3 = swift_allocObject(&unk_100278970, 64LL, 7LL);
  v8[0] = v3;
  *(void *)(v3 + sub_1001A2FA4(v0 + 16) = "PineBoard";
  *(void *)(v3 + 24) = 9LL;
  *(_BYTE *)(v3 + 3sub_1000E053C(v0 + 2) = 2;
  *(void *)(v3 + 40) = "Werewolf";
  *(void *)(v3 + 48) = 8LL;
  *(_BYTE *)(v3 + 56) = 2;
  char v4 = isFeatureEnabled(_:)(v8);
  sub_1000E053C(v8);
  if ((v4 & 1) != 0)
  {
    uint64_t v5 = OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion;
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion);
    if (v6)
    {
      [v6 invalidate];
      uint64_t v7 = *(void *)(v1 + v5);
      *(void *)(v1 + v5) = 0LL;
      swift_unknownObjectRelease(v7);
    }
  }

  sub_1001B1EB4(a1);
}

double sub_1001B18F0()
{
  v7[3] = &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
  v7[4] = sub_1001B20C4();
  uint64_t v1 = swift_allocObject(&unk_100278970, 64LL, 7LL);
  v7[0] = v1;
  *(void *)(v1 + sub_1001A2FA4(v0 + 16) = "PineBoard";
  *(void *)(v1 + 24) = 9LL;
  *(_BYTE *)(v1 + 3sub_1000E053C(v0 + 2) = 2;
  *(void *)(v1 + 40) = "Werewolf";
  *(void *)(v1 + 48) = 8LL;
  *(_BYTE *)(v1 + 56) = 2;
  char v2 = isFeatureEnabled(_:)(v7);
  sub_1000E053C(v7);
  if ((v2 & 1) != 0)
  {
    uint64_t v4 = OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion;
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion);
    if (v5)
    {
      [v5 invalidate];
      uint64_t v6 = *(void *)(v0 + v4);
      *(void *)(v0 + v4) = 0LL;
      *(void *)&double result = swift_unknownObjectRelease(v6).n128_u64[0];
    }
  }

  return result;
}

double sub_1001B19DC(void *a1)
{
  uint64_t v19 = &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
  unint64_t v3 = sub_1001B20C4();
  unint64_t v20 = v3;
  uint64_t v4 = swift_allocObject(&unk_100278970, 64LL, 7LL);
  v18[0] = v4;
  *(void *)(v4 + sub_1001A2FA4(v0 + 16) = "PineBoard";
  *(void *)(v4 + 24) = 9LL;
  *(_BYTE *)(v4 + 3sub_1000E053C(v0 + 2) = 2;
  *(void *)(v4 + 40) = "Werewolf";
  *(void *)(v4 + 48) = 8LL;
  *(_BYTE *)(v4 + 56) = 2;
  char v5 = isFeatureEnabled(_:)(v18);
  sub_1000E053C(v18);
  if ((v5 & 1) != 0)
  {
    uint64_t v19 = &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
    unint64_t v20 = v3;
    uint64_t v7 = swift_allocObject(&unk_100278970, 64LL, 7LL);
    v18[0] = v7;
    *(void *)(v7 + sub_1001A2FA4(v0 + 16) = "PineBoard";
    *(void *)(v7 + 24) = 9LL;
    *(_BYTE *)(v7 + 3sub_1000E053C(v0 + 2) = 2;
    *(void *)(v7 + 40) = "Werewolf";
    *(void *)(v7 + 48) = 8LL;
    *(_BYTE *)(v7 + 56) = 2;
    char v8 = isFeatureEnabled(_:)(v18);
    sub_1000E053C(v18);
    if ((v8 & 1) != 0)
    {
      uint64_t v10 = OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion;
      uint64_t v11 = *(void **)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion);
      if (v11)
      {
        [v11 invalidate];
        uint64_t v12 = *(void *)(v1 + v10);
        *(void *)(v1 + v10) = 0LL;
        *(void *)&double v9 = swift_unknownObjectRelease(v12).n128_u64[0];
      }
    }

    id v13 = objc_msgSend(a1, "window", v9);
    id v14 = v13;
    if (v13)
    {
      id v15 = [v13 windowScene];

      if (v15)
      {
        id v14 = [v15 _playbackControlsStateManager];
      }

      else
      {
        id v14 = 0LL;
      }
    }

    id v16 = [v14 _beginFullscreenPlaybackSession];
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion);
    *(void *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideFullscreenAssertion) = v16;

    *(void *)&double result = swift_unknownObjectRelease(v17).n128_u64[0];
  }

  return result;
}

void sub_1001B1B9C(void *a1)
{
  char v2 = v1;
  void v15[3] = &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
  v15[4] = sub_1001B20C4();
  uint64_t v4 = swift_allocObject(&unk_100278970, 64LL, 7LL);
  v15[0] = v4;
  *(void *)(v4 + sub_1001A2FA4(v0 + 16) = "PineBoard";
  *(void *)(v4 + 24) = 9LL;
  *(_BYTE *)(v4 + 3sub_1000E053C(v0 + 2) = 2;
  *(void *)(v4 + 40) = "Werewolf";
  *(void *)(v4 + 48) = 8LL;
  *(_BYTE *)(v4 + 56) = 2;
  char v5 = isFeatureEnabled(_:)(v15);
  sub_1000E053C(v15);
  if ((v5 & 1) != 0)
  {
    id v6 = [a1 window];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 windowScene];

      if (v8)
      {
        uint64_t v9 = sub_1000DFE10(&qword_1002B8A00);
        uint64_t v10 = swift_allocObject(v9, 40LL, 7LL);
        *(_OWORD *)(v10 + sub_1001A2FA4(v0 + 16) = xmmword_1001E9180;
        *(void *)(v10 + 3sub_1000E053C(v0 + 2) = v2;
        v15[0] = v10;
        specialized Array._endMutation()((__n128)xmmword_1001E9180);
        uint64_t v11 = v15[0];
        id v12 = v2;
        sub_1000DFE10(&qword_1002BE4D0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v11);
        sub_1001B2118();
        id v14 = (void *)NSString.init(stringLiteral:)("UltrawideScreenManagerSceneDiffActionKey", 40LL, 2LL);
        [v8 _registerSettingsDiffActionArray:isa forKey:v14];
      }
    }
  }

void UltrawideScreenManager.init()()
{
}

id UltrawideScreenManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UltrawideScreenManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for UltrawideScreenManager()
{
  return objc_opt_self(&OBJC_CLASS___TVMusicUltrawideScreenManager);
}

void UltrawideScreenManager._performActions(for:withUpdatedFBSScene:settingsDiff:from:transitionContext:lifecycleActionType:)( uint64_t a1, void *a2)
{
}

void sub_1001B1EB4(void *a1)
{
  void v8[3] = &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
  v8[4] = sub_1001B20C4();
  uint64_t v2 = swift_allocObject(&unk_100278970, 64LL, 7LL);
  v8[0] = v2;
  *(void *)(v2 + sub_1001A2FA4(v0 + 16) = "PineBoard";
  *(void *)(v2 + 24) = 9LL;
  *(_BYTE *)(v2 + 3sub_1000E053C(v0 + 2) = 2;
  *(void *)(v2 + 40) = "Werewolf";
  *(void *)(v2 + 48) = 8LL;
  *(_BYTE *)(v2 + 56) = 2;
  char v3 = isFeatureEnabled(_:)(v8);
  sub_1000E053C(v8);
  if ((v3 & 1) != 0)
  {
    id v4 = [a1 window];
    if (v4)
    {
      char v5 = v4;
      id v6 = [v4 windowScene];

      if (v6)
      {
        sub_1001B2118();
        uint64_t v7 = (void *)NSString.init(stringLiteral:)("UltrawideScreenManagerSceneDiffActionKey", 40LL, 2LL);
        [v6 _unregisterSettingsDiffActionArrayForKey:v7];
      }
    }
  }

void sub_1001B1FC8(void *a1)
{
  if (a1)
  {
    id v2 = [a1 clientSettings];
    uint64_t v3 = objc_opt_self(&OBJC_CLASS___UIApplicationSceneClientSettings);
    id v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
    char v5 = v4;
    if (v4)
    {
      BOOL v6 = [v4 playbackControlsState] != 0;
      uint64_t v7 = (_BYTE *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_isCurrentlyUltrawide);
      if (v6 == *(_BYTE *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_isCurrentlyUltrawide)) {
        goto LABEL_8;
      }
    }

    else
    {

      uint64_t v7 = (_BYTE *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_isCurrentlyUltrawide);
      BOOL v6 = 1LL;
      if ((*(_BYTE *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_isCurrentlyUltrawide) & 1) != 0) {
        goto LABEL_8;
      }
    }

    id v8 = *(void (**)(BOOL))(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideStateChangeCompletion);
    if (v8)
    {
      uint64_t v9 = *(void *)(v1 + OBJC_IVAR___TVMusicUltrawideScreenManager_ultrawideStateChangeCompletion + 8);
      swift_retain(v9);
      v8(v6);

      sub_1000E03F0((uint64_t)v8, v9);
LABEL_9:
      *uint64_t v7 = v6;
      return;
    }

unint64_t sub_1001B20C4()
{
  unint64_t result = qword_1002BE4C0;
  if (!qword_1002BE4C0)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001EFFC8, &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey);
    atomic_store(result, (unint64_t *)&qword_1002BE4C0);
  }

  return result;
}

uint64_t sub_1001B2108()
{
  return swift_deallocObject(v0, 64LL, 7LL);
}

unint64_t sub_1001B2118()
{
  unint64_t result = qword_1002BE4D8;
  if (!qword_1002BE4D8)
  {
    uint64_t v1 = objc_opt_self(&OBJC_CLASS___NSString);
    unint64_t result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1002BE4D8);
  }

  return result;
}

uint64_t sub_1001B2154()
{
  return swift_deallocObject(v0, 24LL, 7LL);
}

uint64_t sub_1001B2178(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16LL))(*(void *)(v1 + 16), a1 & 1);
}

__n128 initializeWithCopy for UltrawideScreenManager.WereWolfFeatureFlagKey(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  __int128 v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + sub_1001A2FA4(v0 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UltrawideScreenManager.WereWolfFeatureFlagKey(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0LL;
  }
}

uint64_t storeEnumTagSinglePayload for UltrawideScreenManager.WereWolfFeatureFlagKey( uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }

  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }

  *(_BYTE *)(result + 41) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UltrawideScreenManager.WereWolfFeatureFlagKey()
{
  return &type metadata for UltrawideScreenManager.WereWolfFeatureFlagKey;
}

uint64_t Logger.sharePlay.unsafeMutableAddressor(uint64_t a1, uint64_t a2)
{
  if (qword_1002B7290 != -1) {
    swift_once(&qword_1002B7290, sub_1001B22D8);
  }
  uint64_t v2 = type metadata accessor for Logger(0LL, a2);
  return sub_1000E96CC(v2, (uint64_t)static Logger.sharePlay);
}

uint64_t static Logger.music(_:)(uint64_t a1, uint64_t a2)
{
  return Logger.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100224590LL, a1, a2);
}

uint64_t OS_os_log.init(musicCategory:)(uint64_t a1, uint64_t a2)
{
  return OS_os_log.init(subsystem:category:)(0xD000000000000011LL, 0x8000000100224590LL, a1, a2);
}

void *String.musicSubsystem.unsafeMutableAddressor()
{
  return &static String.musicSubsystem;
}

uint64_t sub_1001B22D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = type metadata accessor for Logger(0LL, a2);
  sub_1001059D4(v2, static Logger.sharePlay);
  sub_1000E96CC(v2, (uint64_t)static Logger.sharePlay);
  return Logger.init(subsystem:category:)( 0xD000000000000011LL,  0x8000000100224590LL,  0x616C506572616853LL,  0xE900000000000079LL);
}

uint64_t static Logger.sharePlay.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (qword_1002B7290 != -1) {
    swift_once(&qword_1002B7290, sub_1001B22D8);
  }
  uint64_t v3 = type metadata accessor for Logger(0LL, a1);
  uint64_t v4 = sub_1000E96CC(v3, (uint64_t)static Logger.sharePlay);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16LL))(a2, v4, v3);
}

unint64_t static String.musicSubsystem.getter()
{
  return 0xD000000000000011LL;
}

uint64_t Optional.expectNotNil(logger:file:line:function:)@<X0>( uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v8 = v7;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v14 = type metadata accessor for URL(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a6 + 16) - 8LL) + 48LL))(v7, 1LL) == 1)
  {
    uint64_t v35 = a7;
    os_log_type_t v19 = static os_log_type_t.info.getter();
    swift_bridgeObjectRetain_n(a2, 2LL);
    uint64_t v20 = swift_bridgeObjectRetain_n(a5, 2LL);
    uint64_t v21 = (os_log_s *)Logger.logObject.getter(v20);
    if (os_log_type_enabled(v21, v19))
    {
      uint64_t v22 = swift_slowAlloc(32LL, -1LL);
      int v34 = v19;
      uint64_t v23 = v22;
      uint64_t v33 = swift_slowAlloc(64LL, -1LL);
      uint64_t v39 = v33;
      *(_DWORD *)uint64_t v23 = 136315650;
      uint64_t v31 = v23 + 4;
      uint64_t v24 = URL.init(fileURLWithPath:)(a1, a2);
      os_log_t v32 = v21;
      uint64_t v25 = URL.lastPathComponent.getter(v24);
      unint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      uint64_t v38 = sub_1001B2690(v25, v27, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v31);
      swift_bridgeObjectRelease_n(a2, 2LL);
      swift_bridgeObjectRelease(v27);
      *(_WORD *)(v23 + 1sub_1000E053C(v0 + 2) = 2048;
      uint64_t v38 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v23 + 14);
      *(_WORD *)(v23 + 2sub_1000E053C(v0 + 2) = 2080;
      swift_bridgeObjectRetain(a5);
      uint64_t v38 = sub_1001B2690(v37, a5, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39, v23 + 24);
      swift_bridgeObjectRelease_n(a5, 3LL);
      uint64_t v21 = v32;
      _os_log_impl( (void *)&_mh_execute_header,  v32,  (os_log_type_t)v34,  "Unexpectedly found nil: %s:%ld %s",  (uint8_t *)v23,  0x20u);
      uint64_t v28 = v33;
      swift_arrayDestroy(v33, 2LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1LL, -1LL);
      swift_slowDealloc(v23, -1LL, -1LL);
    }

    else
    {
      swift_bridgeObjectRelease_n(a5, 2LL);
      swift_bridgeObjectRelease_n(a2, 2LL);
    }

    a7 = v35;
  }

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16LL))(a7, v8, a6);
}

uint64_t sub_1001B2690(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1001B2760(v12, 0LL, 0LL, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000E0094((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }

  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000E0094((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }

    swift_bridgeObjectRetain(a2);
  }

  sub_1000E053C(v12);
  return v7;
}

uint64_t sub_1001B2760(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000LL) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0LL, HIBYTE(a6) & 0xF, __dst, a3);
            uint64_t result = 0LL;
            *a1 = (uint64_t)__dst;
            return result;
          }

          goto LABEL_17;
        }
      }
    }

uint64_t sub_1001B2918(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1001B29AC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0) {
    uint64_t v2 = sub_1001B2B84(0, *(void *)(v2 + 16) + 1LL, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1001B2B84(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + sub_1001A2FA4(v0 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1001B29AC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000LL) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000LL) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    while (1)
    {
      char v5 = sub_1001B2B20(v4, 0LL);
      if (v4 < 0) {
        break;
      }
      uint64_t v6 = v5;
      uint64_t v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0) {
        goto LABEL_14;
      }
      if (v7 == v4) {
        return v6;
      }
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "invalid Collection: less than 'count' elements in collection",  60LL,  2LL,  "Swift/ContiguousArrayBuffer.swift",  33LL,  v10,  1122LL,  0);
      __break(1u);
LABEL_10:
      uint64_t v4 = String.UTF8View._foreignCount()();
      if (!v4) {
        return &_swiftEmptyArrayStorage;
      }
    }

    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "UnsafeMutableBufferPointer with negative count",  46LL,  2LL,  "Swift/UnsafeBufferPointer.swift",  31LL,  v10,  71LL,  0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)( "Fatal error",  11LL,  2LL,  "Insufficient space allocated to copy string contents",  52LL,  2LL,  "Swift/StringUTF8View.swift",  26LL,  v10,  430LL,  0);
    __break(1u);
  }

  else
  {
    return &_swiftEmptyArrayStorage;
  }

  return result;
}

void *sub_1001B2B20(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_1000DFE10(&qword_1002BE4E0);
  char v5 = (void *)swift_allocObject(v4, v2 + 32, 7LL);
  size_t v6 = j__malloc_size(v5);
  void v5[2] = a1;
  void v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t sub_1001B2B84(char a1, int64_t a2, char a3, char *a4)
{
  if ((a3 & 1) != 0)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000LL < 0)
      {
        __break(1u);
        goto LABEL_30;
      }

      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    }
  }

  else
  {
    int64_t v7 = a2;
  }

  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    uint64_t v10 = sub_1000DFE10(&qword_1002BE4E0);
    uint64_t v11 = (char *)swift_allocObject(v10, v9 + 32, 7LL);
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + sub_1000E053C(v0 + 2) = v8;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }

  else
  {
    uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  }

  uint64_t v13 = v11 + 32;
  int v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8]) {
      memmove(v13, v14, v8);
    }
    *((void *)a4 + sub_1000E053C(v0 + 2) = 0LL;
    goto LABEL_28;
  }

  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }

uint64_t destroy for SharePlayCodeView(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 16));
}

void *_s7TVMusic17SharePlayCodeViewVwCP_0(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for SharePlayCodeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = *(void **)(a1 + 8);
  int64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a2 + 16);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = v11;
  swift_retain(v11);
  swift_release(v10);
  return a1;
}

uint64_t assignWithTake for SharePlayCodeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + sub_1001A2FA4(v0 + 16) = *(void *)(a2 + 16);
  swift_release(v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for SharePlayCodeView(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SharePlayCodeView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0LL;
    *(void *)(result + sub_1001A2FA4(v0 + 16) = 0LL;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 24) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(_BYTE *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }

  return result;
}

ValueMetadata *type metadata accessor for SharePlayCodeView()
{
  return &type metadata for SharePlayCodeView;
}

uint64_t sub_1001B2EC4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10023ED24, 1LL);
}

int64x2_t sub_1001B2ED4()
{
  int64x2_t result = vdupq_n_s64(0x4075400000000000uLL);
  xmmword_1002BE4E8 = (__int128)result;
  return result;
}

uint64_t sub_1001B2EF0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a4;
  uint64_t v83 = a3;
  uint64_t v6 = sub_1000DFE10(&qword_1002BE4F8);
  __chkstk_darwin(v6, v7);
  uint64_t v77 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = type metadata accessor for RoundedRectangle(0LL);
  __chkstk_darwin(v9, v10);
  size_t v12 = (int64x2_t *)((char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v13 = sub_1000DFE10(&qword_1002BE500);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v17 = sub_1000DFE10(&qword_1002BE508);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char **)((char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v21 = sub_1000DFE10(&qword_1002BE510);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v76 = sub_1000DFE10(&qword_1002BE518);
  __chkstk_darwin(v76, v25);
  unint64_t v27 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v75 = sub_1000DFE10(&qword_1002BE520);
  __chkstk_darwin(v75, v28);
  uint64_t v74 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v30 = sub_1000DFE10(&qword_1002BE528);
  uint64_t v79 = *(void *)(v30 - 8);
  uint64_t v80 = v30;
  uint64_t v32 = __chkstk_darwin(v30, v31);
  uint64_t v78 = (char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *uint64_t v20 = static Alignment.center.getter(v32);
  v20[1] = v34;
  uint64_t v35 = (uint64_t)v20 + *(int *)(sub_1000DFE10(&qword_1002BE530) + 44);
  uint64_t v81 = (void *)a2;
  sub_1001B3458(a2, v83, v35);
  uint64_t v36 = &v12->i8[*(int *)(v9 + 20)];
  uint64_t v37 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v38 = type metadata accessor for RoundedCornerStyle(0LL);
  uint64_t v39 = (*(uint64_t (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104LL))(v36, v37, v38);
  *size_t v12 = vdupq_n_s64(0x4049000000000000uLL);
  uint64_t v40 = static Color.white.getter(v39);
  uint64_t v41 = Color.opacity(_:)(0.1);
  swift_release(v40);
  sub_1000EE02C( (uint64_t)v12,  (uint64_t)v16,  (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v16[*(int *)(v13 + 52)] = v41;
  *(_WORD *)&v16[*(int *)(v13 + 56)] = 256;
  uint64_t v42 = sub_1000EE18C((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v43 = static Alignment.center.getter(v42);
  uint64_t v45 = v44;
  uint64_t v46 = (uint64_t)&v24[*(int *)(v21 + 36)];
  sub_1000E04D4((uint64_t)v16, v46, &qword_1002BE500);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(sub_1000DFE10(&qword_1002BE538) + 36));
  *uint64_t v47 = v43;
  v47[1] = v45;
  uint64_t v48 = (uint64_t)v74;
  sub_1000E04D4((uint64_t)v20, (uint64_t)v24, &qword_1002BE508);
  uint64_t v49 = (uint64_t)v16;
  uint64_t v50 = v75;
  sub_1000E03B4(v49, &qword_1002BE500);
  uint64_t v51 = sub_1000E03B4((uint64_t)v20, &qword_1002BE508);
  uint64_t v52 = static Alignment.center.getter(v51);
  _FrameLayout.init(width:height:alignment:)(v86, 0x4080900000000000LL, 0LL, 0LL, 1LL, v52, v53);
  sub_1000E04D4((uint64_t)v24, (uint64_t)v27, &qword_1002BE510);
  uint64_t v54 = &v27[*(int *)(v76 + 36)];
  __int128 v55 = v86[1];
  *(_OWORD *)uint64_t v54 = v86[0];
  *((_OWORD *)v54 + 1) = v55;
  *((_OWORD *)v54 + sub_1000E053C(v0 + 2) = v86[2];
  sub_1000E03B4((uint64_t)v24, &qword_1002BE510);
  uint64_t v56 = enum case for ColorScheme.dark(_:);
  uint64_t v57 = type metadata accessor for ColorScheme(0LL);
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 104))(v77, v56, v57);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v59, 0LL, 1LL, v57);
  sub_1000E04D4(v59, v48 + *(int *)(v50 + 36), &qword_1002BE4F8);
  sub_1000E04D4((uint64_t)v27, v48, &qword_1002BE518);
  sub_1000E03B4(v59, &qword_1002BE4F8);
  sub_1000E03B4((uint64_t)v27, &qword_1002BE518);
  if (a1)
  {
    id v60 = [a1 joinURLString];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)(v60);
    uint64_t v63 = v62;
  }

  else
  {
    uint64_t v61 = 0LL;
    uint64_t v63 = 0LL;
  }

  uint64_t v84 = v61;
  uint64_t v85 = v63;
  double v64 = (void *)swift_allocObject(&unk_100278AE8, 40LL, 7LL);
  uint64_t v65 = v81;
  CFAbsoluteTime v64[2] = a1;
  v64[3] = v65;
  uint64_t v66 = v83;
  v64[4] = v83;
  swift_retain(v66);
  id v67 = a1;
  id v68 = v65;
  uint64_t v69 = sub_1000DFE10(&qword_1002BAB30);
  unint64_t v70 = sub_1001B4CA0();
  unint64_t v71 = sub_1001B4DE0();
  uint64_t v72 = v78;
  View.onChange<A>(of:initial:_:)(&v84, 1LL, sub_1001B4C94, v64, v50, v69, v70, v71);
  swift_release(v64);
  swift_bridgeObjectRelease(v85);
  sub_1000E03B4(v48, &qword_1002BE520);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v79 + 32))(v82, v72, v80);
}

uint64_t sub_1001B3458@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002BE588);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v10 = sub_1000DFE10(&qword_1002BE590);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = sub_1000DFE10(&qword_1002BE598);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter(v16);
  *((void *)v9 + 1) = 0x4054000000000000LL;
  v9[16] = 0;
  uint64_t v19 = sub_1000DFE10(&qword_1002BE5A0);
  uint64_t v20 = sub_1001B36CC(a1, a2, (uint64_t)&v9[*(int *)(v19 + 44)]);
  char v21 = static Edge.Set.top.getter(v20);
  double v22 = EdgeInsets.init(_all:)(95.0);
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_1000E04D4((uint64_t)v9, (uint64_t)v13, &qword_1002BE588);
  uint64_t v29 = &v13[*(int *)(v10 + 36)];
  *uint64_t v29 = v21;
  *((double *)v29 + 1) = v22;
  *((void *)v29 + sub_1000E053C(v0 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  uint64_t v30 = sub_1000E03B4((uint64_t)v9, &qword_1002BE588);
  LOBYTE(v10) = static Edge.Set.bottom.getter(v30);
  double v31 = EdgeInsets.init(_all:)(55.0);
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_1000E04D4((uint64_t)v13, (uint64_t)v18, &qword_1002BE590);
  uint64_t v38 = &v18[*(int *)(v14 + 36)];
  *uint64_t v38 = v10;
  *((double *)v38 + 1) = v31;
  *((void *)v38 + sub_1000E053C(v0 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  uint64_t v39 = sub_1000E03B4((uint64_t)v13, &qword_1002BE590);
  LOBYTE(v10) = static Edge.Set.horizontal.getter(v39);
  double v40 = EdgeInsets.init(_all:)(45.0);
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  sub_1000E04D4((uint64_t)v18, a3, &qword_1002BE598);
  uint64_t v47 = a3 + *(int *)(sub_1000DFE10(&qword_1002BE5A8) + 36);
  *(_BYTE *)uint64_t v47 = v10;
  *(double *)(v47 + 8) = v40;
  *(void *)(v47 + sub_1001A2FA4(v0 + 16) = v42;
  *(void *)(v47 + 24) = v44;
  *(void *)(v47 + 3sub_1000E053C(v0 + 2) = v46;
  *(_BYTE *)(v47 + 40) = 0;
  return sub_1000E03B4((uint64_t)v18, &qword_1002BE598);
}

uint64_t sub_1001B36CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1000DFE10(&qword_1002BE5B0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v115 = sub_1000DFE10(&qword_1002BE5B8);
  uint64_t v11 = __chkstk_darwin(v115, v10);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v11, v14);
  uint64_t v16 = (char *)&v94 - v15;
  uint64_t v17 = type metadata accessor for _BlendModeEffect(0LL);
  __chkstk_darwin(v17, v18);
  uint64_t v108 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v20 = type metadata accessor for BlendMode(0LL);
  uint64_t v106 = *(void *)(v20 - 8);
  uint64_t v107 = v20;
  __chkstk_darwin(v20, v21);
  uint64_t v105 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v23 = sub_1000DFE10(&qword_1002B8080);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v27 = sub_1000DFE10(&qword_1002BE5C0);
  uint64_t v29 = __chkstk_darwin(v27, v28);
  double v31 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v29, v32);
  uint64_t v109 = (uint64_t)&v94 - v33;
  uint64_t v111 = sub_1000DFE10(&qword_1002BE5C8);
  __chkstk_darwin(v111, v34);
  uint64_t v112 = (uint64_t *)((char *)&v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0LL));
  uint64_t v36 = sub_1000DFE10(&qword_1002BE5D0);
  uint64_t v38 = __chkstk_darwin(v36, v37);
  uint64_t v114 = (uint64_t)&v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  __chkstk_darwin(v38, v40);
  __int128 v113 = (char *)&v94 - v41;
  uint64_t v117 = a1;
  uint64_t v118 = a2;
  sub_1000DFE10(&qword_1002BE580);
  uint64_t v42 = State.wrappedValue.getter(&v116);
  uint64_t v43 = v116;
  if (v116)
  {
    uint64_t v110 = v27;
    uint64_t v101 = v9;
    uint64_t v102 = v16;
    uint64_t v103 = v13;
    uint64_t v104 = a3;
    uint64_t v44 = (void *)objc_opt_self(&OBJC_CLASS___UIScreen);
    id v45 = v43;
    id v46 = [v44 mainScreen];
    [v46 scale];
    double v48 = v47;

    id v100 = v45;
    uint64_t v49 = Image.init(decorative:scale:orientation:)(v45, 0LL, v48);
    uint64_t v50 = enum case for Image.TemplateRenderingMode.template(_:);
    uint64_t v51 = type metadata accessor for Image.TemplateRenderingMode(0LL);
    uint64_t v52 = *(void *)(v51 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 104))(v26, v50, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v26, 0LL, 1LL, v51);
    uint64_t v99 = Image.renderingMode(_:)(v26, v49);
    swift_release(v49);
    uint64_t v53 = sub_1000E03B4((uint64_t)v26, &qword_1002B8080);
    uint64_t v54 = static Color.white.getter(v53);
    uint64_t v98 = Color.opacity(_:)(0.9);
    swift_release(v54);
    uint64_t KeyPath = swift_getKeyPath(&unk_1001F0098);
    uint64_t v56 = KeyPath;
    if (qword_1002B7298 != -1) {
      uint64_t KeyPath = swift_once(&qword_1002B7298, sub_1001B2ED4);
    }
    uint64_t v58 = *((void *)&xmmword_1002BE4E8 + 1);
    uint64_t v57 = xmmword_1002BE4E8;
    uint64_t v59 = static Alignment.center.getter(KeyPath);
    _FrameLayout.init(width:height:alignment:)(&v117, v57, 0LL, v58, 0LL, v59, v60);
    uint64_t v61 = v117;
    int v97 = v118;
    uint64_t v96 = v119;
    int v95 = v120;
    uint64_t v62 = *((void *)&v121 + 1);
    uint64_t v94 = v121;
    double v64 = v105;
    uint64_t v63 = v106;
    uint64_t v65 = v107;
    (*(void (**)(char *, void, uint64_t))(v106 + 104))(v105, enum case for BlendMode.plusLighter(_:), v107);
    uint64_t v66 = (uint64_t)v108;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v108, v64, v65);
    sub_1000EE02C( v66,  (uint64_t)&v31[*(int *)(v110 + 36)],  (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    uint64_t v67 = v99;
    *(void *)double v31 = v99;
    *((void *)v31 + 1) = v56;
    uint64_t v68 = v98;
    *((void *)v31 + sub_1000E053C(v0 + 2) = v98;
    *((void *)v31 + 3) = v61;
    v31[32] = v97;
    *((void *)v31 + 5) = v96;
    v31[48] = v95;
    *((void *)v31 + 7) = v94;
    *((void *)v31 + 8) = v62;
    swift_retain(v67);
    swift_retain(v56);
    swift_retain(v68);
    sub_1000EE18C(v66, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
    swift_release(v68);
    swift_release(v56);
    swift_release(v67);
    uint64_t v69 = v109;
    sub_1000E011C((uint64_t)v31, v109, &qword_1002BE5C0);
    unint64_t v70 = v112;
    sub_1000E04D4(v69, (uint64_t)v112, &qword_1002BE5C0);
    swift_storeEnumTagMultiPayload(v70, v111, 0LL);
    uint64_t v71 = sub_1000DFE10(&qword_1002BE5D8);
    uint64_t v72 = sub_1000EACAC(&qword_1002BE5E0, &qword_1002BE5C0, (void (*)(void))sub_1001B4E3C);
    unint64_t v73 = sub_1001B4E60();
    uint64_t v74 = (uint64_t)v113;
    _ConditionalContent<>.init(storage:)(v70, v110, v71, v72, v73);

    uint64_t v75 = sub_1000E03B4(v69, &qword_1002BE5C0);
    a3 = v104;
    uint64_t v13 = v103;
    uint64_t v16 = v102;
    uint64_t v9 = v101;
  }

  else
  {
    if (qword_1002B7298 != -1) {
      uint64_t v42 = (void *)swift_once(&qword_1002B7298, sub_1001B2ED4);
    }
    __int128 v76 = xmmword_1002BE4E8;
    uint64_t v77 = static Alignment.center.getter(v42);
    _FrameLayout.init(width:height:alignment:)(&v117, v76, 0LL, *((void *)&v76 + 1), 0LL, v77, v78);
    uint64_t v79 = v117;
    char v80 = v118;
    uint64_t v81 = v119;
    unsigned __int8 v82 = v120;
    uint64_t v83 = v111;
    uint64_t v84 = v112;
    *uint64_t v112 = 0LL;
    *((_BYTE *)v84 + 8) = 0;
    v84[2] = v79;
    *((_BYTE *)v84 + 24) = v80;
    v84[4] = v81;
    *((_BYTE *)v84 + 40) = v82;
    *((_OWORD *)v84 + 3) = v121;
    swift_storeEnumTagMultiPayload(v84, v83, 1LL);
    uint64_t v85 = sub_1000DFE10(&qword_1002BE5D8);
    uint64_t v86 = sub_1000EACAC(&qword_1002BE5E0, &qword_1002BE5C0, (void (*)(void))sub_1001B4E3C);
    unint64_t v87 = sub_1001B4E60();
    uint64_t v74 = (uint64_t)v113;
    uint64_t v75 = _ConditionalContent<>.init(storage:)(v84, v27, v85, v86, v87);
  }

  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter(v75);
  *((void *)v9 + 1) = 0LL;
  v9[16] = 1;
  uint64_t v88 = sub_1000DFE10(&qword_1002BE600);
  sub_1001B3EF8((uint64_t *)&v9[*(int *)(v88 + 44)]);
  uint64_t v89 = swift_getKeyPath(&unk_1001F0068);
  sub_1000E04D4((uint64_t)v9, (uint64_t)v13, &qword_1002BE5B0);
  uint64_t v90 = &v13[*(int *)(v115 + 36)];
  *(void *)uint64_t v90 = v89;
  v90[8] = 1;
  sub_1000E03B4((uint64_t)v9, &qword_1002BE5B0);
  sub_1000E011C((uint64_t)v13, (uint64_t)v16, &qword_1002BE5B8);
  uint64_t v91 = v114;
  sub_1000E04D4(v74, v114, &qword_1002BE5D0);
  sub_1000E04D4((uint64_t)v16, (uint64_t)v13, &qword_1002BE5B8);
  sub_1000E04D4(v91, a3, &qword_1002BE5D0);
  uint64_t v92 = sub_1000DFE10(&qword_1002BE608);
  sub_1000E04D4((uint64_t)v13, a3 + *(int *)(v92 + 48), &qword_1002BE5B8);
  sub_1000E03B4((uint64_t)v16, &qword_1002BE5B8);
  sub_1000E03B4(v74, &qword_1002BE5D0);
  sub_1000E03B4((uint64_t)v13, &qword_1002BE5B8);
  return sub_1000E03B4(v91, &qword_1002BE5D0);
}

double sub_1001B3EF8@<D0>(uint64_t *a1@<X8>)
{
  unint64_t v87 = a1;
  uint64_t v1 = type metadata accessor for _BlendModeEffect(0LL);
  __chkstk_darwin(v1, v2);
  uint64_t v85 = &v76[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v4 = type metadata accessor for BlendMode(0LL);
  uint64_t v83 = *(void *)(v4 - 8);
  uint64_t v84 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v81 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  uint64_t v82 = sub_1000DFE10(&qword_1002BE278);
  uint64_t v8 = __chkstk_darwin(v82, v7);
  uint64_t v10 = &v76[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0LL)];
  __chkstk_darwin(v8, v11);
  uint64_t v86 = &v76[-v12];
  uint64_t v13 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001CLL, 0x800000010022A0A0LL);
  uint64_t v14 = Text.init(_:tableName:bundle:comment:)(v13);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19 & 1;
  uint64_t v21 = static Font.body.getter(v14, v15);
  uint64_t v23 = Font.bold()(v21, v22);
  swift_release(v21);
  uint64_t v24 = Text.font(_:)(v23, v14, v16, v20, v18);
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  swift_release(v23);
  uint64_t v31 = v28 & 1;
  sub_1000EC044(v14, v16, v20);
  swift_bridgeObjectRelease(v18);
  uint64_t v33 = static Color.primary.getter(v32);
  uint64_t v34 = Text.foregroundColor(_:)(v33, v24, v26, v31, v30);
  uint64_t v79 = v35;
  uint64_t v80 = v34;
  uint64_t v78 = v36;
  LOBYTE(vsub_1001A2FA4(v0 + 16) = v37;
  swift_release(v33);
  int v77 = v16 & 1;
  sub_1000EC044(v24, v26, v31);
  swift_bridgeObjectRelease(v30);
  uint64_t v38 = LocalizedStringKey.init(stringLiteral:)(0xD00000000000001ELL, 0x800000010022A0C0LL);
  uint64_t v39 = Text.init(_:tableName:bundle:comment:)(v38);
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44 & 1;
  uint64_t v46 = static Font.caption.getter(v39, v40);
  uint64_t v47 = Text.font(_:)(v46, v39, v41, v45, v43);
  uint64_t v49 = v48;
  LOBYTE(v24) = v50;
  uint64_t v52 = v51;
  swift_release(v46);
  LOBYTE(v46) = v24 & 1;
  sub_1000EC044(v39, v41, v45);
  swift_bridgeObjectRelease(v43);
  uint64_t v54 = static Color.secondary.getter(v53);
  uint64_t v55 = Text.foregroundColor(_:)(v54, v47, v49, v24 & 1, v52);
  uint64_t v57 = v56;
  LOBYTE(v45) = v58;
  uint64_t v60 = v59;
  swift_release(v54);
  LOBYTE(v45) = v45 & 1;
  sub_1000EC044(v47, v49, v46);
  __n128 v61 = swift_bridgeObjectRelease(v52);
  uint64_t v62 = v83;
  uint64_t v63 = v84;
  double v64 = v81;
  (*(void (**)(_BYTE *, void, uint64_t, __n128))(v83 + 104))( v81,  enum case for BlendMode.plusLighter(_:),  v84,  v61);
  uint64_t v65 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 16);
  uint64_t v66 = v62;
  uint64_t v67 = (uint64_t)v85;
  v65(v85, v64, v63);
  sub_1000EE02C( v67,  (uint64_t)&v10[*(int *)(v82 + 36)],  (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v10 = v55;
  *((void *)v10 + 1) = v57;
  v10[16] = v45;
  *((void *)v10 + 3) = v60;
  sub_1000EC004(v55, v57, v45);
  swift_bridgeObjectRetain(v60);
  sub_1000EE18C(v67, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v64, v63);
  sub_1000EC044(v55, v57, v45);
  swift_bridgeObjectRelease(v60);
  uint64_t v68 = v86;
  sub_1000E011C((uint64_t)v10, (uint64_t)v86, &qword_1002BE278);
  sub_1000E04D4((uint64_t)v68, (uint64_t)v10, &qword_1002BE278);
  uint64_t v69 = v87;
  uint64_t v70 = v79;
  uint64_t v71 = v80;
  uint64_t v72 = v78;
  *unint64_t v87 = v80;
  v69[1] = v72;
  LOBYTE(v66) = v77;
  *((_BYTE *)v69 + sub_1001A2FA4(v0 + 16) = v77;
  v69[3] = v70;
  unint64_t v73 = v69;
  uint64_t v74 = sub_1000DFE10(&qword_1002BE610);
  sub_1000E04D4((uint64_t)v10, (uint64_t)v73 + *(int *)(v74 + 48), &qword_1002BE278);
  sub_1000EC004(v71, v72, v66);
  swift_bridgeObjectRetain(v70);
  sub_1000E03B4((uint64_t)v68, &qword_1002BE278);
  sub_1000E03B4((uint64_t)v10, &qword_1002BE278);
  sub_1000EC044(v71, v72, v66);
  *(void *)&double result = swift_bridgeObjectRelease(v70).n128_u64[0];
  return result;
}

void sub_1001B43AC(uint64_t a1, CGFloat *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CGFloat v84 = *(double *)&a4;
  uint64_t v7 = type metadata accessor for String.Encoding(0LL);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  CGFloat v14 = *a2;
  CGFloat v13 = a2[1];
  if (v13 == 0.0) {
    goto LABEL_4;
  }
  uint64_t v15 = swift_bridgeObjectRetain(*((void *)a2 + 1));
  static String.Encoding.utf8.getter(v15);
  uint64_t v16 = String.data(using:allowLossyConversion:)(v12, 0LL, *(void *)&v14, *(void *)&v13);
  unint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  if (v18 >> 60 == 15)
  {
    swift_bridgeObjectRelease(*(void *)&v13);
LABEL_4:
    if (qword_1002B7290 != -1) {
      swift_once(&qword_1002B7290, sub_1001B22D8);
    }
    uint64_t v20 = type metadata accessor for Logger(0LL, v10);
    sub_1000E96CC(v20, (uint64_t)static Logger.sharePlay);
    uint64_t v21 = swift_bridgeObjectRetain_n(*(void *)&v13, 2LL);
    uint64_t v22 = (os_log_s *)Logger.logObject.getter(v21);
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
      uint64_t v25 = swift_slowAlloc(32LL, -1LL);
      uint64_t v86 = v25;
      *(_DWORD *)uint64_t v24 = 136315138;
      v85.CGFloat a = v14;
      v85.b = v13;
      swift_bridgeObjectRetain(*(void *)&v13);
      uint64_t v26 = sub_1000DFE10(&qword_1002BAB30);
      uint64_t v27 = String.init<A>(describing:)(&v85, v26);
      unint64_t v29 = v28;
      *(void *)&v85.CGFloat a = sub_1001B2690(v27, v28, &v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v85.b, v24 + 4);
      swift_bridgeObjectRelease_n(*(void *)&v13, 2LL);
      swift_bridgeObjectRelease(v29);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Not rendering QR code from token: %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1LL, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1LL, -1LL);
      swift_slowDealloc(v24, -1LL, -1LL);
    }

    else
    {

      swift_bridgeObjectRelease_n(*(void *)&v13, 2LL);
    }

    v85.CGFloat a = v84;
    *(void *)&v85.b = a5;
    uint64_t v86 = 0LL;
    uint64_t v30 = sub_1000DFE10(&qword_1002BE580);
    State.wrappedValue.setter(&v86, v30);
    return;
  }

  if (qword_1002B7290 != -1) {
    swift_once(&qword_1002B7290, sub_1001B22D8);
  }
  uint64_t v31 = type metadata accessor for Logger(0LL, v19);
  sub_1000E96CC(v31, (uint64_t)static Logger.sharePlay);
  uint64_t v32 = swift_bridgeObjectRetain(*(void *)&v13);
  uint64_t v33 = (os_log_s *)Logger.logObject.getter(v32);
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  CGFloat v83 = *(double *)&a5;
  if (v35)
  {
    unint64_t v36 = v18;
    uint64_t v37 = v16;
    uint64_t v38 = (uint8_t *)swift_slowAlloc(12LL, -1LL);
    CGFloat v39 = COERCE_DOUBLE(swift_slowAlloc(32LL, -1LL));
    v85.CGFloat a = v39;
    *(_DWORD *)uint64_t v38 = 136315138;
    swift_bridgeObjectRetain(*(void *)&v13);
    uint64_t v86 = sub_1001B2690(*(uint64_t *)&v14, *(unint64_t *)&v13, (uint64_t *)&v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87, v38 + 4);
    swift_bridgeObjectRelease_n(*(void *)&v13, 3LL);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "QR code with url: %s", v38, 0xCu);
    swift_arrayDestroy(*(void *)&v39, 1LL, (char *)&type metadata for Any + 8);
    swift_slowDealloc(*(void *)&v39, -1LL, -1LL);
    uint64_t v40 = v38;
    uint64_t v16 = v37;
    unint64_t v18 = v36;
    swift_slowDealloc(v40, -1LL, -1LL);
  }

  else
  {

    swift_bridgeObjectRelease_n(*(void *)&v13, 2LL);
  }

  uint64_t v41 = (void *)objc_opt_self(&OBJC_CLASS___CIFilter);
  id v42 = [v41 QRCodeGenerator];
  uint64_t v43 = v16;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v45 = String._bridgeToObjectiveC()();
  [v42 setValue:isa forKey:v45];

  id v46 = v42;
  NSString v47 = String._bridgeToObjectiveC()();
  NSString v48 = String._bridgeToObjectiveC()();
  [v46 setValue:v47 forKey:v48];

  id v49 = [v46 outputImage];
  if (v49)
  {
    uint64_t v50 = v43;
    id v51 = v49;
    [v51 extent];
    if (CGRectGetWidth(v88) <= 0.0 || ([v51 extent], CGRectGetHeight(v89) <= 0.0))
    {

      sub_1000E94E4(v50, v18);
    }

    else
    {
      id v52 = [(id)objc_opt_self(UIScreen) mainScreen];
      [v52 scale];
      double v54 = v53;

      [v51 extent];
      double v56 = v55;
      double v58 = v57;
      if (qword_1002B7298 != -1) {
        swift_once(&qword_1002B7298, sub_1001B2ED4);
      }
      double v59 = CGSize.scaled(_:)(v54, *(double *)&xmmword_1002BE4E8, *((double *)&xmmword_1002BE4E8 + 1));
      CGAffineTransformMakeScale(&v85, v59 / v56, v60 / v58);
      id v61 = [v51 imageByApplyingTransform:&v85];

      id v62 = v61;
      NSString v63 = String._bridgeToObjectiveC()();
      id v64 = [v41 filterWithName:v63];

      if (v64)
      {
        [v64 setValue:v62 forKey:kCIInputImageKey];

        id v65 = [v64 outputImage];
        if (v65)
        {
          id v81 = v64;
          id v82 = v65;
          NSString v66 = String._bridgeToObjectiveC()();
          id v67 = [v41 filterWithName:v66];

          if (v67)
          {
            id v68 = v82;
            [v67 setValue:v82 forKey:kCIInputImageKey];
            id v69 = [v67 outputImage];
            if (v69)
            {
              uint64_t v70 = v69;
              id v71 = [objc_allocWithZone(CIContext) init];
              [v70 extent];
              uint64_t v72 = v67;
              id v73 = objc_msgSend(v71, "createCGImage:fromRect:", v70);

              id v80 = v62;
              CGFloat v75 = v83;
              CGFloat v74 = v84;
              v85.CGFloat a = v84;
              v85.b = v83;
              uint64_t v86 = (uint64_t)v73;
              swift_retain(*(void *)&v83);
              id v76 = v73;
              id v77 = *(id *)&v74;
              uint64_t v78 = sub_1000DFE10(&qword_1002BE580);
              State.wrappedValue.setter(&v86, v78);
              sub_1000E94E4(v50, v18);
              swift_release(*(void *)&v75);

              return;
            }

            sub_1000E94E4(v50, v18);
          }

          else
          {
            sub_1000E94E4(v50, v18);
          }
        }

        else
        {

          sub_1000E94E4(v50, v18);
        }
      }

      else
      {
        __break(1u);
      }
    }
  }

  else
  {

    sub_1000E94E4(v43, v18);
  }

uint64_t sub_1001B4C54@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B2EF0(*(void **)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t sub_1001B4C60()
{
  swift_release(*(void *)(v0 + 32));
  return swift_deallocObject(v0, 40LL, 7LL);
}

void sub_1001B4C94(uint64_t a1, CGFloat *a2)
{
}

unint64_t sub_1001B4CA0()
{
  unint64_t result = qword_1002BE540;
  if (!qword_1002BE540)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE520);
    sub_1000EACAC(&qword_1002BE548, &qword_1002BE518, (void (*)(void))sub_1001B4D44);
    sub_1000E0374( &qword_1002BE568,  &qword_1002BE570,  (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE540);
  }

  return result;
}

unint64_t sub_1001B4D44()
{
  unint64_t result = qword_1002BE550;
  if (!qword_1002BE550)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE510);
    sub_1000E0374(&qword_1002BE558, &qword_1002BE508, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_1000E0374( &qword_1002BE560,  &qword_1002BE538,  (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE550);
  }

  return result;
}

unint64_t sub_1001B4DE0()
{
  unint64_t result = qword_1002BE578;
  if (!qword_1002BE578)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BAB30);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE578);
  }

  return result;
}

uint64_t sub_1001B4E3C()
{
  return sub_1000EACAC(&qword_1002BE5E8, &qword_1002BE5F0, (void (*)(void))sub_10012A408);
}

unint64_t sub_1001B4E60()
{
  unint64_t result = qword_1002BE5F8;
  if (!qword_1002BE5F8)
  {
    uint64_t v1 = sub_1000DEA98(&qword_1002BE5D8);
    unint64_t result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1002BE5F8);
  }

  return result;
}

uint64_t sub_1001B4ED4()
{
  v1[0] = sub_1000DEA98(&qword_1002BE520);
  v1[1] = sub_1000DEA98(&qword_1002BAB30);
  void v1[2] = sub_1001B4CA0();
  v1[3] = sub_1001B4DE0();
  return swift_getOpaqueTypeConformance2( v1,  &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>,  1LL);
}

uint64_t sub_1001B4F44(uint64_t a1)
{
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = v1;
  return swift_task_switch(sub_1001B4F5C, 0LL, 0LL);
}

uint64_t sub_1001B4F5C()
{
  if (*(void *)(v0 + 200))
  {
    uint64_t v1 = v0 + 16;
    id v2 = [*(id *)(v0 + 208) musicBag];
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v2 stringForKey:v3];
    *(void *)(v0 + 2sub_1001A2FA4(v0 + 16) = v4;

    *(void *)(v0 + 56) = v0 + 184;
    *(void *)(v0 + sub_1001A2FA4(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_1001B50C8;
    uint64_t v5 = swift_continuation_init(v0 + 16, 1LL);
    *(void *)(v0 + 144) = _NSConcreteStackBlock;
    uint64_t v6 = (void *)(v0 + 144);
    v6[1] = 0x40000000LL;
    v6[2] = sub_10011DC18;
    void v6[3] = &unk_100278B48;
    void v6[4] = v5;
    [v4 valueWithCompletion:v6];
    return swift_continuation_await(v1);
  }

  else
  {
    unint64_t v8 = sub_1001B7104();
    uint64_t v9 = swift_allocError(&_s12RequestErrorON, v8, 0LL, 0LL);
    *(void *)(v10 + 8) = 0LL;
    *(void *)(v10 + sub_1001A2FA4(v0 + 16) = 0LL;
    *(void *)uint64_t v10 = 0LL;
    *(_OWORD *)(v10 + 24) = xmmword_1001F00D0;
    swift_willThrow(v9);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1001B50C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 224LL) = v1;
  if (v1) {
    id v2 = sub_1001B566C;
  }
  else {
    id v2 = sub_1001B5128;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_1001B5128()
{
  id v2 = (void *)v0[26];
  uint64_t v1 = (void *)v0[27];
  uint64_t v3 = v0[25];
  id v4 = (void *)v0[23];
  v0[29] = v4;

  _StringGuts.grow(_:)(96LL);
  v5._uint64_t countAndFlagsBits = 0x6C617461632F3176LL;
  v5._object = (void *)0xEB000000002F676FLL;
  String.append(_:)(v5);
  id v6 = [v4 description];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  uint64_t v9 = v8;

  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._uint64_t countAndFlagsBits = 0x2F73676E6F732FLL;
  v11._object = (void *)0xE700000000000000LL;
  String.append(_:)(v11);
  v0[18] = v3;
  v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter( &type metadata for Int64,  &protocol witness table for Int64);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  v14._object = (void *)0x800000010022A110LL;
  v14._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
  String.append(_:)(v14);
  NSString v15 = String._bridgeToObjectiveC()();
  v0[30] = v15;
  swift_bridgeObjectRelease(0xE000000000000000LL);
  unint64_t v16 = sub_100186EB0((uint64_t)&_swiftEmptyArrayStorage);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v0[31] = isa;
  swift_bridgeObjectRelease(v16);
  v0[15] = v0 + 23;
  v0[10] = v0;
  v0[11] = sub_1001B533C;
  v0[22] = swift_continuation_init(v0 + 10, 1LL);
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000LL;
  v0[20] = sub_1001B6C8C;
  v0[21] = &unk_100278B60;
  [v2 performRequestWithPath:v15 options:isa completion:v0 + 18];
  return swift_continuation_await(v0 + 10);
}

uint64_t sub_1001B533C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112LL);
  *(void *)(*(void *)v0 + 256LL) = v1;
  if (v1) {
    id v2 = sub_1001B56AC;
  }
  else {
    id v2 = sub_1001B539C;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_1001B539C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 240);
  id v2 = *(void **)(v0 + 248);
  unint64_t v4 = sub_1001B6D34(v1);

  swift_bridgeObjectRelease(v1);
  if (!v4)
  {
    id v6 = *(void **)(v0 + 232);
    unint64_t v7 = sub_1001B7104();
    swift_allocError(&_s12RequestErrorON, v7, 0LL, 0LL);
    *(void *)(v0 + 144) = 0x65736E6F70736572LL;
    *(void *)(v0 + 15sub_1000E053C(v0 + 2) = 0xE800000000000000LL;
    uint64_t v8 = AnyHashable.init<A>(_:)(v0 + 144, &type metadata for String, &protocol witness table for String);
    swift_willThrow(v8);
LABEL_4:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }

  sub_1001B8574(0);
  uint64_t v10 = v5;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v5 + 32);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v4);
  sub_1001B8574(2);
  uint64_t v13 = v12;
  swift_bridgeObjectRelease(v11);
  sub_1001B8574(3);
  unint64_t v4 = v14;
  swift_bridgeObjectRelease(v13);
  sub_1001B8574(0);
  uint64_t v10 = v15;
  if (!*(void *)(v15 + 16))
  {
LABEL_8:
    id v6 = *(void **)(v0 + 232);
    swift_bridgeObjectRelease(v10);
    unint64_t v23 = sub_1001B7104();
    uint64_t v24 = swift_allocError(&_s12RequestErrorON, v23, 0LL, 0LL);
    *(void *)(v25 + 8) = 0LL;
    *(void *)(v25 + sub_1001A2FA4(v0 + 16) = 0LL;
    *(void *)uint64_t v25 = 0LL;
    *(_OWORD *)(v25 + 24) = xmmword_1001F00E0;
    swift_willThrow(v24);
    swift_bridgeObjectRelease(v4);
    goto LABEL_4;
  }

  uint64_t v16 = *(void *)(v15 + 32);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v4);
  sub_1001B8574(1);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease(v16);
  sub_1001B8574(4);
  uint64_t v20 = v19;
  uint64_t v21 = *(void **)(v0 + 232);
  swift_bridgeObjectRelease(v18);
  uint64_t v22 = sub_1001376E4(v20);
  swift_bridgeObjectRelease(v20);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v22);
}

uint64_t sub_1001B566C(uint64_t a1)
{
  id v2 = *(void **)(v1 + 216);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001B56AC(uint64_t a1)
{
  id v2 = *(void **)(v1 + 248);
  unint64_t v4 = *(void **)(v1 + 232);
  uint64_t v3 = *(void **)(v1 + 240);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001B5700(uint64_t a1)
{
  v2[44] = a1;
  v2[45] = v1;
  uint64_t v3 = type metadata accessor for URLRequest(0LL);
  v2[46] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[47] = v4;
  v2[48] = swift_task_alloc((*(void *)(v4 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v5 = sub_1000DFE10((uint64_t *)&unk_1002B7EF0);
  v2[49] = swift_task_alloc((*(void *)(*(void *)(v5 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for URLComponents(0LL);
  v2[50] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[51] = v7;
  v2[52] = swift_task_alloc((*(void *)(v7 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1001B57D8, 0LL, 0LL);
}

uint64_t sub_1001B57D8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 352) + 16LL);
  *(void *)(v0 + 424) = v1;
  if (v1)
  {
    uint64_t v2 = v0 + 16;
    uint64_t v3 = *(void **)(v0 + 360);
    NSString v4 = String._bridgeToObjectiveC()();
    *(void *)(v0 + 43sub_1000E053C(v0 + 2) = v4;
    *(void *)(v0 + 56) = v0 + 304;
    *(void *)(v0 + sub_1001A2FA4(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_1001B5934;
    uint64_t v5 = swift_continuation_init(v0 + 16, 0LL);
    *(void *)(v0 + 136) = _NSConcreteStackBlock;
    uint64_t v6 = (void *)(v0 + 136);
    v6[1] = 0x40000000LL;
    v6[2] = sub_1001B79C0;
    void v6[3] = &unk_100278B78;
    void v6[4] = v5;
    [v3 mediaAPIURLWithPath:v4 completion:v6];
    return swift_continuation_await(v2);
  }

  else
  {
    uint64_t v8 = *(void *)(v0 + 384);
    uint64_t v9 = *(void *)(v0 + 392);
    swift_task_dealloc(*(void *)(v0 + 416));
    swift_task_dealloc(v9);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1001B5934()
{
  return swift_task_switch(sub_1001B59AC, 0LL, 0LL);
}

uint64_t sub_1001B59AC()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 312);

  URLComponents.init(string:)(v4, v5);
  swift_bridgeObjectRelease(v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1LL, v1) != 1)
  {
    uint64_t v12 = (void *)(v0 + 344);
    uint64_t v13 = *(void *)(v0 + 352);
    (*(void (**)(void, void, void))(*(void *)(v0 + 408) + 32LL))( *(void *)(v0 + 416),  *(void *)(v0 + 392),  *(void *)(v0 + 400));
    unint64_t v14 = (void *)sub_100186EB0((uint64_t)&_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(v13);
    uint64_t v15 = 0LL;
    while (1)
    {
      *(void *)(v0 + 440) = v14;
      *(void *)(v0 + 448) = v15;
      uint64_t v17 = *(void *)(v0 + 352) + 24 * v15;
      uint64_t v18 = *(void *)(v17 + 32);
      *(void *)(v0 + 456) = v18;
      unint64_t v19 = *(void *)(v17 + 40);
      *(void *)(v0 + 464) = v19;
      if ((*(_BYTE *)(v17 + 48) & 1) != 0)
      {
        sub_1001B87C8(v18, v19, 1);
        sub_1000E945C(v18, v19);
        uint64_t v33 = (void *)swift_task_alloc(dword_1002BE644);
        *(void *)(v0 + 47sub_1000E053C(v0 + 2) = v33;
        *uint64_t v33 = v0;
        v33[1] = sub_1001B5F70;
        return sub_1001B7148(v18, v19);
      }

      *(void *)(v0 + 23sub_1000E053C(v0 + 2) = &type metadata for String;
      *(void *)(v0 + 208) = v18;
      *(void *)(v0 + 2sub_1001A2FA4(v0 + 16) = v19;
      sub_1000F2010((_OWORD *)(v0 + 208), (_OWORD *)(v0 + 272));
      sub_1001B87C8(v18, v19, 0);
      swift_bridgeObjectRetain(v19);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
      *(void *)(v0 + 344) = v14;
      unint64_t v22 = sub_10013CD08(1701667182LL, 0xE400000000000000LL);
      uint64_t v23 = v14[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_25:
        __break(1u);
      }

      char v26 = v21;
      if (v14[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          unint64_t v14 = (void *)*v12;
          if ((v21 & 1) == 0) {
            goto LABEL_15;
          }
        }

        else
        {
          sub_10013FE6C();
          unint64_t v14 = (void *)*v12;
          if ((v26 & 1) == 0) {
            goto LABEL_15;
          }
        }
      }

      else
      {
        sub_10013DB60(v25, isUniquelyReferenced_nonNull_native);
        unint64_t v27 = sub_10013CD08(1701667182LL, 0xE400000000000000LL);
        if ((v26 & 1) != (v28 & 1)) {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        }
        unint64_t v22 = v27;
        unint64_t v14 = (void *)*v12;
        if ((v26 & 1) == 0)
        {
LABEL_15:
          v14[(v22 >> 6) + 8] |= 1LL << v22;
          unint64_t v29 = (void *)(v14[6] + 16 * v22);
          *unint64_t v29 = 1701667182LL;
          v29[1] = 0xE400000000000000LL;
          sub_1000F2010((_OWORD *)(v0 + 272), (_OWORD *)(v14[7] + 32 * v22));
          uint64_t v30 = v14[2];
          BOOL v31 = __OFADD__(v30, 1LL);
          uint64_t v32 = v30 + 1;
          if (v31) {
            goto LABEL_25;
          }
          void v14[2] = v32;
          goto LABEL_6;
        }
      }

      uint64_t v16 = (void *)(v14[7] + 32 * v22);
      sub_1000E053C(v16);
      sub_1000F2010((_OWORD *)(v0 + 272), v16);
LABEL_6:
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1001B87D8(v18, v19, 0);
      uint64_t v15 = *(void *)(v0 + 448) + 1LL;
      if (v15 == *(void *)(v0 + 424))
      {
        swift_bridgeObjectRelease(*(void *)(v0 + 352));
        os_log_type_t v34 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
        uint64_t v35 = sub_1000DFE10(&qword_1002BE648);
        uint64_t inited = swift_initStackObject(v35, v0 + 80);
        *(_OWORD *)(inited + sub_1001A2FA4(v0 + 16) = xmmword_1001E84B0;
        *(void *)(inited + 3sub_1000E053C(v0 + 2) = 0x7475626972747461LL;
        *(void *)(inited + 40) = 0xEA00000000007365LL;
        *(void *)(inited + 48) = v14;
        unint64_t v37 = sub_100186FE4(inited);
        sub_1000DFE10(&qword_1002B7F00);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v37);
        *(void *)(v0 + 336) = 0LL;
        id v39 = [v34 dataWithJSONObject:isa options:0 error:v0 + 336];

        id v40 = *(id *)(v0 + 336);
        if (v39)
        {
          uint64_t v41 = *(void *)(v0 + 416);
          uint64_t v42 = *(void *)(v0 + 360);
          uint64_t v43 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v39);
          uint64_t v45 = v44;

          *(void *)(v0 + 504) = v43;
          *(void *)(v0 + 51sub_1000E053C(v0 + 2) = v45;
          uint64_t v46 = swift_task_alloc(32LL);
          *(void *)(v0 + 520) = v46;
          *(void *)(v46 + sub_1001A2FA4(v0 + 16) = v42;
          *(void *)(v46 + 24) = v41;
          NSString v47 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
          *(void *)(v0 + 528) = v47;
          uint64_t v48 = sub_1000E0418(0LL, &qword_1002BE650, &OBJC_CLASS___AMSURLRequest_ptr);
          *NSString v47 = v0;
          v47[1] = sub_1001B65F4;
          return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 328,  0LL,  0LL,  0xD000000000000014LL,  0x800000010022A1B0LL,  sub_1001B87E8,  v46,  v48);
        }

        id v49 = v40;
        uint64_t v51 = *(void *)(v0 + 408);
        uint64_t v50 = *(void *)(v0 + 416);
        uint64_t v52 = *(void *)(v0 + 400);
        _convertNSErrorToError(_:)(v40);

        swift_willThrow(v53);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
        goto LABEL_3;
      }
    }
  }

  sub_1000E03B4(*(void *)(v0 + 392), (uint64_t *)&unk_1002B7EF0);
  unint64_t v6 = sub_1001B7104();
  uint64_t v7 = swift_allocError(&_s12RequestErrorON, v6, 0LL, 0LL);
  *(void *)(v8 + 8) = 0LL;
  *(void *)(v8 + sub_1001A2FA4(v0 + 16) = 0LL;
  *(void *)uint64_t v8 = 0LL;
  *(_OWORD *)(v8 + 24) = xmmword_1001F00F0;
  swift_willThrow(v7);
LABEL_3:
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v9 = *(void *)(v0 + 392);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B5F70(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(void **)v3;
  uint64_t v7 = *(void *)(*(void *)v3 + 472LL);
  *(void *)(*(void *)v3 + 48_swift_stdlib_reportUnimplementedInitializer("TVMusic.UltrawideScreenManager", 30LL, "init()", 6LL, 0LL) = v2;
  swift_task_dealloc(v7);
  if (v2)
  {
    uint64_t v8 = v6[55];
    swift_bridgeObjectRelease(v6[44]);
    swift_bridgeObjectRelease(v8);
    uint64_t v9 = sub_1001B6BCC;
  }

  else
  {
    v6[61] = a2;
    v6[62] = a1;
    uint64_t v9 = sub_1001B6048;
  }

  return swift_task_switch(v9, 0LL, 0LL);
}

uint64_t sub_1001B6048()
{
  *(void *)(v0 + 176) = *(void *)(v0 + 496);
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v3 = *(void *)(v0 + 456);
  unint64_t v2 = *(void *)(v0 + 464);
  uint64_t v4 = *(void **)(v0 + 440);
  *(void *)(v0 + 200) = &type metadata for String;
  *(void *)(v0 + 184) = v1;
  sub_1000F2010((_OWORD *)(v0 + 176), (_OWORD *)(v0 + 240));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  sub_100137CF0((_OWORD *)(v0 + 240), 0x546B726F77747261LL, 0xEC0000006E656B6FLL, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease(0x8000000000000000LL);
  sub_1001B87D8(v3, v2, 1);
  sub_1001B87D8(v3, v2, 1);
  uint64_t v6 = *(void *)(v0 + 448) + 1LL;
  if (v6 != *(void *)(v0 + 424))
  {
    uint64_t v23 = (void *)(v0 + 344);
    do
    {
      *(void *)(v0 + 440) = v4;
      *(void *)(v0 + 448) = v6;
      uint64_t v25 = *(void *)(v0 + 352) + 24 * v6;
      uint64_t v26 = *(void *)(v25 + 32);
      *(void *)(v0 + 456) = v26;
      unint64_t v27 = *(void *)(v25 + 40);
      *(void *)(v0 + 464) = v27;
      if ((*(_BYTE *)(v25 + 48) & 1) != 0)
      {
        sub_1001B87C8(v26, v27, 1);
        sub_1000E945C(v26, v27);
        uint64_t v48 = (void *)swift_task_alloc(dword_1002BE644);
        *(void *)(v0 + 47sub_1000E053C(v0 + 2) = v48;
        *uint64_t v48 = v0;
        v48[1] = sub_1001B5F70;
        return sub_1001B7148(v26, v27);
      }

      *(void *)(v0 + 23sub_1000E053C(v0 + 2) = &type metadata for String;
      *(void *)(v0 + 208) = v26;
      *(void *)(v0 + 2sub_1001A2FA4(v0 + 16) = v27;
      sub_1000F2010((_OWORD *)(v0 + 208), (_OWORD *)(v0 + 272));
      sub_1001B87C8(v26, v27, 0);
      swift_bridgeObjectRetain(v27);
      uint64_t v28 = swift_isUniquelyReferenced_nonNull_native(v4);
      *(void *)(v0 + 344) = v4;
      unint64_t v30 = sub_10013CD08(1701667182LL, 0xE400000000000000LL);
      uint64_t v31 = v4[2];
      BOOL v32 = (v29 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32))
      {
        __break(1u);
LABEL_23:
        __break(1u);
      }

      char v34 = v29;
      if (v4[3] >= v33)
      {
        if ((v28 & 1) != 0)
        {
          uint64_t v4 = (void *)*v23;
          if ((v29 & 1) != 0) {
            goto LABEL_5;
          }
        }

        else
        {
          sub_10013FE6C();
          uint64_t v4 = (void *)*v23;
          if ((v34 & 1) != 0) {
            goto LABEL_5;
          }
        }
      }

      else
      {
        sub_10013DB60(v33, v28);
        unint64_t v35 = sub_10013CD08(1701667182LL, 0xE400000000000000LL);
        if ((v34 & 1) != (v36 & 1)) {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        }
        unint64_t v30 = v35;
        uint64_t v4 = (void *)*v23;
        if ((v34 & 1) != 0)
        {
LABEL_5:
          BOOL v24 = (void *)(v4[7] + 32 * v30);
          sub_1000E053C(v24);
          sub_1000F2010((_OWORD *)(v0 + 272), v24);
          goto LABEL_6;
        }
      }

      v4[(v30 >> 6) + 8] |= 1LL << v30;
      unint64_t v37 = (void *)(v4[6] + 16 * v30);
      *unint64_t v37 = 1701667182LL;
      v37[1] = 0xE400000000000000LL;
      sub_1000F2010((_OWORD *)(v0 + 272), (_OWORD *)(v4[7] + 32 * v30));
      uint64_t v38 = v4[2];
      BOOL v39 = __OFADD__(v38, 1LL);
      uint64_t v40 = v38 + 1;
      if (v39) {
        goto LABEL_23;
      }
      _OWORD v4[2] = v40;
LABEL_6:
      swift_bridgeObjectRelease(0x8000000000000000LL);
      sub_1001B87D8(v26, v27, 0);
      uint64_t v6 = *(void *)(v0 + 448) + 1LL;
    }

    while (v6 != *(void *)(v0 + 424));
  }

  swift_bridgeObjectRelease(*(void *)(v0 + 352));
  uint64_t v7 = (void *)objc_opt_self(&OBJC_CLASS___NSJSONSerialization);
  uint64_t v8 = sub_1000DFE10(&qword_1002BE648);
  uint64_t inited = swift_initStackObject(v8, v0 + 80);
  *(_OWORD *)(inited + sub_1001A2FA4(v0 + 16) = xmmword_1001E84B0;
  *(void *)(inited + 3sub_1000E053C(v0 + 2) = 0x7475626972747461LL;
  *(void *)(inited + 40) = 0xEA00000000007365LL;
  *(void *)(inited + 48) = v4;
  unint64_t v10 = sub_100186FE4(inited);
  sub_1000DFE10(&qword_1002B7F00);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v10);
  *(void *)(v0 + 336) = 0LL;
  id v12 = [v7 dataWithJSONObject:isa options:0 error:v0 + 336];

  id v13 = *(id *)(v0 + 336);
  if (v12)
  {
    uint64_t v14 = *(void *)(v0 + 416);
    uint64_t v15 = *(void *)(v0 + 360);
    uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v12);
    uint64_t v18 = v17;

    *(void *)(v0 + 504) = v16;
    *(void *)(v0 + 51sub_1000E053C(v0 + 2) = v18;
    uint64_t v19 = swift_task_alloc(32LL);
    *(void *)(v0 + 520) = v19;
    *(void *)(v19 + sub_1001A2FA4(v0 + 16) = v15;
    *(void *)(v19 + 24) = v14;
    uint64_t v20 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
    *(void *)(v0 + 528) = v20;
    uint64_t v21 = sub_1000E0418(0LL, &qword_1002BE650, &OBJC_CLASS___AMSURLRequest_ptr);
    *uint64_t v20 = v0;
    v20[1] = sub_1001B65F4;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 328,  0LL,  0LL,  0xD000000000000014LL,  0x800000010022A1B0LL,  sub_1001B87E8,  v19,  v21);
  }

  else
  {
    uint64_t v41 = v13;
    uint64_t v43 = *(void *)(v0 + 408);
    uint64_t v42 = *(void *)(v0 + 416);
    uint64_t v44 = *(void *)(v0 + 400);
    _convertNSErrorToError(_:)(v13);

    swift_willThrow(v45);
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    uint64_t v47 = *(void *)(v0 + 384);
    uint64_t v46 = *(void *)(v0 + 392);
    swift_task_dealloc(*(void *)(v0 + 416));
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }

uint64_t sub_1001B65F4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 528);
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    uint64_t v4 = sub_1001B6950;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 520));
    uint64_t v4 = sub_1001B66AC;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1001B66AC()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[45];
  uint64_t v3 = (void *)v0[41];
  v0[68] = v3;
  id v4 = v3;
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setHTTPMethod:v5];

  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  [v4 setValue:v6 forHTTPHeaderField:v7];

  id v8 = v4;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v8 setHTTPBody:isa];

  static URLRequest._unconditionallyBridgeFromObjectiveC(_:)(v8);
  uint64_t v10 = swift_task_alloc(32LL);
  v0[69] = v10;
  *(void *)(v10 + sub_1001A2FA4(v0 + 16) = v2;
  *(void *)(v10 + 24) = v1;
  uint64_t v11 = (void *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[70] = v11;
  uint64_t v12 = sub_1000E0418(0LL, &qword_1002BE658, &OBJC_CLASS___AMSURLResult_ptr);
  *uint64_t v11 = v0;
  v11[1] = sub_1001B6898;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)( v0 + 40,  0LL,  0LL,  0x6628746C75736572LL,  0xED0000293A6D6F72LL,  sub_1001B87F0,  v10,  v12);
}

uint64_t sub_1001B6898()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 560);
  *(void *)(*v1 + 568) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    id v4 = sub_1001B6AE8;
  }

  else
  {
    swift_task_dealloc(*(void *)(v2 + 552));
    id v4 = sub_1001B6A04;
  }

  return swift_task_switch(v4, 0LL, 0LL);
}

uint64_t sub_1001B6950()
{
  uint64_t v1 = *(void *)(v0 + 504);
  unint64_t v2 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 400);
  swift_task_dealloc(*(void *)(v0 + 520));
  sub_1000E94A0(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 392);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6A04()
{
  uint64_t v1 = *(void **)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 504);
  unint64_t v3 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v8 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v9 = *(void *)(v0 + 368);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_1000E94A0(v2, v3);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v10 = *(void *)(v0 + 384);
  uint64_t v11 = *(void *)(v0 + 392);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v11);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6AE8()
{
  uint64_t v1 = *(void **)(v0 + 544);
  uint64_t v2 = *(void *)(v0 + 504);
  unint64_t v3 = *(void *)(v0 + 512);
  uint64_t v5 = *(void *)(v0 + 408);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v8 = *(void *)(v0 + 376);
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v9 = *(void *)(v0 + 368);
  swift_task_dealloc(*(void *)(v0 + 552));
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  sub_1000E94A0(v2, v3);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v11 = *(void *)(v0 + 384);
  uint64_t v10 = *(void *)(v0 + 392);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v10);
  swift_task_dealloc(v11);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6BCC()
{
  uint64_t v1 = *(void *)(v0 + 456);
  unint64_t v2 = *(void *)(v0 + 464);
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 400);
  sub_1001B87D8(v1, v2, 1);
  sub_1001B87D8(v1, v2, 1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 392);
  swift_task_dealloc(*(void *)(v0 + 416));
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1001B6C8C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    uint64_t v5 = sub_1000DFE10((uint64_t *)&unk_1002B7EE0);
    uint64_t v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0LL, 0LL);
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }

  else
  {
    **(void **)(*(void *)(v3 + 64) + 4_swift_stdlib_reportUnimplementedInitializer("TVMusic.UltrawideScreenManager", 30LL, "init()", 6LL, 0LL) = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( a2,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);
    return swift_continuation_throwingResume(v3);
  }

unint64_t sub_1001B6D34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1000DFE10(&qword_1002BD0A0);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)(v2);
  }

  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }

  uint64_t v26 = a1 + 64;
  uint64_t v4 = -1LL;
  uint64_t v5 = -1LL << *(_BYTE *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1LL << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v5) >> 6;
  unint64_t result = swift_bridgeObjectRetain(a1);
  int64_t v8 = 0LL;
  while (1)
  {
    if (v6)
    {
      uint64_t v11 = (v6 - 1) & v6;
      unint64_t v12 = __clz(__rbit64(v6)) | (v8 << 6);
      int64_t v13 = v8;
    }

    else
    {
      int64_t v14 = v8 + 1;
      if (__OFADD__(v8, 1LL)) {
        goto LABEL_37;
      }
      if (v14 >= v25)
      {
LABEL_33:
        sub_1000F36C0(a1);
        return (unint64_t)v3;
      }

      unint64_t v15 = *(void *)(v26 + 8 * v14);
      int64_t v13 = v8 + 1;
      if (!v15)
      {
        int64_t v13 = v8 + 2;
        if (v8 + 2 >= v25) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v13);
        if (!v15)
        {
          int64_t v13 = v8 + 3;
          if (v8 + 3 >= v25) {
            goto LABEL_33;
          }
          unint64_t v15 = *(void *)(v26 + 8 * v13);
          if (!v15)
          {
            int64_t v13 = v8 + 4;
            if (v8 + 4 >= v25) {
              goto LABEL_33;
            }
            unint64_t v15 = *(void *)(v26 + 8 * v13);
            if (!v15)
            {
              int64_t v16 = v8 + 5;
              if (v8 + 5 >= v25) {
                goto LABEL_33;
              }
              unint64_t v15 = *(void *)(v26 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  int64_t v13 = v16 + 1;
                  if (__OFADD__(v16, 1LL)) {
                    goto LABEL_38;
                  }
                  if (v13 >= v25) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = *(void *)(v26 + 8 * v13);
                  ++v16;
                  if (v15) {
                    goto LABEL_26;
                  }
                }
              }

              int64_t v13 = v8 + 5;
            }
          }
        }
      }

unint64_t sub_1001B7104()
{
  unint64_t result = qword_1002BE620;
  if (!qword_1002BE620)
  {
    unint64_t result = swift_getWitnessTable(&unk_1001F0144, &_s12RequestErrorON);
    atomic_store(result, (unint64_t *)&qword_1002BE620);
  }

  return result;
}

uint64_t sub_1001B7148(uint64_t a1, uint64_t a2)
{
  v3[45] = a2;
  v3[46] = v2;
  v3[44] = a1;
  uint64_t v4 = type metadata accessor for UUID(0LL);
  v3[47] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[48] = v5;
  v3[49] = swift_task_alloc((*(void *)(v5 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for URL(0LL);
  v3[50] = swift_task_alloc((*(void *)(*(void *)(v6 - 8) + 64LL) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v7 = type metadata accessor for URLRequest(0LL);
  v3[51] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[52] = v8;
  v3[53] = swift_task_alloc((*(void *)(v8 + 64) + 15LL) & 0xFFFFFFFFFFFFFFF0LL);
  return swift_task_switch(sub_1001B71F4, 0LL, 0LL);
}

uint64_t sub_1001B71F4()
{
  uint64_t v1 = v0 + 16;
  id v2 = [*(id *)(v0 + 368) musicBag];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 URLForKey:v3];
  *(void *)(v0 + 43sub_1000E053C(v0 + 2) = v4;

  *(void *)(v0 + 56) = v0 + 328;
  *(void *)(v0 + sub_1001A2FA4(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1001B72FC;
  uint64_t v5 = swift_continuation_init(v0 + 16, 1LL);
  *(void *)(v0 + 184) = _NSConcreteStackBlock;
  uint64_t v6 = (void *)(v0 + 184);
  v6[1] = 0x40000000LL;
  v6[2] = sub_10011DC18;
  void v6[3] = &unk_100278D70;
  void v6[4] = v5;
  [v4 valueWithCompletion:v6];
  return swift_continuation_await(v1);
}

uint64_t sub_1001B72FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48LL);
  *(void *)(*(void *)v0 + 44_swift_stdlib_reportUnimplementedInitializer("TVMusic.UltrawideScreenManager", 30LL, "init()", 6LL, 0LL) = v1;
  if (v1) {
    id v2 = sub_1001B78C4;
  }
  else {
    id v2 = sub_1001B735C;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_1001B735C()
{
  uint64_t v1 = v0;
  id v2 = v0 + 10;
  NSString v3 = (void *)v1[54];
  uint64_t v5 = v1[49];
  uint64_t v4 = v1[50];
  uint64_t v6 = v1[47];
  uint64_t v7 = v1[48];
  uint64_t v9 = v1[44];
  unint64_t v8 = v1[45];
  uint64_t v10 = v1[41];
  v1[56] = v10;

  static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v4, 0LL, 60.0);
  URLRequest.httpMethod.setter(1414745936LL, 0xE400000000000000LL);
  v11.value._uint64_t countAndFlagsBits = 0x706A2F6567616D69LL;
  v11.value._object = (void *)0xEA00000000006765LL;
  v12._uint64_t countAndFlagsBits = 0x2D746E65746E6F43LL;
  v12._object = (void *)0xEC00000065707954LL;
  URLRequest.setValue(_:forHTTPHeaderField:)(v11, v12);
  uint64_t v14 = UUID.init()(v13);
  uint64_t v15 = UUID.uuidString.getter(v14);
  uint64_t v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_bridgeObjectRetain(v17);
  v18._uint64_t countAndFlagsBits = 1735420462LL;
  v18._object = (void *)0xE400000000000000LL;
  String.append(_:)(v18);
  swift_bridgeObjectRelease(v17);
  v19.value._uint64_t countAndFlagsBits = v15;
  v20._object = (void *)0x800000010022A250LL;
  v19.value._object = v17;
  v20._uint64_t countAndFlagsBits = 0xD000000000000013LL;
  URLRequest.setValue(_:forHTTPHeaderField:)(v19, v20);
  swift_bridgeObjectRelease(v17);
  sub_1000E945C(v9, v8);
  URLRequest.httpBody.setter(v9, v8);
  id v21 = [(id)objc_opt_self(ICUserIdentity) activeAccount];
  id v22 = [objc_allocWithZone(ICStoreRequestContext) initWithIdentity:v21];
  v1[57] = v22;

  id v23 = objc_allocWithZone(&OBJC_CLASS___ICStoreURLRequest);
  id v24 = v22;
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v26 = [v23 initWithURLRequest:isa requestContext:v24];
  v1[58] = v26;

  id v27 = [(id)objc_opt_self(ICURLSessionManager) highPrioritySession];
  v1[59] = v27;
  v1[15] = v1 + 43;
  v1[10] = v1;
  v1[11] = sub_1001B7600;
  uint64_t v28 = swift_continuation_init(v2, 1LL);
  v1[18] = _NSConcreteStackBlock;
  v1 += 18;
  v1[1] = 0x40000000LL;
  void v1[2] = sub_1000E8A40;
  v1[3] = &unk_100278D88;
  void v1[4] = v28;
  [v27 enqueueUploadRequest:v26 withCompletionHandler:v1];
  return swift_continuation_await(v2);
}

uint64_t sub_1001B7600()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112LL);
  *(void *)(*(void *)v0 + 48_swift_stdlib_reportUnimplementedInitializer("TVMusic.UltrawideScreenManager", 30LL, "init()", 6LL, 0LL) = v1;
  if (v1) {
    id v2 = sub_1001B7920;
  }
  else {
    id v2 = sub_1001B7660;
  }
  return swift_task_switch(v2, 0LL, 0LL);
}

uint64_t sub_1001B7660()
{
  uint64_t v1 = (_OWORD *)(v0 + 264);
  id v2 = *(void **)(v0 + 344);

  id v3 = [v2 parsedBodyDictionary];
  if (!v3)
  {
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 280) = 0u;
LABEL_10:
    sub_1000E03B4(v0 + 264, &qword_1002B7850);
    goto LABEL_11;
  }

  uint64_t v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)( v3,  &type metadata for AnyHashable,  (char *)&type metadata for Any + 8,  &protocol witness table for AnyHashable);

  *(void *)(v0 + 31sub_1000E053C(v0 + 2) = 0x6E656B6F74LL;
  *(void *)(v0 + 320) = 0xE500000000000000LL;
  AnyHashable.init<A>(_:)(v0 + 312, &type metadata for String, &protocol witness table for String);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_10013CCD8(v0 + 224), (v7 & 1) != 0))
  {
    sub_1000E0094(*(void *)(v5 + 56) + 32 * v6, v0 + 264);
  }

  else
  {
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 280) = 0u;
  }

  swift_bridgeObjectRelease(v5);
  sub_1000E0060(v0 + 224);
  if (!*(void *)(v0 + 288)) {
    goto LABEL_10;
  }
  if ((swift_dynamicCast(v0 + 296, v0 + 264, (char *)&type metadata for Any + 8, &type metadata for String, 6LL) & 1) != 0)
  {
    uint64_t v9 = *(void **)(v0 + 456);
    unint64_t v8 = *(void **)(v0 + 464);
    uint64_t v10 = *(void **)(v0 + 448);
    uint64_t v12 = *(void *)(v0 + 416);
    uint64_t v11 = *(void *)(v0 + 424);
    uint64_t v14 = *(void *)(v0 + 400);
    uint64_t v13 = *(void *)(v0 + 408);
    uint64_t v15 = *(void *)(v0 + 392);

    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v17 = *(void *)(v0 + 304);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    swift_task_dealloc(v11);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v16, v17);
  }

uint64_t sub_1001B78C4(uint64_t a1)
{
  id v2 = *(void **)(v1 + 432);
  swift_willThrow(a1);

  uint64_t v4 = *(void *)(v1 + 392);
  uint64_t v3 = *(void *)(v1 + 400);
  swift_task_dealloc(*(void *)(v1 + 424));
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001B7920(uint64_t a1)
{
  id v2 = *(void **)(v1 + 472);
  uint64_t v4 = *(void **)(v1 + 456);
  uint64_t v3 = *(void **)(v1 + 464);
  uint64_t v5 = *(void **)(v1 + 448);
  uint64_t v7 = *(void *)(v1 + 416);
  uint64_t v6 = *(void *)(v1 + 424);
  uint64_t v8 = *(void *)(v1 + 408);
  swift_willThrow(a1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v10 = *(void *)(v1 + 392);
  uint64_t v9 = *(void *)(v1 + 400);
  swift_task_dealloc(*(void *)(v1 + 424));
  swift_task_dealloc(v9);
  swift_task_dealloc(v10);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001B79C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(a2);
  uint64_t v4 = *(uint64_t **)(*(void *)(v2 + 64) + 40LL);
  *uint64_t v4 = v3;
  v4[1] = v5;
  return swift_continuation_resume(v2);
}

uint64_t sub_1001B79F4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v35 = a1;
  uint64_t v39 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v42 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v4);
  uint64_t v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  __chkstk_darwin(v6, v7);
  unint64_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002BE660);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for URLRequest(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14, v17);
  Swift::String v18 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v36 = [a2 requestQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v34, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v35, v9);
  uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = (v19 + 24) & ~v19;
  uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = (v16 + v21 + v20) & ~v21;
  uint64_t v23 = swift_allocObject(&unk_100278BA0, v22 + v11, v19 | v21 | 7);
  *(void *)(v23 + sub_1001A2FA4(v0 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v23 + v20, v18, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, v13, v9);
  aBlock[4] = sub_1001B880C;
  uint64_t v45 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1000FA280;
  aBlock[3] = &unk_100278BB8;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = a2;
  uint64_t v26 = v37;
  static DispatchQoS.unspecified.getter(v25);
  uint64_t v43 = &_swiftEmptyArrayStorage;
  unint64_t v27 = sub_1000F99EC();
  uint64_t v28 = sub_1000DFE10(&qword_1002B86F8);
  unint64_t v29 = sub_1000F9A34();
  __int128 v31 = v38;
  uint64_t v30 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v28, v29, v39, v27);
  BOOL v32 = v36;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v31, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v30);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v41);
  return swift_release(v45);
}

void sub_1001B7CC4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000DFE10(&qword_1002BE660);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5, v8);
  uint64_t v9 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v10 = [a1 urlSession];
  Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
  id v12 = [v10 dataTaskPromiseWithRequest:isa];

  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v9, a3, v5);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  uint64_t v16 = v15 + v7;
  uint64_t v17 = v14 | 7;
  uint64_t v18 = swift_allocObject(&unk_100278BF0, v16, v14 | 7);
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v19(v18 + v15, v9, v5);
  unint64_t v27 = sub_1001B884C;
  uint64_t v28 = v18;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256LL;
  id v25 = sub_1001B7EF8;
  uint64_t v26 = &unk_100278C08;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release(v28);
  [v12 addSuccessBlock:v20];
  _Block_release(v20);
  v13(v9, a3, v5);
  uint64_t v21 = swift_allocObject(&unk_100278C40, v16, v17);
  v19(v21 + v15, v9, v5);
  unint64_t v27 = sub_1001B886C;
  uint64_t v28 = v21;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256LL;
  id v25 = sub_1001B7EF8;
  uint64_t v26 = &unk_100278C58;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_release(v28);
  [v12 addErrorBlock:v22];
  _Block_release(v22);
}

uint64_t sub_1001B7EFC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v35 = a1;
  uint64_t v39 = type metadata accessor for DispatchWorkItemFlags(0LL);
  uint64_t v42 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v4);
  uint64_t v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v6 = type metadata accessor for DispatchQoS(0LL);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  __chkstk_darwin(v6, v7);
  unint64_t v37 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v9 = sub_1000DFE10(&qword_1002BE668);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  uint64_t v14 = type metadata accessor for URLComponents(0LL);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14, v17);
  uint64_t v18 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v36 = [a2 requestQueue];
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v34, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v35, v9);
  uint64_t v19 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = (v19 + 24) & ~v19;
  uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = (v16 + v21 + v20) & ~v21;
  uint64_t v23 = swift_allocObject(&unk_100278C90, v22 + v11, v19 | v21 | 7);
  *(void *)(v23 + sub_1001A2FA4(v0 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v23 + v20, v18, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, v13, v9);
  aBlock[4] = sub_1001B89AC;
  uint64_t v45 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256LL;
  aBlock[2] = sub_1000FA280;
  aBlock[3] = &unk_100278CA8;
  uint64_t v24 = _Block_copy(aBlock);
  id v25 = a2;
  uint64_t v26 = v37;
  static DispatchQoS.unspecified.getter(v25);
  uint64_t v43 = &_swiftEmptyArrayStorage;
  unint64_t v27 = sub_1000F99EC();
  uint64_t v28 = sub_1000DFE10(&qword_1002B86F8);
  unint64_t v29 = sub_1000F9A34();
  __int128 v31 = v38;
  uint64_t v30 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v28, v29, v39, v27);
  BOOL v32 = v36;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0LL, v26, v31, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v30);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v41);
  return swift_release(v45);
}

void sub_1001B81CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v4 = sub_1000DFE10(&qword_1002BE668);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL);
  id v9 = objc_msgSend((id)objc_opt_self(ACAccountStore), "ams_sharedAccountStore");
  id v10 = objc_msgSend(v9, "ams_activeiTunesAccount");

  id v11 = [a1 requestEncoder];
  id v12 = [v11 tokenService];

  uint64_t v13 = objc_opt_self(&OBJC_CLASS___AMSMediaTokenService);
  uint64_t v14 = (void *)swift_dynamicCastObjCClass(v12, v13);
  if (!v14) {
    swift_unknownObjectRelease(v12);
  }
  id v31 = v10;
  [v14 setAccount:v10];

  id v15 = [a1 requestEncoder];
  [v15 setAccount:v10];

  id v16 = [a1 requestEncoder];
  Class isa = URLComponents._bridgeToObjectiveC()().super.isa;
  id v18 = [v16 requestWithComponents:isa];

  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v20 = v33;
  v19((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0LL), v33, v4);
  uint64_t v21 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v22 = (v21 + 16) & ~v21;
  uint64_t v23 = v22 + v6;
  uint64_t v24 = v21 | 7;
  uint64_t v25 = swift_allocObject(&unk_100278CE0, v23, v21 | 7);
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v26(v25 + v22, v8, v4);
  uint64_t v38 = sub_1001B8A50;
  uint64_t v39 = v25;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256LL;
  id v36 = sub_1001B7EF8;
  unint64_t v37 = &unk_100278CF8;
  unint64_t v27 = _Block_copy(&aBlock);
  swift_release(v39);
  [v18 addSuccessBlock:v27];
  _Block_release(v27);
  v19(v8, v20, v4);
  uint64_t v28 = swift_allocObject(&unk_100278D30, v23, v24);
  v26(v28 + v22, v8, v4);
  uint64_t v38 = sub_1001B8ACC;
  uint64_t v39 = v28;
  __int128 aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256LL;
  id v36 = sub_1001B7EF8;
  unint64_t v37 = &unk_100278D48;
  unint64_t v29 = _Block_copy(&aBlock);
  swift_release(v39);
  [v18 addErrorBlock:v29];
  _Block_release(v29);
}

uint64_t sub_1001B84EC(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = a1;
  id v4 = a1;
  uint64_t v5 = sub_1000DFE10(a3);
  return CheckedContinuation.resume(returning:)(&v7, v5);
}

uint64_t sub_1001B8530(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = a1;
  swift_errorRetain(a1);
  uint64_t v4 = sub_1000DFE10(a3);
  return CheckedContinuation.resume(throwing:)(&v6, v4);
}

void sub_1001B8574(char a1)
{
  __asm { BR              X10 }

uint64_t sub_1001B85D0()
{
  if (*(void *)(v0 + 16) && (unint64_t v3 = sub_10013CD08(0x7475626972747461LL, 0xEA00000000007365LL), (v4 & 1) != 0)) {
    sub_1000E0094(*(void *)(v0 + 56) + 32 * v3, (uint64_t)v10);
  }
  else {
    memset(v10, 0, 32);
  }
  swift_bridgeObjectRelease(0xEA00000000007365LL);
  uint64_t v5 = sub_1000DFE10(&qword_1002B7850);
  uint64_t v6 = sub_1000DFE10(v2);
  if ((swift_dynamicCast(&v9, v10, v5, v6, 6LL) & 1) == 0)
  {
    unint64_t v8 = sub_1001B7104();
    swift_allocError(&_s12RequestErrorON, v8, 0LL, 0LL);
    __asm { BR              X11 }
  }

  return v9;
}

uint64_t sub_1001B87C8(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return sub_1000E945C(a1, a2);
  }
  else {
    return swift_bridgeObjectRetain(a2);
  }
}

uint64_t sub_1001B87D8(uint64_t a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0) {
    return sub_1000E94A0(a1, a2);
  }
  else {
    return swift_bridgeObjectRelease(a2);
  }
}

uint64_t sub_1001B87E8(uint64_t a1)
{
  return sub_1001B7EFC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B87F0(uint64_t a1)
{
  return sub_1001B79F4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001B87F8()
{
  return sub_1001B88E8((uint64_t (*)(void))&type metadata accessor for URLRequest, &qword_1002BE660);
}

uint64_t sub_1001B880C()
{
  return sub_1001B89C8( (uint64_t (*)(void))&type metadata accessor for URLRequest,  &qword_1002BE660,  (uint64_t (*)(void, unint64_t, unint64_t))sub_1001B7CC4);
}

uint64_t sub_1001B8828(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1001B8838(uint64_t a1)
{
  return swift_release(*(void *)(a1 + 40));
}

uint64_t sub_1001B8840()
{
  return sub_1001B8A70(&qword_1002BE660);
}

uint64_t sub_1001B884C(uint64_t a1)
{
  return sub_1001B8880(a1, &qword_1002BE660, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_1001B84EC);
}

uint64_t sub_1001B8860()
{
  return sub_1001B8A70(&qword_1002BE660);
}

uint64_t sub_1001B886C(uint64_t a1)
{
  return sub_1001B8880(a1, &qword_1002BE660, sub_1001B8530);
}

uint64_t sub_1001B8880(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(sub_1000DFE10(a2) - 8) + 80LL);
  return a3(a1, v3 + ((v7 + 16) & ~v7), a2);
}

uint64_t sub_1001B88D4()
{
  return sub_1001B88E8((uint64_t (*)(void))&type metadata accessor for URLComponents, &qword_1002BE668);
}

uint64_t sub_1001B88E8(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = a1(0LL);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_1000DFE10(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v13 = v12 + *(void *)(v10 + 64);
  uint64_t v14 = v6 | v11 | 7;

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2 + v7, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2 + v12, v9);
  return swift_deallocObject(v2, v13, v14);
}

uint64_t sub_1001B89AC()
{
  return sub_1001B89C8( (uint64_t (*)(void))&type metadata accessor for URLComponents,  &qword_1002BE668,  (uint64_t (*)(void, unint64_t, unint64_t))sub_1001B81CC);
}

uint64_t sub_1001B89C8( uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void, unint64_t, unint64_t))
{
  uint64_t v5 = *(void *)(a1(0LL) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24LL) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(sub_1000DFE10(a2) - 8) + 80LL);
  return a3(*(void *)(v3 + 16), v3 + v6, v3 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_1001B8A44()
{
  return sub_1001B8A70(&qword_1002BE668);
}

uint64_t sub_1001B8A50(uint64_t a1)
{
  return sub_1001B8880(a1, &qword_1002BE668, (uint64_t (*)(uint64_t, uint64_t, uint64_t *))sub_1001B84EC);
}

uint64_t sub_1001B8A64()
{
  return sub_1001B8A70(&qword_1002BE668);
}

uint64_t sub_1001B8A70(uint64_t *a1)
{
  uint64_t v2 = sub_1000DFE10(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_1001B8ACC(uint64_t a1)
{
  return sub_1001B8880(a1, &qword_1002BE668, sub_1001B8530);
}

uint64_t _s22SocialProfileAttributeOwxx(uint64_t a1)
{
  return sub_1001B87D8(*(void *)a1, *(void *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s22SocialProfileAttributeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_1001B87C8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + sub_1001A2FA4(v0 + 16) = v5;
  return a1;
}

uint64_t _s22SocialProfileAttributeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(_BYTE *)(a2 + 16);
  sub_1001B87C8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(_BYTE *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + sub_1001A2FA4(v0 + 16) = v5;
  sub_1001B87D8(v6, v7, v8);
  return a1;
}

uint64_t _s22SocialProfileAttributeOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(_BYTE *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + sub_1001A2FA4(v0 + 16) = v3;
  sub_1001B87D8(v4, v5, v6);
  return a1;
}

ValueMetadata *_s22SocialProfileAttributeOMa()
{
  return &_s22SocialProfileAttributeON;
}

void *_s12RequestErrorOwxx(void *result)
{
  unint64_t v1 = result[3];
  LODWORD(vsub_1000E053C(v0 + 2) = -1;
  if (v1 < 0xFFFFFFFF) {
    uint64_t v2 = result[3];
  }
  if ((int)v2 - 1 < 0)
  {
    if (v1) {
      return (void *)sub_1000E053C(result);
    }
  }

  return result;
}

uint64_t _s12RequestErrorOwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 24);
  }
  if ((int)v4 - 1 < 0 && v3)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 3sub_1000E053C(v0 + 2) = v6;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }

  else
  {
    __int128 v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + sub_1001A2FA4(v0 + 16) = v5;
    *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *(void *)(a2 + 32);
  }

  return a1;
}

uint64_t _s12RequestErrorOwca(uint64_t a1, __int128 *a2)
{
  unint64_t v4 = *(void *)(a1 + 24);
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF) {
    LODWORD(v6) = -1;
  }
  else {
    uint64_t v6 = *(void *)(a1 + 24);
  }
  int v7 = v6 - 1;
  unint64_t v8 = *((void *)a2 + 3);
  if (v8 < 0xFFFFFFFF) {
    uint64_t v5 = *((void *)a2 + 3);
  }
  int v9 = v5 - 1;
  if ((v7 & 0x80000000) == 0)
  {
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_8;
  }

  if ((v9 & 0x80000000) == 0)
  {
    if (v4) {
      sub_1000E053C((void *)a1);
    }
    goto LABEL_13;
  }

  if (!v4)
  {
LABEL_8:
    if (v8)
    {
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 3sub_1000E053C(v0 + 2) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v8 - 8))(a1, a2);
      return a1;
    }

uint64_t _s12RequestErrorOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 24);
  LODWORD(v5) = -1;
  if (v4 < 0xFFFFFFFF) {
    uint64_t v5 = *(void *)(a1 + 24);
  }
  if ((int)v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 24);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 24);
    }
    if ((int)v7 - 1 >= 0)
    {
      if (!v4) {
        goto LABEL_12;
      }
LABEL_11:
      sub_1000E053C((void *)a1);
      goto LABEL_12;
    }

    if (v4)
    {
      if (!v6)
      {
        sub_1000E0060(a1);
        goto LABEL_12;
      }

      goto LABEL_11;
    }
  }

uint64_t _s12RequestErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0LL;
  }
  if (a2 > 0x7FFFFFFA && *(_BYTE *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  unsigned int v5 = v4 + 1;
  unsigned int v6 = v4 - 3;
  if (v5 >= 5) {
    return v6;
  }
  else {
    return 0LL;
  }
}

uint64_t _s12RequestErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)(result + 3sub_1000E053C(v0 + 2) = 0LL;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + sub_1001A2FA4(v0 + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(_BYTE *)(result + 40) = 1;
    }
  }

  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(_BYTE *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 4;
    }
  }

  return result;
}

uint64_t sub_1001B8E88(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_1001B8EAC(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 - 0x7FFFFFFF;
  }

  else if (a2)
  {
    *(void *)(a1 + 24) = a2;
  }

  return result;
}

ValueMetadata *_s12RequestErrorOMa()
{
  return &_s12RequestErrorON;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(&OBJC_CLASS____TtC7TVMusicP33_572C11A026AFE398E19CDBF2FD847EF119ResourceBundleClass);
}

void sub_1001B8F3C( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B8FB0( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B9024( uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1001B9098(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "TVMusicMotionView dealloc. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9110(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Showing ID %@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9188(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Pausing ID %@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9200(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Seeking to start for ID %@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9278(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Playing ID %@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B92F0(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Hiding ID %@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9368(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Starting update timer. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B93E0(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Stopping update timer. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9458(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378( (void *)&_mh_execute_header,  v2,  v3,  "Player ready to play; starting video playback. id=%@",
    v4,
    v5,
    v6,
    v7,
    v8);

  sub_10002D38C();
}

void sub_1001B94D0(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378( (void *)&_mh_execute_header,  v2,  v3,  "Player layer ready for display; hiding still image. id=%@",
    v4,
    v5,
    v6,
    v7,
    v8);

  sub_10002D38C();
}

void sub_1001B9548(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Showing motion: creating AVPlayer. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B95C0(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Removing AVPlayer. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9638(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Removing AVPlayerLayer (bottom). id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B96B0(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Removing AVPlayerLayer. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B9728(void *a1)
{
  unint64_t v1 = (void *)objc_claimAutoreleasedReturnValue([a1 elementID]);
  sub_10002D398();
  sub_10002D378((void *)&_mh_execute_header, v2, v3, "Hiding motion, showing still image. id=%@", v4, v5, v6, v7, v8);

  sub_10002D38C();
}

void sub_1001B97A4(os_log_t log)
{
  *(_WORD *)unint64_t v1 = 0;
  _os_log_error_impl( (void *)&_mh_execute_header,  log,  OS_LOG_TYPE_ERROR,  "Could not find search controller on search page; check for change in TVML view hierarchy.",
    v1,
    2u);
}

void sub_1001B97E4(uint64_t a1)
{
  int v1 = 138412290;
  uint64_t v2 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Failed to remove song from playlist: %@",  (uint8_t *)&v1,  0xCu);
}

void sub_1001B9860(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  int v3 = 138412546;
  uint64_t v4 = v2;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl( (void *)&_mh_execute_header,  (os_log_t)&_os_log_default,  OS_LOG_TYPE_ERROR,  "Error creating playlist [%@]: %@",  (uint8_t *)&v3,  0x16u);
}

void sub_1001B98EC(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to present bulletin with error: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1001B9960(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void **)(a2 + 40);
  __int16 v5 = a3;
  uint64_t v6 = (void *)objc_claimAutoreleasedReturnValue([v4 name]);
  int v7 = 138543874;
  uint64_t v8 = a1;
  __int16 v9 = 2114;
  __int128 v10 = v6;
  __int16 v11 = 2050;
  uint64_t v12 = &index;
  _os_log_error_impl( (void *)&_mh_execute_header,  v5,  OS_LOG_TYPE_ERROR,  "Did not find playlist entry %{public}@ in playlist %{public}@ at position %{public}ld",  (uint8_t *)&v7,  0x20u);
}

void sub_1001B9A30(uint64_t a1, os_log_s *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Failed to remove song from playlist; error: %{public}@",
    (uint8_t *)&v2,
    0xCu);
}

void sub_1001B9AA4(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Can't access Playlist folder with PID %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1001B9B18(uint64_t *a1, os_log_s *a2)
{
  uint64_t v2 = *a1;
  int v3 = 138412290;
  uint64_t v4 = v2;
  _os_log_debug_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_DEBUG,  "Found cached artwork at %@",  (uint8_t *)&v3,  0xCu);
}

void sub_1001B9B90(os_log_t log)
{
  *(_WORD *)int v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "MPCPlaybackIntent is nil!", v1, 2u);
}

void sub_1001B9BD0(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Error picking route for airplay playback: %@",  (uint8_t *)&v2,  0xCu);
}

void sub_1001B9C44(uint64_t a1, os_log_s *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl( (void *)&_mh_execute_header,  a2,  OS_LOG_TYPE_ERROR,  "Idle timer assertion - Could not create assertion due to error: %@",  (uint8_t *)&v2,  0xCu);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return _[a1 CGContext];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _[a1 CGPath];
}

id objc_msgSend_DSIDForUserIdentity_outError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "DSIDForUserIdentity:outError:");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_PAFContainerData(void *a1, const char *a2, ...)
{
  return _[a1 PAFContainerData];
}

id objc_msgSend_PAFDataFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "PAFDataFromDictionary:");
}

id objc_msgSend_PAFFeatureName(void *a1, const char *a2, ...)
{
  return _[a1 PAFFeatureName];
}

id objc_msgSend_PAFRecommendationData(void *a1, const char *a2, ...)
{
  return _[a1 PAFRecommendationData];
}

id objc_msgSend_TTML(void *a1, const char *a2, ...)
{
  return _[a1 TTML];
}

id objc_msgSend_TVEpisodesLibraryRequestForShow_season_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TVEpisodesLibraryRequestForShow:season:");
}

id objc_msgSend_TVSeasonsLibraryRequestForShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "TVSeasonsLibraryRequestForShow:");
}

id objc_msgSend_TVShowsLibraryRequest(void *a1, const char *a2, ...)
{
  return _[a1 TVShowsLibraryRequest];
}

id objc_msgSend_TVShowsViewController(void *a1, const char *a2, ...)
{
  return _[a1 TVShowsViewController];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLAssetWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLAssetWithURL:options:");
}

id objc_msgSend_URLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForKey:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:relativeToURL:");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__AMSTypeFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_AMSTypeFromString:");
}

id objc_msgSend__TTMLLyricsFromResourceForSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_TTMLLyricsFromResourceForSong:");
}

id objc_msgSend__TTMLResourcePathForSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_TTMLResourcePathForSong:");
}

id objc_msgSend__TVMLKitViewForElement_existingView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_TVMLKitViewForElement:existingView:");
}

id objc_msgSend__TVPPlaybackStateFromMCPPlayerState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_TVPPlaybackStateFromMCPPlayerState:");
}

id objc_msgSend__accessibilityIdentifierForGenreAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIdentifierForGenreAtIndexPath:");
}

id objc_msgSend__accessibilityIdentifierForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIdentifierForIndexPath:");
}

id objc_msgSend__accessibilityIdentifierForMenuItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityIdentifierForMenuItem:");
}

id objc_msgSend__activeAccountDSID(void *a1, const char *a2, ...)
{
  return _[a1 _activeAccountDSID];
}

id objc_msgSend__activeAnimationDuration(void *a1, const char *a2, ...)
{
  return _[a1 _activeAnimationDuration];
}

id objc_msgSend__addArtistButton(void *a1, const char *a2, ...)
{
  return _[a1 _addArtistButton];
}

id objc_msgSend__addBackdropView(void *a1, const char *a2, ...)
{
  return _[a1 _addBackdropView];
}

id objc_msgSend__addClassicalSongData_toDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addClassicalSongData:toDictionary:");
}

id objc_msgSend__addControlsShadowView(void *a1, const char *a2, ...)
{
  return _[a1 _addControlsShadowView];
}

id objc_msgSend__addControlsView(void *a1, const char *a2, ...)
{
  return _[a1 _addControlsView];
}

id objc_msgSend__addEmptyContentView(void *a1, const char *a2, ...)
{
  return _[a1 _addEmptyContentView];
}

id objc_msgSend__addGestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 _addGestureRecognizers];
}

id objc_msgSend__addGlobalPlaylistToLibrary_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addGlobalPlaylistToLibrary:completionHandler:");
}

id objc_msgSend__addHeadingLabel(void *a1, const char *a2, ...)
{
  return _[a1 _addHeadingLabel];
}

id objc_msgSend__addItemToPlaylist_objectToAdd_itemsToAdd_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addItemToPlaylist:objectToAdd:itemsToAdd:completionHandler:");
}

id objc_msgSend__addLabel(void *a1, const char *a2, ...)
{
  return _[a1 _addLabel];
}

id objc_msgSend__addPafDataToPlaybackIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPafDataToPlaybackIntent:");
}

id objc_msgSend__addPlayerViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _addPlayerViewControllerIfNeeded];
}

id objc_msgSend__addPlaylistEntryData_toDictionary_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addPlaylistEntryData:toDictionary:index:");
}

id objc_msgSend__addSongData_toDictionary_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSongData:toDictionary:index:");
}

id objc_msgSend__addSongInfoView(void *a1, const char *a2, ...)
{
  return _[a1 _addSongInfoView];
}

id objc_msgSend__addSubheadLabelWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubheadLabelWithFont:");
}

id objc_msgSend__addSubheadLabelWithFont_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubheadLabelWithFont:textColor:");
}

id objc_msgSend__addToNewPlaylistNamed_parentPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToNewPlaylistNamed:parentPlaylist:");
}

id objc_msgSend__addToPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToPlaylist:");
}

id objc_msgSend__addToPlaylist_objectToAdd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToPlaylist:objectToAdd:");
}

id objc_msgSend__addToPlaylist_objectToAdd_songsToAdd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToPlaylist:objectToAdd:songsToAdd:");
}

id objc_msgSend__addToPlaylist_requestConfirmation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addToPlaylist:requestConfirmation:");
}

id objc_msgSend__addTransportBar(void *a1, const char *a2, ...)
{
  return _[a1 _addTransportBar];
}

id objc_msgSend__addVocalsMessageView(void *a1, const char *a2, ...)
{
  return _[a1 _addVocalsMessageView];
}

id objc_msgSend__adjustFrameForImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustFrameForImageView:");
}

id objc_msgSend__adjustOffsetForHeaderViews_withCells_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustOffsetForHeaderViews:withCells:");
}

id objc_msgSend__adjustThumbnailForFocusState(void *a1, const char *a2, ...)
{
  return _[a1 _adjustThumbnailForFocusState];
}

id objc_msgSend__animateStillImageToAlpha_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateStillImageToAlpha:completion:");
}

id objc_msgSend__animateStillImageToAlpha_duration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateStillImageToAlpha:duration:completion:");
}

id objc_msgSend__applyBackdropViewSettings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyBackdropViewSettings:");
}

id objc_msgSend__applyBackdropViewSettings_includeTints_includeBlur_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyBackdropViewSettings:includeTints:includeBlur:");
}

id objc_msgSend__applyShadowStyleToLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyShadowStyleToLabel:");
}

id objc_msgSend__artistForItemAtGlobalIndex_prefetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_artistForItemAtGlobalIndex:prefetch:");
}

id objc_msgSend__artistForItemAtIndexpath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_artistForItemAtIndexpath:");
}

id objc_msgSend__artistFromAlbumMediaData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_artistFromAlbumMediaData:");
}

id objc_msgSend__artworkPlaceholderImageForUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_artworkPlaceholderImageForUserInterfaceStyle:");
}

id objc_msgSend__attributedStringFromLyricsInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attributedStringFromLyricsInfo:");
}

id objc_msgSend__beginZoomAnimationFromViewController_toViewController_containerView_completion_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginZoomAnimationFromViewController:toViewController:containerView:completion:");
}

id objc_msgSend__bestStoreIdentifierForIdentifierSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bestStoreIdentifierForIdentifierSet:");
}

id objc_msgSend__boldLyricsFont(void *a1, const char *a2, ...)
{
  return _[a1 _boldLyricsFont];
}

id objc_msgSend__buttonFrameWithBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buttonFrameWithBounds:");
}

id objc_msgSend__buttonSize(void *a1, const char *a2, ...)
{
  return _[a1 _buttonSize];
}

id objc_msgSend__cachePolicyFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachePolicyFromString:");
}

id objc_msgSend__cachePreparedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachePreparedObject:");
}

id objc_msgSend__callCallbackWithCallbackIdentifier_command_success_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callCallbackWithCallbackIdentifier:command:success:");
}

id objc_msgSend__callJSMethodNamed_withArgs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callJSMethodNamed:withArgs:");
}

id objc_msgSend__callJSMusicInitializedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _callJSMusicInitializedNotification];
}

id objc_msgSend__callJSPlaybackErrorNotification_error_methodName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callJSPlaybackErrorNotification:error:methodName:");
}

id objc_msgSend__cameraOptionsFrameAtPosition_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cameraOptionsFrameAtPosition:size:");
}

id objc_msgSend__cancelAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAnimations];
}

id objc_msgSend__cancelAutoUpdatingPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 _cancelAutoUpdatingPreviewViewController];
}

id objc_msgSend__cellForMediaItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellForMediaItem:");
}

id objc_msgSend__cellForSingleCoverMediaItem(void *a1, const char *a2, ...)
{
  return _[a1 _cellForSingleCoverMediaItem];
}

id objc_msgSend__changeMediaInDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_changeMediaInDirection:");
}

id objc_msgSend__checkForDuplicatesInPlaylist_songsToAdd_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkForDuplicatesInPlaylist:songsToAdd:completion:");
}

id objc_msgSend__checkReadyToDisplay(void *a1, const char *a2, ...)
{
  return _[a1 _checkReadyToDisplay];
}

id objc_msgSend__checkmarkImageWithGradient(void *a1, const char *a2, ...)
{
  return _[a1 _checkmarkImageWithGradient];
}

id objc_msgSend__clearCachedValues(void *a1, const char *a2, ...)
{
  return _[a1 _clearCachedValues];
}

id objc_msgSend__closeApp(void *a1, const char *a2, ...)
{
  return _[a1 _closeApp];
}

id objc_msgSend__codecNameForFormatID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_codecNameForFormatID:");
}

id objc_msgSend__commonInit(void *a1, const char *a2, ...)
{
  return _[a1 _commonInit];
}

id objc_msgSend__completeTest_afterNotification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_completeTest:afterNotification:");
}

id objc_msgSend__configureCollectionViewLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureCollectionViewLayout:");
}

id objc_msgSend__configureForEmptyContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureForEmptyContent:");
}

id objc_msgSend__configureLabel_withTextElement_maxWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureLabel:withTextElement:maxWidth:");
}

id objc_msgSend__configurePlayingCellForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurePlayingCellForIndexPath:");
}

id objc_msgSend__configureSpecialBadgeIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _configureSpecialBadgeIndicator];
}

id objc_msgSend__configureStillImageForElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureStillImageForElement:");
}

id objc_msgSend__configureTableHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _configureTableHeaderView];
}

id objc_msgSend__configureVideoWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureVideoWithURL:");
}

id objc_msgSend__configureViewWithMPResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureViewWithMPResponse:");
}

id objc_msgSend__configureWithElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWithElement:");
}

id objc_msgSend__configureWithText_imageName_contentColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWithText:imageName:contentColor:");
}

id objc_msgSend__constraintsForLayout(void *a1, const char *a2, ...)
{
  return _[a1 _constraintsForLayout];
}

id objc_msgSend__contentOffsetForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentOffsetForIndexPath:");
}

id objc_msgSend__contentOffsetForScrubPercentage_withScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentOffsetForScrubPercentage:withScrollView:");
}

id objc_msgSend__contextDictionaryForAlbumDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextDictionaryForAlbumDictionary:");
}

id objc_msgSend__contextDictionaryForPlaylistDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextDictionaryForPlaylistDictionary:");
}

id objc_msgSend__contextMenuForAlbum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForAlbum:");
}

id objc_msgSend__contextMenuForArtist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForArtist:");
}

id objc_msgSend__contextMenuForLibraryObject_inContainer_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForLibraryObject:inContainer:completion:");
}

id objc_msgSend__contextMenuForLibraryPlaylistEntry_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForLibraryPlaylistEntry:completionHandler:");
}

id objc_msgSend__contextMenuForMPTVSeason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForMPTVSeason:");
}

id objc_msgSend__contextMenuForMovie_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForMovie:");
}

id objc_msgSend__contextMenuForPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForPlaylist:");
}

id objc_msgSend__contextMenuForPlaylistFolder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForPlaylistFolder:");
}

id objc_msgSend__contextMenuForSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForSong:");
}

id objc_msgSend__contextMenuForTVEpisode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contextMenuForTVEpisode:");
}

id objc_msgSend__continuousCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 _continuousCornerRadius];
}

id objc_msgSend__createAnimationForBarIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createAnimationForBarIndex:");
}

id objc_msgSend__createAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _createAnimations];
}

id objc_msgSend__createBarViews(void *a1, const char *a2, ...)
{
  return _[a1 _createBarViews];
}

id objc_msgSend__createGlobalPlayerPathWithRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createGlobalPlayerPathWithRoute:");
}

id objc_msgSend__createImageViewsForImageElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createImageViewsForImageElement:");
}

id objc_msgSend__createLabelAtPosition_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createLabelAtPosition:width:");
}

id objc_msgSend__createTimerForUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _createTimerForUpdates];
}

id objc_msgSend__createVideo(void *a1, const char *a2, ...)
{
  return _[a1 _createVideo];
}

id objc_msgSend__createVideoWithAudioSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createVideoWithAudioSession:");
}

id objc_msgSend__currentFeatureName(void *a1, const char *a2, ...)
{
  return _[a1 _currentFeatureName];
}

id objc_msgSend__currentImageViewSize(void *a1, const char *a2, ...)
{
  return _[a1 _currentImageViewSize];
}

id objc_msgSend__currentlyPlayingPlaybackType(void *a1, const char *a2, ...)
{
  return _[a1 _currentlyPlayingPlaybackType];
}

id objc_msgSend__darkModeListTitleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 _darkModeListTitleTextColor];
}

id objc_msgSend__debugNameForCloudStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugNameForCloudStatus:");
}

id objc_msgSend__debugNameForPlayAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugNameForPlayAction:");
}

id objc_msgSend__debugNameForState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugNameForState:");
}

id objc_msgSend__debugSaveTTMLForSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugSaveTTMLForSong:");
}

id objc_msgSend__decoratedTitleString(void *a1, const char *a2, ...)
{
  return _[a1 _decoratedTitleString];
}

id objc_msgSend__defaultDetailTextLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _defaultDetailTextLabelColor];
}

id objc_msgSend__defaultTextLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _defaultTextLabelColor];
}

id objc_msgSend__defaultValues(void *a1, const char *a2, ...)
{
  return _[a1 _defaultValues];
}

id objc_msgSend__defaultsKeyForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultsKeyForAlertType:");
}

id objc_msgSend__delegateHandlerForControlGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delegateHandlerForControlGesture:");
}

id objc_msgSend__deleteConfirmationDialogWithTitle_CompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteConfirmationDialogWithTitle:CompletionHandler:");
}

id objc_msgSend__destroyTimerForUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _destroyTimerForUpdates];
}

id objc_msgSend__destroyVideo(void *a1, const char *a2, ...)
{
  return _[a1 _destroyVideo];
}

id objc_msgSend__detailTextLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _detailTextLabelColor];
}

id objc_msgSend__dictionaryForPlaylistEntry_playlistPID_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictionaryForPlaylistEntry:playlistPID:index:");
}

id objc_msgSend__dictionaryForSong_inAlbum_index_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dictionaryForSong:inAlbum:index:");
}

id objc_msgSend__didShowAlertOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didShowAlertOfType:");
}

id objc_msgSend__digitizerLocation(void *a1, const char *a2, ...)
{
  return _[a1 _digitizerLocation];
}

id objc_msgSend__dismissCameraPicker(void *a1, const char *a2, ...)
{
  return _[a1 _dismissCameraPicker];
}

id objc_msgSend__dismissPartyStudioCameraMenuAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissPartyStudioCameraMenuAnimated:");
}

id objc_msgSend__dismissRemoteViewController(void *a1, const char *a2, ...)
{
  return _[a1 _dismissRemoteViewController];
}

id objc_msgSend__dismissVideoViewController(void *a1, const char *a2, ...)
{
  return _[a1 _dismissVideoViewController];
}

id objc_msgSend__dismissVideoViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dismissVideoViewControllerAnimated:completion:");
}

id objc_msgSend__displaySectionMetadataForItemAtIndexPath_tracklist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displaySectionMetadataForItemAtIndexPath:tracklist:");
}

id objc_msgSend__edgeAntialiasingOnSelectedRestrictedToLeftRightEdge(void *a1, const char *a2, ...)
{
  return _[a1 _edgeAntialiasingOnSelectedRestrictedToLeftRightEdge];
}

id objc_msgSend__effectWithStyle_invertAutomaticStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectWithStyle:invertAutomaticStyle:");
}

id objc_msgSend__elapsedTimeForScrubPercentage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_elapsedTimeForScrubPercentage:");
}

id objc_msgSend__enableEdgeAntialiasingOnSelected(void *a1, const char *a2, ...)
{
  return _[a1 _enableEdgeAntialiasingOnSelected];
}

id objc_msgSend__enableScrollWithPlayingItemIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _enableScrollWithPlayingItemIfNeeded];
}

id objc_msgSend__enumerateObservableKeysWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateObservableKeysWithBlock:");
}

id objc_msgSend__executeRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_executeRequest:");
}

id objc_msgSend__favoriteButton(void *a1, const char *a2, ...)
{
  return _[a1 _favoriteButton];
}

id objc_msgSend__favoritingPropertiesForMPModelKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_favoritingPropertiesForMPModelKind:");
}

id objc_msgSend__fetchPhotoAssetsForAlbumArtwork_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchPhotoAssetsForAlbumArtwork:");
}

id objc_msgSend__findAlbumWithPersistentID_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findAlbumWithPersistentID:completionHandler:");
}

id objc_msgSend__findLibraryItemMatchingIdentifiers_itemKind_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findLibraryItemMatchingIdentifiers:itemKind:completionHandler:");
}

id objc_msgSend__finishIfPossible(void *a1, const char *a2, ...)
{
  return _[a1 _finishIfPossible];
}

id objc_msgSend__firstScrollStop(void *a1, const char *a2, ...)
{
  return _[a1 _firstScrollStop];
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flatImageWithColor:");
}

id objc_msgSend__floatingViewControlState(void *a1, const char *a2, ...)
{
  return _[a1 _floatingViewControlState];
}

id objc_msgSend__focusCurrentPlayingItem(void *a1, const char *a2, ...)
{
  return _[a1 _focusCurrentPlayingItem];
}

id objc_msgSend__focusCurrentPlayingItemAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_focusCurrentPlayingItemAnimated:");
}

id objc_msgSend__focusGesturesForFailureRequirements(void *a1, const char *a2, ...)
{
  return _[a1 _focusGesturesForFailureRequirements];
}

id objc_msgSend__focusVelocity(void *a1, const char *a2, ...)
{
  return _[a1 _focusVelocity];
}

id objc_msgSend__focusedInDarkModeTextLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 _focusedInDarkModeTextLabelColor];
}

id objc_msgSend__fontFromStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontFromStyle:");
}

id objc_msgSend__foregroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _foregroundColor];
}

id objc_msgSend__forwardAccessoryTypeForCenterRestState(void *a1, const char *a2, ...)
{
  return _[a1 _forwardAccessoryTypeForCenterRestState];
}

id objc_msgSend__frameForBarAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForBarAtIndex:");
}

id objc_msgSend__frameForHeaderView(void *a1, const char *a2, ...)
{
  return _[a1 _frameForHeaderView];
}

id objc_msgSend__frameForImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForImageView:");
}

id objc_msgSend__frameForPreview(void *a1, const char *a2, ...)
{
  return _[a1 _frameForPreview];
}

id objc_msgSend__frameForTable(void *a1, const char *a2, ...)
{
  return _[a1 _frameForTable];
}

id objc_msgSend__genericObjectFromPlatformDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_genericObjectFromPlatformDictionary:");
}

id objc_msgSend__genreForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_genreForIndexPath:");
}

id objc_msgSend__getActiveAccountDSIDWithCompletionQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getActiveAccountDSIDWithCompletionQueue:completion:");
}

id objc_msgSend__getActualTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getActualTime:");
}

id objc_msgSend__getArtworkURLsForAlbums_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getArtworkURLsForAlbums:completion:");
}

id objc_msgSend__getCompleteAlbumForDisplayAlbum_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getCompleteAlbumForDisplayAlbum:completion:");
}

id objc_msgSend__getDictionaryForGenericObject_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDictionaryForGenericObject:completionHandler:");
}

id objc_msgSend__getGenres(void *a1, const char *a2, ...)
{
  return _[a1 _getGenres];
}

id objc_msgSend__getLibraryInfoForGenericObject_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getLibraryInfoForGenericObject:completionHandler:");
}

id objc_msgSend__getLibraryInfoForStoreDictionary_genericObject_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getLibraryInfoForStoreDictionary:genericObject:completionHandler:");
}

id objc_msgSend__getPlaybackContainerFromOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPlaybackContainerFromOptions:");
}

id objc_msgSend__getPlaybackDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPlaybackDuration:");
}

id objc_msgSend__getPlaybackIntentForLibraryAlbum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPlaybackIntentForLibraryAlbum:");
}

id objc_msgSend__getPlaybackIntentForLibraryPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPlaybackIntentForLibraryPlaylist:");
}

id objc_msgSend__getPlaybackIntentForLibrarySongs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPlaybackIntentForLibrarySongs:");
}

id objc_msgSend__getPlaylistEntryForViewElement_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getPlaylistEntryForViewElement:completion:");
}

id objc_msgSend__getRecommendationDataFromOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getRecommendationDataFromOptions:");
}

id objc_msgSend__getSongForViewElement_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSongForViewElement:completion:");
}

id objc_msgSend__getSongsForAlbum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSongsForAlbum:");
}

id objc_msgSend__getSongsForPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getSongsForPlaylist:");
}

id objc_msgSend__getTargetTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getTargetTime:");
}

id objc_msgSend__getURLForArtworkCatalog_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getURLForArtworkCatalog:completionHandler:");
}

id objc_msgSend__gradientLayer(void *a1, const char *a2, ...)
{
  return _[a1 _gradientLayer];
}

id objc_msgSend__gradientMaskEdgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _gradientMaskEdgeInsets];
}

id objc_msgSend__gradientMaskLengths(void *a1, const char *a2, ...)
{
  return _[a1 _gradientMaskLengths];
}

id objc_msgSend__graphicsQuality(void *a1, const char *a2, ...)
{
  return _[a1 _graphicsQuality];
}

id objc_msgSend__handleActionForViewElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleActionForViewElement:");
}

id objc_msgSend__handleCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleCommand:");
}

id objc_msgSend__handleFocusForFocusedView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFocusForFocusedView:");
}

id objc_msgSend__handleLibraryState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLibraryState:");
}

id objc_msgSend__handleLongPressForViewElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleLongPressForViewElement:");
}

id objc_msgSend__handleMenuResponseWithItem_options_menuData_jsCallbackIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleMenuResponseWithItem:options:menuData:jsCallbackIdentifier:");
}

id objc_msgSend__handlePlayForViewElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePlayForViewElement:");
}

id objc_msgSend__handleResponse_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleResponse:identifier:");
}

id objc_msgSend__hasBundledTTMLLyricsForSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasBundledTTMLLyricsForSong:");
}

id objc_msgSend__hasCloudLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _hasCloudLibrary];
}

id objc_msgSend__hasThumbnail(void *a1, const char *a2, ...)
{
  return _[a1 _hasThumbnail];
}

id objc_msgSend__hasVideoBadge(void *a1, const char *a2, ...)
{
  return _[a1 _hasVideoBadge];
}

id objc_msgSend__hideActivityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _hideActivityIndicator];
}

id objc_msgSend__hideMotion(void *a1, const char *a2, ...)
{
  return _[a1 _hideMotion];
}

id objc_msgSend__hidePlayhead(void *a1, const char *a2, ...)
{
  return _[a1 _hidePlayhead];
}

id objc_msgSend__hideSongInfoViewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSongInfoViewAnimated:");
}

id objc_msgSend__hideSongInfoViewAnimated_slideOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSongInfoViewAnimated:slideOut:");
}

id objc_msgSend__idForMAPIOrStoreItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_idForMAPIOrStoreItem:");
}

id objc_msgSend__identifierForMPModelObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForMPModelObject:");
}

id objc_msgSend__identifierForSongDict_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierForSongDict:");
}

id objc_msgSend__identifierSetForMusicKitType_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_identifierSetForMusicKitType:identifier:");
}

id objc_msgSend__idleNowPlayingShouldAppear(void *a1, const char *a2, ...)
{
  return _[a1 _idleNowPlayingShouldAppear];
}

id objc_msgSend__idleViewControllerTargetCoverFrame(void *a1, const char *a2, ...)
{
  return _[a1 _idleViewControllerTargetCoverFrame];
}

id objc_msgSend__imageNamed_withHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageNamed:withHeight:");
}

id objc_msgSend__imageViewFrameWithBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageViewFrameWithBounds:");
}

id objc_msgSend__imageViewWidth(void *a1, const char *a2, ...)
{
  return _[a1 _imageViewWidth];
}

id objc_msgSend__indexForPlayingItem(void *a1, const char *a2, ...)
{
  return _[a1 _indexForPlayingItem];
}

id objc_msgSend__indexOfFavoriteButton(void *a1, const char *a2, ...)
{
  return _[a1 _indexOfFavoriteButton];
}

id objc_msgSend__indexOfLibraryButton(void *a1, const char *a2, ...)
{
  return _[a1 _indexOfLibraryButton];
}

id objc_msgSend__indexPathForPlayingItem(void *a1, const char *a2, ...)
{
  return _[a1 _indexPathForPlayingItem];
}

id objc_msgSend__initializeApp(void *a1, const char *a2, ...)
{
  return _[a1 _initializeApp];
}

id objc_msgSend__initializeLibrary(void *a1, const char *a2, ...)
{
  return _[a1 _initializeLibrary];
}

id objc_msgSend__insertFavoriteButtonForVideoIsFavorited_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertFavoriteButtonForVideoIsFavorited:");
}

id objc_msgSend__insertLibraryButtonForVideoInLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertLibraryButtonForVideoInLibrary:");
}

id objc_msgSend__installMotionEffects(void *a1, const char *a2, ...)
{
  return _[a1 _installMotionEffects];
}

id objc_msgSend__invalidateResultsWithResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_invalidateResultsWithResponse:");
}

id objc_msgSend__isAlbumInLibrary_storeSongArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAlbumInLibrary:storeSongArray:");
}

id objc_msgSend__isAudioOnDemand(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioOnDemand];
}

id objc_msgSend__isAutoUpdatingPreviewViewController(void *a1, const char *a2, ...)
{
  return _[a1 _isAutoUpdatingPreviewViewController];
}

id objc_msgSend__isBackdropViewVisible(void *a1, const char *a2, ...)
{
  return _[a1 _isBackdropViewVisible];
}

id objc_msgSend__isCellFocused(void *a1, const char *a2, ...)
{
  return _[a1 _isCellFocused];
}

id objc_msgSend__isDescendentOfViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDescendentOfViewController:");
}

id objc_msgSend__isFocusedInDarkMode(void *a1, const char *a2, ...)
{
  return _[a1 _isFocusedInDarkMode];
}

id objc_msgSend__isFullWidthRTL(void *a1, const char *a2, ...)
{
  return _[a1 _isFullWidthRTL];
}

id objc_msgSend__isItemInLibraryWithIdentifiers_itemKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isItemInLibraryWithIdentifiers:itemKind:");
}

id objc_msgSend__isMAPISongExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isMAPISongExplicit:");
}

id objc_msgSend__isNothingPlaying(void *a1, const char *a2, ...)
{
  return _[a1 _isNothingPlaying];
}

id objc_msgSend__isPlayingOnLocalDevice(void *a1, const char *a2, ...)
{
  return _[a1 _isPlayingOnLocalDevice];
}

id objc_msgSend__isPlaylist_visuallySameAsPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isPlaylist:visuallySameAsPlaylist:");
}

id objc_msgSend__isQueueEndActionAvailable_forTracklist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isQueueEndActionAvailable:forTracklist:");
}

id objc_msgSend__isRemotePlaybackAuthorized(void *a1, const char *a2, ...)
{
  return _[a1 _isRemotePlaybackAuthorized];
}

id objc_msgSend__isRightToLeft(void *a1, const char *a2, ...)
{
  return _[a1 _isRightToLeft];
}

id objc_msgSend__isScrubbingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 _isScrubbingAllowed];
}

id objc_msgSend__isSingleCoverFocusable(void *a1, const char *a2, ...)
{
  return _[a1 _isSingleCoverFocusable];
}

id objc_msgSend__isSingleCoverFocusableState_viewStyle_hasLyrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isSingleCoverFocusableState:viewStyle:hasLyrics:");
}

id objc_msgSend__isStoreSongExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStoreSongExplicit:");
}

id objc_msgSend__isStreamingRadioPlayback(void *a1, const char *a2, ...)
{
  return _[a1 _isStreamingRadioPlayback];
}

id objc_msgSend__isStringEqual_rhsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isStringEqual:rhsString:");
}

id objc_msgSend__isSynthetic(void *a1, const char *a2, ...)
{
  return _[a1 _isSynthetic];
}

id objc_msgSend__isTVEpisodeWatched_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isTVEpisodeWatched:");
}

id objc_msgSend__isTopRowView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isTopRowView:");
}

id objc_msgSend__isUnknownItemType(void *a1, const char *a2, ...)
{
  return _[a1 _isUnknownItemType];
}

id objc_msgSend__isUserSubscribed(void *a1, const char *a2, ...)
{
  return _[a1 _isUserSubscribed];
}

id objc_msgSend__isVideoItemType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isVideoItemType:");
}

id objc_msgSend__isVideoPresented(void *a1, const char *a2, ...)
{
  return _[a1 _isVideoPresented];
}

id objc_msgSend__itemIdentifierForPlayingItem(void *a1, const char *a2, ...)
{
  return _[a1 _itemIdentifierForPlayingItem];
}

id objc_msgSend__itemSizeForMediaItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemSizeForMediaItem:");
}

id objc_msgSend__jsCallbackWithIdentifier_args_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_jsCallbackWithIdentifier:args:");
}

id objc_msgSend__kindForGenericObjectType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_kindForGenericObjectType:");
}

id objc_msgSend__layeredImageContainer(void *a1, const char *a2, ...)
{
  return _[a1 _layeredImageContainer];
}

id objc_msgSend__layoutIsRTL(void *a1, const char *a2, ...)
{
  return _[a1 _layoutIsRTL];
}

id objc_msgSend__layoutLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_layoutLabel:");
}

id objc_msgSend__layoutLyricsViews(void *a1, const char *a2, ...)
{
  return _[a1 _layoutLyricsViews];
}

id objc_msgSend__layoutMusicBarsView(void *a1, const char *a2, ...)
{
  return _[a1 _layoutMusicBarsView];
}

id objc_msgSend__layoutSpecialBadgeIndicator(void *a1, const char *a2, ...)
{
  return _[a1 _layoutSpecialBadgeIndicator];
}

id objc_msgSend__libraryAddRemoveQueue(void *a1, const char *a2, ...)
{
  return _[a1 _libraryAddRemoveQueue];
}

id objc_msgSend__libraryButton(void *a1, const char *a2, ...)
{
  return _[a1 _libraryButton];
}

id objc_msgSend__lightModeListTitleTextColor(void *a1, const char *a2, ...)
{
  return _[a1 _lightModeListTitleTextColor];
}

id objc_msgSend__loadAndDisplayStoreLyrics(void *a1, const char *a2, ...)
{
  return _[a1 _loadAndDisplayStoreLyrics];
}

id objc_msgSend__loadArtworkForMPObject_scaleToSize_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadArtworkForMPObject:scaleToSize:completionHandler:");
}

id objc_msgSend__loadImage(void *a1, const char *a2, ...)
{
  return _[a1 _loadImage];
}

id objc_msgSend__loadSongPopularityForAlbum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadSongPopularityForAlbum:");
}

id objc_msgSend__loadUpdateProgressWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadUpdateProgressWithCompletionHandler:");
}

id objc_msgSend__luminance(void *a1, const char *a2, ...)
{
  return _[a1 _luminance];
}

id objc_msgSend__lyricsFontSize(void *a1, const char *a2, ...)
{
  return _[a1 _lyricsFontSize];
}

id objc_msgSend__makeHighContrastLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_makeHighContrastLabel:");
}

id objc_msgSend__makePartyStudioIdleTimerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 _makePartyStudioIdleTimerAssertion];
}

id objc_msgSend__manageSubscriptionsURL(void *a1, const char *a2, ...)
{
  return _[a1 _manageSubscriptionsURL];
}

id objc_msgSend__mediaAPIDictionaryForAllowedTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediaAPIDictionaryForAllowedTypes:");
}

id objc_msgSend__mediaItemAtCenterOfPlaylistCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 _mediaItemAtCenterOfPlaylistCollectionView];
}

id objc_msgSend__mediaItemForMPCPlayerResponseItem_section_atIndexPath_tracklist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mediaItemForMPCPlayerResponseItem:section:atIndexPath:tracklist:");
}

id objc_msgSend__menuDataWithTitle_addItemsBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuDataWithTitle:addItemsBlock:");
}

id objc_msgSend__menuItemForAddAlbumToLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddAlbumToLibrary:");
}

id objc_msgSend__menuItemForAddMPObject_isExplicit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddMPObject:isExplicit:");
}

id objc_msgSend__menuItemForAddOrRemoveAlbum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddOrRemoveAlbum:");
}

id objc_msgSend__menuItemForAddOrRemoveSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddOrRemoveSong:");
}

id objc_msgSend__menuItemForAddOrRemoveTVorMovie_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddOrRemoveTVorMovie:");
}

id objc_msgSend__menuItemForAddToPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddToPlaylist:");
}

id objc_msgSend__menuItemForAddToQueue_actionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForAddToQueue:actionBlock:");
}

id objc_msgSend__menuItemForCatalogPlaylistSubscribe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForCatalogPlaylistSubscribe:");
}

id objc_msgSend__menuItemForCatalogPlaylistUnsubscribe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForCatalogPlaylistUnsubscribe:");
}

id objc_msgSend__menuItemForCatalogShuffle(void *a1, const char *a2, ...)
{
  return _[a1 _menuItemForCatalogShuffle];
}

id objc_msgSend__menuItemForCreateStationFromAlbum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForCreateStationFromAlbum:");
}

id objc_msgSend__menuItemForCreateStationFromArtist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForCreateStationFromArtist:");
}

id objc_msgSend__menuItemForCreateStationFromSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForCreateStationFromSong:");
}

id objc_msgSend__menuItemForFavoriteMPObject_isInLibrary_currentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForFavoriteMPObject:isInLibrary:currentState:");
}

id objc_msgSend__menuItemForGoToAlbumWithSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForGoToAlbumWithSong:");
}

id objc_msgSend__menuItemForGoToArtist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForGoToArtist:");
}

id objc_msgSend__menuItemForGoToMovieWithStoreID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForGoToMovieWithStoreID:");
}

id objc_msgSend__menuItemForGoToTVShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForGoToTVShow:");
}

id objc_msgSend__menuItemForGoToTVShowWithEpisodeStoreID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForGoToTVShowWithEpisodeStoreID:");
}

id objc_msgSend__menuItemForHateMPObject_isInLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForHateMPObject:isInLibrary:");
}

id objc_msgSend__menuItemForLibraryGoToArtist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForLibraryGoToArtist:");
}

id objc_msgSend__menuItemForLibraryPlayback_itemType_persistentID_playbackAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForLibraryPlayback:itemType:persistentID:playbackAction:");
}

id objc_msgSend__menuItemForLibraryRemoveSong_fromPlaylist_atPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForLibraryRemoveSong:fromPlaylist:atPosition:");
}

id objc_msgSend__menuItemForLoveMPObject_isInLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForLoveMPObject:isInLibrary:");
}

id objc_msgSend__menuItemForNoAccessWithSubject_title_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForNoAccessWithSubject:title:identifier:");
}

id objc_msgSend__menuItemForPlayLast_actionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForPlayLast:actionBlock:");
}

id objc_msgSend__menuItemForPlayNext_actionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForPlayNext:actionBlock:");
}

id objc_msgSend__menuItemForPlaySong_inContainer_playbackAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForPlaySong:inContainer:playbackAction:");
}

id objc_msgSend__menuItemForRemoveAlbumFromLibrary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForRemoveAlbumFromLibrary:");
}

id objc_msgSend__menuItemForRemoveMPObject_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForRemoveMPObject:title:");
}

id objc_msgSend__menuItemForRemoveMPObjectFromLibrary_title_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForRemoveMPObjectFromLibrary:title:");
}

id objc_msgSend__menuItemForRenamePlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForRenamePlaylist:");
}

id objc_msgSend__menuItemForRenamePlaylistFolder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForRenamePlaylistFolder:");
}

id objc_msgSend__menuItemForRowIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForRowIndex:");
}

id objc_msgSend__menuItemForSongLyrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForSongLyrics:");
}

id objc_msgSend__menuItemForSuggestLessMPObject_isInLibrary_currentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForSuggestLessMPObject:isInLibrary:currentState:");
}

id objc_msgSend__menuItemForTasteType_tasteTitleKey_neutralTitleKey_mpObject_isInLibrary_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemForTasteType:tasteTitleKey:neutralTitleKey:mpObject:isInLibrary:");
}

id objc_msgSend__menuItemGoToPlaylist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemGoToPlaylist:");
}

id objc_msgSend__menuItemGoToPlaylistWithSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuItemGoToPlaylistWithSong:");
}

id objc_msgSend__menuItems(void *a1, const char *a2, ...)
{
  return _[a1 _menuItems];
}

id objc_msgSend__menuTitleForMPSong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuTitleForMPSong:");
}

id objc_msgSend__menuTitleForPlaybackAction_mpObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_menuTitleForPlaybackAction:mpObject:");
}

id objc_msgSend__messageViewFrameWithBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_messageViewFrameWithBounds:");
}

id objc_msgSend__modelAlbumForAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modelAlbumForAdamID:");
}

id objc_msgSend__modelKindForItemTypeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modelKindForItemTypeString:");
}

id objc_msgSend__modelPlaylistForGlobalID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modelPlaylistForGlobalID:");
}

id objc_msgSend__modelSongForAdamID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_modelSongForAdamID:");
}

id objc_msgSend__motionArtworkForItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_motionArtworkForItemIdentifier:");
}

id objc_msgSend__motionURLFromElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_motionURLFromElement:");
}

id objc_msgSend__mpGenericObjectFromMPAVItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mpGenericObjectFromMPAVItem:");
}

id objc_msgSend__mpcQueueEndActionFromQueueEndAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mpcQueueEndActionFromQueueEndAction:");
}

id objc_msgSend__musicVideoAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_musicVideoAtIndexPath:");
}

id objc_msgSend__musicVideosLibraryRequest(void *a1, const char *a2, ...)
{
  return _[a1 _musicVideosLibraryRequest];
}

id objc_msgSend__nameForMenuItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nameForMenuItem:");
}

id objc_msgSend__nameOfObjectToAdd(void *a1, const char *a2, ...)
{
  return _[a1 _nameOfObjectToAdd];
}

id objc_msgSend__needsSubscription(void *a1, const char *a2, ...)
{
  return _[a1 _needsSubscription];
}

id objc_msgSend__needsSubscriptionForPlayItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_needsSubscriptionForPlayItem:");
}

id objc_msgSend__nextStateByAnimatingLinearly(void *a1, const char *a2, ...)
{
  return _[a1 _nextStateByAnimatingLinearly];
}

id objc_msgSend__nextStateByDragging(void *a1, const char *a2, ...)
{
  return _[a1 _nextStateByDragging];
}

id objc_msgSend__nextStateByUpdatingWithAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextStateByUpdatingWithAnimation:");
}

id objc_msgSend__noMusicView(void *a1, const char *a2, ...)
{
  return _[a1 _noMusicView];
}

id objc_msgSend__nowPlayingInfoFromMediaItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nowPlayingInfoFromMediaItem:");
}

id objc_msgSend__numberOfTimesShownForAlertType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_numberOfTimesShownForAlertType:");
}

id objc_msgSend__observeMediaPlayerCommandCompletionWithIdentifier_playbackType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_observeMediaPlayerCommandCompletionWithIdentifier:playbackType:");
}

id objc_msgSend__openJavascriptWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openJavascriptWithURL:");
}

id objc_msgSend__openMusicSubscriptionsApp(void *a1, const char *a2, ...)
{
  return _[a1 _openMusicSubscriptionsApp];
}

id objc_msgSend__ordinalWidth(void *a1, const char *a2, ...)
{
  return _[a1 _ordinalWidth];
}

id objc_msgSend__performAfterNotification_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAfterNotification:block:");
}

id objc_msgSend__performAfterPageLoaded_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAfterPageLoaded:block:");
}

id objc_msgSend__performBlockWithFocusedCellIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performBlockWithFocusedCellIndexPath:");
}

id objc_msgSend__performPlayNextCommandForItemAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPlayNextCommandForItemAtIndex:");
}

id objc_msgSend__performPlayerCommandRequest_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPlayerCommandRequest:name:");
}

id objc_msgSend__performRequest(void *a1, const char *a2, ...)
{
  return _[a1 _performRequest];
}

id objc_msgSend__performRequestForItemDataWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performRequestForItemDataWithCompletion:");
}

id objc_msgSend__performRequestWithSortDescriptors_filter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performRequestWithSortDescriptors:filter:");
}

id objc_msgSend__performWhenVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWhenVisible:");
}

id objc_msgSend__performWithAppInForeground_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithAppInForeground:");
}

id objc_msgSend__placeholderBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 _placeholderBackgroundColor];
}

id objc_msgSend__placeholderColor(void *a1, const char *a2, ...)
{
  return _[a1 _placeholderColor];
}

id objc_msgSend__placeholderImage(void *a1, const char *a2, ...)
{
  return _[a1 _placeholderImage];
}

id objc_msgSend__placeholderImageForObjectType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderImageForObjectType:");
}

id objc_msgSend__placeholderImageForResourceName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderImageForResourceName:");
}

id objc_msgSend__playFromItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playFromItemAtIndexPath:");
}

id objc_msgSend__playLibraryItemWithRequest_identifiers_playbackType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playLibraryItemWithRequest:identifiers:playbackType:");
}

id objc_msgSend__playMediaItemAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playMediaItemAtIndex:");
}

id objc_msgSend__playMusicVideo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playMusicVideo:");
}

id objc_msgSend__playRequestWithItemType_requestBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playRequestWithItemType:requestBlock:");
}

id objc_msgSend__playShuffled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playShuffled:");
}

id objc_msgSend__playSongAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playSongAtIndexPath:");
}

id objc_msgSend__playSongsWithRequest_playbackAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playSongsWithRequest:playbackAction:");
}

id objc_msgSend__playSongsWithRequest_startIdentifiers_shuffle_initialPlaybackType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playSongsWithRequest:startIdentifiers:shuffle:initialPlaybackType:");
}

id objc_msgSend__playUsingAirPlayWithPlaybackIntent_initialPlaybackType_playbackAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playUsingAirPlayWithPlaybackIntent:initialPlaybackType:playbackAction:");
}

id objc_msgSend__playVideoItemWithRequest_item_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playVideoItemWithRequest:item:");
}

id objc_msgSend__playWithPlaybackIntent_initialPlaybackType_playbackAction_checkSubscriptionStatus_( void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playWithPlaybackIntent:initialPlaybackType:playbackAction:checkSubscriptionStatus:");
}

id objc_msgSend__playbackIntentForArtistID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackIntentForArtistID:");
}

id objc_msgSend__playbackIntentForAudioURL(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForAudioURL];
}

id objc_msgSend__playbackIntentForMAPIAlbumOrPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForMAPIAlbumOrPlaylist];
}

id objc_msgSend__playbackIntentForMAPIMovieOrTV(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForMAPIMovieOrTV];
}

id objc_msgSend__playbackIntentForMAPISongs(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForMAPISongs];
}

id objc_msgSend__playbackIntentForMAPITypes_startPlayItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackIntentForMAPITypes:startPlayItem:");
}

id objc_msgSend__playbackIntentForMAPIUploadedVideo(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForMAPIUploadedVideo];
}

id objc_msgSend__playbackIntentForMediaClip_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackIntentForMediaClip:");
}

id objc_msgSend__playbackIntentForMovieClip(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForMovieClip];
}

id objc_msgSend__playbackIntentForStoreAlbumOrPlaylist(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForStoreAlbumOrPlaylist];
}

id objc_msgSend__playbackIntentForStoreMovieOrTV(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForStoreMovieOrTV];
}

id objc_msgSend__playbackIntentForStoreSongs(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForStoreSongs];
}

id objc_msgSend__playbackIntentForStoreTypes_startPlayItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackIntentForStoreTypes:startPlayItem:");
}

id objc_msgSend__playbackIntentForStoreVideoContent(void *a1, const char *a2, ...)
{
  return _[a1 _playbackIntentForStoreVideoContent];
}

id objc_msgSend__playbackIntentWithRequest_startItemIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackIntentWithRequest:startItemIdentifiers:");
}

id objc_msgSend__playbackIntentWithStoreIDs_startItemIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playbackIntentWithStoreIDs:startItemIdentifiers:");
}

id objc_msgSend__playbackViewController(void *a1, const char *a2, ...)
{
  return _[a1 _playbackViewController];
}

id objc_msgSend__playlistCollectionView(void *a1, const char *a2, ...)
{
  return _[a1 _playlistCollectionView];
}

id objc_msgSend__playlistImageWithImages_size_upscaleAdjustment_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playlistImageWithImages:size:upscaleAdjustment:cornerRadius:");
}

id objc_msgSend__preferredAccessoryTypeForCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 _preferredAccessoryTypeForCurrentState];
}

id objc_msgSend__preferredConfigurationForFocusAnimation_inContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredConfigurationForFocusAnimation:inContext:");
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__prefetchFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prefetchFromIndex:");
}

id objc_msgSend__prepareCallback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareCallback:");
}

id objc_msgSend__prepareElementForReuse(void *a1, const char *a2, ...)
{
  return _[a1 _prepareElementForReuse];
}

id objc_msgSend__presentAddToPlaylistBehaviorDialogFromViewController_forSingleTrackAddition_withCompletionHandler_( void *a1, const char *a2, ...)
{
  return _objc_msgSend( a1,  "_presentAddToPlaylistBehaviorDialogFromViewController:forSingleTrackAddition:withCompletionHandler:");
}

id objc_msgSend__presentExplicitRestrictAlertIfNeededOfType_isExplicit_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentExplicitRestrictAlertIfNeededOfType:isExplicit:completion:");
}

id objc_msgSend__presentExplicitRestrictionAlertOfType_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentExplicitRestrictionAlertOfType:completionBlock:");
}

id objc_msgSend__presentVideoViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentVideoViewControllerAnimated:completion:");
}

id objc_msgSend__presentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentViewController:");
}

id objc_msgSend__presentedTime(void *a1, const char *a2, ...)
{
  return _[a1 _presentedTime];
}

id objc_msgSend__previewViewControllerForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_previewViewControllerForIndexPath:");
}

id objc_msgSend__processOptions_forRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processOptions:forRequest:");
}

id objc_msgSend__processResponse_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processResponse:error:");
}

id objc_msgSend__propertiesForGenericObjectType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_propertiesForGenericObjectType:");
}

id objc_msgSend__propertyGenericRelationships(void *a1, const char *a2, ...)
{
  return _[a1 _propertyGenericRelationships];
}

id objc_msgSend__qualityNameForTier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_qualityNameForTier:");
}

id objc_msgSend__ratingValueFromMAPIDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ratingValueFromMAPIDictionary:");
}

id objc_msgSend__ratingValueFromStoreDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_ratingValueFromStoreDictionary:");
}

id objc_msgSend__reconfigureVisibleCells(void *a1, const char *a2, ...)
{
  return _[a1 _reconfigureVisibleCells];
}

id objc_msgSend__registerForBackdropViewHideStateUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _registerForBackdropViewHideStateUpdates];
}

id objc_msgSend__registerForSystemTraitsChangesAffectingColorAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _registerForSystemTraitsChangesAffectingColorAppearance];
}

id objc_msgSend__registerForTraitChanges(void *a1, const char *a2, ...)
{
  return _[a1 _registerForTraitChanges];
}

id objc_msgSend__registerScreenSaverService(void *a1, const char *a2, ...)
{
  return _[a1 _registerScreenSaverService];
}

id objc_msgSend__registerStateMachineHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _registerStateMachineHandlers];
}